

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Nov 12 20:52:27 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK12,global,class=BANK12,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK13,global,class=BANK13,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	text0,global,reloc=2,class=CODE,delta=1
    29                           	psect	text1,global,reloc=2,class=CODE,delta=1
    30                           	psect	text2,global,reloc=2,class=CODE,delta=1
    31                           	psect	text3,global,reloc=2,class=CODE,delta=1
    32                           	psect	text4,global,reloc=2,class=CODE,delta=1
    33                           	psect	text5,global,reloc=2,class=CODE,delta=1
    34                           	psect	text6,global,reloc=2,class=CODE,delta=1
    35                           	psect	text7,global,reloc=2,class=CODE,delta=1
    36                           	psect	text8,global,reloc=2,class=CODE,delta=1
    37                           	psect	text9,global,reloc=2,class=CODE,delta=1
    38                           	psect	text10,global,reloc=2,class=CODE,delta=1
    39                           	psect	text11,global,reloc=2,class=CODE,delta=1
    40                           	psect	text12,global,reloc=2,class=CODE,delta=1
    41                           	psect	text13,global,reloc=2,class=CODE,delta=1
    42                           	psect	text14,global,reloc=2,class=CODE,delta=1
    43                           	psect	text15,global,reloc=2,class=CODE,delta=1
    44                           	psect	text16,global,reloc=2,class=CODE,delta=1
    45                           	psect	text17,global,reloc=2,class=CODE,delta=1
    46                           	psect	text18,global,reloc=2,class=CODE,delta=1
    47                           	psect	text19,global,reloc=2,class=CODE,delta=1
    48                           	psect	text20,global,reloc=2,class=CODE,delta=1
    49                           	psect	text21,global,reloc=2,class=CODE,delta=1
    50                           	psect	text22,global,reloc=2,class=CODE,delta=1
    51                           	psect	text23,global,reloc=2,class=CODE,delta=1
    52                           	psect	text24,global,reloc=2,class=CODE,delta=1
    53                           	psect	text25,global,reloc=2,class=CODE,delta=1
    54                           	psect	text26,global,reloc=2,class=CODE,delta=1
    55                           	psect	text27,global,reloc=2,class=CODE,delta=1
    56                           	psect	text28,global,reloc=2,class=CODE,delta=1
    57                           	psect	text29,global,reloc=2,class=CODE,delta=1
    58                           	psect	text30,global,reloc=2,class=CODE,delta=1
    59                           	psect	text31,global,reloc=2,class=CODE,delta=1
    60                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text33,global,reloc=2,class=CODE,delta=1
    62                           	psect	text34,global,reloc=2,class=CODE,delta=1
    63                           	psect	text35,global,reloc=2,class=CODE,delta=1
    64                           	psect	text36,global,reloc=2,class=CODE,delta=1
    65                           	psect	text37,global,reloc=2,class=CODE,delta=1
    66                           	psect	text38,global,reloc=2,class=CODE,delta=1
    67                           	psect	text39,global,reloc=2,class=CODE,delta=1
    68                           	psect	text40,global,reloc=2,class=CODE,delta=1
    69                           	psect	text41,global,reloc=2,class=CODE,delta=1
    70                           	psect	text42,global,reloc=2,class=CODE,delta=1
    71                           	psect	text43,global,reloc=2,class=CODE,delta=1
    72                           	psect	text44,global,reloc=2,class=CODE,delta=1
    73                           	psect	text45,global,reloc=2,class=CODE,delta=1
    74                           	psect	text46,global,reloc=2,class=CODE,delta=1
    75                           	psect	text47,global,reloc=2,class=CODE,delta=1
    76                           	psect	text48,global,reloc=2,class=CODE,delta=1
    77                           	psect	text49,global,reloc=2,class=CODE,delta=1
    78                           	psect	text50,global,reloc=2,class=CODE,delta=1
    79                           	psect	text51,global,reloc=2,class=CODE,delta=1
    80                           	psect	text52,global,reloc=2,class=CODE,delta=1
    81                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text54,global,reloc=2,class=CODE,delta=1
    83                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text60,global,reloc=2,class=CODE,delta=1
    89                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text62,global,reloc=2,class=CODE,delta=1
    91                           	psect	text63,global,reloc=2,class=CODE,delta=1
    92                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text66,global,reloc=2,class=CODE,delta=1
    95                           	psect	text67,global,reloc=2,class=CODE,delta=1
    96                           	psect	text68,global,reloc=2,class=CODE,delta=1
    97                           	psect	text69,global,reloc=2,class=CODE,delta=1
    98                           	psect	text70,global,reloc=2,class=CODE,delta=1
    99                           	psect	text71,global,reloc=2,class=CODE,delta=1
   100                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text74,global,reloc=2,class=CODE,delta=1
   103                           	psect	text75,global,reloc=2,class=CODE,delta=1
   104                           	psect	text76,global,reloc=2,class=CODE,delta=1
   105                           	psect	text77,global,reloc=2,class=CODE,delta=1
   106                           	psect	text78,global,reloc=2,class=CODE,delta=1
   107                           	psect	text79,global,reloc=2,class=CODE,delta=1
   108                           	psect	text80,global,reloc=2,class=CODE,delta=1
   109                           	psect	text81,global,reloc=2,class=CODE,delta=1
   110                           	psect	text82,global,reloc=2,class=CODE,delta=1
   111                           	psect	text83,global,reloc=2,class=CODE,delta=1
   112                           	psect	text84,global,reloc=2,class=CODE,delta=1
   113                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text86,global,reloc=2,class=CODE,delta=1
   115                           	psect	text87,global,reloc=2,class=CODE,delta=1
   116                           	psect	text88,global,reloc=2,class=CODE,delta=1
   117                           	psect	text89,global,reloc=2,class=CODE,delta=1
   118                           	psect	text90,global,reloc=2,class=CODE,delta=1
   119                           	psect	text91,global,reloc=2,class=CODE,delta=1
   120                           	psect	text92,global,reloc=2,class=CODE,delta=1
   121                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text102,global,reloc=2,class=CODE,delta=1
   131                           	psect	text103,global,reloc=2,class=CODE,delta=1
   132                           	psect	text104,global,reloc=2,class=CODE,delta=1
   133                           	psect	text105,global,reloc=2,class=CODE,delta=1
   134                           	psect	text106,global,reloc=2,class=CODE,delta=1
   135                           	psect	text107,global,reloc=2,class=CODE,delta=1
   136                           	psect	text108,global,reloc=2,class=CODE,delta=1
   137                           	psect	text109,global,reloc=2,class=CODE,delta=1
   138                           	psect	text110,global,reloc=2,class=CODE,delta=1
   139                           	psect	text111,global,reloc=2,class=CODE,delta=1
   140                           	psect	text112,global,reloc=2,class=CODE,delta=1
   141                           	psect	text113,global,reloc=2,class=CODE,delta=1
   142                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text115,global,reloc=2,class=CODE,delta=1
   144                           	psect	text116,global,reloc=2,class=CODE,delta=1
   145                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text118,global,reloc=2,class=CODE,delta=1
   147                           	psect	text119,global,reloc=2,class=CODE,delta=1
   148                           	psect	text120,global,reloc=2,class=CODE,delta=1
   149                           	psect	text121,global,reloc=2,class=CODE,delta=1
   150                           	psect	text122,global,reloc=2,class=CODE,delta=1
   151                           	psect	text123,global,reloc=2,class=CODE,delta=1
   152                           	psect	text124,global,reloc=2,class=CODE,delta=1
   153                           	psect	text125,global,reloc=2,class=CODE,delta=1
   154                           	psect	text126,global,reloc=2,class=CODE,delta=1
   155                           	psect	text127,global,reloc=2,class=CODE,delta=1
   156                           	psect	text128,global,reloc=2,class=CODE,delta=1
   157                           	psect	text129,global,reloc=2,class=CODE,delta=1
   158                           	psect	text130,global,reloc=2,class=CODE,delta=1
   159                           	psect	text131,global,reloc=2,class=CODE,delta=1
   160                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   161                           	psect	text133,global,reloc=2,class=CODE,delta=1
   162                           	psect	text134,global,reloc=2,class=CODE,delta=1
   163                           	psect	text135,global,reloc=2,class=CODE,delta=1
   164                           	psect	text136,global,reloc=2,class=CODE,delta=1
   165                           	psect	text137,global,reloc=2,class=CODE,delta=1
   166                           	psect	text138,global,reloc=2,class=CODE,delta=1
   167                           	psect	text139,global,reloc=2,class=CODE,delta=1
   168                           	psect	text140,global,reloc=2,class=CODE,delta=1
   169                           	psect	text141,global,reloc=2,class=CODE,delta=1
   170                           	psect	text142,global,reloc=2,class=CODE,delta=1
   171                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   172                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   173                           	psect	text144,global,reloc=2,class=CODE,delta=1
   174                           	psect	text145,global,reloc=2,class=CODE,delta=1
   175                           	psect	text146,global,reloc=2,class=CODE,delta=1
   176                           	psect	text147,global,reloc=2,class=CODE,delta=1
   177                           	psect	text148,global,reloc=2,class=CODE,delta=1
   178                           	psect	text149,global,reloc=2,class=CODE,delta=1
   179                           	psect	text150,global,reloc=2,class=CODE,delta=1
   180                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   181                           	psect	text151,global,reloc=2,class=CODE,delta=1
   182                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   183                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   184                           	dabs	1,0x400,48,_BDT
   185                           	dabs	1,0x438,8,_CtrlTrfData
   186                           	dabs	1,0x430,8,_SetupPkt
   187  0000                     
   188                           ; Version 1.45
   189                           ; Generated 16/11/2017 GMT
   190                           ; 
   191                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   192                           ; All rights reserved.
   193                           ; 
   194                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   195                           ; 
   196                           ; Redistribution and use in source and binary forms, with or without modification, are
   197                           ; permitted provided that the following conditions are met:
   198                           ; 
   199                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   200                           ;        conditions and the following disclaimer.
   201                           ; 
   202                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   203                           ;        of conditions and the following disclaimer in the documentation and/or other
   204                           ;        materials provided with the distribution.
   205                           ; 
   206                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   207                           ;        software without specific prior written permission.
   208                           ; 
   209                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   210                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   211                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   212                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   213                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   214                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   215                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   216                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   217                           ; 
   218                           ; 
   219                           ; Code-generator required, PIC18F46J50 Definitions
   220                           ; 
   221                           ; SFR Addresses
   222  0000                     
   223                           	psect	idataBANK1
   224  00A5AC                     __pidataBANK1:
   225                           	opt stack 0
   226                           
   227                           ;initializer for Led_MainTask@LedTimer2
   228  00A5AC  01                 	db	1
   229  00A5AD  01                 	db	1
   230  00A5AE  0000               	dw	0
   231  00A5B0  0000               	dw	0
   232  00A5B2  0000               	dw	0
   233  00A5B4  0000               	dw	0
   234                           
   235                           ;initializer for _Led2
   236  00A5B6  00                 	db	0
   237  00A5B7  00                 	db	0
   238  00A5B8  0000               	dw	0
   239  00A5BA  0014               	dw	20
   240  00A5BC  0014               	dw	20
   241                           
   242                           ;initializer for _Led1
   243  00A5BE  00                 	db	0
   244  00A5BF  00                 	db	0
   245  00A5C0  0000               	dw	0
   246  00A5C2  0001               	dw	1
   247  00A5C4  0013               	dw	19
   248                           
   249                           ;initializer for Terminal@EchoOption
   250  00A5C6  01                 	db	1
   251                           
   252                           ;initializer for _MainSystemTimebaseFlag
   253  00A5C7  01                 	db	1
   254                           
   255                           ;initializer for Term_MainSm@TermDelay
   256  00A5C8  01                 	db	1
   257  00A5C9  01                 	db	1
   258  00A5CA  0000               	dw	0
   259  00A5CC  0000               	dw	0
   260  00A5CE  0000               	dw	0
   261  00A5D0  0000               	dw	0
   262                           
   263                           ;initializer for Led_MainTask@LedTimer1
   264  00A5D2  01                 	db	1
   265  00A5D3  01                 	db	1
   266  00A5D4  0000               	dw	0
   267  00A5D6  0000               	dw	0
   268  00A5D8  0000               	dw	0
   269  00A5DA  0000               	dw	0
   270                           
   271                           ;initializer for SendDataSm@SwTimer
   272  00A5DC  01                 	db	1
   273  00A5DD  01                 	db	1
   274  00A5DE  0000               	dw	0
   275  00A5E0  0000               	dw	0
   276  00A5E2  0000               	dw	0
   277  00A5E4  0000               	dw	0
   278                           
   279                           	psect	idataBANK2
   280  00A88E                     __pidataBANK2:
   281                           	opt stack 0
   282                           
   283                           ;initializer for _TaskTable
   284  00A88E  94                 	db	low _MdmWifi_DrvMainFn
   285  00A88F  9E                 	db	high _MdmWifi_DrvMainFn
   286  00A890  00                 	db	0
   287  00A891  0000               	dw	0
   288  00A893  000A               	dw	10
   289  00A895  00                 	db	0
   290  00A896  B2                 	db	low _I2cSlv_MainTask
   291  00A897  AA                 	db	high _I2cSlv_MainTask
   292  00A898  00                 	db	0
   293  00A899  0000               	dw	0
   294  00A89B  0005               	dw	5
   295  00A89D  00                 	db	0
   296  00A89E  5E                 	db	low _MdmWifi_MainTask
   297  00A89F  A4                 	db	high _MdmWifi_MainTask
   298  00A8A0  00                 	db	0
   299  00A8A1  0000               	dw	0
   300  00A8A3  0001               	dw	1
   301  00A8A5  00                 	db	0
   302  00A8A6  D4                 	db	low _MdmWifiCmd_MainTask
   303  00A8A7  A1                 	db	high _MdmWifiCmd_MainTask
   304  00A8A8  00                 	db	0
   305  00A8A9  0000               	dw	0
   306  00A8AB  000A               	dw	10
   307  00A8AD  00                 	db	0
   308  00A8AE  FE                 	db	low _MdmWifiHttp_MainTask
   309  00A8AF  9E                 	db	high _MdmWifiHttp_MainTask
   310  00A8B0  00                 	db	0
   311  00A8B1  0000               	dw	0
   312  00A8B3  000A               	dw	10
   313  00A8B5  00                 	db	0
   314  00A8B6  F6                 	db	low _UsbDevice_MainTask
   315  00A8B7  A1                 	db	high _UsbDevice_MainTask
   316  00A8B8  00                 	db	0
   317  00A8B9  0000               	dw	0
   318  00A8BB  0001               	dw	1
   319  00A8BD  00                 	db	0
   320  00A8BE  72                 	db	low _Led_MainTask
   321  00A8BF  A5                 	db	high _Led_MainTask
   322  00A8C0  00                 	db	0
   323  00A8C1  0000               	dw	0
   324  00A8C3  0032               	dw	50
   325  00A8C5  00                 	db	0
   326  00A8C6  0A                 	db	low _Rtcm_MainTask
   327  00A8C7  B8                 	db	high _Rtcm_MainTask
   328  00A8C8  00                 	db	0
   329  00A8C9  0000               	dw	0
   330  00A8CB  03E8               	dw	1000
   331  00A8CD  00                 	db	0
   332  00A8CE  1A                 	db	low _Term_MainTask
   333  00A8CF  A0                 	db	high _Term_MainTask
   334  00A8D0  00                 	db	0
   335  00A8D1  0000               	dw	0
   336  00A8D3  0064               	dw	100
   337  00A8D5  00                 	db	0
   338                           
   339                           	psect	mediumconst
   340  00ECDC                     __pmediumconst:
   341                           	opt stack 0
   342  00ECDC  00                 	db	0
   343  00ECDD                     _USB_SD_Ptr:
   344                           	opt stack 0
   345  00ECDD  0C                 	db	low _sd000
   346  00ECDE  EF                 	db	high _sd000
   347  00ECDF  C5                 	db	low _sd001
   348  00ECE0  EE                 	db	high _sd001
   349  00ECE1  9F                 	db	low _sd002
   350  00ECE2  EE                 	db	high _sd002
   351  00ECE3                     __end_of_USB_SD_Ptr:
   352                           	opt stack 0
   353  00ECE3                     _USB_CD_Ptr:
   354                           	opt stack 0
   355  00ECE3  5C                 	db	low _configDescriptor1
   356  00ECE4  EE                 	db	high _configDescriptor1
   357  00ECE5                     __end_of_USB_CD_Ptr:
   358                           	opt stack 0
   359  00ECE5                     _TaskNumber:
   360                           	opt stack 0
   361  00ECE5  0009               	dw	9
   362  00ECE7                     __end_of_TaskNumber:
   363                           	opt stack 0
   364  00ECE7                     _MsgFormat:
   365                           	opt stack 0
   366  00ECE7  48                 	db	72
   367  00ECE8  6F                 	db	111
   368  00ECE9  73                 	db	115
   369  00ECEA  74                 	db	116
   370  00ECEB  20                 	db	32
   371  00ECEC  6D                 	db	109
   372  00ECED  65                 	db	101
   373  00ECEE  73                 	db	115
   374  00ECEF  73                 	db	115
   375  00ECF0  61                 	db	97
   376  00ECF1  67                 	db	103
   377  00ECF2  65                 	db	101
   378  00ECF3  20                 	db	32
   379  00ECF4  66                 	db	102
   380  00ECF5  6F                 	db	111
   381  00ECF6  72                 	db	114
   382  00ECF7  6D                 	db	109
   383  00ECF8  61                 	db	97
   384  00ECF9  74                 	db	116
   385  00ECFA  3A                 	db	58
   386  00ECFB  20                 	db	32
   387  00ECFC  0D                 	db	13
   388  00ECFD  0A                 	db	10
   389  00ECFE  5B                 	db	91
   390  00ECFF  6F                 	db	111
   391  00ED00  70                 	db	112
   392  00ED01  5F                 	db	95
   393  00ED02  74                 	db	116
   394  00ED03  79                 	db	121
   395  00ED04  70                 	db	112
   396  00ED05  65                 	db	101
   397  00ED06  5D                 	db	93
   398  00ED07  3A                 	db	58
   399  00ED08  5B                 	db	91
   400  00ED09  6F                 	db	111
   401  00ED0A  70                 	db	112
   402  00ED0B  5D                 	db	93
   403  00ED0C  3A                 	db	58
   404  00ED0D  5B                 	db	91
   405  00ED0E  6C                 	db	108
   406  00ED0F  65                 	db	101
   407  00ED10  6E                 	db	110
   408  00ED11  5D                 	db	93
   409  00ED12  3A                 	db	58
   410  00ED13  5B                 	db	91
   411  00ED14  61                 	db	97
   412  00ED15  64                 	db	100
   413  00ED16  64                 	db	100
   414  00ED17  72                 	db	114
   415  00ED18  5D                 	db	93
   416  00ED19  3A                 	db	58
   417  00ED1A  5B                 	db	91
   418  00ED1B  70                 	db	112
   419  00ED1C  61                 	db	97
   420  00ED1D  79                 	db	121
   421  00ED1E  6C                 	db	108
   422  00ED1F  6F                 	db	111
   423  00ED20  61                 	db	97
   424  00ED21  64                 	db	100
   425  00ED22  5D                 	db	93
   426  00ED23  0D                 	db	13
   427  00ED24  0A                 	db	10
   428  00ED25  0D                 	db	13
   429  00ED26  0A                 	db	10
   430  00ED27  5B                 	db	91
   431  00ED28  6F                 	db	111
   432  00ED29  70                 	db	112
   433  00ED2A  5F                 	db	95
   434  00ED2B  74                 	db	116
   435  00ED2C  79                 	db	121
   436  00ED2D  70                 	db	112
   437  00ED2E  65                 	db	101
   438  00ED2F  5D                 	db	93
   439  00ED30  20                 	db	32
   440  00ED31  3D                 	db	61
   441  00ED32  20                 	db	32
   442  00ED33  53                 	db	83
   443  00ED34  4F                 	db	79
   444  00ED35  2C                 	db	44
   445  00ED36  53                 	db	83
   446  00ED37  42                 	db	66
   447  00ED38  0D                 	db	13
   448  00ED39  0A                 	db	10
   449  00ED3A  5B                 	db	91
   450  00ED3B  6F                 	db	111
   451  00ED3C  70                 	db	112
   452  00ED3D  5D                 	db	93
   453  00ED3E  20                 	db	32
   454  00ED3F  3D                 	db	61
   455  00ED40  20                 	db	32
   456  00ED41  52                 	db	82
   457  00ED42  3A                 	db	58
   458  00ED43  20                 	db	32
   459  00ED44  72                 	db	114
   460  00ED45  65                 	db	101
   461  00ED46  61                 	db	97
   462  00ED47  64                 	db	100
   463  00ED48  2C                 	db	44
   464  00ED49  57                 	db	87
   465  00ED4A  3A                 	db	58
   466  00ED4B  20                 	db	32
   467  00ED4C  77                 	db	119
   468  00ED4D  72                 	db	114
   469  00ED4E  69                 	db	105
   470  00ED4F  74                 	db	116
   471  00ED50  65                 	db	101
   472  00ED51  0D                 	db	13
   473  00ED52  0A                 	db	10
   474  00ED53  5B                 	db	91
   475  00ED54  6C                 	db	108
   476  00ED55  65                 	db	101
   477  00ED56  6E                 	db	110
   478  00ED57  5D                 	db	93
   479  00ED58  20                 	db	32
   480  00ED59  3D                 	db	61
   481  00ED5A  20                 	db	32
   482  00ED5B  32                 	db	50
   483  00ED5C  20                 	db	32
   484  00ED5D  62                 	db	98
   485  00ED5E  79                 	db	121
   486  00ED5F  74                 	db	116
   487  00ED60  65                 	db	101
   488  00ED61  20                 	db	32
   489  00ED62  41                 	db	65
   490  00ED63  53                 	db	83
   491  00ED64  43                 	db	67
   492  00ED65  49                 	db	73
   493  00ED66  49                 	db	73
   494  00ED67  0D                 	db	13
   495  00ED68  0A                 	db	10
   496  00ED69  5B                 	db	91
   497  00ED6A  61                 	db	97
   498  00ED6B  64                 	db	100
   499  00ED6C  64                 	db	100
   500  00ED6D  72                 	db	114
   501  00ED6E  5D                 	db	93
   502  00ED6F  20                 	db	32
   503  00ED70  3D                 	db	61
   504  00ED71  20                 	db	32
   505  00ED72  32                 	db	50
   506  00ED73  20                 	db	32
   507  00ED74  62                 	db	98
   508  00ED75  79                 	db	121
   509  00ED76  74                 	db	116
   510  00ED77  65                 	db	101
   511  00ED78  20                 	db	32
   512  00ED79  41                 	db	65
   513  00ED7A  53                 	db	83
   514  00ED7B  43                 	db	67
   515  00ED7C  49                 	db	73
   516  00ED7D  49                 	db	73
   517  00ED7E  0D                 	db	13
   518  00ED7F  0A                 	db	10
   519  00ED80  5B                 	db	91
   520  00ED81  70                 	db	112
   521  00ED82  61                 	db	97
   522  00ED83  79                 	db	121
   523  00ED84  6C                 	db	108
   524  00ED85  6F                 	db	111
   525  00ED86  61                 	db	97
   526  00ED87  64                 	db	100
   527  00ED88  5D                 	db	93
   528  00ED89  20                 	db	32
   529  00ED8A  3D                 	db	61
   530  00ED8B  20                 	db	32
   531  00ED8C  6D                 	db	109
   532  00ED8D  61                 	db	97
   533  00ED8E  78                 	db	120
   534  00ED8F  20                 	db	32
   535  00ED90  32                 	db	50
   536  00ED91  30                 	db	48
   537  00ED92  20                 	db	32
   538  00ED93  62                 	db	98
   539  00ED94  79                 	db	121
   540  00ED95  74                 	db	116
   541  00ED96  65                 	db	101
   542  00ED97  20                 	db	32
   543  00ED98  41                 	db	65
   544  00ED99  53                 	db	83
   545  00ED9A  43                 	db	67
   546  00ED9B  49                 	db	73
   547  00ED9C  49                 	db	73
   548  00ED9D  0D                 	db	13
   549  00ED9E  0A                 	db	10
   550  00ED9F  0D                 	db	13
   551  00EDA0  0A                 	db	10
   552  00EDA1  54                 	db	84
   553  00EDA2  65                 	db	101
   554  00EDA3  72                 	db	114
   555  00EDA4  6D                 	db	109
   556  00EDA5  69                 	db	105
   557  00EDA6  6E                 	db	110
   558  00EDA7  61                 	db	97
   559  00EDA8  6C                 	db	108
   560  00EDA9  20                 	db	32
   561  00EDAA  4D                 	db	77
   562  00EDAB  6F                 	db	111
   563  00EDAC  64                 	db	100
   564  00EDAD  65                 	db	101
   565  00EDAE  3A                 	db	58
   566  00EDAF  20                 	db	32
   567  00EDB0  43                 	db	67
   568  00EDB1  4F                 	db	79
   569  00EDB2  4D                 	db	77
   570  00EDB3  4D                 	db	77
   571  00EDB4  41                 	db	65
   572  00EDB5  4E                 	db	78
   573  00EDB6  44                 	db	68
   574  00EDB7  20                 	db	32
   575  00EDB8  4D                 	db	77
   576  00EDB9  4F                 	db	79
   577  00EDBA  44                 	db	68
   578  00EDBB  45                 	db	69
   579  00EDBC  0D                 	db	13
   580  00EDBD  0A                 	db	10
   581  00EDBE  4D                 	db	77
   582  00EDBF  6F                 	db	111
   583  00EDC0  64                 	db	100
   584  00EDC1  65                 	db	101
   585  00EDC2  6D                 	db	109
   586  00EDC3  20                 	db	32
   587  00EDC4  54                 	db	84
   588  00EDC5  79                 	db	121
   589  00EDC6  70                 	db	112
   590  00EDC7  65                 	db	101
   591  00EDC8  3A                 	db	58
   592  00EDC9  20                 	db	32
   593  00EDCA  57                 	db	87
   594  00EDCB  69                 	db	105
   595  00EDCC  46                 	db	70
   596  00EDCD  69                 	db	105
   597  00EDCE  0D                 	db	13
   598  00EDCF  0A                 	db	10
   599  00EDD0  0D                 	db	13
   600  00EDD1  0A                 	db	10
   601  00EDD2  00                 	db	0
   602  00EDD3                     __end_of_MsgFormat:
   603                           	opt stack 0
   604  00EDD3                     _Welcome:
   605                           	opt stack 0
   606  00EDD3  2A                 	db	42
   607  00EDD4  2A                 	db	42
   608  00EDD5  2A                 	db	42
   609  00EDD6  2A                 	db	42
   610  00EDD7  2A                 	db	42
   611  00EDD8  2A                 	db	42
   612  00EDD9  2A                 	db	42
   613  00EDDA  2A                 	db	42
   614  00EDDB  2A                 	db	42
   615  00EDDC  2A                 	db	42
   616  00EDDD  2A                 	db	42
   617  00EDDE  2A                 	db	42
   618  00EDDF  2A                 	db	42
   619  00EDE0  2A                 	db	42
   620  00EDE1  2A                 	db	42
   621  00EDE2  2A                 	db	42
   622  00EDE3  2A                 	db	42
   623  00EDE4  2A                 	db	42
   624  00EDE5  2A                 	db	42
   625  00EDE6  2A                 	db	42
   626  00EDE7  2A                 	db	42
   627  00EDE8  2A                 	db	42
   628  00EDE9  2A                 	db	42
   629  00EDEA  2A                 	db	42
   630  00EDEB  2A                 	db	42
   631  00EDEC  2A                 	db	42
   632  00EDED  2A                 	db	42
   633  00EDEE  2A                 	db	42
   634  00EDEF  2A                 	db	42
   635  00EDF0  2A                 	db	42
   636  00EDF1  2A                 	db	42
   637  00EDF2  2A                 	db	42
   638  00EDF3  2A                 	db	42
   639  00EDF4  2A                 	db	42
   640  00EDF5  2A                 	db	42
   641  00EDF6  2A                 	db	42
   642  00EDF7  2A                 	db	42
   643  00EDF8  2A                 	db	42
   644  00EDF9  2A                 	db	42
   645  00EDFA  2A                 	db	42
   646  00EDFB  2A                 	db	42
   647  00EDFC  2A                 	db	42
   648  00EDFD  2A                 	db	42
   649  00EDFE  2A                 	db	42
   650  00EDFF  2A                 	db	42
   651  00EE00  2A                 	db	42
   652  00EE01  2A                 	db	42
   653  00EE02  2A                 	db	42
   654  00EE03  2A                 	db	42
   655  00EE04  0D                 	db	13
   656  00EE05  0A                 	db	10
   657  00EE06  20                 	db	32
   658  00EE07  20                 	db	32
   659  00EE08  20                 	db	32
   660  00EE09  20                 	db	32
   661  00EE0A  20                 	db	32
   662  00EE0B  20                 	db	32
   663  00EE0C  20                 	db	32
   664  00EE0D  20                 	db	32
   665  00EE0E  20                 	db	32
   666  00EE0F  20                 	db	32
   667  00EE10  20                 	db	32
   668  00EE11  20                 	db	32
   669  00EE12  20                 	db	32
   670  00EE13  20                 	db	32
   671  00EE14  20                 	db	32
   672  00EE15  20                 	db	32
   673  00EE16  20                 	db	32
   674  00EE17  20                 	db	32
   675  00EE18  4D                 	db	77
   676  00EE19  45                 	db	69
   677  00EE1A  52                 	db	82
   678  00EE1B  43                 	db	67
   679  00EE1C  55                 	db	85
   680  00EE1D  52                 	db	82
   681  00EE1E  59                 	db	89
   682  00EE1F  20                 	db	32
   683  00EE20  53                 	db	83
   684  00EE21  59                 	db	89
   685  00EE22  53                 	db	83
   686  00EE23  54                 	db	84
   687  00EE24  45                 	db	69
   688  00EE25  4D                 	db	77
   689  00EE26  0D                 	db	13
   690  00EE27  0A                 	db	10
   691  00EE28  2A                 	db	42
   692  00EE29  2A                 	db	42
   693  00EE2A  2A                 	db	42
   694  00EE2B  2A                 	db	42
   695  00EE2C  2A                 	db	42
   696  00EE2D  2A                 	db	42
   697  00EE2E  2A                 	db	42
   698  00EE2F  2A                 	db	42
   699  00EE30  2A                 	db	42
   700  00EE31  2A                 	db	42
   701  00EE32  2A                 	db	42
   702  00EE33  2A                 	db	42
   703  00EE34  2A                 	db	42
   704  00EE35  2A                 	db	42
   705  00EE36  2A                 	db	42
   706  00EE37  2A                 	db	42
   707  00EE38  2A                 	db	42
   708  00EE39  2A                 	db	42
   709  00EE3A  2A                 	db	42
   710  00EE3B  2A                 	db	42
   711  00EE3C  2A                 	db	42
   712  00EE3D  2A                 	db	42
   713  00EE3E  2A                 	db	42
   714  00EE3F  2A                 	db	42
   715  00EE40  2A                 	db	42
   716  00EE41  2A                 	db	42
   717  00EE42  2A                 	db	42
   718  00EE43  2A                 	db	42
   719  00EE44  2A                 	db	42
   720  00EE45  2A                 	db	42
   721  00EE46  2A                 	db	42
   722  00EE47  2A                 	db	42
   723  00EE48  2A                 	db	42
   724  00EE49  2A                 	db	42
   725  00EE4A  2A                 	db	42
   726  00EE4B  2A                 	db	42
   727  00EE4C  2A                 	db	42
   728  00EE4D  2A                 	db	42
   729  00EE4E  2A                 	db	42
   730  00EE4F  2A                 	db	42
   731  00EE50  2A                 	db	42
   732  00EE51  2A                 	db	42
   733  00EE52  2A                 	db	42
   734  00EE53  2A                 	db	42
   735  00EE54  2A                 	db	42
   736  00EE55  2A                 	db	42
   737  00EE56  2A                 	db	42
   738  00EE57  2A                 	db	42
   739  00EE58  2A                 	db	42
   740  00EE59  0D                 	db	13
   741  00EE5A  0A                 	db	10
   742  00EE5B  00                 	db	0
   743  00EE5C                     __end_of_Welcome:
   744                           	opt stack 0
   745  00EE5C                     _configDescriptor1:
   746                           	opt stack 0
   747  00EE5C  09                 	db	9
   748  00EE5D  02                 	db	2
   749  00EE5E  43                 	db	67
   750  00EE5F  00                 	db	0
   751  00EE60  02                 	db	2
   752  00EE61  01                 	db	1
   753  00EE62  00                 	db	0
   754  00EE63  C0                 	db	192
   755  00EE64  32                 	db	50
   756  00EE65  09                 	db	9
   757  00EE66  04                 	db	4
   758  00EE67  00                 	db	0
   759  00EE68  00                 	db	0
   760  00EE69  01                 	db	1
   761  00EE6A  02                 	db	2
   762  00EE6B  02                 	db	2
   763  00EE6C  01                 	db	1
   764  00EE6D  00                 	db	0
   765  00EE6E  05                 	db	5
   766  00EE6F  24                 	db	36
   767  00EE70  00                 	db	0
   768  00EE71  10                 	db	16
   769  00EE72  01                 	db	1
   770  00EE73  04                 	db	4
   771  00EE74  24                 	db	36
   772  00EE75  02                 	db	2
   773  00EE76  02                 	db	2
   774  00EE77  05                 	db	5
   775  00EE78  24                 	db	36
   776  00EE79  06                 	db	6
   777  00EE7A  00                 	db	0
   778  00EE7B  01                 	db	1
   779  00EE7C  05                 	db	5
   780  00EE7D  24                 	db	36
   781  00EE7E  01                 	db	1
   782  00EE7F  00                 	db	0
   783  00EE80  01                 	db	1
   784  00EE81  07                 	db	7
   785  00EE82  05                 	db	5
   786  00EE83  81                 	db	129
   787  00EE84  03                 	db	3
   788  00EE85  08                 	db	8
   789  00EE86  00                 	db	0
   790  00EE87  02                 	db	2
   791  00EE88  09                 	db	9
   792  00EE89  04                 	db	4
   793  00EE8A  01                 	db	1
   794  00EE8B  00                 	db	0
   795  00EE8C  02                 	db	2
   796  00EE8D  0A                 	db	10
   797  00EE8E  00                 	db	0
   798  00EE8F  00                 	db	0
   799  00EE90  00                 	db	0
   800  00EE91  07                 	db	7
   801  00EE92  05                 	db	5
   802  00EE93  02                 	db	2
   803  00EE94  02                 	db	2
   804  00EE95  40                 	db	64
   805  00EE96  00                 	db	0
   806  00EE97  00                 	db	0
   807  00EE98  07                 	db	7
   808  00EE99  05                 	db	5
   809  00EE9A  82                 	db	130
   810  00EE9B  02                 	db	2
   811  00EE9C  40                 	db	64
   812  00EE9D  00                 	db	0
   813  00EE9E  00                 	db	0
   814  00EE9F                     __end_of_configDescriptor1:
   815                           	opt stack 0
   816  00EE9F                     _sd002:
   817                           	opt stack 0
   818  00EE9F  26                 	db	38
   819  00EEA0  03                 	db	3
   820  00EEA1  0054               	dw	84
   821  00EEA3  0065               	dw	101
   822  00EEA5  0072               	dw	114
   823  00EEA7  006D               	dw	109
   824  00EEA9  0069               	dw	105
   825  00EEAB  006E               	dw	110
   826  00EEAD  0061               	dw	97
   827  00EEAF  006C               	dw	108
   828  00EEB1  0020               	dw	32
   829  00EEB3  0049               	dw	73
   830  00EEB5  006E               	dw	110
   831  00EEB7  0074               	dw	116
   832  00EEB9  0065               	dw	101
   833  00EEBB  0072               	dw	114
   834  00EEBD  0066               	dw	102
   835  00EEBF  0061               	dw	97
   836  00EEC1  0063               	dw	99
   837  00EEC3  0065               	dw	101
   838  00EEC5                     __end_of_sd002:
   839                           	opt stack 0
   840  00EEC5                     _sd001:
   841                           	opt stack 0
   842  00EEC5  1E                 	db	30
   843  00EEC6  03                 	db	3
   844  00EEC7  004D               	dw	77
   845  00EEC9  0065               	dw	101
   846  00EECB  0072               	dw	114
   847  00EECD  0063               	dw	99
   848  00EECF  0075               	dw	117
   849  00EED1  0072               	dw	114
   850  00EED3  0079               	dw	121
   851  00EED5  0020               	dw	32
   852  00EED7  0053               	dw	83
   853  00EED9  0079               	dw	121
   854  00EEDB  0073               	dw	115
   855  00EEDD  0074               	dw	116
   856  00EEDF  0065               	dw	101
   857  00EEE1  006D               	dw	109
   858  00EEE3                     __end_of_sd001:
   859                           	opt stack 0
   860  00EEE3                     _MsgReady:
   861                           	opt stack 0
   862  00EEE3  0D                 	db	13
   863  00EEE4  0A                 	db	10
   864  00EEE5  53                 	db	83
   865  00EEE6  79                 	db	121
   866  00EEE7  73                 	db	115
   867  00EEE8  74                 	db	116
   868  00EEE9  65                 	db	101
   869  00EEEA  6D                 	db	109
   870  00EEEB  20                 	db	32
   871  00EEEC  52                 	db	82
   872  00EEED  65                 	db	101
   873  00EEEE  61                 	db	97
   874  00EEEF  64                 	db	100
   875  00EEF0  79                 	db	121
   876  00EEF1  2E                 	db	46
   877  00EEF2  2E                 	db	46
   878  00EEF3  2E                 	db	46
   879  00EEF4  20                 	db	32
   880  00EEF5  0D                 	db	13
   881  00EEF6  0A                 	db	10
   882  00EEF7  0D                 	db	13
   883  00EEF8  0A                 	db	10
   884  00EEF9  00                 	db	0
   885  00EEFA                     __end_of_MsgReady:
   886                           	opt stack 0
   887  00EEFA                     _device_dsc:
   888                           	opt stack 0
   889  00EEFA  12                 	db	18
   890  00EEFB  01                 	db	1
   891  00EEFC  0200               	dw	512
   892  00EEFE  02                 	db	2
   893  00EEFF  00                 	db	0
   894  00EF00  00                 	db	0
   895  00EF01  08                 	db	8
   896  00EF02  04D8               	dw	1240
   897  00EF04  000A               	dw	10
   898  00EF06  0100               	dw	256
   899  00EF08  01                 	db	1
   900  00EF09  02                 	db	2
   901  00EF0A  00                 	db	0
   902  00EF0B  01                 	db	1
   903  00EF0C                     __end_of_device_dsc:
   904                           	opt stack 0
   905  00EF0C                     _sd000:
   906                           	opt stack 0
   907  00EF0C  04                 	db	4
   908  00EF0D  03                 	db	3
   909  00EF0E  0409               	dw	1033
   910  00EF10                     __end_of_sd000:
   911                           	opt stack 0
   912  0000                     _UEP0bits	set	3878
   913  0000                     _UIEbits	set	3894
   914  0000                     _UADDR	set	3896
   915  0000                     _UIE	set	3894
   916  0000                     _UEIE	set	3895
   917  0000                     _UCFG	set	3897
   918  0000                     _DSCONLbits	set	3916
   919  0000                     _DSGPR1	set	3919
   920  0000                     _DSGPR0	set	3918
   921  0000                     _DSCONHbits	set	3917
   922  0000                     _RTCCAL	set	3902
   923  0000                     _PADCFG1bits	set	3900
   924  0000                     _RTCCFGbits	set	3903
   925  0000                     _UEP1	set	3879
   926  0000                     _UEP0	set	3878
   927  0000                     _T1CONbits	set	4045
   928  0000                     _PORTDbits	set	3971
   929  0000                     _USTAT	set	3940
   930  0000                     _PIR2bits	set	4001
   931  0000                     _UCON	set	3941
   932  0000                     _UIRbits	set	3938
   933  0000                     _UCONbits	set	3941
   934  0000                     _UIR	set	3938
   935  0000                     _UEIR	set	3939
   936  0000                     _PIE2bits	set	4000
   937  0000                     _LATEbits	set	3981
   938  0000                     _TRISEbits	set	3990
   939  0000                     _WDTCONbits	set	4032
   940  0000                     _OSCCONbits	set	4051
   941  0000                     _BAUDCON2	set	3964
   942  0000                     _RCSTA2	set	3996
   943  0000                     _BAUDCON1	set	3966
   944  0000                     _RCSTA1	set	4012
   945  0000                     _TRISCbits	set	3988
   946  0000                     _TXSTA2	set	4008
   947  0000                     _TXSTA1	set	4013
   948  0000                     _RCREG2	set	4010
   949  0000                     _RCREG1	set	4015
   950  0000                     _TXREG2	set	4009
   951  0000                     _TXREG1	set	4014
   952  0000                     _SPBRG2	set	4011
   953  0000                     _SPBRGH2	set	3965
   954  0000                     _SPBRG1	set	4016
   955  0000                     _SPBRGH1	set	3967
   956  0000                     _PR4	set	3959
   957  0000                     _PR2	set	4043
   958  0000                     _PIE1bits	set	3997
   959  0000                     _IPR1bits	set	3999
   960  0000                     _T4CONbits	set	3958
   961  0000                     _T2CONbits	set	4042
   962  0000                     _ALRMVALL	set	3982
   963  0000                     _ALRMVALH	set	3983
   964  0000                     _RTCVALH	set	3993
   965  0000                     _RTCVALL	set	3992
   966  0000                     _ALRMRPTbits	set	3984
   967  0000                     _ALRMCFGbits	set	3985
   968  0000                     _PIE3bits	set	4003
   969  0000                     _IPR3bits	set	4005
   970  0000                     _INTCON2bits	set	4081
   971  0000                     _TRISBbits	set	3987
   972  0000                     _OSCTUNEbits	set	3995
   973  0000                     _SSP2CON1	set	3954
   974  0000                     _TRISDbits	set	3989
   975  0000                     _SSP2BUF	set	3957
   976  0000                     _SSP2CON2bits	set	3953
   977  0000                     _SSP2STAT	set	3955
   978  0000                     _SSP2CON2	set	3953
   979  0000                     _SSP2ADD	set	3956
   980  0000                     _PIR1bits	set	3998
   981  0000                     _PIR3bits	set	4004
   982  0000                     _INTCON3bits	set	4080
   983  0000                     _INTCONbits	set	4082
   984  0000                     _RCONbits	set	4048
   985  00EF10                     STR_62:
   986  00EF10  42                 	db	66	;'B'
   987  00EF11  75                 	db	117	;'u'
   988  00EF12  69                 	db	105	;'i'
   989  00EF13  6C                 	db	108	;'l'
   990  00EF14  64                 	db	100	;'d'
   991  00EF15  20                 	db	32
   992  00EF16  44                 	db	68	;'D'
   993  00EF17  61                 	db	97	;'a'
   994  00EF18  74                 	db	116	;'t'
   995  00EF19  65                 	db	101	;'e'
   996  00EF1A  20                 	db	32
   997  00EF1B  28                 	db	40
   998  00EF1C  64                 	db	100	;'d'
   999  00EF1D  2D                 	db	45
  1000  00EF1E  6D                 	db	109	;'m'
  1001  00EF1F  2D                 	db	45
  1002  00EF20  79                 	db	121	;'y'
  1003  00EF21  29                 	db	41
  1004  00EF22  3A                 	db	58	;':'
  1005  00EF23  20                 	db	32
  1006  00EF24  00                 	db	0
  1007  00EF25                     STR_58:
  1008  00EF25  46                 	db	70	;'F'
  1009  00EF26  72                 	db	114	;'r'
  1010  00EF27  61                 	db	97	;'a'
  1011  00EF28  6D                 	db	109	;'m'
  1012  00EF29  65                 	db	101	;'e'
  1013  00EF2A  77                 	db	119	;'w'
  1014  00EF2B  6F                 	db	111	;'o'
  1015  00EF2C  72                 	db	114	;'r'
  1016  00EF2D  6B                 	db	107	;'k'
  1017  00EF2E  20                 	db	32
  1018  00EF2F  56                 	db	86	;'V'
  1019  00EF30  65                 	db	101	;'e'
  1020  00EF31  72                 	db	114	;'r'
  1021  00EF32  73                 	db	115	;'s'
  1022  00EF33  69                 	db	105	;'i'
  1023  00EF34  6F                 	db	111	;'o'
  1024  00EF35  6E                 	db	110	;'n'
  1025  00EF36  3A                 	db	58	;':'
  1026  00EF37  20                 	db	32
  1027  00EF38  00                 	db	0
  1028  00EF39  41                 	db	65	;'A'
  1029  00EF3A  54                 	db	84	;'T'
  1030  00EF3B  2B                 	db	43
  1031  00EF3C  43                 	db	67	;'C'
  1032  00EF3D  49                 	db	73	;'I'
  1033  00EF3E  50                 	db	80	;'P'
  1034  00EF3F  53                 	db	83	;'S'
  1035  00EF40  45                 	db	69	;'E'
  1036  00EF41  52                 	db	82	;'R'
  1037  00EF42  56                 	db	86	;'V'
  1038  00EF43  45                 	db	69	;'E'
  1039  00EF44  52                 	db	82	;'R'
  1040  00EF45  3D                 	db	61	;'='
  1041  00EF46  00                 	db	0
  1042  00EF47  41                 	db	65	;'A'
  1043  00EF48  54                 	db	84	;'T'
  1044  00EF49  2B                 	db	43
  1045  00EF4A  43                 	db	67	;'C'
  1046  00EF4B  49                 	db	73	;'I'
  1047  00EF4C  50                 	db	80	;'P'
  1048  00EF4D  43                 	db	67	;'C'
  1049  00EF4E  4C                 	db	76	;'L'
  1050  00EF4F  4F                 	db	79	;'O'
  1051  00EF50  53                 	db	83	;'S'
  1052  00EF51  45                 	db	69	;'E'
  1053  00EF52  3D                 	db	61	;'='
  1054  00EF53  00                 	db	0
  1055  00EF54                     STR_3:
  1056  00EF54  41                 	db	65	;'A'
  1057  00EF55  54                 	db	84	;'T'
  1058  00EF56  2B                 	db	43
  1059  00EF57  43                 	db	67	;'C'
  1060  00EF58  49                 	db	73	;'I'
  1061  00EF59  50                 	db	80	;'P'
  1062  00EF5A  53                 	db	83	;'S'
  1063  00EF5B  54                 	db	84	;'T'
  1064  00EF5C  41                 	db	65	;'A'
  1065  00EF5D  52                 	db	82	;'R'
  1066  00EF5E  54                 	db	84	;'T'
  1067  00EF5F  3D                 	db	61	;'='
  1068  00EF60  00                 	db	0
  1069  00EF61                     STR_15:
  1070  00EF61  41                 	db	65	;'A'
  1071  00EF62  54                 	db	84	;'T'
  1072  00EF63  2B                 	db	43
  1073  00EF64  43                 	db	67	;'C'
  1074  00EF65  49                 	db	73	;'I'
  1075  00EF66  50                 	db	80	;'P'
  1076  00EF67  53                 	db	83	;'S'
  1077  00EF68  45                 	db	69	;'E'
  1078  00EF69  4E                 	db	78	;'N'
  1079  00EF6A  44                 	db	68	;'D'
  1080  00EF6B  3D                 	db	61	;'='
  1081  00EF6C  00                 	db	0
  1082  00EF6D  41                 	db	65	;'A'
  1083  00EF6E  54                 	db	84	;'T'
  1084  00EF6F  2B                 	db	43
  1085  00EF70  43                 	db	67	;'C'
  1086  00EF71  49                 	db	73	;'I'
  1087  00EF72  50                 	db	80	;'P'
  1088  00EF73  4D                 	db	77	;'M'
  1089  00EF74  4F                 	db	79	;'O'
  1090  00EF75  44                 	db	68	;'D'
  1091  00EF76  45                 	db	69	;'E'
  1092  00EF77  3D                 	db	61	;'='
  1093  00EF78  00                 	db	0
  1094  00EF79  41                 	db	65	;'A'
  1095  00EF7A  54                 	db	84	;'T'
  1096  00EF7B  2B                 	db	43
  1097  00EF7C  43                 	db	67	;'C'
  1098  00EF7D  49                 	db	73	;'I'
  1099  00EF7E  50                 	db	80	;'P'
  1100  00EF7F  43                 	db	67	;'C'
  1101  00EF80  4C                 	db	76	;'L'
  1102  00EF81  4F                 	db	79	;'O'
  1103  00EF82  53                 	db	83	;'S'
  1104  00EF83  45                 	db	69	;'E'
  1105  00EF84  00                 	db	0
  1106  00EF85                     STR_31:
  1107  00EF85  41                 	db	65	;'A'
  1108  00EF86  54                 	db	84	;'T'
  1109  00EF87  2B                 	db	43
  1110  00EF88  43                 	db	67	;'C'
  1111  00EF89  57                 	db	87	;'W'
  1112  00EF8A  51                 	db	81	;'Q'
  1113  00EF8B  41                 	db	65	;'A'
  1114  00EF8C  50                 	db	80	;'P'
  1115  00EF8D  0D                 	db	13
  1116  00EF8E  0A                 	db	10
  1117  00EF8F  00                 	db	0
  1118  00EF90  41                 	db	65	;'A'
  1119  00EF91  54                 	db	84	;'T'
  1120  00EF92  2B                 	db	43
  1121  00EF93  43                 	db	67	;'C'
  1122  00EF94  57                 	db	87	;'W'
  1123  00EF95  4D                 	db	77	;'M'
  1124  00EF96  4F                 	db	79	;'O'
  1125  00EF97  44                 	db	68	;'D'
  1126  00EF98  45                 	db	69	;'E'
  1127  00EF99  3D                 	db	61	;'='
  1128  00EF9A  00                 	db	0
  1129  00EF9B  41                 	db	65	;'A'
  1130  00EF9C  54                 	db	84	;'T'
  1131  00EF9D  2B                 	db	43
  1132  00EF9E  43                 	db	67	;'C'
  1133  00EF9F  49                 	db	73	;'I'
  1134  00EFA0  50                 	db	80	;'P'
  1135  00EFA1  4D                 	db	77	;'M'
  1136  00EFA2  55                 	db	85	;'U'
  1137  00EFA3  58                 	db	88	;'X'
  1138  00EFA4  3D                 	db	61	;'='
  1139  00EFA5  00                 	db	0
  1140  00EFA6  41                 	db	65	;'A'
  1141  00EFA7  54                 	db	84	;'T'
  1142  00EFA8  2B                 	db	43
  1143  00EFA9  43                 	db	67	;'C'
  1144  00EFAA  57                 	db	87	;'W'
  1145  00EFAB  4A                 	db	74	;'J'
  1146  00EFAC  41                 	db	65	;'A'
  1147  00EFAD  50                 	db	80	;'P'
  1148  00EFAE  3D                 	db	61	;'='
  1149  00EFAF  00                 	db	0
  1150  00EFB0  41                 	db	65	;'A'
  1151  00EFB1  54                 	db	84	;'T'
  1152  00EFB2  2B                 	db	43
  1153  00EFB3  43                 	db	67	;'C'
  1154  00EFB4  49                 	db	73	;'I'
  1155  00EFB5  50                 	db	80	;'P'
  1156  00EFB6  41                 	db	65	;'A'
  1157  00EFB7  50                 	db	80	;'P'
  1158  00EFB8  3D                 	db	61	;'='
  1159  00EFB9  00                 	db	0
  1160  00EFBA  41                 	db	65	;'A'
  1161  00EFBB  54                 	db	84	;'T'
  1162  00EFBC  2B                 	db	43
  1163  00EFBD  43                 	db	67	;'C'
  1164  00EFBE  57                 	db	87	;'W'
  1165  00EFBF  53                 	db	83	;'S'
  1166  00EFC0  41                 	db	65	;'A'
  1167  00EFC1  50                 	db	80	;'P'
  1168  00EFC2  3D                 	db	61	;'='
  1169  00EFC3  00                 	db	0
  1170  00EFC4  41                 	db	65	;'A'
  1171  00EFC5  54                 	db	84	;'T'
  1172  00EFC6  2B                 	db	43
  1173  00EFC7  52                 	db	82	;'R'
  1174  00EFC8  53                 	db	83	;'S'
  1175  00EFC9  54                 	db	84	;'T'
  1176  00EFCA  0D                 	db	13
  1177  00EFCB  0A                 	db	10
  1178  00EFCC  00                 	db	0
  1179  00EFCD                     STR_14:
  1180  00EFCD  43                 	db	67	;'C'
  1181  00EFCE  4F                 	db	79	;'O'
  1182  00EFCF  4E                 	db	78	;'N'
  1183  00EFD0  4E                 	db	78	;'N'
  1184  00EFD1  45                 	db	69	;'E'
  1185  00EFD2  43                 	db	67	;'C'
  1186  00EFD3  54                 	db	84	;'T'
  1187  00EFD4  00                 	db	0
  1188  00EFD5                     STR_1:
  1189  00EFD5  45                 	db	69	;'E'
  1190  00EFD6  52                 	db	82	;'R'
  1191  00EFD7  52                 	db	82	;'R'
  1192  00EFD8  4F                 	db	79	;'O'
  1193  00EFD9  52                 	db	82	;'R'
  1194  00EFDA  00                 	db	0
  1195  00EFDB                     STR_2:
  1196  00EFDB  2B                 	db	43
  1197  00EFDC  49                 	db	73	;'I'
  1198  00EFDD  50                 	db	80	;'P'
  1199  00EFDE  44                 	db	68	;'D'
  1200  00EFDF  00                 	db	0
  1201  00EFE0                     STR_28:
  1202  00EFE0  22                 	db	34
  1203  00EFE1  2C                 	db	44
  1204  00EFE2  22                 	db	34
  1205  00EFE3  00                 	db	0
  1206  00EFE4                     STR_7:
  1207  00EFE4  54                 	db	84	;'T'
  1208  00EFE5  43                 	db	67	;'C'
  1209  00EFE6  50                 	db	80	;'P'
  1210  00EFE7  00                 	db	0
  1211  00EFE8                     STR_6:
  1212  00EFE8  55                 	db	85	;'U'
  1213  00EFE9  44                 	db	68	;'D'
  1214  00EFEA  50                 	db	80	;'P'
  1215  00EFEB  00                 	db	0
  1216  00EFEC                     STR_46:
  1217  00EFEC  22                 	db	34
  1218  00EFED  2C                 	db	44
  1219  00EFEE  00                 	db	0
  1220  00EFEF                     STR_63:
  1221  00EFEF  2D                 	db	45
  1222  00EFF0  00                 	db	0
  1223  00EFF1                     STR_59:
  1224  00EFF1  2E                 	db	46
  1225  00EFF2  00                 	db	0
  1226  00EFF3                     STR_33:
  1227  00EFF3  30                 	db	48	;'0'
  1228  00EFF4  00                 	db	0
  1229  00EFF5                     STR_22:
  1230  00EFF5  31                 	db	49	;'1'
  1231  00EFF6  00                 	db	0
  1232  00EFF7  32                 	db	50	;'2'
  1233  00EFF8  00                 	db	0
  1234  00EFF9  33                 	db	51	;'3'
  1235  00EFFA  00                 	db	0
  1236  00EFFB                     STR_18:
  1237  00EFFB  3E                 	db	62	;'>'
  1238  00EFFC  00                 	db	0
  1239  0000                     
  1240                           ; #config settings
  1241  00EFFD  00                 	db	0	; dummy byte at the end
  1242  0000                     
  1243                           	psect	cinit
  1244  00C824                     __pcinit:
  1245                           	opt stack 0
  1246  00C824                     start_initialization:
  1247                           	opt stack 0
  1248  00C824                     __initialization:
  1249                           	opt stack 0
  1250                           
  1251                           ; Initialize objects allocated to BANK2 (72 bytes)
  1252                           ; load TBLPTR registers with __pidataBANK2
  1253  00C824  0E8E               	movlw	low __pidataBANK2
  1254  00C826  6EF6               	movwf	tblptrl,c
  1255  00C828  0EA8               	movlw	high __pidataBANK2
  1256  00C82A  6EF7               	movwf	tblptrh,c
  1257  00C82C  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1258  00C82E  6EF8               	movwf	tblptru,c
  1259  00C830  EE02  F08B         	lfsr	0,__pdataBANK2
  1260  00C834  EE10 F048          	lfsr	1,72
  1261  00C838                     copy_data0:
  1262  00C838  0009               	tblrd		*+
  1263  00C83A  CFF5 FFEE          	movff	tablat,postinc0
  1264  00C83E  50E5               	movf	postdec1,w,c
  1265  00C840  50E1               	movf	fsr1l,w,c
  1266  00C842  E1FA               	bnz	copy_data0
  1267                           
  1268                           ; Initialize objects allocated to BANK1 (58 bytes)
  1269                           ; load TBLPTR registers with __pidataBANK1
  1270  00C844  0EAC               	movlw	low __pidataBANK1
  1271  00C846  6EF6               	movwf	tblptrl,c
  1272  00C848  0EA5               	movlw	high __pidataBANK1
  1273  00C84A  6EF7               	movwf	tblptrh,c
  1274  00C84C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1275  00C84E  6EF8               	movwf	tblptru,c
  1276  00C850  EE01  F0C6         	lfsr	0,__pdataBANK1
  1277  00C854  EE10 F03A          	lfsr	1,58
  1278  00C858                     copy_data1:
  1279  00C858  0009               	tblrd		*+
  1280  00C85A  CFF5 FFEE          	movff	tablat,postinc0
  1281  00C85E  50E5               	movf	postdec1,w,c
  1282  00C860  50E1               	movf	fsr1l,w,c
  1283  00C862  E1FA               	bnz	copy_data1
  1284                           
  1285                           ; Clear objects allocated to BANK13 (200 bytes)
  1286  00C864  EE0D  F000         	lfsr	0,__pbssBANK13
  1287  00C868  0EC8               	movlw	200
  1288  00C86A                     clear_0:
  1289  00C86A  6AEE               	clrf	postinc0,c
  1290  00C86C  06E8               	decf	wreg,f,c
  1291  00C86E  E1FD               	bnz	clear_0
  1292                           
  1293                           ; Clear objects allocated to BANK12 (250 bytes)
  1294  00C870  EE0C  F000         	lfsr	0,__pbssBANK12
  1295  00C874  0EFA               	movlw	250
  1296  00C876                     clear_1:
  1297  00C876  6AEE               	clrf	postinc0,c
  1298  00C878  06E8               	decf	wreg,f,c
  1299  00C87A  E1FD               	bnz	clear_1
  1300                           
  1301                           ; Clear objects allocated to BANK11 (250 bytes)
  1302  00C87C  EE0B  F000         	lfsr	0,__pbssBANK11
  1303  00C880  0EFA               	movlw	250
  1304  00C882                     clear_2:
  1305  00C882  6AEE               	clrf	postinc0,c
  1306  00C884  06E8               	decf	wreg,f,c
  1307  00C886  E1FD               	bnz	clear_2
  1308                           
  1309                           ; Clear objects allocated to BANK10 (200 bytes)
  1310  00C888  EE0A  F000         	lfsr	0,__pbssBANK10
  1311  00C88C  0EC8               	movlw	200
  1312  00C88E                     clear_3:
  1313  00C88E  6AEE               	clrf	postinc0,c
  1314  00C890  06E8               	decf	wreg,f,c
  1315  00C892  E1FD               	bnz	clear_3
  1316                           
  1317                           ; Clear objects allocated to BANK9 (103 bytes)
  1318  00C894  EE09  F000         	lfsr	0,__pbssBANK9
  1319  00C898  0E67               	movlw	103
  1320  00C89A                     clear_4:
  1321  00C89A  6AEE               	clrf	postinc0,c
  1322  00C89C  06E8               	decf	wreg,f,c
  1323  00C89E  E1FD               	bnz	clear_4
  1324                           
  1325                           ; Clear objects allocated to BANK8 (200 bytes)
  1326  00C8A0  EE08  F000         	lfsr	0,__pbssBANK8
  1327  00C8A4  0EC8               	movlw	200
  1328  00C8A6                     clear_5:
  1329  00C8A6  6AEE               	clrf	postinc0,c
  1330  00C8A8  06E8               	decf	wreg,f,c
  1331  00C8AA  E1FD               	bnz	clear_5
  1332                           
  1333                           ; Clear objects allocated to BANK7 (253 bytes)
  1334  00C8AC  EE07  F000         	lfsr	0,__pbssBANK7
  1335  00C8B0  0EFD               	movlw	253
  1336  00C8B2                     clear_6:
  1337  00C8B2  6AEE               	clrf	postinc0,c
  1338  00C8B4  06E8               	decf	wreg,f,c
  1339  00C8B6  E1FD               	bnz	clear_6
  1340                           
  1341                           ; Clear objects allocated to BANK6 (200 bytes)
  1342  00C8B8  EE06  F000         	lfsr	0,__pbssBANK6
  1343  00C8BC  0EC8               	movlw	200
  1344  00C8BE                     clear_7:
  1345  00C8BE  6AEE               	clrf	postinc0,c
  1346  00C8C0  06E8               	decf	wreg,f,c
  1347  00C8C2  E1FD               	bnz	clear_7
  1348                           
  1349                           ; Clear objects allocated to BANK5 (220 bytes)
  1350  00C8C4  EE05  F000         	lfsr	0,__pbssBANK5
  1351  00C8C8  0EDC               	movlw	220
  1352  00C8CA                     clear_8:
  1353  00C8CA  6AEE               	clrf	postinc0,c
  1354  00C8CC  06E8               	decf	wreg,f,c
  1355  00C8CE  E1FD               	bnz	clear_8
  1356                           
  1357                           ; Clear objects allocated to BANK3 (250 bytes)
  1358  00C8D0  EE03  F000         	lfsr	0,__pbssBANK3
  1359  00C8D4  0EFA               	movlw	250
  1360  00C8D6                     clear_9:
  1361  00C8D6  6AEE               	clrf	postinc0,c
  1362  00C8D8  06E8               	decf	wreg,f,c
  1363  00C8DA  E1FD               	bnz	clear_9
  1364                           
  1365                           ; Clear objects allocated to BANK2 (139 bytes)
  1366  00C8DC  EE02  F000         	lfsr	0,__pbssBANK2
  1367  00C8E0  0E8B               	movlw	139
  1368  00C8E2                     clear_10:
  1369  00C8E2  6AEE               	clrf	postinc0,c
  1370  00C8E4  06E8               	decf	wreg,f,c
  1371  00C8E6  E1FD               	bnz	clear_10
  1372                           
  1373                           ; Clear objects allocated to BANK1 (198 bytes)
  1374  00C8E8  EE01  F000         	lfsr	0,__pbssBANK1
  1375  00C8EC  0EC6               	movlw	198
  1376  00C8EE                     clear_11:
  1377  00C8EE  6AEE               	clrf	postinc0,c
  1378  00C8F0  06E8               	decf	wreg,f,c
  1379  00C8F2  E1FD               	bnz	clear_11
  1380                           
  1381                           ; Clear objects allocated to BANK4 (164 bytes)
  1382  00C8F4  EE04  F040         	lfsr	0,__pbssBANK4
  1383  00C8F8  0EA4               	movlw	164
  1384  00C8FA                     clear_12:
  1385  00C8FA  6AEE               	clrf	postinc0,c
  1386  00C8FC  06E8               	decf	wreg,f,c
  1387  00C8FE  E1FD               	bnz	clear_12
  1388                           
  1389                           ; Clear objects allocated to BANK0 (16 bytes)
  1390  00C900  EE00  F0F0         	lfsr	0,__pbssBANK0
  1391  00C904  0E10               	movlw	16
  1392  00C906                     clear_13:
  1393  00C906  6AEE               	clrf	postinc0,c
  1394  00C908  06E8               	decf	wreg,f,c
  1395  00C90A  E1FD               	bnz	clear_13
  1396                           
  1397                           ; Clear objects allocated to COMRAM (31 bytes)
  1398  00C90C  EE00  F03E         	lfsr	0,__pbssCOMRAM
  1399  00C910  0E1F               	movlw	31
  1400  00C912                     clear_14:
  1401  00C912  6AEE               	clrf	postinc0,c
  1402  00C914  06E8               	decf	wreg,f,c
  1403  00C916  E1FD               	bnz	clear_14
  1404  00C918                     end_of_initialization:
  1405                           	opt stack 0
  1406  00C918                     __end_of__initialization:
  1407                           	opt stack 0
  1408  00C918  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1409  00C91A  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1410  00C91C  0100               	movlb	0
  1411  00C91E  EF6B  F04F         	goto	_main	;jump to C main() function
  1412                           tblptru	equ	0xFF8
  1413                           tblptrh	equ	0xFF7
  1414                           tblptrl	equ	0xFF6
  1415                           tablat	equ	0xFF5
  1416                           postinc0	equ	0xFEE
  1417                           wreg	equ	0xFE8
  1418                           postdec1	equ	0xFE5
  1419                           fsr1l	equ	0xFE1
  1420                           
  1421                           	psect	bssCOMRAM
  1422  00003E                     __pbssCOMRAM:
  1423                           	opt stack 0
  1424  00003E                     _pBDTEntryIn:
  1425                           	opt stack 0
  1426  00003E                     	ds	6
  1427  000044                     _CDCDataOutHandle:
  1428                           	opt stack 0
  1429  000044                     	ds	2
  1430  000046                     _cdc_tx_len:
  1431                           	opt stack 0
  1432  000046                     	ds	1
  1433  000047                     _cdc_rx_len:
  1434                           	opt stack 0
  1435  000047                     	ds	1
  1436  000048                     _USBStatusStageEnabledFlag2:
  1437                           	opt stack 0
  1438  000048                     	ds	1
  1439  000049                     _USBStatusStageEnabledFlag1:
  1440                           	opt stack 0
  1441  000049                     	ds	1
  1442  00004A                     _USBStatusStageTimeoutCounter:
  1443                           	opt stack 0
  1444  00004A                     	ds	1
  1445  00004B                     _endpoint_number:
  1446                           	opt stack 0
  1447  00004B                     	ds	1
  1448  00004C                     _controlTransferState:
  1449                           	opt stack 0
  1450  00004C                     	ds	1
  1451  00004D                     _shortPacketStatus:
  1452                           	opt stack 0
  1453  00004D                     	ds	1
  1454  00004E                     _I2cComSts:
  1455                           	opt stack 0
  1456  00004E                     	ds	1
  1457  00004F                     _LenLocal:
  1458                           	opt stack 0
  1459  00004F                     	ds	1
  1460  000050                     _IdLocal:
  1461                           	opt stack 0
  1462  000050                     	ds	1
  1463  000051                     _ModeLocal:
  1464                           	opt stack 0
  1465  000051                     	ds	1
  1466  000052                     _USBActiveConfiguration:
  1467                           	opt stack 0
  1468  000052                     	ds	1
  1469  000053                     _I2cReadDataEvt:
  1470                           	opt stack 0
  1471  000053                     	ds	1
  1472  000054                     _I2cWriteDataEvt:
  1473                           	opt stack 0
  1474  000054                     	ds	1
  1475  000055                     _WifiReceiveData:
  1476                           	opt stack 0
  1477  000055                     	ds	1
  1478  000056                     _WifiSendData:
  1479                           	opt stack 0
  1480  000056                     	ds	1
  1481  000057                     _StartConnection:
  1482                           	opt stack 0
  1483  000057                     	ds	1
  1484  000058                     _WifiReceiveNetData:
  1485                           	opt stack 0
  1486  000058                     	ds	1
  1487  000059                     _NewWifiPacketParser:
  1488                           	opt stack 0
  1489  000059                     	ds	1
  1490  00005A                     _NewWifiPacket:
  1491                           	opt stack 0
  1492  00005A                     	ds	1
  1493  00005B                     _StartWifiModem:
  1494                           	opt stack 0
  1495  00005B                     	ds	1
  1496  00005C                     _NewWifiUartData:
  1497                           	opt stack 0
  1498  00005C                     	ds	1
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           postinc0	equ	0xFEE
  1504                           wreg	equ	0xFE8
  1505                           postdec1	equ	0xFE5
  1506                           fsr1l	equ	0xFE1
  1507                           
  1508                           	psect	bssBANK0
  1509  0000F0                     __pbssBANK0:
  1510                           	opt stack 0
  1511  0000F0                     _inPipes:
  1512                           	opt stack 0
  1513  0000F0                     	ds	6
  1514  0000F6                     _pBDTEntryEP0OutNext:
  1515                           	opt stack 0
  1516  0000F6                     	ds	2
  1517  0000F8                     _pBDTEntryEP0OutCurrent:
  1518                           	opt stack 0
  1519  0000F8                     	ds	2
  1520  0000FA                     Terminal@PackageLen:
  1521                           	opt stack 0
  1522  0000FA                     	ds	1
  1523  0000FB                     _cdc_trf_state:
  1524                           	opt stack 0
  1525  0000FB                     	ds	1
  1526  0000FC                     _USBDeferStatusStagePacket:
  1527                           	opt stack 0
  1528  0000FC                     	ds	1
  1529  0000FD                     _USBDeviceState:
  1530                           	opt stack 0
  1531  0000FD                     	ds	1
  1532  0000FE                     _SystemState:
  1533                           	opt stack 0
  1534  0000FE                     	ds	1
  1535  0000FF                     _USTATcopy:
  1536                           	opt stack 0
  1537  0000FF                     	ds	1
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           postdec1	equ	0xFE5
  1545                           fsr1l	equ	0xFE1
  1546                           
  1547                           	psect	bssBANK1
  1548  000100                     __pbssBANK1:
  1549                           	opt stack 0
  1550  000100                     _cdc_notice:
  1551                           	opt stack 0
  1552  000100                     	ds	10
  1553  00010A                     _Rtcm_SystemDate:
  1554                           	opt stack 0
  1555  00010A                     	ds	8
  1556  000112                     _outPipes:
  1557                           	opt stack 0
  1558  000112                     	ds	8
  1559  00011A                     _Rtcm_RtccAlarm:
  1560                           	opt stack 0
  1561  00011A                     	ds	6
  1562  000120                     _pBDTEntryOut:
  1563                           	opt stack 0
  1564  000120                     	ds	6
  1565  000126                     _BaudRateGen:
  1566                           	opt stack 0
  1567  000126                     	ds	4
  1568  00012A                     _USB1msTickCount:
  1569                           	opt stack 0
  1570  00012A                     	ds	4
  1571  00012E                     _OsTmr_OsTickCounter:
  1572                           	opt stack 0
  1573  00012E                     	ds	4
  1574  000132                     _pCDCDst:
  1575                           	opt stack 0
  1576  000132                     	ds	3
  1577  000135                     _pCDCSrc:
  1578                           	opt stack 0
  1579  000135                     	ds	3
  1580  000138                     _ep_data_out:
  1581                           	opt stack 0
  1582  000138                     	ds	3
  1583  00013B                     _ep_data_in:
  1584                           	opt stack 0
  1585  00013B                     	ds	3
  1586  00013E                     	ds	2
  1587  000140                     _CDCDataInHandle:
  1588                           	opt stack 0
  1589  000140                     	ds	2
  1590  000142                     _pDst:
  1591                           	opt stack 0
  1592  000142                     	ds	2
  1593  000144                     UpdateSchFlag@InterruptCounter:
  1594                           	opt stack 0
  1595  000144                     	ds	2
  1596  000146                     MdmWifi_StartWifiModemSm@Counter:
  1597                           	opt stack 0
  1598  000146                     	ds	2
  1599  000148                     _RxLen:
  1600                           	opt stack 0
  1601  000148                     	ds	2
  1602  00014A                     _MdmWifi_UartRxCounter:
  1603                           	opt stack 0
  1604  00014A                     	ds	2
  1605  00014C                     _ExtInt1IsrCallback:
  1606                           	opt stack 0
  1607  00014C                     	ds	2
  1608  00014E                     _ExtInt0IsrCallback:
  1609                           	opt stack 0
  1610  00014E                     	ds	2
  1611  000150                     _RtccIsrCallback:
  1612                           	opt stack 0
  1613  000150                     	ds	2
  1614  000152                     _Tmr4IsrCallback:
  1615                           	opt stack 0
  1616  000152                     	ds	2
  1617  000154                     _Tmr2IsrCallback:
  1618                           	opt stack 0
  1619  000154                     	ds	2
  1620  000156                     Term_MainSm@TermMainSmState:
  1621                           	opt stack 0
  1622  000156                     	ds	1
  1623  000157                     Terminal@FormatOption:
  1624                           	opt stack 0
  1625  000157                     	ds	1
  1626  000158                     Terminal@SlaveAddr:
  1627                           	opt stack 0
  1628  000158                     	ds	1
  1629  000159                     Terminal@TermState:
  1630                           	opt stack 0
  1631  000159                     	ds	1
  1632  00015A                     WifiTerminal@FirstRecFlag:
  1633                           	opt stack 0
  1634  00015A                     	ds	1
  1635  00015B                     _control_signal_bitmap:
  1636                           	opt stack 0
  1637  00015B                     	ds	1
  1638  00015C                     _cdc_mem_type:
  1639                           	opt stack 0
  1640  00015C                     	ds	1
  1641  00015D                     _USBTicksSinceSuspendEnd:
  1642                           	opt stack 0
  1643  00015D                     	ds	1
  1644  00015E                     _USBDeferOUTDataStagePackets:
  1645                           	opt stack 0
  1646  00015E                     	ds	1
  1647  00015F                     _USBDeferINDataStagePackets:
  1648                           	opt stack 0
  1649  00015F                     	ds	1
  1650  000160                     _BothEP0OutUOWNsSet:
  1651                           	opt stack 0
  1652  000160                     	ds	1
  1653  000161                     _USBBusIsSuspended:
  1654                           	opt stack 0
  1655  000161                     	ds	1
  1656  000162                     _RemoteWakeup:
  1657                           	opt stack 0
  1658  000162                     	ds	1
  1659  000163                     I2cSendMsgSm@I2cComState:
  1660                           	opt stack 0
  1661  000163                     	ds	1
  1662  000164                     _I2cBusStatus:
  1663                           	opt stack 0
  1664  000164                     	ds	1
  1665  000165                     ReceiveDataSm@WifiReceiveDataState:
  1666                           	opt stack 0
  1667  000165                     	ds	1
  1668  000166                     SendDataSm@WifiSendDataState:
  1669                           	opt stack 0
  1670  000166                     	ds	1
  1671  000167                     StartConnectionSm@StartConnState:
  1672                           	opt stack 0
  1673  000167                     	ds	1
  1674  000168                     _ConnStatus:
  1675                           	opt stack 0
  1676  000168                     	ds	1
  1677  000169                     _PortLocal:
  1678                           	opt stack 0
  1679  000169                     	ds	1
  1680  00016A                     _ProtocolLocal:
  1681                           	opt stack 0
  1682  00016A                     	ds	1
  1683  00016B                     MdmWifiGetUartData@Counter:
  1684                           	opt stack 0
  1685  00016B                     	ds	1
  1686  00016C                     MdmWifiGetUartData@WifiUartGetDataState:
  1687                           	opt stack 0
  1688  00016C                     	ds	1
  1689  00016D                     MdmWifi_StartWifiModemSm@WifiModeSmState:
  1690                           	opt stack 0
  1691  00016D                     	ds	1
  1692  00016E                     _WifiMdmStatus:
  1693                           	opt stack 0
  1694  00016E                     	ds	1
  1695  00016F                     Uart_Uart1RxIsr@UartRxData:
  1696                           	opt stack 0
  1697  00016F                     	ds	1
  1698  000170                     I2c_ReadData@ReadStatus:
  1699                           	opt stack 0
  1700  000170                     	ds	1
  1701  000171                     I2c_ReadData@TentativeCounter:
  1702                           	opt stack 0
  1703  000171                     	ds	1
  1704  000172                     I2c_ReadData@DataCounter:
  1705                           	opt stack 0
  1706  000172                     	ds	1
  1707  000173                     I2c_ReadData@I2cReadState:
  1708                           	opt stack 0
  1709  000173                     	ds	1
  1710  000174                     I2c_WriteData@WriteStatus:
  1711                           	opt stack 0
  1712  000174                     	ds	1
  1713  000175                     I2c_WriteData@TentativeCounter:
  1714                           	opt stack 0
  1715  000175                     	ds	1
  1716  000176                     I2c_WriteData@I2cNextState:
  1717                           	opt stack 0
  1718  000176                     	ds	1
  1719  000177                     I2c_WriteData@I2cWriteState:
  1720                           	opt stack 0
  1721  000177                     	ds	1
  1722  000178                     _UartConfig:
  1723                           	opt stack 0
  1724  000178                     	ds	21
  1725  00018D                     _I2cConfig:
  1726                           	opt stack 0
  1727  00018D                     	ds	10
  1728  000197                     _dummy_encapsulated_cmd_response:
  1729                           	opt stack 0
  1730  000197                     	ds	8
  1731  00019F                     _line_coding:
  1732                           	opt stack 0
  1733  00019F                     	ds	7
  1734  0001A6                     _I2cRxPacket:
  1735                           	opt stack 0
  1736  0001A6                     	ds	6
  1737  0001AC                     _I2cTxPacket:
  1738                           	opt stack 0
  1739  0001AC                     	ds	5
  1740  0001B1                     Terminal@Addr:
  1741                           	opt stack 0
  1742  0001B1                     	ds	4
  1743  0001B5                     Terminal@Len:
  1744                           	opt stack 0
  1745  0001B5                     	ds	4
  1746  0001B9                     _AlCfg:
  1747                           	opt stack 0
  1748  0001B9                     	ds	4
  1749  0001BD                     _RtcConfig:
  1750                           	opt stack 0
  1751  0001BD                     	ds	4
  1752  0001C1                     _USBAlternateInterface:
  1753                           	opt stack 0
  1754  0001C1                     	ds	2
  1755  0001C3                     _AlarmEvent:
  1756                           	opt stack 0
  1757  0001C3                     	ds	1
  1758  0001C4                     I2cDummyTx@DummyBuffer:
  1759                           	opt stack 0
  1760  0001C4                     	ds	1
  1761  0001C5                     _WifiGenericError:
  1762                           	opt stack 0
  1763  0001C5                     	ds	1
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           postinc0	equ	0xFEE
  1769                           wreg	equ	0xFE8
  1770                           postdec1	equ	0xFE5
  1771                           fsr1l	equ	0xFE1
  1772                           
  1773                           	psect	dataBANK1
  1774  0001C6                     __pdataBANK1:
  1775                           	opt stack 0
  1776  0001C6                     	ds	10
  1777  0001D0                     	ds	8
  1778  0001D8                     	ds	8
  1779  0001E0                     Terminal@EchoOption:
  1780                           	opt stack 0
  1781  0001E0                     	ds	1
  1782  0001E1                     _MainSystemTimebaseFlag:
  1783                           	opt stack 0
  1784  0001E1                     	ds	1
  1785  0001E2                     Term_MainSm@TermDelay:
  1786                           	opt stack 0
  1787  0001E2                     	ds	10
  1788  0001EC                     Led_MainTask@LedTimer1:
  1789                           	opt stack 0
  1790  0001EC                     	ds	10
  1791  0001F6                     SendDataSm@SwTimer:
  1792                           	opt stack 0
  1793  0001F6                     	ds	10
  1794                           tblptru	equ	0xFF8
  1795                           tblptrh	equ	0xFF7
  1796                           tblptrl	equ	0xFF6
  1797                           tablat	equ	0xFF5
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           postdec1	equ	0xFE5
  1801                           fsr1l	equ	0xFE1
  1802                           
  1803                           	psect	bssBANK2
  1804  000200                     __pbssBANK2:
  1805                           	opt stack 0
  1806  000200                     _cdc_data_rx:
  1807                           	opt stack 0
  1808  000200                     	ds	64
  1809  000240                     Terminal@TermRxBuffer:
  1810                           	opt stack 0
  1811  000240                     	ds	50
  1812  000272                     _AddressLocal:
  1813                           	opt stack 0
  1814  000272                     	ds	25
  1815                           tblptru	equ	0xFF8
  1816                           tblptrh	equ	0xFF7
  1817                           tblptrl	equ	0xFF6
  1818                           tablat	equ	0xFF5
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           postdec1	equ	0xFE5
  1822                           fsr1l	equ	0xFE1
  1823                           
  1824                           	psect	dataBANK2
  1825  00028B                     __pdataBANK2:
  1826                           	opt stack 0
  1827  00028B                     _TaskTable:
  1828                           	opt stack 0
  1829  00028B                     	ds	72
  1830                           tblptru	equ	0xFF8
  1831                           tblptrh	equ	0xFF7
  1832                           tblptrl	equ	0xFF6
  1833                           tablat	equ	0xFF5
  1834                           postinc0	equ	0xFEE
  1835                           wreg	equ	0xFE8
  1836                           postdec1	equ	0xFE5
  1837                           fsr1l	equ	0xFE1
  1838                           
  1839                           	psect	bssBANK3
  1840  000300                     __pbssBANK3:
  1841                           	opt stack 0
  1842  000300                     Terminal@UsbRxBuffer:
  1843                           	opt stack 0
  1844  000300                     	ds	200
  1845  0003C8                     Terminal@TermTxBuffer:
  1846                           	opt stack 0
  1847  0003C8                     	ds	50
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           postinc0	equ	0xFEE
  1853                           wreg	equ	0xFE8
  1854                           postdec1	equ	0xFE5
  1855                           fsr1l	equ	0xFE1
  1856                           
  1857                           	psect	bssBANK4
  1858  000440                     __pbssBANK4:
  1859                           	opt stack 0
  1860  000440                     Terminal@Payload:
  1861                           	opt stack 0
  1862  000440                     	ds	100
  1863  0004A4                     _cdc_data_tx:
  1864                           	opt stack 0
  1865  0004A4                     	ds	64
  1866                           tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           postinc0	equ	0xFEE
  1871                           wreg	equ	0xFE8
  1872                           postdec1	equ	0xFE5
  1873                           fsr1l	equ	0xFE1
  1874                           
  1875                           	psect	bssBANK5
  1876  000500                     __pbssBANK5:
  1877                           	opt stack 0
  1878  000500                     _OsAlarms:
  1879                           	opt stack 0
  1880  000500                     	ds	220
  1881                           tblptru	equ	0xFF8
  1882                           tblptrh	equ	0xFF7
  1883                           tblptrl	equ	0xFF6
  1884                           tablat	equ	0xFF5
  1885                           postinc0	equ	0xFEE
  1886                           wreg	equ	0xFE8
  1887                           postdec1	equ	0xFE5
  1888                           fsr1l	equ	0xFE1
  1889                           
  1890                           	psect	bssBANK6
  1891  000600                     __pbssBANK6:
  1892                           	opt stack 0
  1893  000600                     _MdmWifi_UartTxBuffer:
  1894                           	opt stack 0
  1895  000600                     	ds	100
  1896  000664                     _BufferLocal:
  1897                           	opt stack 0
  1898  000664                     	ds	100
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           postinc0	equ	0xFEE
  1904                           wreg	equ	0xFE8
  1905                           postdec1	equ	0xFE5
  1906                           fsr1l	equ	0xFE1
  1907                           
  1908                           	psect	bssBANK7
  1909  000700                     __pbssBANK7:
  1910                           	opt stack 0
  1911  000700                     _WifiRxPacket:
  1912                           	opt stack 0
  1913  000700                     	ds	253
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           postdec1	equ	0xFE5
  1921                           fsr1l	equ	0xFE1
  1922                           
  1923                           	psect	bssBANK8
  1924  000800                     __pbssBANK8:
  1925                           	opt stack 0
  1926  000800                     WifiTerminal@UartBuffer:
  1927                           	opt stack 0
  1928  000800                     	ds	200
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           postdec1	equ	0xFE5
  1936                           fsr1l	equ	0xFE1
  1937                           
  1938                           	psect	bssBANK9
  1939  000900                     __pbssBANK9:
  1940                           	opt stack 0
  1941  000900                     _WifiTxPacket:
  1942                           	opt stack 0
  1943  000900                     	ds	103
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1l	equ	0xFE1
  1952                           
  1953                           	psect	bssBANK10
  1954  000A00                     __pbssBANK10:
  1955                           	opt stack 0
  1956  000A00                     WifiTerminal@UsbBuffer:
  1957                           	opt stack 0
  1958  000A00                     	ds	200
  1959                           tblptru	equ	0xFF8
  1960                           tblptrh	equ	0xFF7
  1961                           tblptrl	equ	0xFF6
  1962                           tablat	equ	0xFF5
  1963                           postinc0	equ	0xFEE
  1964                           wreg	equ	0xFE8
  1965                           postdec1	equ	0xFE5
  1966                           fsr1l	equ	0xFE1
  1967                           
  1968                           	psect	bssBANK11
  1969  000B00                     __pbssBANK11:
  1970                           	opt stack 0
  1971  000B00                     _MdmWifi_UartRxBuffer:
  1972                           	opt stack 0
  1973  000B00                     	ds	250
  1974                           tblptru	equ	0xFF8
  1975                           tblptrh	equ	0xFF7
  1976                           tblptrl	equ	0xFF6
  1977                           tablat	equ	0xFF5
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           postdec1	equ	0xFE5
  1981                           fsr1l	equ	0xFE1
  1982                           
  1983                           	psect	bssBANK12
  1984  000C00                     __pbssBANK12:
  1985                           	opt stack 0
  1986  000C00                     _RxBuffer:
  1987                           	opt stack 0
  1988  000C00                     	ds	250
  1989                           tblptru	equ	0xFF8
  1990                           tblptrh	equ	0xFF7
  1991                           tblptrl	equ	0xFF6
  1992                           tablat	equ	0xFF5
  1993                           postinc0	equ	0xFEE
  1994                           wreg	equ	0xFE8
  1995                           postdec1	equ	0xFE5
  1996                           fsr1l	equ	0xFE1
  1997                           
  1998                           	psect	bssBANK13
  1999  000D00                     __pbssBANK13:
  2000                           	opt stack 0
  2001  000D00                     	ds	200
  2002                           tblptru	equ	0xFF8
  2003                           tblptrh	equ	0xFF7
  2004                           tblptrl	equ	0xFF6
  2005                           tablat	equ	0xFF5
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           postdec1	equ	0xFE5
  2009                           fsr1l	equ	0xFE1
  2010                           
  2011                           	psect	cstackBANK0
  2012  000060                     __pcstackBANK0:
  2013                           	opt stack 0
  2014  000060                     ??_isdigit:
  2015  000060                     ??_isspace:
  2016  000060                     ??_isupper:
  2017  000060                     ??_Rtcc_GetRtccValue:
  2018  000060                     ??_UartTxBufferStatus:
  2019  000060                     ??_USBStdGetDscHandler:
  2020  000060                     ??_USBStdGetStatusHandler:
  2021  000060                     ?_USBTransferOnePacket:
  2022                           	opt stack 0
  2023  000060                     ?_strlen:
  2024                           	opt stack 0
  2025  000060                     ?_strchr:
  2026                           	opt stack 0
  2027  000060                     ?___wmul:
  2028                           	opt stack 0
  2029  000060                     ?___awdiv:
  2030                           	opt stack 0
  2031  000060                     ?___awmod:
  2032                           	opt stack 0
  2033  000060                     ?___lwdiv:
  2034                           	opt stack 0
  2035  000060                     ?___lwmod:
  2036                           	opt stack 0
  2037  000060                     ?_GetOsTickCounter:
  2038                           	opt stack 0
  2039  000060                     ?___lmul:
  2040                           	opt stack 0
  2041  000060                     Irq_InitIntController@GlobalInt_HighPInt:
  2042                           	opt stack 0
  2043  000060                     SetAckStatus@AckSts:
  2044                           	opt stack 0
  2045  000060                     WriteByte@Byte:
  2046                           	opt stack 0
  2047  000060                     ReadByte@Byte:
  2048                           	opt stack 0
  2049  000060                     RtccIrqInit@Priority:
  2050                           	opt stack 0
  2051  000060                     Rtcc_SetRtcStatus@Status:
  2052                           	opt stack 0
  2053  000060                     TmrBInit@Prescaler:
  2054                           	opt stack 0
  2055  000060                     Tmr_TmrBIrqSet@Priority:
  2056                           	opt stack 0
  2057  000060                     Tmr_StartTmr@TmrNumb:
  2058                           	opt stack 0
  2059  000060                     UartWriteByte@ByteToWrite:
  2060                           	opt stack 0
  2061  000060                     USBTransferOnePacket@dir:
  2062                           	opt stack 0
  2063  000060                     USBConfigureEndpoint@direction:
  2064                           	opt stack 0
  2065  000060                     USBCtrlTrfTxService@byteToSend:
  2066                           	opt stack 0
  2067  000060                     USBCtrlTrfRxService@i:
  2068                           	opt stack 0
  2069  000060                     toupper@c:
  2070                           	opt stack 0
  2071  000060                     Mcu_StartSystemPll@PllStartupCounter:
  2072                           	opt stack 0
  2073  000060                     Rtcc_AlarmConfig@AlarmConfig:
  2074                           	opt stack 0
  2075  000060                     Rtcc_RegisterRtcIsrCallback@IsrCallback:
  2076                           	opt stack 0
  2077  000060                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2078                           	opt stack 0
  2079  000060                     GenerateEvt@Event:
  2080                           	opt stack 0
  2081  000060                     ReceiveEvt@Event:
  2082                           	opt stack 0
  2083  000060                     StringCopy@SourceStr:
  2084                           	opt stack 0
  2085  000060                     ClearBuffer@Buffer:
  2086                           	opt stack 0
  2087  000060                     ___wmul@multiplier:
  2088                           	opt stack 0
  2089  000060                     ___awdiv@dividend:
  2090                           	opt stack 0
  2091  000060                     ___awmod@dividend:
  2092                           	opt stack 0
  2093  000060                     ___lwdiv@dividend:
  2094                           	opt stack 0
  2095  000060                     ___lwmod@dividend:
  2096                           	opt stack 0
  2097  000060                     memcpy@d1:
  2098                           	opt stack 0
  2099  000060                     memset@p1:
  2100                           	opt stack 0
  2101  000060                     strcat@to:
  2102                           	opt stack 0
  2103  000060                     strcpy@to:
  2104                           	opt stack 0
  2105  000060                     strlen@s:
  2106                           	opt stack 0
  2107  000060                     strchr@ptr:
  2108                           	opt stack 0
  2109  000060                     ___lmul@multiplier:
  2110                           	opt stack 0
  2111                           
  2112                           ; 4 bytes @ 0x0
  2113  000060                     	ds	1
  2114  000061                     ??_USBConfigureEndpoint:
  2115  000061                     Irq_InitIntController@PerInt_LowPInt:
  2116                           	opt stack 0
  2117  000061                     Rtcc_GetRtccValue@RtccPtrVal:
  2118                           	opt stack 0
  2119  000061                     TmrBInit@Postscaler:
  2120                           	opt stack 0
  2121  000061                     Tmr_TmrBIrqSet@TmrIrqSts:
  2122                           	opt stack 0
  2123  000061                     UartWriteByte@Module:
  2124                           	opt stack 0
  2125  000061                     UartTxBufferStatus@Module:
  2126                           	opt stack 0
  2127  000061                     USBCtrlTrfRxService@byteToRead:
  2128                           	opt stack 0
  2129  000061                     USBCtrlTrfInHandler@lastDTS:
  2130                           	opt stack 0
  2131  000061                     _isdigit$5592:
  2132                           	opt stack 0
  2133  000061                     _isspace$5860:
  2134                           	opt stack 0
  2135  000061                     _isupper$5863:
  2136                           	opt stack 0
  2137  000061                     I2c_WriteData@WritePacket:
  2138                           	opt stack 0
  2139  000061                     Rtcc_RtcConfig@RtcConfig:
  2140                           	opt stack 0
  2141  000061                     USBTransferOnePacket@data:
  2142                           	opt stack 0
  2143  000061                     USBStdGetStatusHandler@p:
  2144                           	opt stack 0
  2145                           
  2146                           ; 2 bytes @ 0x1
  2147  000061                     	ds	1
  2148  000062                     ??_strlen:
  2149  000062                     ??_Rtcc_AlarmConfig:
  2150  000062                     ??_TmrBInit:
  2151  000062                     Irq_InitIntController@IntPriorityEn:
  2152                           	opt stack 0
  2153  000062                     Rtcc_GetRtccValue@RetValue:
  2154                           	opt stack 0
  2155  000062                     Tmr_TmrBIrqSet@TmrNumb:
  2156                           	opt stack 0
  2157  000062                     UartTxBufferStatus@TxBufferStatus:
  2158                           	opt stack 0
  2159  000062                     GenerateEvt@EventStatus:
  2160                           	opt stack 0
  2161  000062                     isdigit@c:
  2162                           	opt stack 0
  2163  000062                     isspace@c:
  2164                           	opt stack 0
  2165  000062                     isupper@c:
  2166                           	opt stack 0
  2167  000062                     Rtcm_SetAlarmAction@Action:
  2168                           	opt stack 0
  2169  000062                     StringCopy@DestStr:
  2170                           	opt stack 0
  2171  000062                     ClearBuffer@Len:
  2172                           	opt stack 0
  2173  000062                     ___wmul@multiplicand:
  2174                           	opt stack 0
  2175  000062                     ___awdiv@divisor:
  2176                           	opt stack 0
  2177  000062                     ___awmod@divisor:
  2178                           	opt stack 0
  2179  000062                     ___lwdiv@divisor:
  2180                           	opt stack 0
  2181  000062                     ___lwmod@divisor:
  2182                           	opt stack 0
  2183  000062                     memcpy@s1:
  2184                           	opt stack 0
  2185  000062                     memset@c:
  2186                           	opt stack 0
  2187  000062                     strcpy@from:
  2188                           	opt stack 0
  2189  000062                     strchr@chr:
  2190                           	opt stack 0
  2191  000062                     strcat@from:
  2192                           	opt stack 0
  2193                           
  2194                           ; 3 bytes @ 0x2
  2195  000062                     	ds	1
  2196  000063                     ??_isalpha:
  2197  000063                     ??_I2c_WriteData:
  2198  000063                     ??_Rtcc_RtcConfig:
  2199  000063                     Rtcc_GetRtccValue@RegValue:
  2200                           	opt stack 0
  2201  000063                     TmrBInit@TmrNumb:
  2202                           	opt stack 0
  2203  000063                     ReceiveEvt@EventStatus:
  2204                           	opt stack 0
  2205  000063                     USBTransferOnePacket@len:
  2206                           	opt stack 0
  2207  000063                     I2c_ReadData@ReadPacket:
  2208                           	opt stack 0
  2209  000063                     Uart_WriteString@StringToWrite:
  2210                           	opt stack 0
  2211  000063                     I2cSlv_SendI2cMsg@TxBuffer:
  2212                           	opt stack 0
  2213  000063                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2214                           	opt stack 0
  2215                           
  2216                           ; 2 bytes @ 0x3
  2217  000063                     	ds	1
  2218  000064                     ?_GetElapsedTime:
  2219                           	opt stack 0
  2220  000064                     ?_Rtcm_GetRtccDate:
  2221                           	opt stack 0
  2222  000064                     I2cSlv_I2cReadMsgSts@Result:
  2223                           	opt stack 0
  2224  000064                     USBTransferOnePacket@ep:
  2225                           	opt stack 0
  2226  000064                     ___awdiv@counter:
  2227                           	opt stack 0
  2228  000064                     ___awmod@counter:
  2229                           	opt stack 0
  2230  000064                     ___lwmod@counter:
  2231                           	opt stack 0
  2232  000064                     _isalpha$5857:
  2233                           	opt stack 0
  2234  000064                     OsTmr_StartTimer@Timer:
  2235                           	opt stack 0
  2236  000064                     StringCopy@Len:
  2237                           	opt stack 0
  2238  000064                     ClearBuffer@Index:
  2239                           	opt stack 0
  2240  000064                     ___wmul@product:
  2241                           	opt stack 0
  2242  000064                     ___lwdiv@quotient:
  2243                           	opt stack 0
  2244  000064                     memcpy@n:
  2245                           	opt stack 0
  2246  000064                     memset@n:
  2247                           	opt stack 0
  2248  000064                     strcpy@cp:
  2249                           	opt stack 0
  2250  000064                     strlen@cp:
  2251                           	opt stack 0
  2252  000064                     GetElapsedTime@StartTime:
  2253                           	opt stack 0
  2254  000064                     ___lmul@multiplicand:
  2255                           	opt stack 0
  2256                           
  2257                           ; 4 bytes @ 0x4
  2258  000064                     	ds	1
  2259  000065                     ??_I2c_ReadData:
  2260  000065                     Uart_WriteString@Module:
  2261                           	opt stack 0
  2262  000065                     I2cSlv_SendI2cMsg@SlaveAddr:
  2263                           	opt stack 0
  2264  000065                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2265                           	opt stack 0
  2266  000065                     USBConfigureEndpoint@EPNum:
  2267                           	opt stack 0
  2268  000065                     ___awdiv@sign:
  2269                           	opt stack 0
  2270  000065                     ___awmod@sign:
  2271                           	opt stack 0
  2272  000065                     isalpha@c:
  2273                           	opt stack 0
  2274  000065                     USBTransferOnePacket@handle:
  2275                           	opt stack 0
  2276  000065                     strcat@cp:
  2277                           	opt stack 0
  2278                           
  2279                           ; 2 bytes @ 0x5
  2280  000065                     	ds	1
  2281  000066                     ?_atoi:
  2282                           	opt stack 0
  2283  000066                     ?_strncmp:
  2284                           	opt stack 0
  2285  000066                     I2cSlv_SendI2cMsg@DataLenght:
  2286                           	opt stack 0
  2287  000066                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2288                           	opt stack 0
  2289  000066                     ___lwdiv@counter:
  2290                           	opt stack 0
  2291  000066                     OsAlrm_SetOsAlarm@OsAlarmId:
  2292                           	opt stack 0
  2293  000066                     MdmWifi_SendWifiMsg@TxBuffer:
  2294                           	opt stack 0
  2295  000066                     USBConfigureEndpoint@handle:
  2296                           	opt stack 0
  2297  000066                     putUSBUSART@data:
  2298                           	opt stack 0
  2299  000066                     StringCopy@Index:
  2300                           	opt stack 0
  2301  000066                     atoi@s:
  2302                           	opt stack 0
  2303  000066                     ___awdiv@quotient:
  2304                           	opt stack 0
  2305  000066                     memcpy@d:
  2306                           	opt stack 0
  2307  000066                     memset@p:
  2308                           	opt stack 0
  2309  000066                     strncmp@s1:
  2310                           	opt stack 0
  2311  000066                     OsTmr_StartTimer@Timeout:
  2312                           	opt stack 0
  2313                           
  2314                           ; 4 bytes @ 0x6
  2315  000066                     	ds	1
  2316  000067                     I2cSlv_SendI2cMsg@TxSts:
  2317                           	opt stack 0
  2318  000067                     I2cSlv_ReceiveI2cMsg@RxSts:
  2319                           	opt stack 0
  2320  000067                     CDCTxService@i:
  2321                           	opt stack 0
  2322  000067                     getsUSBUSART@buffer:
  2323                           	opt stack 0
  2324  000067                     utoa@buf:
  2325                           	opt stack 0
  2326                           
  2327                           ; 2 bytes @ 0x7
  2328  000067                     	ds	1
  2329  000068                     ??_atoi:
  2330  000068                     ??_GetElapsedTime:
  2331  000068                     Rtcc_SetRtccValue@Value:
  2332                           	opt stack 0
  2333  000068                     USBDeviceInit@i:
  2334                           	opt stack 0
  2335  000068                     USBEnableEndpoint@options:
  2336                           	opt stack 0
  2337  000068                     putUSBUSART@length:
  2338                           	opt stack 0
  2339  000068                     CDCTxService@byte_to_send:
  2340                           	opt stack 0
  2341  000068                     MdmWifi_ReceiveWifiMsg@RxBuffer:
  2342                           	opt stack 0
  2343  000068                     memcpy@s:
  2344                           	opt stack 0
  2345  000068                     strncmp@s2:
  2346                           	opt stack 0
  2347  000068                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  2348                           	opt stack 0
  2349  000068                     ___lmul@product:
  2350                           	opt stack 0
  2351                           
  2352                           ; 4 bytes @ 0x8
  2353  000068                     	ds	1
  2354  000069                     ??_Rtcc_SetRtccValue:
  2355  000069                     getsUSBUSART@len:
  2356                           	opt stack 0
  2357  000069                     USBEnableEndpoint@p:
  2358                           	opt stack 0
  2359  000069                     utoa@val:
  2360                           	opt stack 0
  2361                           
  2362                           ; 2 bytes @ 0x9
  2363  000069                     	ds	1
  2364  00006A                     atoi@sign:
  2365                           	opt stack 0
  2366  00006A                     memcpy@tmp:
  2367                           	opt stack 0
  2368  00006A                     MdmWifi_ReceiveWifiMsg@DataLenght:
  2369                           	opt stack 0
  2370  00006A                     strncmp@len:
  2371                           	opt stack 0
  2372                           
  2373                           ; 2 bytes @ 0xA
  2374  00006A                     	ds	1
  2375  00006B                     Rtcc_SetRtccValue@RtccPtrVal:
  2376                           	opt stack 0
  2377  00006B                     USBEnableEndpoint@ep:
  2378                           	opt stack 0
  2379  00006B                     atoi@a:
  2380                           	opt stack 0
  2381  00006B                     utoa@base:
  2382                           	opt stack 0
  2383                           
  2384                           ; 2 bytes @ 0xB
  2385  00006B                     	ds	1
  2386  00006C                     ??_Rtcm_GetRtccDate:
  2387  00006C                     ??_strncmp:
  2388  00006C                     ?_strtol:
  2389                           	opt stack 0
  2390  00006C                     ?___lldiv:
  2391                           	opt stack 0
  2392  00006C                     MdmWifi_ReceiveWifiMsg@Ret:
  2393                           	opt stack 0
  2394  00006C                     OsAlrm_SetOsAlarm@AlarmCallback:
  2395                           	opt stack 0
  2396  00006C                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2397                           	opt stack 0
  2398  00006C                     strtol@s:
  2399                           	opt stack 0
  2400  00006C                     ___lldiv@dividend:
  2401                           	opt stack 0
  2402  00006C                     Rtcm_SetRtccDate@Date:
  2403                           	opt stack 0
  2404                           
  2405                           ; 8 bytes @ 0xC
  2406  00006C                     	ds	1
  2407  00006D                     utoa@v:
  2408                           	opt stack 0
  2409  00006D                     Rtcm_GetRtccDate@LocalDate:
  2410                           	opt stack 0
  2411                           
  2412                           ; 8 bytes @ 0xD
  2413  00006D                     	ds	1
  2414  00006E                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2415                           	opt stack 0
  2416  00006E                     strtol@endptr:
  2417                           	opt stack 0
  2418                           
  2419                           ; 2 bytes @ 0xE
  2420  00006E                     	ds	1
  2421  00006F                     ?_strstr:
  2422                           	opt stack 0
  2423  00006F                     utoa@c:
  2424                           	opt stack 0
  2425  00006F                     strstr@s1:
  2426                           	opt stack 0
  2427                           
  2428                           ; 2 bytes @ 0xF
  2429  00006F                     	ds	1
  2430  000070                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2431                           	opt stack 0
  2432  000070                     itoa@buf:
  2433                           	opt stack 0
  2434  000070                     strtol@base:
  2435                           	opt stack 0
  2436  000070                     GetElapsedTime@TimeValue:
  2437                           	opt stack 0
  2438  000070                     ___lldiv@divisor:
  2439                           	opt stack 0
  2440                           
  2441                           ; 4 bytes @ 0x10
  2442  000070                     	ds	1
  2443  000071                     strstr@s2:
  2444                           	opt stack 0
  2445                           
  2446                           ; 2 bytes @ 0x11
  2447  000071                     	ds	1
  2448  000072                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2449  000072                     ??_strtol:
  2450  000072                     itoa@val:
  2451                           	opt stack 0
  2452                           
  2453                           ; 2 bytes @ 0x12
  2454  000072                     	ds	1
  2455  000073                     StartConnectionSm@Data:
  2456                           	opt stack 0
  2457                           
  2458                           ; 100 bytes @ 0x13
  2459  000073                     	ds	1
  2460  000074                     ??_USBStdFeatureReqHandler:
  2461  000074                     USBStdSetCfgHandler@i:
  2462                           	opt stack 0
  2463  000074                     itoa@base:
  2464                           	opt stack 0
  2465  000074                     GetElapsedTime@CurrentTimestamp:
  2466                           	opt stack 0
  2467  000074                     ___lldiv@quotient:
  2468                           	opt stack 0
  2469                           
  2470                           ; 4 bytes @ 0x14
  2471  000074                     	ds	1
  2472  000075                     USBStdFeatureReqHandler@pUEP:
  2473                           	opt stack 0
  2474                           
  2475                           ; 2 bytes @ 0x15
  2476  000075                     	ds	1
  2477  000076                     strtol@sign:
  2478                           	opt stack 0
  2479  000076                     itoa@cp:
  2480                           	opt stack 0
  2481                           
  2482                           ; 2 bytes @ 0x16
  2483  000076                     	ds	1
  2484  000077                     USBStdFeatureReqHandler@current_ep_data:
  2485                           	opt stack 0
  2486  000077                     strtol@a:
  2487                           	opt stack 0
  2488                           
  2489                           ; 4 bytes @ 0x17
  2490  000077                     	ds	1
  2491  000078                     ___lldiv@counter:
  2492                           	opt stack 0
  2493  000078                     OsTmr_GetTimerStatus@Timer:
  2494                           	opt stack 0
  2495  000078                     USBStdFeatureReqHandler@p:
  2496                           	opt stack 0
  2497                           
  2498                           ; 2 bytes @ 0x18
  2499  000078                     	ds	1
  2500  000079                     Tmr_TmrBPrSet@IntFreqHz:
  2501                           	opt stack 0
  2502  000079                     SetUartBaudRate@UartConfig:
  2503                           	opt stack 0
  2504  000079                     SetBaudRate@DesiredI2cBusClockHz:
  2505                           	opt stack 0
  2506                           
  2507                           ; 4 bytes @ 0x19
  2508  000079                     	ds	1
  2509  00007A                     ??_USBCtrlEPService:
  2510  00007A                     
  2511                           ; 1 bytes @ 0x1A
  2512  00007A                     	ds	1
  2513  00007B                     Tmr_TmrBPrSet@Prescaler:
  2514                           	opt stack 0
  2515  00007B                     USBDeviceTasks@i:
  2516                           	opt stack 0
  2517  00007B                     strtol@c:
  2518                           	opt stack 0
  2519                           
  2520                           ; 1 bytes @ 0x1B
  2521  00007B                     	ds	1
  2522  00007C                     ??_Terminal:
  2523  00007C                     Tmr_TmrBPrSet@Postscaler:
  2524                           	opt stack 0
  2525  00007C                     SetUartBaudRate@Module:
  2526                           	opt stack 0
  2527                           
  2528                           ; 1 bytes @ 0x1C
  2529  00007C                     	ds	1
  2530  00007D                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  2531                           	opt stack 0
  2532  00007D                     SetUartBaudRate@BaudRateRegister:
  2533                           	opt stack 0
  2534  00007D                     SetBaudRate@McuClockHz:
  2535                           	opt stack 0
  2536                           
  2537                           ; 4 bytes @ 0x1D
  2538  00007D                     	ds	1
  2539  00007E                     Tmr_TmrBPrSet@TmrNumb:
  2540                           	opt stack 0
  2541  00007E                     Terminal@ReceivedBytes:
  2542                           	opt stack 0
  2543  00007E                     SendDataSm@Data:
  2544                           	opt stack 0
  2545                           
  2546                           ; 103 bytes @ 0x1E
  2547  00007E                     	ds	1
  2548  00007F                     SetUartBaudRate@DivisionFactor:
  2549                           	opt stack 0
  2550  00007F                     Terminal@Index:
  2551                           	opt stack 0
  2552  00007F                     Tmr_TmrBPrSet@Divisor:
  2553                           	opt stack 0
  2554                           
  2555                           ; 4 bytes @ 0x1F
  2556  00007F                     	ds	1
  2557  000080                     Uart_InitUartModule@UartConfig:
  2558                           	opt stack 0
  2559  000080                     Term_MainSm@Data:
  2560                           	opt stack 0
  2561                           
  2562                           ; 50 bytes @ 0x20
  2563  000080                     	ds	1
  2564  000081                     ??_SetBaudRate:
  2565                           
  2566                           ; 1 bytes @ 0x21
  2567  000081                     	ds	1
  2568  000082                     ??_Uart_InitUartModule:
  2569                           
  2570                           ; 1 bytes @ 0x22
  2571  000082                     	ds	1
  2572  000083                     Tmr_TmrBConfig@TmrBConfig:
  2573                           	opt stack 0
  2574                           
  2575                           ; 2 bytes @ 0x23
  2576  000083                     	ds	1
  2577  000084                     Uart_InitUartModule@Module:
  2578                           	opt stack 0
  2579                           
  2580                           ; 1 bytes @ 0x24
  2581  000084                     	ds	1
  2582  000085                     I2c_InitI2cModule@I2cConfig:
  2583                           	opt stack 0
  2584                           
  2585                           ; 2 bytes @ 0x25
  2586  000085                     	ds	1
  2587  000086                     Tmr_TmrBConfig@TmrNumb:
  2588                           	opt stack 0
  2589                           
  2590                           ; 1 bytes @ 0x26
  2591  000086                     	ds	1
  2592  000087                     ??_I2c_InitI2cModule:
  2593  000087                     InitSchedTimer@TmrBConfig:
  2594                           	opt stack 0
  2595                           
  2596                           ; 7 bytes @ 0x27
  2597  000087                     	ds	2
  2598  000089                     
  2599                           ; 1 bytes @ 0x29
  2600  000089                     	ds	5
  2601  00008E                     
  2602                           ; 1 bytes @ 0x2E
  2603  00008E                     	ds	36
  2604  0000B2                     Term_MainSm@FwkMajorStr:
  2605                           	opt stack 0
  2606                           
  2607                           ; 4 bytes @ 0x52
  2608  0000B2                     	ds	4
  2609  0000B6                     Term_MainSm@FwkMinorStr:
  2610                           	opt stack 0
  2611                           
  2612                           ; 4 bytes @ 0x56
  2613  0000B6                     	ds	4
  2614  0000BA                     Term_MainSm@FwkBuildStr:
  2615                           	opt stack 0
  2616                           
  2617                           ; 4 bytes @ 0x5A
  2618  0000BA                     	ds	4
  2619  0000BE                     Term_MainSm@FwkBuildDayStr:
  2620                           	opt stack 0
  2621                           
  2622                           ; 4 bytes @ 0x5E
  2623  0000BE                     	ds	4
  2624  0000C2                     Term_MainSm@FwkBuildMonthStr:
  2625                           	opt stack 0
  2626                           
  2627                           ; 4 bytes @ 0x62
  2628  0000C2                     	ds	4
  2629  0000C6                     Term_MainSm@FwkBuildYearStr:
  2630                           	opt stack 0
  2631                           
  2632                           ; 4 bytes @ 0x66
  2633  0000C6                     	ds	4
  2634  0000CA                     
  2635                           ; 1 bytes @ 0x6A
  2636  0000CA                     	ds	13
  2637  0000D7                     StartConnectionSm@PortAscii:
  2638                           	opt stack 0
  2639                           
  2640                           ; 4 bytes @ 0x77
  2641  0000D7                     	ds	4
  2642  0000DB                     StartConnectionSm@DataIndex:
  2643                           	opt stack 0
  2644                           
  2645                           ; 1 bytes @ 0x7B
  2646  0000DB                     	ds	1
  2647  0000DC                     StartConnectionSm@IdAscii:
  2648                           	opt stack 0
  2649                           
  2650                           ; 1 bytes @ 0x7C
  2651  0000DC                     	ds	9
  2652  0000E5                     SendDataSm@LenAscii:
  2653                           	opt stack 0
  2654                           
  2655                           ; 4 bytes @ 0x85
  2656  0000E5                     	ds	4
  2657  0000E9                     SendDataSm@DataIndex:
  2658                           	opt stack 0
  2659                           
  2660                           ; 1 bytes @ 0x89
  2661  0000E9                     	ds	1
  2662  0000EA                     SendDataSm@IdAscii:
  2663                           	opt stack 0
  2664                           
  2665                           ; 1 bytes @ 0x8A
  2666  0000EA                     	ds	1
  2667  0000EB                     ??_InitializeTasks:
  2668  0000EB                     ??_ScheduleTasks:
  2669                           
  2670                           ; 1 bytes @ 0x8B
  2671  0000EB                     	ds	2
  2672  0000ED                     InitializeTasks@ActiveTaskIndex:
  2673                           	opt stack 0
  2674                           
  2675                           ; 1 bytes @ 0x8D
  2676  0000ED                     	ds	2
  2677  0000EF                     ScheduleTasks@ActiveTaskIndex:
  2678                           	opt stack 0
  2679                           
  2680                           ; 1 bytes @ 0x8F
  2681  0000EF                     	ds	1
  2682  0000F0                     tblptru	equ	0xFF8
  2683                           tblptrh	equ	0xFF7
  2684                           tblptrl	equ	0xFF6
  2685                           tablat	equ	0xFF5
  2686                           postinc0	equ	0xFEE
  2687                           wreg	equ	0xFE8
  2688                           postdec1	equ	0xFE5
  2689                           fsr1l	equ	0xFE1
  2690                           
  2691                           ; 1 bytes @ 0x90
  2692                           
  2693                           	psect	cstackCOMRAM
  2694  000001                     __pcstackCOMRAM:
  2695                           	opt stack 0
  2696  000001                     i2GenerateEvt@Event:
  2697                           	opt stack 0
  2698                           
  2699                           ; 2 bytes @ 0x0
  2700  000001                     	ds	2
  2701  000003                     i2GenerateEvt@EventStatus:
  2702                           	opt stack 0
  2703                           
  2704                           ; 1 bytes @ 0x2
  2705  000003                     	ds	1
  2706  000004                     ??_Alarm:
  2707  000004                     Uart_MdmWifiReadService@UartData:
  2708                           	opt stack 0
  2709                           
  2710                           ; 1 bytes @ 0x3
  2711  000004                     	ds	1
  2712  000005                     ??_HighPriorityIsr:
  2713  000005                     
  2714                           ; 1 bytes @ 0x4
  2715  000005                     	ds	18
  2716  000017                     ?i1___wmul:
  2717                           	opt stack 0
  2718  000017                     OsAlrm_ClearOsAlarm@OsAlarmId:
  2719                           	opt stack 0
  2720  000017                     i1GenerateEvt@Event:
  2721                           	opt stack 0
  2722  000017                     i1___wmul@multiplier:
  2723                           	opt stack 0
  2724                           
  2725                           ; 2 bytes @ 0x16
  2726  000017                     	ds	2
  2727  000019                     i1GenerateEvt@EventStatus:
  2728                           	opt stack 0
  2729  000019                     i1___wmul@multiplicand:
  2730                           	opt stack 0
  2731                           
  2732                           ; 2 bytes @ 0x18
  2733  000019                     	ds	1
  2734  00001A                     i1I2cSlv_SendI2cMsg@TxBuffer:
  2735                           	opt stack 0
  2736                           
  2737                           ; 2 bytes @ 0x19
  2738  00001A                     	ds	1
  2739  00001B                     i1___wmul@product:
  2740                           	opt stack 0
  2741                           
  2742                           ; 2 bytes @ 0x1A
  2743  00001B                     	ds	1
  2744  00001C                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  2745                           	opt stack 0
  2746                           
  2747                           ; 1 bytes @ 0x1B
  2748  00001C                     	ds	1
  2749  00001D                     i1I2cSlv_SendI2cMsg@DataLenght:
  2750                           	opt stack 0
  2751                           
  2752                           ; 1 bytes @ 0x1C
  2753  00001D                     	ds	1
  2754  00001E                     i1I2cSlv_SendI2cMsg@TxSts:
  2755                           	opt stack 0
  2756                           
  2757                           ; 1 bytes @ 0x1D
  2758  00001E                     	ds	1
  2759  00001F                     ??_OsAlrm_ProcessOsAlarms:
  2760  00001F                     
  2761                           ; 1 bytes @ 0x1E
  2762  00001F                     	ds	8
  2763  000027                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  2764                           	opt stack 0
  2765                           
  2766                           ; 2 bytes @ 0x26
  2767  000027                     	ds	2
  2768  000029                     ??_LowPriorityIsr:
  2769                           
  2770                           ; 1 bytes @ 0x28
  2771  000029                     	ds	21
  2772                           tblptru	equ	0xFF8
  2773                           tblptrh	equ	0xFF7
  2774                           tblptrl	equ	0xFF6
  2775                           tablat	equ	0xFF5
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           postdec1	equ	0xFE5
  2779                           fsr1l	equ	0xFE1
  2780                           
  2781 ;;
  2782 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2783 ;;
  2784 ;; *************** function _main *****************
  2785 ;; Defined at:
  2786 ;;		line 58 in file "../Source/c/00_Main/main.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  2   14[None  ] short 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels required when called:   23
  2806 ;; This function calls:
  2807 ;;		_Sch_MainScheduler
  2808 ;;		_SystemInit
  2809 ;; This function is called by:
  2810 ;;		Startup code after reset
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text0
  2815  009ED6                     __ptext0:
  2816                           	opt stack 0
  2817  009ED6                     _main:
  2818                           	opt stack 8
  2819                           
  2820                           ;main.c: 61: SystemInit();
  2821                           
  2822                           ;incstack = 0
  2823  009ED6  ECE5  F051         	call	_SystemInit	;wreg free
  2824                           
  2825                           ;main.c: 64: Sch_MainScheduler();
  2826  009EDA  EC36  F050         	call	_Sch_MainScheduler	;wreg free
  2827                           
  2828                           ;main.c: 67: return 0;
  2829                           ;	Return value of _main is never used
  2830  009EDE  EF66  F010         	goto	start
  2831  009EE2                     __end_of_main:
  2832                           	opt stack 0
  2833                           tblptru	equ	0xFF8
  2834                           tblptrh	equ	0xFF7
  2835                           tblptrl	equ	0xFF6
  2836                           tablat	equ	0xFF5
  2837                           postinc0	equ	0xFEE
  2838                           wreg	equ	0xFE8
  2839                           postdec1	equ	0xFE5
  2840                           fsr1l	equ	0xFE1
  2841                           
  2842 ;; *************** function _SystemInit *****************
  2843 ;; Defined at:
  2844 ;;		line 121 in file "../Source/c/01_Hal/01_Sys/sys_init.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2862 ;;Total ram usage:        0 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:   15
  2865 ;; This function calls:
  2866 ;;		_InitSchedTimer
  2867 ;;		_Irq_InitIntController
  2868 ;;		_Mcu_ConfigExtInt
  2869 ;;		_Mcu_StartSystemPll
  2870 ;;		_Pm_DsReleasePinControl
  2871 ;;		_Tmr_RegisterTmr2IsrCallback
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text1
  2878  00A3CA                     __ptext1:
  2879                           	opt stack 0
  2880  00A3CA                     _SystemInit:
  2881                           	opt stack 15
  2882                           
  2883                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  2884                           
  2885                           ;incstack = 0
  2886  00A3CA  EC07  F010         	call	_Pm_DsReleasePinControl	;wreg free
  2887                           
  2888                           ;sys_init.c: 126: Mcu_StartSystemPll();
  2889  00A3CE  EC45  F050         	call	_Mcu_StartSystemPll	;wreg free
  2890                           
  2891                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  2892  00A3D2  0E01               	movlw	1
  2893  00A3D4  0100               	movlb	0	; () banked
  2894  00A3D6  6F60               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  2895  00A3D8  0E01               	movlw	1
  2896  00A3DA  6F61               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  2897  00A3DC  0E01               	movlw	1
  2898  00A3DE  EC5C  F051         	call	_Irq_InitIntController
  2899                           
  2900                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  2901  00A3E2  0EE2               	movlw	low _Sch_SchmIntService
  2902  00A3E4  0100               	movlb	0	; () banked
  2903  00A3E6  6F60               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  2904  00A3E8  0E9E               	movlw	high _Sch_SchmIntService
  2905  00A3EA  6F61               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  2906  00A3EC  EC66  F04F         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  2907                           
  2908                           ;sys_init.c: 132: InitSchedTimer();
  2909  00A3F0  EC9E  F051         	call	_InitSchedTimer	;wreg free
  2910                           
  2911                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  2912  00A3F4  ECAE  F04F         	call	_Mcu_ConfigExtInt	;wreg free
  2913  00A3F8  0012               	return		;funcret
  2914  00A3FA                     __end_of_SystemInit:
  2915                           	opt stack 0
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           postinc0	equ	0xFEE
  2921                           wreg	equ	0xFE8
  2922                           postdec1	equ	0xFE5
  2923                           fsr1l	equ	0xFE1
  2924                           
  2925 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  2926 ;; Defined at:
  2927 ;;		line 329 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  IsrCallback     2    0[BANK0 ] PTR FTN()void 
  2930 ;;		 -> Sch_SchmIntService(1), 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2942 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2945 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;Total ram usage:        2 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:   11
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_SystemInit
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text2
  2957  009ECC                     __ptext2:
  2958                           	opt stack 0
  2959  009ECC                     _Tmr_RegisterTmr2IsrCallback:
  2960                           	opt stack 18
  2961                           
  2962                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  2963                           
  2964                           ;incstack = 0
  2965  009ECC  C060  F154         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  2966  009ED0  C061  F155         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  2967  009ED4  0012               	return		;funcret
  2968  009ED6                     __end_of_Tmr_RegisterTmr2IsrCallback:
  2969                           	opt stack 0
  2970                           tblptru	equ	0xFF8
  2971                           tblptrh	equ	0xFF7
  2972                           tblptrl	equ	0xFF6
  2973                           tablat	equ	0xFF5
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           postdec1	equ	0xFE5
  2977                           fsr1l	equ	0xFE1
  2978                           
  2979 ;; *************** function _Pm_DsReleasePinControl *****************
  2980 ;; Defined at:
  2981 ;;		line 166 in file "../Source/c/01_Hal/02_Drv/pm_drv.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		None
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:   11
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_SystemInit
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text3
  3010  00200E                     __ptext3:
  3011                           	opt stack 0
  3012  00200E                     _Pm_DsReleasePinControl:
  3013                           	opt stack 18
  3014                           
  3015                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3016                           
  3017                           ;incstack = 0
  3018  00200E  010F               	movlb	15	; () banked
  3019  002010  914C               	bcf	76,0,b	;volatile
  3020                           
  3021                           ; BSR set to: 15
  3022  002012  0012               	return		;funcret
  3023  002014                     __end_of_Pm_DsReleasePinControl:
  3024                           	opt stack 0
  3025                           tblptru	equ	0xFF8
  3026                           tblptrh	equ	0xFF7
  3027                           tblptrl	equ	0xFF6
  3028                           tablat	equ	0xFF5
  3029                           postinc0	equ	0xFEE
  3030                           wreg	equ	0xFE8
  3031                           postdec1	equ	0xFE5
  3032                           fsr1l	equ	0xFE1
  3033                           
  3034 ;; *************** function _Mcu_StartSystemPll *****************
  3035 ;; Defined at:
  3036 ;;		line 80 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  PllStartupCo    2    0[BANK0 ] volatile unsigned short 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3051 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;Total ram usage:        2 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:   11
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_SystemInit
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text4
  3065  00A08A                     __ptext4:
  3066                           	opt stack 0
  3067  00A08A                     _Mcu_StartSystemPll:
  3068                           	opt stack 18
  3069                           
  3070                           ;mcu_drv.c: 82: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3071                           
  3072                           ; BSR set to: 15
  3073                           ;incstack = 0
  3074  00A08A  0E03               	movlw	3
  3075  00A08C  0100               	movlb	0	; () banked
  3076  00A08E  6F61               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3077  00A090  0EE8               	movlw	232
  3078  00A092  6F60               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;mcu_drv.c: 85: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3082  00A094  8C9B               	bsf	3995,6,c	;volatile
  3083  00A096                     l9066:
  3084                           
  3085                           ; BSR set to: 0
  3086  00A096  0760               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3087  00A098  A0D8               	btfss	status,0,c
  3088  00A09A  0761               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3089  00A09C  2960               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3090  00A09E  E1FB               	bnz	l9066
  3091  00A0A0  2961               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3092  00A0A2  B4D8               	btfsc	status,2,c
  3093  00A0A4  0012               	return	
  3094  00A0A6  D7F7               	goto	l231
  3095  00A0A8                     __end_of_Mcu_StartSystemPll:
  3096                           	opt stack 0
  3097                           tblptru	equ	0xFF8
  3098                           tblptrh	equ	0xFF7
  3099                           tblptrl	equ	0xFF6
  3100                           tablat	equ	0xFF5
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           postdec1	equ	0xFE5
  3104                           fsr1l	equ	0xFE1
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _Mcu_ConfigExtInt *****************
  3108 ;; Defined at:
  3109 ;;		line 98 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		None
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:   11
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_SystemInit
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text5
  3138  009F5C                     __ptext5:
  3139                           	opt stack 0
  3140  009F5C                     _Mcu_ConfigExtInt:
  3141                           	opt stack 18
  3142                           
  3143                           ;mcu_drv.c: 101: TRISBbits.TRISB0 = ((UINT8)(1));
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;incstack = 0
  3147  009F5C  8093               	bsf	3987,0,c	;volatile
  3148                           
  3149                           ;mcu_drv.c: 102: TRISDbits.TRISD3 = ((UINT8)(1));
  3150  009F5E  8695               	bsf	3989,3,c	;volatile
  3151                           
  3152                           ;mcu_drv.c: 105: INTCONbits.INT0IE = 1u;
  3153  009F60  88F2               	bsf	intcon,4,c	;volatile
  3154                           
  3155                           ;mcu_drv.c: 106: INTCON3bits.INT1IE = 1u;
  3156  009F62  86F0               	bsf	intcon3,3,c	;volatile
  3157                           
  3158                           ;mcu_drv.c: 107: INTCON3bits.INT1IP = 1u;
  3159  009F64  8CF0               	bsf	intcon3,6,c	;volatile
  3160                           
  3161                           ;mcu_drv.c: 108: INTCON2bits.INTEDG0 = 0u;
  3162  009F66  9CF1               	bcf	intcon2,6,c	;volatile
  3163                           
  3164                           ;mcu_drv.c: 109: INTCON2bits.INTEDG1 = 0u;
  3165  009F68  9AF1               	bcf	intcon2,5,c	;volatile
  3166  009F6A  0012               	return		;funcret
  3167  009F6C                     __end_of_Mcu_ConfigExtInt:
  3168                           	opt stack 0
  3169                           tblptru	equ	0xFF8
  3170                           tblptrh	equ	0xFF7
  3171                           tblptrl	equ	0xFF6
  3172                           tablat	equ	0xFF5
  3173                           intcon	equ	0xFF2
  3174                           intcon2	equ	0xFF1
  3175                           intcon3	equ	0xFF0
  3176                           postinc0	equ	0xFEE
  3177                           wreg	equ	0xFE8
  3178                           postdec1	equ	0xFE5
  3179                           fsr1l	equ	0xFE1
  3180                           status	equ	0xFD8
  3181                           
  3182 ;; *************** function _Irq_InitIntController *****************
  3183 ;; Defined at:
  3184 ;;		line 75 in file "../Source/c/01_Hal/01_Sys/irq.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  IntPriorityE    1    wreg     enum E7714
  3187 ;;  GlobalInt_Hi    1    0[BANK0 ] unsigned char 
  3188 ;;  PerInt_LowPI    1    1[BANK0 ] unsigned char 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  IntPriorityE    1    2[BANK0 ] enum E7714
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3203 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3204 ;;Total ram usage:        3 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:   11
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_SystemInit
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text6
  3215  00A2B8                     __ptext6:
  3216                           	opt stack 0
  3217  00A2B8                     _Irq_InitIntController:
  3218                           	opt stack 18
  3219                           
  3220                           ;incstack = 0
  3221                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3222  00A2B8  0100               	movlb	0	; () banked
  3223  00A2BA  6F62               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3224                           
  3225                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3226  00A2BC  0100               	movlb	0	; () banked
  3227  00A2BE  B162               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3228  00A2C0  D002               	bra	u7805
  3229  00A2C2  9ED0               	bcf	4048,7,c	;volatile
  3230  00A2C4  D001               	bra	u7806
  3231  00A2C6                     u7805:
  3232  00A2C6  8ED0               	bsf	4048,7,c	;volatile
  3233  00A2C8                     u7806:
  3234                           
  3235                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3236  00A2C8  0100               	movlb	0	; () banked
  3237  00A2CA  B160               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3238  00A2CC  D002               	bra	u7815
  3239  00A2CE  9EF2               	bcf	intcon,7,c	;volatile
  3240  00A2D0  D001               	bra	u7816
  3241  00A2D2                     u7815:
  3242  00A2D2  8EF2               	bsf	intcon,7,c	;volatile
  3243  00A2D4                     u7816:
  3244                           
  3245                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3246  00A2D4  0100               	movlb	0	; () banked
  3247  00A2D6  B161               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3248  00A2D8  D002               	bra	u7825
  3249  00A2DA  9CF2               	bcf	intcon,6,c	;volatile
  3250  00A2DC  D001               	bra	u7826
  3251  00A2DE                     u7825:
  3252  00A2DE  8CF2               	bsf	intcon,6,c	;volatile
  3253  00A2E0                     u7826:
  3254  00A2E0  0012               	return		;funcret
  3255  00A2E2                     __end_of_Irq_InitIntController:
  3256                           	opt stack 0
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           intcon	equ	0xFF2
  3262                           intcon2	equ	0xFF1
  3263                           intcon3	equ	0xFF0
  3264                           postinc0	equ	0xFEE
  3265                           wreg	equ	0xFE8
  3266                           postdec1	equ	0xFE5
  3267                           fsr1l	equ	0xFE1
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function _InitSchedTimer *****************
  3271 ;; Defined at:
  3272 ;;		line 69 in file "../Source/c/01_Hal/01_Sys/sys_init.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  TmrBConfig      7   39[BANK0 ] struct _TmrBConfigType
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3287 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3289 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3290 ;;Total ram usage:        7 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:   14
  3293 ;; This function calls:
  3294 ;;		_Tmr_TmrBConfig
  3295 ;; This function is called by:
  3296 ;;		_SystemInit
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text7
  3301  00A33C                     __ptext7:
  3302                           	opt stack 0
  3303  00A33C                     _InitSchedTimer:
  3304                           	opt stack 15
  3305                           
  3306                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  3307                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  3308                           
  3309                           ;incstack = 0
  3310  00A33C  0E04               	movlw	4
  3311  00A33E  0100               	movlb	0	; () banked
  3312  00A340  6F87               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  3313                           
  3314                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  3315  00A342  0E0C               	movlw	12
  3316  00A344  6F88               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  3317                           
  3318                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  3319  00A346  0E00               	movlw	0
  3320  00A348  6F8A               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  3321                           
  3322                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  3323  00A34A  0E01               	movlw	1
  3324  00A34C  6F89               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  3325                           
  3326                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  3327  00A34E  0E03               	movlw	3
  3328  00A350  6F8C               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  3329  00A352  0EE8               	movlw	232
  3330  00A354  6F8B               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  3331                           
  3332                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  3333  00A356  0E01               	movlw	1
  3334  00A358  6F8D               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  3338  00A35A  0E87               	movlw	low InitSchedTimer@TmrBConfig
  3339  00A35C  6F83               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  3340  00A35E  0E00               	movlw	high InitSchedTimer@TmrBConfig
  3341  00A360  6F84               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  3342  00A362  0E02               	movlw	2
  3343  00A364  EC2E  F060         	call	_Tmr_TmrBConfig
  3344  00A368  0012               	return		;funcret
  3345  00A36A                     __end_of_InitSchedTimer:
  3346                           	opt stack 0
  3347                           tblptru	equ	0xFF8
  3348                           tblptrh	equ	0xFF7
  3349                           tblptrl	equ	0xFF6
  3350                           tablat	equ	0xFF5
  3351                           intcon	equ	0xFF2
  3352                           intcon2	equ	0xFF1
  3353                           intcon3	equ	0xFF0
  3354                           postinc0	equ	0xFEE
  3355                           wreg	equ	0xFE8
  3356                           postdec1	equ	0xFE5
  3357                           fsr1l	equ	0xFE1
  3358                           status	equ	0xFD8
  3359                           
  3360 ;; *************** function _Tmr_TmrBConfig *****************
  3361 ;; Defined at:
  3362 ;;		line 271 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  TmrNumb         1    wreg     unsigned char 
  3365 ;;  TmrBConfig      2   35[BANK0 ] PTR struct _TmrBConfigTy
  3366 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  TmrNumb         1   38[BANK0 ] unsigned char 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3378 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3380 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3381 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3382 ;;Total ram usage:        4 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:   13
  3385 ;; This function calls:
  3386 ;;		_TmrBInit
  3387 ;;		_Tmr_StartTmr
  3388 ;;		_Tmr_TmrBIrqSet
  3389 ;;		_Tmr_TmrBPrSet
  3390 ;; This function is called by:
  3391 ;;		_InitSchedTimer
  3392 ;;		_InitAuxTimer
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text8
  3397  00C05C                     __ptext8:
  3398                           	opt stack 0
  3399  00C05C                     _Tmr_TmrBConfig:
  3400                           	opt stack 15
  3401                           
  3402                           ;incstack = 0
  3403                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  3404  00C05C  0100               	movlb	0	; () banked
  3405  00C05E  6F86               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  3406                           
  3407                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  3408  00C060  C083  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3409  00C064  C084  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3410  00C068  50DF               	movf	indf2,w,c
  3411  00C06A  0100               	movlb	0	; () banked
  3412  00C06C  6F60               	movwf	TmrBInit@Prescaler& (0+255),b
  3413  00C06E  EE20 F001          	lfsr	2,1
  3414  00C072  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3415  00C074  26D9               	addwf	fsr2l,f,c
  3416  00C076  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3417  00C078  22DA               	addwfc	fsr2h,f,c
  3418  00C07A  50DF               	movf	indf2,w,c
  3419  00C07C  6F61               	movwf	TmrBInit@Postscaler& (0+255),b
  3420  00C07E  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3421  00C080  EC6E  F05B         	call	_TmrBInit
  3422                           
  3423                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  3424  00C084  0100               	movlb	0	; () banked
  3425  00C086  EE20 F002          	lfsr	2,2
  3426  00C08A  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3427  00C08C  26D9               	addwf	fsr2l,f,c
  3428  00C08E  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3429  00C090  22DA               	addwfc	fsr2h,f,c
  3430  00C092  04DE               	decf	postinc2,w,c
  3431  00C094  A4D8               	btfss	status,2,c
  3432  00C096  D00E               	goto	l428
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;tmr_drv.c: 277: {
  3436                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  3437  00C098  EE20 F003          	lfsr	2,3
  3438  00C09C  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3439  00C09E  26D9               	addwf	fsr2l,f,c
  3440  00C0A0  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3441  00C0A2  22DA               	addwfc	fsr2h,f,c
  3442  00C0A4  50DF               	movf	indf2,w,c
  3443  00C0A6  6F60               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3444  00C0A8  0E01               	movlw	1
  3445  00C0AA  6F61               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3446  00C0AC  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3447  00C0AE  EC91  F054         	call	_Tmr_TmrBIrqSet
  3448                           
  3449                           ;tmr_drv.c: 280: }
  3450  00C0B2  D00E               	goto	l429
  3451  00C0B4                     l428:
  3452                           
  3453                           ;tmr_drv.c: 281: else
  3454                           ;tmr_drv.c: 282: {
  3455                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  3456  00C0B4  0100               	movlb	0	; () banked
  3457  00C0B6  EE20 F003          	lfsr	2,3
  3458  00C0BA  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3459  00C0BC  26D9               	addwf	fsr2l,f,c
  3460  00C0BE  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3461  00C0C0  22DA               	addwfc	fsr2h,f,c
  3462  00C0C2  50DF               	movf	indf2,w,c
  3463  00C0C4  6F60               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3464  00C0C6  0E00               	movlw	0
  3465  00C0C8  6F61               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3466  00C0CA  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3467  00C0CC  EC91  F054         	call	_Tmr_TmrBIrqSet
  3468  00C0D0                     l429:
  3469                           
  3470                           ;tmr_drv.c: 285: }
  3471                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  3472  00C0D0  0100               	movlb	0	; () banked
  3473  00C0D2  EE20 F004          	lfsr	2,4
  3474  00C0D6  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3475  00C0D8  26D9               	addwf	fsr2l,f,c
  3476  00C0DA  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3477  00C0DC  22DA               	addwfc	fsr2h,f,c
  3478  00C0DE  CFDE F079          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  3479  00C0E2  CFDD F07A          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  3480  00C0E6  C083  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3481  00C0EA  C084  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3482  00C0EE  50DF               	movf	indf2,w,c
  3483  00C0F0  6F7B               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  3484  00C0F2  EE20 F001          	lfsr	2,1
  3485  00C0F6  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3486  00C0F8  26D9               	addwf	fsr2l,f,c
  3487  00C0FA  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3488  00C0FC  22DA               	addwfc	fsr2h,f,c
  3489  00C0FE  50DF               	movf	indf2,w,c
  3490  00C100  6F7C               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3491  00C102  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3492  00C104  EC1D  F063         	call	_Tmr_TmrBPrSet
  3493                           
  3494                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  3495  00C108  0100               	movlb	0	; () banked
  3496  00C10A  EE20 F006          	lfsr	2,6
  3497  00C10E  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3498  00C110  26D9               	addwf	fsr2l,f,c
  3499  00C112  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3500  00C114  22DA               	addwfc	fsr2h,f,c
  3501  00C116  04DE               	decf	postinc2,w,c
  3502  00C118  A4D8               	btfss	status,2,c
  3503  00C11A  0012               	return	
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;tmr_drv.c: 290: {
  3507                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  3508  00C11C  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3509  00C11E  EC74  F050         	call	_Tmr_StartTmr
  3510                           
  3511                           ;tmr_drv.c: 293: }
  3512  00C122  0012               	return	
  3513  00C124                     __end_of_Tmr_TmrBConfig:
  3514                           	opt stack 0
  3515                           tblptru	equ	0xFF8
  3516                           tblptrh	equ	0xFF7
  3517                           tblptrl	equ	0xFF6
  3518                           tablat	equ	0xFF5
  3519                           intcon	equ	0xFF2
  3520                           intcon2	equ	0xFF1
  3521                           intcon3	equ	0xFF0
  3522                           postinc0	equ	0xFEE
  3523                           wreg	equ	0xFE8
  3524                           postdec1	equ	0xFE5
  3525                           fsr1l	equ	0xFE1
  3526                           indf2	equ	0xFDF
  3527                           postinc2	equ	0xFDE
  3528                           postdec2	equ	0xFDD
  3529                           fsr2h	equ	0xFDA
  3530                           fsr2l	equ	0xFD9
  3531                           status	equ	0xFD8
  3532                           
  3533 ;; *************** function _Tmr_TmrBPrSet *****************
  3534 ;; Defined at:
  3535 ;;		line 193 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  TmrNumb         1    wreg     unsigned char 
  3538 ;;  IntFreqHz       2   25[BANK0 ] unsigned short 
  3539 ;;  Prescaler       1   27[BANK0 ] unsigned char 
  3540 ;;  Postscaler      1   28[BANK0 ] unsigned char 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  TmrNumb         1   30[BANK0 ] unsigned char 
  3543 ;;  Divisor         4   31[BANK0 ] unsigned long 
  3544 ;;  TmrBPrCfgSts    1   29[BANK0 ] enum E7730
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      enum E7730
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3554 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;Total ram usage:       10 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:   12
  3561 ;; This function calls:
  3562 ;;		___lldiv
  3563 ;;		___lmul
  3564 ;; This function is called by:
  3565 ;;		_Tmr_TmrBConfig
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text9
  3570  00C63A                     __ptext9:
  3571                           	opt stack 0
  3572  00C63A                     _Tmr_TmrBPrSet:
  3573                           	opt stack 15
  3574                           
  3575                           ;incstack = 0
  3576                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  3577  00C63A  0100               	movlb	0	; () banked
  3578  00C63C  6F7E               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  3579                           
  3580                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  3581                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  3582  00C63E  0E00               	movlw	0
  3583  00C640  0100               	movlb	0	; () banked
  3584  00C642  6F7F               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  3585  00C644  0E00               	movlw	0
  3586  00C646  6F80               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  3587  00C648  0E00               	movlw	0
  3588  00C64A  6F81               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  3589  00C64C  0E00               	movlw	0
  3590  00C64E  6F82               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  3594  00C650  517B               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  3595  00C652  037C               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3596  00C654  CFF3 F060          	movff	prodl,___lmul@multiplier
  3597  00C658  CFF4 F061          	movff	prodh,___lmul@multiplier+1
  3598  00C65C  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
  3599  00C65E  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
  3600  00C660  C079  F064         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  3601  00C664  C07A  F065         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  3602  00C668  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
  3603  00C66A  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
  3604  00C66C  EC06  F056         	call	___lmul	;wreg free
  3605  00C670  C060  F07F         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  3606  00C674  C061  F080         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  3607  00C678  C062  F081         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  3608  00C67C  C063  F082         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  3609                           
  3610                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  3611  00C680  0E00               	movlw	0
  3612  00C682  0100               	movlb	0	; () banked
  3613  00C684  6F6C               	movwf	___lldiv@dividend& (0+255),b
  3614  00C686  0E1B               	movlw	27
  3615  00C688  6F6D               	movwf	(___lldiv@dividend+1)& (0+255),b
  3616  00C68A  0EB7               	movlw	183
  3617  00C68C  6F6E               	movwf	(___lldiv@dividend+2)& (0+255),b
  3618  00C68E  0E00               	movlw	0
  3619  00C690  6F6F               	movwf	(___lldiv@dividend+3)& (0+255),b
  3620  00C692  C07F  F070         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3621  00C696  C080  F071         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3622  00C69A  C081  F072         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3623  00C69E  C082  F073         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3624  00C6A2  ECAF  F058         	call	___lldiv	;wreg free
  3625  00C6A6  0100               	movlb	0	; () banked
  3626  00C6A8  516F               	movf	(?___lldiv+3)& (0+255),w,b
  3627  00C6AA  116E               	iorwf	(?___lldiv+2)& (0+255),w,b
  3628  00C6AC  E13A               	bnz	l8304
  3629  00C6AE  056D               	decf	(?___lldiv+1)& (0+255),w,b
  3630  00C6B0  A0D8               	btfss	status,0,c
  3631  00C6B2  D02D               	goto	l411
  3632  00C6B4  D036               	goto	l410
  3633  00C6B6                     
  3634                           ; BSR set to: 0
  3635                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3636                           
  3637                           ; BSR set to: 0
  3638  00C6B6  0E00               	movlw	0
  3639  00C6B8  6F6C               	movwf	___lldiv@dividend& (0+255),b
  3640  00C6BA  0E1B               	movlw	27
  3641  00C6BC  6F6D               	movwf	(___lldiv@dividend+1)& (0+255),b
  3642  00C6BE  0EB7               	movlw	183
  3643  00C6C0  6F6E               	movwf	(___lldiv@dividend+2)& (0+255),b
  3644  00C6C2  0E00               	movlw	0
  3645  00C6C4  6F6F               	movwf	(___lldiv@dividend+3)& (0+255),b
  3646  00C6C6  C07F  F070         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3647  00C6CA  C080  F071         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3648  00C6CE  C081  F072         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3649  00C6D2  C082  F073         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3650  00C6D6  ECAF  F058         	call	___lldiv	;wreg free
  3651  00C6DA  0100               	movlb	0	; () banked
  3652  00C6DC  516C               	movf	?___lldiv& (0+255),w,b
  3653  00C6DE  6ECB               	movwf	4043,c	;volatile
  3654                           
  3655                           ;tmr_drv.c: 210: break;
  3656  00C6E0  D01D               	goto	l413
  3657  00C6E2                     
  3658                           ; BSR set to: 0
  3659                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3660                           
  3661                           ; BSR set to: 0
  3662  00C6E2  0E00               	movlw	0
  3663  00C6E4  6F6C               	movwf	___lldiv@dividend& (0+255),b
  3664  00C6E6  0E1B               	movlw	27
  3665  00C6E8  6F6D               	movwf	(___lldiv@dividend+1)& (0+255),b
  3666  00C6EA  0EB7               	movlw	183
  3667  00C6EC  6F6E               	movwf	(___lldiv@dividend+2)& (0+255),b
  3668  00C6EE  0E00               	movlw	0
  3669  00C6F0  6F6F               	movwf	(___lldiv@dividend+3)& (0+255),b
  3670  00C6F2  C07F  F070         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3671  00C6F6  C080  F071         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3672  00C6FA  C081  F072         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3673  00C6FE  C082  F073         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3674  00C702  ECAF  F058         	call	___lldiv	;wreg free
  3675  00C706  0100               	movlb	0	; () banked
  3676  00C708  516C               	movf	?___lldiv& (0+255),w,b
  3677  00C70A  6E77               	movwf	3959,c	;volatile
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;tmr_drv.c: 219: }
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;tmr_drv.c: 218: break;
  3684                           
  3685                           ;tmr_drv.c: 217: default:
  3686                           
  3687                           ;tmr_drv.c: 215: break;
  3688  00C70C  D007               	goto	l413
  3689  00C70E                     l411:
  3690                           
  3691                           ; BSR set to: 0
  3692                           
  3693                           ; BSR set to: 0
  3694  00C70E  517E               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  3695                           
  3696                           ; Switch size 1, requested type "space"
  3697                           ; Number of cases is 2, Range of values is 2 to 4
  3698                           ; switch strategies available:
  3699                           ; Name         Instructions Cycles
  3700                           ; simple_byte            7     4 (average)
  3701                           ;	Chosen strategy is simple_byte
  3702  00C710  0A02               	xorlw	2	; case 2
  3703  00C712  B4D8               	btfsc	status,2,c
  3704  00C714  D7D0               	goto	l412
  3705  00C716  0A06               	xorlw	6	; case 4
  3706  00C718  B4D8               	btfsc	status,2,c
  3707  00C71A  D7E3               	goto	l414
  3708  00C71C                     l413:
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  3712                           
  3713                           ; BSR set to: 0
  3714  00C71C  0E00               	movlw	0
  3715  00C71E  6F7D               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3716                           
  3717                           ;tmr_drv.c: 223: }
  3718  00C720  0012               	return	
  3719  00C722                     l410:
  3720  00C722                     l8304:
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;tmr_drv.c: 224: else
  3724                           ;tmr_drv.c: 225: {
  3725                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  3726  00C722  0E01               	movlw	1
  3727  00C724  6F7D               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3728                           
  3729                           ; BSR set to: 0
  3730  00C726  0012               	return	
  3731  00C728                     __end_of_Tmr_TmrBPrSet:
  3732                           	opt stack 0
  3733                           tblptru	equ	0xFF8
  3734                           tblptrh	equ	0xFF7
  3735                           tblptrl	equ	0xFF6
  3736                           tablat	equ	0xFF5
  3737                           prodh	equ	0xFF4
  3738                           prodl	equ	0xFF3
  3739                           intcon	equ	0xFF2
  3740                           intcon2	equ	0xFF1
  3741                           intcon3	equ	0xFF0
  3742                           postinc0	equ	0xFEE
  3743                           wreg	equ	0xFE8
  3744                           postdec1	equ	0xFE5
  3745                           fsr1l	equ	0xFE1
  3746                           indf2	equ	0xFDF
  3747                           postinc2	equ	0xFDE
  3748                           postdec2	equ	0xFDD
  3749                           fsr2h	equ	0xFDA
  3750                           fsr2l	equ	0xFD9
  3751                           status	equ	0xFD8
  3752                           
  3753 ;; *************** function _Tmr_TmrBIrqSet *****************
  3754 ;; Defined at:
  3755 ;;		line 153 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  TmrNumb         1    wreg     unsigned char 
  3758 ;;  Priority        1    0[BANK0 ] enum E7710
  3759 ;;  TmrIrqSts       1    1[BANK0 ] unsigned char 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  TmrNumb         1    2[BANK0 ] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3771 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3772 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3775 ;;Total ram usage:        3 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:   11
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_Tmr_TmrBConfig
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text10
  3786  00A922                     __ptext10:
  3787                           	opt stack 0
  3788  00A922                     _Tmr_TmrBIrqSet:
  3789                           	opt stack 16
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;incstack = 0
  3793                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  3794  00A922  0100               	movlb	0	; () banked
  3795  00A924  6F62               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  3796                           
  3797                           ;tmr_drv.c: 156: switch (TmrNumb)
  3798  00A926  D01A               	goto	l402
  3799  00A928                     l403:
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  3803  00A928  929E               	bcf	3998,1,c	;volatile
  3804                           
  3805                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  3806  00A92A  B160               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3807  00A92C  D002               	bra	u6825
  3808  00A92E  929F               	bcf	3999,1,c	;volatile
  3809  00A930  D001               	bra	u6826
  3810  00A932                     u6825:
  3811  00A932  829F               	bsf	3999,1,c	;volatile
  3812  00A934                     u6826:
  3813                           
  3814                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  3815  00A934  0100               	movlb	0	; () banked
  3816  00A936  B161               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3817  00A938  D002               	bra	u6835
  3818  00A93A  929D               	bcf	3997,1,c	;volatile
  3819  00A93C  D001               	bra	u6836
  3820  00A93E                     u6835:
  3821  00A93E  829D               	bsf	3997,1,c	;volatile
  3822  00A940                     u6836:
  3823                           
  3824                           ;tmr_drv.c: 165: break;
  3825  00A940  0012               	return	
  3826  00A942                     l405:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  3830  00A942  96A4               	bcf	4004,3,c	;volatile
  3831                           
  3832                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  3833  00A944  B160               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3834  00A946  D002               	bra	u6845
  3835  00A948  96A5               	bcf	4005,3,c	;volatile
  3836  00A94A  D001               	bra	u6846
  3837  00A94C                     u6845:
  3838  00A94C  86A5               	bsf	4005,3,c	;volatile
  3839  00A94E                     u6846:
  3840                           
  3841                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  3842  00A94E  0100               	movlb	0	; () banked
  3843  00A950  B161               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3844  00A952  D002               	bra	u6855
  3845  00A954  96A3               	bcf	4003,3,c	;volatile
  3846  00A956  D001               	bra	u6856
  3847  00A958                     u6855:
  3848  00A958  86A3               	bsf	4003,3,c	;volatile
  3849  00A95A                     u6856:
  3850                           
  3851                           ;tmr_drv.c: 178: }
  3852                           
  3853                           ;tmr_drv.c: 177: break;
  3854                           
  3855                           ;tmr_drv.c: 176: default:
  3856                           
  3857                           ;tmr_drv.c: 174: break;
  3858  00A95A  0012               	return	
  3859  00A95C                     l402:
  3860  00A95C  0100               	movlb	0	; () banked
  3861  00A95E  5162               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  3862                           
  3863                           ; Switch size 1, requested type "space"
  3864                           ; Number of cases is 2, Range of values is 2 to 4
  3865                           ; switch strategies available:
  3866                           ; Name         Instructions Cycles
  3867                           ; simple_byte            7     4 (average)
  3868                           ;	Chosen strategy is simple_byte
  3869  00A960  0A02               	xorlw	2	; case 2
  3870  00A962  B4D8               	btfsc	status,2,c
  3871  00A964  D7E1               	goto	l403
  3872  00A966  0A06               	xorlw	6	; case 4
  3873  00A968  A4D8               	btfss	status,2,c
  3874  00A96A  0012               	return	
  3875  00A96C  D7EA               	goto	l405
  3876  00A96E                     __end_of_Tmr_TmrBIrqSet:
  3877                           	opt stack 0
  3878                           tblptru	equ	0xFF8
  3879                           tblptrh	equ	0xFF7
  3880                           tblptrl	equ	0xFF6
  3881                           tablat	equ	0xFF5
  3882                           prodh	equ	0xFF4
  3883                           prodl	equ	0xFF3
  3884                           intcon	equ	0xFF2
  3885                           intcon2	equ	0xFF1
  3886                           intcon3	equ	0xFF0
  3887                           postinc0	equ	0xFEE
  3888                           wreg	equ	0xFE8
  3889                           postdec1	equ	0xFE5
  3890                           fsr1l	equ	0xFE1
  3891                           indf2	equ	0xFDF
  3892                           postinc2	equ	0xFDE
  3893                           postdec2	equ	0xFDD
  3894                           fsr2h	equ	0xFDA
  3895                           fsr2l	equ	0xFD9
  3896                           status	equ	0xFD8
  3897                           
  3898 ;; *************** function _Tmr_StartTmr *****************
  3899 ;; Defined at:
  3900 ;;		line 242 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  TmrNumb         1    wreg     unsigned char 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  TmrNumb         1    0[BANK0 ] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;Total ram usage:        1 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:   11
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_Tmr_TmrBConfig
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text11
  3929  00A0E8                     __ptext11:
  3930                           	opt stack 0
  3931  00A0E8                     _Tmr_StartTmr:
  3932                           	opt stack 16
  3933                           
  3934                           ;incstack = 0
  3935                           ;Tmr_StartTmr@TmrNumb stored from wreg
  3936  00A0E8  0100               	movlb	0	; () banked
  3937  00A0EA  6F60               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  3938                           
  3939                           ;tmr_drv.c: 245: switch (TmrNumb)
  3940  00A0EC  D004               	goto	l420
  3941  00A0EE                     l421:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  3945  00A0EE  84CA               	bsf	4042,2,c	;volatile
  3946                           
  3947                           ;tmr_drv.c: 250: break;
  3948  00A0F0  0012               	return	
  3949  00A0F2                     l423:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  3953  00A0F2  8476               	bsf	3958,2,c	;volatile
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;tmr_drv.c: 259: }
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;tmr_drv.c: 258: break;
  3960                           
  3961                           ;tmr_drv.c: 257: default:
  3962                           
  3963                           ;tmr_drv.c: 255: break;
  3964  00A0F4  0012               	return	
  3965  00A0F6                     l420:
  3966                           
  3967                           ; BSR set to: 0
  3968  00A0F6  0100               	movlb	0	; () banked
  3969  00A0F8  5160               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  3970                           
  3971                           ; Switch size 1, requested type "space"
  3972                           ; Number of cases is 2, Range of values is 2 to 4
  3973                           ; switch strategies available:
  3974                           ; Name         Instructions Cycles
  3975                           ; simple_byte            7     4 (average)
  3976                           ;	Chosen strategy is simple_byte
  3977  00A0FA  0A02               	xorlw	2	; case 2
  3978  00A0FC  B4D8               	btfsc	status,2,c
  3979  00A0FE  D7F7               	goto	l421
  3980  00A100  0A06               	xorlw	6	; case 4
  3981  00A102  A4D8               	btfss	status,2,c
  3982  00A104  0012               	return	
  3983  00A106  D7F5               	goto	l423
  3984  00A108                     __end_of_Tmr_StartTmr:
  3985                           	opt stack 0
  3986                           tblptru	equ	0xFF8
  3987                           tblptrh	equ	0xFF7
  3988                           tblptrl	equ	0xFF6
  3989                           tablat	equ	0xFF5
  3990                           prodh	equ	0xFF4
  3991                           prodl	equ	0xFF3
  3992                           intcon	equ	0xFF2
  3993                           intcon2	equ	0xFF1
  3994                           intcon3	equ	0xFF0
  3995                           postinc0	equ	0xFEE
  3996                           wreg	equ	0xFE8
  3997                           postdec1	equ	0xFE5
  3998                           fsr1l	equ	0xFE1
  3999                           indf2	equ	0xFDF
  4000                           postinc2	equ	0xFDE
  4001                           postdec2	equ	0xFDD
  4002                           fsr2h	equ	0xFDA
  4003                           fsr2l	equ	0xFD9
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function _TmrBInit *****************
  4007 ;; Defined at:
  4008 ;;		line 72 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  TmrNumb         1    wreg     unsigned char 
  4011 ;;  Prescaler       1    0[BANK0 ] unsigned char 
  4012 ;;  Postscaler      1    1[BANK0 ] unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  TmrNumb         1    3[BANK0 ] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;Total ram usage:        4 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:   11
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_Tmr_TmrBConfig
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text12
  4039  00B6DC                     __ptext12:
  4040                           	opt stack 0
  4041  00B6DC                     _TmrBInit:
  4042                           	opt stack 16
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;incstack = 0
  4046                           ;TmrBInit@TmrNumb stored from wreg
  4047  00B6DC  0100               	movlb	0	; () banked
  4048  00B6DE  6F63               	movwf	TmrBInit@TmrNumb& (0+255),b
  4049                           
  4050                           ;tmr_drv.c: 75: switch (TmrNumb)
  4051  00B6E0  D03F               	goto	l382
  4052  00B6E2                     l385:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4056  00B6E2  90CA               	bcf	4042,0,c	;volatile
  4057  00B6E4  D001               	goto	L1
  4058  00B6E6                     l387:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4062  00B6E6  80CA               	bsf	4042,0,c	;volatile
  4063  00B6E8                     L1:
  4064                           
  4065                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4066  00B6E8  92CA               	bcf	4042,1,c	;volatile
  4067                           
  4068                           ;tmr_drv.c: 91: break;
  4069  00B6EA  D00E               	goto	l386
  4070  00B6EC                     l388:
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4074  00B6EC  80CA               	bsf	4042,0,c	;volatile
  4075                           
  4076                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4077  00B6EE  82CA               	bsf	4042,1,c	;volatile
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;tmr_drv.c: 100: }
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;tmr_drv.c: 99: break;
  4084                           
  4085                           ;tmr_drv.c: 98: default:
  4086                           
  4087                           ;tmr_drv.c: 96: break;
  4088  00B6F0  D00B               	goto	l386
  4089  00B6F2                     
  4090                           ; BSR set to: 0
  4091  00B6F2  0100               	movlb	0	; () banked
  4092  00B6F4  5160               	movf	TmrBInit@Prescaler& (0+255),w,b
  4093                           
  4094                           ; Switch size 1, requested type "space"
  4095                           ; Number of cases is 3, Range of values is 1 to 16
  4096                           ; switch strategies available:
  4097                           ; Name         Instructions Cycles
  4098                           ; simple_byte           10     6 (average)
  4099                           ;	Chosen strategy is simple_byte
  4100  00B6F6  0A01               	xorlw	1	; case 1
  4101  00B6F8  B4D8               	btfsc	status,2,c
  4102  00B6FA  D7F3               	goto	l385
  4103  00B6FC  0A05               	xorlw	5	; case 4
  4104  00B6FE  B4D8               	btfsc	status,2,c
  4105  00B700  D7F2               	goto	l387
  4106  00B702  0A14               	xorlw	20	; case 16
  4107  00B704  B4D8               	btfsc	status,2,c
  4108  00B706  D7F2               	goto	l388
  4109  00B708                     l386:
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4113                           
  4114                           ; BSR set to: 0
  4115  00B708  C061  F062         	movff	TmrBInit@Postscaler,??_TmrBInit
  4116  00B70C  0EFF               	movlw	255
  4117  00B70E  2762               	addwf	??_TmrBInit& (0+255),f,b
  4118  00B710  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4119  00B712  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4120  00B714  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4121  00B716  50CA               	movf	4042,w,c	;volatile
  4122  00B718  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4123  00B71A  0B87               	andlw	-121
  4124  00B71C  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4125  00B71E  6ECA               	movwf	4042,c	;volatile
  4126                           
  4127                           ;tmr_drv.c: 104: break;
  4128  00B720  0012               	return	
  4129  00B722                     l393:
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4133  00B722  9076               	bcf	3958,0,c	;volatile
  4134  00B724  D001               	goto	L2
  4135  00B726                     l395:
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4139  00B726  8076               	bsf	3958,0,c	;volatile
  4140  00B728                     L2:
  4141                           
  4142                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4143  00B728  9276               	bcf	3958,1,c	;volatile
  4144                           
  4145                           ;tmr_drv.c: 120: break;
  4146  00B72A  D00D               	goto	l394
  4147  00B72C                     l396:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4151  00B72C  8076               	bsf	3958,0,c	;volatile
  4152                           
  4153                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4154  00B72E  8276               	bsf	3958,1,c	;volatile
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;tmr_drv.c: 129: }
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;tmr_drv.c: 128: break;
  4161                           
  4162                           ;tmr_drv.c: 127: default:
  4163                           
  4164                           ;tmr_drv.c: 125: break;
  4165  00B730  D00A               	goto	l394
  4166  00B732                     
  4167                           ; BSR set to: 0
  4168                           
  4169                           ; BSR set to: 0
  4170  00B732  5160               	movf	TmrBInit@Prescaler& (0+255),w,b
  4171                           
  4172                           ; Switch size 1, requested type "space"
  4173                           ; Number of cases is 3, Range of values is 1 to 16
  4174                           ; switch strategies available:
  4175                           ; Name         Instructions Cycles
  4176                           ; simple_byte           10     6 (average)
  4177                           ;	Chosen strategy is simple_byte
  4178  00B734  0A01               	xorlw	1	; case 1
  4179  00B736  B4D8               	btfsc	status,2,c
  4180  00B738  D7F4               	goto	l393
  4181  00B73A  0A05               	xorlw	5	; case 4
  4182  00B73C  B4D8               	btfsc	status,2,c
  4183  00B73E  D7F3               	goto	l395
  4184  00B740  0A14               	xorlw	20	; case 16
  4185  00B742  B4D8               	btfsc	status,2,c
  4186  00B744  D7F3               	goto	l396
  4187  00B746                     l394:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4191                           
  4192                           ; BSR set to: 0
  4193  00B746  C061  F062         	movff	TmrBInit@Postscaler,??_TmrBInit
  4194  00B74A  0EFF               	movlw	255
  4195  00B74C  2762               	addwf	??_TmrBInit& (0+255),f,b
  4196  00B74E  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4197  00B750  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4198  00B752  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4199  00B754  5076               	movf	3958,w,c	;volatile
  4200  00B756  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4201  00B758  0B87               	andlw	-121
  4202  00B75A  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4203  00B75C  6E76               	movwf	3958,c	;volatile
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;tmr_drv.c: 137: }
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;tmr_drv.c: 136: break;
  4210                           
  4211                           ;tmr_drv.c: 135: default:
  4212                           
  4213                           ;tmr_drv.c: 133: break;
  4214  00B75E  0012               	return	
  4215  00B760                     l382:
  4216                           
  4217                           ; BSR set to: 0
  4218  00B760  0100               	movlb	0	; () banked
  4219  00B762  5163               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4220                           
  4221                           ; Switch size 1, requested type "space"
  4222                           ; Number of cases is 2, Range of values is 2 to 4
  4223                           ; switch strategies available:
  4224                           ; Name         Instructions Cycles
  4225                           ; simple_byte            7     4 (average)
  4226                           ;	Chosen strategy is simple_byte
  4227  00B764  0A02               	xorlw	2	; case 2
  4228  00B766  B4D8               	btfsc	status,2,c
  4229  00B768  D7C4               	goto	l384
  4230  00B76A  0A06               	xorlw	6	; case 4
  4231  00B76C  A4D8               	btfss	status,2,c
  4232  00B76E  0012               	return	
  4233  00B770  D7E0               	goto	l392
  4234  00B772                     __end_of_TmrBInit:
  4235                           	opt stack 0
  4236                           tblptru	equ	0xFF8
  4237                           tblptrh	equ	0xFF7
  4238                           tblptrl	equ	0xFF6
  4239                           tablat	equ	0xFF5
  4240                           prodh	equ	0xFF4
  4241                           prodl	equ	0xFF3
  4242                           intcon	equ	0xFF2
  4243                           intcon2	equ	0xFF1
  4244                           intcon3	equ	0xFF0
  4245                           postinc0	equ	0xFEE
  4246                           wreg	equ	0xFE8
  4247                           postdec1	equ	0xFE5
  4248                           fsr1l	equ	0xFE1
  4249                           indf2	equ	0xFDF
  4250                           postinc2	equ	0xFDE
  4251                           postdec2	equ	0xFDD
  4252                           fsr2h	equ	0xFDA
  4253                           fsr2l	equ	0xFD9
  4254                           status	equ	0xFD8
  4255                           
  4256 ;; *************** function _Sch_MainScheduler *****************
  4257 ;; Defined at:
  4258 ;;		line 175 in file "../Source/c/02_Osl/os_sched.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;Total ram usage:        0 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:   22
  4279 ;; This function calls:
  4280 ;;		_InitializeTasks
  4281 ;;		_ScheduleTasks
  4282 ;; This function is called by:
  4283 ;;		_main
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text13
  4288  00A06C                     __ptext13:
  4289                           	opt stack 0
  4290  00A06C                     _Sch_MainScheduler:
  4291                           	opt stack 8
  4292                           
  4293                           ;os_sched.c: 178: InitializeTasks();
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;incstack = 0
  4297  00A06C  EC72  F058         	call	_InitializeTasks	;wreg free
  4298                           
  4299                           ;os_sched.c: 180: SystemState = RunningState;
  4300  00A070  0E01               	movlw	1
  4301  00A072  0100               	movlb	0	; () banked
  4302  00A074  6FFE               	movwf	_SystemState& (0+255),b
  4303  00A076                     
  4304                           ;os_sched.c: 188: {
  4305                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  4306                           
  4307                           ; BSR set to: 0
  4308  00A076  0101               	movlb	1	; () banked
  4309  00A078  51E1               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  4310  00A07A  A4D8               	btfss	status,2,c
  4311  00A07C  D7FC               	goto	l721
  4312                           
  4313                           ; BSR set to: 1
  4314                           ;os_sched.c: 191: {
  4315                           ;os_sched.c: 196: ScheduleTasks();
  4316  00A07E  EC23  F065         	call	_ScheduleTasks	;wreg free
  4317                           
  4318                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  4319  00A082  0E01               	movlw	1
  4320  00A084  0101               	movlb	1	; () banked
  4321  00A086  6FE1               	movwf	_MainSystemTimebaseFlag& (0+255),b
  4322                           
  4323                           ; BSR set to: 1
  4324                           
  4325                           ; BSR set to: 1
  4326  00A088  D7F6               	goto	l721
  4327  00A08A                     __end_of_Sch_MainScheduler:
  4328                           	opt stack 0
  4329                           tblptru	equ	0xFF8
  4330                           tblptrh	equ	0xFF7
  4331                           tblptrl	equ	0xFF6
  4332                           tablat	equ	0xFF5
  4333                           prodh	equ	0xFF4
  4334                           prodl	equ	0xFF3
  4335                           intcon	equ	0xFF2
  4336                           intcon2	equ	0xFF1
  4337                           intcon3	equ	0xFF0
  4338                           postinc0	equ	0xFEE
  4339                           wreg	equ	0xFE8
  4340                           postdec1	equ	0xFE5
  4341                           fsr1l	equ	0xFE1
  4342                           indf2	equ	0xFDF
  4343                           postinc2	equ	0xFDE
  4344                           postdec2	equ	0xFDD
  4345                           fsr2h	equ	0xFDA
  4346                           fsr2l	equ	0xFD9
  4347                           status	equ	0xFD8
  4348                           
  4349 ;; *************** function _ScheduleTasks *****************
  4350 ;; Defined at:
  4351 ;;		line 99 in file "../Source/c/02_Osl/os_sched.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  ActiveTaskIn    1  143[BANK0 ] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4369 ;;Total ram usage:        5 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:   21
  4372 ;; This function calls:
  4373 ;;		_I2cSlv_MainTask
  4374 ;;		_Led_MainTask
  4375 ;;		_MdmWifiCmd_MainTask
  4376 ;;		_MdmWifiHttp_MainTask
  4377 ;;		_MdmWifi_DrvMainFn
  4378 ;;		_MdmWifi_MainTask
  4379 ;;		_Rtcm_MainTask
  4380 ;;		_Term_MainTask
  4381 ;;		_UsbDevice_MainTask
  4382 ;; This function is called by:
  4383 ;;		_Sch_MainScheduler
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text14
  4388  00CA46                     __ptext14:
  4389                           	opt stack 0
  4390  00CA46                     _ScheduleTasks:
  4391                           	opt stack 8
  4392                           
  4393                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  4394                           
  4395                           ; BSR set to: 1
  4396                           ;incstack = 0
  4397  00CA46  0E00               	movlw	0
  4398  00CA48  0100               	movlb	0	; () banked
  4399  00CA4A  6FEF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4400                           
  4401                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  4402  00CA4C  0E00               	movlw	0
  4403  00CA4E  6FEF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4404  00CA50                     l9106:
  4405                           
  4406                           ; BSR set to: 0
  4407  00CA50  0EE5               	movlw	low _TaskNumber
  4408  00CA52  6EF6               	movwf	tblptrl,c
  4409  00CA54                     	if	1	;There is more than 1 active tblptr byte
  4410  00CA54  0EEC               	movlw	high _TaskNumber
  4411  00CA56  6EF7               	movwf	tblptrh,c
  4412  00CA58                     	endif
  4413  00CA58                     	if	1	;There are 3 active tblptr bytes
  4414  00CA58  0E00               	movlw	low (_TaskNumber shr (0+16))
  4415  00CA5A  6EF8               	movwf	tblptru,c
  4416  00CA5C                     	endif
  4417  00CA5C  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4418  00CA5E  6FEB               	movwf	??_ScheduleTasks& (0+255),b
  4419  00CA60  6BEC               	clrf	(??_ScheduleTasks+1)& (0+255),b
  4420  00CA62  0009               	tblrd		*+
  4421  00CA64  50F5               	movf	tablat,w,c
  4422  00CA66  5DEB               	subwf	??_ScheduleTasks& (0+255),w,b
  4423  00CA68  0009               	tblrd		*+
  4424  00CA6A  50F5               	movf	tablat,w,c
  4425  00CA6C  59EC               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  4426  00CA6E  B0D8               	btfsc	status,0,c
  4427  00CA70  0012               	return	
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;os_sched.c: 106: {
  4431                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  4432                           
  4433                           ; BSR set to: 0
  4434                           
  4435                           ; BSR set to: 0
  4436  00CA72  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4437  00CA74  0D08               	mullw	8
  4438  00CA76  0E03               	movlw	3
  4439  00CA78  26F3               	addwf	prodl,f,c
  4440  00CA7A  0E00               	movlw	0
  4441  00CA7C  22F4               	addwfc	prodh,f,c
  4442  00CA7E  0E8B               	movlw	low _TaskTable
  4443  00CA80  24F3               	addwf	prodl,w,c
  4444  00CA82  6ED9               	movwf	fsr2l,c
  4445  00CA84  0E02               	movlw	high _TaskTable
  4446  00CA86  20F4               	addwfc	prodh,w,c
  4447  00CA88  6EDA               	movwf	fsr2h,c
  4448  00CA8A  2ADE               	incf	postinc2,f,c
  4449  00CA8C  0E00               	movlw	0
  4450  00CA8E  22DD               	addwfc	postdec2,f,c
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  4454  00CA90  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4455  00CA92  0D08               	mullw	8
  4456  00CA94  0E05               	movlw	5
  4457  00CA96  26F3               	addwf	prodl,f,c
  4458  00CA98  0E00               	movlw	0
  4459  00CA9A  22F4               	addwfc	prodh,f,c
  4460  00CA9C  0E8B               	movlw	low _TaskTable
  4461  00CA9E  24F3               	addwf	prodl,w,c
  4462  00CAA0  6ED9               	movwf	fsr2l,c
  4463  00CAA2  0E02               	movlw	high _TaskTable
  4464  00CAA4  20F4               	addwfc	prodh,w,c
  4465  00CAA6  6EDA               	movwf	fsr2h,c
  4466  00CAA8  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4467  00CAAA  0D08               	mullw	8
  4468  00CAAC  0E03               	movlw	3
  4469  00CAAE  26F3               	addwf	prodl,f,c
  4470  00CAB0  0E00               	movlw	0
  4471  00CAB2  22F4               	addwfc	prodh,f,c
  4472  00CAB4  0E8B               	movlw	low _TaskTable
  4473  00CAB6  24F3               	addwf	prodl,w,c
  4474  00CAB8  6EE1               	movwf	fsr1l,c
  4475  00CABA  0E02               	movlw	high _TaskTable
  4476  00CABC  20F4               	addwfc	prodh,w,c
  4477  00CABE  6EE2               	movwf	fsr1h,c
  4478  00CAC0  50DE               	movf	postinc2,w,c
  4479  00CAC2  5CE6               	subwf	postinc1,w,c
  4480  00CAC4  50DE               	movf	postinc2,w,c
  4481  00CAC6  58E6               	subwfb	postinc1,w,c
  4482  00CAC8  A0D8               	btfss	status,0,c
  4483  00CACA  D051               	goto	l706
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;os_sched.c: 111: {
  4487                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  4488  00CACC  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4489  00CACE  0D08               	mullw	8
  4490  00CAD0  0E03               	movlw	3
  4491  00CAD2  26F3               	addwf	prodl,f,c
  4492  00CAD4  0E00               	movlw	0
  4493  00CAD6  22F4               	addwfc	prodh,f,c
  4494  00CAD8  0E8B               	movlw	low _TaskTable
  4495  00CADA  24F3               	addwf	prodl,w,c
  4496  00CADC  6ED9               	movwf	fsr2l,c
  4497  00CADE  0E02               	movlw	high _TaskTable
  4498  00CAE0  20F4               	addwfc	prodh,w,c
  4499  00CAE2  6EDA               	movwf	fsr2h,c
  4500  00CAE4  0E00               	movlw	0
  4501  00CAE6  6EDE               	movwf	postinc2,c
  4502  00CAE8  0E00               	movlw	0
  4503  00CAEA  6EDD               	movwf	postdec2,c
  4504                           
  4505                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  4506  00CAEC  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4507  00CAEE  0D08               	mullw	8
  4508  00CAF0  0E02               	movlw	2
  4509  00CAF2  26F3               	addwf	prodl,f,c
  4510  00CAF4  0E00               	movlw	0
  4511  00CAF6  22F4               	addwfc	prodh,f,c
  4512  00CAF8  0E8B               	movlw	low _TaskTable
  4513  00CAFA  24F3               	addwf	prodl,w,c
  4514  00CAFC  6ED9               	movwf	fsr2l,c
  4515  00CAFE  0E02               	movlw	high _TaskTable
  4516  00CB00  20F4               	addwfc	prodh,w,c
  4517  00CB02  6EDA               	movwf	fsr2h,c
  4518  00CB04  0E01               	movlw	1
  4519  00CB06  6EDF               	movwf	indf2,c
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4523  00CB08  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4524  00CB0A  0D08               	mullw	8
  4525  00CB0C  0E8B               	movlw	low _TaskTable
  4526  00CB0E  24F3               	addwf	prodl,w,c
  4527  00CB10  6ED9               	movwf	fsr2l,c
  4528  00CB12  0E02               	movlw	high _TaskTable
  4529  00CB14  20F4               	addwfc	prodh,w,c
  4530  00CB16  6EDA               	movwf	fsr2h,c
  4531  00CB18  CFDE F0EB          	movff	postinc2,??_ScheduleTasks
  4532  00CB1C  CFDD F0EC          	movff	postdec2,??_ScheduleTasks+1
  4533  00CB20  D801               	call	u7928
  4534  00CB22  D016               	goto	u7929
  4535  00CB24                     u7928:
  4536  00CB24  0005               	push	
  4537  00CB26  6EFA               	movwf	pclath,c
  4538  00CB28  51EB               	movf	??_ScheduleTasks& (0+255),w,b
  4539  00CB2A  6EFD               	movwf	tosl,c
  4540  00CB2C  51EC               	movf	(??_ScheduleTasks+1)& (0+255),w,b
  4541  00CB2E  6EFE               	movwf	tosh,c
  4542  00CB30  6AFF               	clrf	tosu,c
  4543  00CB32  50FA               	movf	pclath,w,c
  4544  00CB34  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4545  00CB36  0D08               	mullw	8
  4546  00CB38  0E07               	movlw	7
  4547  00CB3A  26F3               	addwf	prodl,f,c
  4548  00CB3C  0E00               	movlw	0
  4549  00CB3E  22F4               	addwfc	prodh,f,c
  4550  00CB40  0E8B               	movlw	low _TaskTable
  4551  00CB42  24F3               	addwf	prodl,w,c
  4552  00CB44  6ED9               	movwf	fsr2l,c
  4553  00CB46  0E02               	movlw	high _TaskTable
  4554  00CB48  20F4               	addwfc	prodh,w,c
  4555  00CB4A  6EDA               	movwf	fsr2h,c
  4556  00CB4C  50DF               	movf	indf2,w,c
  4557  00CB4E  0012               	return		;indir
  4558  00CB50                     u7929:
  4559                           
  4560                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  4561  00CB50  0100               	movlb	0	; () banked
  4562  00CB52  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4563  00CB54  0D08               	mullw	8
  4564  00CB56  0E02               	movlw	2
  4565  00CB58  26F3               	addwf	prodl,f,c
  4566  00CB5A  0E00               	movlw	0
  4567  00CB5C  22F4               	addwfc	prodh,f,c
  4568  00CB5E  0E8B               	movlw	low _TaskTable
  4569  00CB60  24F3               	addwf	prodl,w,c
  4570  00CB62  6ED9               	movwf	fsr2l,c
  4571  00CB64  0E02               	movlw	high _TaskTable
  4572  00CB66  20F4               	addwfc	prodh,w,c
  4573  00CB68  6EDA               	movwf	fsr2h,c
  4574  00CB6A  0E00               	movlw	0
  4575  00CB6C  6EDF               	movwf	indf2,c
  4576  00CB6E                     l706:
  4577                           
  4578                           ; BSR set to: 0
  4579                           
  4580                           ; BSR set to: 0
  4581                           
  4582                           ;os_sched.c: 117: else
  4583                           ;os_sched.c: 118: {
  4584                           
  4585                           ; BSR set to: 0
  4586  00CB6E  2BEF               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  4587  00CB70  D76F               	goto	l9106
  4588  00CB72                     __end_of_ScheduleTasks:
  4589                           	opt stack 0
  4590                           tosu	equ	0xFFF
  4591                           tosh	equ	0xFFE
  4592                           tosl	equ	0xFFD
  4593                           pclath	equ	0xFFA
  4594                           tblptru	equ	0xFF8
  4595                           tblptrh	equ	0xFF7
  4596                           tblptrl	equ	0xFF6
  4597                           tablat	equ	0xFF5
  4598                           prodh	equ	0xFF4
  4599                           prodl	equ	0xFF3
  4600                           intcon	equ	0xFF2
  4601                           intcon2	equ	0xFF1
  4602                           intcon3	equ	0xFF0
  4603                           postinc0	equ	0xFEE
  4604                           wreg	equ	0xFE8
  4605                           postinc1	equ	0xFE6
  4606                           postdec1	equ	0xFE5
  4607                           fsr1h	equ	0xFE2
  4608                           fsr1l	equ	0xFE1
  4609                           indf2	equ	0xFDF
  4610                           postinc2	equ	0xFDE
  4611                           postdec2	equ	0xFDD
  4612                           fsr2h	equ	0xFDA
  4613                           fsr2l	equ	0xFD9
  4614                           status	equ	0xFD8
  4615                           
  4616 ;; *************** function _InitializeTasks *****************
  4617 ;; Defined at:
  4618 ;;		line 79 in file "../Source/c/02_Osl/os_sched.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  ActiveTaskIn    1  141[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4634 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4635 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;Total ram usage:        3 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:   21
  4639 ;; This function calls:
  4640 ;;		_I2cSlv_MainTask
  4641 ;;		_Led_MainTask
  4642 ;;		_MdmWifiCmd_MainTask
  4643 ;;		_MdmWifiHttp_MainTask
  4644 ;;		_MdmWifi_DrvMainFn
  4645 ;;		_MdmWifi_MainTask
  4646 ;;		_Rtcm_MainTask
  4647 ;;		_Term_MainTask
  4648 ;;		_UsbDevice_MainTask
  4649 ;; This function is called by:
  4650 ;;		_Sch_MainScheduler
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text15
  4655  00B0E4                     __ptext15:
  4656                           	opt stack 0
  4657  00B0E4                     _InitializeTasks:
  4658                           	opt stack 8
  4659                           
  4660                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;incstack = 0
  4664  00B0E4  0E00               	movlw	0
  4665  00B0E6  0100               	movlb	0	; () banked
  4666  00B0E8  6FED               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4667                           
  4668                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  4669  00B0EA  0E00               	movlw	0
  4670  00B0EC  6FED               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4671  00B0EE                     l9094:
  4672                           
  4673                           ; BSR set to: 0
  4674  00B0EE  0EE5               	movlw	low _TaskNumber
  4675  00B0F0  6EF6               	movwf	tblptrl,c
  4676  00B0F2                     	if	1	;There is more than 1 active tblptr byte
  4677  00B0F2  0EEC               	movlw	high _TaskNumber
  4678  00B0F4  6EF7               	movwf	tblptrh,c
  4679  00B0F6                     	endif
  4680  00B0F6                     	if	1	;There are 3 active tblptr bytes
  4681  00B0F6  0E00               	movlw	low (_TaskNumber shr (0+16))
  4682  00B0F8  6EF8               	movwf	tblptru,c
  4683  00B0FA                     	endif
  4684  00B0FA  51ED               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4685  00B0FC  6FEB               	movwf	??_InitializeTasks& (0+255),b
  4686  00B0FE  6BEC               	clrf	(??_InitializeTasks+1)& (0+255),b
  4687  00B100  0009               	tblrd		*+
  4688  00B102  50F5               	movf	tablat,w,c
  4689  00B104  5DEB               	subwf	??_InitializeTasks& (0+255),w,b
  4690  00B106  0009               	tblrd		*+
  4691  00B108  50F5               	movf	tablat,w,c
  4692  00B10A  59EC               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  4693  00B10C  B0D8               	btfsc	status,0,c
  4694  00B10E  0012               	return	
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;os_sched.c: 86: {
  4698                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4699                           
  4700                           ; BSR set to: 0
  4701                           
  4702                           ; BSR set to: 0
  4703  00B110  51ED               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4704  00B112  0D08               	mullw	8
  4705  00B114  0E8B               	movlw	low _TaskTable
  4706  00B116  24F3               	addwf	prodl,w,c
  4707  00B118  6ED9               	movwf	fsr2l,c
  4708  00B11A  0E02               	movlw	high _TaskTable
  4709  00B11C  20F4               	addwfc	prodh,w,c
  4710  00B11E  6EDA               	movwf	fsr2h,c
  4711  00B120  CFDE F0EB          	movff	postinc2,??_InitializeTasks
  4712  00B124  CFDD F0EC          	movff	postdec2,??_InitializeTasks+1
  4713  00B128  D801               	call	u7888
  4714  00B12A  D016               	goto	u7889
  4715  00B12C                     u7888:
  4716  00B12C  0005               	push	
  4717  00B12E  6EFA               	movwf	pclath,c
  4718  00B130  51EB               	movf	??_InitializeTasks& (0+255),w,b
  4719  00B132  6EFD               	movwf	tosl,c
  4720  00B134  51EC               	movf	(??_InitializeTasks+1)& (0+255),w,b
  4721  00B136  6EFE               	movwf	tosh,c
  4722  00B138  6AFF               	clrf	tosu,c
  4723  00B13A  50FA               	movf	pclath,w,c
  4724  00B13C  51ED               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4725  00B13E  0D08               	mullw	8
  4726  00B140  0E07               	movlw	7
  4727  00B142  26F3               	addwf	prodl,f,c
  4728  00B144  0E00               	movlw	0
  4729  00B146  22F4               	addwfc	prodh,f,c
  4730  00B148  0E8B               	movlw	low _TaskTable
  4731  00B14A  24F3               	addwf	prodl,w,c
  4732  00B14C  6ED9               	movwf	fsr2l,c
  4733  00B14E  0E02               	movlw	high _TaskTable
  4734  00B150  20F4               	addwfc	prodh,w,c
  4735  00B152  6EDA               	movwf	fsr2h,c
  4736  00B154  50DF               	movf	indf2,w,c
  4737  00B156  0012               	return		;indir
  4738  00B158                     u7889:
  4739  00B158  0100               	movlb	0	; () banked
  4740  00B15A  2BED               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  4741  00B15C  D7C8               	goto	l9094
  4742  00B15E                     __end_of_InitializeTasks:
  4743                           	opt stack 0
  4744                           tosu	equ	0xFFF
  4745                           tosh	equ	0xFFE
  4746                           tosl	equ	0xFFD
  4747                           pclath	equ	0xFFA
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           prodh	equ	0xFF4
  4753                           prodl	equ	0xFF3
  4754                           intcon	equ	0xFF2
  4755                           intcon2	equ	0xFF1
  4756                           intcon3	equ	0xFF0
  4757                           postinc0	equ	0xFEE
  4758                           wreg	equ	0xFE8
  4759                           postinc1	equ	0xFE6
  4760                           postdec1	equ	0xFE5
  4761                           fsr1h	equ	0xFE2
  4762                           fsr1l	equ	0xFE1
  4763                           indf2	equ	0xFDF
  4764                           postinc2	equ	0xFDE
  4765                           postdec2	equ	0xFDD
  4766                           fsr2h	equ	0xFDA
  4767                           fsr2l	equ	0xFD9
  4768                           status	equ	0xFD8
  4769                           
  4770 ;; *************** function _Term_MainTask *****************
  4771 ;; Defined at:
  4772 ;;		line 816 in file "../Source/c/03_Sml/02_Ssl/term.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  Options         1    wreg     unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  Options         1    0[COMRAM] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4790 ;;Total ram usage:        0 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:   16
  4793 ;; This function calls:
  4794 ;;		_Term_MainSm
  4795 ;; This function is called by:
  4796 ;;		_InitializeTasks
  4797 ;;		_ScheduleTasks
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text16
  4802  00A01A                     __ptext16:
  4803                           	opt stack 0
  4804  00A01A                     _Term_MainTask:
  4805                           	opt stack 12
  4806                           
  4807                           ;term.c: 818: switch (SystemState)
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;incstack = 0
  4811  00A01A  D003               	goto	l2113
  4812  00A01C                     
  4813                           ;term.c: 829: Term_MainSm();
  4814  00A01C  EC6B  F072         	call	_Term_MainSm
  4815                           
  4816                           ;term.c: 836: }
  4817                           
  4818                           ;term.c: 835: break;
  4819                           
  4820                           ;term.c: 834: default:
  4821                           
  4822                           ;term.c: 831: break;
  4823  00A020  0012               	return	
  4824  00A022                     l2113:
  4825  00A022  0100               	movlb	0	; () banked
  4826  00A024  51FE               	movf	_SystemState& (0+255),w,b
  4827                           
  4828                           ; Switch size 1, requested type "space"
  4829                           ; Number of cases is 2, Range of values is 0 to 1
  4830                           ; switch strategies available:
  4831                           ; Name         Instructions Cycles
  4832                           ; simple_byte            7     4 (average)
  4833                           ;	Chosen strategy is simple_byte
  4834  00A026  0A00               	xorlw	0	; case 0
  4835  00A028  B4D8               	btfsc	status,2,c
  4836  00A02A  0012               	return	
  4837  00A02C  0A01               	xorlw	1	; case 1
  4838  00A02E  A4D8               	btfss	status,2,c
  4839  00A030  0012               	return	
  4840  00A032  D7F4               	goto	l2116
  4841  00A034                     __end_of_Term_MainTask:
  4842                           	opt stack 0
  4843                           tosu	equ	0xFFF
  4844                           tosh	equ	0xFFE
  4845                           tosl	equ	0xFFD
  4846                           pclath	equ	0xFFA
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           prodh	equ	0xFF4
  4852                           prodl	equ	0xFF3
  4853                           intcon	equ	0xFF2
  4854                           intcon2	equ	0xFF1
  4855                           intcon3	equ	0xFF0
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           postinc1	equ	0xFE6
  4859                           postdec1	equ	0xFE5
  4860                           fsr1h	equ	0xFE2
  4861                           fsr1l	equ	0xFE1
  4862                           indf2	equ	0xFDF
  4863                           postinc2	equ	0xFDE
  4864                           postdec2	equ	0xFDD
  4865                           fsr2h	equ	0xFDA
  4866                           fsr2l	equ	0xFD9
  4867                           status	equ	0xFD8
  4868                           
  4869 ;; *************** function _Rtcm_MainTask *****************
  4870 ;; Defined at:
  4871 ;;		line 99 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  Options         1    wreg     unsigned char 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  Options         1    0[COMRAM] unsigned char 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4889 ;;Total ram usage:        0 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:   14
  4892 ;; This function calls:
  4893 ;;		_Rtcc_AlarmConfig
  4894 ;;		_Rtcc_LockRtc
  4895 ;;		_Rtcc_RtcConfig
  4896 ;;		_Rtcc_SetRtcStatus
  4897 ;;		_Rtcc_UnlockRtc
  4898 ;;		_Rtcm_GetRtccDate
  4899 ;;		_Rtcm_SetAlarmAction
  4900 ;;		_Rtcm_SetRtccDate
  4901 ;; This function is called by:
  4902 ;;		_InitializeTasks
  4903 ;;		_ScheduleTasks
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text17
  4908  00B80A                     __ptext17:
  4909                           	opt stack 0
  4910  00B80A                     _Rtcm_MainTask:
  4911                           	opt stack 14
  4912                           
  4913                           ;rtcm.c: 101: switch (SystemState)
  4914                           
  4915                           ;incstack = 0
  4916  00B80A  D044               	goto	l1856
  4917  00B80C                     l1857:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  4921  00B80C  86CD               	bsf	4045,3,c	;volatile
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  4925  00B80E  0E00               	movlw	0
  4926  00B810  0101               	movlb	1	; () banked
  4927  00B812  6FBD               	movwf	_RtcConfig& (0+255),b
  4928                           
  4929                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  4930  00B814  0E00               	movlw	0
  4931  00B816  6FBE               	movwf	(_RtcConfig+1)& (0+255),b
  4932                           
  4933                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  4934  00B818  0E01               	movlw	1
  4935  00B81A  6FBF               	movwf	(_RtcConfig+2)& (0+255),b
  4936                           
  4937                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  4938  00B81C  0E01               	movlw	1
  4939  00B81E  6FC0               	movwf	(_RtcConfig+3)& (0+255),b
  4940                           
  4941                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  4942  00B820  0E01               	movlw	1
  4943  00B822  6FB9               	movwf	_AlCfg& (0+255),b
  4944                           
  4945                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  4946  00B824  0E01               	movlw	1
  4947  00B826  6FBA               	movwf	(_AlCfg+1)& (0+255),b
  4948                           
  4949                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  4950  00B828  0E01               	movlw	1
  4951  00B82A  6FBB               	movwf	(_AlCfg+2)& (0+255),b
  4952                           
  4953                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  4954  00B82C  0E00               	movlw	0
  4955  00B82E  6FBC               	movwf	(_AlCfg+3)& (0+255),b
  4956                           
  4957                           ; BSR set to: 1
  4958                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  4959  00B830  ECA6  F04F         	call	_Rtcc_UnlockRtc	;wreg free
  4960                           
  4961                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  4962  00B834  0EBD               	movlw	low _RtcConfig
  4963  00B836  0100               	movlb	0	; () banked
  4964  00B838  6F61               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  4965  00B83A  0E01               	movlw	high _RtcConfig
  4966  00B83C  6F62               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  4967  00B83E  EC53  F05C         	call	_Rtcc_RtcConfig	;wreg free
  4968                           
  4969                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  4970  00B842  0EB9               	movlw	low _AlCfg
  4971  00B844  0100               	movlb	0	; () banked
  4972  00B846  6F60               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  4973  00B848  0E01               	movlw	high _AlCfg
  4974  00B84A  6F61               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  4975  00B84C  EC5C  F057         	call	_Rtcc_AlarmConfig	;wreg free
  4976                           
  4977                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  4978  00B850  0E01               	movlw	1
  4979  00B852  ECEA  F04F         	call	_Rtcc_SetRtcStatus
  4980                           
  4981                           ;rtcm.c: 127: Rtcc_LockRtc();
  4982  00B856  EC9E  F04F         	call	_Rtcc_LockRtc	;wreg free
  4983                           
  4984                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  4985  00B85A  EE21  F00A         	lfsr	2,_Rtcm_SystemDate
  4986  00B85E  EE00  F06C         	lfsr	0,Rtcm_SetRtccDate@Date
  4987  00B862  0E07               	movlw	7
  4988  00B864                     u7781:
  4989  00B864  CFDB FFEB          	movff	plusw2,plusw0
  4990  00B868  06E8               	decf	wreg,f,c
  4991  00B86A  E2FC               	bc	u7781
  4992  00B86C  EC2F  F055         	call	_Rtcm_SetRtccDate	;wreg free
  4993                           
  4994                           ;rtcm.c: 131: Rtcm_SetAlarmAction(&Alarm);
  4995  00B870  0E1A               	movlw	low _Alarm
  4996  00B872  0100               	movlb	0	; () banked
  4997  00B874  6F62               	movwf	Rtcm_SetAlarmAction@Action& (0+255),b
  4998  00B876  0EA2               	movlw	high _Alarm
  4999  00B878  6F63               	movwf	(Rtcm_SetAlarmAction@Action+1)& (0+255),b
  5000  00B87A  EC78  F04F         	call	_Rtcm_SetAlarmAction	;wreg free
  5001                           
  5002                           ;rtcm.c: 156: break;
  5003  00B87E  0012               	return	
  5004  00B880                     
  5005                           ;rtcm.c: 161: Rtcm_SystemDate = Rtcm_GetRtccDate();
  5006  00B880  ECF3  F056         	call	_Rtcm_GetRtccDate	;wreg free
  5007  00B884  EE21  F00A         	lfsr	2,_Rtcm_SystemDate
  5008  00B888  0E07               	movlw	7
  5009  00B88A                     u7791:
  5010  00B88A  CFEB FFDB          	movff	plusw0,plusw2
  5011  00B88E  06E8               	decf	wreg,f,c
  5012  00B890  E2FC               	bc	u7791
  5013                           
  5014                           ;rtcm.c: 167: }
  5015                           
  5016                           ;rtcm.c: 166: break;
  5017                           
  5018                           ;rtcm.c: 165: default:
  5019                           
  5020                           ;rtcm.c: 162: break;
  5021  00B892  0012               	return	
  5022  00B894                     l1856:
  5023  00B894  0100               	movlb	0	; () banked
  5024  00B896  51FE               	movf	_SystemState& (0+255),w,b
  5025                           
  5026                           ; Switch size 1, requested type "space"
  5027                           ; Number of cases is 2, Range of values is 0 to 1
  5028                           ; switch strategies available:
  5029                           ; Name         Instructions Cycles
  5030                           ; simple_byte            7     4 (average)
  5031                           ;	Chosen strategy is simple_byte
  5032  00B898  0A00               	xorlw	0	; case 0
  5033  00B89A  B4D8               	btfsc	status,2,c
  5034  00B89C  D7B7               	goto	l1857
  5035  00B89E  0A01               	xorlw	1	; case 1
  5036  00B8A0  A4D8               	btfss	status,2,c
  5037  00B8A2  0012               	return	
  5038  00B8A4  D7ED               	goto	l1859
  5039  00B8A6                     __end_of_Rtcm_MainTask:
  5040                           	opt stack 0
  5041                           tosu	equ	0xFFF
  5042                           tosh	equ	0xFFE
  5043                           tosl	equ	0xFFD
  5044                           pclath	equ	0xFFA
  5045                           tblptru	equ	0xFF8
  5046                           tblptrh	equ	0xFF7
  5047                           tblptrl	equ	0xFF6
  5048                           tablat	equ	0xFF5
  5049                           prodh	equ	0xFF4
  5050                           prodl	equ	0xFF3
  5051                           intcon	equ	0xFF2
  5052                           intcon2	equ	0xFF1
  5053                           intcon3	equ	0xFF0
  5054                           postinc0	equ	0xFEE
  5055                           plusw0	equ	0xFEB
  5056                           wreg	equ	0xFE8
  5057                           postinc1	equ	0xFE6
  5058                           postdec1	equ	0xFE5
  5059                           fsr1h	equ	0xFE2
  5060                           fsr1l	equ	0xFE1
  5061                           indf2	equ	0xFDF
  5062                           postinc2	equ	0xFDE
  5063                           postdec2	equ	0xFDD
  5064                           plusw2	equ	0xFDB
  5065                           fsr2h	equ	0xFDA
  5066                           fsr2l	equ	0xFD9
  5067                           status	equ	0xFD8
  5068                           
  5069 ;; *************** function _Led_MainTask *****************
  5070 ;; Defined at:
  5071 ;;		line 169 in file "../Source/c/03_Sml/02_Ssl/led.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  Options         1    wreg     unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  Options         1    0[COMRAM] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:   13
  5092 ;; This function calls:
  5093 ;;		_OsTmr_StartTimer
  5094 ;; This function is called by:
  5095 ;;		_InitializeTasks
  5096 ;;		_ScheduleTasks
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	text18
  5101  00A572                     __ptext18:
  5102                           	opt stack 0
  5103  00A572                     _Led_MainTask:
  5104                           	opt stack 15
  5105                           
  5106                           ;led.c: 171: static SwTimerType LedTimer1 = { 1u, SwTimerExpired, 0, 0, };
  5107                           ;led.c: 172: static SwTimerType LedTimer2 = { 1u, SwTimerExpired, 0, 0, };
  5108                           ;led.c: 174: switch (SystemState)
  5109                           
  5110                           ;incstack = 0
  5111  00A572  D015               	goto	l1795
  5112  00A574                     l1796:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;led.c: 179: TRISDbits.TRISD4 = ((UINT8)(0));
  5116  00A574  9895               	bcf	3989,4,c	;volatile
  5117                           
  5118                           ;led.c: 180: TRISDbits.TRISD5 = ((UINT8)(0));
  5119  00A576  9A95               	bcf	3989,5,c	;volatile
  5120                           
  5121                           ;led.c: 181: TRISDbits.TRISD6 = ((UINT8)(0));
  5122  00A578  9C95               	bcf	3989,6,c	;volatile
  5123                           
  5124                           ;led.c: 182: PORTDbits.RD4 = ((UINT8)(0));
  5125  00A57A  9883               	bcf	3971,4,c	;volatile
  5126                           
  5127                           ;led.c: 183: PORTDbits.RD5 = ((UINT8)(0));
  5128  00A57C  9A83               	bcf	3971,5,c	;volatile
  5129                           
  5130                           ;led.c: 184: PORTDbits.RD6 = ((UINT8)(0));
  5131  00A57E  9C83               	bcf	3971,6,c	;volatile
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;led.c: 186: OsTmr_StartTimer(&LedTimer1,((UINT16)(1000)));
  5135  00A580  0EEC               	movlw	low Led_MainTask@LedTimer1
  5136  00A582  6F64               	movwf	OsTmr_StartTimer@Timer& (0+255),b
  5137  00A584  0E01               	movlw	high Led_MainTask@LedTimer1
  5138  00A586  6F65               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
  5139  00A588  0EE8               	movlw	232
  5140  00A58A  6F66               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
  5141  00A58C  0E03               	movlw	3
  5142  00A58E  6F67               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
  5143  00A590  0E00               	movlw	0
  5144  00A592  6F68               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
  5145  00A594  0E00               	movlw	0
  5146  00A596  6F69               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
  5147  00A598  EC32  F056         	call	_OsTmr_StartTimer	;wreg free
  5148                           
  5149                           ;led.c: 206: }
  5150                           
  5151                           ;led.c: 205: break;
  5152                           
  5153                           ;led.c: 204: default:
  5154                           
  5155                           ;led.c: 201: break;
  5156                           
  5157                           ;led.c: 190: case RunningState:
  5158                           
  5159                           ;led.c: 187: break;
  5160  00A59C  0012               	return	
  5161  00A59E                     l1795:
  5162  00A59E  0100               	movlb	0	; () banked
  5163  00A5A0  51FE               	movf	_SystemState& (0+255),w,b
  5164                           
  5165                           ; Switch size 1, requested type "space"
  5166                           ; Number of cases is 2, Range of values is 0 to 1
  5167                           ; switch strategies available:
  5168                           ; Name         Instructions Cycles
  5169                           ; simple_byte            7     4 (average)
  5170                           ;	Chosen strategy is simple_byte
  5171  00A5A2  0A00               	xorlw	0	; case 0
  5172  00A5A4  B4D8               	btfsc	status,2,c
  5173  00A5A6  D7E6               	goto	l1796
  5174  00A5A8  0A01               	xorlw	1	; case 1
  5175  00A5AA  0012               	return	
  5176  00A5AC                     __end_of_Led_MainTask:
  5177                           	opt stack 0
  5178                           tosu	equ	0xFFF
  5179                           tosh	equ	0xFFE
  5180                           tosl	equ	0xFFD
  5181                           pclath	equ	0xFFA
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           prodh	equ	0xFF4
  5187                           prodl	equ	0xFF3
  5188                           intcon	equ	0xFF2
  5189                           intcon2	equ	0xFF1
  5190                           intcon3	equ	0xFF0
  5191                           postinc0	equ	0xFEE
  5192                           plusw0	equ	0xFEB
  5193                           wreg	equ	0xFE8
  5194                           postinc1	equ	0xFE6
  5195                           postdec1	equ	0xFE5
  5196                           fsr1h	equ	0xFE2
  5197                           fsr1l	equ	0xFE1
  5198                           indf2	equ	0xFDF
  5199                           postinc2	equ	0xFDE
  5200                           postdec2	equ	0xFDD
  5201                           plusw2	equ	0xFDB
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function _MdmWifiHttp_MainTask *****************
  5207 ;; Defined at:
  5208 ;;		line 74 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_http.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  Options         1    wreg     unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  Options         1    0[COMRAM] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5226 ;;Total ram usage:        0 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:   11
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_InitializeTasks
  5233 ;;		_ScheduleTasks
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text19
  5238  009EFE                     __ptext19:
  5239                           	opt stack 0
  5240  009EFE                     _MdmWifiHttp_MainTask:
  5241                           	opt stack 17
  5242                           
  5243                           ;mdm_wifi_http.c: 91: }
  5244                           
  5245                           ;mdm_wifi_http.c: 90: break;
  5246                           
  5247                           ;mdm_wifi_http.c: 89: default:
  5248                           
  5249                           ;mdm_wifi_http.c: 86: break;
  5250                           
  5251                           ;mdm_wifi_http.c: 84: case RunningState:
  5252                           
  5253                           ;mdm_wifi_http.c: 81: break;
  5254                           
  5255                           ;mdm_wifi_http.c: 77: {
  5256                           ;mdm_wifi_http.c: 79: case InitializationState:
  5257                           
  5258                           ;mdm_wifi_http.c: 76: switch (SystemState)
  5259                           
  5260                           ;incstack = 0
  5261  009EFE  0100               	movlb	0	; () banked
  5262  009F00  51FE               	movf	_SystemState& (0+255),w,b
  5263                           
  5264                           ; Switch size 1, requested type "space"
  5265                           ; Number of cases is 2, Range of values is 0 to 1
  5266                           ; switch strategies available:
  5267                           ; Name         Instructions Cycles
  5268                           ; simple_byte            7     4 (average)
  5269                           ;	Chosen strategy is simple_byte
  5270  009F02  0A00               	xorlw	0	; case 0
  5271  009F04  B4D8               	btfsc	status,2,c
  5272  009F06  0012               	return	
  5273  009F08  0A01               	xorlw	1	; case 1
  5274  009F0A  0012               	return	
  5275  009F0C                     __end_of_MdmWifiHttp_MainTask:
  5276                           	opt stack 0
  5277                           tosu	equ	0xFFF
  5278                           tosh	equ	0xFFE
  5279                           tosl	equ	0xFFD
  5280                           pclath	equ	0xFFA
  5281                           tblptru	equ	0xFF8
  5282                           tblptrh	equ	0xFF7
  5283                           tblptrl	equ	0xFF6
  5284                           tablat	equ	0xFF5
  5285                           prodh	equ	0xFF4
  5286                           prodl	equ	0xFF3
  5287                           intcon	equ	0xFF2
  5288                           intcon2	equ	0xFF1
  5289                           intcon3	equ	0xFF0
  5290                           postinc0	equ	0xFEE
  5291                           plusw0	equ	0xFEB
  5292                           wreg	equ	0xFE8
  5293                           postinc1	equ	0xFE6
  5294                           postdec1	equ	0xFE5
  5295                           fsr1h	equ	0xFE2
  5296                           fsr1l	equ	0xFE1
  5297                           indf2	equ	0xFDF
  5298                           postinc2	equ	0xFDE
  5299                           postdec2	equ	0xFDD
  5300                           plusw2	equ	0xFDB
  5301                           fsr2h	equ	0xFDA
  5302                           fsr2l	equ	0xFD9
  5303                           status	equ	0xFD8
  5304                           
  5305 ;; *************** function _MdmWifiCmd_MainTask *****************
  5306 ;; Defined at:
  5307 ;;		line 330 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  Options         1    wreg     unsigned char 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  Options         1    0[COMRAM] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      void 
  5314 ;; Registers used:
  5315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5325 ;;Total ram usage:        0 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:   15
  5328 ;; This function calls:
  5329 ;;		_ReceiveDataSm
  5330 ;;		_SendDataSm
  5331 ;;		_StartConnectionSm
  5332 ;; This function is called by:
  5333 ;;		_InitializeTasks
  5334 ;;		_ScheduleTasks
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text20
  5339  00A1D4                     __ptext20:
  5340                           	opt stack 0
  5341  00A1D4                     _MdmWifiCmd_MainTask:
  5342                           	opt stack 13
  5343                           
  5344                           ;mdm_wifi_cmd.c: 332: switch (SystemState)
  5345                           
  5346                           ;incstack = 0
  5347  00A1D4  D007               	goto	l1022
  5348  00A1D6                     
  5349                           ;mdm_wifi_cmd.c: 342: StartConnectionSm();
  5350  00A1D6  EC86  F06F         	call	_StartConnectionSm	;wreg free
  5351                           
  5352                           ;mdm_wifi_cmd.c: 344: SendDataSm();
  5353  00A1DA  EC10  F06C         	call	_SendDataSm	;wreg free
  5354                           
  5355                           ;mdm_wifi_cmd.c: 346: ReceiveDataSm();
  5356  00A1DE  ECDD  F053         	call	_ReceiveDataSm	;wreg free
  5357                           
  5358                           ;mdm_wifi_cmd.c: 352: }
  5359                           
  5360                           ;mdm_wifi_cmd.c: 351: break;
  5361                           
  5362                           ;mdm_wifi_cmd.c: 350: default:
  5363                           
  5364                           ;mdm_wifi_cmd.c: 347: break;
  5365  00A1E2  0012               	return	
  5366  00A1E4                     l1022:
  5367  00A1E4  0100               	movlb	0	; () banked
  5368  00A1E6  51FE               	movf	_SystemState& (0+255),w,b
  5369                           
  5370                           ; Switch size 1, requested type "space"
  5371                           ; Number of cases is 2, Range of values is 0 to 1
  5372                           ; switch strategies available:
  5373                           ; Name         Instructions Cycles
  5374                           ; simple_byte            7     4 (average)
  5375                           ;	Chosen strategy is simple_byte
  5376  00A1E8  0A00               	xorlw	0	; case 0
  5377  00A1EA  B4D8               	btfsc	status,2,c
  5378  00A1EC  0012               	return	
  5379  00A1EE  0A01               	xorlw	1	; case 1
  5380  00A1F0  A4D8               	btfss	status,2,c
  5381  00A1F2  0012               	return	
  5382  00A1F4  D7F0               	goto	l1025
  5383  00A1F6                     __end_of_MdmWifiCmd_MainTask:
  5384                           	opt stack 0
  5385                           tosu	equ	0xFFF
  5386                           tosh	equ	0xFFE
  5387                           tosl	equ	0xFFD
  5388                           pclath	equ	0xFFA
  5389                           tblptru	equ	0xFF8
  5390                           tblptrh	equ	0xFF7
  5391                           tblptrl	equ	0xFF6
  5392                           tablat	equ	0xFF5
  5393                           prodh	equ	0xFF4
  5394                           prodl	equ	0xFF3
  5395                           intcon	equ	0xFF2
  5396                           intcon2	equ	0xFF1
  5397                           intcon3	equ	0xFF0
  5398                           postinc0	equ	0xFEE
  5399                           plusw0	equ	0xFEB
  5400                           wreg	equ	0xFE8
  5401                           postinc1	equ	0xFE6
  5402                           postdec1	equ	0xFE5
  5403                           fsr1h	equ	0xFE2
  5404                           fsr1l	equ	0xFE1
  5405                           indf2	equ	0xFDF
  5406                           postinc2	equ	0xFDE
  5407                           postdec2	equ	0xFDD
  5408                           plusw2	equ	0xFDB
  5409                           fsr2h	equ	0xFDA
  5410                           fsr2l	equ	0xFD9
  5411                           status	equ	0xFD8
  5412                           
  5413 ;; *************** function _MdmWifi_MainTask *****************
  5414 ;; Defined at:
  5415 ;;		line 283 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  Options         1    wreg     unsigned char 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  Options         1    0[COMRAM] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5433 ;;Total ram usage:        0 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:   14
  5436 ;; This function calls:
  5437 ;;		_MdmWifiEvtParser
  5438 ;;		_MdmWifiGetUartData
  5439 ;;		_UartSetConfig
  5440 ;;		_Uart_InitUartModule
  5441 ;; This function is called by:
  5442 ;;		_InitializeTasks
  5443 ;;		_ScheduleTasks
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text21
  5448  00A45E                     __ptext21:
  5449                           	opt stack 0
  5450  00A45E                     _MdmWifi_MainTask:
  5451                           	opt stack 14
  5452                           
  5453                           ;mdm_wifi.c: 285: switch (SystemState)
  5454                           
  5455                           ;incstack = 0
  5456  00A45E  D010               	goto	l884
  5457  00A460                     
  5458                           ;mdm_wifi.c: 290: UartSetConfig();
  5459  00A460  ECDA  F055         	call	_UartSetConfig	;wreg free
  5460                           
  5461                           ;mdm_wifi.c: 292: Uart_InitUartModule(((UINT8)(1)),&UartConfig);
  5462  00A464  0E78               	movlw	low _UartConfig
  5463  00A466  0100               	movlb	0	; () banked
  5464  00A468  6F80               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  5465  00A46A  0E01               	movlw	high _UartConfig
  5466  00A46C  6F81               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  5467  00A46E  0E01               	movlw	1
  5468  00A470  ECF1  F070         	call	_Uart_InitUartModule
  5469                           
  5470                           ;mdm_wifi.c: 293: break;
  5471  00A474  0012               	return	
  5472  00A476                     
  5473                           ;mdm_wifi.c: 298: MdmWifiGetUartData();
  5474  00A476  ECF7  F060         	call	_MdmWifiGetUartData	;wreg free
  5475                           
  5476                           ;mdm_wifi.c: 300: MdmWifiEvtParser();
  5477  00A47A  ECC8  F057         	call	_MdmWifiEvtParser	;wreg free
  5478                           
  5479                           ;mdm_wifi.c: 310: }
  5480                           
  5481                           ;mdm_wifi.c: 309: break;
  5482                           
  5483                           ;mdm_wifi.c: 308: default:
  5484                           
  5485                           ;mdm_wifi.c: 305: break;
  5486  00A47E  0012               	return	
  5487  00A480                     l884:
  5488  00A480  0100               	movlb	0	; () banked
  5489  00A482  51FE               	movf	_SystemState& (0+255),w,b
  5490                           
  5491                           ; Switch size 1, requested type "space"
  5492                           ; Number of cases is 2, Range of values is 0 to 1
  5493                           ; switch strategies available:
  5494                           ; Name         Instructions Cycles
  5495                           ; simple_byte            7     4 (average)
  5496                           ;	Chosen strategy is simple_byte
  5497  00A484  0A00               	xorlw	0	; case 0
  5498  00A486  B4D8               	btfsc	status,2,c
  5499  00A488  D7EB               	goto	l885
  5500  00A48A  0A01               	xorlw	1	; case 1
  5501  00A48C  A4D8               	btfss	status,2,c
  5502  00A48E  0012               	return	
  5503  00A490  D7F2               	goto	l887
  5504  00A492                     __end_of_MdmWifi_MainTask:
  5505                           	opt stack 0
  5506                           tosu	equ	0xFFF
  5507                           tosh	equ	0xFFE
  5508                           tosl	equ	0xFFD
  5509                           pclath	equ	0xFFA
  5510                           tblptru	equ	0xFF8
  5511                           tblptrh	equ	0xFF7
  5512                           tblptrl	equ	0xFF6
  5513                           tablat	equ	0xFF5
  5514                           prodh	equ	0xFF4
  5515                           prodl	equ	0xFF3
  5516                           intcon	equ	0xFF2
  5517                           intcon2	equ	0xFF1
  5518                           intcon3	equ	0xFF0
  5519                           postinc0	equ	0xFEE
  5520                           plusw0	equ	0xFEB
  5521                           wreg	equ	0xFE8
  5522                           postinc1	equ	0xFE6
  5523                           postdec1	equ	0xFE5
  5524                           fsr1h	equ	0xFE2
  5525                           fsr1l	equ	0xFE1
  5526                           indf2	equ	0xFDF
  5527                           postinc2	equ	0xFDE
  5528                           postdec2	equ	0xFDD
  5529                           plusw2	equ	0xFDB
  5530                           fsr2h	equ	0xFDA
  5531                           fsr2l	equ	0xFD9
  5532                           status	equ	0xFD8
  5533                           
  5534 ;; *************** function _I2cSlv_MainTask *****************
  5535 ;; Defined at:
  5536 ;;		line 199 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  Options         1    wreg     unsigned char 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  Options         1    0[COMRAM] unsigned char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5554 ;;Total ram usage:        0 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:   14
  5557 ;; This function calls:
  5558 ;;		_I2cSendMsgSm
  5559 ;;		_I2cSetConfig
  5560 ;;		_I2c_InitI2cModule
  5561 ;;		_OsAlrm_SetOsAlarm
  5562 ;; This function is called by:
  5563 ;;		_InitializeTasks
  5564 ;;		_ScheduleTasks
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text22
  5569  00AAB2                     __ptext22:
  5570                           	opt stack 0
  5571  00AAB2                     _I2cSlv_MainTask:
  5572                           	opt stack 14
  5573                           
  5574                           ;i2c_slv.c: 201: switch (SystemState)
  5575                           
  5576                           ;incstack = 0
  5577  00AAB2  D020               	goto	l1174
  5578  00AAB4                     
  5579                           ;i2c_slv.c: 206: I2cSetConfig();
  5580  00AAB4  EC71  F051         	call	_I2cSetConfig	;wreg free
  5581                           
  5582                           ;i2c_slv.c: 208: I2c_InitI2cModule(&I2cConfig);
  5583  00AAB8  0E8D               	movlw	low _I2cConfig
  5584  00AABA  0100               	movlb	0	; () banked
  5585  00AABC  6F85               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  5586  00AABE  0E01               	movlw	high _I2cConfig
  5587  00AAC0  6F86               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  5588  00AAC2  EC00  F058         	call	_I2c_InitI2cModule	;wreg free
  5589                           
  5590                           ;i2c_slv.c: 210: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  5591  00AAC6  0E00               	movlw	0
  5592  00AAC8  0100               	movlb	0	; () banked
  5593  00AACA  6F67               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  5594  00AACC  0E00               	movlw	0
  5595  00AACE  6F66               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  5596  00AAD0  0E32               	movlw	50
  5597  00AAD2  6F68               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  5598  00AAD4  0E00               	movlw	0
  5599  00AAD6  6F69               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  5600  00AAD8  0E00               	movlw	0
  5601  00AADA  6F6A               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  5602  00AADC  0E00               	movlw	0
  5603  00AADE  6F6B               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  5604  00AAE0  0E34               	movlw	low _I2cDummyTx
  5605  00AAE2  6F6C               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  5606  00AAE4  0EA0               	movlw	high _I2cDummyTx
  5607  00AAE6  6F6D               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  5608  00AAE8  EC66  F05F         	call	_OsAlrm_SetOsAlarm	;wreg free
  5609                           
  5610                           ;i2c_slv.c: 211: break;
  5611  00AAEC  0012               	return	
  5612  00AAEE                     
  5613                           ;i2c_slv.c: 216: I2cSendMsgSm();
  5614  00AAEE  EC9E  F05D         	call	_I2cSendMsgSm	;wreg free
  5615                           
  5616                           ;i2c_slv.c: 222: }
  5617                           
  5618                           ;i2c_slv.c: 221: break;
  5619                           
  5620                           ;i2c_slv.c: 220: default:
  5621                           
  5622                           ;i2c_slv.c: 217: break;
  5623  00AAF2  0012               	return	
  5624  00AAF4                     l1174:
  5625  00AAF4  0100               	movlb	0	; () banked
  5626  00AAF6  51FE               	movf	_SystemState& (0+255),w,b
  5627                           
  5628                           ; Switch size 1, requested type "space"
  5629                           ; Number of cases is 2, Range of values is 0 to 1
  5630                           ; switch strategies available:
  5631                           ; Name         Instructions Cycles
  5632                           ; simple_byte            7     4 (average)
  5633                           ;	Chosen strategy is simple_byte
  5634  00AAF8  0A00               	xorlw	0	; case 0
  5635  00AAFA  B4D8               	btfsc	status,2,c
  5636  00AAFC  D7DB               	goto	l1175
  5637  00AAFE  0A01               	xorlw	1	; case 1
  5638  00AB00  A4D8               	btfss	status,2,c
  5639  00AB02  0012               	return	
  5640  00AB04  D7F4               	goto	l1177
  5641  00AB06                     __end_of_I2cSlv_MainTask:
  5642                           	opt stack 0
  5643                           tosu	equ	0xFFF
  5644                           tosh	equ	0xFFE
  5645                           tosl	equ	0xFFD
  5646                           pclath	equ	0xFFA
  5647                           tblptru	equ	0xFF8
  5648                           tblptrh	equ	0xFF7
  5649                           tblptrl	equ	0xFF6
  5650                           tablat	equ	0xFF5
  5651                           prodh	equ	0xFF4
  5652                           prodl	equ	0xFF3
  5653                           intcon	equ	0xFF2
  5654                           intcon2	equ	0xFF1
  5655                           intcon3	equ	0xFF0
  5656                           postinc0	equ	0xFEE
  5657                           plusw0	equ	0xFEB
  5658                           wreg	equ	0xFE8
  5659                           postinc1	equ	0xFE6
  5660                           postdec1	equ	0xFE5
  5661                           fsr1h	equ	0xFE2
  5662                           fsr1l	equ	0xFE1
  5663                           indf2	equ	0xFDF
  5664                           postinc2	equ	0xFDE
  5665                           postdec2	equ	0xFDD
  5666                           plusw2	equ	0xFDB
  5667                           fsr2h	equ	0xFDA
  5668                           fsr2l	equ	0xFD9
  5669                           status	equ	0xFD8
  5670                           
  5671 ;; *************** function _MdmWifi_DrvMainFn *****************
  5672 ;; Defined at:
  5673 ;;		line 154 in file "../Source/c/01_Hal/02_Drv/mdm_wifi_drv.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  Options         1    wreg     unsigned char 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  Options         1    0[COMRAM] unsigned char 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5691 ;;Total ram usage:        0 bytes
  5692 ;; Hardware stack levels used:    1
  5693 ;; Hardware stack levels required when called:   13
  5694 ;; This function calls:
  5695 ;;		_MdmWifi_StartWifiModemSm
  5696 ;; This function is called by:
  5697 ;;		_InitializeTasks
  5698 ;;		_ScheduleTasks
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text23
  5703  009E94                     __ptext23:
  5704                           	opt stack 0
  5705  009E94                     _MdmWifi_DrvMainFn:
  5706                           	opt stack 15
  5707                           
  5708                           ;mdm_wifi_drv.c: 157: MdmWifi_StartWifiModemSm();
  5709                           
  5710                           ;incstack = 0
  5711  009E94  ECF1  F058         	call	_MdmWifi_StartWifiModemSm	;wreg free
  5712  009E98  0012               	return		;funcret
  5713  009E9A                     __end_of_MdmWifi_DrvMainFn:
  5714                           	opt stack 0
  5715                           tosu	equ	0xFFF
  5716                           tosh	equ	0xFFE
  5717                           tosl	equ	0xFFD
  5718                           pclath	equ	0xFFA
  5719                           tblptru	equ	0xFF8
  5720                           tblptrh	equ	0xFF7
  5721                           tblptrl	equ	0xFF6
  5722                           tablat	equ	0xFF5
  5723                           prodh	equ	0xFF4
  5724                           prodl	equ	0xFF3
  5725                           intcon	equ	0xFF2
  5726                           intcon2	equ	0xFF1
  5727                           intcon3	equ	0xFF0
  5728                           postinc0	equ	0xFEE
  5729                           plusw0	equ	0xFEB
  5730                           wreg	equ	0xFE8
  5731                           postinc1	equ	0xFE6
  5732                           postdec1	equ	0xFE5
  5733                           fsr1h	equ	0xFE2
  5734                           fsr1l	equ	0xFE1
  5735                           indf2	equ	0xFDF
  5736                           postinc2	equ	0xFDE
  5737                           postdec2	equ	0xFDD
  5738                           plusw2	equ	0xFDB
  5739                           fsr2h	equ	0xFDA
  5740                           fsr2l	equ	0xFD9
  5741                           status	equ	0xFD8
  5742                           
  5743 ;; *************** function _UsbDevice_MainTask *****************
  5744 ;; Defined at:
  5745 ;;		line 72 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  Options         1    wreg     unsigned char 
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;  Options         1    0[COMRAM] unsigned char 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:   20
  5766 ;; This function calls:
  5767 ;;		_CDCTxService
  5768 ;;		_USBDeviceInit
  5769 ;;		_USBDeviceTasks
  5770 ;; This function is called by:
  5771 ;;		_InitializeTasks
  5772 ;;		_ScheduleTasks
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text24
  5777  00A1F6                     __ptext24:
  5778                           	opt stack 0
  5779  00A1F6                     _UsbDevice_MainTask:
  5780                           	opt stack 8
  5781                           
  5782                           ;usb_device_mgr.c: 74: switch (SystemState)
  5783                           
  5784                           ;incstack = 0
  5785  00A1F6  D008               	goto	l1729
  5786  00A1F8                     
  5787                           ;usb_device_mgr.c: 79: USBDeviceInit();
  5788  00A1F8  EC94  F067         	call	_USBDeviceInit	;wreg free
  5789                           
  5790                           ;usb_device_mgr.c: 80: ;
  5791                           ;usb_device_mgr.c: 81: break;
  5792  00A1FC  0012               	return	
  5793  00A1FE                     
  5794                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  5795  00A1FE  EC64  F06A         	call	_USBDeviceTasks	;wreg free
  5796                           
  5797                           ;usb_device_mgr.c: 90: CDCTxService();
  5798  00A202  ECF2  F066         	call	_CDCTxService	;wreg free
  5799                           
  5800                           ;usb_device_mgr.c: 101: }
  5801                           
  5802                           ;usb_device_mgr.c: 100: break;
  5803                           
  5804                           ;usb_device_mgr.c: 99: default:
  5805                           
  5806                           ;usb_device_mgr.c: 96: break;
  5807  00A206  0012               	return	
  5808  00A208                     l1729:
  5809  00A208  0100               	movlb	0	; () banked
  5810  00A20A  51FE               	movf	_SystemState& (0+255),w,b
  5811                           
  5812                           ; Switch size 1, requested type "space"
  5813                           ; Number of cases is 2, Range of values is 0 to 1
  5814                           ; switch strategies available:
  5815                           ; Name         Instructions Cycles
  5816                           ; simple_byte            7     4 (average)
  5817                           ;	Chosen strategy is simple_byte
  5818  00A20C  0A00               	xorlw	0	; case 0
  5819  00A20E  B4D8               	btfsc	status,2,c
  5820  00A210  D7F3               	goto	l1730
  5821  00A212  0A01               	xorlw	1	; case 1
  5822  00A214  A4D8               	btfss	status,2,c
  5823  00A216  0012               	return	
  5824  00A218  D7F2               	goto	l1732
  5825  00A21A                     __end_of_UsbDevice_MainTask:
  5826                           	opt stack 0
  5827                           tosu	equ	0xFFF
  5828                           tosh	equ	0xFFE
  5829                           tosl	equ	0xFFD
  5830                           pclath	equ	0xFFA
  5831                           tblptru	equ	0xFF8
  5832                           tblptrh	equ	0xFF7
  5833                           tblptrl	equ	0xFF6
  5834                           tablat	equ	0xFF5
  5835                           prodh	equ	0xFF4
  5836                           prodl	equ	0xFF3
  5837                           intcon	equ	0xFF2
  5838                           intcon2	equ	0xFF1
  5839                           intcon3	equ	0xFF0
  5840                           postinc0	equ	0xFEE
  5841                           plusw0	equ	0xFEB
  5842                           wreg	equ	0xFE8
  5843                           postinc1	equ	0xFE6
  5844                           postdec1	equ	0xFE5
  5845                           fsr1h	equ	0xFE2
  5846                           fsr1l	equ	0xFE1
  5847                           indf2	equ	0xFDF
  5848                           postinc2	equ	0xFDE
  5849                           postdec2	equ	0xFDD
  5850                           plusw2	equ	0xFDB
  5851                           fsr2h	equ	0xFDA
  5852                           fsr2l	equ	0xFD9
  5853                           status	equ	0xFD8
  5854                           
  5855 ;; *************** function _USBDeviceTasks *****************
  5856 ;; Defined at:
  5857 ;;		line 495 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;		None
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  i               1   27[BANK0 ] unsigned char 
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  1    wreg      void 
  5864 ;; Registers used:
  5865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5875 ;;Total ram usage:        1 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:   19
  5878 ;; This function calls:
  5879 ;;		_USBCtrlEPAllowStatusStage
  5880 ;;		_USBCtrlEPService
  5881 ;;		_USBDeviceInit
  5882 ;;		_USBIncrement1msInternalTimers
  5883 ;;		_USBStallHandler
  5884 ;;		_USBSuspend
  5885 ;;		_USBWakeFromSuspend
  5886 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5887 ;; This function is called by:
  5888 ;;		_UsbDevice_MainTask
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text25
  5893  00D4C8                     __ptext25:
  5894                           	opt stack 0
  5895  00D4C8                     _USBDeviceTasks:
  5896                           	opt stack 8
  5897                           
  5898                           ;usb_device.c: 562: }
  5899                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  5900                           
  5901                           ; BSR set to: 0
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;usb_device.c: 561: return;
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  5908                           
  5909                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  5910                           
  5911                           ;usb_device.c: 529: UIE = 0;
  5912                           
  5913                           ;usb_device.c: 524: {
  5914                           ;usb_device.c: 526: UCON = 0;
  5915                           
  5916                           ;usb_device.c: 497: uint8_t i;
  5917                           ;usb_device.c: 523: if (1 != 1)
  5918                           
  5919                           ;incstack = 0
  5920  00D4C8  0100               	movlb	0	; () banked
  5921  00D4CA  51FD               	movf	_USBDeviceState& (0+255),w,b
  5922  00D4CC  A4D8               	btfss	status,2,c
  5923  00D4CE  D012               	goto	l1352
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;usb_device.c: 585: {
  5927                           ;usb_device.c: 587: UCON = 0;
  5928  00D4D0  0E00               	movlw	0
  5929  00D4D2  6E65               	movwf	3941,c	;volatile
  5930                           
  5931                           ;usb_device.c: 590: UIE = 0;
  5932  00D4D4  0E00               	movlw	0
  5933  00D4D6  010F               	movlb	15	; () banked
  5934  00D4D8  6F36               	movwf	54,b	;volatile
  5935                           
  5936                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5937  00D4DA  0E16               	movlw	22
  5938  00D4DC  6F39               	movwf	57,b	;volatile
  5939  00D4DE  0E9F               	movlw	159
  5940  00D4E0  6F37               	movwf	55,b	;volatile
  5941  00D4E2  0E7B               	movlw	123
  5942  00D4E4  6F36               	movwf	54,b	;volatile
  5943                           
  5944                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  5945  00D4E6  D001               	goto	l1353
  5946  00D4E8                     l1354:
  5947  00D4E8  8665               	bsf	3941,3,c	;volatile
  5948  00D4EA                     l1353:
  5949  00D4EA  A665               	btfss	3941,3,c	;volatile
  5950  00D4EC  D7FD               	goto	l1354
  5951                           
  5952                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  5953  00D4EE  0E01               	movlw	1
  5954  00D4F0  0100               	movlb	0	; () banked
  5955  00D4F2  6FFD               	movwf	_USBDeviceState& (0+255),b
  5956  00D4F4                     l1352:
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;usb_device.c: 605: }
  5960                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  5961                           
  5962                           ; BSR set to: 0
  5963  00D4F4  05FD               	decf	_USBDeviceState& (0+255),w,b
  5964  00D4F6  B4D8               	btfsc	status,2,c
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;usb_device.c: 609: {
  5968                           ;usb_device.c: 619: if(!UCONbits.SE0)
  5969  00D4F8  BA65               	btfsc	3941,5,c	;volatile
  5970  00D4FA  D00A               	goto	l1357
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;usb_device.c: 620: {
  5974                           ;usb_device.c: 626: {UIR = 0;};
  5975  00D4FC  0E00               	movlw	0
  5976  00D4FE  6E62               	movwf	3938,c	;volatile
  5977                           
  5978                           ;usb_device.c: 630: UIE=0;
  5979  00D500  0E00               	movlw	0
  5980  00D502  010F               	movlb	15	; () banked
  5981  00D504  6F36               	movwf	54,b	;volatile
  5982                           
  5983                           ; BSR set to: 15
  5984                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  5985  00D506  8136               	bsf	54,0,b	;volatile
  5986                           
  5987                           ; BSR set to: 15
  5988                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  5989  00D508  8936               	bsf	54,4,b	;volatile
  5990                           
  5991                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  5992  00D50A  0E02               	movlw	2
  5993  00D50C  0100               	movlb	0	; () banked
  5994  00D50E  6FFD               	movwf	_USBDeviceState& (0+255),b
  5995  00D510                     l1357:
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;usb_device.c: 635: }
  5999                           ;usb_device.c: 636: }
  6000                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  6001                           
  6002                           ; BSR set to: 0
  6003                           
  6004                           ; BSR set to: 0
  6005  00D510  A462               	btfss	3938,2,c	;volatile
  6006  00D512  D006               	goto	l1358
  6007                           
  6008                           ; BSR set to: 0
  6009  00D514  010F               	movlb	15	; () banked
  6010  00D516  A536               	btfss	54,2,b	;volatile
  6011  00D518  D003               	goto	l1358
  6012                           
  6013                           ; BSR set to: 15
  6014                           ;usb_device.c: 653: {
  6015                           ;usb_device.c: 654: (UIR &= 0xFB);
  6016  00D51A  9462               	bcf	3938,2,c	;volatile
  6017                           
  6018                           ; BSR set to: 15
  6019                           ;usb_device.c: 658: USBWakeFromSuspend();
  6020  00D51C  EC9C  F052         	call	_USBWakeFromSuspend	;wreg free
  6021  00D520                     l1358:
  6022                           
  6023                           ;usb_device.c: 660: }
  6024                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  6025  00D520  A265               	btfss	3941,1,c	;volatile
  6026  00D522  D002               	goto	l1359
  6027                           
  6028                           ;usb_device.c: 666: {
  6029                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  6030  00D524  98A1               	bcf	4001,4,c	;volatile
  6031                           
  6032                           ;usb_device.c: 668: return;
  6033  00D526  0012               	return	
  6034  00D528                     l1359:
  6035                           
  6036                           ;usb_device.c: 669: }
  6037                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  6038  00D528  A062               	btfss	3938,0,c	;volatile
  6039  00D52A  D009               	goto	l1360
  6040  00D52C  010F               	movlb	15	; () banked
  6041  00D52E  A136               	btfss	54,0,b	;volatile
  6042  00D530  D006               	goto	l1360
  6043                           
  6044                           ; BSR set to: 15
  6045                           ;usb_device.c: 682: {
  6046                           ;usb_device.c: 683: USBDeviceInit();
  6047  00D532  EC94  F067         	call	_USBDeviceInit	;wreg free
  6048                           
  6049                           ;usb_device.c: 687: ;
  6050                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  6051  00D536  0E04               	movlw	4
  6052  00D538  0100               	movlb	0	; () banked
  6053  00D53A  6FFD               	movwf	_USBDeviceState& (0+255),b
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;usb_device.c: 699: (UIR &= 0xFE);
  6057  00D53C  9062               	bcf	3938,0,c	;volatile
  6058  00D53E                     l1360:
  6059                           
  6060                           ;usb_device.c: 700: }
  6061                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  6062                           
  6063                           ; BSR set to: 0
  6064  00D53E  A862               	btfss	3938,4,c	;volatile
  6065  00D540  D004               	goto	l1361
  6066  00D542  010F               	movlb	15	; () banked
  6067  00D544  B936               	btfsc	54,4,b	;volatile
  6068                           
  6069                           ; BSR set to: 15
  6070                           ;usb_device.c: 706: {
  6071                           ;usb_device.c: 712: USBSuspend();
  6072  00D546  EC16  F052         	call	_USBSuspend	;wreg free
  6073  00D54A                     l1361:
  6074                           
  6075                           ;usb_device.c: 714: }
  6076                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  6077  00D54A  AC62               	btfss	3938,6,c	;volatile
  6078  00D54C  D01C               	goto	l1365
  6079                           
  6080                           ;usb_device.c: 727: {
  6081                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  6082  00D54E  010F               	movlb	15	; () banked
  6083  00D550  AD36               	btfss	54,6,b	;volatile
  6084  00D552  D00F               	goto	l1363
  6085                           
  6086                           ; BSR set to: 15
  6087                           ;usb_device.c: 730: {
  6088                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  6089  00D554  0E00               	movlw	0
  6090  00D556  0100               	movlb	0	; () banked
  6091  00D558  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6092  00D55A  0E73               	movlw	115
  6093  00D55C  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6094  00D55E  0E00               	movlw	0
  6095  00D560  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6096  00D562  0E00               	movlw	0
  6097  00D564  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6098  00D566  0E00               	movlw	0
  6099  00D568  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6100  00D56A  0E01               	movlw	1
  6101  00D56C  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6102  00D56E  EC61  F056         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6103  00D572                     l1363:
  6104                           
  6105                           ;usb_device.c: 732: }
  6106                           ;usb_device.c: 733: (UIR &= 0xBF);
  6107  00D572  9C62               	bcf	3938,6,c	;volatile
  6108                           
  6109                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  6110  00D574  EC64  F050         	call	_USBIncrement1msInternalTimers	;wreg free
  6111                           
  6112                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  6113  00D578  504A               	movf	_USBStatusStageTimeoutCounter,w,c
  6114  00D57A  A4D8               	btfss	status,2,c
  6115                           
  6116                           ;usb_device.c: 754: {
  6117                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  6118  00D57C  064A               	decf	_USBStatusStageTimeoutCounter,f,c
  6119                           
  6120                           ;usb_device.c: 756: }
  6121                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  6122  00D57E  504A               	movf	_USBStatusStageTimeoutCounter,w,c
  6123  00D580  B4D8               	btfsc	status,2,c
  6124                           
  6125                           ;usb_device.c: 763: {
  6126                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  6127  00D582  EC92  F060         	call	_USBCtrlEPAllowStatusStage	;wreg free
  6128  00D586                     l1365:
  6129                           
  6130                           ;usb_device.c: 765: }
  6131                           ;usb_device.c: 767: }
  6132                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  6133  00D586  AA62               	btfss	3938,5,c	;volatile
  6134  00D588  D004               	goto	l1366
  6135  00D58A  010F               	movlb	15	; () banked
  6136  00D58C  BB36               	btfsc	54,5,b	;volatile
  6137                           
  6138                           ; BSR set to: 15
  6139                           ;usb_device.c: 770: {
  6140                           ;usb_device.c: 771: USBStallHandler();
  6141  00D58E  ECBB  F053         	call	_USBStallHandler	;wreg free
  6142  00D592                     l1366:
  6143                           
  6144                           ;usb_device.c: 772: }
  6145                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  6146  00D592  A262               	btfss	3938,1,c	;volatile
  6147  00D594  D013               	goto	l1367
  6148  00D596  010F               	movlb	15	; () banked
  6149  00D598  A336               	btfss	54,1,b	;volatile
  6150  00D59A  D010               	goto	l1367
  6151                           
  6152                           ; BSR set to: 15
  6153                           ;usb_device.c: 775: {
  6154                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  6155  00D59C  0E7F               	movlw	127
  6156  00D59E  0100               	movlb	0	; () banked
  6157  00D5A0  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6158  00D5A2  696C               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6159  00D5A4  0E00               	movlw	0
  6160  00D5A6  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6161  00D5A8  0E00               	movlw	0
  6162  00D5AA  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6163  00D5AC  0E00               	movlw	0
  6164  00D5AE  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6165  00D5B0  0E01               	movlw	1
  6166  00D5B2  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6167  00D5B4  EC61  F056         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6168                           
  6169                           ;usb_device.c: 777: {UEIR = 0;};
  6170  00D5B8  0E00               	movlw	0
  6171  00D5BA  6E63               	movwf	3939,c	;volatile
  6172  00D5BC                     l1367:
  6173                           
  6174                           ;usb_device.c: 785: }
  6175                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  6176  00D5BC  0E04               	movlw	4
  6177  00D5BE  0100               	movlb	0	; () banked
  6178  00D5C0  61FD               	cpfslt	_USBDeviceState& (0+255),b
  6179  00D5C2  D002               	goto	l1368
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;usb_device.c: 793: {
  6183                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  6184  00D5C4  98A1               	bcf	4001,4,c	;volatile
  6185                           
  6186                           ;usb_device.c: 795: return;
  6187  00D5C6  0012               	return	
  6188  00D5C8                     l1368:
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;usb_device.c: 796: }
  6192                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  6193  00D5C8  010F               	movlb	15	; () banked
  6194  00D5CA  A736               	btfss	54,3,b	;volatile
  6195  00D5CC  D03C               	goto	u7450
  6196                           
  6197                           ; BSR set to: 15
  6198                           ;usb_device.c: 802: {
  6199                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  6200  00D5CE  0E00               	movlw	0
  6201  00D5D0  0100               	movlb	0	; () banked
  6202  00D5D2  6F7B               	movwf	USBDeviceTasks@i& (0+255),b
  6203  00D5D4                     l8698:
  6204                           
  6205                           ; BSR set to: 0
  6206  00D5D4  0E03               	movlw	3
  6207  00D5D6  657B               	cpfsgt	USBDeviceTasks@i& (0+255),b
  6208  00D5D8  D001               	goto	l1370
  6209  00D5DA  D035               	goto	u7450
  6210  00D5DC                     l1370:
  6211                           
  6212                           ; BSR set to: 0
  6213                           ;usb_device.c: 804: {
  6214                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  6215  00D5DC  A662               	btfss	3938,3,c	;volatile
  6216  00D5DE  D033               	goto	u7450
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;usb_device.c: 806: {
  6220                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  6221  00D5E0  CF64 F0FF          	movff	3940,_USTATcopy	;volatile
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  6225  00D5E4  31FF               	rrcf	_USTATcopy& (0+255),w,b
  6226  00D5E6  32E8               	rrcf	wreg,f,c
  6227  00D5E8  32E8               	rrcf	wreg,f,c
  6228  00D5EA  0B0F               	andlw	15
  6229  00D5EC  6E4B               	movwf	_endpoint_number,c
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;usb_device.c: 811: (UIR &= 0xF7);
  6233  00D5EE  9662               	bcf	3938,3,c	;volatile
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  6237  00D5F0  B5FF               	btfsc	_USTATcopy& (0+255),2,b
  6238  00D5F2  D007               	goto	l1373
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;usb_device.c: 817: {
  6242                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  6243  00D5F4  504B               	movf	_endpoint_number,w,c
  6244  00D5F6  0D01               	mullw	1
  6245  00D5F8  0E38               	movlw	low _ep_data_out
  6246  00D5FA  24F3               	addwf	prodl,w,c
  6247  00D5FC  6ED9               	movwf	fsr2l,c
  6248  00D5FE  0E01               	movlw	high _ep_data_out
  6249  00D600  D006               	goto	L3
  6250  00D602                     l1373:
  6251                           
  6252                           ;usb_device.c: 820: else
  6253                           ;usb_device.c: 821: {
  6254                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  6255                           
  6256                           ; BSR set to: 1
  6257  00D602  504B               	movf	_endpoint_number,w,c
  6258  00D604  0D01               	mullw	1
  6259  00D606  0E3B               	movlw	low _ep_data_in
  6260  00D608  24F3               	addwf	prodl,w,c
  6261  00D60A  6ED9               	movwf	fsr2l,c
  6262  00D60C  0E01               	movlw	high _ep_data_in
  6263  00D60E                     L3:
  6264  00D60E  20F4               	addwfc	prodh,w,c
  6265  00D610  6EDA               	movwf	fsr2h,c
  6266  00D612  0101               	movlb	1	; () banked
  6267  00D614  70DF               	btg	indf2,0,c
  6268                           
  6269                           ; BSR set to: 1
  6270                           ;usb_device.c: 823: }
  6271                           ;usb_device.c: 828: if(endpoint_number == 0)
  6272                           
  6273                           ; BSR set to: 1
  6274  00D616  504B               	movf	_endpoint_number,w,c
  6275  00D618  A4D8               	btfss	status,2,c
  6276  00D61A  D003               	goto	l1375
  6277                           
  6278                           ; BSR set to: 1
  6279                           ;usb_device.c: 829: {
  6280                           ;usb_device.c: 830: USBCtrlEPService();
  6281  00D61C  EC24  F05B         	call	_USBCtrlEPService	;wreg free
  6282                           
  6283                           ;usb_device.c: 831: }
  6284  00D620  D00F               	goto	l1377
  6285  00D622                     l1375:
  6286                           
  6287                           ;usb_device.c: 832: else
  6288                           ;usb_device.c: 833: {
  6289                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  6290  00D622  0E00               	movlw	0
  6291  00D624  0100               	movlb	0	; () banked
  6292  00D626  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6293  00D628  0E72               	movlw	114
  6294  00D62A  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6295  00D62C  0EFF               	movlw	low _USTATcopy
  6296  00D62E  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6297  00D630  0E00               	movlw	high _USTATcopy
  6298  00D632  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6299  00D634  0E00               	movlw	0
  6300  00D636  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6301  00D638  0E00               	movlw	0
  6302  00D63A  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6303  00D63C  EC61  F056         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6304  00D640                     l1377:
  6305  00D640  0100               	movlb	0	; () banked
  6306  00D642  2B7B               	incf	USBDeviceTasks@i& (0+255),f,b
  6307  00D644  D7C7               	goto	l8698
  6308  00D646                     u7450:
  6309                           
  6310                           ;usb_device.c: 840: }
  6311                           ;usb_device.c: 841: }
  6312                           ;usb_device.c: 842: }
  6313                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  6314                           
  6315                           ; BSR set to: 0
  6316  00D646  98A1               	bcf	4001,4,c	;volatile
  6317  00D648  0012               	return		;funcret
  6318  00D64A                     __end_of_USBDeviceTasks:
  6319                           	opt stack 0
  6320                           tosu	equ	0xFFF
  6321                           tosh	equ	0xFFE
  6322                           tosl	equ	0xFFD
  6323                           pclath	equ	0xFFA
  6324                           tblptru	equ	0xFF8
  6325                           tblptrh	equ	0xFF7
  6326                           tblptrl	equ	0xFF6
  6327                           tablat	equ	0xFF5
  6328                           prodh	equ	0xFF4
  6329                           prodl	equ	0xFF3
  6330                           intcon	equ	0xFF2
  6331                           intcon2	equ	0xFF1
  6332                           intcon3	equ	0xFF0
  6333                           postinc0	equ	0xFEE
  6334                           plusw0	equ	0xFEB
  6335                           wreg	equ	0xFE8
  6336                           postinc1	equ	0xFE6
  6337                           postdec1	equ	0xFE5
  6338                           fsr1h	equ	0xFE2
  6339                           fsr1l	equ	0xFE1
  6340                           indf2	equ	0xFDF
  6341                           postinc2	equ	0xFDE
  6342                           postdec2	equ	0xFDD
  6343                           plusw2	equ	0xFDB
  6344                           fsr2h	equ	0xFDA
  6345                           fsr2l	equ	0xFD9
  6346                           status	equ	0xFD8
  6347                           
  6348 ;; *************** function _USBWakeFromSuspend *****************
  6349 ;; Defined at:
  6350 ;;		line 2321 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;		None
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;		None
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6368 ;;Total ram usage:        0 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; Hardware stack levels required when called:   15
  6371 ;; This function calls:
  6372 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6373 ;; This function is called by:
  6374 ;;		_USBDeviceTasks
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text26
  6379  00A538                     __ptext26:
  6380                           	opt stack 0
  6381  00A538                     _USBWakeFromSuspend:
  6382                           	opt stack 11
  6383                           
  6384                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  6385                           
  6386                           ;incstack = 0
  6387  00A538  0E00               	movlw	0
  6388  00A53A  0101               	movlb	1	; () banked
  6389  00A53C  6F61               	movwf	_USBBusIsSuspended& (0+255),b
  6390                           
  6391                           ; BSR set to: 1
  6392                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  6393  00A53E  0E00               	movlw	0
  6394  00A540  0100               	movlb	0	; () banked
  6395  00A542  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6396  00A544  0E74               	movlw	116
  6397  00A546  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6398  00A548  0E00               	movlw	0
  6399  00A54A  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6400  00A54C  0E00               	movlw	0
  6401  00A54E  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6402  00A550  0E00               	movlw	0
  6403  00A552  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6404  00A554  0E00               	movlw	0
  6405  00A556  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6406  00A558  EC61  F056         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6407                           
  6408                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  6409  00A55C  9265               	bcf	3941,1,c	;volatile
  6410                           
  6411                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  6412  00A55E  010F               	movlb	15	; () banked
  6413  00A560  9536               	bcf	54,2,b	;volatile
  6414                           
  6415                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  6416  00A562  D001               	goto	l1505
  6417  00A564                     
  6418                           ;usb_device.c: 2361: {
  6419                           ;usb_device.c: 2362: (UIR &= 0xFB);
  6420                           
  6421                           ; BSR set to: 15
  6422  00A564  9462               	bcf	3938,2,c	;volatile
  6423  00A566                     l1505:
  6424  00A566  B462               	btfsc	3938,2,c	;volatile
  6425  00A568  D7FD               	goto	l1506
  6426                           
  6427                           ;usb_device.c: 2363: }
  6428                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  6429  00A56A  0E00               	movlw	0
  6430  00A56C  0101               	movlb	1	; () banked
  6431  00A56E  6F5D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6432                           
  6433                           ; BSR set to: 1
  6434  00A570  0012               	return		;funcret
  6435  00A572                     __end_of_USBWakeFromSuspend:
  6436                           	opt stack 0
  6437                           tosu	equ	0xFFF
  6438                           tosh	equ	0xFFE
  6439                           tosl	equ	0xFFD
  6440                           pclath	equ	0xFFA
  6441                           tblptru	equ	0xFF8
  6442                           tblptrh	equ	0xFF7
  6443                           tblptrl	equ	0xFF6
  6444                           tablat	equ	0xFF5
  6445                           prodh	equ	0xFF4
  6446                           prodl	equ	0xFF3
  6447                           intcon	equ	0xFF2
  6448                           intcon2	equ	0xFF1
  6449                           intcon3	equ	0xFF0
  6450                           postinc0	equ	0xFEE
  6451                           plusw0	equ	0xFEB
  6452                           wreg	equ	0xFE8
  6453                           postinc1	equ	0xFE6
  6454                           postdec1	equ	0xFE5
  6455                           fsr1h	equ	0xFE2
  6456                           fsr1l	equ	0xFE1
  6457                           indf2	equ	0xFDF
  6458                           postinc2	equ	0xFDE
  6459                           postdec2	equ	0xFDD
  6460                           plusw2	equ	0xFDB
  6461                           fsr2h	equ	0xFDA
  6462                           fsr2l	equ	0xFD9
  6463                           status	equ	0xFD8
  6464                           
  6465 ;; *************** function _USBSuspend *****************
  6466 ;; Defined at:
  6467 ;;		line 2263 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;		None
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;		None
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  1    wreg      void 
  6474 ;; Registers used:
  6475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6485 ;;Total ram usage:        0 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; Hardware stack levels required when called:   15
  6488 ;; This function calls:
  6489 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6490 ;; This function is called by:
  6491 ;;		_USBDeviceTasks
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text27
  6496  00A42C                     __ptext27:
  6497                           	opt stack 0
  6498  00A42C                     _USBSuspend:
  6499                           	opt stack 11
  6500                           
  6501                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  6502                           
  6503                           ; BSR set to: 1
  6504                           ;incstack = 0
  6505  00A42C  010F               	movlb	15	; () banked
  6506  00A42E  8536               	bsf	54,2,b	;volatile
  6507                           
  6508                           ; BSR set to: 15
  6509                           ;usb_device.c: 2289: (UIR &= 0xEF);
  6510  00A430  9862               	bcf	3938,4,c	;volatile
  6511                           
  6512                           ; BSR set to: 15
  6513                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  6514  00A432  8265               	bsf	3941,1,c	;volatile
  6515                           
  6516                           ; BSR set to: 15
  6517                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  6518  00A434  0E01               	movlw	1
  6519  00A436  0101               	movlb	1	; () banked
  6520  00A438  6F61               	movwf	_USBBusIsSuspended& (0+255),b
  6521                           
  6522                           ; BSR set to: 1
  6523                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  6524  00A43A  0E00               	movlw	0
  6525  00A43C  6F5D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6526                           
  6527                           ; BSR set to: 1
  6528                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  6529  00A43E  0E00               	movlw	0
  6530  00A440  0100               	movlb	0	; () banked
  6531  00A442  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6532  00A444  0E75               	movlw	117
  6533  00A446  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6534  00A448  0E00               	movlw	0
  6535  00A44A  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6536  00A44C  0E00               	movlw	0
  6537  00A44E  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6538  00A450  0E00               	movlw	0
  6539  00A452  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6540  00A454  0E00               	movlw	0
  6541  00A456  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6542  00A458  EC61  F056         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6543  00A45C  0012               	return		;funcret
  6544  00A45E                     __end_of_USBSuspend:
  6545                           	opt stack 0
  6546                           tosu	equ	0xFFF
  6547                           tosh	equ	0xFFE
  6548                           tosl	equ	0xFFD
  6549                           pclath	equ	0xFFA
  6550                           tblptru	equ	0xFF8
  6551                           tblptrh	equ	0xFF7
  6552                           tblptrl	equ	0xFF6
  6553                           tablat	equ	0xFF5
  6554                           prodh	equ	0xFF4
  6555                           prodl	equ	0xFF3
  6556                           intcon	equ	0xFF2
  6557                           intcon2	equ	0xFF1
  6558                           intcon3	equ	0xFF0
  6559                           postinc0	equ	0xFEE
  6560                           plusw0	equ	0xFEB
  6561                           wreg	equ	0xFE8
  6562                           postinc1	equ	0xFE6
  6563                           postdec1	equ	0xFE5
  6564                           fsr1h	equ	0xFE2
  6565                           fsr1l	equ	0xFE1
  6566                           indf2	equ	0xFDF
  6567                           postinc2	equ	0xFDE
  6568                           postdec2	equ	0xFDD
  6569                           plusw2	equ	0xFDB
  6570                           fsr2h	equ	0xFDA
  6571                           fsr2l	equ	0xFD9
  6572                           status	equ	0xFD8
  6573                           
  6574 ;; *************** function _USBStallHandler *****************
  6575 ;; Defined at:
  6576 ;;		line 2220 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;		None
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;		None
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  1    wreg      void 
  6583 ;; Registers used:
  6584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6592 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6593 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6594 ;;Total ram usage:        1 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:   11
  6597 ;; This function calls:
  6598 ;;		Nothing
  6599 ;; This function is called by:
  6600 ;;		_USBDeviceTasks
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text28
  6605  00A776                     __ptext28:
  6606                           	opt stack 0
  6607  00A776                     _USBStallHandler:
  6608                           	opt stack 15
  6609                           
  6610                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  6611                           
  6612                           ;incstack = 0
  6613  00A776  010F               	movlb	15	; () banked
  6614  00A778  A126               	btfss	38,0,b	;volatile
  6615  00A77A  D01D               	goto	l1497
  6616                           
  6617                           ; BSR set to: 15
  6618                           ;usb_device.c: 2233: {
  6619                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  6620  00A77C  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6621  00A780  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6622  00A784  0E80               	movlw	128
  6623  00A786  18DE               	xorwf	postinc2,w,c
  6624  00A788  A4D8               	btfss	status,2,c
  6625  00A78A  D014               	goto	l1498
  6626                           
  6627                           ; BSR set to: 15
  6628  00A78C  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  6629  00A790  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6630  00A794  0E84               	movlw	132
  6631  00A796  18DE               	xorwf	postinc2,w,c
  6632  00A798  A4D8               	btfss	status,2,c
  6633  00A79A  D00C               	goto	l1498
  6634                           
  6635                           ; BSR set to: 15
  6636                           ;usb_device.c: 2236: {
  6637                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6638  00A79C  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6639  00A7A0  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6640  00A7A4  0E0C               	movlw	12
  6641  00A7A6  6EDF               	movwf	indf2,c
  6642                           
  6643                           ; BSR set to: 15
  6644                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6645  00A7A8  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6646  00A7AC  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6647  00A7B0  0E00               	movlw	0
  6648  00A7B2  8EDB               	bsf	plusw2,7,c
  6649  00A7B4                     l1498:
  6650                           
  6651                           ; BSR set to: 15
  6652                           ;usb_device.c: 2240: }
  6653                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  6654                           
  6655                           ; BSR set to: 15
  6656  00A7B4  9126               	bcf	38,0,b	;volatile
  6657  00A7B6                     l1497:
  6658                           
  6659                           ; BSR set to: 15
  6660                           ;usb_device.c: 2242: }
  6661                           ;usb_device.c: 2244: (UIR &= 0xDF);
  6662  00A7B6  9A62               	bcf	3938,5,c	;volatile
  6663                           
  6664                           ; BSR set to: 15
  6665  00A7B8  0012               	return		;funcret
  6666  00A7BA                     __end_of_USBStallHandler:
  6667                           	opt stack 0
  6668                           tosu	equ	0xFFF
  6669                           tosh	equ	0xFFE
  6670                           tosl	equ	0xFFD
  6671                           pclath	equ	0xFFA
  6672                           tblptru	equ	0xFF8
  6673                           tblptrh	equ	0xFF7
  6674                           tblptrl	equ	0xFF6
  6675                           tablat	equ	0xFF5
  6676                           prodh	equ	0xFF4
  6677                           prodl	equ	0xFF3
  6678                           intcon	equ	0xFF2
  6679                           intcon2	equ	0xFF1
  6680                           intcon3	equ	0xFF0
  6681                           postinc0	equ	0xFEE
  6682                           plusw0	equ	0xFEB
  6683                           wreg	equ	0xFE8
  6684                           postinc1	equ	0xFE6
  6685                           postdec1	equ	0xFE5
  6686                           fsr1h	equ	0xFE2
  6687                           fsr1l	equ	0xFE1
  6688                           indf2	equ	0xFDF
  6689                           postinc2	equ	0xFDE
  6690                           postdec2	equ	0xFDD
  6691                           plusw2	equ	0xFDB
  6692                           fsr2h	equ	0xFDA
  6693                           fsr2l	equ	0xFD9
  6694                           status	equ	0xFD8
  6695                           
  6696 ;; *************** function _USBIncrement1msInternalTimers *****************
  6697 ;; Defined at:
  6698 ;;		line 3042 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;		None
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;		None
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      void 
  6705 ;; Registers used:
  6706 ;;		wreg, status,2, status,0
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6716 ;;Total ram usage:        0 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:   11
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_USBDeviceTasks
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text29
  6727  00A0C8                     __ptext29:
  6728                           	opt stack 0
  6729  00A0C8                     _USBIncrement1msInternalTimers:
  6730                           	opt stack 15
  6731                           
  6732                           ;usb_device.c: 3050: USB1msTickCount++;
  6733                           
  6734                           ; BSR set to: 15
  6735                           ;incstack = 0
  6736  00A0C8  0E01               	movlw	1
  6737  00A0CA  0101               	movlb	1	; () banked
  6738  00A0CC  272A               	addwf	_USB1msTickCount& (0+255),f,b
  6739  00A0CE  0E00               	movlw	0
  6740  00A0D0  232B               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  6741  00A0D2  232C               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  6742  00A0D4  232D               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  6743                           
  6744                           ; BSR set to: 1
  6745                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  6746  00A0D6  5161               	movf	_USBBusIsSuspended& (0+255),w,b
  6747  00A0D8  A4D8               	btfss	status,2,c
  6748  00A0DA  0012               	return	
  6749                           
  6750                           ; BSR set to: 1
  6751                           ;usb_device.c: 3052: {
  6752                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  6753  00A0DC  2B5D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  6754                           
  6755                           ; BSR set to: 1
  6756                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  6757  00A0DE  515D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  6758  00A0E0  A4D8               	btfss	status,2,c
  6759  00A0E2  0012               	return	
  6760                           
  6761                           ; BSR set to: 1
  6762                           ;usb_device.c: 3056: {
  6763                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  6764  00A0E4  695D               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  6765                           
  6766                           ; BSR set to: 1
  6767  00A0E6  0012               	return	
  6768  00A0E8                     __end_of_USBIncrement1msInternalTimers:
  6769                           	opt stack 0
  6770                           tosu	equ	0xFFF
  6771                           tosh	equ	0xFFE
  6772                           tosl	equ	0xFFD
  6773                           pclath	equ	0xFFA
  6774                           tblptru	equ	0xFF8
  6775                           tblptrh	equ	0xFF7
  6776                           tblptrl	equ	0xFF6
  6777                           tablat	equ	0xFF5
  6778                           prodh	equ	0xFF4
  6779                           prodl	equ	0xFF3
  6780                           intcon	equ	0xFF2
  6781                           intcon2	equ	0xFF1
  6782                           intcon3	equ	0xFF0
  6783                           postinc0	equ	0xFEE
  6784                           plusw0	equ	0xFEB
  6785                           wreg	equ	0xFE8
  6786                           postinc1	equ	0xFE6
  6787                           postdec1	equ	0xFE5
  6788                           fsr1h	equ	0xFE2
  6789                           fsr1l	equ	0xFE1
  6790                           indf2	equ	0xFDF
  6791                           postinc2	equ	0xFDE
  6792                           postdec2	equ	0xFDD
  6793                           plusw2	equ	0xFDB
  6794                           fsr2h	equ	0xFDA
  6795                           fsr2l	equ	0xFD9
  6796                           status	equ	0xFD8
  6797                           
  6798 ;; *************** function _USBDeviceInit *****************
  6799 ;; Defined at:
  6800 ;;		line 295 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;		None
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  i               1    8[BANK0 ] unsigned char 
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      void 
  6807 ;; Registers used:
  6808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6817 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6818 ;;Total ram usage:        1 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; Hardware stack levels required when called:   12
  6821 ;; This function calls:
  6822 ;;		_memset
  6823 ;; This function is called by:
  6824 ;;		_USBDeviceTasks
  6825 ;;		_UsbDevice_MainTask
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text30
  6830  00CF28                     __ptext30:
  6831                           	opt stack 0
  6832  00CF28                     _USBDeviceInit:
  6833                           	opt stack 14
  6834                           
  6835                           ;usb_device.c: 297: uint8_t i;
  6836                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  6837                           
  6838                           ; BSR set to: 1
  6839                           ;incstack = 0
  6840  00CF28  98A0               	bcf	4000,4,c	;volatile
  6841                           
  6842                           ;usb_device.c: 303: ;
  6843                           ;usb_device.c: 306: {UEIR = 0;};
  6844  00CF2A  0E00               	movlw	0
  6845  00CF2C  6E63               	movwf	3939,c	;volatile
  6846                           
  6847                           ;usb_device.c: 309: {UIR = 0;};
  6848  00CF2E  0E00               	movlw	0
  6849  00CF30  6E62               	movwf	3938,c	;volatile
  6850                           
  6851                           ;usb_device.c: 312: UEP0 = 0;
  6852  00CF32  0E00               	movlw	0
  6853  00CF34  010F               	movlb	15	; () banked
  6854  00CF36  6F26               	movwf	38,b	;volatile
  6855                           
  6856                           ; BSR set to: 15
  6857                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  6858  00CF38  0E27               	movlw	39
  6859  00CF3A  0100               	movlb	0	; () banked
  6860  00CF3C  6F60               	movwf	memset@p1& (0+255),b
  6861  00CF3E  0E0F               	movlw	15
  6862  00CF40  6F61               	movwf	(memset@p1+1)& (0+255),b
  6863  00CF42  0E00               	movlw	0
  6864  00CF44  6F63               	movwf	(memset@c+1)& (0+255),b
  6865  00CF46  0E00               	movlw	0
  6866  00CF48  6F62               	movwf	memset@c& (0+255),b
  6867  00CF4A  0E00               	movlw	0
  6868  00CF4C  6F65               	movwf	(memset@n+1)& (0+255),b
  6869  00CF4E  0E02               	movlw	2
  6870  00CF50  6F64               	movwf	memset@n& (0+255),b
  6871  00CF52  ECCD  F051         	call	_memset	;wreg free
  6872                           
  6873                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6874  00CF56  0E16               	movlw	22
  6875  00CF58  010F               	movlb	15	; () banked
  6876  00CF5A  6F39               	movwf	57,b	;volatile
  6877                           
  6878                           ; BSR set to: 15
  6879  00CF5C  0E9F               	movlw	159
  6880  00CF5E  6F37               	movwf	55,b	;volatile
  6881                           
  6882                           ; BSR set to: 15
  6883  00CF60  0E7B               	movlw	123
  6884  00CF62  6F36               	movwf	54,b	;volatile
  6885                           
  6886                           ; BSR set to: 15
  6887                           ;usb_device.c: 319: ;
  6888                           ;usb_device.c: 322: ;
  6889                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  6890  00CF64  0E00               	movlw	0
  6891  00CF66  0100               	movlb	0	; () banked
  6892  00CF68  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6893  00CF6A                     l7950:
  6894                           
  6895                           ; BSR set to: 0
  6896  00CF6A  0E0B               	movlw	11
  6897  00CF6C  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6898  00CF6E  D001               	goto	l1341
  6899  00CF70  D00E               	goto	u6320
  6900  00CF72                     l1341:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;usb_device.c: 326: {
  6904                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  6905                           
  6906                           ; BSR set to: 0
  6907  00CF72  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6908  00CF74  0D04               	mullw	4
  6909  00CF76  0E00               	movlw	0
  6910  00CF78  24F3               	addwf	prodl,w,c
  6911  00CF7A  6ED9               	movwf	fsr2l,c
  6912  00CF7C  0E04               	movlw	4
  6913  00CF7E  20F4               	addwfc	prodh,w,c
  6914  00CF80  6EDA               	movwf	fsr2h,c
  6915  00CF82  6ADE               	clrf	postinc2,c
  6916  00CF84  6ADE               	clrf	postinc2,c
  6917  00CF86  6ADE               	clrf	postinc2,c
  6918  00CF88  6ADD               	clrf	postdec2,c
  6919                           
  6920                           ; BSR set to: 0
  6921  00CF8A  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6922  00CF8C  D7EE               	goto	l7950
  6923  00CF8E                     u6320:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;usb_device.c: 328: }
  6927                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  6928  00CF8E  8C65               	bsf	3941,6,c	;volatile
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;usb_device.c: 334: UADDR = 0x00;
  6932  00CF90  0E00               	movlw	0
  6933  00CF92  010F               	movlb	15	; () banked
  6934  00CF94  6F38               	movwf	56,b	;volatile
  6935                           
  6936                           ; BSR set to: 15
  6937                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  6938  00CF96  9865               	bcf	3941,4,c	;volatile
  6939                           
  6940                           ; BSR set to: 15
  6941                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  6942  00CF98  9C65               	bcf	3941,6,c	;volatile
  6943  00CF9A                     
  6944                           ;usb_device.c: 344: {
  6945                           ;usb_device.c: 345: (UIR &= 0xF7);
  6946                           
  6947                           ; BSR set to: 15
  6948  00CF9A  9662               	bcf	3938,3,c	;volatile
  6949                           
  6950                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  6951  00CF9C  0E00               	movlw	0
  6952  00CF9E  0100               	movlb	0	; () banked
  6953  00CFA0  6FF3               	movwf	(_inPipes+3)& (0+255),b
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  6957  00CFA2  0E00               	movlw	0
  6958  00CFA4  0101               	movlb	1	; () banked
  6959  00CFA6  6F15               	movwf	(_outPipes+3)& (0+255),b
  6960                           
  6961                           ; BSR set to: 1
  6962                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  6963  00CFA8  0E00               	movlw	0
  6964  00CFAA  6F17               	movwf	(_outPipes+5)& (0+255),b
  6965  00CFAC  0E00               	movlw	0
  6966  00CFAE  6F16               	movwf	(_outPipes+4)& (0+255),b
  6967                           
  6968                           ; BSR set to: 1
  6969                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  6970  00CFB0  B662               	btfsc	3938,3,c	;volatile
  6971  00CFB2  D7F3               	goto	l1343
  6972                           
  6973                           ; BSR set to: 1
  6974                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  6975                           
  6976                           ; BSR set to: 1
  6977  00CFB4  0E01               	movlw	1
  6978  00CFB6  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  6979                           
  6980                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  6981  00CFB8  0E01               	movlw	1
  6982  00CFBA  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  6983                           
  6984                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  6985  00CFBC  0E00               	movlw	0
  6986  00CFBE  6F5F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  6987                           
  6988                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  6989  00CFC0  0E00               	movlw	0
  6990  00CFC2  6F5E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6991                           
  6992                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  6993  00CFC4  0E00               	movlw	0
  6994  00CFC6  6F61               	movwf	_USBBusIsSuspended& (0+255),b
  6995                           
  6996                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  6997  00CFC8  0E00               	movlw	0
  6998  00CFCA  0100               	movlb	0	; () banked
  6999  00CFCC  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7000  00CFCE                     l7978:
  7001                           
  7002                           ; BSR set to: 0
  7003  00CFCE  0E02               	movlw	2
  7004  00CFD0  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7005  00CFD2  D001               	goto	l1345
  7006  00CFD4  D02E               	goto	u6350
  7007  00CFD6                     l1345:
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;usb_device.c: 364: {
  7011                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  7012                           
  7013                           ; BSR set to: 0
  7014  00CFD6  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7015  00CFD8  0D02               	mullw	2
  7016  00CFDA  0E3E               	movlw	low _pBDTEntryIn
  7017  00CFDC  24F3               	addwf	prodl,w,c
  7018  00CFDE  6ED9               	movwf	fsr2l,c
  7019  00CFE0  0E00               	movlw	high _pBDTEntryIn
  7020  00CFE2  20F4               	addwfc	prodh,w,c
  7021  00CFE4  6EDA               	movwf	fsr2h,c
  7022  00CFE6  0E00               	movlw	0
  7023  00CFE8  6EDE               	movwf	postinc2,c
  7024  00CFEA  0E00               	movlw	0
  7025  00CFEC  6EDD               	movwf	postdec2,c
  7026                           
  7027                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  7028  00CFEE  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7029  00CFF0  0D02               	mullw	2
  7030  00CFF2  0E20               	movlw	low _pBDTEntryOut
  7031  00CFF4  24F3               	addwf	prodl,w,c
  7032  00CFF6  6ED9               	movwf	fsr2l,c
  7033  00CFF8  0E01               	movlw	high _pBDTEntryOut
  7034  00CFFA  20F4               	addwfc	prodh,w,c
  7035  00CFFC  6EDA               	movwf	fsr2h,c
  7036  00CFFE  0E00               	movlw	0
  7037  00D000  6EDE               	movwf	postinc2,c
  7038  00D002  0E00               	movlw	0
  7039  00D004  6EDD               	movwf	postdec2,c
  7040                           
  7041                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  7042  00D006  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7043  00D008  0D01               	mullw	1
  7044  00D00A  0E3B               	movlw	low _ep_data_in
  7045  00D00C  24F3               	addwf	prodl,w,c
  7046  00D00E  6ED9               	movwf	fsr2l,c
  7047  00D010  0E01               	movlw	high _ep_data_in
  7048  00D012  20F4               	addwfc	prodh,w,c
  7049  00D014  6EDA               	movwf	fsr2h,c
  7050  00D016  0E00               	movlw	0
  7051  00D018  6EDF               	movwf	indf2,c
  7052                           
  7053                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  7054  00D01A  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7055  00D01C  0D01               	mullw	1
  7056  00D01E  0E38               	movlw	low _ep_data_out
  7057  00D020  24F3               	addwf	prodl,w,c
  7058  00D022  6ED9               	movwf	fsr2l,c
  7059  00D024  0E01               	movlw	high _ep_data_out
  7060  00D026  20F4               	addwfc	prodh,w,c
  7061  00D028  6EDA               	movwf	fsr2h,c
  7062  00D02A  0E00               	movlw	0
  7063  00D02C  6EDF               	movwf	indf2,c
  7064                           
  7065                           ; BSR set to: 0
  7066  00D02E  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7067  00D030  D7CE               	goto	l7978
  7068  00D032                     u6350:
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;usb_device.c: 369: }
  7072                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7073                           
  7074                           ; BSR set to: 0
  7075  00D032  0E08               	movlw	8
  7076  00D034  6E3E               	movwf	_pBDTEntryIn,c
  7077  00D036  0E04               	movlw	4
  7078  00D038  6E3F               	movwf	_pBDTEntryIn+1,c
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  7082  00D03A  0E16               	movlw	22
  7083  00D03C  010F               	movlb	15	; () banked
  7084  00D03E  6F26               	movwf	38,b	;volatile
  7085                           
  7086                           ; BSR set to: 15
  7087                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7088  00D040  0E04               	movlw	4
  7089  00D042  0104               	movlb	4	; () banked
  7090  00D044  6F03               	movwf	3,b	;volatile
  7091  00D046  0E30               	movlw	48
  7092  00D048  6F02               	movwf	2,b	;volatile
  7093                           
  7094                           ; BSR set to: 4
  7095                           ;usb_device.c: 377: BDT[0].CNT = 8;
  7096  00D04A  0E08               	movlw	8
  7097  00D04C  6F01               	movwf	1,b	;volatile
  7098                           
  7099                           ; BSR set to: 4
  7100                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  7101  00D04E  0E04               	movlw	4
  7102  00D050  6F00               	movwf	0,b	;volatile
  7103                           
  7104                           ; BSR set to: 4
  7105                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  7106  00D052  8F00               	bsf	0,7,b	;volatile
  7107                           
  7108                           ; BSR set to: 4
  7109                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  7110  00D054  0E00               	movlw	0
  7111  00D056  6E52               	movwf	_USBActiveConfiguration,c
  7112                           
  7113                           ; BSR set to: 4
  7114                           ;usb_device.c: 384: USB1msTickCount = 0;
  7115  00D058  0E00               	movlw	0
  7116  00D05A  0101               	movlb	1	; () banked
  7117  00D05C  6F2A               	movwf	_USB1msTickCount& (0+255),b
  7118  00D05E  0E00               	movlw	0
  7119  00D060  6F2B               	movwf	(_USB1msTickCount+1)& (0+255),b
  7120  00D062  0E00               	movlw	0
  7121  00D064  6F2C               	movwf	(_USB1msTickCount+2)& (0+255),b
  7122  00D066  0E00               	movlw	0
  7123  00D068  6F2D               	movwf	(_USB1msTickCount+3)& (0+255),b
  7124                           
  7125                           ; BSR set to: 1
  7126                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  7127  00D06A  0E00               	movlw	0
  7128  00D06C  6F5D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7129                           
  7130                           ; BSR set to: 1
  7131                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  7132  00D06E  0E00               	movlw	0
  7133  00D070  0100               	movlb	0	; () banked
  7134  00D072  6FFD               	movwf	_USBDeviceState& (0+255),b
  7135                           
  7136                           ; BSR set to: 0
  7137  00D074  0012               	return		;funcret
  7138  00D076                     __end_of_USBDeviceInit:
  7139                           	opt stack 0
  7140                           tosu	equ	0xFFF
  7141                           tosh	equ	0xFFE
  7142                           tosl	equ	0xFFD
  7143                           pclath	equ	0xFFA
  7144                           tblptru	equ	0xFF8
  7145                           tblptrh	equ	0xFF7
  7146                           tblptrl	equ	0xFF6
  7147                           tablat	equ	0xFF5
  7148                           prodh	equ	0xFF4
  7149                           prodl	equ	0xFF3
  7150                           intcon	equ	0xFF2
  7151                           intcon2	equ	0xFF1
  7152                           intcon3	equ	0xFF0
  7153                           postinc0	equ	0xFEE
  7154                           plusw0	equ	0xFEB
  7155                           wreg	equ	0xFE8
  7156                           postinc1	equ	0xFE6
  7157                           postdec1	equ	0xFE5
  7158                           fsr1h	equ	0xFE2
  7159                           fsr1l	equ	0xFE1
  7160                           indf2	equ	0xFDF
  7161                           postinc2	equ	0xFDE
  7162                           postdec2	equ	0xFDD
  7163                           plusw2	equ	0xFDB
  7164                           fsr2h	equ	0xFDA
  7165                           fsr2l	equ	0xFD9
  7166                           status	equ	0xFD8
  7167                           
  7168 ;; *************** function _USBCtrlEPService *****************
  7169 ;; Defined at:
  7170 ;;		line 2390 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;		None
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7188 ;;Total ram usage:        1 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:   18
  7191 ;; This function calls:
  7192 ;;		_USBCtrlTrfInHandler
  7193 ;;		_USBCtrlTrfOutHandler
  7194 ;;		_USBCtrlTrfSetupHandler
  7195 ;;		_memcpy
  7196 ;; This function is called by:
  7197 ;;		_USBDeviceTasks
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text31
  7202  00B648                     __ptext31:
  7203                           	opt stack 0
  7204  00B648                     _USBCtrlEPService:
  7205                           	opt stack 8
  7206                           
  7207                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;incstack = 0
  7211  00B648  0E2D               	movlw	45
  7212  00B64A  6E4A               	movwf	_USBStatusStageTimeoutCounter,c
  7213                           
  7214                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  7215  00B64C  C0FF  F07A         	movff	_USTATcopy,??_USBCtrlEPService
  7216  00B650  0EFD               	movlw	253
  7217  00B652  0100               	movlb	0	; () banked
  7218  00B654  177A               	andwf	??_USBCtrlEPService& (0+255),f,b
  7219  00B656  A4D8               	btfss	status,2,c
  7220  00B658  D038               	goto	l1511
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;usb_device.c: 2401: {
  7224                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  7225  00B65A  C0FF  F07A         	movff	_USTATcopy,??_USBCtrlEPService
  7226  00B65E  90D8               	bcf	status,0,c
  7227  00B660  337A               	rrcf	??_USBCtrlEPService& (0+255),f,b
  7228  00B662  0E3F               	movlw	63
  7229  00B664  177A               	andwf	??_USBCtrlEPService& (0+255),f,b
  7230  00B666  517A               	movf	??_USBCtrlEPService& (0+255),w,b
  7231  00B668  0D04               	mullw	4
  7232  00B66A  0E00               	movlw	0
  7233  00B66C  24F3               	addwf	prodl,w,c
  7234  00B66E  6FF8               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  7235  00B670  0E04               	movlw	4
  7236  00B672  20F4               	addwfc	prodh,w,c
  7237  00B674  6FF9               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7241  00B676  C0F8  F0F6         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  7242  00B67A  C0F9  F0F7         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  7246  00B67E  0E04               	movlw	4
  7247  00B680  1BF6               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  7251  00B682  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7252  00B686  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7253  00B68A  30DF               	rrcf	223,w,c
  7254  00B68C  32E8               	rrcf	wreg,f,c
  7255  00B68E  0B0F               	andlw	15
  7256  00B690  0A0D               	xorlw	13
  7257  00B692  A4D8               	btfss	status,2,c
  7258  00B694  D017               	goto	l1512
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;usb_device.c: 2418: {
  7262                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  7263  00B696  0E30               	movlw	48
  7264  00B698  6F60               	movwf	memcpy@d1& (0+255),b
  7265  00B69A  0E04               	movlw	4
  7266  00B69C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7267  00B69E  EE20 F002          	lfsr	2,2
  7268  00B6A2  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  7269  00B6A4  26D9               	addwf	fsr2l,f,c
  7270  00B6A6  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  7271  00B6A8  22DA               	addwfc	fsr2h,f,c
  7272  00B6AA  CFDE F062          	movff	postinc2,memcpy@s1
  7273  00B6AE  CFDD F063          	movff	postdec2,memcpy@s1+1
  7274  00B6B2  0E00               	movlw	0
  7275  00B6B4  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7276  00B6B6  0E08               	movlw	8
  7277  00B6B8  6F64               	movwf	memcpy@n& (0+255),b
  7278  00B6BA  EC23  F054         	call	_memcpy	;wreg free
  7279                           
  7280                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  7281  00B6BE  EC02  F05A         	call	_USBCtrlTrfSetupHandler	;wreg free
  7282                           
  7283                           ;usb_device.c: 2427: }
  7284  00B6C2  0012               	return	
  7285  00B6C4                     l1512:
  7286                           
  7287                           ;usb_device.c: 2428: else
  7288                           ;usb_device.c: 2429: {
  7289                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  7290  00B6C4  EC90  F056         	call	_USBCtrlTrfOutHandler	;wreg free
  7291                           
  7292                           ;usb_device.c: 2432: }
  7293                           ;usb_device.c: 2433: }
  7294  00B6C8  0012               	return	
  7295  00B6CA                     l1511:
  7296                           
  7297                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  7298  00B6CA  0100               	movlb	0	; () banked
  7299  00B6CC  51FF               	movf	_USTATcopy& (0+255),w,b
  7300  00B6CE  0BFD               	andlw	253
  7301  00B6D0  0A04               	xorlw	4
  7302  00B6D2  A4D8               	btfss	status,2,c
  7303  00B6D4  0012               	return	
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;usb_device.c: 2435: {
  7307                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  7308  00B6D6  EC06  F05F         	call	_USBCtrlTrfInHandler	;wreg free
  7309  00B6DA  0012               	return	
  7310  00B6DC                     __end_of_USBCtrlEPService:
  7311                           	opt stack 0
  7312                           tosu	equ	0xFFF
  7313                           tosh	equ	0xFFE
  7314                           tosl	equ	0xFFD
  7315                           pclath	equ	0xFFA
  7316                           tblptru	equ	0xFF8
  7317                           tblptrh	equ	0xFF7
  7318                           tblptrl	equ	0xFF6
  7319                           tablat	equ	0xFF5
  7320                           prodh	equ	0xFF4
  7321                           prodl	equ	0xFF3
  7322                           intcon	equ	0xFF2
  7323                           intcon2	equ	0xFF1
  7324                           intcon3	equ	0xFF0
  7325                           postinc0	equ	0xFEE
  7326                           plusw0	equ	0xFEB
  7327                           wreg	equ	0xFE8
  7328                           postinc1	equ	0xFE6
  7329                           postdec1	equ	0xFE5
  7330                           fsr1h	equ	0xFE2
  7331                           fsr1l	equ	0xFE1
  7332                           indf2	equ	0xFDF
  7333                           postinc2	equ	0xFDE
  7334                           postdec2	equ	0xFDD
  7335                           plusw2	equ	0xFDB
  7336                           fsr2h	equ	0xFDA
  7337                           fsr2l	equ	0xFD9
  7338                           status	equ	0xFD8
  7339                           
  7340 ;; *************** function _memcpy *****************
  7341 ;; Defined at:
  7342 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  d1              2    0[BANK0 ] PTR void 
  7345 ;;		 -> SetupPkt(8), 
  7346 ;;  s1              2    2[BANK0 ] PTR const void 
  7347 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  7348 ;;  n               2    4[BANK0 ] unsigned int 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  7351 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  7352 ;;  d               2    6[BANK0 ] PTR unsigned char 
  7353 ;;		 -> SetupPkt(8), 
  7354 ;;  tmp             1   10[BANK0 ] unsigned char 
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  2    0[BANK0 ] PTR void 
  7357 ;; Registers used:
  7358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7364 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7365 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7367 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7368 ;;Total ram usage:       11 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:   11
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_USBCtrlEPService
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text32
  7379  00A846                     __ptext32:
  7380                           	opt stack 0
  7381  00A846                     _memcpy:
  7382                           	opt stack 14
  7383                           
  7384                           ;incstack = 0
  7385  00A846  C062  F068         	movff	memcpy@s1,memcpy@s
  7386  00A84A  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
  7387  00A84E  C060  F066         	movff	memcpy@d1,memcpy@d
  7388  00A852  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
  7389  00A856  D011               	goto	l2580
  7390  00A858                     l7236:
  7391  00A858  C068  FFD9         	movff	memcpy@s,fsr2l
  7392  00A85C  C069  FFDA         	movff	memcpy@s+1,fsr2h
  7393  00A860  50DF               	movf	indf2,w,c
  7394  00A862  0100               	movlb	0	; () banked
  7395  00A864  6F6A               	movwf	memcpy@tmp& (0+255),b
  7396                           
  7397                           ; BSR set to: 0
  7398  00A866  4B68               	infsnz	memcpy@s& (0+255),f,b
  7399  00A868  2B69               	incf	(memcpy@s+1)& (0+255),f,b
  7400                           
  7401                           ; BSR set to: 0
  7402  00A86A  C066  FFD9         	movff	memcpy@d,fsr2l
  7403  00A86E  C067  FFDA         	movff	memcpy@d+1,fsr2h
  7404  00A872  C06A  FFDF         	movff	memcpy@tmp,indf2
  7405                           
  7406                           ; BSR set to: 0
  7407  00A876  4B66               	infsnz	memcpy@d& (0+255),f,b
  7408  00A878  2B67               	incf	(memcpy@d+1)& (0+255),f,b
  7409  00A87A                     l2580:
  7410                           
  7411                           ; BSR set to: 0
  7412  00A87A  0100               	movlb	0	; () banked
  7413  00A87C  0764               	decf	memcpy@n& (0+255),f,b
  7414  00A87E  A0D8               	btfss	status,0,c
  7415  00A880  0765               	decf	(memcpy@n+1)& (0+255),f,b
  7416  00A882  2964               	incf	memcpy@n& (0+255),w,b
  7417  00A884  E1E9               	bnz	l7236
  7418  00A886  2965               	incf	(memcpy@n+1)& (0+255),w,b
  7419  00A888  B4D8               	btfsc	status,2,c
  7420  00A88A  0012               	return	
  7421  00A88C  D7E5               	goto	l2581
  7422  00A88E                     __end_of_memcpy:
  7423                           	opt stack 0
  7424                           tosu	equ	0xFFF
  7425                           tosh	equ	0xFFE
  7426                           tosl	equ	0xFFD
  7427                           pclath	equ	0xFFA
  7428                           tblptru	equ	0xFF8
  7429                           tblptrh	equ	0xFF7
  7430                           tblptrl	equ	0xFF6
  7431                           tablat	equ	0xFF5
  7432                           prodh	equ	0xFF4
  7433                           prodl	equ	0xFF3
  7434                           intcon	equ	0xFF2
  7435                           intcon2	equ	0xFF1
  7436                           intcon3	equ	0xFF0
  7437                           postinc0	equ	0xFEE
  7438                           plusw0	equ	0xFEB
  7439                           wreg	equ	0xFE8
  7440                           postinc1	equ	0xFE6
  7441                           postdec1	equ	0xFE5
  7442                           fsr1h	equ	0xFE2
  7443                           fsr1l	equ	0xFE1
  7444                           indf2	equ	0xFDF
  7445                           postinc2	equ	0xFDE
  7446                           postdec2	equ	0xFDD
  7447                           plusw2	equ	0xFDB
  7448                           fsr2h	equ	0xFDA
  7449                           fsr2l	equ	0xFD9
  7450                           status	equ	0xFD8
  7451                           
  7452 ;; *************** function _USBCtrlTrfSetupHandler *****************
  7453 ;; Defined at:
  7454 ;;		line 2483 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;		None
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;		None
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7472 ;;Total ram usage:        0 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:   17
  7475 ;; This function calls:
  7476 ;;		_USBCheckStdRequest
  7477 ;;		_USBCtrlEPServiceComplete
  7478 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7479 ;; This function is called by:
  7480 ;;		_USBCtrlEPService
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text33
  7485  00B404                     __ptext33:
  7486                           	opt stack 0
  7487  00B404                     _USBCtrlTrfSetupHandler:
  7488                           	opt stack 8
  7489                           
  7490                           ;usb_device.c: 2488: shortPacketStatus = 0;
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;incstack = 0
  7494  00B404  0E00               	movlw	0
  7495  00B406  6E4D               	movwf	_shortPacketStatus,c
  7496                           
  7497                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  7498  00B408  0E00               	movlw	0
  7499  00B40A  0100               	movlb	0	; () banked
  7500  00B40C  6FFC               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  7501                           
  7502                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  7503  00B40E  0E00               	movlw	0
  7504  00B410  0101               	movlb	1	; () banked
  7505  00B412  6F5F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7506                           
  7507                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  7508  00B414  0E00               	movlw	0
  7509  00B416  6F5E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7510                           
  7511                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  7512  00B418  0E00               	movlw	0
  7513  00B41A  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  7514                           
  7515                           ;usb_device.c: 2493: controlTransferState = 0;
  7516  00B41C  0E00               	movlw	0
  7517  00B41E  6E4C               	movwf	_controlTransferState,c
  7518                           
  7519                           ; BSR set to: 1
  7520                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7521  00B420  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7522  00B424  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7523  00B428  0E7F               	movlw	127
  7524  00B42A  16DF               	andwf	indf2,f,c
  7525                           
  7526                           ; BSR set to: 1
  7527                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7528  00B42C  0E04               	movlw	4
  7529  00B42E  1A3E               	xorwf	_pBDTEntryIn,f,c
  7530                           
  7531                           ; BSR set to: 1
  7532                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7533  00B430  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7534  00B434  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7535  00B438  0E7F               	movlw	127
  7536  00B43A  16DF               	andwf	indf2,f,c
  7537                           
  7538                           ; BSR set to: 1
  7539                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7540  00B43C  0E04               	movlw	4
  7541  00B43E  1A3E               	xorwf	_pBDTEntryIn,f,c
  7542                           
  7543                           ; BSR set to: 1
  7544                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  7545  00B440  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7546  00B444  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7547  00B448  0E7F               	movlw	127
  7548  00B44A  16DF               	andwf	indf2,f,c
  7549                           
  7550                           ; BSR set to: 1
  7551                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  7552  00B44C  0E00               	movlw	0
  7553  00B44E  0100               	movlb	0	; () banked
  7554  00B450  6FF3               	movwf	(_inPipes+3)& (0+255),b
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  7558  00B452  0E00               	movlw	0
  7559  00B454  6FF5               	movwf	(_inPipes+5)& (0+255),b
  7560  00B456  0E00               	movlw	0
  7561  00B458  6FF4               	movwf	(_inPipes+4)& (0+255),b
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  7565  00B45A  0E00               	movlw	0
  7566  00B45C  0101               	movlb	1	; () banked
  7567  00B45E  6F15               	movwf	(_outPipes+3)& (0+255),b
  7568                           
  7569                           ; BSR set to: 1
  7570                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  7571  00B460  0E00               	movlw	0
  7572  00B462  6F17               	movwf	(_outPipes+5)& (0+255),b
  7573  00B464  0E00               	movlw	0
  7574  00B466  6F16               	movwf	(_outPipes+4)& (0+255),b
  7575                           
  7576                           ; BSR set to: 1
  7577                           ;usb_device.c: 2517: USBCheckStdRequest();
  7578  00B468  EC38  F062         	call	_USBCheckStdRequest	;wreg free
  7579                           
  7580                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  7581  00B46C  0E00               	movlw	0
  7582  00B46E  0100               	movlb	0	; () banked
  7583  00B470  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7584  00B472  0E03               	movlw	3
  7585  00B474  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7586  00B476  0E00               	movlw	0
  7587  00B478  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7588  00B47A  0E00               	movlw	0
  7589  00B47C  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7590  00B47E  0E00               	movlw	0
  7591  00B480  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7592  00B482  0E00               	movlw	0
  7593  00B484  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7594  00B486  EC61  F056         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7595                           
  7596                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  7597  00B48A  EC94  F063         	call	_USBCtrlEPServiceComplete	;wreg free
  7598  00B48E  0012               	return		;funcret
  7599  00B490                     __end_of_USBCtrlTrfSetupHandler:
  7600                           	opt stack 0
  7601                           tosu	equ	0xFFF
  7602                           tosh	equ	0xFFE
  7603                           tosl	equ	0xFFD
  7604                           pclath	equ	0xFFA
  7605                           tblptru	equ	0xFF8
  7606                           tblptrh	equ	0xFF7
  7607                           tblptrl	equ	0xFF6
  7608                           tablat	equ	0xFF5
  7609                           prodh	equ	0xFF4
  7610                           prodl	equ	0xFF3
  7611                           intcon	equ	0xFF2
  7612                           intcon2	equ	0xFF1
  7613                           intcon3	equ	0xFF0
  7614                           postinc0	equ	0xFEE
  7615                           plusw0	equ	0xFEB
  7616                           wreg	equ	0xFE8
  7617                           postinc1	equ	0xFE6
  7618                           postdec1	equ	0xFE5
  7619                           fsr1h	equ	0xFE2
  7620                           fsr1l	equ	0xFE1
  7621                           indf2	equ	0xFDF
  7622                           postinc2	equ	0xFDE
  7623                           postdec2	equ	0xFDD
  7624                           plusw2	equ	0xFDB
  7625                           fsr2h	equ	0xFDA
  7626                           fsr2l	equ	0xFD9
  7627                           status	equ	0xFD8
  7628                           
  7629 ;; *************** function _USBCtrlEPServiceComplete *****************
  7630 ;; Defined at:
  7631 ;;		line 1634 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:   13
  7652 ;; This function calls:
  7653 ;;		_USBCtrlEPAllowDataStage
  7654 ;;		_USBCtrlEPAllowStatusStage
  7655 ;; This function is called by:
  7656 ;;		_USBCtrlTrfSetupHandler
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text34
  7661  00C728                     __ptext34:
  7662                           	opt stack 0
  7663  00C728                     _USBCtrlEPServiceComplete:
  7664                           	opt stack 11
  7665                           
  7666                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  7667                           
  7668                           ;incstack = 0
  7669  00C728  9865               	bcf	3941,4,c	;volatile
  7670                           
  7671                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  7672  00C72A  0100               	movlb	0	; () banked
  7673  00C72C  BFF3               	btfsc	(_inPipes+3)& (0+255),7,b
  7674  00C72E  D03A               	goto	l1421
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;usb_device.c: 1647: {
  7678                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  7679  00C730  0101               	movlb	1	; () banked
  7680  00C732  AF15               	btfss	(_outPipes+3)& (0+255),7,b
  7681  00C734  D00B               	goto	l1422
  7682                           
  7683                           ; BSR set to: 1
  7684                           ;usb_device.c: 1649: {
  7685                           ;usb_device.c: 1650: controlTransferState = 2;
  7686  00C736  0E02               	movlw	2
  7687  00C738  6E4C               	movwf	_controlTransferState,c
  7688                           
  7689                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  7690  00C73A  515E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  7691  00C73C  B4D8               	btfsc	status,2,c
  7692                           
  7693                           ; BSR set to: 1
  7694                           ;usb_device.c: 1662: {
  7695                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  7696  00C73E  ECA3  F05C         	call	_USBCtrlEPAllowDataStage	;wreg free
  7697                           
  7698                           ;usb_device.c: 1664: }
  7699                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  7700  00C742  0E00               	movlw	0
  7701  00C744  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7702                           
  7703                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  7704  00C746  0E00               	movlw	0
  7705  00C748  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7706                           
  7707                           ;usb_device.c: 1670: }
  7708  00C74A  0012               	return	
  7709  00C74C                     l1422:
  7710                           
  7711                           ;usb_device.c: 1671: else
  7712                           ;usb_device.c: 1672: {
  7713                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  7714  00C74C  0100               	movlb	0	; () banked
  7715  00C74E  EE20 F001          	lfsr	2,1
  7716  00C752  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7717  00C754  26D9               	addwf	fsr2l,f,c
  7718  00C756  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7719  00C758  22DA               	addwfc	fsr2h,f,c
  7720  00C75A  0E08               	movlw	8
  7721  00C75C  6EDF               	movwf	indf2,c
  7722                           
  7723                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7724  00C75E  EE20 F002          	lfsr	2,2
  7725  00C762  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7726  00C764  26D9               	addwf	fsr2l,f,c
  7727  00C766  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7728  00C768  22DA               	addwfc	fsr2h,f,c
  7729  00C76A  0E30               	movlw	48
  7730  00C76C  6EDE               	movwf	postinc2,c
  7731  00C76E  0E04               	movlw	4
  7732  00C770  6EDD               	movwf	postdec2,c
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7736  00C772  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7737  00C776  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7738  00C77A  0E0C               	movlw	12
  7739  00C77C  6EDF               	movwf	indf2,c
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7743  00C77E  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7744  00C782  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7745  00C786  0E00               	movlw	0
  7746  00C788  8EDB               	bsf	plusw2,7,c
  7747                           
  7748                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  7749  00C78A  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7750  00C78E  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7751  00C792  0E04               	movlw	4
  7752  00C794  6EDF               	movwf	indf2,c
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7756  00C796  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7757  00C79A  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7758  00C79E  0E00               	movlw	0
  7759  00C7A0  8EDB               	bsf	plusw2,7,c
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;usb_device.c: 1683: }
  7763                           ;usb_device.c: 1684: }
  7764  00C7A2  0012               	return	
  7765  00C7A4                     l1421:
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;usb_device.c: 1685: else
  7769                           ;usb_device.c: 1686: {
  7770                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  7771  00C7A4  0104               	movlb	4	; () banked
  7772  00C7A6  AF30               	btfss	48,7,b	;volatile
  7773  00C7A8  D012               	goto	l1426
  7774                           
  7775                           ; BSR set to: 4
  7776                           ;usb_device.c: 1688: {
  7777                           ;usb_device.c: 1689: controlTransferState = 1;
  7778  00C7AA  0E01               	movlw	1
  7779  00C7AC  6E4C               	movwf	_controlTransferState,c
  7780                           
  7781                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  7782  00C7AE  0101               	movlb	1	; () banked
  7783  00C7B0  515F               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  7784  00C7B2  B4D8               	btfsc	status,2,c
  7785                           
  7786                           ; BSR set to: 1
  7787                           ;usb_device.c: 1704: {
  7788                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  7789  00C7B4  ECA3  F05C         	call	_USBCtrlEPAllowDataStage	;wreg free
  7790                           
  7791                           ;usb_device.c: 1706: }
  7792                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  7793  00C7B8  0E00               	movlw	0
  7794  00C7BA  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7795                           
  7796                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  7797  00C7BC  0E00               	movlw	0
  7798  00C7BE  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7799                           
  7800                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  7801  00C7C0  0100               	movlb	0	; () banked
  7802  00C7C2  51FC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  7803  00C7C4  A4D8               	btfss	status,2,c
  7804  00C7C6  0012               	return	
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;usb_device.c: 1731: {
  7808                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  7809  00C7C8  EC92  F060         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7810                           
  7811                           ;usb_device.c: 1733: }
  7812                           ;usb_device.c: 1734: }
  7813  00C7CC  0012               	return	
  7814  00C7CE                     l1426:
  7815                           
  7816                           ;usb_device.c: 1735: else
  7817                           ;usb_device.c: 1736: {
  7818                           ;usb_device.c: 1747: controlTransferState = 2;
  7819  00C7CE  0E02               	movlw	2
  7820  00C7D0  6E4C               	movwf	_controlTransferState,c
  7821                           
  7822                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  7823  00C7D2  0100               	movlb	0	; () banked
  7824  00C7D4  EE20 F001          	lfsr	2,1
  7825  00C7D8  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7826  00C7DA  26D9               	addwf	fsr2l,f,c
  7827  00C7DC  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7828  00C7DE  22DA               	addwfc	fsr2h,f,c
  7829  00C7E0  0E08               	movlw	8
  7830  00C7E2  6EDF               	movwf	indf2,c
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7834  00C7E4  EE20 F002          	lfsr	2,2
  7835  00C7E8  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7836  00C7EA  26D9               	addwf	fsr2l,f,c
  7837  00C7EC  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7838  00C7EE  22DA               	addwfc	fsr2h,f,c
  7839  00C7F0  0E30               	movlw	48
  7840  00C7F2  6EDE               	movwf	postinc2,c
  7841  00C7F4  0E04               	movlw	4
  7842  00C7F6  6EDD               	movwf	postdec2,c
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7846  00C7F8  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7847  00C7FC  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7848  00C800  0E04               	movlw	4
  7849  00C802  6EDF               	movwf	indf2,c
  7850                           
  7851                           ; BSR set to: 0
  7852                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7853  00C804  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7854  00C808  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7855  00C80C  0E00               	movlw	0
  7856  00C80E  8EDB               	bsf	plusw2,7,c
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  7860  00C810  0E00               	movlw	0
  7861  00C812  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  7865  00C814  0E00               	movlw	0
  7866  00C816  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  7870  00C818  51FC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  7871  00C81A  A4D8               	btfss	status,2,c
  7872  00C81C  0012               	return	
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;usb_device.c: 1759: {
  7876                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  7877  00C81E  EC92  F060         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7878  00C822  0012               	return	
  7879  00C824                     __end_of_USBCtrlEPServiceComplete:
  7880                           	opt stack 0
  7881                           tosu	equ	0xFFF
  7882                           tosh	equ	0xFFE
  7883                           tosl	equ	0xFFD
  7884                           pclath	equ	0xFFA
  7885                           tblptru	equ	0xFF8
  7886                           tblptrh	equ	0xFF7
  7887                           tblptrl	equ	0xFF6
  7888                           tablat	equ	0xFF5
  7889                           prodh	equ	0xFF4
  7890                           prodl	equ	0xFF3
  7891                           intcon	equ	0xFF2
  7892                           intcon2	equ	0xFF1
  7893                           intcon3	equ	0xFF0
  7894                           postinc0	equ	0xFEE
  7895                           plusw0	equ	0xFEB
  7896                           wreg	equ	0xFE8
  7897                           postinc1	equ	0xFE6
  7898                           postdec1	equ	0xFE5
  7899                           fsr1h	equ	0xFE2
  7900                           fsr1l	equ	0xFE1
  7901                           indf2	equ	0xFDF
  7902                           postinc2	equ	0xFDE
  7903                           postdec2	equ	0xFDD
  7904                           plusw2	equ	0xFDB
  7905                           fsr2h	equ	0xFDA
  7906                           fsr2l	equ	0xFD9
  7907                           status	equ	0xFD8
  7908                           
  7909 ;; *************** function _USBCtrlEPAllowDataStage *****************
  7910 ;; Defined at:
  7911 ;;		line 1506 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;		None
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;		None
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7929 ;;Total ram usage:        0 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:   12
  7932 ;; This function calls:
  7933 ;;		_USBCtrlTrfTxService
  7934 ;; This function is called by:
  7935 ;;		_USBCtrlEPServiceComplete
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text35
  7940  00B946                     __ptext35:
  7941                           	opt stack 0
  7942  00B946                     _USBCtrlEPAllowDataStage:
  7943                           	opt stack 11
  7944                           
  7945                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  7946                           
  7947                           ;incstack = 0
  7948  00B946  0E00               	movlw	0
  7949  00B948  0101               	movlb	1	; () banked
  7950  00B94A  6F5F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7951                           
  7952                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  7953  00B94C  0E00               	movlw	0
  7954  00B94E  6F5E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7955                           
  7956                           ; BSR set to: 1
  7957                           ;usb_device.c: 1511: if(controlTransferState == 2)
  7958  00B950  0E02               	movlw	2
  7959  00B952  184C               	xorwf	_controlTransferState,w,c
  7960  00B954  A4D8               	btfss	status,2,c
  7961  00B956  D020               	goto	l1410
  7962                           
  7963                           ; BSR set to: 1
  7964                           ;usb_device.c: 1512: {
  7965                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  7966  00B958  0100               	movlb	0	; () banked
  7967  00B95A  EE20 F001          	lfsr	2,1
  7968  00B95E  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7969  00B960  26D9               	addwf	fsr2l,f,c
  7970  00B962  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7971  00B964  22DA               	addwfc	fsr2h,f,c
  7972  00B966  0E08               	movlw	8
  7973  00B968  6EDF               	movwf	indf2,c
  7974                           
  7975                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  7976  00B96A  EE20 F002          	lfsr	2,2
  7977  00B96E  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7978  00B970  26D9               	addwf	fsr2l,f,c
  7979  00B972  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7980  00B974  22DA               	addwfc	fsr2h,f,c
  7981  00B976  0E38               	movlw	56
  7982  00B978  6EDE               	movwf	postinc2,c
  7983  00B97A  0E04               	movlw	4
  7984  00B97C  6EDD               	movwf	postdec2,c
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7988  00B97E  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7989  00B982  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7990  00B986  0E48               	movlw	72
  7991  00B988  6EDF               	movwf	indf2,c
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7995  00B98A  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7996  00B98E  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7997  00B992  0E00               	movlw	0
  7998  00B994  8EDB               	bsf	plusw2,7,c
  7999                           
  8000                           ;usb_device.c: 1518: }
  8001  00B996  0012               	return	
  8002  00B998                     l1410:
  8003                           
  8004                           ;usb_device.c: 1519: else
  8005                           ;usb_device.c: 1520: {
  8006                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  8007                           
  8008                           ; BSR set to: 0
  8009  00B998  0100               	movlb	0	; () banked
  8010  00B99A  51F4               	movf	(_inPipes+4)& (0+255),w,b
  8011  00B99C  0104               	movlb	4	; () banked
  8012  00B99E  5D36               	subwf	54,w,b	;volatile
  8013  00B9A0  0100               	movlb	0	; () banked
  8014  00B9A2  51F5               	movf	(_inPipes+5)& (0+255),w,b
  8015  00B9A4  0104               	movlb	4	; () banked
  8016  00B9A6  5937               	subwfb	55,w,b	;volatile
  8017  00B9A8  B0D8               	btfsc	status,0,c
  8018  00B9AA  D004               	goto	l1412
  8019                           
  8020                           ; BSR set to: 4
  8021                           ;usb_device.c: 1524: {
  8022                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  8023  00B9AC  C436 F0F4          	movff	1078,_inPipes+4	;volatile
  8024  00B9B0  C437 F0F5          	movff	1079,_inPipes+5	;volatile
  8025  00B9B4                     l1412:
  8026                           
  8027                           ; BSR set to: 4
  8028                           ;usb_device.c: 1526: }
  8029                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  8030                           
  8031                           ; BSR set to: 4
  8032  00B9B4  ECCC  F061         	call	_USBCtrlTrfTxService	;wreg free
  8033                           
  8034                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  8035  00B9B8  EE20 F002          	lfsr	2,2
  8036  00B9BC  503E               	movf	_pBDTEntryIn,w,c
  8037  00B9BE  26D9               	addwf	fsr2l,f,c
  8038  00B9C0  503F               	movf	_pBDTEntryIn+1,w,c
  8039  00B9C2  22DA               	addwfc	fsr2h,f,c
  8040  00B9C4  0E38               	movlw	56
  8041  00B9C6  6EDE               	movwf	postinc2,c
  8042  00B9C8  0E04               	movlw	4
  8043  00B9CA  6EDD               	movwf	postdec2,c
  8044                           
  8045                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8046  00B9CC  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8047  00B9D0  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8048  00B9D4  0E48               	movlw	72
  8049  00B9D6  6EDF               	movwf	indf2,c
  8050                           
  8051                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8052  00B9D8  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8053  00B9DC  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8054  00B9E0  0E00               	movlw	0
  8055  00B9E2  8EDB               	bsf	plusw2,7,c
  8056  00B9E4  0012               	return	
  8057  00B9E6                     __end_of_USBCtrlEPAllowDataStage:
  8058                           	opt stack 0
  8059                           tosu	equ	0xFFF
  8060                           tosh	equ	0xFFE
  8061                           tosl	equ	0xFFD
  8062                           pclath	equ	0xFFA
  8063                           tblptru	equ	0xFF8
  8064                           tblptrh	equ	0xFF7
  8065                           tblptrl	equ	0xFF6
  8066                           tablat	equ	0xFF5
  8067                           prodh	equ	0xFF4
  8068                           prodl	equ	0xFF3
  8069                           intcon	equ	0xFF2
  8070                           intcon2	equ	0xFF1
  8071                           intcon3	equ	0xFF0
  8072                           postinc0	equ	0xFEE
  8073                           plusw0	equ	0xFEB
  8074                           wreg	equ	0xFE8
  8075                           postinc1	equ	0xFE6
  8076                           postdec1	equ	0xFE5
  8077                           fsr1h	equ	0xFE2
  8078                           fsr1l	equ	0xFE1
  8079                           indf2	equ	0xFDF
  8080                           postinc2	equ	0xFDE
  8081                           postdec2	equ	0xFDD
  8082                           plusw2	equ	0xFDB
  8083                           fsr2h	equ	0xFDA
  8084                           fsr2l	equ	0xFD9
  8085                           status	equ	0xFD8
  8086                           
  8087 ;; *************** function _USBCheckStdRequest *****************
  8088 ;; Defined at:
  8089 ;;		line 2703 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;		None
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1    wreg      void 
  8096 ;; Registers used:
  8097 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8107 ;;Total ram usage:        0 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:   16
  8110 ;; This function calls:
  8111 ;;		_USBStdFeatureReqHandler
  8112 ;;		_USBStdGetDscHandler
  8113 ;;		_USBStdGetStatusHandler
  8114 ;;		_USBStdSetCfgHandler
  8115 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8116 ;; This function is called by:
  8117 ;;		_USBCtrlTrfSetupHandler
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           	psect	text36
  8122  00C470                     __ptext36:
  8123                           	opt stack 0
  8124  00C470                     _USBCheckStdRequest:
  8125                           	opt stack 8
  8126                           
  8127                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  8128                           
  8129                           ;incstack = 0
  8130  00C470  0104               	movlb	4	; () banked
  8131  00C472  3930               	swapf	48,w,b	;volatile
  8132  00C474  32E8               	rrcf	wreg,f,c
  8133  00C476  0B03               	andlw	3
  8134  00C478  0900               	iorlw	0
  8135  00C47A  A4D8               	btfss	status,2,c
  8136  00C47C  0012               	return	
  8137  00C47E  D048               	goto	l1545
  8138  00C480                     l1546:
  8139                           
  8140                           ; BSR set to: 4
  8141                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  8142  00C480  0100               	movlb	0	; () banked
  8143  00C482  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  8147  00C484  0E08               	movlw	8
  8148  00C486  6FFD               	movwf	_USBDeviceState& (0+255),b
  8149                           
  8150                           ;usb_device.c: 2713: break;
  8151  00C488  0012               	return	
  8152  00C48A                     
  8153                           ;usb_device.c: 2715: USBStdGetDscHandler();
  8154                           
  8155                           ; BSR set to: 0
  8156  00C48A  EC55  F066         	call	_USBStdGetDscHandler	;wreg free
  8157                           
  8158                           ;usb_device.c: 2716: break;
  8159  00C48E  0012               	return	
  8160  00C490                     
  8161                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  8162  00C490  ECAA  F062         	call	_USBStdSetCfgHandler	;wreg free
  8163                           
  8164                           ;usb_device.c: 2719: break;
  8165  00C494  0012               	return	
  8166  00C496                     
  8167                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  8168  00C496  0E52               	movlw	low _USBActiveConfiguration
  8169  00C498  0100               	movlb	0	; () banked
  8170  00C49A  6FF0               	movwf	_inPipes& (0+255),b
  8171  00C49C  0E00               	movlw	high _USBActiveConfiguration
  8172  00C49E  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8176  00C4A0  81F3               	bsf	(_inPipes+3)& (0+255),0,b
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  8180  00C4A2  0E01               	movlw	1
  8181  00C4A4  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  8185  00C4A6  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8186                           
  8187                           ;usb_device.c: 2725: break;
  8188  00C4A8  0012               	return	
  8189  00C4AA                     
  8190                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  8191                           
  8192                           ; BSR set to: 0
  8193  00C4AA  EC4E  F05E         	call	_USBStdGetStatusHandler	;wreg free
  8194                           
  8195                           ;usb_device.c: 2728: break;
  8196  00C4AE  0012               	return	
  8197  00C4B0                     
  8198                           ;usb_device.c: 2730: case 3:
  8199                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  8200  00C4B0  EC3C  F06E         	call	_USBStdFeatureReqHandler	;wreg free
  8201                           
  8202                           ;usb_device.c: 2732: break;
  8203  00C4B4  0012               	return	
  8204  00C4B6                     
  8205                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  8206  00C4B6  0104               	movlb	4	; () banked
  8207  00C4B8  5134               	movf	52,w,b	;volatile
  8208  00C4BA  0D01               	mullw	1
  8209  00C4BC  0EC1               	movlw	low _USBAlternateInterface
  8210  00C4BE  24F3               	addwf	prodl,w,c
  8211  00C4C0  0100               	movlb	0	; () banked
  8212  00C4C2  6FF0               	movwf	_inPipes& (0+255),b
  8213  00C4C4  0E01               	movlw	high _USBAlternateInterface
  8214  00C4C6  20F4               	addwfc	prodh,w,c
  8215  00C4C8  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8219  00C4CA  81F3               	bsf	(_inPipes+3)& (0+255),0,b
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  8223  00C4CC  0E01               	movlw	1
  8224  00C4CE  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8225                           
  8226                           ; BSR set to: 0
  8227                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  8228  00C4D0  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8229                           
  8230                           ;usb_device.c: 2738: break;
  8231  00C4D2  0012               	return	
  8232  00C4D4                     l1555:
  8233                           
  8234                           ; BSR set to: 4
  8235                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  8236  00C4D4  0100               	movlb	0	; () banked
  8237  00C4D6  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  8241  00C4D8  0104               	movlb	4	; () banked
  8242  00C4DA  5134               	movf	52,w,b	;volatile
  8243  00C4DC  0D01               	mullw	1
  8244  00C4DE  0EC1               	movlw	low _USBAlternateInterface
  8245  00C4E0  24F3               	addwf	prodl,w,c
  8246  00C4E2  6ED9               	movwf	fsr2l,c
  8247  00C4E4  0E01               	movlw	high _USBAlternateInterface
  8248  00C4E6  20F4               	addwfc	prodh,w,c
  8249  00C4E8  6EDA               	movwf	fsr2h,c
  8250  00C4EA  C432 FFDF          	movff	1074,indf2	;volatile
  8251                           
  8252                           ;usb_device.c: 2742: break;
  8253  00C4EE  0012               	return	
  8254  00C4F0                     
  8255                           ; BSR set to: 4
  8256                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  8257                           
  8258                           ; BSR set to: 4
  8259  00C4F0  0E00               	movlw	0
  8260  00C4F2  0100               	movlb	0	; () banked
  8261  00C4F4  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8262  00C4F6  0E02               	movlw	2
  8263  00C4F8  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8264  00C4FA  0E00               	movlw	0
  8265  00C4FC  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8266  00C4FE  0E00               	movlw	0
  8267  00C500  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8268  00C502  0E00               	movlw	0
  8269  00C504  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8270  00C506  0E00               	movlw	0
  8271  00C508  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8272  00C50A  EC61  F056         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8273                           
  8274                           ;usb_device.c: 2749: }
  8275                           
  8276                           ;usb_device.c: 2748: break;
  8277                           
  8278                           ;usb_device.c: 2747: default:
  8279                           
  8280                           ;usb_device.c: 2746: case 12:
  8281                           
  8282                           ;usb_device.c: 2745: break;
  8283  00C50E  0012               	return	
  8284  00C510                     l1545:
  8285  00C510  0104               	movlb	4	; () banked
  8286  00C512  5131               	movf	49,w,b	;volatile
  8287                           
  8288                           ; Switch size 1, requested type "space"
  8289                           ; Number of cases is 11, Range of values is 0 to 12
  8290                           ; switch strategies available:
  8291                           ; Name         Instructions Cycles
  8292                           ; simple_byte           34    18 (average)
  8293                           ;	Chosen strategy is simple_byte
  8294  00C514  0A00               	xorlw	0	; case 0
  8295  00C516  B4D8               	btfsc	status,2,c
  8296  00C518  D7C8               	goto	l1551
  8297  00C51A  0A01               	xorlw	1	; case 1
  8298  00C51C  B4D8               	btfsc	status,2,c
  8299  00C51E  D7C8               	goto	l1552
  8300  00C520  0A02               	xorlw	2	; case 3
  8301  00C522  B4D8               	btfsc	status,2,c
  8302  00C524  D7C5               	goto	l1552
  8303  00C526  0A06               	xorlw	6	; case 5
  8304  00C528  B4D8               	btfsc	status,2,c
  8305  00C52A  D7AA               	goto	l1546
  8306  00C52C  0A03               	xorlw	3	; case 6
  8307  00C52E  B4D8               	btfsc	status,2,c
  8308  00C530  D7AC               	goto	l1548
  8309  00C532  0A01               	xorlw	1	; case 7
  8310  00C534  B4D8               	btfsc	status,2,c
  8311  00C536  D7DC               	goto	l1556
  8312  00C538  0A0F               	xorlw	15	; case 8
  8313  00C53A  B4D8               	btfsc	status,2,c
  8314  00C53C  D7AC               	goto	l1550
  8315  00C53E  0A01               	xorlw	1	; case 9
  8316  00C540  B4D8               	btfsc	status,2,c
  8317  00C542  D7A6               	goto	l1549
  8318  00C544  0A03               	xorlw	3	; case 10
  8319  00C546  B4D8               	btfsc	status,2,c
  8320  00C548  D7B6               	goto	l1554
  8321  00C54A  0A01               	xorlw	1	; case 11
  8322  00C54C  B4D8               	btfsc	status,2,c
  8323  00C54E  D7C2               	goto	l1555
  8324  00C550  0A07               	xorlw	7	; case 12
  8325  00C552  0012               	return	
  8326  00C554                     __end_of_USBCheckStdRequest:
  8327                           	opt stack 0
  8328                           tosu	equ	0xFFF
  8329                           tosh	equ	0xFFE
  8330                           tosl	equ	0xFFD
  8331                           pclath	equ	0xFFA
  8332                           tblptru	equ	0xFF8
  8333                           tblptrh	equ	0xFF7
  8334                           tblptrl	equ	0xFF6
  8335                           tablat	equ	0xFF5
  8336                           prodh	equ	0xFF4
  8337                           prodl	equ	0xFF3
  8338                           intcon	equ	0xFF2
  8339                           intcon2	equ	0xFF1
  8340                           intcon3	equ	0xFF0
  8341                           postinc0	equ	0xFEE
  8342                           plusw0	equ	0xFEB
  8343                           wreg	equ	0xFE8
  8344                           postinc1	equ	0xFE6
  8345                           postdec1	equ	0xFE5
  8346                           fsr1h	equ	0xFE2
  8347                           fsr1l	equ	0xFE1
  8348                           indf2	equ	0xFDF
  8349                           postinc2	equ	0xFDE
  8350                           postdec2	equ	0xFDD
  8351                           plusw2	equ	0xFDB
  8352                           fsr2h	equ	0xFDA
  8353                           fsr2l	equ	0xFD9
  8354                           status	equ	0xFD8
  8355                           
  8356 ;; *************** function _USBStdSetCfgHandler *****************
  8357 ;; Defined at:
  8358 ;;		line 1986 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;		None
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;  i               1   20[BANK0 ] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      void 
  8365 ;; Registers used:
  8366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8375 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8376 ;;Total ram usage:        1 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:   15
  8379 ;; This function calls:
  8380 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8381 ;;		_memset
  8382 ;; This function is called by:
  8383 ;;		_USBCheckStdRequest
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           	psect	text37
  8388  00C554                     __ptext37:
  8389                           	opt stack 0
  8390  00C554                     _USBStdSetCfgHandler:
  8391                           	opt stack 8
  8392                           
  8393                           ;usb_device.c: 1988: uint8_t i;
  8394                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  8395                           
  8396                           ;incstack = 0
  8397  00C554  0100               	movlb	0	; () banked
  8398  00C556  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  8402  00C558  0E27               	movlw	39
  8403  00C55A  6F60               	movwf	memset@p1& (0+255),b
  8404  00C55C  0E0F               	movlw	15
  8405  00C55E  6F61               	movwf	(memset@p1+1)& (0+255),b
  8406  00C560  0E00               	movlw	0
  8407  00C562  6F63               	movwf	(memset@c+1)& (0+255),b
  8408  00C564  0E00               	movlw	0
  8409  00C566  6F62               	movwf	memset@c& (0+255),b
  8410  00C568  0E00               	movlw	0
  8411  00C56A  6F65               	movwf	(memset@n+1)& (0+255),b
  8412  00C56C  0E02               	movlw	2
  8413  00C56E  6F64               	movwf	memset@n& (0+255),b
  8414  00C570  ECCD  F051         	call	_memset	;wreg free
  8415                           
  8416                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  8417  00C574  0E00               	movlw	0
  8418  00C576  0100               	movlb	0	; () banked
  8419  00C578  6F60               	movwf	memset@p1& (0+255),b
  8420  00C57A  0E04               	movlw	4
  8421  00C57C  6F61               	movwf	(memset@p1+1)& (0+255),b
  8422  00C57E  0E00               	movlw	0
  8423  00C580  6F63               	movwf	(memset@c+1)& (0+255),b
  8424  00C582  0E00               	movlw	0
  8425  00C584  6F62               	movwf	memset@c& (0+255),b
  8426  00C586  0E00               	movlw	0
  8427  00C588  6F65               	movwf	(memset@n+1)& (0+255),b
  8428  00C58A  0E30               	movlw	48
  8429  00C58C  6F64               	movwf	memset@n& (0+255),b
  8430  00C58E  ECCD  F051         	call	_memset	;wreg free
  8431                           
  8432                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  8433  00C592  8C65               	bsf	3941,6,c	;volatile
  8434                           
  8435                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  8436  00C594  0E00               	movlw	0
  8437  00C596  0100               	movlb	0	; () banked
  8438  00C598  6F74               	movwf	USBStdSetCfgHandler@i& (0+255),b
  8439  00C59A                     l6622:
  8440                           
  8441                           ; BSR set to: 0
  8442  00C59A  0E02               	movlw	2
  8443  00C59C  6574               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  8444  00C59E  D001               	goto	l1462
  8445  00C5A0  D016               	goto	u4520
  8446  00C5A2                     l1462:
  8447                           
  8448                           ; BSR set to: 0
  8449                           ;usb_device.c: 2006: {
  8450                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  8451                           
  8452                           ; BSR set to: 0
  8453  00C5A2  5174               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8454  00C5A4  0D01               	mullw	1
  8455  00C5A6  0E3B               	movlw	low _ep_data_in
  8456  00C5A8  24F3               	addwf	prodl,w,c
  8457  00C5AA  6ED9               	movwf	fsr2l,c
  8458  00C5AC  0E01               	movlw	high _ep_data_in
  8459  00C5AE  20F4               	addwfc	prodh,w,c
  8460  00C5B0  6EDA               	movwf	fsr2h,c
  8461  00C5B2  0E00               	movlw	0
  8462  00C5B4  6EDF               	movwf	indf2,c
  8463                           
  8464                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  8465  00C5B6  5174               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8466  00C5B8  0D01               	mullw	1
  8467  00C5BA  0E38               	movlw	low _ep_data_out
  8468  00C5BC  24F3               	addwf	prodl,w,c
  8469  00C5BE  6ED9               	movwf	fsr2l,c
  8470  00C5C0  0E01               	movlw	high _ep_data_out
  8471  00C5C2  20F4               	addwfc	prodh,w,c
  8472  00C5C4  6EDA               	movwf	fsr2h,c
  8473  00C5C6  0E00               	movlw	0
  8474  00C5C8  6EDF               	movwf	indf2,c
  8475                           
  8476                           ; BSR set to: 0
  8477  00C5CA  2B74               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  8478  00C5CC  D7E6               	goto	l6622
  8479  00C5CE                     u4520:
  8480                           
  8481                           ; BSR set to: 0
  8482                           ;usb_device.c: 2009: }
  8483                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  8484                           
  8485                           ; BSR set to: 0
  8486  00C5CE  0EC1               	movlw	low _USBAlternateInterface
  8487  00C5D0  6F60               	movwf	memset@p1& (0+255),b
  8488  00C5D2  0E01               	movlw	high _USBAlternateInterface
  8489  00C5D4  6F61               	movwf	(memset@p1+1)& (0+255),b
  8490  00C5D6  0E00               	movlw	0
  8491  00C5D8  6F63               	movwf	(memset@c+1)& (0+255),b
  8492  00C5DA  0E00               	movlw	0
  8493  00C5DC  6F62               	movwf	memset@c& (0+255),b
  8494  00C5DE  0E00               	movlw	0
  8495  00C5E0  6F65               	movwf	(memset@n+1)& (0+255),b
  8496  00C5E2  0E02               	movlw	2
  8497  00C5E4  6F64               	movwf	memset@n& (0+255),b
  8498  00C5E6  ECCD  F051         	call	_memset	;wreg free
  8499                           
  8500                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  8501  00C5EA  9C65               	bcf	3941,6,c	;volatile
  8502                           
  8503                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8504  00C5EC  0E08               	movlw	8
  8505  00C5EE  6E3E               	movwf	_pBDTEntryIn,c
  8506  00C5F0  0E04               	movlw	4
  8507  00C5F2  6E3F               	movwf	_pBDTEntryIn+1,c
  8508                           
  8509                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  8510  00C5F4  0E00               	movlw	0
  8511  00C5F6  0100               	movlb	0	; () banked
  8512  00C5F8  6FF8               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8513  00C5FA  0E04               	movlw	4
  8514  00C5FC  6FF9               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8515                           
  8516                           ; BSR set to: 0
  8517                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8518  00C5FE  C0F8  F0F6         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8519  00C602  C0F9  F0F7         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8520                           
  8521                           ; BSR set to: 0
  8522                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  8523  00C606  C432 F052          	movff	1074,_USBActiveConfiguration	;volatile
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  8527  00C60A  5052               	movf	_USBActiveConfiguration,w,c
  8528  00C60C  A4D8               	btfss	status,2,c
  8529  00C60E  D003               	goto	l1464
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;usb_device.c: 2028: {
  8533                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  8534  00C610  0E10               	movlw	16
  8535  00C612  6FFD               	movwf	_USBDeviceState& (0+255),b
  8536                           
  8537                           ;usb_device.c: 2031: }
  8538  00C614  0012               	return	
  8539  00C616                     l1464:
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;usb_device.c: 2032: else
  8543                           ;usb_device.c: 2033: {
  8544                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  8545                           
  8546                           ; BSR set to: 0
  8547  00C616  0E00               	movlw	0
  8548  00C618  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8549  00C61A  0E01               	movlw	1
  8550  00C61C  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8551  00C61E  0E52               	movlw	low _USBActiveConfiguration
  8552  00C620  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8553  00C622  0E00               	movlw	high _USBActiveConfiguration
  8554  00C624  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8555  00C626  0E00               	movlw	0
  8556  00C628  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8557  00C62A  0E01               	movlw	1
  8558  00C62C  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8559  00C62E  EC61  F056         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8560                           
  8561                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  8562  00C632  0E20               	movlw	32
  8563  00C634  0100               	movlb	0	; () banked
  8564  00C636  6FFD               	movwf	_USBDeviceState& (0+255),b
  8565  00C638  0012               	return	
  8566  00C63A                     __end_of_USBStdSetCfgHandler:
  8567                           	opt stack 0
  8568                           tosu	equ	0xFFF
  8569                           tosh	equ	0xFFE
  8570                           tosl	equ	0xFFD
  8571                           pclath	equ	0xFFA
  8572                           tblptru	equ	0xFF8
  8573                           tblptrh	equ	0xFF7
  8574                           tblptrl	equ	0xFF6
  8575                           tablat	equ	0xFF5
  8576                           prodh	equ	0xFF4
  8577                           prodl	equ	0xFF3
  8578                           intcon	equ	0xFF2
  8579                           intcon2	equ	0xFF1
  8580                           intcon3	equ	0xFF0
  8581                           postinc0	equ	0xFEE
  8582                           plusw0	equ	0xFEB
  8583                           wreg	equ	0xFE8
  8584                           postinc1	equ	0xFE6
  8585                           postdec1	equ	0xFE5
  8586                           fsr1h	equ	0xFE2
  8587                           fsr1l	equ	0xFE1
  8588                           indf2	equ	0xFDF
  8589                           postinc2	equ	0xFDE
  8590                           postdec2	equ	0xFDD
  8591                           plusw2	equ	0xFDB
  8592                           fsr2h	equ	0xFDA
  8593                           fsr2l	equ	0xFD9
  8594                           status	equ	0xFD8
  8595                           
  8596 ;; *************** function _USBStdGetStatusHandler *****************
  8597 ;; Defined at:
  8598 ;;		line 2147 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;  p               2    1[BANK0 ] PTR struct __BDT
  8603 ;;		 -> BDT(48), NULL(0), 
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  1    wreg      void 
  8606 ;; Registers used:
  8607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8616 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8617 ;;Total ram usage:        3 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; Hardware stack levels required when called:   11
  8620 ;; This function calls:
  8621 ;;		Nothing
  8622 ;; This function is called by:
  8623 ;;		_USBCheckStdRequest
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           	psect	text38
  8628  00BC9C                     __ptext38:
  8629                           	opt stack 0
  8630  00BC9C                     _USBStdGetStatusHandler:
  8631                           	opt stack 12
  8632                           
  8633                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;incstack = 0
  8637  00BC9C  0E00               	movlw	0
  8638  00BC9E  0104               	movlb	4	; () banked
  8639  00BCA0  6F38               	movwf	56,b	;volatile
  8640                           
  8641                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  8642  00BCA2  0E00               	movlw	0
  8643  00BCA4  6F39               	movwf	57,b	;volatile
  8644                           
  8645                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  8646  00BCA6  D03D               	goto	l1483
  8647  00BCA8                     l1484:
  8648                           
  8649                           ; BSR set to: 4
  8650                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  8651  00BCA8  0100               	movlb	0	; () banked
  8652  00BCAA  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8653                           
  8654                           ;usb_device.c: 2163: }
  8655                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  8656                           
  8657                           ; BSR set to: 4
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;usb_device.c: 2161: {
  8661                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  8662                           
  8663                           ;usb_device.c: 2160: if(0 == 1)
  8664  00BCAC  0101               	movlb	1	; () banked
  8665  00BCAE  0562               	decf	_RemoteWakeup& (0+255),w,b
  8666  00BCB0  A4D8               	btfss	status,2,c
  8667  00BCB2  D042               	goto	l1487
  8668                           
  8669                           ; BSR set to: 1
  8670                           ;usb_device.c: 2166: {
  8671                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  8672  00BCB4  0104               	movlb	4	; () banked
  8673  00BCB6  8338               	bsf	56,1,b	;volatile
  8674                           
  8675                           ; BSR set to: 4
  8676                           ;usb_device.c: 2168: }
  8677                           ;usb_device.c: 2169: break;
  8678  00BCB8  D03F               	goto	l1487
  8679  00BCBA                     l1488:
  8680                           
  8681                           ; BSR set to: 4
  8682                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  8683  00BCBA  0100               	movlb	0	; () banked
  8684  00BCBC  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8685                           
  8686                           ;usb_device.c: 2172: break;
  8687  00BCBE  D03C               	goto	l1487
  8688  00BCC0                     l1489:
  8689                           
  8690                           ; BSR set to: 4
  8691                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  8692  00BCC0  0100               	movlb	0	; () banked
  8693  00BCC2  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8694                           
  8695                           ;usb_device.c: 2178: {
  8696                           ;usb_device.c: 2179: BDT_ENTRY *p;
  8697                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  8698  00BCC4  0104               	movlb	4	; () banked
  8699  00BCC6  BF34               	btfsc	52,7,b	;volatile
  8700  00BCC8  D00B               	goto	l1490
  8701                           
  8702                           ; BSR set to: 4
  8703                           ;usb_device.c: 2182: {
  8704                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8705  00BCCA  5134               	movf	52,w,b	;volatile
  8706  00BCCC  0B0F               	andlw	15
  8707  00BCCE  0100               	movlb	0	; () banked
  8708  00BCD0  6F60               	movwf	??_USBStdGetStatusHandler& (0+255),b
  8709  00BCD2  5160               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8710  00BCD4  0D02               	mullw	2
  8711  00BCD6  0E20               	movlw	low _pBDTEntryOut
  8712  00BCD8  24F3               	addwf	prodl,w,c
  8713  00BCDA  6ED9               	movwf	fsr2l,c
  8714  00BCDC  0E01               	movlw	high _pBDTEntryOut
  8715  00BCDE  D00B               	goto	L4
  8716  00BCE0                     l1490:
  8717                           
  8718                           ;usb_device.c: 2185: else
  8719                           ;usb_device.c: 2186: {
  8720                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  8721                           
  8722                           ; BSR set to: 0
  8723  00BCE0  0104               	movlb	4	; () banked
  8724  00BCE2  5134               	movf	52,w,b	;volatile
  8725  00BCE4  0B0F               	andlw	15
  8726  00BCE6  0100               	movlb	0	; () banked
  8727  00BCE8  6F60               	movwf	??_USBStdGetStatusHandler& (0+255),b
  8728  00BCEA  5160               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8729  00BCEC  0D02               	mullw	2
  8730  00BCEE  0E3E               	movlw	low _pBDTEntryIn
  8731  00BCF0  24F3               	addwf	prodl,w,c
  8732  00BCF2  6ED9               	movwf	fsr2l,c
  8733  00BCF4  0E00               	movlw	high _pBDTEntryIn
  8734  00BCF6                     L4:
  8735  00BCF6  20F4               	addwfc	prodh,w,c
  8736  00BCF8  6EDA               	movwf	fsr2h,c
  8737  00BCFA  CFDE F061          	movff	postinc2,USBStdGetStatusHandler@p
  8738  00BCFE  CFDD F062          	movff	postdec2,USBStdGetStatusHandler@p+1
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;usb_device.c: 2188: }
  8742                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  8743                           
  8744                           ; BSR set to: 0
  8745  00BD02  C061  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8746  00BD06  C062  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8747  00BD0A  AEDF               	btfss	indf2,7,c
  8748  00BD0C  D015               	goto	l1487
  8749                           
  8750                           ; BSR set to: 0
  8751  00BD0E  C061  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8752  00BD12  C062  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8753  00BD16  A4DF               	btfss	indf2,2,c
  8754  00BD18  D00F               	goto	l1487
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  8758  00BD1A  0E01               	movlw	1
  8759  00BD1C  0104               	movlb	4	; () banked
  8760  00BD1E  6F38               	movwf	56,b	;volatile
  8761                           
  8762                           ; BSR set to: 4
  8763                           ;usb_device.c: 2193: }
  8764                           ;usb_device.c: 2194: }
  8765                           
  8766                           ; BSR set to: 4
  8767                           ;usb_device.c: 2192: break;
  8768  00BD20  D00B               	goto	l1487
  8769  00BD22                     l1483:
  8770                           
  8771                           ; BSR set to: 4
  8772                           
  8773                           ; BSR set to: 4
  8774  00BD22  5130               	movf	48,w,b	;volatile
  8775  00BD24  0B1F               	andlw	31
  8776                           
  8777                           ; Switch size 1, requested type "space"
  8778                           ; Number of cases is 3, Range of values is 0 to 2
  8779                           ; switch strategies available:
  8780                           ; Name         Instructions Cycles
  8781                           ; simple_byte           10     6 (average)
  8782                           ;	Chosen strategy is simple_byte
  8783  00BD26  0A00               	xorlw	0	; case 0
  8784  00BD28  B4D8               	btfsc	status,2,c
  8785  00BD2A  D7BE               	goto	l1484
  8786  00BD2C  0A01               	xorlw	1	; case 1
  8787  00BD2E  B4D8               	btfsc	status,2,c
  8788  00BD30  D7C4               	goto	l1488
  8789  00BD32  0A03               	xorlw	3	; case 2
  8790  00BD34  B4D8               	btfsc	status,2,c
  8791  00BD36  D7C4               	goto	l1489
  8792  00BD38                     l1487:
  8793                           
  8794                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  8795  00BD38  0100               	movlb	0	; () banked
  8796  00BD3A  AFF3               	btfss	(_inPipes+3)& (0+255),7,b
  8797  00BD3C  0012               	return	
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;usb_device.c: 2197: {
  8801                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  8802  00BD3E  0E38               	movlw	56
  8803  00BD40  6FF0               	movwf	_inPipes& (0+255),b
  8804  00BD42  0E04               	movlw	4
  8805  00BD44  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8809  00BD46  81F3               	bsf	(_inPipes+3)& (0+255),0,b
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
  8813  00BD48  0E02               	movlw	2
  8814  00BD4A  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8815  00BD4C  0012               	return	
  8816  00BD4E                     __end_of_USBStdGetStatusHandler:
  8817                           	opt stack 0
  8818                           tosu	equ	0xFFF
  8819                           tosh	equ	0xFFE
  8820                           tosl	equ	0xFFD
  8821                           pclath	equ	0xFFA
  8822                           tblptru	equ	0xFF8
  8823                           tblptrh	equ	0xFF7
  8824                           tblptrl	equ	0xFF6
  8825                           tablat	equ	0xFF5
  8826                           prodh	equ	0xFF4
  8827                           prodl	equ	0xFF3
  8828                           intcon	equ	0xFF2
  8829                           intcon2	equ	0xFF1
  8830                           intcon3	equ	0xFF0
  8831                           postinc0	equ	0xFEE
  8832                           plusw0	equ	0xFEB
  8833                           wreg	equ	0xFE8
  8834                           postinc1	equ	0xFE6
  8835                           postdec1	equ	0xFE5
  8836                           fsr1h	equ	0xFE2
  8837                           fsr1l	equ	0xFE1
  8838                           indf2	equ	0xFDF
  8839                           postinc2	equ	0xFDE
  8840                           postdec2	equ	0xFDD
  8841                           plusw2	equ	0xFDB
  8842                           fsr2h	equ	0xFDA
  8843                           fsr2l	equ	0xFD9
  8844                           status	equ	0xFD8
  8845                           
  8846 ;; *************** function _USBStdGetDscHandler *****************
  8847 ;; Defined at:
  8848 ;;		line 2061 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;		None
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8864 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8865 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;Total ram usage:        2 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:   11
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_USBCheckStdRequest
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text39
  8877  00CCAA                     __ptext39:
  8878                           	opt stack 0
  8879  00CCAA                     _USBStdGetDscHandler:
  8880                           	opt stack 12
  8881                           
  8882                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;incstack = 0
  8886  00CCAA  0E80               	movlw	128
  8887  00CCAC  0104               	movlb	4	; () banked
  8888  00CCAE  1930               	xorwf	48,w,b	;volatile
  8889  00CCB0  A4D8               	btfss	status,2,c
  8890  00CCB2  0012               	return	
  8891                           
  8892                           ; BSR set to: 4
  8893                           ;usb_device.c: 2064: {
  8894                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  8895  00CCB4  0EC0               	movlw	192
  8896  00CCB6  0100               	movlb	0	; () banked
  8897  00CCB8  6FF3               	movwf	(_inPipes+3)& (0+255),b
  8898                           
  8899                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
  8900  00CCBA  D088               	goto	l1470
  8901  00CCBC                     
  8902                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  8903                           
  8904                           ; BSR set to: 0
  8905  00CCBC  0EFA               	movlw	low _device_dsc
  8906  00CCBE  0100               	movlb	0	; () banked
  8907  00CCC0  6FF0               	movwf	_inPipes& (0+255),b
  8908  00CCC2  0EEE               	movlw	high _device_dsc
  8909  00CCC4  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
  8913  00CCC6  0E00               	movlw	0
  8914  00CCC8  6FF5               	movwf	(_inPipes+5)& (0+255),b
  8915  00CCCA  0E12               	movlw	18
  8916  00CCCC  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8917                           
  8918                           ;usb_device.c: 2076: break;
  8919  00CCCE  0012               	return	
  8920  00CCD0                     
  8921                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
  8922                           
  8923                           ; BSR set to: 0
  8924  00CCD0  0104               	movlb	4	; () banked
  8925  00CCD2  5132               	movf	50,w,b	;volatile
  8926  00CCD4  A4D8               	btfss	status,2,c
  8927  00CCD6  D043               	goto	l1474
  8928                           
  8929                           ; BSR set to: 4
  8930                           ;usb_device.c: 2082: {
  8931                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  8932  00CCD8  5132               	movf	50,w,b	;volatile
  8933  00CCDA  0D02               	mullw	2
  8934  00CCDC  0EE3               	movlw	low _USB_CD_Ptr
  8935  00CCDE  24F3               	addwf	prodl,w,c
  8936  00CCE0  6EF6               	movwf	tblptrl,c
  8937  00CCE2  0EEC               	movlw	high _USB_CD_Ptr
  8938  00CCE4  20F4               	addwfc	prodh,w,c
  8939  00CCE6  6EF7               	movwf	tblptrh,c
  8940  00CCE8                     	if	1	;There are 3 active tblptr bytes
  8941  00CCE8  6AF8               	clrf	tblptru,c
  8942  00CCEA  0E00               	movlw	low (__mediumconst shr (0+16))
  8943  00CCEC  22F8               	addwfc	tblptru,f,c
  8944  00CCEE                     	endif
  8945  00CCEE  0009               	tblrd		*+
  8946  00CCF0  CFF5 F0F0          	movff	tablat,_inPipes
  8947  00CCF4  000A               	tblrd		*-
  8948  00CCF6  CFF5 F0F1          	movff	tablat,_inPipes+1
  8949                           
  8950                           ; BSR set to: 4
  8951                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  8952  00CCFA  0E02               	movlw	2
  8953  00CCFC  0100               	movlb	0	; () banked
  8954  00CCFE  25F0               	addwf	_inPipes& (0+255),w,b
  8955  00CD00  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  8956  00CD02  0E00               	movlw	0
  8957  00CD04  21F1               	addwfc	(_inPipes+1)& (0+255),w,b
  8958  00CD06  6F61               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  8959  00CD08  C060  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  8960  00CD0C  C061  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  8961  00CD10  6AF8               	clrf	tblptru,c
  8962  00CD12  0E0E               	movlw	(high __ramtop+-1)
  8963  00CD14  64F7               	cpfsgt	tblptrh,c
  8964  00CD16  D003               	bra	u4567
  8965  00CD18  0008               	tblrd		*
  8966  00CD1A  50F5               	movf	tablat,w,c
  8967  00CD1C  D005               	bra	u4560
  8968  00CD1E                     u4567:
  8969  00CD1E  CFF6 FFE9          	movff	tblptrl,fsr0l
  8970  00CD22  CFF7 FFEA          	movff	tblptrh,fsr0h
  8971  00CD26  50EF               	movf	indf0,w,c
  8972  00CD28                     u4560:
  8973  00CD28  0100               	movlb	0	; () banked
  8974  00CD2A  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  8978  00CD2C  0E03               	movlw	3
  8979  00CD2E  25F0               	addwf	_inPipes& (0+255),w,b
  8980  00CD30  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  8981  00CD32  0E00               	movlw	0
  8982  00CD34  21F1               	addwfc	(_inPipes+1)& (0+255),w,b
  8983  00CD36  6F61               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  8984  00CD38  C060  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  8985  00CD3C  C061  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  8986  00CD40  6AF8               	clrf	tblptru,c
  8987  00CD42  0E0E               	movlw	(high __ramtop+-1)
  8988  00CD44  64F7               	cpfsgt	tblptrh,c
  8989  00CD46  D003               	bra	u4577
  8990  00CD48  0008               	tblrd		*
  8991  00CD4A  50F5               	movf	tablat,w,c
  8992  00CD4C  D005               	bra	u4570
  8993  00CD4E                     u4577:
  8994  00CD4E  CFF6 FFE9          	movff	tblptrl,fsr0l
  8995  00CD52  CFF7 FFEA          	movff	tblptrh,fsr0h
  8996  00CD56  50EF               	movf	indf0,w,c
  8997  00CD58                     u4570:
  8998  00CD58  0100               	movlb	0	; () banked
  8999  00CD5A  6FF5               	movwf	(_inPipes+5)& (0+255),b
  9000                           
  9001                           ;usb_device.c: 2094: }
  9002  00CD5C  0012               	return	
  9003  00CD5E                     l1474:
  9004                           
  9005                           ;usb_device.c: 2095: else
  9006                           ;usb_device.c: 2096: {
  9007                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
  9008                           
  9009                           ; BSR set to: 0
  9010  00CD5E  0E00               	movlw	0
  9011  00CD60  0100               	movlb	0	; () banked
  9012  00CD62  6FF3               	movwf	(_inPipes+3)& (0+255),b
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;usb_device.c: 2098: }
  9016                           ;usb_device.c: 2099: break;
  9017  00CD64  0012               	return	
  9018  00CD66                     
  9019                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
  9020                           
  9021                           ; BSR set to: 0
  9022  00CD66  0E03               	movlw	3
  9023  00CD68  0104               	movlb	4	; () banked
  9024  00CD6A  6132               	cpfslt	50,b	;volatile
  9025  00CD6C  D027               	goto	l1477
  9026                           
  9027                           ; BSR set to: 4
  9028                           ;usb_device.c: 2105: {
  9029                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  9030  00CD6E  5132               	movf	50,w,b	;volatile
  9031  00CD70  0D02               	mullw	2
  9032  00CD72  0EDD               	movlw	low _USB_SD_Ptr
  9033  00CD74  24F3               	addwf	prodl,w,c
  9034  00CD76  6EF6               	movwf	tblptrl,c
  9035  00CD78  0EEC               	movlw	high _USB_SD_Ptr
  9036  00CD7A  20F4               	addwfc	prodh,w,c
  9037  00CD7C  6EF7               	movwf	tblptrh,c
  9038  00CD7E                     	if	1	;There are 3 active tblptr bytes
  9039  00CD7E  6AF8               	clrf	tblptru,c
  9040  00CD80  0E00               	movlw	low (__mediumconst shr (0+16))
  9041  00CD82  22F8               	addwfc	tblptru,f,c
  9042  00CD84                     	endif
  9043  00CD84  0009               	tblrd		*+
  9044  00CD86  CFF5 F0F0          	movff	tablat,_inPipes
  9045  00CD8A  000A               	tblrd		*-
  9046  00CD8C  CFF5 F0F1          	movff	tablat,_inPipes+1
  9047                           
  9048                           ; BSR set to: 4
  9049                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  9050  00CD90  C0F0  FFF6         	movff	_inPipes,tblptrl
  9051  00CD94  C0F1  FFF7         	movff	_inPipes+1,tblptrh
  9052  00CD98  6AF8               	clrf	tblptru,c
  9053  00CD9A  0E0E               	movlw	(high __ramtop+-1)
  9054  00CD9C  64F7               	cpfsgt	tblptrh,c
  9055  00CD9E  D003               	bra	u4597
  9056  00CDA0  0008               	tblrd		*
  9057  00CDA2  50F5               	movf	tablat,w,c
  9058  00CDA4  D005               	bra	u4590
  9059  00CDA6                     u4597:
  9060  00CDA6  CFF6 FFE9          	movff	tblptrl,fsr0l
  9061  00CDAA  CFF7 FFEA          	movff	tblptrh,fsr0h
  9062  00CDAE  50EF               	movf	indf0,w,c
  9063  00CDB0                     u4590:
  9064  00CDB0  0100               	movlb	0	; () banked
  9065  00CDB2  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  9066  00CDB4  5160               	movf	??_USBStdGetDscHandler& (0+255),w,b
  9067  00CDB6  6FF4               	movwf	(_inPipes+4)& (0+255),b
  9068  00CDB8  6BF5               	clrf	(_inPipes+5)& (0+255),b
  9069                           
  9070                           ;usb_device.c: 2110: }
  9071  00CDBA  0012               	return	
  9072  00CDBC                     l1477:
  9073                           
  9074                           ;usb_device.c: 2120: else
  9075                           ;usb_device.c: 2121: {
  9076                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
  9077                           
  9078                           ; BSR set to: 0
  9079  00CDBC  0E00               	movlw	0
  9080  00CDBE  0100               	movlb	0	; () banked
  9081  00CDC0  6FF3               	movwf	(_inPipes+3)& (0+255),b
  9082                           
  9083                           ; BSR set to: 0
  9084                           ;usb_device.c: 2123: }
  9085                           ;usb_device.c: 2124: break;
  9086  00CDC2  0012               	return	
  9087  00CDC4                     
  9088                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
  9089                           
  9090                           ; BSR set to: 0
  9091  00CDC4  0E00               	movlw	0
  9092  00CDC6  0100               	movlb	0	; () banked
  9093  00CDC8  6FF3               	movwf	(_inPipes+3)& (0+255),b
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;usb_device.c: 2128: }
  9097                           
  9098                           ;usb_device.c: 2127: break;
  9099  00CDCA  0012               	return	
  9100  00CDCC                     l1470:
  9101                           
  9102                           ; BSR set to: 0
  9103                           
  9104                           ; BSR set to: 0
  9105  00CDCC  0104               	movlb	4	; () banked
  9106  00CDCE  5133               	movf	51,w,b	;volatile
  9107                           
  9108                           ; Switch size 1, requested type "space"
  9109                           ; Number of cases is 3, Range of values is 1 to 3
  9110                           ; switch strategies available:
  9111                           ; Name         Instructions Cycles
  9112                           ; simple_byte           10     6 (average)
  9113                           ;	Chosen strategy is simple_byte
  9114  00CDD0  0A01               	xorlw	1	; case 1
  9115  00CDD2  B4D8               	btfsc	status,2,c
  9116  00CDD4  D773               	goto	l1471
  9117  00CDD6  0A03               	xorlw	3	; case 2
  9118  00CDD8  B4D8               	btfsc	status,2,c
  9119  00CDDA  D77A               	goto	l1473
  9120  00CDDC  0A01               	xorlw	1	; case 3
  9121  00CDDE  B4D8               	btfsc	status,2,c
  9122  00CDE0  D7C2               	goto	l1476
  9123  00CDE2  D7F0               	goto	l1479
  9124  00CDE4                     __end_of_USBStdGetDscHandler:
  9125                           	opt stack 0
  9126                           tosu	equ	0xFFF
  9127                           tosh	equ	0xFFE
  9128                           tosl	equ	0xFFD
  9129                           pclath	equ	0xFFA
  9130                           tblptru	equ	0xFF8
  9131                           tblptrh	equ	0xFF7
  9132                           tblptrl	equ	0xFF6
  9133                           tablat	equ	0xFF5
  9134                           prodh	equ	0xFF4
  9135                           prodl	equ	0xFF3
  9136                           intcon	equ	0xFF2
  9137                           intcon2	equ	0xFF1
  9138                           intcon3	equ	0xFF0
  9139                           indf0	equ	0xFEF
  9140                           postinc0	equ	0xFEE
  9141                           plusw0	equ	0xFEB
  9142                           fsr0h	equ	0xFEA
  9143                           fsr0l	equ	0xFE9
  9144                           wreg	equ	0xFE8
  9145                           postinc1	equ	0xFE6
  9146                           postdec1	equ	0xFE5
  9147                           fsr1h	equ	0xFE2
  9148                           fsr1l	equ	0xFE1
  9149                           indf2	equ	0xFDF
  9150                           postinc2	equ	0xFDE
  9151                           postdec2	equ	0xFDD
  9152                           plusw2	equ	0xFDB
  9153                           fsr2h	equ	0xFDA
  9154                           fsr2l	equ	0xFD9
  9155                           status	equ	0xFD8
  9156                           
  9157 ;; *************** function _USBStdFeatureReqHandler *****************
  9158 ;; Defined at:
  9159 ;;		line 2771 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;  p               2   24[BANK0 ] PTR struct __BDT
  9164 ;;		 -> BDT(48), NULL(0), 
  9165 ;;  pUEP            2   21[BANK0 ] PTR unsigned char 
  9166 ;;		 -> UEP0(1), 
  9167 ;;  current_ep_d    1   23[BANK0 ] struct .
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      void 
  9170 ;; Registers used:
  9171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9178 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9179 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9180 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9181 ;;Total ram usage:        6 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:   15
  9184 ;; This function calls:
  9185 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9186 ;; This function is called by:
  9187 ;;		_USBCheckStdRequest
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text40
  9192  00DC78                     __ptext40:
  9193                           	opt stack 0
  9194  00DC78                     _USBStdFeatureReqHandler:
  9195                           	opt stack 8
  9196                           
  9197                           ;usb_device.c: 2773: BDT_ENTRY *p;
  9198                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
  9199                           ;usb_device.c: 2778: unsigned char* pUEP;
  9200                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
  9201                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
  9202                           
  9203                           ;incstack = 0
  9204  00DC78  0104               	movlb	4	; () banked
  9205  00DC7A  0532               	decf	50,w,b	;volatile
  9206  00DC7C  A4D8               	btfss	status,2,c
  9207  00DC7E  D011               	goto	l1563
  9208                           
  9209                           ; BSR set to: 4
  9210  00DC80  5130               	movf	48,w,b	;volatile
  9211  00DC82  0B1F               	andlw	31
  9212  00DC84  0900               	iorlw	0
  9213  00DC86  A4D8               	btfss	status,2,c
  9214  00DC88  D00C               	goto	l1563
  9215                           
  9216                           ; BSR set to: 4
  9217                           ;usb_device.c: 2818: {
  9218                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
  9219  00DC8A  0100               	movlb	0	; () banked
  9220  00DC8C  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
  9224  00DC8E  0E03               	movlw	3
  9225  00DC90  0104               	movlb	4	; () banked
  9226  00DC92  1931               	xorwf	49,w,b	;volatile
  9227  00DC94  A4D8               	btfss	status,2,c
  9228  00DC96  D002               	goto	l1562
  9229                           
  9230                           ; BSR set to: 4
  9231                           ;usb_device.c: 2821: RemoteWakeup = 1;
  9232  00DC98  0E01               	movlw	1
  9233  00DC9A  D001               	goto	L5
  9234  00DC9C                     l1562:
  9235                           
  9236                           ;usb_device.c: 2822: else
  9237                           ;usb_device.c: 2823: RemoteWakeup = 0;
  9238                           
  9239                           ; BSR set to: 1
  9240  00DC9C  0E00               	movlw	0
  9241  00DC9E                     L5:
  9242  00DC9E  0101               	movlb	1	; () banked
  9243  00DCA0  6F62               	movwf	_RemoteWakeup& (0+255),b
  9244  00DCA2                     l1563:
  9245                           
  9246                           ;usb_device.c: 2824: }
  9247                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
  9248                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
  9249                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  9250                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
  9251                           
  9252                           ; BSR set to: 1
  9253  00DCA2  0104               	movlb	4	; () banked
  9254  00DCA4  5132               	movf	50,w,b	;volatile
  9255  00DCA6  A4D8               	btfss	status,2,c
  9256  00DCA8  0012               	return	
  9257                           
  9258                           ; BSR set to: 4
  9259  00DCAA  5130               	movf	48,w,b	;volatile
  9260  00DCAC  0B1F               	andlw	31
  9261  00DCAE  0A02               	xorlw	2
  9262  00DCB0  A4D8               	btfss	status,2,c
  9263  00DCB2  0012               	return	
  9264                           
  9265                           ; BSR set to: 4
  9266  00DCB4  5134               	movf	52,w,b	;volatile
  9267  00DCB6  0B0F               	andlw	15
  9268  00DCB8  0900               	iorlw	0
  9269  00DCBA  B4D8               	btfsc	status,2,c
  9270  00DCBC  0012               	return	
  9271                           
  9272                           ; BSR set to: 4
  9273  00DCBE  5134               	movf	52,w,b	;volatile
  9274  00DCC0  0B0F               	andlw	15
  9275  00DCC2  0100               	movlb	0	; () banked
  9276  00DCC4  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9277  00DCC6  0E03               	movlw	3
  9278  00DCC8  6174               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
  9279  00DCCA  0012               	return	
  9280                           
  9281                           ; BSR set to: 0
  9282  00DCCC  0E20               	movlw	32
  9283  00DCCE  19FD               	xorwf	_USBDeviceState& (0+255),w,b
  9284  00DCD0  A4D8               	btfss	status,2,c
  9285  00DCD2  0012               	return	
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;usb_device.c: 2831: {
  9289                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
  9290  00DCD4  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  9291                           
  9292                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
  9293  00DCD6  0104               	movlb	4	; () banked
  9294  00DCD8  BF34               	btfsc	52,7,b	;volatile
  9295  00DCDA  D01C               	goto	l1565
  9296                           
  9297                           ; BSR set to: 4
  9298                           ;usb_device.c: 2838: {
  9299                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9300  00DCDC  5134               	movf	52,w,b	;volatile
  9301  00DCDE  0B0F               	andlw	15
  9302  00DCE0  0100               	movlb	0	; () banked
  9303  00DCE2  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9304  00DCE4  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9305  00DCE6  0D02               	mullw	2
  9306  00DCE8  0E20               	movlw	low _pBDTEntryOut
  9307  00DCEA  24F3               	addwf	prodl,w,c
  9308  00DCEC  6ED9               	movwf	fsr2l,c
  9309  00DCEE  0E01               	movlw	high _pBDTEntryOut
  9310  00DCF0  20F4               	addwfc	prodh,w,c
  9311  00DCF2  6EDA               	movwf	fsr2h,c
  9312  00DCF4  CFDE F078          	movff	postinc2,USBStdFeatureReqHandler@p
  9313  00DCF8  CFDD F079          	movff	postdec2,USBStdFeatureReqHandler@p+1
  9314                           
  9315                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  9316  00DCFC  0104               	movlb	4	; () banked
  9317  00DCFE  5134               	movf	52,w,b	;volatile
  9318  00DD00  0B0F               	andlw	15
  9319  00DD02  0100               	movlb	0	; () banked
  9320  00DD04  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9321  00DD06  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9322  00DD08  0D01               	mullw	1
  9323  00DD0A  0E38               	movlw	low _ep_data_out
  9324  00DD0C  24F3               	addwf	prodl,w,c
  9325  00DD0E  6ED9               	movwf	fsr2l,c
  9326  00DD10  0E01               	movlw	high _ep_data_out
  9327  00DD12  D01C               	goto	L6
  9328  00DD14                     l1565:
  9329                           
  9330                           ;usb_device.c: 2842: else
  9331                           ;usb_device.c: 2843: {
  9332                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9333                           
  9334                           ; BSR set to: 0
  9335  00DD14  0104               	movlb	4	; () banked
  9336  00DD16  5134               	movf	52,w,b	;volatile
  9337  00DD18  0B0F               	andlw	15
  9338  00DD1A  0100               	movlb	0	; () banked
  9339  00DD1C  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9340  00DD1E  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9341  00DD20  0D02               	mullw	2
  9342  00DD22  0E3E               	movlw	low _pBDTEntryIn
  9343  00DD24  24F3               	addwf	prodl,w,c
  9344  00DD26  6ED9               	movwf	fsr2l,c
  9345  00DD28  0E00               	movlw	high _pBDTEntryIn
  9346  00DD2A  20F4               	addwfc	prodh,w,c
  9347  00DD2C  6EDA               	movwf	fsr2h,c
  9348  00DD2E  CFDE F078          	movff	postinc2,USBStdFeatureReqHandler@p
  9349  00DD32  CFDD F079          	movff	postdec2,USBStdFeatureReqHandler@p+1
  9350                           
  9351                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  9352  00DD36  0104               	movlb	4	; () banked
  9353  00DD38  5134               	movf	52,w,b	;volatile
  9354  00DD3A  0B0F               	andlw	15
  9355  00DD3C  0100               	movlb	0	; () banked
  9356  00DD3E  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9357  00DD40  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9358  00DD42  0D01               	mullw	1
  9359  00DD44  0E3B               	movlw	low _ep_data_in
  9360  00DD46  24F3               	addwf	prodl,w,c
  9361  00DD48  6ED9               	movwf	fsr2l,c
  9362  00DD4A  0E01               	movlw	high _ep_data_in
  9363  00DD4C                     L6:
  9364  00DD4C  20F4               	addwfc	prodh,w,c
  9365  00DD4E  6EDA               	movwf	fsr2h,c
  9366  00DD50  50DF               	movf	indf2,w,c
  9367  00DD52  6F77               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;usb_device.c: 2846: }
  9371                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
  9372                           
  9373                           ; BSR set to: 0
  9374  00DD54  B177               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
  9375  00DD56  D002               	goto	l1567
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;usb_device.c: 2853: {
  9379                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  9380  00DD58  9578               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
  9381                           
  9382                           ;usb_device.c: 2855: }
  9383  00DD5A  D001               	goto	l1568
  9384  00DD5C                     l1567:
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;usb_device.c: 2856: else
  9388                           ;usb_device.c: 2857: {
  9389                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  9390                           
  9391                           ; BSR set to: 0
  9392  00DD5C  8578               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
  9393  00DD5E                     l1568:
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;usb_device.c: 2859: }
  9397                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
  9398                           
  9399                           ; BSR set to: 0
  9400  00DD5E  0104               	movlb	4	; () banked
  9401  00DD60  BF34               	btfsc	52,7,b	;volatile
  9402  00DD62  D00B               	goto	l1569
  9403                           
  9404                           ; BSR set to: 4
  9405                           ;usb_device.c: 2865: {
  9406                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9407  00DD64  5134               	movf	52,w,b	;volatile
  9408  00DD66  0B0F               	andlw	15
  9409  00DD68  0100               	movlb	0	; () banked
  9410  00DD6A  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9411  00DD6C  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9412  00DD6E  0D02               	mullw	2
  9413  00DD70  0E20               	movlw	low _pBDTEntryOut
  9414  00DD72  24F3               	addwf	prodl,w,c
  9415  00DD74  6ED9               	movwf	fsr2l,c
  9416  00DD76  0E01               	movlw	high _pBDTEntryOut
  9417  00DD78  D00B               	goto	L7
  9418  00DD7A                     l1569:
  9419                           
  9420                           ;usb_device.c: 2868: else
  9421                           ;usb_device.c: 2869: {
  9422                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9423                           
  9424                           ; BSR set to: 0
  9425  00DD7A  0104               	movlb	4	; () banked
  9426  00DD7C  5134               	movf	52,w,b	;volatile
  9427  00DD7E  0B0F               	andlw	15
  9428  00DD80  0100               	movlb	0	; () banked
  9429  00DD82  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9430  00DD84  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9431  00DD86  0D02               	mullw	2
  9432  00DD88  0E3E               	movlw	low _pBDTEntryIn
  9433  00DD8A  24F3               	addwf	prodl,w,c
  9434  00DD8C  6ED9               	movwf	fsr2l,c
  9435  00DD8E  0E00               	movlw	high _pBDTEntryIn
  9436  00DD90                     L7:
  9437  00DD90  20F4               	addwfc	prodh,w,c
  9438  00DD92  6EDA               	movwf	fsr2h,c
  9439  00DD94  C078  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  9440  00DD98  C079  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;usb_device.c: 2871: }
  9444                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
  9445                           
  9446                           ; BSR set to: 0
  9447  00DD9C  0E03               	movlw	3
  9448  00DD9E  0104               	movlb	4	; () banked
  9449  00DDA0  1931               	xorwf	49,w,b	;volatile
  9450  00DDA2  A4D8               	btfss	status,2,c
  9451  00DDA4  D031               	goto	l1571
  9452                           
  9453                           ; BSR set to: 4
  9454                           ;usb_device.c: 2875: {
  9455                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
  9456  00DDA6  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9457  00DDAA  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9458  00DDAE  0100               	movlb	0	; () banked
  9459  00DDB0  AEDF               	btfss	indf2,7,c
  9460  00DDB2  D01D               	goto	l1574
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;usb_device.c: 2877: {
  9464                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
  9465  00DDB4  0104               	movlb	4	; () banked
  9466  00DDB6  BF34               	btfsc	52,7,b	;volatile
  9467  00DDB8  D00B               	goto	l1573
  9468                           
  9469                           ; BSR set to: 4
  9470                           ;usb_device.c: 2881: {
  9471                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9472  00DDBA  5134               	movf	52,w,b	;volatile
  9473  00DDBC  0B0F               	andlw	15
  9474  00DDBE  0100               	movlb	0	; () banked
  9475  00DDC0  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9476  00DDC2  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9477  00DDC4  0D01               	mullw	1
  9478  00DDC6  0E38               	movlw	low _ep_data_out
  9479  00DDC8  24F3               	addwf	prodl,w,c
  9480  00DDCA  6ED9               	movwf	fsr2l,c
  9481  00DDCC  0E01               	movlw	high _ep_data_out
  9482  00DDCE  D00B               	goto	L8
  9483  00DDD0                     l1573:
  9484                           
  9485                           ;usb_device.c: 2884: else
  9486                           ;usb_device.c: 2885: {
  9487                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9488                           
  9489                           ; BSR set to: 1
  9490  00DDD0  0104               	movlb	4	; () banked
  9491  00DDD2  5134               	movf	52,w,b	;volatile
  9492  00DDD4  0B0F               	andlw	15
  9493  00DDD6  0100               	movlb	0	; () banked
  9494  00DDD8  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9495  00DDDA  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9496  00DDDC  0D01               	mullw	1
  9497  00DDDE  0E3B               	movlw	low _ep_data_in
  9498  00DDE0  24F3               	addwf	prodl,w,c
  9499  00DDE2  6ED9               	movwf	fsr2l,c
  9500  00DDE4  0E01               	movlw	high _ep_data_in
  9501  00DDE6                     L8:
  9502  00DDE6  20F4               	addwfc	prodh,w,c
  9503  00DDE8  6EDA               	movwf	fsr2h,c
  9504  00DDEA  0101               	movlb	1	; () banked
  9505  00DDEC  82DF               	bsf	indf2,1,c
  9506  00DDEE                     l1574:
  9507                           
  9508                           ;usb_device.c: 2887: }
  9509                           ;usb_device.c: 2888: }
  9510                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
  9511                           
  9512                           ; BSR set to: 1
  9513                           
  9514                           ; BSR set to: 1
  9515  00DDEE  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9516  00DDF2  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9517  00DDF6  0E00               	movlw	0
  9518  00DDF8  84DB               	bsf	plusw2,2,c
  9519                           
  9520                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
  9521  00DDFA  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9522  00DDFE  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9523  00DE02  0E00               	movlw	0
  9524  00DE04  8EDB               	bsf	plusw2,7,c
  9525                           
  9526                           ;usb_device.c: 2893: }
  9527  00DE06  0012               	return	
  9528  00DE08                     l1571:
  9529                           
  9530                           ;usb_device.c: 2894: else
  9531                           ;usb_device.c: 2895: {
  9532                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9533  00DE08  0E04               	movlw	4
  9534  00DE0A  0100               	movlb	0	; () banked
  9535  00DE0C  1B78               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
  9539  00DE0E  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9540  00DE12  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9541  00DE16  AEDF               	btfss	indf2,7,c
  9542  00DE18  D01B               	goto	l1576
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;usb_device.c: 2902: {
  9546                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
  9547  00DE1A  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9548  00DE1E  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9549  00DE22  0E7F               	movlw	127
  9550  00DE24  16DF               	andwf	indf2,f,c
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
  9554  00DE26  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9555  00DE2A  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9556  00DE2E  0E00               	movlw	0
  9557  00DE30  8CDB               	bsf	plusw2,6,c
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9561  00DE32  0E00               	movlw	0
  9562  00DE34  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9563  00DE36  0E05               	movlw	5
  9564  00DE38  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9565  00DE3A  C078  F06E         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9566  00DE3E  C079  F06F         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9567  00DE42  0E00               	movlw	0
  9568  00DE44  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9569  00DE46  0E02               	movlw	2
  9570  00DE48  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9571  00DE4A  EC61  F056         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9572                           
  9573                           ;usb_device.c: 2908: }
  9574  00DE4E  D006               	goto	l1577
  9575  00DE50                     l1576:
  9576                           
  9577                           ;usb_device.c: 2909: else
  9578                           ;usb_device.c: 2910: {
  9579                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
  9580  00DE50  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9581  00DE54  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9582  00DE58  0E00               	movlw	0
  9583  00DE5A  8CDB               	bsf	plusw2,6,c
  9584  00DE5C                     l1577:
  9585                           
  9586                           ;usb_device.c: 2913: }
  9587                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9588  00DE5C  0E04               	movlw	4
  9589  00DE5E  0100               	movlb	0	; () banked
  9590  00DE60  1B78               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  9594  00DE62  B377               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
  9595  00DE64  D006               	goto	u4810
  9596                           
  9597                           ; BSR set to: 0
  9598  00DE66  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9599  00DE6A  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9600  00DE6E  AEDF               	btfss	indf2,7,c
  9601  00DE70  D033               	goto	l1578
  9602  00DE72                     u4810:
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;usb_device.c: 2924: {
  9606                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
  9607  00DE72  0104               	movlb	4	; () banked
  9608  00DE74  BF34               	btfsc	52,7,b	;volatile
  9609  00DE76  D00B               	goto	l1581
  9610                           
  9611                           ; BSR set to: 4
  9612                           ;usb_device.c: 2926: {
  9613                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9614  00DE78  5134               	movf	52,w,b	;volatile
  9615  00DE7A  0B0F               	andlw	15
  9616  00DE7C  0100               	movlb	0	; () banked
  9617  00DE7E  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9618  00DE80  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9619  00DE82  0D01               	mullw	1
  9620  00DE84  0E38               	movlw	low _ep_data_out
  9621  00DE86  24F3               	addwf	prodl,w,c
  9622  00DE88  6ED9               	movwf	fsr2l,c
  9623  00DE8A  0E01               	movlw	high _ep_data_out
  9624  00DE8C  D00B               	goto	L9
  9625  00DE8E                     l1581:
  9626                           
  9627                           ;usb_device.c: 2929: else
  9628                           ;usb_device.c: 2930: {
  9629                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9630                           
  9631                           ; BSR set to: 1
  9632  00DE8E  0104               	movlb	4	; () banked
  9633  00DE90  5134               	movf	52,w,b	;volatile
  9634  00DE92  0B0F               	andlw	15
  9635  00DE94  0100               	movlb	0	; () banked
  9636  00DE96  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9637  00DE98  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9638  00DE9A  0D01               	mullw	1
  9639  00DE9C  0E3B               	movlw	low _ep_data_in
  9640  00DE9E  24F3               	addwf	prodl,w,c
  9641  00DEA0  6ED9               	movwf	fsr2l,c
  9642  00DEA2  0E01               	movlw	high _ep_data_in
  9643  00DEA4                     L9:
  9644  00DEA4  20F4               	addwfc	prodh,w,c
  9645  00DEA6  6EDA               	movwf	fsr2h,c
  9646  00DEA8  0101               	movlb	1	; () banked
  9647  00DEAA  92DF               	bcf	indf2,1,c
  9648                           
  9649                           ; BSR set to: 1
  9650                           ;usb_device.c: 2932: }
  9651                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9652                           
  9653                           ; BSR set to: 1
  9654  00DEAC  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9655  00DEB0  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9656  00DEB4  0E3B               	movlw	59
  9657  00DEB6  16DF               	andwf	indf2,f,c
  9658                           
  9659                           ; BSR set to: 1
  9660                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9661  00DEB8  0E00               	movlw	0
  9662  00DEBA  0100               	movlb	0	; () banked
  9663  00DEBC  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9664  00DEBE  0E05               	movlw	5
  9665  00DEC0  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9666  00DEC2  C078  F06E         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9667  00DEC6  C079  F06F         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9668  00DECA  0E00               	movlw	0
  9669  00DECC  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9670  00DECE  0E02               	movlw	2
  9671  00DED0  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9672  00DED2  EC61  F056         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9673                           
  9674                           ;usb_device.c: 2938: }
  9675  00DED6  D006               	goto	l1583
  9676  00DED8                     l1578:
  9677                           
  9678                           ;usb_device.c: 2939: else
  9679                           ;usb_device.c: 2940: {
  9680                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9681  00DED8  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9682  00DEDC  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9683  00DEE0  0E3B               	movlw	59
  9684  00DEE2  16DF               	andwf	indf2,f,c
  9685  00DEE4                     l1583:
  9686                           
  9687                           ;usb_device.c: 2943: }
  9688                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  9689  00DEE4  0104               	movlb	4	; () banked
  9690  00DEE6  5134               	movf	52,w,b	;volatile
  9691  00DEE8  0B0F               	andlw	15
  9692  00DEEA  0100               	movlb	0	; () banked
  9693  00DEEC  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9694  00DEEE  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9695  00DEF0  0D01               	mullw	1
  9696  00DEF2  0E26               	movlw	38
  9697  00DEF4  24F3               	addwf	prodl,w,c
  9698  00DEF6  6F75               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
  9699  00DEF8  0E0F               	movlw	15
  9700  00DEFA  20F4               	addwfc	prodh,w,c
  9701  00DEFC  6F76               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
  9705  00DEFE  C075  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  9706  00DF02  C076  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  9707  00DF06  0EFE               	movlw	254
  9708  00DF08  16DF               	andwf	indf2,f,c
  9709                           
  9710                           ; BSR set to: 0
  9711  00DF0A  0012               	return	
  9712  00DF0C                     __end_of_USBStdFeatureReqHandler:
  9713                           	opt stack 0
  9714                           tosu	equ	0xFFF
  9715                           tosh	equ	0xFFE
  9716                           tosl	equ	0xFFD
  9717                           pclath	equ	0xFFA
  9718                           tblptru	equ	0xFF8
  9719                           tblptrh	equ	0xFF7
  9720                           tblptrl	equ	0xFF6
  9721                           tablat	equ	0xFF5
  9722                           prodh	equ	0xFF4
  9723                           prodl	equ	0xFF3
  9724                           intcon	equ	0xFF2
  9725                           intcon2	equ	0xFF1
  9726                           intcon3	equ	0xFF0
  9727                           indf0	equ	0xFEF
  9728                           postinc0	equ	0xFEE
  9729                           plusw0	equ	0xFEB
  9730                           fsr0h	equ	0xFEA
  9731                           fsr0l	equ	0xFE9
  9732                           wreg	equ	0xFE8
  9733                           postinc1	equ	0xFE6
  9734                           postdec1	equ	0xFE5
  9735                           fsr1h	equ	0xFE2
  9736                           fsr1l	equ	0xFE1
  9737                           indf2	equ	0xFDF
  9738                           postinc2	equ	0xFDE
  9739                           postdec2	equ	0xFDD
  9740                           plusw2	equ	0xFDB
  9741                           fsr2h	equ	0xFDA
  9742                           fsr2l	equ	0xFD9
  9743                           status	equ	0xFD8
  9744                           
  9745 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  9746 ;; Defined at:
  9747 ;;		line 104 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;  event           2   12[BANK0 ] enum E8257
  9750 ;;  pdata           2   14[BANK0 ] PTR void 
  9751 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
  9752 ;;  size            2   16[BANK0 ] unsigned int 
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;		None
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  1    wreg      unsigned char 
  9757 ;; Registers used:
  9758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9764 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9766 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9767 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9768 ;;Total ram usage:        8 bytes
  9769 ;; Hardware stack levels used:    1
  9770 ;; Hardware stack levels required when called:   14
  9771 ;; This function calls:
  9772 ;;		_CDCInitEP
  9773 ;;		_USBCheckCDCRequest
  9774 ;; This function is called by:
  9775 ;;		_USBDeviceTasks
  9776 ;;		_USBStdSetCfgHandler
  9777 ;;		_USBSuspend
  9778 ;;		_USBWakeFromSuspend
  9779 ;;		_USBCtrlTrfSetupHandler
  9780 ;;		_USBCheckStdRequest
  9781 ;;		_USBStdFeatureReqHandler
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text41
  9786  00ACC2                     __ptext41:
  9787                           	opt stack 0
  9788  00ACC2                     _USER_USB_CALLBACK_EVENT_HANDLER:
  9789                           	opt stack 12
  9790                           
  9791                           ;usb_device_mgr.c: 106: switch( (int) event )
  9792                           
  9793                           ;incstack = 0
  9794  00ACC2  D006               	goto	l1737
  9795  00ACC4                     
  9796                           ;usb_device_mgr.c: 134: CDCInitEP();
  9797  00ACC4  EC92  F057         	call	_CDCInitEP	;wreg free
  9798                           
  9799                           ;usb_device_mgr.c: 142: break;
  9800                           
  9801                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
  9802                           
  9803                           ;usb_device_mgr.c: 139: break;
  9804  00ACC8  0012               	return	
  9805  00ACCA                     
  9806                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
  9807  00ACCA  ECF6  F05D         	call	_USBCheckCDCRequest	;wreg free
  9808                           
  9809                           ;usb_device_mgr.c: 163: }
  9810                           
  9811                           ;usb_device_mgr.c: 162: break;
  9812                           
  9813                           ;usb_device_mgr.c: 161: default:
  9814                           
  9815                           ;usb_device_mgr.c: 159: break;
  9816                           
  9817                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
  9818                           
  9819                           ;usb_device_mgr.c: 156: break;
  9820                           
  9821                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
  9822                           
  9823                           ;usb_device_mgr.c: 153: break;
  9824  00ACCE  0012               	return	
  9825  00ACD0                     l1737:
  9826  00ACD0  C06C  F072         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  9827  00ACD4  C06D  F073         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  9828                           
  9829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9830                           ; Switch size 1, requested type "space"
  9831                           ; Number of cases is 2, Range of values is 0 to 127
  9832                           ; switch strategies available:
  9833                           ; Name         Instructions Cycles
  9834                           ; simple_byte            7     4 (average)
  9835                           ;	Chosen strategy is simple_byte
  9836  00ACD8  0100               	movlb	0	; () banked
  9837  00ACDA  5173               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
  9838  00ACDC  0A00               	xorlw	0	; case 0
  9839  00ACDE  B4D8               	btfsc	status,2,c
  9840  00ACE0  D004               	goto	l9706
  9841  00ACE2  0A7F               	xorlw	127	; case 127
  9842  00ACE4  A4D8               	btfss	status,2,c
  9843  00ACE6  0012               	return	
  9844  00ACE8  D018               	goto	l9708
  9845  00ACEA                     l9706:
  9846                           
  9847                           ; BSR set to: 0
  9848                           ; Switch size 1, requested type "space"
  9849                           ; Number of cases is 8, Range of values is 1 to 117
  9850                           ; switch strategies available:
  9851                           ; Name         Instructions Cycles
  9852                           ; simple_byte           25    13 (average)
  9853                           ;	Chosen strategy is simple_byte
  9854  00ACEA  5172               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9855  00ACEC  0A01               	xorlw	1	; case 1
  9856  00ACEE  B4D8               	btfsc	status,2,c
  9857  00ACF0  D7E9               	goto	l1743
  9858  00ACF2  0A03               	xorlw	3	; case 2
  9859  00ACF4  B4D8               	btfsc	status,2,c
  9860  00ACF6  0012               	return	
  9861  00ACF8  0A01               	xorlw	1	; case 3
  9862  00ACFA  B4D8               	btfsc	status,2,c
  9863  00ACFC  D7E6               	goto	l1745
  9864  00ACFE  0A06               	xorlw	6	; case 5
  9865  00AD00  B4D8               	btfsc	status,2,c
  9866  00AD02  0012               	return	
  9867  00AD04  0A77               	xorlw	119	; case 114
  9868  00AD06  B4D8               	btfsc	status,2,c
  9869  00AD08  0012               	return	
  9870  00AD0A  0A01               	xorlw	1	; case 115
  9871  00AD0C  B4D8               	btfsc	status,2,c
  9872  00AD0E  0012               	return	
  9873  00AD10  0A07               	xorlw	7	; case 116
  9874  00AD12  B4D8               	btfsc	status,2,c
  9875  00AD14  0012               	return	
  9876  00AD16  0A01               	xorlw	1	; case 117
  9877  00AD18  0012               	return	
  9878  00AD1A                     l9708:
  9879                           
  9880                           ; BSR set to: 0
  9881                           ; Switch size 1, requested type "space"
  9882                           ; Number of cases is 1, Range of values is 255 to 255
  9883                           ; switch strategies available:
  9884                           ; Name         Instructions Cycles
  9885                           ; simple_byte            4     3 (average)
  9886                           ;	Chosen strategy is simple_byte
  9887  00AD1A  5172               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9888  00AD1C  0AFF               	xorlw	255	; case 255
  9889  00AD1E  0012               	return	
  9890  00AD20                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  9891                           	opt stack 0
  9892                           tosu	equ	0xFFF
  9893                           tosh	equ	0xFFE
  9894                           tosl	equ	0xFFD
  9895                           pclath	equ	0xFFA
  9896                           tblptru	equ	0xFF8
  9897                           tblptrh	equ	0xFF7
  9898                           tblptrl	equ	0xFF6
  9899                           tablat	equ	0xFF5
  9900                           prodh	equ	0xFF4
  9901                           prodl	equ	0xFF3
  9902                           intcon	equ	0xFF2
  9903                           intcon2	equ	0xFF1
  9904                           intcon3	equ	0xFF0
  9905                           indf0	equ	0xFEF
  9906                           postinc0	equ	0xFEE
  9907                           plusw0	equ	0xFEB
  9908                           fsr0h	equ	0xFEA
  9909                           fsr0l	equ	0xFE9
  9910                           wreg	equ	0xFE8
  9911                           postinc1	equ	0xFE6
  9912                           postdec1	equ	0xFE5
  9913                           fsr1h	equ	0xFE2
  9914                           fsr1l	equ	0xFE1
  9915                           indf2	equ	0xFDF
  9916                           postinc2	equ	0xFDE
  9917                           postdec2	equ	0xFDD
  9918                           plusw2	equ	0xFDB
  9919                           fsr2h	equ	0xFDA
  9920                           fsr2l	equ	0xFD9
  9921                           status	equ	0xFD8
  9922                           
  9923 ;; *************** function _USBCheckCDCRequest *****************
  9924 ;; Defined at:
  9925 ;;		line 150 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;		None
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;		None
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  1    wreg      void 
  9932 ;; Registers used:
  9933 ;;		wreg, status,2, status,0
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/0
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9943 ;;Total ram usage:        0 bytes
  9944 ;; Hardware stack levels used:    1
  9945 ;; Hardware stack levels required when called:   11
  9946 ;; This function calls:
  9947 ;;		Nothing
  9948 ;; This function is called by:
  9949 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           	psect	text42
  9954  00BBEC                     __ptext42:
  9955                           	opt stack 0
  9956  00BBEC                     _USBCheckCDCRequest:
  9957                           	opt stack 14
  9958                           
  9959                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
  9960                           
  9961                           ;incstack = 0
  9962  00BBEC  0104               	movlb	4	; () banked
  9963  00BBEE  5130               	movf	48,w,b	;volatile
  9964  00BBF0  0B1F               	andlw	31
  9965  00BBF2  06E8               	decf	wreg,f,c
  9966  00BBF4  A4D8               	btfss	status,2,c
  9967  00BBF6  0012               	return	
  9968                           
  9969                           ; BSR set to: 4
  9970                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
  9971                           
  9972                           ; BSR set to: 4
  9973                           
  9974                           ; BSR set to: 4
  9975  00BBF8  3930               	swapf	48,w,b	;volatile
  9976  00BBFA  32E8               	rrcf	wreg,f,c
  9977  00BBFC  0B03               	andlw	3
  9978  00BBFE  06E8               	decf	wreg,f,c
  9979  00BC00  A4D8               	btfss	status,2,c
  9980  00BC02  0012               	return	
  9981                           
  9982                           ; BSR set to: 4
  9983                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
  9984                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
  9985                           
  9986                           ; BSR set to: 4
  9987                           
  9988                           ; BSR set to: 4
  9989  00BC04  5134               	movf	52,w,b	;volatile
  9990  00BC06  B4D8               	btfsc	status,2,c
  9991  00BC08  D037               	goto	l1639
  9992                           
  9993                           ; BSR set to: 4
  9994  00BC0A  0534               	decf	52,w,b	;volatile
  9995  00BC0C  A4D8               	btfss	status,2,c
  9996  00BC0E  0012               	return	
  9997  00BC10  D033               	goto	l1639
  9998  00BC12                     
  9999                           ; BSR set to: 4
 10000                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 10001                           
 10002                           ; BSR set to: 4
 10003  00BC12  0E97               	movlw	low _dummy_encapsulated_cmd_response
 10004  00BC14  0100               	movlb	0	; () banked
 10005  00BC16  6FF0               	movwf	_inPipes& (0+255),b
 10006  00BC18  0E01               	movlw	high _dummy_encapsulated_cmd_response
 10007  00BC1A  6FF1               	movwf	(_inPipes+1)& (0+255),b
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 10011  00BC1C  0E00               	movlw	0
 10012  00BC1E  6FF5               	movwf	(_inPipes+5)& (0+255),b
 10013  00BC20  0E08               	movlw	8
 10014  00BC22  6FF4               	movwf	(_inPipes+4)& (0+255),b
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10018  00BC24  81F3               	bsf	(_inPipes+3)& (0+255),0,b
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 10022  00BC26  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
 10023                           
 10024                           ;usb_device_cdc.c: 178: break;
 10025  00BC28  0012               	return	
 10026  00BC2A                     
 10027                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 10028                           
 10029                           ; BSR set to: 0
 10030  00BC2A  0E97               	movlw	low _dummy_encapsulated_cmd_response
 10031  00BC2C  0100               	movlb	0	; () banked
 10032  00BC2E  6FF0               	movwf	_inPipes& (0+255),b
 10033  00BC30  0E01               	movlw	high _dummy_encapsulated_cmd_response
 10034  00BC32  6FF1               	movwf	(_inPipes+1)& (0+255),b
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 10038  00BC34  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
 10039                           
 10040                           ;usb_device_cdc.c: 183: break;
 10041  00BC36  0012               	return	
 10042  00BC38                     l1643:
 10043                           
 10044                           ; BSR set to: 4
 10045                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 10046  00BC38  C436 F116          	movff	1078,_outPipes+4	;volatile
 10047  00BC3C  C437 F117          	movff	1079,_outPipes+5	;volatile
 10048                           
 10049                           ; BSR set to: 4
 10050                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 10051  00BC40  0E9F               	movlw	low _line_coding
 10052  00BC42  0101               	movlb	1	; () banked
 10053  00BC44  6F12               	movwf	_outPipes& (0+255),b
 10054  00BC46  0E01               	movlw	high _line_coding
 10055  00BC48  6F13               	movwf	(_outPipes+1)& (0+255),b
 10056                           
 10057                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 10058  00BC4A  0E00               	movlw	0
 10059  00BC4C  6F18               	movwf	(_outPipes+6)& (0+255),b
 10060  00BC4E  0E00               	movlw	0
 10061  00BC50  6F19               	movwf	(_outPipes+7)& (0+255),b
 10062                           
 10063                           ; BSR set to: 1
 10064                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 10065  00BC52  8F15               	bsf	(_outPipes+3)& (0+255),7,b
 10066                           
 10067                           ;usb_device_cdc.c: 192: break;
 10068  00BC54  0012               	return	
 10069  00BC56                     
 10070                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 10071                           
 10072                           ; BSR set to: 1
 10073  00BC56  0E9F               	movlw	low _line_coding
 10074  00BC58  0100               	movlb	0	; () banked
 10075  00BC5A  6FF0               	movwf	_inPipes& (0+255),b
 10076  00BC5C  0E01               	movlw	high _line_coding
 10077  00BC5E  6FF1               	movwf	(_inPipes+1)& (0+255),b
 10078                           
 10079                           ; BSR set to: 0
 10080  00BC60  0E00               	movlw	0
 10081  00BC62  6FF5               	movwf	(_inPipes+5)& (0+255),b
 10082  00BC64  0E07               	movlw	7
 10083  00BC66  6FF4               	movwf	(_inPipes+4)& (0+255),b
 10084                           
 10085                           ; BSR set to: 0
 10086  00BC68  0EC1               	movlw	193
 10087  00BC6A  6FF3               	movwf	(_inPipes+3)& (0+255),b
 10088                           
 10089                           ;usb_device_cdc.c: 199: break;
 10090  00BC6C  0012               	return	
 10091  00BC6E                     l1645:
 10092                           
 10093                           ; BSR set to: 4
 10094                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 10095  00BC6E  C432 F15B          	movff	1074,_control_signal_bitmap	;volatile
 10096                           
 10097                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 10098  00BC72  0100               	movlb	0	; () banked
 10099  00BC74  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;usb_device_cdc.c: 261: }
 10103                           
 10104                           ; BSR set to: 0
 10105                           ;usb_device_cdc.c: 260: break;
 10106                           
 10107                           ;usb_device_cdc.c: 259: default:
 10108                           
 10109                           ;usb_device_cdc.c: 235: break;
 10110  00BC76  0012               	return	
 10111  00BC78                     l1639:
 10112                           
 10113                           ; BSR set to: 0
 10114  00BC78  0104               	movlb	4	; () banked
 10115  00BC7A  5131               	movf	49,w,b	;volatile
 10116                           
 10117                           ; Switch size 1, requested type "space"
 10118                           ; Number of cases is 5, Range of values is 0 to 34
 10119                           ; switch strategies available:
 10120                           ; Name         Instructions Cycles
 10121                           ; simple_byte           16     9 (average)
 10122                           ;	Chosen strategy is simple_byte
 10123  00BC7C  0A00               	xorlw	0	; case 0
 10124  00BC7E  B4D8               	btfsc	status,2,c
 10125  00BC80  D7C8               	goto	l1640
 10126  00BC82  0A01               	xorlw	1	; case 1
 10127  00BC84  B4D8               	btfsc	status,2,c
 10128  00BC86  D7D1               	goto	l1642
 10129  00BC88  0A21               	xorlw	33	; case 32
 10130  00BC8A  B4D8               	btfsc	status,2,c
 10131  00BC8C  D7D5               	goto	l1643
 10132  00BC8E  0A01               	xorlw	1	; case 33
 10133  00BC90  B4D8               	btfsc	status,2,c
 10134  00BC92  D7E1               	goto	l1644
 10135  00BC94  0A03               	xorlw	3	; case 34
 10136  00BC96  A4D8               	btfss	status,2,c
 10137  00BC98  0012               	return	
 10138  00BC9A  D7E9               	goto	l1645
 10139  00BC9C                     __end_of_USBCheckCDCRequest:
 10140                           	opt stack 0
 10141                           tosu	equ	0xFFF
 10142                           tosh	equ	0xFFE
 10143                           tosl	equ	0xFFD
 10144                           pclath	equ	0xFFA
 10145                           tblptru	equ	0xFF8
 10146                           tblptrh	equ	0xFF7
 10147                           tblptrl	equ	0xFF6
 10148                           tablat	equ	0xFF5
 10149                           prodh	equ	0xFF4
 10150                           prodl	equ	0xFF3
 10151                           intcon	equ	0xFF2
 10152                           intcon2	equ	0xFF1
 10153                           intcon3	equ	0xFF0
 10154                           indf0	equ	0xFEF
 10155                           postinc0	equ	0xFEE
 10156                           plusw0	equ	0xFEB
 10157                           fsr0h	equ	0xFEA
 10158                           fsr0l	equ	0xFE9
 10159                           wreg	equ	0xFE8
 10160                           postinc1	equ	0xFE6
 10161                           postdec1	equ	0xFE5
 10162                           fsr1h	equ	0xFE2
 10163                           fsr1l	equ	0xFE1
 10164                           indf2	equ	0xFDF
 10165                           postinc2	equ	0xFDE
 10166                           postdec2	equ	0xFDD
 10167                           plusw2	equ	0xFDB
 10168                           fsr2h	equ	0xFDA
 10169                           fsr2l	equ	0xFD9
 10170                           status	equ	0xFD8
 10171                           
 10172 ;; *************** function _CDCInitEP *****************
 10173 ;; Defined at:
 10174 ;;		line 297 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;		None
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;		None
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  1    wreg      void 
 10181 ;; Registers used:
 10182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10192 ;;Total ram usage:        0 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:   13
 10195 ;; This function calls:
 10196 ;;		_USBEnableEndpoint
 10197 ;;		_USBTransferOnePacket
 10198 ;; This function is called by:
 10199 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text43
 10204  00AF24                     __ptext43:
 10205                           	opt stack 0
 10206  00AF24                     _CDCInitEP:
 10207                           	opt stack 12
 10208                           
 10209                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 10210                           
 10211                           ;incstack = 0
 10212  00AF24  0E80               	movlw	128
 10213  00AF26  0101               	movlb	1	; () banked
 10214  00AF28  6F9F               	movwf	_line_coding& (0+255),b
 10215  00AF2A  0E25               	movlw	37
 10216  00AF2C  6FA0               	movwf	(_line_coding+1)& (0+255),b
 10217  00AF2E  0E00               	movlw	0
 10218  00AF30  6FA1               	movwf	(_line_coding+2)& (0+255),b
 10219  00AF32  0E00               	movlw	0
 10220  00AF34  6FA2               	movwf	(_line_coding+3)& (0+255),b
 10221                           
 10222                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 10223  00AF36  0E00               	movlw	0
 10224  00AF38  6FA3               	movwf	(_line_coding+4)& (0+255),b
 10225                           
 10226                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 10227  00AF3A  0E00               	movlw	0
 10228  00AF3C  6FA4               	movwf	(_line_coding+5)& (0+255),b
 10229                           
 10230                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 10231  00AF3E  0E08               	movlw	8
 10232  00AF40  6FA5               	movwf	(_line_coding+6)& (0+255),b
 10233                           
 10234                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 10235  00AF42  0E00               	movlw	0
 10236  00AF44  6E47               	movwf	_cdc_rx_len,c
 10237                           
 10238                           ; BSR set to: 1
 10239                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 10240  00AF46  0E1A               	movlw	26
 10241  00AF48  0100               	movlb	0	; () banked
 10242  00AF4A  6F68               	movwf	USBEnableEndpoint@options& (0+255),b
 10243  00AF4C  0E01               	movlw	1
 10244  00AF4E  EC99  F053         	call	_USBEnableEndpoint
 10245                           
 10246                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 10247  00AF52  0E1E               	movlw	30
 10248  00AF54  0100               	movlb	0	; () banked
 10249  00AF56  6F68               	movwf	USBEnableEndpoint@options& (0+255),b
 10250  00AF58  0E02               	movlw	2
 10251  00AF5A  EC99  F053         	call	_USBEnableEndpoint
 10252                           
 10253                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 10254  00AF5E  0E00               	movlw	0
 10255  00AF60  0100               	movlb	0	; () banked
 10256  00AF62  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10257  00AF64  0E00               	movlw	low _cdc_data_rx
 10258  00AF66  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10259  00AF68  0E02               	movlw	high _cdc_data_rx
 10260  00AF6A  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10261  00AF6C  0E40               	movlw	64
 10262  00AF6E  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10263  00AF70  0E02               	movlw	2
 10264  00AF72  ECA7  F05E         	call	_USBTransferOnePacket
 10265  00AF76  C060  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 10266  00AF7A  C061  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 10267                           
 10268                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 10269  00AF7E  0E00               	movlw	0
 10270  00AF80  0101               	movlb	1	; () banked
 10271  00AF82  6F40               	movwf	_CDCDataInHandle& (0+255),b
 10272  00AF84  0E00               	movlw	0
 10273  00AF86  6F41               	movwf	(_CDCDataInHandle+1)& (0+255),b
 10274                           
 10275                           ; BSR set to: 1
 10276                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 10277  00AF88  0E00               	movlw	0
 10278  00AF8A  0100               	movlb	0	; () banked
 10279  00AF8C  6FFB               	movwf	_cdc_trf_state& (0+255),b
 10280                           
 10281                           ; BSR set to: 0
 10282  00AF8E  0012               	return		;funcret
 10283  00AF90                     __end_of_CDCInitEP:
 10284                           	opt stack 0
 10285                           tosu	equ	0xFFF
 10286                           tosh	equ	0xFFE
 10287                           tosl	equ	0xFFD
 10288                           pclath	equ	0xFFA
 10289                           tblptru	equ	0xFF8
 10290                           tblptrh	equ	0xFF7
 10291                           tblptrl	equ	0xFF6
 10292                           tablat	equ	0xFF5
 10293                           prodh	equ	0xFF4
 10294                           prodl	equ	0xFF3
 10295                           intcon	equ	0xFF2
 10296                           intcon2	equ	0xFF1
 10297                           intcon3	equ	0xFF0
 10298                           indf0	equ	0xFEF
 10299                           postinc0	equ	0xFEE
 10300                           plusw0	equ	0xFEB
 10301                           fsr0h	equ	0xFEA
 10302                           fsr0l	equ	0xFE9
 10303                           wreg	equ	0xFE8
 10304                           postinc1	equ	0xFE6
 10305                           postdec1	equ	0xFE5
 10306                           fsr1h	equ	0xFE2
 10307                           fsr1l	equ	0xFE1
 10308                           indf2	equ	0xFDF
 10309                           postinc2	equ	0xFDE
 10310                           postdec2	equ	0xFDD
 10311                           plusw2	equ	0xFDB
 10312                           fsr2h	equ	0xFDA
 10313                           fsr2l	equ	0xFD9
 10314                           status	equ	0xFD8
 10315                           
 10316 ;; *************** function _USBEnableEndpoint *****************
 10317 ;; Defined at:
 10318 ;;		line 896 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;  ep              1    wreg     unsigned char 
 10321 ;;  options         1    8[BANK0 ] unsigned char 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;  ep              1   11[BANK0 ] unsigned char 
 10324 ;;  p               2    9[BANK0 ] PTR unsigned char 
 10325 ;;		 -> UEP0(1), 
 10326 ;; Return value:  Size  Location     Type
 10327 ;;                  1    wreg      void 
 10328 ;; Registers used:
 10329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10330 ;; Tracked objects:
 10331 ;;		On entry : 0/0
 10332 ;;		On exit  : 0/0
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10335 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10336 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10338 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10339 ;;Total ram usage:        4 bytes
 10340 ;; Hardware stack levels used:    1
 10341 ;; Hardware stack levels required when called:   12
 10342 ;; This function calls:
 10343 ;;		_USBConfigureEndpoint
 10344 ;; This function is called by:
 10345 ;;		_CDCInitEP
 10346 ;; This function uses a non-reentrant model
 10347 ;;
 10348                           
 10349                           	psect	text44
 10350  00A732                     __ptext44:
 10351                           	opt stack 0
 10352  00A732                     _USBEnableEndpoint:
 10353                           	opt stack 12
 10354                           
 10355                           ; BSR set to: 0
 10356                           ;incstack = 0
 10357                           ;USBEnableEndpoint@ep stored from wreg
 10358  00A732  0100               	movlb	0	; () banked
 10359  00A734  6F6B               	movwf	USBEnableEndpoint@ep& (0+255),b
 10360                           
 10361                           ;usb_device.c: 898: unsigned char* p;
 10362                           ;usb_device.c: 902: if(options & 0x04)
 10363  00A736  0100               	movlb	0	; () banked
 10364  00A738  A568               	btfss	USBEnableEndpoint@options& (0+255),2,b
 10365  00A73A  D005               	goto	l1380
 10366                           
 10367                           ; BSR set to: 0
 10368                           ;usb_device.c: 903: {
 10369                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 10370  00A73C  0E00               	movlw	0
 10371  00A73E  6F60               	movwf	USBConfigureEndpoint@direction& (0+255),b
 10372  00A740  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10373  00A742  ECB9  F05B         	call	_USBConfigureEndpoint
 10374  00A746                     l1380:
 10375                           
 10376                           ;usb_device.c: 905: }
 10377                           ;usb_device.c: 906: if(options & 0x02)
 10378  00A746  0100               	movlb	0	; () banked
 10379  00A748  A368               	btfss	USBEnableEndpoint@options& (0+255),1,b
 10380  00A74A  D005               	goto	l1381
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;usb_device.c: 907: {
 10384                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 10385  00A74C  0E01               	movlw	1
 10386  00A74E  6F60               	movwf	USBConfigureEndpoint@direction& (0+255),b
 10387  00A750  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10388  00A752  ECB9  F05B         	call	_USBConfigureEndpoint
 10389  00A756                     l1381:
 10390                           
 10391                           ;usb_device.c: 909: }
 10392                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 10393  00A756  0100               	movlb	0	; () banked
 10394  00A758  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10395  00A75A  0D01               	mullw	1
 10396  00A75C  0E26               	movlw	38
 10397  00A75E  24F3               	addwf	prodl,w,c
 10398  00A760  6F69               	movwf	USBEnableEndpoint@p& (0+255),b
 10399  00A762  0E0F               	movlw	15
 10400  00A764  20F4               	addwfc	prodh,w,c
 10401  00A766  6F6A               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 10402                           
 10403                           ; BSR set to: 0
 10404                           ;usb_device.c: 919: *p = options;
 10405  00A768  C069  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 10406  00A76C  C06A  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 10407  00A770  C068  FFDF         	movff	USBEnableEndpoint@options,indf2
 10408                           
 10409                           ; BSR set to: 0
 10410  00A774  0012               	return		;funcret
 10411  00A776                     __end_of_USBEnableEndpoint:
 10412                           	opt stack 0
 10413                           tosu	equ	0xFFF
 10414                           tosh	equ	0xFFE
 10415                           tosl	equ	0xFFD
 10416                           pclath	equ	0xFFA
 10417                           tblptru	equ	0xFF8
 10418                           tblptrh	equ	0xFF7
 10419                           tblptrl	equ	0xFF6
 10420                           tablat	equ	0xFF5
 10421                           prodh	equ	0xFF4
 10422                           prodl	equ	0xFF3
 10423                           intcon	equ	0xFF2
 10424                           intcon2	equ	0xFF1
 10425                           intcon3	equ	0xFF0
 10426                           indf0	equ	0xFEF
 10427                           postinc0	equ	0xFEE
 10428                           plusw0	equ	0xFEB
 10429                           fsr0h	equ	0xFEA
 10430                           fsr0l	equ	0xFE9
 10431                           wreg	equ	0xFE8
 10432                           postinc1	equ	0xFE6
 10433                           postdec1	equ	0xFE5
 10434                           fsr1h	equ	0xFE2
 10435                           fsr1l	equ	0xFE1
 10436                           indf2	equ	0xFDF
 10437                           postinc2	equ	0xFDE
 10438                           postdec2	equ	0xFDD
 10439                           plusw2	equ	0xFDB
 10440                           fsr2h	equ	0xFDA
 10441                           fsr2l	equ	0xFD9
 10442                           status	equ	0xFD8
 10443                           
 10444 ;; *************** function _USBConfigureEndpoint *****************
 10445 ;; Defined at:
 10446 ;;		line 1561 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10447 ;; Parameters:    Size  Location     Type
 10448 ;;  EPNum           1    wreg     unsigned char 
 10449 ;;  direction       1    0[BANK0 ] unsigned char 
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;  EPNum           1    5[BANK0 ] unsigned char 
 10452 ;;  handle          2    6[BANK0 ] PTR volatile struct __BD
 10453 ;;		 -> BDT(48), 
 10454 ;; Return value:  Size  Location     Type
 10455 ;;                  1    wreg      void 
 10456 ;; Registers used:
 10457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10458 ;; Tracked objects:
 10459 ;;		On entry : 0/0
 10460 ;;		On exit  : 0/0
 10461 ;;		Unchanged: 0/0
 10462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10463 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10464 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10465 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10466 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10467 ;;Total ram usage:        8 bytes
 10468 ;; Hardware stack levels used:    1
 10469 ;; Hardware stack levels required when called:   11
 10470 ;; This function calls:
 10471 ;;		Nothing
 10472 ;; This function is called by:
 10473 ;;		_USBEnableEndpoint
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text45
 10478  00B772                     __ptext45:
 10479                           	opt stack 0
 10480  00B772                     _USBConfigureEndpoint:
 10481                           	opt stack 12
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;incstack = 0
 10485                           ;USBConfigureEndpoint@EPNum stored from wreg
 10486  00B772  0100               	movlb	0	; () banked
 10487  00B774  6F65               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 10488                           
 10489                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 10490                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 10491  00B776  0E00               	movlw	0
 10492  00B778  0100               	movlb	0	; () banked
 10493  00B77A  6F66               	movwf	USBConfigureEndpoint@handle& (0+255),b
 10494  00B77C  0E04               	movlw	4
 10495  00B77E  6F67               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 10496                           
 10497                           ; BSR set to: 0
 10498                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 10499  00B780  5160               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10500  00B782  6F61               	movwf	??_USBConfigureEndpoint& (0+255),b
 10501  00B784  6B62               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 10502  00B786  90D8               	bcf	status,0,c
 10503  00B788  3761               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 10504  00B78A  3762               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 10505  00B78C  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10506  00B78E  6F63               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 10507  00B790  6B64               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 10508  00B792  90D8               	bcf	status,0,c
 10509  00B794  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10510  00B796  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10511  00B798  90D8               	bcf	status,0,c
 10512  00B79A  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10513  00B79C  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10514  00B79E  5161               	movf	??_USBConfigureEndpoint& (0+255),w,b
 10515  00B7A0  2763               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10516  00B7A2  5162               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 10517  00B7A4  2364               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10518  00B7A6  90D8               	bcf	status,0,c
 10519  00B7A8  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10520  00B7AA  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10521  00B7AC  90D8               	bcf	status,0,c
 10522  00B7AE  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10523  00B7B0  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10524  00B7B2  5163               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 10525  00B7B4  2766               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 10526  00B7B6  5164               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 10527  00B7B8  2367               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 10528                           
 10529                           ; BSR set to: 0
 10530                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 10531  00B7BA  C066  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10532  00B7BE  C067  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10533  00B7C2  9EDF               	bcf	indf2,7,c
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;usb_device.c: 1575: if(direction == 0)
 10537  00B7C4  5160               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10538  00B7C6  A4D8               	btfss	status,2,c
 10539  00B7C8  D007               	goto	l1416
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;usb_device.c: 1576: {
 10543                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 10544  00B7CA  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10545  00B7CC  0D02               	mullw	2
 10546  00B7CE  0E20               	movlw	low _pBDTEntryOut
 10547  00B7D0  24F3               	addwf	prodl,w,c
 10548  00B7D2  6ED9               	movwf	fsr2l,c
 10549  00B7D4  0E01               	movlw	high _pBDTEntryOut
 10550  00B7D6  D006               	goto	L10
 10551  00B7D8                     l1416:
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;usb_device.c: 1579: else
 10555                           ;usb_device.c: 1580: {
 10556                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 10557                           
 10558                           ; BSR set to: 0
 10559  00B7D8  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10560  00B7DA  0D02               	mullw	2
 10561  00B7DC  0E3E               	movlw	low _pBDTEntryIn
 10562  00B7DE  24F3               	addwf	prodl,w,c
 10563  00B7E0  6ED9               	movwf	fsr2l,c
 10564  00B7E2  0E00               	movlw	high _pBDTEntryIn
 10565  00B7E4                     L10:
 10566  00B7E4  20F4               	addwfc	prodh,w,c
 10567  00B7E6  6EDA               	movwf	fsr2h,c
 10568  00B7E8  C066  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 10569  00B7EC  C067  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;usb_device.c: 1582: }
 10573                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 10574                           
 10575                           ; BSR set to: 0
 10576  00B7F0  C066  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10577  00B7F4  C067  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10578  00B7F8  9CDF               	bcf	indf2,6,c
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 10582  00B7FA  EE20 F004          	lfsr	2,4
 10583  00B7FE  5166               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 10584  00B800  26D9               	addwf	fsr2l,f,c
 10585  00B802  5167               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 10586  00B804  22DA               	addwfc	fsr2h,f,c
 10587  00B806  8CDF               	bsf	indf2,6,c
 10588                           
 10589                           ; BSR set to: 0
 10590  00B808  0012               	return		;funcret
 10591  00B80A                     __end_of_USBConfigureEndpoint:
 10592                           	opt stack 0
 10593                           tosu	equ	0xFFF
 10594                           tosh	equ	0xFFE
 10595                           tosl	equ	0xFFD
 10596                           pclath	equ	0xFFA
 10597                           tblptru	equ	0xFF8
 10598                           tblptrh	equ	0xFF7
 10599                           tblptrl	equ	0xFF6
 10600                           tablat	equ	0xFF5
 10601                           prodh	equ	0xFF4
 10602                           prodl	equ	0xFF3
 10603                           intcon	equ	0xFF2
 10604                           intcon2	equ	0xFF1
 10605                           intcon3	equ	0xFF0
 10606                           indf0	equ	0xFEF
 10607                           postinc0	equ	0xFEE
 10608                           plusw0	equ	0xFEB
 10609                           fsr0h	equ	0xFEA
 10610                           fsr0l	equ	0xFE9
 10611                           wreg	equ	0xFE8
 10612                           postinc1	equ	0xFE6
 10613                           postdec1	equ	0xFE5
 10614                           fsr1h	equ	0xFE2
 10615                           fsr1l	equ	0xFE1
 10616                           indf2	equ	0xFDF
 10617                           postinc2	equ	0xFDE
 10618                           postdec2	equ	0xFDD
 10619                           plusw2	equ	0xFDB
 10620                           fsr2h	equ	0xFDA
 10621                           fsr2l	equ	0xFD9
 10622                           status	equ	0xFD8
 10623                           
 10624 ;; *************** function _USBCtrlTrfOutHandler *****************
 10625 ;; Defined at:
 10626 ;;		line 2555 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      void 
 10633 ;; Registers used:
 10634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10644 ;;Total ram usage:        0 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:   13
 10647 ;; This function calls:
 10648 ;;		_USBCtrlTrfRxService
 10649 ;; This function is called by:
 10650 ;;		_USBCtrlEPService
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           	psect	text46
 10655  00AD20                     __ptext46:
 10656                           	opt stack 0
 10657  00AD20                     _USBCtrlTrfOutHandler:
 10658                           	opt stack 12
 10659                           
 10660                           ;usb_device.c: 2557: if(controlTransferState == 2)
 10661                           
 10662                           ; BSR set to: 0
 10663                           ;incstack = 0
 10664  00AD20  0E02               	movlw	2
 10665  00AD22  184C               	xorwf	_controlTransferState,w,c
 10666  00AD24  A4D8               	btfss	status,2,c
 10667  00AD26  D003               	goto	l1522
 10668                           
 10669                           ;usb_device.c: 2558: {
 10670                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 10671  00AD28  EC91  F064         	call	_USBCtrlTrfRxService	;wreg free
 10672                           
 10673                           ;usb_device.c: 2560: }
 10674  00AD2C  0012               	return	
 10675  00AD2E                     l1522:
 10676                           
 10677                           ;usb_device.c: 2561: else
 10678                           ;usb_device.c: 2562: {
 10679                           ;usb_device.c: 2565: controlTransferState = 0;
 10680  00AD2E  0E00               	movlw	0
 10681  00AD30  6E4C               	movwf	_controlTransferState,c
 10682                           
 10683                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 10684  00AD32  0101               	movlb	1	; () banked
 10685  00AD34  5160               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 10686  00AD36  A4D8               	btfss	status,2,c
 10687  00AD38  D020               	goto	l1524
 10688                           
 10689                           ; BSR set to: 1
 10690                           ;usb_device.c: 2573: {
 10691                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 10692  00AD3A  0100               	movlb	0	; () banked
 10693  00AD3C  EE20 F001          	lfsr	2,1
 10694  00AD40  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10695  00AD42  26D9               	addwf	fsr2l,f,c
 10696  00AD44  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10697  00AD46  22DA               	addwfc	fsr2h,f,c
 10698  00AD48  0E08               	movlw	8
 10699  00AD4A  6EDF               	movwf	indf2,c
 10700                           
 10701                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10702  00AD4C  EE20 F002          	lfsr	2,2
 10703  00AD50  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10704  00AD52  26D9               	addwf	fsr2l,f,c
 10705  00AD54  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10706  00AD56  22DA               	addwfc	fsr2h,f,c
 10707  00AD58  0E30               	movlw	48
 10708  00AD5A  6EDE               	movwf	postinc2,c
 10709  00AD5C  0E04               	movlw	4
 10710  00AD5E  6EDD               	movwf	postdec2,c
 10711                           
 10712                           ; BSR set to: 0
 10713                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10714  00AD60  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10715  00AD64  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10716  00AD68  0E0C               	movlw	12
 10717  00AD6A  6EDF               	movwf	indf2,c
 10718                           
 10719                           ; BSR set to: 0
 10720                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10721  00AD6C  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10722  00AD70  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10723  00AD74  0E00               	movlw	0
 10724  00AD76  8EDB               	bsf	plusw2,7,c
 10725                           
 10726                           ;usb_device.c: 2578: }
 10727  00AD78  0012               	return	
 10728  00AD7A                     l1524:
 10729                           
 10730                           ;usb_device.c: 2579: else
 10731                           ;usb_device.c: 2580: {
 10732                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 10733                           
 10734                           ; BSR set to: 0
 10735  00AD7A  0E00               	movlw	0
 10736  00AD7C  0101               	movlb	1	; () banked
 10737  00AD7E  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 10738                           
 10739                           ; BSR set to: 1
 10740  00AD80  0012               	return	
 10741  00AD82                     __end_of_USBCtrlTrfOutHandler:
 10742                           	opt stack 0
 10743                           tosu	equ	0xFFF
 10744                           tosh	equ	0xFFE
 10745                           tosl	equ	0xFFD
 10746                           pclath	equ	0xFFA
 10747                           tblptru	equ	0xFF8
 10748                           tblptrh	equ	0xFF7
 10749                           tblptrl	equ	0xFF6
 10750                           tablat	equ	0xFF5
 10751                           prodh	equ	0xFF4
 10752                           prodl	equ	0xFF3
 10753                           intcon	equ	0xFF2
 10754                           intcon2	equ	0xFF1
 10755                           intcon3	equ	0xFF0
 10756                           indf0	equ	0xFEF
 10757                           postinc0	equ	0xFEE
 10758                           plusw0	equ	0xFEB
 10759                           fsr0h	equ	0xFEA
 10760                           fsr0l	equ	0xFE9
 10761                           wreg	equ	0xFE8
 10762                           postinc1	equ	0xFE6
 10763                           postdec1	equ	0xFE5
 10764                           fsr1h	equ	0xFE2
 10765                           fsr1l	equ	0xFE1
 10766                           indf2	equ	0xFDF
 10767                           postinc2	equ	0xFDE
 10768                           postdec2	equ	0xFDD
 10769                           plusw2	equ	0xFDB
 10770                           fsr2h	equ	0xFDA
 10771                           fsr2l	equ	0xFD9
 10772                           status	equ	0xFD8
 10773                           
 10774 ;; *************** function _USBCtrlTrfRxService *****************
 10775 ;; Defined at:
 10776 ;;		line 1870 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;		None
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;  byteToRead      1    1[BANK0 ] unsigned char 
 10781 ;;  i               1    0[BANK0 ] unsigned char 
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  1    wreg      void 
 10784 ;; Registers used:
 10785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/0
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10792 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10794 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10795 ;;Total ram usage:        2 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:   12
 10798 ;; This function calls:
 10799 ;;		_USBCtrlEPAllowStatusStage
 10800 ;; This function is called by:
 10801 ;;		_USBCtrlTrfOutHandler
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           	psect	text47
 10806  00C922                     __ptext47:
 10807                           	opt stack 0
 10808  00C922                     _USBCtrlTrfRxService:
 10809                           	opt stack 12
 10810                           
 10811                           ;usb_device.c: 1872: uint8_t byteToRead;
 10812                           ;usb_device.c: 1873: uint8_t i;
 10813                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 10814                           
 10815                           ;incstack = 0
 10816  00C922  0100               	movlb	0	; () banked
 10817  00C924  EE20 F001          	lfsr	2,1
 10818  00C928  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 10819  00C92A  26D9               	addwf	fsr2l,f,c
 10820  00C92C  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 10821  00C92E  22DA               	addwfc	fsr2h,f,c
 10822  00C930  50DF               	movf	indf2,w,c
 10823  00C932  6F61               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 10827  00C934  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10828  00C936  0101               	movlb	1	; () banked
 10829  00C938  5D16               	subwf	(_outPipes+4)& (0+255),w,b
 10830  00C93A  0E00               	movlw	0
 10831  00C93C  5917               	subwfb	(_outPipes+5)& (0+255),w,b
 10832  00C93E  A0D8               	btfss	status,0,c
 10833                           
 10834                           ; BSR set to: 1
 10835                           ;usb_device.c: 1884: {
 10836                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 10837  00C940  C116  F061         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 10838                           
 10839                           ; BSR set to: 1
 10840                           ;usb_device.c: 1886: }
 10841                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 10842                           
 10843                           ; BSR set to: 1
 10844  00C944  0100               	movlb	0	; () banked
 10845  00C946  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10846  00C948  0101               	movlb	1	; () banked
 10847  00C94A  5F16               	subwf	(_outPipes+4)& (0+255),f,b
 10848  00C94C  0E00               	movlw	0
 10849  00C94E  5B17               	subwfb	(_outPipes+5)& (0+255),f,b
 10850                           
 10851                           ; BSR set to: 1
 10852                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 10853  00C950  0E00               	movlw	0
 10854  00C952  0100               	movlb	0	; () banked
 10855  00C954  6F60               	movwf	USBCtrlTrfRxService@i& (0+255),b
 10856  00C956  D013               	goto	l1450
 10857  00C958                     
 10858                           ; BSR set to: 0
 10859                           ;usb_device.c: 1893: {
 10860                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 10861                           
 10862                           ; BSR set to: 0
 10863  00C958  5160               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 10864  00C95A  0D01               	mullw	1
 10865  00C95C  0E38               	movlw	56
 10866  00C95E  24F3               	addwf	prodl,w,c
 10867  00C960  6ED9               	movwf	fsr2l,c
 10868  00C962  0E04               	movlw	4
 10869  00C964  20F4               	addwfc	prodh,w,c
 10870  00C966  6EDA               	movwf	fsr2h,c
 10871  00C968  C112  FFE1         	movff	_outPipes,fsr1l
 10872  00C96C  C113  FFE2         	movff	_outPipes+1,fsr1h
 10873  00C970  CFDF FFE7          	movff	indf2,indf1
 10874                           
 10875                           ; BSR set to: 0
 10876  00C974  0101               	movlb	1	; () banked
 10877  00C976  4B12               	infsnz	_outPipes& (0+255),f,b
 10878  00C978  2B13               	incf	(_outPipes+1)& (0+255),f,b
 10879                           
 10880                           ; BSR set to: 1
 10881  00C97A  0100               	movlb	0	; () banked
 10882  00C97C  2B60               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 10883  00C97E                     l1450:
 10884                           
 10885                           ; BSR set to: 0
 10886                           
 10887                           ; BSR set to: 0
 10888  00C97E  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10889  00C980  5D60               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 10890  00C982  A0D8               	btfss	status,0,c
 10891  00C984  D7E9               	goto	l1451
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;usb_device.c: 1895: }
 10895                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 10896                           
 10897                           ; BSR set to: 0
 10898  00C986  0101               	movlb	1	; () banked
 10899  00C988  5116               	movf	(_outPipes+4)& (0+255),w,b
 10900  00C98A  1117               	iorwf	(_outPipes+5)& (0+255),w,b
 10901  00C98C  B4D8               	btfsc	status,2,c
 10902  00C98E  D033               	goto	l1453
 10903                           
 10904                           ; BSR set to: 1
 10905                           ;usb_device.c: 1900: {
 10906                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 10907  00C990  0100               	movlb	0	; () banked
 10908  00C992  EE20 F001          	lfsr	2,1
 10909  00C996  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10910  00C998  26D9               	addwf	fsr2l,f,c
 10911  00C99A  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10912  00C99C  22DA               	addwfc	fsr2h,f,c
 10913  00C99E  0E08               	movlw	8
 10914  00C9A0  6EDF               	movwf	indf2,c
 10915                           
 10916                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 10917  00C9A2  EE20 F002          	lfsr	2,2
 10918  00C9A6  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10919  00C9A8  26D9               	addwf	fsr2l,f,c
 10920  00C9AA  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10921  00C9AC  22DA               	addwfc	fsr2h,f,c
 10922  00C9AE  0E38               	movlw	56
 10923  00C9B0  6EDE               	movwf	postinc2,c
 10924  00C9B2  0E04               	movlw	4
 10925  00C9B4  6EDD               	movwf	postdec2,c
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 10929  00C9B6  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10930  00C9BA  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10931  00C9BE  BCDF               	btfsc	indf2,6,c
 10932  00C9C0  D00D               	goto	l1454
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;usb_device.c: 1904: {
 10936                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10937  00C9C2  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10938  00C9C6  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10939  00C9CA  0E48               	movlw	72
 10940  00C9CC  6EDF               	movwf	indf2,c
 10941                           
 10942                           ; BSR set to: 0
 10943                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10944  00C9CE  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10945  00C9D2  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10946  00C9D6  0E00               	movlw	0
 10947  00C9D8  8EDB               	bsf	plusw2,7,c
 10948                           
 10949                           ;usb_device.c: 1907: }
 10950  00C9DA  0012               	return	
 10951  00C9DC                     l1454:
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;usb_device.c: 1908: else
 10955                           ;usb_device.c: 1909: {
 10956                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 10957                           
 10958                           ; BSR set to: 0
 10959  00C9DC  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10960  00C9E0  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10961  00C9E4  0E08               	movlw	8
 10962  00C9E6  6EDF               	movwf	indf2,c
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10966  00C9E8  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10967  00C9EC  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10968  00C9F0  0E00               	movlw	0
 10969  00C9F2  8EDB               	bsf	plusw2,7,c
 10970                           
 10971                           ; BSR set to: 0
 10972                           ;usb_device.c: 1912: }
 10973                           ;usb_device.c: 1913: }
 10974  00C9F4  0012               	return	
 10975  00C9F6                     l1453:
 10976                           
 10977                           ;usb_device.c: 1914: else
 10978                           ;usb_device.c: 1915: {
 10979                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 10980                           
 10981                           ; BSR set to: 0
 10982  00C9F6  0100               	movlb	0	; () banked
 10983  00C9F8  EE20 F001          	lfsr	2,1
 10984  00C9FC  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10985  00C9FE  26D9               	addwf	fsr2l,f,c
 10986  00CA00  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10987  00CA02  22DA               	addwfc	fsr2h,f,c
 10988  00CA04  0E08               	movlw	8
 10989  00CA06  6EDF               	movwf	indf2,c
 10990                           
 10991                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10992  00CA08  EE20 F002          	lfsr	2,2
 10993  00CA0C  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10994  00CA0E  26D9               	addwf	fsr2l,f,c
 10995  00CA10  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10996  00CA12  22DA               	addwfc	fsr2h,f,c
 10997  00CA14  0E30               	movlw	48
 10998  00CA16  6EDE               	movwf	postinc2,c
 10999  00CA18  0E04               	movlw	4
 11000  00CA1A  6EDD               	movwf	postdec2,c
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 11004  00CA1C  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11005  00CA20  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11006  00CA24  0E04               	movlw	4
 11007  00CA26  6EDF               	movwf	indf2,c
 11008                           
 11009                           ; BSR set to: 0
 11010                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11011  00CA28  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11012  00CA2C  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11013  00CA30  0E00               	movlw	0
 11014  00CA32  8EDB               	bsf	plusw2,7,c
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;usb_device.c: 1944: }
 11018                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 11019                           
 11020                           ; BSR set to: 0
 11021  00CA34  0101               	movlb	1	; () banked
 11022  00CA36  9F15               	bcf	(_outPipes+3)& (0+255),7,b
 11023                           
 11024                           ; BSR set to: 1
 11025                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 11026  00CA38  0100               	movlb	0	; () banked
 11027  00CA3A  51FC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 11028  00CA3C  A4D8               	btfss	status,2,c
 11029  00CA3E  0012               	return	
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;usb_device.c: 1960: {
 11033                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 11034  00CA40  EC92  F060         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11035  00CA44  0012               	return	
 11036  00CA46                     __end_of_USBCtrlTrfRxService:
 11037                           	opt stack 0
 11038                           tosu	equ	0xFFF
 11039                           tosh	equ	0xFFE
 11040                           tosl	equ	0xFFD
 11041                           pclath	equ	0xFFA
 11042                           tblptru	equ	0xFF8
 11043                           tblptrh	equ	0xFF7
 11044                           tblptrl	equ	0xFF6
 11045                           tablat	equ	0xFF5
 11046                           prodh	equ	0xFF4
 11047                           prodl	equ	0xFF3
 11048                           intcon	equ	0xFF2
 11049                           intcon2	equ	0xFF1
 11050                           intcon3	equ	0xFF0
 11051                           indf0	equ	0xFEF
 11052                           postinc0	equ	0xFEE
 11053                           plusw0	equ	0xFEB
 11054                           fsr0h	equ	0xFEA
 11055                           fsr0l	equ	0xFE9
 11056                           wreg	equ	0xFE8
 11057                           indf1	equ	0xFE7
 11058                           postinc1	equ	0xFE6
 11059                           postdec1	equ	0xFE5
 11060                           fsr1h	equ	0xFE2
 11061                           fsr1l	equ	0xFE1
 11062                           indf2	equ	0xFDF
 11063                           postinc2	equ	0xFDE
 11064                           postdec2	equ	0xFDD
 11065                           plusw2	equ	0xFDB
 11066                           fsr2h	equ	0xFDA
 11067                           fsr2l	equ	0xFD9
 11068                           status	equ	0xFD8
 11069                           
 11070 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 11071 ;; Defined at:
 11072 ;;		line 1434 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;		None
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11090 ;;Total ram usage:        0 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:   11
 11093 ;; This function calls:
 11094 ;;		Nothing
 11095 ;; This function is called by:
 11096 ;;		_USBDeviceTasks
 11097 ;;		_USBCtrlEPServiceComplete
 11098 ;;		_USBCtrlTrfRxService
 11099 ;; This function uses a non-reentrant model
 11100 ;;
 11101                           
 11102                           	psect	text48
 11103  00C124                     __ptext48:
 11104                           	opt stack 0
 11105  00C124                     _USBCtrlEPAllowStatusStage:
 11106                           	opt stack 12
 11107                           
 11108                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 11109                           
 11110                           ;incstack = 0
 11111  00C124  5049               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 11112  00C126  A4D8               	btfss	status,2,c
 11113  00C128  0012               	return	
 11114                           
 11115                           ;usb_device.c: 1442: {
 11116                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 11117  00C12A  0E01               	movlw	1
 11118  00C12C  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 11119                           
 11120                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 11121  00C12E  5048               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 11122  00C130  A4D8               	btfss	status,2,c
 11123  00C132  0012               	return	
 11124                           
 11125                           ;usb_device.c: 1445: {
 11126                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 11127  00C134  0E01               	movlw	1
 11128  00C136  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 11129                           
 11130                           ;usb_device.c: 1450: if(controlTransferState == 2)
 11131  00C138  0E02               	movlw	2
 11132  00C13A  184C               	xorwf	_controlTransferState,w,c
 11133  00C13C  A4D8               	btfss	status,2,c
 11134  00C13E  D015               	goto	l1404
 11135                           
 11136                           ;usb_device.c: 1451: {
 11137                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 11138  00C140  EE20 F001          	lfsr	2,1
 11139  00C144  503E               	movf	_pBDTEntryIn,w,c
 11140  00C146  26D9               	addwf	fsr2l,f,c
 11141  00C148  503F               	movf	_pBDTEntryIn+1,w,c
 11142  00C14A  22DA               	addwfc	fsr2h,f,c
 11143  00C14C  0E00               	movlw	0
 11144  00C14E  6EDF               	movwf	indf2,c
 11145                           
 11146                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11147  00C150  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11148  00C154  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11149  00C158  0E48               	movlw	72
 11150  00C15A  6EDF               	movwf	indf2,c
 11151                           
 11152                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11153  00C15C  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11154  00C160  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11155  00C164  0E00               	movlw	0
 11156  00C166  8EDB               	bsf	plusw2,7,c
 11157                           
 11158                           ;usb_device.c: 1455: }
 11159  00C168  0012               	return	
 11160  00C16A                     l1404:
 11161                           
 11162                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 11163  00C16A  044C               	decf	_controlTransferState,w,c
 11164  00C16C  A4D8               	btfss	status,2,c
 11165  00C16E  0012               	return	
 11166                           
 11167                           ;usb_device.c: 1457: {
 11168                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 11169  00C170  0E00               	movlw	0
 11170  00C172  0101               	movlb	1	; () banked
 11171  00C174  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11172                           
 11173                           ; BSR set to: 1
 11174                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 11175  00C176  0100               	movlb	0	; () banked
 11176  00C178  EE20 F001          	lfsr	2,1
 11177  00C17C  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 11178  00C17E  26D9               	addwf	fsr2l,f,c
 11179  00C180  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 11180  00C182  22DA               	addwfc	fsr2h,f,c
 11181  00C184  0E08               	movlw	8
 11182  00C186  6EDF               	movwf	indf2,c
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 11186  00C188  EE20 F002          	lfsr	2,2
 11187  00C18C  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 11188  00C18E  26D9               	addwf	fsr2l,f,c
 11189  00C190  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 11190  00C192  22DA               	addwfc	fsr2h,f,c
 11191  00C194  0E30               	movlw	48
 11192  00C196  6EDE               	movwf	postinc2,c
 11193  00C198  0E04               	movlw	4
 11194  00C19A  6EDD               	movwf	postdec2,c
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 11198  00C19C  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11199  00C1A0  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11200  00C1A4  0E04               	movlw	4
 11201  00C1A6  6EDF               	movwf	indf2,c
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11205  00C1A8  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11206  00C1AC  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11207  00C1B0  0E00               	movlw	0
 11208  00C1B2  8EDB               	bsf	plusw2,7,c
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 11212  00C1B4  0E01               	movlw	1
 11213  00C1B6  0101               	movlb	1	; () banked
 11214  00C1B8  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11215                           
 11216                           ; BSR set to: 1
 11217                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 11218  00C1BA  0100               	movlb	0	; () banked
 11219  00C1BC  EE20 F001          	lfsr	2,1
 11220  00C1C0  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11221  00C1C2  26D9               	addwf	fsr2l,f,c
 11222  00C1C4  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11223  00C1C6  22DA               	addwfc	fsr2h,f,c
 11224  00C1C8  0E08               	movlw	8
 11225  00C1CA  6EDF               	movwf	indf2,c
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 11229  00C1CC  EE20 F002          	lfsr	2,2
 11230  00C1D0  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11231  00C1D2  26D9               	addwf	fsr2l,f,c
 11232  00C1D4  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11233  00C1D6  22DA               	addwfc	fsr2h,f,c
 11234  00C1D8  0E30               	movlw	48
 11235  00C1DA  6EDE               	movwf	postinc2,c
 11236  00C1DC  0E04               	movlw	4
 11237  00C1DE  6EDD               	movwf	postdec2,c
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 11241  00C1E0  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11242  00C1E4  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11243  00C1E8  0E80               	movlw	128
 11244  00C1EA  6EDF               	movwf	indf2,c
 11245                           
 11246                           ; BSR set to: 0
 11247                           
 11248                           ; BSR set to: 0
 11249                           
 11250                           ; BSR set to: 0
 11251  00C1EC  0012               	return	
 11252  00C1EE                     __end_of_USBCtrlEPAllowStatusStage:
 11253                           	opt stack 0
 11254                           tosu	equ	0xFFF
 11255                           tosh	equ	0xFFE
 11256                           tosl	equ	0xFFD
 11257                           pclath	equ	0xFFA
 11258                           tblptru	equ	0xFF8
 11259                           tblptrh	equ	0xFF7
 11260                           tblptrl	equ	0xFF6
 11261                           tablat	equ	0xFF5
 11262                           prodh	equ	0xFF4
 11263                           prodl	equ	0xFF3
 11264                           intcon	equ	0xFF2
 11265                           intcon2	equ	0xFF1
 11266                           intcon3	equ	0xFF0
 11267                           indf0	equ	0xFEF
 11268                           postinc0	equ	0xFEE
 11269                           plusw0	equ	0xFEB
 11270                           fsr0h	equ	0xFEA
 11271                           fsr0l	equ	0xFE9
 11272                           wreg	equ	0xFE8
 11273                           indf1	equ	0xFE7
 11274                           postinc1	equ	0xFE6
 11275                           postdec1	equ	0xFE5
 11276                           fsr1h	equ	0xFE2
 11277                           fsr1l	equ	0xFE1
 11278                           indf2	equ	0xFDF
 11279                           postinc2	equ	0xFDE
 11280                           postdec2	equ	0xFDD
 11281                           plusw2	equ	0xFDB
 11282                           fsr2h	equ	0xFDA
 11283                           fsr2l	equ	0xFD9
 11284                           status	equ	0xFD8
 11285                           
 11286 ;; *************** function _USBCtrlTrfInHandler *****************
 11287 ;; Defined at:
 11288 ;;		line 2609 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11289 ;; Parameters:    Size  Location     Type
 11290 ;;		None
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;  lastDTS         1    1[BANK0 ] unsigned char 
 11293 ;; Return value:  Size  Location     Type
 11294 ;;                  1    wreg      void 
 11295 ;; Registers used:
 11296 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11297 ;; Tracked objects:
 11298 ;;		On entry : 0/0
 11299 ;;		On exit  : 0/0
 11300 ;;		Unchanged: 0/0
 11301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11303 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11305 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11306 ;;Total ram usage:        1 bytes
 11307 ;; Hardware stack levels used:    1
 11308 ;; Hardware stack levels required when called:   12
 11309 ;; This function calls:
 11310 ;;		_USBCtrlTrfTxService
 11311 ;; This function is called by:
 11312 ;;		_USBCtrlEPService
 11313 ;; This function uses a non-reentrant model
 11314 ;;
 11315                           
 11316                           	psect	text49
 11317  00BE0C                     __ptext49:
 11318                           	opt stack 0
 11319  00BE0C                     _USBCtrlTrfInHandler:
 11320                           	opt stack 13
 11321                           
 11322                           ;usb_device.c: 2611: uint8_t lastDTS;
 11323                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 11324                           
 11325                           ;incstack = 0
 11326  00BE0C  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11327  00BE10  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11328  00BE14  0E00               	movlw	0
 11329  00BE16  BCDF               	btfsc	indf2,6,c
 11330  00BE18  0E01               	movlw	1
 11331  00BE1A  0100               	movlb	0	; () banked
 11332  00BE1C  6F61               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 11336  00BE1E  0E04               	movlw	4
 11337  00BE20  1A3E               	xorwf	_pBDTEntryIn,f,c
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 11341  00BE22  0E08               	movlw	8
 11342  00BE24  19FD               	xorwf	_USBDeviceState& (0+255),w,b
 11343  00BE26  A4D8               	btfss	status,2,c
 11344  00BE28  D00D               	goto	l1531
 11345                           
 11346                           ; BSR set to: 0
 11347                           ;usb_device.c: 2622: {
 11348                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 11349  00BE2A  0104               	movlb	4	; () banked
 11350  00BE2C  5132               	movf	50,w,b	;volatile
 11351  00BE2E  0B7F               	andlw	127
 11352  00BE30  010F               	movlb	15	; () banked
 11353  00BE32  6F38               	movwf	56,b	;volatile
 11354                           
 11355                           ; BSR set to: 15
 11356                           ;usb_device.c: 2624: if(UADDR != 0u)
 11357  00BE34  5138               	movf	56,w,b	;volatile
 11358  00BE36  B4D8               	btfsc	status,2,c
 11359  00BE38  D002               	goto	l1530
 11360                           
 11361                           ; BSR set to: 15
 11362                           ;usb_device.c: 2625: {
 11363                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 11364  00BE3A  0E10               	movlw	16
 11365  00BE3C  D001               	goto	L11
 11366  00BE3E                     l1530:
 11367                           
 11368                           ;usb_device.c: 2628: else
 11369                           ;usb_device.c: 2629: {
 11370                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 11371                           
 11372                           ; BSR set to: 0
 11373  00BE3E  0E04               	movlw	4
 11374  00BE40                     L11:
 11375  00BE40  0100               	movlb	0	; () banked
 11376  00BE42  6FFD               	movwf	_USBDeviceState& (0+255),b
 11377  00BE44                     l1531:
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;usb_device.c: 2631: }
 11381                           ;usb_device.c: 2632: }
 11382                           ;usb_device.c: 2635: if(controlTransferState == 1)
 11383                           
 11384                           ; BSR set to: 0
 11385                           
 11386                           ; BSR set to: 0
 11387  00BE44  044C               	decf	_controlTransferState,w,c
 11388  00BE46  A4D8               	btfss	status,2,c
 11389  00BE48  D03B               	goto	l1532
 11390                           
 11391                           ; BSR set to: 0
 11392                           ;usb_device.c: 2636: {
 11393                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 11394  00BE4A  EE20 F002          	lfsr	2,2
 11395  00BE4E  503E               	movf	_pBDTEntryIn,w,c
 11396  00BE50  26D9               	addwf	fsr2l,f,c
 11397  00BE52  503F               	movf	_pBDTEntryIn+1,w,c
 11398  00BE54  22DA               	addwfc	fsr2h,f,c
 11399  00BE56  0E38               	movlw	56
 11400  00BE58  6EDE               	movwf	postinc2,c
 11401  00BE5A  0E04               	movlw	4
 11402  00BE5C  6EDD               	movwf	postdec2,c
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 11406  00BE5E  ECCC  F061         	call	_USBCtrlTrfTxService	;wreg free
 11407                           
 11408                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 11409  00BE62  0E02               	movlw	2
 11410  00BE64  184D               	xorwf	_shortPacketStatus,w,c
 11411  00BE66  A4D8               	btfss	status,2,c
 11412  00BE68  D00D               	goto	l1533
 11413                           
 11414                           ;usb_device.c: 2645: {
 11415                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 11416  00BE6A  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11417  00BE6E  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11418  00BE72  0E04               	movlw	4
 11419  00BE74  6EDF               	movwf	indf2,c
 11420                           
 11421                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11422  00BE76  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11423  00BE7A  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11424  00BE7E  0E00               	movlw	0
 11425  00BE80  8EDB               	bsf	plusw2,7,c
 11426                           
 11427                           ;usb_device.c: 2650: }
 11428  00BE82  0012               	return	
 11429  00BE84                     l1533:
 11430                           
 11431                           ;usb_device.c: 2651: else
 11432                           ;usb_device.c: 2652: {
 11433                           ;usb_device.c: 2653: if(lastDTS == 0)
 11434  00BE84  0100               	movlb	0	; () banked
 11435  00BE86  5161               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 11436  00BE88  A4D8               	btfss	status,2,c
 11437  00BE8A  D00D               	goto	l1535
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;usb_device.c: 2654: {
 11441                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11442  00BE8C  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11443  00BE90  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11444  00BE94  0E48               	movlw	72
 11445  00BE96  6EDF               	movwf	indf2,c
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11449  00BE98  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11450  00BE9C  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11451  00BEA0  0E00               	movlw	0
 11452  00BEA2  8EDB               	bsf	plusw2,7,c
 11453                           
 11454                           ;usb_device.c: 2657: }
 11455  00BEA4  0012               	return	
 11456  00BEA6                     l1535:
 11457                           
 11458                           ; BSR set to: 0
 11459                           ;usb_device.c: 2658: else
 11460                           ;usb_device.c: 2659: {
 11461                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 11462                           
 11463                           ; BSR set to: 0
 11464  00BEA6  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11465  00BEAA  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11466  00BEAE  0E08               	movlw	8
 11467  00BEB0  6EDF               	movwf	indf2,c
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11471  00BEB2  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11472  00BEB6  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11473  00BEBA  0E00               	movlw	0
 11474  00BEBC  8EDB               	bsf	plusw2,7,c
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;usb_device.c: 2662: }
 11478                           ;usb_device.c: 2663: }
 11479                           ;usb_device.c: 2664: }
 11480                           
 11481                           ; BSR set to: 0
 11482  00BEBE  0012               	return	
 11483  00BEC0                     l1532:
 11484                           
 11485                           ; BSR set to: 0
 11486                           ;usb_device.c: 2665: else
 11487                           ;usb_device.c: 2666: {
 11488                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 11489  00BEC0  0101               	movlb	1	; () banked
 11490  00BEC2  BF15               	btfsc	(_outPipes+3)& (0+255),7,b
 11491                           
 11492                           ; BSR set to: 1
 11493                           ;usb_device.c: 2675: }
 11494                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 11495                           
 11496                           ; BSR set to: 1
 11497  00BEC4  9F15               	bcf	(_outPipes+3)& (0+255),7,b
 11498                           
 11499                           ; BSR set to: 1
 11500                           ;usb_device.c: 2677: }
 11501                           ;usb_device.c: 2679: controlTransferState = 0;
 11502                           
 11503                           ; BSR set to: 1
 11504  00BEC6  0E00               	movlw	0
 11505  00BEC8  6E4C               	movwf	_controlTransferState,c
 11506  00BECA  0012               	return	
 11507  00BECC                     __end_of_USBCtrlTrfInHandler:
 11508                           	opt stack 0
 11509                           tosu	equ	0xFFF
 11510                           tosh	equ	0xFFE
 11511                           tosl	equ	0xFFD
 11512                           pclath	equ	0xFFA
 11513                           tblptru	equ	0xFF8
 11514                           tblptrh	equ	0xFF7
 11515                           tblptrl	equ	0xFF6
 11516                           tablat	equ	0xFF5
 11517                           prodh	equ	0xFF4
 11518                           prodl	equ	0xFF3
 11519                           intcon	equ	0xFF2
 11520                           intcon2	equ	0xFF1
 11521                           intcon3	equ	0xFF0
 11522                           indf0	equ	0xFEF
 11523                           postinc0	equ	0xFEE
 11524                           plusw0	equ	0xFEB
 11525                           fsr0h	equ	0xFEA
 11526                           fsr0l	equ	0xFE9
 11527                           wreg	equ	0xFE8
 11528                           indf1	equ	0xFE7
 11529                           postinc1	equ	0xFE6
 11530                           postdec1	equ	0xFE5
 11531                           fsr1h	equ	0xFE2
 11532                           fsr1l	equ	0xFE1
 11533                           indf2	equ	0xFDF
 11534                           postinc2	equ	0xFDE
 11535                           postdec2	equ	0xFDD
 11536                           plusw2	equ	0xFDB
 11537                           fsr2h	equ	0xFDA
 11538                           fsr2l	equ	0xFD9
 11539                           status	equ	0xFD8
 11540                           
 11541 ;; *************** function _USBCtrlTrfTxService *****************
 11542 ;; Defined at:
 11543 ;;		line 1789 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;		None
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  byteToSend      1    0[BANK0 ] unsigned char 
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11561 ;;Total ram usage:        1 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; Hardware stack levels required when called:   11
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_USBCtrlEPAllowDataStage
 11568 ;;		_USBCtrlTrfInHandler
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text50
 11573  00C398                     __ptext50:
 11574                           	opt stack 0
 11575  00C398                     _USBCtrlTrfTxService:
 11576                           	opt stack 11
 11577                           
 11578                           ;usb_device.c: 1791: uint8_t byteToSend;
 11579                           ;usb_device.c: 1795: byteToSend = 8;
 11580                           
 11581                           ;incstack = 0
 11582  00C398  0E08               	movlw	8
 11583  00C39A  0100               	movlb	0	; () banked
 11584  00C39C  6F60               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 11588  00C39E  51F5               	movf	(_inPipes+5)& (0+255),w,b
 11589  00C3A0  E110               	bnz	l6528
 11590  00C3A2  0E08               	movlw	8
 11591  00C3A4  5DF4               	subwf	(_inPipes+4)& (0+255),w,b
 11592  00C3A6  B0D8               	btfsc	status,0,c
 11593  00C3A8  D00C               	goto	l1437
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;usb_device.c: 1797: {
 11597                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 11598  00C3AA  C0F4  F060         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 11602  00C3AE  504D               	movf	_shortPacketStatus,w,c
 11603  00C3B0  A4D8               	btfss	status,2,c
 11604  00C3B2  D002               	goto	l1435
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;usb_device.c: 1806: {
 11608                           ;usb_device.c: 1807: shortPacketStatus = 1;
 11609  00C3B4  0E01               	movlw	1
 11610  00C3B6  D004               	goto	L12
 11611  00C3B8                     l1435:
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 11615                           
 11616                           ; BSR set to: 0
 11617  00C3B8  044D               	decf	_shortPacketStatus,w,c
 11618  00C3BA  A4D8               	btfss	status,2,c
 11619  00C3BC  D002               	goto	l1437
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;usb_device.c: 1810: {
 11623                           ;usb_device.c: 1811: shortPacketStatus = 2;
 11624  00C3BE  0E02               	movlw	2
 11625  00C3C0                     L12:
 11626  00C3C0  6E4D               	movwf	_shortPacketStatus,c
 11627  00C3C2                     l1437:
 11628  00C3C2                     l6528:
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;usb_device.c: 1812: }
 11632                           ;usb_device.c: 1813: }
 11633                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 11634  00C3C2  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11635  00C3C4  5FF4               	subwf	(_inPipes+4)& (0+255),f,b
 11636  00C3C6  0E00               	movlw	0
 11637  00C3C8  5BF5               	subwfb	(_inPipes+5)& (0+255),f,b
 11638                           
 11639                           ; BSR set to: 0
 11640                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 11641  00C3CA  EE20 F001          	lfsr	2,1
 11642  00C3CE  503E               	movf	_pBDTEntryIn,w,c
 11643  00C3D0  26D9               	addwf	fsr2l,f,c
 11644  00C3D2  503F               	movf	_pBDTEntryIn+1,w,c
 11645  00C3D4  22DA               	addwfc	fsr2h,f,c
 11646  00C3D6  C060  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 11647                           
 11648                           ; BSR set to: 0
 11649                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 11650  00C3DA  0E38               	movlw	56
 11651  00C3DC  0101               	movlb	1	; () banked
 11652  00C3DE  6F42               	movwf	_pDst& (0+255),b
 11653  00C3E0  0E04               	movlw	4
 11654  00C3E2  6F43               	movwf	(_pDst+1)& (0+255),b
 11655                           
 11656                           ; BSR set to: 1
 11657                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 11658  00C3E4  0100               	movlb	0	; () banked
 11659  00C3E6  A1F3               	btfss	(_inPipes+3)& (0+255),0,b
 11660  00C3E8  D01E               	goto	l1439
 11661  00C3EA  D03E               	goto	l1443
 11662  00C3EC                     
 11663                           ; BSR set to: 0
 11664                           ;usb_device.c: 1830: {
 11665                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 11666                           
 11667                           ; BSR set to: 0
 11668  00C3EC  C0F0  FFF6         	movff	_inPipes,tblptrl
 11669  00C3F0  C0F1  FFF7         	movff	_inPipes+1,tblptrh
 11670  00C3F4  6AF8               	clrf	tblptru,c
 11671  00C3F6  C142  FFD9         	movff	_pDst,fsr2l
 11672  00C3FA  C143  FFDA         	movff	_pDst+1,fsr2h
 11673  00C3FE  0E0E               	movlw	(high __ramtop+-1)
 11674  00C400  64F7               	cpfsgt	tblptrh,c
 11675  00C402  D003               	bra	u4417
 11676  00C404  0008               	tblrd		*
 11677  00C406  50F5               	movf	tablat,w,c
 11678  00C408  D005               	bra	u4410
 11679  00C40A                     u4417:
 11680  00C40A  CFF6 FFE9          	movff	tblptrl,fsr0l
 11681  00C40E  CFF7 FFEA          	movff	tblptrh,fsr0h
 11682  00C412  50EF               	movf	indf0,w,c
 11683  00C414                     u4410:
 11684  00C414  6EDF               	movwf	indf2,c
 11685  00C416  0100               	movlb	0	; () banked
 11686  00C418  4BF0               	infsnz	_inPipes& (0+255),f,b
 11687  00C41A  2BF1               	incf	(_inPipes+1)& (0+255),f,b
 11688                           
 11689                           ; BSR set to: 0
 11690  00C41C  0101               	movlb	1	; () banked
 11691  00C41E  4B42               	infsnz	_pDst& (0+255),f,b
 11692  00C420  2B43               	incf	(_pDst+1)& (0+255),f,b
 11693                           
 11694                           ; BSR set to: 1
 11695                           ;usb_device.c: 1832: byteToSend--;
 11696  00C422  0100               	movlb	0	; () banked
 11697  00C424  0760               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11698  00C426                     l1439:
 11699                           
 11700                           ; BSR set to: 0
 11701                           
 11702                           ; BSR set to: 0
 11703  00C426  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11704  00C428  B4D8               	btfsc	status,2,c
 11705  00C42A  0012               	return	
 11706  00C42C  D7DF               	goto	l1440
 11707  00C42E                     
 11708                           ; BSR set to: 0
 11709                           ;usb_device.c: 1838: {
 11710                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 11711                           
 11712                           ; BSR set to: 0
 11713  00C42E  C0F0  FFF6         	movff	_inPipes,tblptrl
 11714  00C432  C0F1  FFF7         	movff	_inPipes+1,tblptrh
 11715  00C436  6AF8               	clrf	tblptru,c
 11716  00C438  C142  FFD9         	movff	_pDst,fsr2l
 11717  00C43C  C143  FFDA         	movff	_pDst+1,fsr2h
 11718  00C440  0E0E               	movlw	(high __ramtop+-1)
 11719  00C442  64F7               	cpfsgt	tblptrh,c
 11720  00C444  D003               	bra	u4437
 11721  00C446  0008               	tblrd		*
 11722  00C448  50F5               	movf	tablat,w,c
 11723  00C44A  D005               	bra	u4430
 11724  00C44C                     u4437:
 11725  00C44C  CFF6 FFE9          	movff	tblptrl,fsr0l
 11726  00C450  CFF7 FFEA          	movff	tblptrh,fsr0h
 11727  00C454  50EF               	movf	indf0,w,c
 11728  00C456                     u4430:
 11729  00C456  6EDF               	movwf	indf2,c
 11730  00C458  0100               	movlb	0	; () banked
 11731  00C45A  4BF0               	infsnz	_inPipes& (0+255),f,b
 11732  00C45C  2BF1               	incf	(_inPipes+1)& (0+255),f,b
 11733                           
 11734                           ; BSR set to: 0
 11735  00C45E  0101               	movlb	1	; () banked
 11736  00C460  4B42               	infsnz	_pDst& (0+255),f,b
 11737  00C462  2B43               	incf	(_pDst+1)& (0+255),f,b
 11738                           
 11739                           ; BSR set to: 1
 11740                           ;usb_device.c: 1840: byteToSend--;
 11741  00C464  0100               	movlb	0	; () banked
 11742  00C466  0760               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11743  00C468                     l1443:
 11744                           
 11745                           ; BSR set to: 0
 11746                           
 11747                           ; BSR set to: 0
 11748  00C468  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11749  00C46A  B4D8               	btfsc	status,2,c
 11750  00C46C  0012               	return	
 11751  00C46E  D7DF               	goto	l1444
 11752  00C470                     __end_of_USBCtrlTrfTxService:
 11753                           	opt stack 0
 11754                           tosu	equ	0xFFF
 11755                           tosh	equ	0xFFE
 11756                           tosl	equ	0xFFD
 11757                           pclath	equ	0xFFA
 11758                           tblptru	equ	0xFF8
 11759                           tblptrh	equ	0xFF7
 11760                           tblptrl	equ	0xFF6
 11761                           tablat	equ	0xFF5
 11762                           prodh	equ	0xFF4
 11763                           prodl	equ	0xFF3
 11764                           intcon	equ	0xFF2
 11765                           intcon2	equ	0xFF1
 11766                           intcon3	equ	0xFF0
 11767                           indf0	equ	0xFEF
 11768                           postinc0	equ	0xFEE
 11769                           plusw0	equ	0xFEB
 11770                           fsr0h	equ	0xFEA
 11771                           fsr0l	equ	0xFE9
 11772                           wreg	equ	0xFE8
 11773                           indf1	equ	0xFE7
 11774                           postinc1	equ	0xFE6
 11775                           postdec1	equ	0xFE5
 11776                           fsr1h	equ	0xFE2
 11777                           fsr1l	equ	0xFE1
 11778                           indf2	equ	0xFDF
 11779                           postinc2	equ	0xFDE
 11780                           postdec2	equ	0xFDD
 11781                           plusw2	equ	0xFDB
 11782                           fsr2h	equ	0xFDA
 11783                           fsr2l	equ	0xFD9
 11784                           status	equ	0xFD8
 11785                           
 11786 ;; *************** function _CDCTxService *****************
 11787 ;; Defined at:
 11788 ;;		line 839 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11789 ;; Parameters:    Size  Location     Type
 11790 ;;		None
 11791 ;; Auto vars:     Size  Location     Type
 11792 ;;  byte_to_send    1    8[BANK0 ] unsigned char 
 11793 ;;  i               1    7[BANK0 ] unsigned char 
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  1    wreg      void 
 11796 ;; Registers used:
 11797 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11798 ;; Tracked objects:
 11799 ;;		On entry : 0/0
 11800 ;;		On exit  : 0/0
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11804 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11806 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11807 ;;Total ram usage:        2 bytes
 11808 ;; Hardware stack levels used:    1
 11809 ;; Hardware stack levels required when called:   12
 11810 ;; This function calls:
 11811 ;;		_USBTransferOnePacket
 11812 ;; This function is called by:
 11813 ;;		_UsbDevice_MainTask
 11814 ;; This function uses a non-reentrant model
 11815 ;;
 11816                           
 11817                           	psect	text51
 11818  00CDE4                     __ptext51:
 11819                           	opt stack 0
 11820  00CDE4                     _CDCTxService:
 11821                           	opt stack 15
 11822                           
 11823                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 11824                           ;usb_device_cdc.c: 842: uint8_t i;
 11825                           ;usb_device_cdc.c: 844: ;
 11826                           ;usb_device_cdc.c: 846: {};
 11827                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 11828                           
 11829                           ; BSR set to: 0
 11830                           ;incstack = 0
 11831  00CDE4  0101               	movlb	1	; () banked
 11832  00CDE6  5140               	movf	_CDCDataInHandle& (0+255),w,b
 11833  00CDE8  1141               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 11834  00CDEA  B4D8               	btfsc	status,2,c
 11835  00CDEC  D006               	goto	l1689
 11836                           
 11837                           ; BSR set to: 1
 11838  00CDEE  C140  FFD9         	movff	_CDCDataInHandle,fsr2l
 11839  00CDF2  C141  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 11840  00CDF6  BEDF               	btfsc	indf2,7,c
 11841  00CDF8  0012               	return	
 11842  00CDFA                     l1689:
 11843                           
 11844                           ; BSR set to: 1
 11845                           ;usb_device_cdc.c: 852: }
 11846                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 11847                           
 11848                           ; BSR set to: 1
 11849  00CDFA  0E03               	movlw	3
 11850  00CDFC  0100               	movlb	0	; () banked
 11851  00CDFE  19FB               	xorwf	_cdc_trf_state& (0+255),w,b
 11852  00CE00  A4D8               	btfss	status,2,c
 11853  00CE02  D002               	goto	l1691
 11854                           
 11855                           ; BSR set to: 0
 11856                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 11857  00CE04  0E00               	movlw	0
 11858  00CE06  6FFB               	movwf	_cdc_trf_state& (0+255),b
 11859  00CE08                     l1691:
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 11863  00CE08  51FB               	movf	_cdc_trf_state& (0+255),w,b
 11864  00CE0A  B4D8               	btfsc	status,2,c
 11865  00CE0C  0012               	return	
 11866                           
 11867                           ; BSR set to: 0
 11868                           ;usb_device_cdc.c: 869: }
 11869                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 11870                           
 11871                           ; BSR set to: 0
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;usb_device_cdc.c: 866: {
 11875                           ;usb_device_cdc.c: 867: ;
 11876                           ;usb_device_cdc.c: 868: return;
 11877  00CE0E  0E02               	movlw	2
 11878  00CE10  19FB               	xorwf	_cdc_trf_state& (0+255),w,b
 11879  00CE12  A4D8               	btfss	status,2,c
 11880  00CE14  D013               	goto	l1693
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;usb_device_cdc.c: 875: {
 11884                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 11885  00CE16  0E01               	movlw	1
 11886  00CE18  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11887  00CE1A  0E00               	movlw	0
 11888  00CE1C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11889  00CE1E  0E00               	movlw	0
 11890  00CE20  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11891  00CE22  0E00               	movlw	0
 11892  00CE24  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 11893  00CE26  0E02               	movlw	2
 11894  00CE28  ECA7  F05E         	call	_USBTransferOnePacket
 11895  00CE2C  C060  F140         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11896  00CE30  C061  F141         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11897                           
 11898                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 11899  00CE34  0E03               	movlw	3
 11900  00CE36  0100               	movlb	0	; () banked
 11901  00CE38  6FFB               	movwf	_cdc_trf_state& (0+255),b
 11902                           
 11903                           ;usb_device_cdc.c: 879: }
 11904  00CE3A  0012               	return	
 11905  00CE3C                     l1693:
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 11909                           
 11910                           ; BSR set to: 0
 11911  00CE3C  05FB               	decf	_cdc_trf_state& (0+255),w,b
 11912  00CE3E  A4D8               	btfss	status,2,c
 11913  00CE40  0012               	return	
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;usb_device_cdc.c: 881: {
 11917                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 11918  00CE42  0E40               	movlw	64
 11919  00CE44  6446               	cpfsgt	_cdc_tx_len,c
 11920  00CE46  D003               	goto	l1696
 11921                           
 11922                           ; BSR set to: 0
 11923                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 11924  00CE48  0E40               	movlw	64
 11925  00CE4A  6F68               	movwf	CDCTxService@byte_to_send& (0+255),b
 11926  00CE4C  D002               	goto	l1697
 11927  00CE4E                     l1696:
 11928                           
 11929                           ; BSR set to: 0
 11930                           ;usb_device_cdc.c: 887: else
 11931                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 11932  00CE4E  C046  F068         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 11933  00CE52                     l1697:
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 11937                           
 11938                           ; BSR set to: 0
 11939  00CE52  5168               	movf	CDCTxService@byte_to_send& (0+255),w,b
 11940  00CE54  0800               	sublw	0
 11941  00CE56  2446               	addwf	_cdc_tx_len,w,c
 11942  00CE58  6E46               	movwf	_cdc_tx_len,c
 11943                           
 11944                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 11945  00CE5A  0EA4               	movlw	low _cdc_data_tx
 11946  00CE5C  0101               	movlb	1	; () banked
 11947  00CE5E  6F32               	movwf	_pCDCDst& (0+255),b
 11948  00CE60  0E04               	movlw	high _cdc_data_tx
 11949  00CE62  6F33               	movwf	(_pCDCDst+1)& (0+255),b
 11950                           
 11951                           ; BSR set to: 1
 11952                           ;usb_device_cdc.c: 897: i = byte_to_send;
 11953  00CE64  C068  F067         	movff	CDCTxService@byte_to_send,CDCTxService@i
 11954                           
 11955                           ; BSR set to: 1
 11956                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 11957  00CE68  515C               	movf	_cdc_mem_type& (0+255),w,b
 11958  00CE6A  B4D8               	btfsc	status,2,c
 11959  00CE6C  D01D               	goto	l1699
 11960  00CE6E  D03D               	goto	l1703
 11961  00CE70                     
 11962                           ;usb_device_cdc.c: 901: {
 11963                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 11964                           
 11965                           ; BSR set to: 1
 11966  00CE70  C135  FFF6         	movff	_pCDCSrc,tblptrl
 11967  00CE74  C136  FFF7         	movff	_pCDCSrc+1,tblptrh
 11968  00CE78  6AF8               	clrf	tblptru,c
 11969  00CE7A  C132  FFD9         	movff	_pCDCDst,fsr2l
 11970  00CE7E  C133  FFDA         	movff	_pCDCDst+1,fsr2h
 11971  00CE82  0E0E               	movlw	(high __ramtop+-1)
 11972  00CE84  64F7               	cpfsgt	tblptrh,c
 11973  00CE86  D003               	bra	u7547
 11974  00CE88  0008               	tblrd		*
 11975  00CE8A  50F5               	movf	tablat,w,c
 11976  00CE8C  D005               	bra	u7540
 11977  00CE8E                     u7547:
 11978  00CE8E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11979  00CE92  CFF7 FFEA          	movff	tblptrh,fsr0h
 11980  00CE96  50EF               	movf	indf0,w,c
 11981  00CE98                     u7540:
 11982  00CE98  6EDF               	movwf	indf2,c
 11983                           
 11984                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 11985  00CE9A  0101               	movlb	1	; () banked
 11986  00CE9C  4B32               	infsnz	_pCDCDst& (0+255),f,b
 11987  00CE9E  2B33               	incf	(_pCDCDst+1)& (0+255),f,b
 11988                           
 11989                           ; BSR set to: 1
 11990                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 11991  00CEA0  4B35               	infsnz	_pCDCSrc& (0+255),f,b
 11992  00CEA2  2B36               	incf	(_pCDCSrc+1)& (0+255),f,b
 11993                           
 11994                           ; BSR set to: 1
 11995                           ;usb_device_cdc.c: 905: i--;
 11996  00CEA4  0100               	movlb	0	; () banked
 11997  00CEA6  0767               	decf	CDCTxService@i& (0+255),f,b
 11998  00CEA8                     l1699:
 11999                           
 12000                           ; BSR set to: 0
 12001  00CEA8  0100               	movlb	0	; () banked
 12002  00CEAA  5167               	movf	CDCTxService@i& (0+255),w,b
 12003  00CEAC  B4D8               	btfsc	status,2,c
 12004  00CEAE  D021               	goto	u7570
 12005  00CEB0  D7DF               	goto	l1700
 12006  00CEB2                     
 12007                           ; BSR set to: 0
 12008                           ;usb_device_cdc.c: 911: {
 12009                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 12010                           
 12011                           ; BSR set to: 0
 12012  00CEB2  C135  FFF6         	movff	_pCDCSrc,tblptrl
 12013  00CEB6  C136  FFF7         	movff	_pCDCSrc+1,tblptrh
 12014  00CEBA  6AF8               	clrf	tblptru,c
 12015  00CEBC  C132  FFD9         	movff	_pCDCDst,fsr2l
 12016  00CEC0  C133  FFDA         	movff	_pCDCDst+1,fsr2h
 12017  00CEC4  0E0E               	movlw	(high __ramtop+-1)
 12018  00CEC6  64F7               	cpfsgt	tblptrh,c
 12019  00CEC8  D003               	bra	u7567
 12020  00CECA  0008               	tblrd		*
 12021  00CECC  50F5               	movf	tablat,w,c
 12022  00CECE  D005               	bra	u7560
 12023  00CED0                     u7567:
 12024  00CED0  CFF6 FFE9          	movff	tblptrl,fsr0l
 12025  00CED4  CFF7 FFEA          	movff	tblptrh,fsr0h
 12026  00CED8  50EF               	movf	indf0,w,c
 12027  00CEDA                     u7560:
 12028  00CEDA  6EDF               	movwf	indf2,c
 12029                           
 12030                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 12031  00CEDC  0101               	movlb	1	; () banked
 12032  00CEDE  4B32               	infsnz	_pCDCDst& (0+255),f,b
 12033  00CEE0  2B33               	incf	(_pCDCDst+1)& (0+255),f,b
 12034                           
 12035                           ; BSR set to: 1
 12036                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 12037  00CEE2  4B35               	infsnz	_pCDCSrc& (0+255),f,b
 12038  00CEE4  2B36               	incf	(_pCDCSrc+1)& (0+255),f,b
 12039                           
 12040                           ; BSR set to: 1
 12041                           ;usb_device_cdc.c: 915: i--;
 12042  00CEE6  0100               	movlb	0	; () banked
 12043  00CEE8  0767               	decf	CDCTxService@i& (0+255),f,b
 12044  00CEEA                     l1703:
 12045                           
 12046                           ; BSR set to: 0
 12047  00CEEA  0100               	movlb	0	; () banked
 12048  00CEEC  5167               	movf	CDCTxService@i& (0+255),w,b
 12049  00CEEE  A4D8               	btfss	status,2,c
 12050  00CEF0  D7E0               	goto	l1704
 12051  00CEF2                     u7570:
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;usb_device_cdc.c: 916: }
 12055                           ;usb_device_cdc.c: 917: }
 12056                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 12057                           
 12058                           ; BSR set to: 0
 12059                           
 12060                           ; BSR set to: 0
 12061  00CEF2  5046               	movf	_cdc_tx_len,w,c
 12062  00CEF4  A4D8               	btfss	status,2,c
 12063  00CEF6  D008               	goto	l1708
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;usb_device_cdc.c: 924: {
 12067                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 12068  00CEF8  0E40               	movlw	64
 12069  00CEFA  1968               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 12070  00CEFC  A4D8               	btfss	status,2,c
 12071  00CEFE  D002               	goto	l1707
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 12075  00CF00  0E02               	movlw	2
 12076  00CF02  D001               	goto	L13
 12077  00CF04                     l1707:
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;usb_device_cdc.c: 927: else
 12081                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 12082                           
 12083                           ; BSR set to: 0
 12084  00CF04  0E03               	movlw	3
 12085  00CF06                     L13:
 12086  00CF06  6FFB               	movwf	_cdc_trf_state& (0+255),b
 12087  00CF08                     l1708:
 12088                           
 12089                           ; BSR set to: 0
 12090                           ;usb_device_cdc.c: 929: }
 12091                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 12092                           
 12093                           ; BSR set to: 0
 12094                           
 12095                           ; BSR set to: 0
 12096  00CF08  0E01               	movlw	1
 12097  00CF0A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12098  00CF0C  0EA4               	movlw	low _cdc_data_tx
 12099  00CF0E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12100  00CF10  0E04               	movlw	high _cdc_data_tx
 12101  00CF12  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12102  00CF14  C068  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 12103  00CF18  0E02               	movlw	2
 12104  00CF1A  ECA7  F05E         	call	_USBTransferOnePacket
 12105  00CF1E  C060  F140         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12106  00CF22  C061  F141         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12107  00CF26  0012               	return	
 12108  00CF28                     __end_of_CDCTxService:
 12109                           	opt stack 0
 12110                           tosu	equ	0xFFF
 12111                           tosh	equ	0xFFE
 12112                           tosl	equ	0xFFD
 12113                           pclath	equ	0xFFA
 12114                           tblptru	equ	0xFF8
 12115                           tblptrh	equ	0xFF7
 12116                           tblptrl	equ	0xFF6
 12117                           tablat	equ	0xFF5
 12118                           prodh	equ	0xFF4
 12119                           prodl	equ	0xFF3
 12120                           intcon	equ	0xFF2
 12121                           intcon2	equ	0xFF1
 12122                           intcon3	equ	0xFF0
 12123                           indf0	equ	0xFEF
 12124                           postinc0	equ	0xFEE
 12125                           plusw0	equ	0xFEB
 12126                           fsr0h	equ	0xFEA
 12127                           fsr0l	equ	0xFE9
 12128                           wreg	equ	0xFE8
 12129                           indf1	equ	0xFE7
 12130                           postinc1	equ	0xFE6
 12131                           postdec1	equ	0xFE5
 12132                           fsr1h	equ	0xFE2
 12133                           fsr1l	equ	0xFE1
 12134                           indf2	equ	0xFDF
 12135                           postinc2	equ	0xFDE
 12136                           postdec2	equ	0xFDD
 12137                           plusw2	equ	0xFDB
 12138                           fsr2h	equ	0xFDA
 12139                           fsr2l	equ	0xFD9
 12140                           status	equ	0xFD8
 12141                           
 12142 ;; *************** function _Term_MainSm *****************
 12143 ;; Defined at:
 12144 ;;		line 669 in file "../Source/c/03_Sml/02_Ssl/term.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;		None
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;  Data           50   32[BANK0 ] unsigned char [50]
 12149 ;;  FwkBuildYear    4  102[BANK0 ] unsigned char [4]
 12150 ;;  FwkBuildMont    4   98[BANK0 ] unsigned char [4]
 12151 ;;  FwkBuildDayS    4   94[BANK0 ] unsigned char [4]
 12152 ;;  FwkBuildStr     4   90[BANK0 ] unsigned char [4]
 12153 ;;  FwkMinorStr     4   86[BANK0 ] unsigned char [4]
 12154 ;;  FwkMajorStr     4   82[BANK0 ] unsigned char [4]
 12155 ;; Return value:  Size  Location     Type
 12156 ;;                  1    wreg      void 
 12157 ;; Registers used:
 12158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12159 ;; Tracked objects:
 12160 ;;		On entry : 0/0
 12161 ;;		On exit  : 0/0
 12162 ;;		Unchanged: 0/0
 12163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12165 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12167 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12168 ;;Total ram usage:       74 bytes
 12169 ;; Hardware stack levels used:    1
 12170 ;; Hardware stack levels required when called:   15
 12171 ;; This function calls:
 12172 ;;		_OsTmr_GetTimerStatus
 12173 ;;		_OsTmr_StartTimer
 12174 ;;		_Terminal
 12175 ;;		_memset
 12176 ;;		_putUSBUSART
 12177 ;;		_strcat
 12178 ;;		_strcpy
 12179 ;;		_strlen
 12180 ;;		_utoa
 12181 ;; This function is called by:
 12182 ;;		_Term_MainTask
 12183 ;; This function uses a non-reentrant model
 12184 ;;
 12185                           
 12186                           	psect	text52
 12187  00E4D6                     __ptext52:
 12188                           	opt stack 0
 12189  00E4D6                     _Term_MainSm:
 12190                           	opt stack 12
 12191                           
 12192                           ;term.c: 671: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 12193                           ;term.c: 672: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, };
 12194                           ;term.c: 673: UINT8 Data[50];
 12195                           ;term.c: 674: UINT8 FwkMajorStr[4];
 12196                           ;term.c: 675: UINT8 FwkMinorStr[4];
 12197                           ;term.c: 676: UINT8 FwkBuildStr[4];
 12198                           ;term.c: 677: UINT8 FwkBuildDayStr[4];
 12199                           ;term.c: 678: UINT8 FwkBuildMonthStr[4];
 12200                           ;term.c: 679: UINT8 FwkBuildYearStr[4];
 12201                           ;term.c: 681: switch (TermMainSmState)
 12202                           
 12203                           ;incstack = 0
 12204  00E4D6  D1DA               	goto	l2088
 12205  00E4D8                     
 12206                           ;term.c: 685: OsTmr_StartTimer(&TermDelay,2000);
 12207  00E4D8  0EE2               	movlw	low Term_MainSm@TermDelay
 12208  00E4DA  0100               	movlb	0	; () banked
 12209  00E4DC  6F64               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 12210  00E4DE  0E01               	movlw	high Term_MainSm@TermDelay
 12211  00E4E0  6F65               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 12212  00E4E2  0ED0               	movlw	208
 12213  00E4E4  6F66               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 12214  00E4E6  0E07               	movlw	7
 12215  00E4E8  6F67               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 12216  00E4EA  0E00               	movlw	0
 12217  00E4EC  6F68               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 12218  00E4EE  0E00               	movlw	0
 12219  00E4F0  6F69               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 12220  00E4F2  EC32  F056         	call	_OsTmr_StartTimer	;wreg free
 12221                           
 12222                           ;term.c: 687: TermMainSmState = Term_InitDelay;
 12223  00E4F6  0E01               	movlw	1
 12224  00E4F8  0101               	movlb	1	; () banked
 12225  00E4FA  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12226                           
 12227                           ;term.c: 688: break;
 12228  00E4FC  0012               	return	
 12229  00E4FE                     
 12230                           ; BSR set to: 1
 12231                           ;term.c: 692: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 12232                           
 12233                           ; BSR set to: 1
 12234  00E4FE  0EE2               	movlw	low Term_MainSm@TermDelay
 12235  00E500  0100               	movlb	0	; () banked
 12236  00E502  6F78               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 12237  00E504  0E01               	movlw	high Term_MainSm@TermDelay
 12238  00E506  6F79               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 12239  00E508  EC48  F05A         	call	_OsTmr_GetTimerStatus	;wreg free
 12240  00E50C  06E8               	decf	wreg,f,c
 12241  00E50E  A4D8               	btfss	status,2,c
 12242  00E510  0012               	return	
 12243                           
 12244                           ;term.c: 693: {
 12245                           ;term.c: 695: TermMainSmState = Term_InitState;
 12246  00E512  0E02               	movlw	2
 12247  00E514  0101               	movlb	1	; () banked
 12248  00E516  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12249                           
 12250                           ; BSR set to: 1
 12251                           ;term.c: 696: }
 12252                           ;term.c: 697: break;
 12253  00E518  0012               	return	
 12254  00E51A                     
 12255                           ; BSR set to: 1
 12256                           ;term.c: 701: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 12257                           
 12258                           ; BSR set to: 1
 12259  00E51A  0E1F               	movlw	31
 12260  00E51C  0100               	movlb	0	; () banked
 12261  00E51E  65FD               	cpfsgt	_USBDeviceState& (0+255),b
 12262  00E520  0012               	return	
 12263                           
 12264                           ; BSR set to: 0
 12265  00E522  B265               	btfsc	3941,1,c	;volatile
 12266  00E524  0012               	return	
 12267                           
 12268                           ; BSR set to: 0
 12269                           ;term.c: 705: else
 12270                           ;term.c: 706: {
 12271                           ;term.c: 708: TermMainSmState = Term_WelcomeState;
 12272                           
 12273                           ; BSR set to: 0
 12274                           
 12275                           ; BSR set to: 0
 12276                           ;term.c: 702: {
 12277                           ;term.c: 704: }
 12278  00E526  0E03               	movlw	3
 12279  00E528  0101               	movlb	1	; () banked
 12280  00E52A  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12281                           
 12282                           ; BSR set to: 1
 12283                           ;term.c: 709: }
 12284                           ;term.c: 710: break;
 12285  00E52C  0012               	return	
 12286  00E52E                     
 12287                           ; BSR set to: 1
 12288                           ;term.c: 714: if((cdc_trf_state == 0))
 12289                           
 12290                           ; BSR set to: 1
 12291  00E52E  0100               	movlb	0	; () banked
 12292  00E530  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12293  00E532  A4D8               	btfss	status,2,c
 12294  00E534  0012               	return	
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;term.c: 715: {
 12298                           ;term.c: 717: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 12299  00E536  0ED3               	movlw	low _Welcome
 12300  00E538  6F66               	movwf	putUSBUSART@data& (0+255),b
 12301  00E53A  0EED               	movlw	high _Welcome
 12302  00E53C  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12303  00E53E  0E88               	movlw	136
 12304  00E540  6F68               	movwf	putUSBUSART@length& (0+255),b
 12305  00E542  ECC8  F050         	call	_putUSBUSART	;wreg free
 12306                           
 12307                           ;term.c: 719: TermMainSmState = Term_InstDescState;
 12308  00E546  0E04               	movlw	4
 12309  00E548  0101               	movlb	1	; () banked
 12310  00E54A  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12311                           
 12312                           ; BSR set to: 1
 12313                           ;term.c: 720: }
 12314                           ;term.c: 721: break;
 12315  00E54C  0012               	return	
 12316  00E54E                     
 12317                           ; BSR set to: 1
 12318                           ;term.c: 725: if((cdc_trf_state == 0))
 12319                           
 12320                           ; BSR set to: 1
 12321  00E54E  0100               	movlb	0	; () banked
 12322  00E550  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12323  00E552  A4D8               	btfss	status,2,c
 12324  00E554  0012               	return	
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;term.c: 726: {
 12328                           ;term.c: 728: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 12329  00E556  0EE7               	movlw	low _MsgFormat
 12330  00E558  6F66               	movwf	putUSBUSART@data& (0+255),b
 12331  00E55A  0EEC               	movlw	high _MsgFormat
 12332  00E55C  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12333  00E55E  0EEB               	movlw	235
 12334  00E560  6F68               	movwf	putUSBUSART@length& (0+255),b
 12335  00E562  ECC8  F050         	call	_putUSBUSART	;wreg free
 12336                           
 12337                           ;term.c: 730: TermMainSmState = Term_FwkVerState;
 12338  00E566  0E05               	movlw	5
 12339  00E568  0101               	movlb	1	; () banked
 12340  00E56A  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12341                           
 12342                           ; BSR set to: 1
 12343                           ;term.c: 731: }
 12344                           ;term.c: 732: break;
 12345  00E56C  0012               	return	
 12346  00E56E                     
 12347                           ; BSR set to: 1
 12348                           ;term.c: 736: if((cdc_trf_state == 0))
 12349                           
 12350                           ; BSR set to: 1
 12351  00E56E  0100               	movlb	0	; () banked
 12352  00E570  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12353  00E572  A4D8               	btfss	status,2,c
 12354  00E574  0012               	return	
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;term.c: 737: {
 12358                           ;term.c: 739: memset(Data,0,50);
 12359  00E576  0E80               	movlw	low Term_MainSm@Data
 12360  00E578  6F60               	movwf	memset@p1& (0+255),b
 12361  00E57A  0E00               	movlw	high Term_MainSm@Data
 12362  00E57C  6F61               	movwf	(memset@p1+1)& (0+255),b
 12363  00E57E  0E00               	movlw	0
 12364  00E580  6F63               	movwf	(memset@c+1)& (0+255),b
 12365  00E582  0E00               	movlw	0
 12366  00E584  6F62               	movwf	memset@c& (0+255),b
 12367  00E586  0E00               	movlw	0
 12368  00E588  6F65               	movwf	(memset@n+1)& (0+255),b
 12369  00E58A  0E32               	movlw	50
 12370  00E58C  6F64               	movwf	memset@n& (0+255),b
 12371  00E58E  ECCD  F051         	call	_memset	;wreg free
 12372                           
 12373                           ;term.c: 741: utoa(FwkMajorStr,1,10);
 12374  00E592  0EB2               	movlw	low Term_MainSm@FwkMajorStr
 12375  00E594  0100               	movlb	0	; () banked
 12376  00E596  6F67               	movwf	utoa@buf& (0+255),b
 12377  00E598  0E00               	movlw	high Term_MainSm@FwkMajorStr
 12378  00E59A  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12379  00E59C  0E00               	movlw	0
 12380  00E59E  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12381  00E5A0  0E01               	movlw	1
 12382  00E5A2  6F69               	movwf	utoa@val& (0+255),b
 12383  00E5A4  0E00               	movlw	0
 12384  00E5A6  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12385  00E5A8  0E0A               	movlw	10
 12386  00E5AA  6F6B               	movwf	utoa@base& (0+255),b
 12387  00E5AC  ECF3  F05C         	call	_utoa	;wreg free
 12388                           
 12389                           ;term.c: 742: utoa(FwkMinorStr,0,10);
 12390  00E5B0  0EB6               	movlw	low Term_MainSm@FwkMinorStr
 12391  00E5B2  0100               	movlb	0	; () banked
 12392  00E5B4  6F67               	movwf	utoa@buf& (0+255),b
 12393  00E5B6  0E00               	movlw	high Term_MainSm@FwkMinorStr
 12394  00E5B8  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12395  00E5BA  0E00               	movlw	0
 12396  00E5BC  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12397  00E5BE  0E00               	movlw	0
 12398  00E5C0  6F69               	movwf	utoa@val& (0+255),b
 12399  00E5C2  0E00               	movlw	0
 12400  00E5C4  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12401  00E5C6  0E0A               	movlw	10
 12402  00E5C8  6F6B               	movwf	utoa@base& (0+255),b
 12403  00E5CA  ECF3  F05C         	call	_utoa	;wreg free
 12404                           
 12405                           ;term.c: 743: utoa(FwkBuildStr,0,10);
 12406  00E5CE  0EBA               	movlw	low Term_MainSm@FwkBuildStr
 12407  00E5D0  0100               	movlb	0	; () banked
 12408  00E5D2  6F67               	movwf	utoa@buf& (0+255),b
 12409  00E5D4  0E00               	movlw	high Term_MainSm@FwkBuildStr
 12410  00E5D6  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12411  00E5D8  0E00               	movlw	0
 12412  00E5DA  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12413  00E5DC  0E00               	movlw	0
 12414  00E5DE  6F69               	movwf	utoa@val& (0+255),b
 12415  00E5E0  0E00               	movlw	0
 12416  00E5E2  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12417  00E5E4  0E0A               	movlw	10
 12418  00E5E6  6F6B               	movwf	utoa@base& (0+255),b
 12419  00E5E8  ECF3  F05C         	call	_utoa	;wreg free
 12420                           
 12421                           ;term.c: 744: strcpy(Data,"Framework Version: ");
 12422  00E5EC  0E80               	movlw	low Term_MainSm@Data
 12423  00E5EE  0100               	movlb	0	; () banked
 12424  00E5F0  6F60               	movwf	strcpy@to& (0+255),b
 12425  00E5F2  0E00               	movlw	high Term_MainSm@Data
 12426  00E5F4  6F61               	movwf	(strcpy@to+1)& (0+255),b
 12427  00E5F6  0E25               	movlw	low STR_58
 12428  00E5F8  6F62               	movwf	strcpy@from& (0+255),b
 12429  00E5FA  0EEF               	movlw	high STR_58
 12430  00E5FC  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12431  00E5FE  EC00  F054         	call	_strcpy	;wreg free
 12432                           
 12433                           ;term.c: 745: strcat(Data,FwkMajorStr);
 12434  00E602  0E80               	movlw	low Term_MainSm@Data
 12435  00E604  0100               	movlb	0	; () banked
 12436  00E606  6F60               	movwf	strcat@to& (0+255),b
 12437  00E608  0E00               	movlw	high Term_MainSm@Data
 12438  00E60A  6F61               	movwf	(strcat@to+1)& (0+255),b
 12439  00E60C  0EB2               	movlw	low Term_MainSm@FwkMajorStr
 12440  00E60E  6F62               	movwf	strcat@from& (0+255),b
 12441  00E610  0E00               	movlw	high Term_MainSm@FwkMajorStr
 12442  00E612  6F63               	movwf	(strcat@from+1)& (0+255),b
 12443  00E614  5162               	movf	strcat@from& (0+255),w,b
 12444  00E616  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12445  00E618  A4D8               	btfss	status,2,c
 12446  00E61A  0E20               	movlw	32
 12447  00E61C  6F64               	movwf	(strcat@from+2)& (0+255),b
 12448  00E61E  ECC1  F056         	call	_strcat	;wreg free
 12449                           
 12450                           ;term.c: 746: strcat(Data,".");
 12451  00E622  0E80               	movlw	low Term_MainSm@Data
 12452  00E624  0100               	movlb	0	; () banked
 12453  00E626  6F60               	movwf	strcat@to& (0+255),b
 12454  00E628  0E00               	movlw	high Term_MainSm@Data
 12455  00E62A  6F61               	movwf	(strcat@to+1)& (0+255),b
 12456  00E62C  0EF1               	movlw	low STR_59
 12457  00E62E  6F62               	movwf	strcat@from& (0+255),b
 12458  00E630  0EEF               	movlw	high STR_59
 12459  00E632  6F63               	movwf	(strcat@from+1)& (0+255),b
 12460  00E634  5162               	movf	strcat@from& (0+255),w,b
 12461  00E636  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12462  00E638  A4D8               	btfss	status,2,c
 12463  00E63A  0E00               	movlw	low (__mediumconst shr (0+16))
 12464  00E63C  6F64               	movwf	(strcat@from+2)& (0+255),b
 12465  00E63E  ECC1  F056         	call	_strcat	;wreg free
 12466                           
 12467                           ;term.c: 747: strcat(Data,FwkMinorStr);
 12468  00E642  0E80               	movlw	low Term_MainSm@Data
 12469  00E644  0100               	movlb	0	; () banked
 12470  00E646  6F60               	movwf	strcat@to& (0+255),b
 12471  00E648  0E00               	movlw	high Term_MainSm@Data
 12472  00E64A  6F61               	movwf	(strcat@to+1)& (0+255),b
 12473  00E64C  0EB6               	movlw	low Term_MainSm@FwkMinorStr
 12474  00E64E  6F62               	movwf	strcat@from& (0+255),b
 12475  00E650  0E00               	movlw	high Term_MainSm@FwkMinorStr
 12476  00E652  6F63               	movwf	(strcat@from+1)& (0+255),b
 12477  00E654  5162               	movf	strcat@from& (0+255),w,b
 12478  00E656  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12479  00E658  A4D8               	btfss	status,2,c
 12480  00E65A  0E20               	movlw	32
 12481  00E65C  6F64               	movwf	(strcat@from+2)& (0+255),b
 12482  00E65E  ECC1  F056         	call	_strcat	;wreg free
 12483                           
 12484                           ;term.c: 748: strcat(Data,".");
 12485  00E662  0E80               	movlw	low Term_MainSm@Data
 12486  00E664  0100               	movlb	0	; () banked
 12487  00E666  6F60               	movwf	strcat@to& (0+255),b
 12488  00E668  0E00               	movlw	high Term_MainSm@Data
 12489  00E66A  6F61               	movwf	(strcat@to+1)& (0+255),b
 12490  00E66C  0EF1               	movlw	low STR_59
 12491  00E66E  6F62               	movwf	strcat@from& (0+255),b
 12492  00E670  0EEF               	movlw	high STR_59
 12493  00E672  6F63               	movwf	(strcat@from+1)& (0+255),b
 12494  00E674  5162               	movf	strcat@from& (0+255),w,b
 12495  00E676  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12496  00E678  A4D8               	btfss	status,2,c
 12497  00E67A  0E00               	movlw	low (__mediumconst shr (0+16))
 12498  00E67C  6F64               	movwf	(strcat@from+2)& (0+255),b
 12499  00E67E  ECC1  F056         	call	_strcat	;wreg free
 12500                           
 12501                           ;term.c: 749: strcat(Data,FwkBuildStr);
 12502  00E682  0E80               	movlw	low Term_MainSm@Data
 12503  00E684  0100               	movlb	0	; () banked
 12504  00E686  6F60               	movwf	strcat@to& (0+255),b
 12505  00E688  0E00               	movlw	high Term_MainSm@Data
 12506  00E68A  6F61               	movwf	(strcat@to+1)& (0+255),b
 12507  00E68C  0EBA               	movlw	low Term_MainSm@FwkBuildStr
 12508  00E68E  6F62               	movwf	strcat@from& (0+255),b
 12509  00E690  0E00               	movlw	high Term_MainSm@FwkBuildStr
 12510  00E692  6F63               	movwf	(strcat@from+1)& (0+255),b
 12511  00E694  5162               	movf	strcat@from& (0+255),w,b
 12512  00E696  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12513  00E698  A4D8               	btfss	status,2,c
 12514  00E69A  0E20               	movlw	32
 12515  00E69C  6F64               	movwf	(strcat@from+2)& (0+255),b
 12516  00E69E  ECC1  F056         	call	_strcat	;wreg free
 12517                           
 12518                           ;term.c: 750: strcat(Data,"\r\n");
 12519  00E6A2  0E80               	movlw	low Term_MainSm@Data
 12520  00E6A4  0100               	movlb	0	; () banked
 12521  00E6A6  6F60               	movwf	strcat@to& (0+255),b
 12522  00E6A8  0E00               	movlw	high Term_MainSm@Data
 12523  00E6AA  6F61               	movwf	(strcat@to+1)& (0+255),b
 12524  00E6AC  0E8D               	movlw	low (STR_31+8)
 12525  00E6AE  6F62               	movwf	strcat@from& (0+255),b
 12526  00E6B0  0EEF               	movlw	high (STR_31+8)
 12527  00E6B2  6F63               	movwf	(strcat@from+1)& (0+255),b
 12528  00E6B4  5162               	movf	strcat@from& (0+255),w,b
 12529  00E6B6  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12530  00E6B8  A4D8               	btfss	status,2,c
 12531  00E6BA  0E00               	movlw	low (__mediumconst shr (0+16))
 12532  00E6BC  6F64               	movwf	(strcat@from+2)& (0+255),b
 12533  00E6BE  ECC1  F056         	call	_strcat	;wreg free
 12534                           
 12535                           ;term.c: 752: putUSBUSART((void*)Data,strlen(Data));
 12536  00E6C2  0E80               	movlw	low Term_MainSm@Data
 12537  00E6C4  0100               	movlb	0	; () banked
 12538  00E6C6  6F66               	movwf	putUSBUSART@data& (0+255),b
 12539  00E6C8  0E00               	movlw	high Term_MainSm@Data
 12540  00E6CA  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12541  00E6CC  0E80               	movlw	low Term_MainSm@Data
 12542  00E6CE  6F60               	movwf	strlen@s& (0+255),b
 12543  00E6D0  0E00               	movlw	high Term_MainSm@Data
 12544  00E6D2  6F61               	movwf	(strlen@s+1)& (0+255),b
 12545  00E6D4  EC83  F055         	call	_strlen	;wreg free
 12546  00E6D8  0100               	movlb	0	; () banked
 12547  00E6DA  5160               	movf	?_strlen& (0+255),w,b
 12548  00E6DC  6F68               	movwf	putUSBUSART@length& (0+255),b
 12549  00E6DE  ECC8  F050         	call	_putUSBUSART	;wreg free
 12550                           
 12551                           ;term.c: 754: TermMainSmState = Term_FwkBuildDateState;
 12552  00E6E2  0E06               	movlw	6
 12553  00E6E4  0101               	movlb	1	; () banked
 12554  00E6E6  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12555                           
 12556                           ; BSR set to: 1
 12557                           ;term.c: 755: }
 12558                           ;term.c: 756: break;
 12559  00E6E8  0012               	return	
 12560  00E6EA                     
 12561                           ; BSR set to: 1
 12562                           ;term.c: 760: if((cdc_trf_state == 0))
 12563                           
 12564                           ; BSR set to: 1
 12565  00E6EA  0100               	movlb	0	; () banked
 12566  00E6EC  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12567  00E6EE  A4D8               	btfss	status,2,c
 12568  00E6F0  0012               	return	
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;term.c: 761: {
 12572                           ;term.c: 763: memset(Data,0,50);
 12573  00E6F2  0E80               	movlw	low Term_MainSm@Data
 12574  00E6F4  6F60               	movwf	memset@p1& (0+255),b
 12575  00E6F6  0E00               	movlw	high Term_MainSm@Data
 12576  00E6F8  6F61               	movwf	(memset@p1+1)& (0+255),b
 12577  00E6FA  0E00               	movlw	0
 12578  00E6FC  6F63               	movwf	(memset@c+1)& (0+255),b
 12579  00E6FE  0E00               	movlw	0
 12580  00E700  6F62               	movwf	memset@c& (0+255),b
 12581  00E702  0E00               	movlw	0
 12582  00E704  6F65               	movwf	(memset@n+1)& (0+255),b
 12583  00E706  0E32               	movlw	50
 12584  00E708  6F64               	movwf	memset@n& (0+255),b
 12585  00E70A  ECCD  F051         	call	_memset	;wreg free
 12586                           
 12587                           ;term.c: 765: utoa(FwkBuildDayStr,07,10);
 12588  00E70E  0EBE               	movlw	low Term_MainSm@FwkBuildDayStr
 12589  00E710  0100               	movlb	0	; () banked
 12590  00E712  6F67               	movwf	utoa@buf& (0+255),b
 12591  00E714  0E00               	movlw	high Term_MainSm@FwkBuildDayStr
 12592  00E716  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12593  00E718  0E00               	movlw	0
 12594  00E71A  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12595  00E71C  0E07               	movlw	7
 12596  00E71E  6F69               	movwf	utoa@val& (0+255),b
 12597  00E720  0E00               	movlw	0
 12598  00E722  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12599  00E724  0E0A               	movlw	10
 12600  00E726  6F6B               	movwf	utoa@base& (0+255),b
 12601  00E728  ECF3  F05C         	call	_utoa	;wreg free
 12602                           
 12603                           ;term.c: 766: utoa(FwkBuildMonthStr,10,10);
 12604  00E72C  0EC2               	movlw	low Term_MainSm@FwkBuildMonthStr
 12605  00E72E  0100               	movlb	0	; () banked
 12606  00E730  6F67               	movwf	utoa@buf& (0+255),b
 12607  00E732  0E00               	movlw	high Term_MainSm@FwkBuildMonthStr
 12608  00E734  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12609  00E736  0E00               	movlw	0
 12610  00E738  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12611  00E73A  0E0A               	movlw	10
 12612  00E73C  6F69               	movwf	utoa@val& (0+255),b
 12613  00E73E  0E00               	movlw	0
 12614  00E740  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12615  00E742  0E0A               	movlw	10
 12616  00E744  6F6B               	movwf	utoa@base& (0+255),b
 12617  00E746  ECF3  F05C         	call	_utoa	;wreg free
 12618                           
 12619                           ;term.c: 767: utoa(FwkBuildYearStr,18,10);
 12620  00E74A  0EC6               	movlw	low Term_MainSm@FwkBuildYearStr
 12621  00E74C  0100               	movlb	0	; () banked
 12622  00E74E  6F67               	movwf	utoa@buf& (0+255),b
 12623  00E750  0E00               	movlw	high Term_MainSm@FwkBuildYearStr
 12624  00E752  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12625  00E754  0E00               	movlw	0
 12626  00E756  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12627  00E758  0E12               	movlw	18
 12628  00E75A  6F69               	movwf	utoa@val& (0+255),b
 12629  00E75C  0E00               	movlw	0
 12630  00E75E  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12631  00E760  0E0A               	movlw	10
 12632  00E762  6F6B               	movwf	utoa@base& (0+255),b
 12633  00E764  ECF3  F05C         	call	_utoa	;wreg free
 12634                           
 12635                           ;term.c: 768: strcpy(Data,"Build Date (d-m-y): ");
 12636  00E768  0E80               	movlw	low Term_MainSm@Data
 12637  00E76A  0100               	movlb	0	; () banked
 12638  00E76C  6F60               	movwf	strcpy@to& (0+255),b
 12639  00E76E  0E00               	movlw	high Term_MainSm@Data
 12640  00E770  6F61               	movwf	(strcpy@to+1)& (0+255),b
 12641  00E772  0E10               	movlw	low STR_62
 12642  00E774  6F62               	movwf	strcpy@from& (0+255),b
 12643  00E776  0EEF               	movlw	high STR_62
 12644  00E778  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12645  00E77A  EC00  F054         	call	_strcpy	;wreg free
 12646                           
 12647                           ;term.c: 769: strcat(Data,FwkBuildDayStr);
 12648  00E77E  0E80               	movlw	low Term_MainSm@Data
 12649  00E780  0100               	movlb	0	; () banked
 12650  00E782  6F60               	movwf	strcat@to& (0+255),b
 12651  00E784  0E00               	movlw	high Term_MainSm@Data
 12652  00E786  6F61               	movwf	(strcat@to+1)& (0+255),b
 12653  00E788  0EBE               	movlw	low Term_MainSm@FwkBuildDayStr
 12654  00E78A  6F62               	movwf	strcat@from& (0+255),b
 12655  00E78C  0E00               	movlw	high Term_MainSm@FwkBuildDayStr
 12656  00E78E  6F63               	movwf	(strcat@from+1)& (0+255),b
 12657  00E790  5162               	movf	strcat@from& (0+255),w,b
 12658  00E792  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12659  00E794  A4D8               	btfss	status,2,c
 12660  00E796  0E20               	movlw	32
 12661  00E798  6F64               	movwf	(strcat@from+2)& (0+255),b
 12662  00E79A  ECC1  F056         	call	_strcat	;wreg free
 12663                           
 12664                           ;term.c: 770: strcat(Data,"-");
 12665  00E79E  0E80               	movlw	low Term_MainSm@Data
 12666  00E7A0  0100               	movlb	0	; () banked
 12667  00E7A2  6F60               	movwf	strcat@to& (0+255),b
 12668  00E7A4  0E00               	movlw	high Term_MainSm@Data
 12669  00E7A6  6F61               	movwf	(strcat@to+1)& (0+255),b
 12670  00E7A8  0EEF               	movlw	low STR_63
 12671  00E7AA  6F62               	movwf	strcat@from& (0+255),b
 12672  00E7AC  0EEF               	movlw	high STR_63
 12673  00E7AE  6F63               	movwf	(strcat@from+1)& (0+255),b
 12674  00E7B0  5162               	movf	strcat@from& (0+255),w,b
 12675  00E7B2  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12676  00E7B4  A4D8               	btfss	status,2,c
 12677  00E7B6  0E00               	movlw	low (__mediumconst shr (0+16))
 12678  00E7B8  6F64               	movwf	(strcat@from+2)& (0+255),b
 12679  00E7BA  ECC1  F056         	call	_strcat	;wreg free
 12680                           
 12681                           ;term.c: 771: strcat(Data,FwkBuildMonthStr);
 12682  00E7BE  0E80               	movlw	low Term_MainSm@Data
 12683  00E7C0  0100               	movlb	0	; () banked
 12684  00E7C2  6F60               	movwf	strcat@to& (0+255),b
 12685  00E7C4  0E00               	movlw	high Term_MainSm@Data
 12686  00E7C6  6F61               	movwf	(strcat@to+1)& (0+255),b
 12687  00E7C8  0EC2               	movlw	low Term_MainSm@FwkBuildMonthStr
 12688  00E7CA  6F62               	movwf	strcat@from& (0+255),b
 12689  00E7CC  0E00               	movlw	high Term_MainSm@FwkBuildMonthStr
 12690  00E7CE  6F63               	movwf	(strcat@from+1)& (0+255),b
 12691  00E7D0  5162               	movf	strcat@from& (0+255),w,b
 12692  00E7D2  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12693  00E7D4  A4D8               	btfss	status,2,c
 12694  00E7D6  0E20               	movlw	32
 12695  00E7D8  6F64               	movwf	(strcat@from+2)& (0+255),b
 12696  00E7DA  ECC1  F056         	call	_strcat	;wreg free
 12697                           
 12698                           ;term.c: 772: strcat(Data,"-");
 12699  00E7DE  0E80               	movlw	low Term_MainSm@Data
 12700  00E7E0  0100               	movlb	0	; () banked
 12701  00E7E2  6F60               	movwf	strcat@to& (0+255),b
 12702  00E7E4  0E00               	movlw	high Term_MainSm@Data
 12703  00E7E6  6F61               	movwf	(strcat@to+1)& (0+255),b
 12704  00E7E8  0EEF               	movlw	low STR_63
 12705  00E7EA  6F62               	movwf	strcat@from& (0+255),b
 12706  00E7EC  0EEF               	movlw	high STR_63
 12707  00E7EE  6F63               	movwf	(strcat@from+1)& (0+255),b
 12708  00E7F0  5162               	movf	strcat@from& (0+255),w,b
 12709  00E7F2  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12710  00E7F4  A4D8               	btfss	status,2,c
 12711  00E7F6  0E00               	movlw	low (__mediumconst shr (0+16))
 12712  00E7F8  6F64               	movwf	(strcat@from+2)& (0+255),b
 12713  00E7FA  ECC1  F056         	call	_strcat	;wreg free
 12714                           
 12715                           ;term.c: 773: strcat(Data,FwkBuildYearStr);
 12716  00E7FE  0E80               	movlw	low Term_MainSm@Data
 12717  00E800  0100               	movlb	0	; () banked
 12718  00E802  6F60               	movwf	strcat@to& (0+255),b
 12719  00E804  0E00               	movlw	high Term_MainSm@Data
 12720  00E806  6F61               	movwf	(strcat@to+1)& (0+255),b
 12721  00E808  0EC6               	movlw	low Term_MainSm@FwkBuildYearStr
 12722  00E80A  6F62               	movwf	strcat@from& (0+255),b
 12723  00E80C  0E00               	movlw	high Term_MainSm@FwkBuildYearStr
 12724  00E80E  6F63               	movwf	(strcat@from+1)& (0+255),b
 12725  00E810  5162               	movf	strcat@from& (0+255),w,b
 12726  00E812  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12727  00E814  A4D8               	btfss	status,2,c
 12728  00E816  0E20               	movlw	32
 12729  00E818  6F64               	movwf	(strcat@from+2)& (0+255),b
 12730  00E81A  ECC1  F056         	call	_strcat	;wreg free
 12731                           
 12732                           ;term.c: 774: strcat(Data,"\r\n");
 12733  00E81E  0E80               	movlw	low Term_MainSm@Data
 12734  00E820  0100               	movlb	0	; () banked
 12735  00E822  6F60               	movwf	strcat@to& (0+255),b
 12736  00E824  0E00               	movlw	high Term_MainSm@Data
 12737  00E826  6F61               	movwf	(strcat@to+1)& (0+255),b
 12738  00E828  0E8D               	movlw	low (STR_31+8)
 12739  00E82A  6F62               	movwf	strcat@from& (0+255),b
 12740  00E82C  0EEF               	movlw	high (STR_31+8)
 12741  00E82E  6F63               	movwf	(strcat@from+1)& (0+255),b
 12742  00E830  5162               	movf	strcat@from& (0+255),w,b
 12743  00E832  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12744  00E834  A4D8               	btfss	status,2,c
 12745  00E836  0E00               	movlw	low (__mediumconst shr (0+16))
 12746  00E838  6F64               	movwf	(strcat@from+2)& (0+255),b
 12747  00E83A  ECC1  F056         	call	_strcat	;wreg free
 12748                           
 12749                           ;term.c: 776: putUSBUSART((void*)Data,strlen(Data));
 12750  00E83E  0E80               	movlw	low Term_MainSm@Data
 12751  00E840  0100               	movlb	0	; () banked
 12752  00E842  6F66               	movwf	putUSBUSART@data& (0+255),b
 12753  00E844  0E00               	movlw	high Term_MainSm@Data
 12754  00E846  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12755  00E848  0E80               	movlw	low Term_MainSm@Data
 12756  00E84A  6F60               	movwf	strlen@s& (0+255),b
 12757  00E84C  0E00               	movlw	high Term_MainSm@Data
 12758  00E84E  6F61               	movwf	(strlen@s+1)& (0+255),b
 12759  00E850  EC83  F055         	call	_strlen	;wreg free
 12760  00E854  0100               	movlb	0	; () banked
 12761  00E856  5160               	movf	?_strlen& (0+255),w,b
 12762  00E858  6F68               	movwf	putUSBUSART@length& (0+255),b
 12763  00E85A  ECC8  F050         	call	_putUSBUSART	;wreg free
 12764                           
 12765                           ;term.c: 778: TermMainSmState = Term_SysInitState;
 12766  00E85E  0E07               	movlw	7
 12767  00E860  0101               	movlb	1	; () banked
 12768  00E862  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12769                           
 12770                           ; BSR set to: 1
 12771                           ;term.c: 779: }
 12772                           ;term.c: 780: break;
 12773  00E864  0012               	return	
 12774  00E866                     
 12775                           ; BSR set to: 1
 12776                           ;term.c: 784: if((cdc_trf_state == 0))
 12777                           
 12778                           ; BSR set to: 1
 12779  00E866  0100               	movlb	0	; () banked
 12780  00E868  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12781  00E86A  A4D8               	btfss	status,2,c
 12782  00E86C  0012               	return	
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;term.c: 785: {
 12786                           ;term.c: 787: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 12787  00E86E  0EE3               	movlw	low _MsgReady
 12788  00E870  6F66               	movwf	putUSBUSART@data& (0+255),b
 12789  00E872  0EEE               	movlw	high _MsgReady
 12790  00E874  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12791  00E876  0E16               	movlw	22
 12792  00E878  6F68               	movwf	putUSBUSART@length& (0+255),b
 12793  00E87A  ECC8  F050         	call	_putUSBUSART	;wreg free
 12794                           
 12795                           ;term.c: 789: TermMainSmState = Term_FinalState;
 12796  00E87E  0E08               	movlw	8
 12797  00E880  0101               	movlb	1	; () banked
 12798  00E882  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12799                           
 12800                           ; BSR set to: 1
 12801                           ;term.c: 790: }
 12802                           ;term.c: 791: break;
 12803  00E884  0012               	return	
 12804  00E886                     
 12805                           ; BSR set to: 1
 12806                           ;term.c: 795: Terminal();
 12807                           
 12808                           ; BSR set to: 1
 12809  00E886  EC64  F074         	call	_Terminal	;wreg free
 12810                           
 12811                           ;term.c: 800: }
 12812                           
 12813                           ;term.c: 799: break;
 12814                           
 12815                           ;term.c: 798: default:
 12816                           
 12817                           ;term.c: 796: break;
 12818  00E88A  0012               	return	
 12819  00E88C                     l2088:
 12820  00E88C  0101               	movlb	1	; () banked
 12821  00E88E  5156               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 12822                           
 12823                           ; Switch size 1, requested type "space"
 12824                           ; Number of cases is 9, Range of values is 0 to 8
 12825                           ; switch strategies available:
 12826                           ; Name         Instructions Cycles
 12827                           ; simple_byte           28    15 (average)
 12828                           ;	Chosen strategy is simple_byte
 12829  00E890  0A00               	xorlw	0	; case 0
 12830  00E892  B4D8               	btfsc	status,2,c
 12831  00E894  D621               	goto	l2089
 12832  00E896  0A01               	xorlw	1	; case 1
 12833  00E898  B4D8               	btfsc	status,2,c
 12834  00E89A  D631               	goto	l2091
 12835  00E89C  0A03               	xorlw	3	; case 2
 12836  00E89E  B4D8               	btfsc	status,2,c
 12837  00E8A0  D63C               	goto	l2093
 12838  00E8A2  0A01               	xorlw	1	; case 3
 12839  00E8A4  B4D8               	btfsc	status,2,c
 12840  00E8A6  D643               	goto	l2098
 12841  00E8A8  0A07               	xorlw	7	; case 4
 12842  00E8AA  B4D8               	btfsc	status,2,c
 12843  00E8AC  D650               	goto	l2100
 12844  00E8AE  0A01               	xorlw	1	; case 5
 12845  00E8B0  B4D8               	btfsc	status,2,c
 12846  00E8B2  D65D               	goto	l2102
 12847  00E8B4  0A03               	xorlw	3	; case 6
 12848  00E8B6  B4D8               	btfsc	status,2,c
 12849  00E8B8  D718               	goto	l2104
 12850  00E8BA  0A01               	xorlw	1	; case 7
 12851  00E8BC  B4D8               	btfsc	status,2,c
 12852  00E8BE  D7D3               	goto	l2106
 12853  00E8C0  0A0F               	xorlw	15	; case 8
 12854  00E8C2  A4D8               	btfss	status,2,c
 12855  00E8C4  0012               	return	
 12856  00E8C6  D7DF               	goto	l2108
 12857  00E8C8                     __end_of_Term_MainSm:
 12858                           	opt stack 0
 12859                           tosu	equ	0xFFF
 12860                           tosh	equ	0xFFE
 12861                           tosl	equ	0xFFD
 12862                           pclath	equ	0xFFA
 12863                           tblptru	equ	0xFF8
 12864                           tblptrh	equ	0xFF7
 12865                           tblptrl	equ	0xFF6
 12866                           tablat	equ	0xFF5
 12867                           prodh	equ	0xFF4
 12868                           prodl	equ	0xFF3
 12869                           intcon	equ	0xFF2
 12870                           intcon2	equ	0xFF1
 12871                           intcon3	equ	0xFF0
 12872                           indf0	equ	0xFEF
 12873                           postinc0	equ	0xFEE
 12874                           plusw0	equ	0xFEB
 12875                           fsr0h	equ	0xFEA
 12876                           fsr0l	equ	0xFE9
 12877                           wreg	equ	0xFE8
 12878                           indf1	equ	0xFE7
 12879                           postinc1	equ	0xFE6
 12880                           postdec1	equ	0xFE5
 12881                           fsr1h	equ	0xFE2
 12882                           fsr1l	equ	0xFE1
 12883                           indf2	equ	0xFDF
 12884                           postinc2	equ	0xFDE
 12885                           postdec2	equ	0xFDD
 12886                           plusw2	equ	0xFDB
 12887                           fsr2h	equ	0xFDA
 12888                           fsr2l	equ	0xFD9
 12889                           status	equ	0xFD8
 12890                           
 12891 ;; *************** function _memset *****************
 12892 ;; Defined at:
 12893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;  p1              2    0[BANK0 ] PTR void 
 12896 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12897 ;;  c               2    2[BANK0 ] int 
 12898 ;;  n               2    4[BANK0 ] unsigned int 
 12899 ;; Auto vars:     Size  Location     Type
 12900 ;;  p               2    6[BANK0 ] PTR unsigned char 
 12901 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12902 ;; Return value:  Size  Location     Type
 12903 ;;                  2    0[BANK0 ] PTR void 
 12904 ;; Registers used:
 12905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12906 ;; Tracked objects:
 12907 ;;		On entry : 0/0
 12908 ;;		On exit  : 0/0
 12909 ;;		Unchanged: 0/0
 12910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12911 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12912 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12914 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12915 ;;Total ram usage:        8 bytes
 12916 ;; Hardware stack levels used:    1
 12917 ;; Hardware stack levels required when called:   11
 12918 ;; This function calls:
 12919 ;;		Nothing
 12920 ;; This function is called by:
 12921 ;;		_USBDeviceInit
 12922 ;;		_USBStdSetCfgHandler
 12923 ;;		_Term_MainSm
 12924 ;; This function uses a non-reentrant model
 12925 ;;
 12926                           
 12927                           	psect	text53
 12928  00A39A                     __ptext53:
 12929                           	opt stack 0
 12930  00A39A                     _memset:
 12931                           	opt stack 14
 12932                           
 12933                           ;incstack = 0
 12934  00A39A  C060  F066         	movff	memset@p1,memset@p
 12935  00A39E  C061  F067         	movff	memset@p1+1,memset@p+1
 12936  00A3A2  D009               	goto	l2586
 12937  00A3A4                     l6490:
 12938  00A3A4  C066  FFD9         	movff	memset@p,fsr2l
 12939  00A3A8  C067  FFDA         	movff	memset@p+1,fsr2h
 12940  00A3AC  C062  FFDF         	movff	memset@c,indf2
 12941  00A3B0  0100               	movlb	0	; () banked
 12942  00A3B2  4B66               	infsnz	memset@p& (0+255),f,b
 12943  00A3B4  2B67               	incf	(memset@p+1)& (0+255),f,b
 12944  00A3B6                     l2586:
 12945                           
 12946                           ; BSR set to: 0
 12947  00A3B6  0100               	movlb	0	; () banked
 12948  00A3B8  0764               	decf	memset@n& (0+255),f,b
 12949  00A3BA  A0D8               	btfss	status,0,c
 12950  00A3BC  0765               	decf	(memset@n+1)& (0+255),f,b
 12951  00A3BE  2964               	incf	memset@n& (0+255),w,b
 12952  00A3C0  E1F1               	bnz	l6490
 12953  00A3C2  2965               	incf	(memset@n+1)& (0+255),w,b
 12954  00A3C4  B4D8               	btfsc	status,2,c
 12955  00A3C6  0012               	return	
 12956  00A3C8  D7ED               	goto	l2587
 12957  00A3CA                     __end_of_memset:
 12958                           	opt stack 0
 12959                           tosu	equ	0xFFF
 12960                           tosh	equ	0xFFE
 12961                           tosl	equ	0xFFD
 12962                           pclath	equ	0xFFA
 12963                           tblptru	equ	0xFF8
 12964                           tblptrh	equ	0xFF7
 12965                           tblptrl	equ	0xFF6
 12966                           tablat	equ	0xFF5
 12967                           prodh	equ	0xFF4
 12968                           prodl	equ	0xFF3
 12969                           intcon	equ	0xFF2
 12970                           intcon2	equ	0xFF1
 12971                           intcon3	equ	0xFF0
 12972                           indf0	equ	0xFEF
 12973                           postinc0	equ	0xFEE
 12974                           plusw0	equ	0xFEB
 12975                           fsr0h	equ	0xFEA
 12976                           fsr0l	equ	0xFE9
 12977                           wreg	equ	0xFE8
 12978                           indf1	equ	0xFE7
 12979                           postinc1	equ	0xFE6
 12980                           postdec1	equ	0xFE5
 12981                           fsr1h	equ	0xFE2
 12982                           fsr1l	equ	0xFE1
 12983                           indf2	equ	0xFDF
 12984                           postinc2	equ	0xFDE
 12985                           postdec2	equ	0xFDD
 12986                           plusw2	equ	0xFDB
 12987                           fsr2h	equ	0xFDA
 12988                           fsr2l	equ	0xFD9
 12989                           status	equ	0xFD8
 12990                           
 12991 ;; *************** function _Terminal *****************
 12992 ;; Defined at:
 12993 ;;		line 416 in file "../Source/c/03_Sml/02_Ssl/term.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;		None
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;  Index           1   31[BANK0 ] unsigned char 
 12998 ;;  ReceivedByte    1   30[BANK0 ] unsigned char 
 12999 ;; Return value:  Size  Location     Type
 13000 ;;                  1    wreg      void 
 13001 ;; Registers used:
 13002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13003 ;; Tracked objects:
 13004 ;;		On entry : 0/0
 13005 ;;		On exit  : 0/0
 13006 ;;		Unchanged: 0/0
 13007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13009 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13011 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13012 ;;Total ram usage:        4 bytes
 13013 ;; Hardware stack levels used:    1
 13014 ;; Hardware stack levels required when called:   14
 13015 ;; This function calls:
 13016 ;;		_I2cSlv_I2cReadMsgSts
 13017 ;;		_I2cSlv_ReceiveI2cMsg
 13018 ;;		_I2cSlv_SendI2cMsg
 13019 ;;		_atoi
 13020 ;;		_getsUSBUSART
 13021 ;;		_itoa
 13022 ;;		_putUSBUSART
 13023 ;;		_strtol
 13024 ;; This function is called by:
 13025 ;;		_Term_MainSm
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029                           	psect	text54
 13030  00E8C8                     __ptext54:
 13031                           	opt stack 0
 13032  00E8C8                     _Terminal:
 13033                           	opt stack 12
 13034                           
 13035                           ;term.c: 418: static TermStateType TermState = Term_GetData;
 13036                           ;term.c: 419: static UINT8 UsbRxBuffer[200u];
 13037                           ;term.c: 420: static UINT8 UsbTxBuffer[200u];
 13038                           ;term.c: 421: static UINT8 TermTxBuffer[50u];
 13039                           ;term.c: 422: static UINT8 TermRxBuffer[50u];
 13040                           ;term.c: 423: UINT8 Index;
 13041                           ;term.c: 424: static UINT8 Len[4];
 13042                           ;term.c: 425: static UINT8 PackageLen;
 13043                           ;term.c: 426: static UINT8 Addr[4];
 13044                           ;term.c: 427: static UINT8 SlaveAddr;
 13045                           ;term.c: 428: static PayloadType Payload[25];
 13046                           ;term.c: 429: UINT8 ReceivedBytes = 0;
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;incstack = 0
 13050  00E8C8  0E00               	movlw	0
 13051  00E8CA  0100               	movlb	0	; () banked
 13052  00E8CC  6F7E               	movwf	Terminal@ReceivedBytes& (0+255),b
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;term.c: 431: static UINT8 FormatOption = 0u;
 13056                           ;term.c: 432: static UINT8 EchoOption = 1u;
 13057                           ;term.c: 435: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 13058  00E8CE  0E1F               	movlw	31
 13059  00E8D0  65FD               	cpfsgt	_USBDeviceState& (0+255),b
 13060  00E8D2  0012               	return	
 13061                           
 13062                           ; BSR set to: 0
 13063  00E8D4  B265               	btfsc	3941,1,c	;volatile
 13064  00E8D6  0012               	return	
 13065  00E8D8  D1F4               	goto	l2038
 13066  00E8DA                     
 13067                           ;term.c: 442: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 13068                           
 13069                           ; BSR set to: 0
 13070  00E8DA  0E00               	movlw	low Terminal@UsbRxBuffer
 13071  00E8DC  0100               	movlb	0	; () banked
 13072  00E8DE  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 13073  00E8E0  0E03               	movlw	high Terminal@UsbRxBuffer
 13074  00E8E2  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 13075  00E8E4  0EC8               	movlw	200
 13076  00E8E6  6F69               	movwf	getsUSBUSART@len& (0+255),b
 13077  00E8E8  ECDA  F05A         	call	_getsUSBUSART	;wreg free
 13078  00E8EC  0100               	movlb	0	; () banked
 13079  00E8EE  6F7E               	movwf	Terminal@ReceivedBytes& (0+255),b
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;term.c: 445: if (ReceivedBytes > 0)
 13083  00E8F0  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13084  00E8F2  B4D8               	btfsc	status,2,c
 13085  00E8F4  0012               	return	
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;term.c: 446: {
 13089                           ;term.c: 448: if (EchoOption == 1u)
 13090  00E8F6  0101               	movlb	1	; () banked
 13091  00E8F8  05E0               	decf	Terminal@EchoOption& (0+255),w,b
 13092  00E8FA  A4D8               	btfss	status,2,c
 13093  00E8FC  D026               	goto	l2042
 13094                           
 13095                           ; BSR set to: 1
 13096                           ;term.c: 449: {
 13097                           ;term.c: 451: if((cdc_trf_state == 0))
 13098  00E8FE  0100               	movlb	0	; () banked
 13099  00E900  51FB               	movf	_cdc_trf_state& (0+255),w,b
 13100  00E902  A4D8               	btfss	status,2,c
 13101  00E904  D022               	goto	l2042
 13102                           
 13103                           ; BSR set to: 0
 13104                           ;term.c: 452: {
 13105                           ;term.c: 453: UsbRxBuffer[ReceivedBytes] = '\r';
 13106  00E906  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13107  00E908  0D01               	mullw	1
 13108  00E90A  0E00               	movlw	low Terminal@UsbRxBuffer
 13109  00E90C  24F3               	addwf	prodl,w,c
 13110  00E90E  6ED9               	movwf	fsr2l,c
 13111  00E910  0E03               	movlw	high Terminal@UsbRxBuffer
 13112  00E912  20F4               	addwfc	prodh,w,c
 13113  00E914  6EDA               	movwf	fsr2h,c
 13114  00E916  0E0D               	movlw	13
 13115  00E918  6EDF               	movwf	indf2,c
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;term.c: 454: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 13119  00E91A  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13120  00E91C  6F7C               	movwf	??_Terminal& (0+255),b
 13121  00E91E  6B7D               	clrf	(??_Terminal+1)& (0+255),b
 13122  00E920  0E01               	movlw	1
 13123  00E922  277C               	addwf	??_Terminal& (0+255),f,b
 13124  00E924  0E00               	movlw	0
 13125  00E926  237D               	addwfc	(??_Terminal+1)& (0+255),f,b
 13126  00E928  0E00               	movlw	low Terminal@UsbRxBuffer
 13127  00E92A  257C               	addwf	??_Terminal& (0+255),w,b
 13128  00E92C  6ED9               	movwf	fsr2l,c
 13129  00E92E  0E03               	movlw	high Terminal@UsbRxBuffer
 13130  00E930  217D               	addwfc	(??_Terminal+1)& (0+255),w,b
 13131  00E932  6EDA               	movwf	fsr2h,c
 13132  00E934  0E0A               	movlw	10
 13133  00E936  6EDF               	movwf	indf2,c
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;term.c: 455: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 13137  00E938  0E00               	movlw	low Terminal@UsbRxBuffer
 13138  00E93A  6F66               	movwf	putUSBUSART@data& (0+255),b
 13139  00E93C  0E03               	movlw	high Terminal@UsbRxBuffer
 13140  00E93E  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13141  00E940  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13142  00E942  0F02               	addlw	2
 13143  00E944  6F68               	movwf	putUSBUSART@length& (0+255),b
 13144  00E946  ECC8  F050         	call	_putUSBUSART	;wreg free
 13145  00E94A                     l2042:
 13146                           
 13147                           ;term.c: 456: }
 13148                           ;term.c: 457: }
 13149                           ;term.c: 460: if ((UsbRxBuffer[0u] == 'S') &&
 13150                           ;term.c: 461: (UsbRxBuffer[0u + 1u] == 'O') &&
 13151                           ;term.c: 462: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13152  00E94A  0E53               	movlw	83
 13153  00E94C  0103               	movlb	3	; () banked
 13154  00E94E  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13155  00E950  A4D8               	btfss	status,2,c
 13156  00E952  D043               	goto	l2043
 13157                           
 13158                           ; BSR set to: 3
 13159  00E954  0E4F               	movlw	79
 13160  00E956  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13161  00E958  A4D8               	btfss	status,2,c
 13162  00E95A  D03F               	goto	l2043
 13163                           
 13164                           ; BSR set to: 3
 13165  00E95C  0E3A               	movlw	58
 13166  00E95E  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13167  00E960  A4D8               	btfss	status,2,c
 13168  00E962  D03B               	goto	l2043
 13169                           
 13170                           ; BSR set to: 3
 13171                           ;term.c: 463: {
 13172                           ;term.c: 465: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13173  00E964  0E47               	movlw	71
 13174  00E966  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13175  00E968  A4D8               	btfss	status,2,c
 13176  00E96A  0012               	return	
 13177                           
 13178                           ; BSR set to: 3
 13179  00E96C  0E3A               	movlw	58
 13180  00E96E  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13181  00E970  A4D8               	btfss	status,2,c
 13182  00E972  0012               	return	
 13183                           
 13184                           ; BSR set to: 3
 13185                           ;term.c: 466: {
 13186                           ;term.c: 468: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 13187  00E974  0E44               	movlw	68
 13188  00E976  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13189  00E978  A4D8               	btfss	status,2,c
 13190  00E97A  D015               	goto	l2045
 13191                           
 13192                           ; BSR set to: 3
 13193  00E97C  0E46               	movlw	70
 13194  00E97E  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13195  00E980  A4D8               	btfss	status,2,c
 13196  00E982  D011               	goto	l2045
 13197                           
 13198                           ; BSR set to: 3
 13199                           ;term.c: 469: {
 13200                           ;term.c: 470: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 13201  00E984  0E41               	movlw	65
 13202  00E986  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13203  00E988  A4D8               	btfss	status,2,c
 13204  00E98A  D004               	goto	l2046
 13205                           
 13206                           ; BSR set to: 3
 13207                           ;term.c: 471: {
 13208                           ;term.c: 472: FormatOption = 1u;
 13209  00E98C  0E01               	movlw	1
 13210  00E98E  0101               	movlb	1	; () banked
 13211  00E990  6F57               	movwf	Terminal@FormatOption& (0+255),b
 13212                           
 13213                           ;term.c: 473: }
 13214  00E992  0012               	return	
 13215  00E994                     l2046:
 13216                           
 13217                           ;term.c: 474: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 13218                           
 13219                           ; BSR set to: 1
 13220  00E994  0E42               	movlw	66
 13221  00E996  0103               	movlb	3	; () banked
 13222  00E998  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13223  00E99A  A4D8               	btfss	status,2,c
 13224  00E99C  0012               	return	
 13225                           
 13226                           ; BSR set to: 3
 13227                           ;term.c: 475: {
 13228                           ;term.c: 476: FormatOption = 0u;
 13229  00E99E  0E00               	movlw	0
 13230  00E9A0  0101               	movlb	1	; () banked
 13231  00E9A2  6F57               	movwf	Terminal@FormatOption& (0+255),b
 13232                           
 13233                           ; BSR set to: 1
 13234                           ;term.c: 477: }
 13235                           ;term.c: 478: }
 13236                           
 13237                           ; BSR set to: 1
 13238  00E9A4  0012               	return	
 13239  00E9A6                     l2045:
 13240                           
 13241                           ;term.c: 480: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 13242                           
 13243                           ; BSR set to: 1
 13244  00E9A6  0E45               	movlw	69
 13245  00E9A8  0103               	movlb	3	; () banked
 13246  00E9AA  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13247  00E9AC  A4D8               	btfss	status,2,c
 13248  00E9AE  0012               	return	
 13249                           
 13250                           ; BSR set to: 3
 13251  00E9B0  0E4D               	movlw	77
 13252  00E9B2  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13253  00E9B4  A4D8               	btfss	status,2,c
 13254  00E9B6  0012               	return	
 13255                           
 13256                           ; BSR set to: 3
 13257                           ;term.c: 481: {
 13258                           ;term.c: 482: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 13259  00E9B8  0E31               	movlw	49
 13260  00E9BA  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13261  00E9BC  A4D8               	btfss	status,2,c
 13262  00E9BE  D004               	goto	l2051
 13263                           
 13264                           ; BSR set to: 3
 13265                           ;term.c: 483: {
 13266                           ;term.c: 484: EchoOption = 1u;
 13267  00E9C0  0E01               	movlw	1
 13268  00E9C2  0101               	movlb	1	; () banked
 13269  00E9C4  6FE0               	movwf	Terminal@EchoOption& (0+255),b
 13270                           
 13271                           ;term.c: 485: }
 13272  00E9C6  0012               	return	
 13273  00E9C8                     l2051:
 13274                           
 13275                           ;term.c: 486: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 13276                           
 13277                           ; BSR set to: 1
 13278  00E9C8  0E30               	movlw	48
 13279  00E9CA  0103               	movlb	3	; () banked
 13280  00E9CC  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13281  00E9CE  A4D8               	btfss	status,2,c
 13282  00E9D0  0012               	return	
 13283                           
 13284                           ; BSR set to: 3
 13285                           ;term.c: 487: {
 13286                           ;term.c: 488: EchoOption = 0u;
 13287  00E9D2  0E00               	movlw	0
 13288  00E9D4  0101               	movlb	1	; () banked
 13289  00E9D6  6FE0               	movwf	Terminal@EchoOption& (0+255),b
 13290                           
 13291                           ; BSR set to: 1
 13292                           ;term.c: 494: }
 13293                           ;term.c: 495: }
 13294                           ;term.c: 496: }
 13295                           
 13296                           ; BSR set to: 1
 13297                           
 13298                           ; BSR set to: 1
 13299                           
 13300                           ;term.c: 491: else
 13301                           ;term.c: 492: {
 13302                           
 13303                           ; BSR set to: 1
 13304                           
 13305                           ; BSR set to: 1
 13306                           ;term.c: 489: }
 13307                           ;term.c: 490: }
 13308                           
 13309                           ; BSR set to: 1
 13310  00E9D8  0012               	return	
 13311  00E9DA                     l2043:
 13312                           
 13313                           ;term.c: 497: else if ((UsbRxBuffer[0u] == 'S') &&
 13314                           ;term.c: 498: (UsbRxBuffer[0u + 1u] == 'B') &&
 13315                           ;term.c: 499: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13316                           
 13317                           ; BSR set to: 1
 13318  00E9DA  0E53               	movlw	83
 13319  00E9DC  0103               	movlb	3	; () banked
 13320  00E9DE  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13321  00E9E0  A4D8               	btfss	status,2,c
 13322  00E9E2  0012               	return	
 13323                           
 13324                           ; BSR set to: 3
 13325  00E9E4  0E42               	movlw	66
 13326  00E9E6  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13327  00E9E8  A4D8               	btfss	status,2,c
 13328  00E9EA  0012               	return	
 13329                           
 13330                           ; BSR set to: 3
 13331  00E9EC  0E3A               	movlw	58
 13332  00E9EE  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13333  00E9F0  A4D8               	btfss	status,2,c
 13334  00E9F2  0012               	return	
 13335                           
 13336                           ; BSR set to: 3
 13337                           ;term.c: 500: {
 13338                           ;term.c: 501: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13339  00E9F4  0E57               	movlw	87
 13340  00E9F6  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13341  00E9F8  A4D8               	btfss	status,2,c
 13342  00E9FA  D089               	goto	l2057
 13343                           
 13344                           ; BSR set to: 3
 13345  00E9FC  0E3A               	movlw	58
 13346  00E9FE  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13347  00EA00  A4D8               	btfss	status,2,c
 13348  00EA02  D085               	goto	l2057
 13349                           
 13350                           ; BSR set to: 3
 13351                           ;term.c: 502: {
 13352                           ;term.c: 504: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13353  00EA04  C305  F1B5         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13354                           
 13355                           ;term.c: 505: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13356  00EA08  C306  F1B6         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13357                           
 13358                           ;term.c: 507: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13359  00EA0C  C308  F1B1         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13360                           
 13361                           ;term.c: 508: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13362  00EA10  C309  F1B2         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13363                           
 13364                           ; BSR set to: 3
 13365                           ;term.c: 510: PackageLen = atoi((void*)Len);
 13366  00EA14  0EB5               	movlw	low Terminal@Len
 13367  00EA16  0100               	movlb	0	; () banked
 13368  00EA18  6F66               	movwf	atoi@s& (0+255),b
 13369  00EA1A  0E01               	movlw	high Terminal@Len
 13370  00EA1C  6F67               	movwf	(atoi@s+1)& (0+255),b
 13371  00EA1E  EC60  F061         	call	_atoi	;wreg free
 13372  00EA22  0100               	movlb	0	; () banked
 13373  00EA24  5166               	movf	?_atoi& (0+255),w,b
 13374  00EA26  6FFA               	movwf	Terminal@PackageLen& (0+255),b
 13375                           
 13376                           ;term.c: 511: SlaveAddr = atoi((void*)Addr);
 13377  00EA28  0EB1               	movlw	low Terminal@Addr
 13378  00EA2A  6F66               	movwf	atoi@s& (0+255),b
 13379  00EA2C  0E01               	movlw	high Terminal@Addr
 13380  00EA2E  6F67               	movwf	(atoi@s+1)& (0+255),b
 13381  00EA30  EC60  F061         	call	_atoi	;wreg free
 13382  00EA34  0100               	movlb	0	; () banked
 13383  00EA36  5166               	movf	?_atoi& (0+255),w,b
 13384  00EA38  0101               	movlb	1	; () banked
 13385  00EA3A  6F58               	movwf	Terminal@SlaveAddr& (0+255),b
 13386                           
 13387                           ; BSR set to: 1
 13388                           ;term.c: 513: for (Index = 0; Index <= PackageLen; Index++)
 13389  00EA3C  0E00               	movlw	0
 13390  00EA3E  0100               	movlb	0	; () banked
 13391  00EA40  6F7F               	movwf	Terminal@Index& (0+255),b
 13392  00EA42  D031               	goto	l2058
 13393  00EA44                     
 13394                           ; BSR set to: 0
 13395                           ;term.c: 514: {
 13396                           ;term.c: 515: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 13397                           
 13398                           ; BSR set to: 0
 13399  00EA44  517F               	movf	Terminal@Index& (0+255),w,b
 13400  00EA46  0D02               	mullw	2
 13401  00EA48  0E0B               	movlw	11
 13402  00EA4A  26F3               	addwf	prodl,f,c
 13403  00EA4C  0E00               	movlw	0
 13404  00EA4E  22F4               	addwfc	prodh,f,c
 13405  00EA50  0E00               	movlw	low Terminal@UsbRxBuffer
 13406  00EA52  24F3               	addwf	prodl,w,c
 13407  00EA54  6ED9               	movwf	fsr2l,c
 13408  00EA56  0E03               	movlw	high Terminal@UsbRxBuffer
 13409  00EA58  20F4               	addwfc	prodh,w,c
 13410  00EA5A  6EDA               	movwf	fsr2h,c
 13411  00EA5C  517F               	movf	Terminal@Index& (0+255),w,b
 13412  00EA5E  0D04               	mullw	4
 13413  00EA60  0E40               	movlw	low Terminal@Payload
 13414  00EA62  24F3               	addwf	prodl,w,c
 13415  00EA64  6EE1               	movwf	fsr1l,c
 13416  00EA66  0E04               	movlw	high Terminal@Payload
 13417  00EA68  20F4               	addwfc	prodh,w,c
 13418  00EA6A  6EE2               	movwf	fsr1h,c
 13419  00EA6C  CFDF FFE7          	movff	indf2,indf1
 13420                           
 13421                           ;term.c: 516: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 13422  00EA70  517F               	movf	Terminal@Index& (0+255),w,b
 13423  00EA72  0D02               	mullw	2
 13424  00EA74  0E0C               	movlw	12
 13425  00EA76  26F3               	addwf	prodl,f,c
 13426  00EA78  0E00               	movlw	0
 13427  00EA7A  22F4               	addwfc	prodh,f,c
 13428  00EA7C  0E00               	movlw	low Terminal@UsbRxBuffer
 13429  00EA7E  24F3               	addwf	prodl,w,c
 13430  00EA80  6ED9               	movwf	fsr2l,c
 13431  00EA82  0E03               	movlw	high Terminal@UsbRxBuffer
 13432  00EA84  20F4               	addwfc	prodh,w,c
 13433  00EA86  6EDA               	movwf	fsr2h,c
 13434  00EA88  517F               	movf	Terminal@Index& (0+255),w,b
 13435  00EA8A  0D04               	mullw	4
 13436  00EA8C  0E01               	movlw	1
 13437  00EA8E  26F3               	addwf	prodl,f,c
 13438  00EA90  0E00               	movlw	0
 13439  00EA92  22F4               	addwfc	prodh,f,c
 13440  00EA94  0E40               	movlw	low Terminal@Payload
 13441  00EA96  24F3               	addwf	prodl,w,c
 13442  00EA98  6EE1               	movwf	fsr1l,c
 13443  00EA9A  0E04               	movlw	high Terminal@Payload
 13444  00EA9C  20F4               	addwfc	prodh,w,c
 13445  00EA9E  6EE2               	movwf	fsr1h,c
 13446  00EAA0  CFDF FFE7          	movff	indf2,indf1
 13447                           
 13448                           ; BSR set to: 0
 13449  00EAA4  2B7F               	incf	Terminal@Index& (0+255),f,b
 13450  00EAA6                     l2058:
 13451                           
 13452                           ; BSR set to: 0
 13453                           
 13454                           ; BSR set to: 0
 13455  00EAA6  517F               	movf	Terminal@Index& (0+255),w,b
 13456  00EAA8  5DFA               	subwf	Terminal@PackageLen& (0+255),w,b
 13457  00EAAA  B0D8               	btfsc	status,0,c
 13458  00EAAC  D7CB               	goto	l2059
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;term.c: 517: }
 13462                           ;term.c: 519: for (Index = 0; Index <= PackageLen; Index++)
 13463                           
 13464                           ; BSR set to: 0
 13465  00EAAE  0E00               	movlw	0
 13466  00EAB0  6F7F               	movwf	Terminal@Index& (0+255),b
 13467  00EAB2  D01E               	goto	l2061
 13468  00EAB4                     
 13469                           ; BSR set to: 0
 13470                           ;term.c: 520: {
 13471                           ;term.c: 524: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 13472                           
 13473                           ; BSR set to: 0
 13474  00EAB4  517F               	movf	Terminal@Index& (0+255),w,b
 13475  00EAB6  0D04               	mullw	4
 13476  00EAB8  0E40               	movlw	low Terminal@Payload
 13477  00EABA  24F3               	addwf	prodl,w,c
 13478  00EABC  6F6C               	movwf	strtol@s& (0+255),b
 13479  00EABE  0E04               	movlw	high Terminal@Payload
 13480  00EAC0  20F4               	addwfc	prodh,w,c
 13481  00EAC2  6F6D               	movwf	(strtol@s+1)& (0+255),b
 13482  00EAC4  0E00               	movlw	0
 13483  00EAC6  6F6E               	movwf	strtol@endptr& (0+255),b
 13484  00EAC8  0E00               	movlw	0
 13485  00EACA  6F6F               	movwf	(strtol@endptr+1)& (0+255),b
 13486  00EACC  0E00               	movlw	0
 13487  00EACE  6F71               	movwf	(strtol@base+1)& (0+255),b
 13488  00EAD0  0E10               	movlw	16
 13489  00EAD2  6F70               	movwf	strtol@base& (0+255),b
 13490  00EAD4  EC25  F06B         	call	_strtol	;wreg free
 13491  00EAD8  0100               	movlb	0	; () banked
 13492  00EADA  517F               	movf	Terminal@Index& (0+255),w,b
 13493  00EADC  0D01               	mullw	1
 13494  00EADE  0EC8               	movlw	low Terminal@TermTxBuffer
 13495  00EAE0  24F3               	addwf	prodl,w,c
 13496  00EAE2  6ED9               	movwf	fsr2l,c
 13497  00EAE4  0E03               	movlw	high Terminal@TermTxBuffer
 13498  00EAE6  20F4               	addwfc	prodh,w,c
 13499  00EAE8  6EDA               	movwf	fsr2h,c
 13500  00EAEA  C06C  FFDF         	movff	?_strtol,indf2
 13501                           
 13502                           ; BSR set to: 0
 13503  00EAEE  2B7F               	incf	Terminal@Index& (0+255),f,b
 13504  00EAF0                     l2061:
 13505                           
 13506                           ; BSR set to: 0
 13507                           
 13508                           ; BSR set to: 0
 13509  00EAF0  517F               	movf	Terminal@Index& (0+255),w,b
 13510  00EAF2  5DFA               	subwf	Terminal@PackageLen& (0+255),w,b
 13511  00EAF4  B0D8               	btfsc	status,0,c
 13512  00EAF6  D7DE               	goto	l2062
 13513                           
 13514                           ; BSR set to: 0
 13515                           ;term.c: 526: }
 13516                           ;term.c: 529: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 13517                           
 13518                           ; BSR set to: 0
 13519  00EAF8  0EC8               	movlw	low Terminal@TermTxBuffer
 13520  00EAFA  6F63               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 13521  00EAFC  0E03               	movlw	high Terminal@TermTxBuffer
 13522  00EAFE  6F64               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 13523  00EB00  C158  F065         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 13524  00EB04  C0FA  F066         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 13525  00EB08  ECF3  F052         	call	_I2cSlv_SendI2cMsg	;wreg free
 13526                           
 13527                           ;term.c: 530: }
 13528  00EB0C  0012               	return	
 13529  00EB0E                     l2057:
 13530                           
 13531                           ;term.c: 531: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 13532  00EB0E  0E52               	movlw	82
 13533  00EB10  0103               	movlb	3	; () banked
 13534  00EB12  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13535  00EB14  A4D8               	btfss	status,2,c
 13536  00EB16  0012               	return	
 13537                           
 13538                           ; BSR set to: 3
 13539  00EB18  0E3A               	movlw	58
 13540  00EB1A  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13541  00EB1C  A4D8               	btfss	status,2,c
 13542  00EB1E  0012               	return	
 13543                           
 13544                           ; BSR set to: 3
 13545                           ;term.c: 532: {
 13546                           ;term.c: 534: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13547  00EB20  C305  F1B5         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13548                           
 13549                           ;term.c: 535: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13550  00EB24  C306  F1B6         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13551                           
 13552                           ;term.c: 537: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13553  00EB28  C308  F1B1         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13554                           
 13555                           ;term.c: 538: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13556  00EB2C  C309  F1B2         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13557                           
 13558                           ; BSR set to: 3
 13559                           ;term.c: 540: PackageLen = atoi((void*)Len);
 13560  00EB30  0EB5               	movlw	low Terminal@Len
 13561  00EB32  0100               	movlb	0	; () banked
 13562  00EB34  6F66               	movwf	atoi@s& (0+255),b
 13563  00EB36  0E01               	movlw	high Terminal@Len
 13564  00EB38  6F67               	movwf	(atoi@s+1)& (0+255),b
 13565  00EB3A  EC60  F061         	call	_atoi	;wreg free
 13566  00EB3E  0100               	movlb	0	; () banked
 13567  00EB40  5166               	movf	?_atoi& (0+255),w,b
 13568  00EB42  6FFA               	movwf	Terminal@PackageLen& (0+255),b
 13569                           
 13570                           ;term.c: 541: SlaveAddr = atoi((void*)Addr);
 13571  00EB44  0EB1               	movlw	low Terminal@Addr
 13572  00EB46  6F66               	movwf	atoi@s& (0+255),b
 13573  00EB48  0E01               	movlw	high Terminal@Addr
 13574  00EB4A  6F67               	movwf	(atoi@s+1)& (0+255),b
 13575  00EB4C  EC60  F061         	call	_atoi	;wreg free
 13576  00EB50  0100               	movlb	0	; () banked
 13577  00EB52  5166               	movf	?_atoi& (0+255),w,b
 13578  00EB54  0101               	movlb	1	; () banked
 13579  00EB56  6F58               	movwf	Terminal@SlaveAddr& (0+255),b
 13580                           
 13581                           ; BSR set to: 1
 13582                           ;term.c: 544: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 13583  00EB58  0E40               	movlw	low Terminal@TermRxBuffer
 13584  00EB5A  0100               	movlb	0	; () banked
 13585  00EB5C  6F63               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 13586  00EB5E  0E02               	movlw	high Terminal@TermRxBuffer
 13587  00EB60  6F64               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 13588  00EB62  C158  F065         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 13589  00EB66  C0FA  F066         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 13590  00EB6A  EC55  F053         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 13591                           
 13592                           ;term.c: 547: TermState = Term_PrepSlvI2cResp;
 13593  00EB6E  0E01               	movlw	1
 13594  00EB70  0101               	movlb	1	; () banked
 13595  00EB72  6F59               	movwf	Terminal@TermState& (0+255),b
 13596                           
 13597                           ; BSR set to: 1
 13598                           ;term.c: 555: }
 13599                           ;term.c: 587: }
 13600                           ;term.c: 588: break;
 13601                           
 13602                           ; BSR set to: 1
 13603                           
 13604                           ; BSR set to: 1
 13605                           
 13606                           ; BSR set to: 1
 13607                           
 13608                           ;term.c: 553: {
 13609                           
 13610                           ; BSR set to: 1
 13611                           
 13612                           ; BSR set to: 1
 13613                           
 13614                           ; BSR set to: 1
 13615                           
 13616                           ; BSR set to: 1
 13617                           
 13618                           ; BSR set to: 1
 13619                           ;term.c: 548: }
 13620                           ;term.c: 549: }
 13621                           
 13622                           ; BSR set to: 1
 13623  00EB74  0012               	return	
 13624  00EB76                     
 13625                           ; BSR set to: 1
 13626                           ;term.c: 592: if((cdc_trf_state == 0))
 13627                           
 13628                           ; BSR set to: 1
 13629  00EB76  0100               	movlb	0	; () banked
 13630  00EB78  51FB               	movf	_cdc_trf_state& (0+255),w,b
 13631  00EB7A  A4D8               	btfss	status,2,c
 13632  00EB7C  0012               	return	
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;term.c: 593: {
 13636                           ;term.c: 594: UsbRxBuffer[0] = 'S';
 13637  00EB7E  0E53               	movlw	83
 13638  00EB80  0103               	movlb	3	; () banked
 13639  00EB82  6F00               	movwf	Terminal@UsbRxBuffer& (0+255),b
 13640                           
 13641                           ;term.c: 595: UsbRxBuffer[1] = 'B';
 13642  00EB84  0E42               	movlw	66
 13643  00EB86  6F01               	movwf	(Terminal@UsbRxBuffer+1)& (0+255),b
 13644                           
 13645                           ;term.c: 596: UsbRxBuffer[2] = '[';
 13646  00EB88  0E5B               	movlw	91
 13647  00EB8A  6F02               	movwf	(Terminal@UsbRxBuffer+2)& (0+255),b
 13648                           
 13649                           ; BSR set to: 3
 13650                           ;term.c: 597: UsbRxBuffer[3] = Addr[0];
 13651  00EB8C  C1B1  F303         	movff	Terminal@Addr,Terminal@UsbRxBuffer+3
 13652                           
 13653                           ; BSR set to: 3
 13654                           ;term.c: 598: UsbRxBuffer[4] = Addr[1];
 13655  00EB90  C1B2  F304         	movff	Terminal@Addr+1,Terminal@UsbRxBuffer+4
 13656                           
 13657                           ;term.c: 599: UsbRxBuffer[5] = ']';
 13658  00EB94  0E5D               	movlw	93
 13659  00EB96  6F05               	movwf	(Terminal@UsbRxBuffer+5)& (0+255),b
 13660                           
 13661                           ;term.c: 600: UsbRxBuffer[6] = ':';
 13662  00EB98  0E3A               	movlw	58
 13663  00EB9A  6F06               	movwf	(Terminal@UsbRxBuffer+6)& (0+255),b
 13664                           
 13665                           ; BSR set to: 3
 13666                           ;term.c: 601: putUSBUSART(UsbRxBuffer,7);
 13667  00EB9C  0E00               	movlw	low Terminal@UsbRxBuffer
 13668  00EB9E  0100               	movlb	0	; () banked
 13669  00EBA0  6F66               	movwf	putUSBUSART@data& (0+255),b
 13670  00EBA2  0E03               	movlw	high Terminal@UsbRxBuffer
 13671  00EBA4  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13672  00EBA6  0E07               	movlw	7
 13673  00EBA8  6F68               	movwf	putUSBUSART@length& (0+255),b
 13674  00EBAA  ECC8  F050         	call	_putUSBUSART	;wreg free
 13675                           
 13676                           ;term.c: 604: TermState = Term_ReadSlvI2cData;
 13677  00EBAE  0E02               	movlw	2
 13678  00EBB0  0101               	movlb	1	; () banked
 13679  00EBB2  6F59               	movwf	Terminal@TermState& (0+255),b
 13680                           
 13681                           ; BSR set to: 1
 13682                           ;term.c: 605: }
 13683                           ;term.c: 606: break;
 13684  00EBB4  0012               	return	
 13685  00EBB6                     
 13686                           ; BSR set to: 1
 13687                           ;term.c: 610: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 13688                           
 13689                           ; BSR set to: 1
 13690  00EBB6  ECA6  F050         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 13691  00EBBA  06E8               	decf	wreg,f,c
 13692  00EBBC  A4D8               	btfss	status,2,c
 13693  00EBBE  0012               	return	
 13694                           
 13695                           ;term.c: 611: {
 13696                           ;term.c: 613: if (FormatOption == 1u)
 13697  00EBC0  0101               	movlb	1	; () banked
 13698  00EBC2  0557               	decf	Terminal@FormatOption& (0+255),w,b
 13699  00EBC4  A4D8               	btfss	status,2,c
 13700  00EBC6  D025               	goto	u6750
 13701                           
 13702                           ; BSR set to: 1
 13703                           ;term.c: 614: {
 13704                           ;term.c: 616: for (Index = 0; Index <= PackageLen; Index++)
 13705  00EBC8  0E00               	movlw	0
 13706  00EBCA  0100               	movlb	0	; () banked
 13707  00EBCC  6F7F               	movwf	Terminal@Index& (0+255),b
 13708  00EBCE  D01D               	goto	l2074
 13709  00EBD0                     
 13710                           ; BSR set to: 0
 13711                           ;term.c: 617: {
 13712                           ;term.c: 618: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 13713                           
 13714                           ; BSR set to: 0
 13715  00EBD0  517F               	movf	Terminal@Index& (0+255),w,b
 13716  00EBD2  0D04               	mullw	4
 13717  00EBD4  0E40               	movlw	low Terminal@Payload
 13718  00EBD6  24F3               	addwf	prodl,w,c
 13719  00EBD8  6F70               	movwf	itoa@buf& (0+255),b
 13720  00EBDA  0E04               	movlw	high Terminal@Payload
 13721  00EBDC  20F4               	addwfc	prodh,w,c
 13722  00EBDE  6F71               	movwf	(itoa@buf+1)& (0+255),b
 13723  00EBE0  517F               	movf	Terminal@Index& (0+255),w,b
 13724  00EBE2  0D01               	mullw	1
 13725  00EBE4  0E40               	movlw	low Terminal@TermRxBuffer
 13726  00EBE6  24F3               	addwf	prodl,w,c
 13727  00EBE8  6ED9               	movwf	fsr2l,c
 13728  00EBEA  0E02               	movlw	high Terminal@TermRxBuffer
 13729  00EBEC  20F4               	addwfc	prodh,w,c
 13730  00EBEE  6EDA               	movwf	fsr2h,c
 13731  00EBF0  50DF               	movf	indf2,w,c
 13732  00EBF2  6F7C               	movwf	??_Terminal& (0+255),b
 13733  00EBF4  517C               	movf	??_Terminal& (0+255),w,b
 13734  00EBF6  6F72               	movwf	itoa@val& (0+255),b
 13735  00EBF8  6B73               	clrf	(itoa@val+1)& (0+255),b
 13736  00EBFA  0E00               	movlw	0
 13737  00EBFC  6F75               	movwf	(itoa@base+1)& (0+255),b
 13738  00EBFE  0E0A               	movlw	10
 13739  00EC00  6F74               	movwf	itoa@base& (0+255),b
 13740  00EC02  EC77  F053         	call	_itoa	;wreg free
 13741  00EC06  0100               	movlb	0	; () banked
 13742  00EC08  2B7F               	incf	Terminal@Index& (0+255),f,b
 13743  00EC0A                     l2074:
 13744                           
 13745                           ; BSR set to: 0
 13746                           
 13747                           ; BSR set to: 0
 13748  00EC0A  517F               	movf	Terminal@Index& (0+255),w,b
 13749  00EC0C  5DFA               	subwf	Terminal@PackageLen& (0+255),w,b
 13750  00EC0E  B0D8               	btfsc	status,0,c
 13751  00EC10  D7DF               	goto	l2075
 13752  00EC12                     u6750:
 13753                           
 13754                           ;term.c: 619: }
 13755                           ;term.c: 620: }
 13756                           ;term.c: 623: if((cdc_trf_state == 0))
 13757                           
 13758                           ; BSR set to: 0
 13759                           
 13760                           ; BSR set to: 0
 13761  00EC12  0100               	movlb	0	; () banked
 13762  00EC14  51FB               	movf	_cdc_trf_state& (0+255),w,b
 13763  00EC16  A4D8               	btfss	status,2,c
 13764  00EC18  0012               	return	
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;term.c: 624: {
 13768                           ;term.c: 626: if (FormatOption == 1u)
 13769  00EC1A  0101               	movlb	1	; () banked
 13770  00EC1C  0557               	decf	Terminal@FormatOption& (0+255),w,b
 13771  00EC1E  A4D8               	btfss	status,2,c
 13772  00EC20  D029               	goto	l2078
 13773                           
 13774                           ; BSR set to: 1
 13775                           ;term.c: 627: {
 13776                           ;term.c: 628: Payload[(2*PackageLen)].Byte[3] = '\r';
 13777  00EC22  0100               	movlb	0	; () banked
 13778  00EC24  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13779  00EC26  0D08               	mullw	8
 13780  00EC28  0E03               	movlw	3
 13781  00EC2A  26F3               	addwf	prodl,f,c
 13782  00EC2C  0E00               	movlw	0
 13783  00EC2E  22F4               	addwfc	prodh,f,c
 13784  00EC30  0E40               	movlw	low Terminal@Payload
 13785  00EC32  24F3               	addwf	prodl,w,c
 13786  00EC34  6ED9               	movwf	fsr2l,c
 13787  00EC36  0E04               	movlw	high Terminal@Payload
 13788  00EC38  20F4               	addwfc	prodh,w,c
 13789  00EC3A  6EDA               	movwf	fsr2h,c
 13790  00EC3C  0E0D               	movlw	13
 13791  00EC3E  6EDF               	movwf	indf2,c
 13792                           
 13793                           ;term.c: 629: Payload[(2*PackageLen)].Byte[2] = '\n';
 13794  00EC40  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13795  00EC42  0D08               	mullw	8
 13796  00EC44  0E02               	movlw	2
 13797  00EC46  26F3               	addwf	prodl,f,c
 13798  00EC48  0E00               	movlw	0
 13799  00EC4A  22F4               	addwfc	prodh,f,c
 13800  00EC4C  0E40               	movlw	low Terminal@Payload
 13801  00EC4E  24F3               	addwf	prodl,w,c
 13802  00EC50  6ED9               	movwf	fsr2l,c
 13803  00EC52  0E04               	movlw	high Terminal@Payload
 13804  00EC54  20F4               	addwfc	prodh,w,c
 13805  00EC56  6EDA               	movwf	fsr2h,c
 13806  00EC58  0E0A               	movlw	10
 13807  00EC5A  6EDF               	movwf	indf2,c
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;term.c: 631: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 13811  00EC5C  0E40               	movlw	low Terminal@Payload
 13812  00EC5E  6F66               	movwf	putUSBUSART@data& (0+255),b
 13813  00EC60  0E04               	movlw	high Terminal@Payload
 13814  00EC62  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13815  00EC64  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13816  00EC66  0D02               	mullw	2
 13817  00EC68  50F3               	movf	prodl,w,c
 13818  00EC6A  0F04               	addlw	4
 13819  00EC6C  6F68               	movwf	putUSBUSART@length& (0+255),b
 13820  00EC6E  ECC8  F050         	call	_putUSBUSART	;wreg free
 13821                           
 13822                           ;term.c: 632: }
 13823  00EC72  D023               	goto	l2079
 13824  00EC74                     l2078:
 13825                           
 13826                           ;term.c: 633: else
 13827                           ;term.c: 634: {
 13828                           ;term.c: 635: TermRxBuffer[PackageLen] = '\r';
 13829  00EC74  0100               	movlb	0	; () banked
 13830  00EC76  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13831  00EC78  0D01               	mullw	1
 13832  00EC7A  0E40               	movlw	low Terminal@TermRxBuffer
 13833  00EC7C  24F3               	addwf	prodl,w,c
 13834  00EC7E  6ED9               	movwf	fsr2l,c
 13835  00EC80  0E02               	movlw	high Terminal@TermRxBuffer
 13836  00EC82  20F4               	addwfc	prodh,w,c
 13837  00EC84  6EDA               	movwf	fsr2h,c
 13838  00EC86  0E0D               	movlw	13
 13839  00EC88  6EDF               	movwf	indf2,c
 13840                           
 13841                           ; BSR set to: 0
 13842                           ;term.c: 636: TermRxBuffer[PackageLen + 1] = '\n';
 13843  00EC8A  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13844  00EC8C  6F7C               	movwf	??_Terminal& (0+255),b
 13845  00EC8E  6B7D               	clrf	(??_Terminal+1)& (0+255),b
 13846  00EC90  0E01               	movlw	1
 13847  00EC92  277C               	addwf	??_Terminal& (0+255),f,b
 13848  00EC94  0E00               	movlw	0
 13849  00EC96  237D               	addwfc	(??_Terminal+1)& (0+255),f,b
 13850  00EC98  0E40               	movlw	low Terminal@TermRxBuffer
 13851  00EC9A  257C               	addwf	??_Terminal& (0+255),w,b
 13852  00EC9C  6ED9               	movwf	fsr2l,c
 13853  00EC9E  0E02               	movlw	high Terminal@TermRxBuffer
 13854  00ECA0  217D               	addwfc	(??_Terminal+1)& (0+255),w,b
 13855  00ECA2  6EDA               	movwf	fsr2h,c
 13856  00ECA4  0E0A               	movlw	10
 13857  00ECA6  6EDF               	movwf	indf2,c
 13858                           
 13859                           ; BSR set to: 0
 13860                           ;term.c: 638: putUSBUSART(TermRxBuffer,PackageLen + 2);
 13861  00ECA8  0E40               	movlw	low Terminal@TermRxBuffer
 13862  00ECAA  6F66               	movwf	putUSBUSART@data& (0+255),b
 13863  00ECAC  0E02               	movlw	high Terminal@TermRxBuffer
 13864  00ECAE  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13865  00ECB0  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13866  00ECB2  0F02               	addlw	2
 13867  00ECB4  6F68               	movwf	putUSBUSART@length& (0+255),b
 13868  00ECB6  ECC8  F050         	call	_putUSBUSART	;wreg free
 13869  00ECBA                     l2079:
 13870                           
 13871                           ;term.c: 639: }
 13872                           ;term.c: 643: TermState = Term_GetData;
 13873  00ECBA  0E00               	movlw	0
 13874  00ECBC  0101               	movlb	1	; () banked
 13875  00ECBE  6F59               	movwf	Terminal@TermState& (0+255),b
 13876                           
 13877                           ; BSR set to: 1
 13878                           ;term.c: 653: }
 13879                           
 13880                           ; BSR set to: 1
 13881                           ;term.c: 652: break;
 13882                           
 13883                           ;term.c: 651: default:
 13884                           
 13885                           ; BSR set to: 1
 13886                           ;term.c: 649: break;
 13887                           
 13888                           ;term.c: 648: case Term_ReadSlvUartData:
 13889                           
 13890                           ; BSR set to: 1
 13891                           ;term.c: 644: }
 13892                           ;term.c: 645: }
 13893                           ;term.c: 646: break;
 13894                           
 13895                           ; BSR set to: 1
 13896  00ECC0  0012               	return	
 13897  00ECC2                     l2038:
 13898                           
 13899                           ; BSR set to: 1
 13900  00ECC2  0101               	movlb	1	; () banked
 13901  00ECC4  5159               	movf	Terminal@TermState& (0+255),w,b
 13902                           
 13903                           ; Switch size 1, requested type "space"
 13904                           ; Number of cases is 4, Range of values is 0 to 3
 13905                           ; switch strategies available:
 13906                           ; Name         Instructions Cycles
 13907                           ; simple_byte           13     7 (average)
 13908                           ;	Chosen strategy is simple_byte
 13909  00ECC6  0A00               	xorlw	0	; case 0
 13910  00ECC8  B4D8               	btfsc	status,2,c
 13911  00ECCA  D607               	goto	l2039
 13912  00ECCC  0A01               	xorlw	1	; case 1
 13913  00ECCE  B4D8               	btfsc	status,2,c
 13914  00ECD0  D752               	goto	l2069
 13915  00ECD2  0A03               	xorlw	3	; case 2
 13916  00ECD4  B4D8               	btfsc	status,2,c
 13917  00ECD6  D76F               	goto	l2071
 13918  00ECD8  0A01               	xorlw	1	; case 3
 13919  00ECDA  0012               	return	
 13920  00ECDC                     __end_of_Terminal:
 13921                           	opt stack 0
 13922                           tosu	equ	0xFFF
 13923                           tosh	equ	0xFFE
 13924                           tosl	equ	0xFFD
 13925                           pclath	equ	0xFFA
 13926                           tblptru	equ	0xFF8
 13927                           tblptrh	equ	0xFF7
 13928                           tblptrl	equ	0xFF6
 13929                           tablat	equ	0xFF5
 13930                           prodh	equ	0xFF4
 13931                           prodl	equ	0xFF3
 13932                           intcon	equ	0xFF2
 13933                           intcon2	equ	0xFF1
 13934                           intcon3	equ	0xFF0
 13935                           indf0	equ	0xFEF
 13936                           postinc0	equ	0xFEE
 13937                           plusw0	equ	0xFEB
 13938                           fsr0h	equ	0xFEA
 13939                           fsr0l	equ	0xFE9
 13940                           wreg	equ	0xFE8
 13941                           indf1	equ	0xFE7
 13942                           postinc1	equ	0xFE6
 13943                           postdec1	equ	0xFE5
 13944                           fsr1h	equ	0xFE2
 13945                           fsr1l	equ	0xFE1
 13946                           indf2	equ	0xFDF
 13947                           postinc2	equ	0xFDE
 13948                           postdec2	equ	0xFDD
 13949                           plusw2	equ	0xFDB
 13950                           fsr2h	equ	0xFDA
 13951                           fsr2l	equ	0xFD9
 13952                           status	equ	0xFD8
 13953                           
 13954 ;; *************** function _strtol *****************
 13955 ;; Defined at:
 13956 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtol.c"
 13957 ;; Parameters:    Size  Location     Type
 13958 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 13959 ;;		 -> Terminal@Payload(100), 
 13960 ;;  endptr          2   14[BANK0 ] PTR PTR unsigned char 
 13961 ;;		 -> NULL(0), 
 13962 ;;  base            2   16[BANK0 ] int 
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;  a               4   23[BANK0 ] long 
 13965 ;;  c               1   27[BANK0 ] unsigned char 
 13966 ;;  sign            1   22[BANK0 ] unsigned char 
 13967 ;; Return value:  Size  Location     Type
 13968 ;;                  4   12[BANK0 ] long 
 13969 ;; Registers used:
 13970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13971 ;; Tracked objects:
 13972 ;;		On entry : 0/0
 13973 ;;		On exit  : 0/0
 13974 ;;		Unchanged: 0/0
 13975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13976 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13977 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13978 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13979 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13980 ;;Total ram usage:       16 bytes
 13981 ;; Hardware stack levels used:    1
 13982 ;; Hardware stack levels required when called:   13
 13983 ;; This function calls:
 13984 ;;		___lmul
 13985 ;;		_isalpha
 13986 ;;		_isdigit
 13987 ;;		_isspace
 13988 ;;		_toupper
 13989 ;; This function is called by:
 13990 ;;		_Terminal
 13991 ;; This function uses a non-reentrant model
 13992 ;;
 13993                           
 13994                           	psect	text55
 13995  00D64A                     __ptext55:
 13996                           	opt stack 0
 13997  00D64A                     _strtol:
 13998                           	opt stack 12
 13999                           
 14000                           ;incstack = 0
 14001  00D64A  C06C  FFD9         	movff	strtol@s,fsr2l
 14002  00D64E  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14003  00D652  50DF               	movf	indf2,w,c
 14004  00D654  0100               	movlb	0	; () banked
 14005  00D656  6F7B               	movwf	strtol@c& (0+255),b
 14006                           
 14007                           ; BSR set to: 0
 14008  00D658  4B6C               	infsnz	strtol@s& (0+255),f,b
 14009  00D65A  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14010                           
 14011                           ; BSR set to: 0
 14012  00D65C  517B               	movf	strtol@c& (0+255),w,b
 14013  00D65E  EC47  F051         	call	_isspace
 14014  00D662  B0D8               	btfsc	status,0,c
 14015  00D664  D7F2               	goto	_strtol
 14016  00D666  0E00               	movlw	0
 14017  00D668  0100               	movlb	0	; () banked
 14018  00D66A  6F77               	movwf	strtol@a& (0+255),b
 14019  00D66C  0E00               	movlw	0
 14020  00D66E  6F78               	movwf	(strtol@a+1)& (0+255),b
 14021  00D670  0E00               	movlw	0
 14022  00D672  6F79               	movwf	(strtol@a+2)& (0+255),b
 14023  00D674  0E00               	movlw	0
 14024  00D676  6F7A               	movwf	(strtol@a+3)& (0+255),b
 14025  00D678  0E00               	movlw	0
 14026  00D67A  6F76               	movwf	strtol@sign& (0+255),b
 14027                           
 14028                           ; BSR set to: 0
 14029  00D67C  0E2D               	movlw	45
 14030  00D67E  197B               	xorwf	strtol@c& (0+255),w,b
 14031  00D680  A4D8               	btfss	status,2,c
 14032  00D682  D003               	goto	l2758
 14033                           
 14034                           ; BSR set to: 0
 14035  00D684  0E01               	movlw	1
 14036  00D686  6F76               	movwf	strtol@sign& (0+255),b
 14037  00D688  D004               	goto	u5600
 14038  00D68A                     l2758:
 14039                           
 14040                           ; BSR set to: 0
 14041                           
 14042                           ; BSR set to: 0
 14043  00D68A  0E2B               	movlw	43
 14044  00D68C  197B               	xorwf	strtol@c& (0+255),w,b
 14045  00D68E  A4D8               	btfss	status,2,c
 14046  00D690  D008               	goto	l2760
 14047  00D692                     u5600:
 14048                           
 14049                           ; BSR set to: 0
 14050  00D692  C06C  FFD9         	movff	strtol@s,fsr2l
 14051  00D696  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14052  00D69A  50DF               	movf	indf2,w,c
 14053  00D69C  6F7B               	movwf	strtol@c& (0+255),b
 14054                           
 14055                           ; BSR set to: 0
 14056  00D69E  4B6C               	infsnz	strtol@s& (0+255),f,b
 14057  00D6A0  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14058  00D6A2                     l2760:
 14059                           
 14060                           ; BSR set to: 0
 14061                           
 14062                           ; BSR set to: 0
 14063                           
 14064                           ; BSR set to: 0
 14065  00D6A2  0E30               	movlw	48
 14066  00D6A4  197B               	xorwf	strtol@c& (0+255),w,b
 14067  00D6A6  A4D8               	btfss	status,2,c
 14068  00D6A8  D02E               	goto	l2768
 14069                           
 14070                           ; BSR set to: 0
 14071  00D6AA  C06C  FFD9         	movff	strtol@s,fsr2l
 14072  00D6AE  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14073  00D6B2  50DF               	movf	indf2,w,c
 14074  00D6B4  6F7B               	movwf	strtol@c& (0+255),b
 14075                           
 14076                           ; BSR set to: 0
 14077  00D6B6  4B6C               	infsnz	strtol@s& (0+255),f,b
 14078  00D6B8  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14079                           
 14080                           ; BSR set to: 0
 14081  00D6BA  5170               	movf	strtol@base& (0+255),w,b
 14082  00D6BC  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14083  00D6BE  B4D8               	btfsc	status,2,c
 14084  00D6C0  D005               	goto	u5630
 14085                           
 14086                           ; BSR set to: 0
 14087  00D6C2  0E10               	movlw	16
 14088  00D6C4  1970               	xorwf	strtol@base& (0+255),w,b
 14089  00D6C6  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14090  00D6C8  A4D8               	btfss	status,2,c
 14091  00D6CA  D015               	goto	l2762
 14092  00D6CC                     u5630:
 14093                           
 14094                           ; BSR set to: 0
 14095                           
 14096                           ; BSR set to: 0
 14097  00D6CC  0E78               	movlw	120
 14098  00D6CE  197B               	xorwf	strtol@c& (0+255),w,b
 14099  00D6D0  B4D8               	btfsc	status,2,c
 14100  00D6D2  D004               	goto	u5650
 14101                           
 14102                           ; BSR set to: 0
 14103  00D6D4  0E58               	movlw	88
 14104  00D6D6  197B               	xorwf	strtol@c& (0+255),w,b
 14105  00D6D8  A4D8               	btfss	status,2,c
 14106  00D6DA  D00D               	goto	l2762
 14107  00D6DC                     u5650:
 14108                           
 14109                           ; BSR set to: 0
 14110                           
 14111                           ; BSR set to: 0
 14112  00D6DC  0E00               	movlw	0
 14113  00D6DE  6F71               	movwf	(strtol@base+1)& (0+255),b
 14114  00D6E0  0E10               	movlw	16
 14115  00D6E2  6F70               	movwf	strtol@base& (0+255),b
 14116                           
 14117                           ; BSR set to: 0
 14118  00D6E4  C06C  FFD9         	movff	strtol@s,fsr2l
 14119  00D6E8  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14120  00D6EC  50DF               	movf	indf2,w,c
 14121  00D6EE  6F7B               	movwf	strtol@c& (0+255),b
 14122                           
 14123                           ; BSR set to: 0
 14124  00D6F0  4B6C               	infsnz	strtol@s& (0+255),f,b
 14125  00D6F2  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14126  00D6F4  D008               	goto	l2768
 14127  00D6F6                     l2762:
 14128                           
 14129                           ; BSR set to: 0
 14130                           
 14131                           ; BSR set to: 0
 14132  00D6F6  5170               	movf	strtol@base& (0+255),w,b
 14133  00D6F8  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14134  00D6FA  A4D8               	btfss	status,2,c
 14135  00D6FC  D004               	goto	l2768
 14136                           
 14137                           ; BSR set to: 0
 14138  00D6FE  0E00               	movlw	0
 14139  00D700  6F71               	movwf	(strtol@base+1)& (0+255),b
 14140  00D702  0E08               	movlw	8
 14141  00D704  6F70               	movwf	strtol@base& (0+255),b
 14142  00D706                     l2768:
 14143                           
 14144                           ; BSR set to: 0
 14145                           
 14146                           ; BSR set to: 0
 14147                           
 14148                           ; BSR set to: 0
 14149                           
 14150                           ; BSR set to: 0
 14151  00D706  5170               	movf	strtol@base& (0+255),w,b
 14152  00D708  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14153  00D70A  A4D8               	btfss	status,2,c
 14154  00D70C  D004               	goto	l2769
 14155                           
 14156                           ; BSR set to: 0
 14157  00D70E  0E00               	movlw	0
 14158  00D710  6F71               	movwf	(strtol@base+1)& (0+255),b
 14159  00D712  0E0A               	movlw	10
 14160  00D714  6F70               	movwf	strtol@base& (0+255),b
 14161  00D716                     l2769:
 14162                           
 14163                           ; BSR set to: 0
 14164                           
 14165                           ; BSR set to: 0
 14166                           
 14167                           ; BSR set to: 0
 14168  00D716  517B               	movf	strtol@c& (0+255),w,b
 14169  00D718  ECB5  F051         	call	_isalpha
 14170  00D71C  A0D8               	btfss	status,0,c
 14171  00D71E  D008               	goto	l2771
 14172  00D720  0100               	movlb	0	; () banked
 14173  00D722  517B               	movf	strtol@c& (0+255),w,b
 14174  00D724  EC01  F050         	call	_toupper
 14175  00D728  0FC9               	addlw	201
 14176  00D72A  0100               	movlb	0	; () banked
 14177  00D72C  6F7B               	movwf	strtol@c& (0+255),b
 14178  00D72E  D009               	goto	l2774
 14179  00D730                     l2771:
 14180                           
 14181                           ; BSR set to: 0
 14182  00D730  0100               	movlb	0	; () banked
 14183  00D732  517B               	movf	strtol@c& (0+255),w,b
 14184  00D734  ECB7  F050         	call	_isdigit
 14185  00D738  A0D8               	btfss	status,0,c
 14186  00D73A  D039               	goto	l2775
 14187  00D73C  0E30               	movlw	48
 14188  00D73E  0100               	movlb	0	; () banked
 14189  00D740  5F7B               	subwf	strtol@c& (0+255),f,b
 14190  00D742                     l2774:
 14191                           
 14192                           ; BSR set to: 0
 14193                           
 14194                           ; BSR set to: 0
 14195                           
 14196                           ; BSR set to: 0
 14197  00D742  517B               	movf	strtol@c& (0+255),w,b
 14198  00D744  6F72               	movwf	??_strtol& (0+255),b
 14199  00D746  6B73               	clrf	(??_strtol+1)& (0+255),b
 14200  00D748  5170               	movf	strtol@base& (0+255),w,b
 14201  00D74A  5D72               	subwf	??_strtol& (0+255),w,b
 14202  00D74C  5173               	movf	(??_strtol+1)& (0+255),w,b
 14203  00D74E  0A80               	xorlw	128
 14204  00D750  6F74               	movwf	(??_strtol+2)& (0+255),b
 14205  00D752  5171               	movf	(strtol@base+1)& (0+255),w,b
 14206  00D754  0A80               	xorlw	128
 14207  00D756  5974               	subwfb	(??_strtol+2)& (0+255),w,b
 14208  00D758  B0D8               	btfsc	status,0,c
 14209  00D75A  D029               	goto	l2775
 14210                           
 14211                           ; BSR set to: 0
 14212                           
 14213                           ; BSR set to: 0
 14214                           
 14215                           ; BSR set to: 0
 14216  00D75C  C070  F060         	movff	strtol@base,___lmul@multiplier
 14217  00D760  C071  F061         	movff	strtol@base+1,___lmul@multiplier+1
 14218  00D764  0E00               	movlw	0
 14219  00D766  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 14220  00D768  0EFF               	movlw	-1
 14221  00D76A  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 14222  00D76C  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 14223  00D76E  C077  F064         	movff	strtol@a,___lmul@multiplicand
 14224  00D772  C078  F065         	movff	strtol@a+1,___lmul@multiplicand+1
 14225  00D776  C079  F066         	movff	strtol@a+2,___lmul@multiplicand+2
 14226  00D77A  C07A  F067         	movff	strtol@a+3,___lmul@multiplicand+3
 14227  00D77E  EC06  F056         	call	___lmul	;wreg free
 14228  00D782  0100               	movlb	0	; () banked
 14229  00D784  517B               	movf	strtol@c& (0+255),w,b
 14230  00D786  2560               	addwf	?___lmul& (0+255),w,b
 14231  00D788  6F77               	movwf	strtol@a& (0+255),b
 14232  00D78A  0E00               	movlw	0
 14233  00D78C  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 14234  00D78E  6F78               	movwf	(strtol@a+1)& (0+255),b
 14235  00D790  0E00               	movlw	0
 14236  00D792  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 14237  00D794  6F79               	movwf	(strtol@a+2)& (0+255),b
 14238  00D796  0E00               	movlw	0
 14239  00D798  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 14240  00D79A  6F7A               	movwf	(strtol@a+3)& (0+255),b
 14241                           
 14242                           ; BSR set to: 0
 14243  00D79C  C06C  FFD9         	movff	strtol@s,fsr2l
 14244  00D7A0  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14245  00D7A4  50DF               	movf	indf2,w,c
 14246  00D7A6  6F7B               	movwf	strtol@c& (0+255),b
 14247                           
 14248                           ; BSR set to: 0
 14249  00D7A8  4B6C               	infsnz	strtol@s& (0+255),f,b
 14250  00D7AA  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14251  00D7AC  D7B4               	goto	l2769
 14252  00D7AE                     l2775:
 14253                           
 14254                           ; BSR set to: 0
 14255  00D7AE  0100               	movlb	0	; () banked
 14256  00D7B0  516E               	movf	strtol@endptr& (0+255),w,b
 14257  00D7B2  116F               	iorwf	(strtol@endptr+1)& (0+255),w,b
 14258  00D7B4  B4D8               	btfsc	status,2,c
 14259  00D7B6  D00E               	goto	l2777
 14260                           
 14261                           ; BSR set to: 0
 14262  00D7B8  0EFF               	movlw	255
 14263  00D7BA  256C               	addwf	strtol@s& (0+255),w,b
 14264  00D7BC  6F72               	movwf	??_strtol& (0+255),b
 14265  00D7BE  0EFF               	movlw	255
 14266  00D7C0  216D               	addwfc	(strtol@s+1)& (0+255),w,b
 14267  00D7C2  6F73               	movwf	(??_strtol+1)& (0+255),b
 14268  00D7C4  C06E  FFD9         	movff	strtol@endptr,fsr2l
 14269  00D7C8  C06F  FFDA         	movff	strtol@endptr+1,fsr2h
 14270  00D7CC  C072  FFDE         	movff	??_strtol,postinc2
 14271  00D7D0  C073  FFDD         	movff	??_strtol+1,postdec2
 14272  00D7D4                     l2777:
 14273                           
 14274                           ; BSR set to: 0
 14275                           
 14276                           ; BSR set to: 0
 14277  00D7D4  5176               	movf	strtol@sign& (0+255),w,b
 14278  00D7D6  B4D8               	btfsc	status,2,c
 14279  00D7D8  D01A               	goto	l2778
 14280                           
 14281                           ; BSR set to: 0
 14282  00D7DA  C077  F072         	movff	strtol@a,??_strtol
 14283  00D7DE  C078  F073         	movff	strtol@a+1,??_strtol+1
 14284  00D7E2  C079  F074         	movff	strtol@a+2,??_strtol+2
 14285  00D7E6  C07A  F075         	movff	strtol@a+3,??_strtol+3
 14286  00D7EA  1F72               	comf	??_strtol& (0+255),f,b
 14287  00D7EC  1F73               	comf	(??_strtol+1)& (0+255),f,b
 14288  00D7EE  1F74               	comf	(??_strtol+2)& (0+255),f,b
 14289  00D7F0  1F75               	comf	(??_strtol+3)& (0+255),f,b
 14290  00D7F2  2B72               	incf	??_strtol& (0+255),f,b
 14291  00D7F4  0E00               	movlw	0
 14292  00D7F6  2373               	addwfc	(??_strtol+1)& (0+255),f,b
 14293  00D7F8  2374               	addwfc	(??_strtol+2)& (0+255),f,b
 14294  00D7FA  2375               	addwfc	(??_strtol+3)& (0+255),f,b
 14295  00D7FC  C072  F06C         	movff	??_strtol,?_strtol
 14296  00D800  C073  F06D         	movff	??_strtol+1,?_strtol+1
 14297  00D804  C074  F06E         	movff	??_strtol+2,?_strtol+2
 14298  00D808  C075  F06F         	movff	??_strtol+3,?_strtol+3
 14299                           
 14300                           ; BSR set to: 0
 14301  00D80C  0012               	return	
 14302  00D80E                     l2778:
 14303                           
 14304                           ; BSR set to: 0
 14305  00D80E  C077  F06C         	movff	strtol@a,?_strtol
 14306  00D812  C078  F06D         	movff	strtol@a+1,?_strtol+1
 14307  00D816  C079  F06E         	movff	strtol@a+2,?_strtol+2
 14308  00D81A  C07A  F06F         	movff	strtol@a+3,?_strtol+3
 14309                           
 14310                           ; BSR set to: 0
 14311  00D81E  0012               	return		;funcret
 14312  00D820                     __end_of_strtol:
 14313                           	opt stack 0
 14314                           tosu	equ	0xFFF
 14315                           tosh	equ	0xFFE
 14316                           tosl	equ	0xFFD
 14317                           pclath	equ	0xFFA
 14318                           tblptru	equ	0xFF8
 14319                           tblptrh	equ	0xFF7
 14320                           tblptrl	equ	0xFF6
 14321                           tablat	equ	0xFF5
 14322                           prodh	equ	0xFF4
 14323                           prodl	equ	0xFF3
 14324                           intcon	equ	0xFF2
 14325                           intcon2	equ	0xFF1
 14326                           intcon3	equ	0xFF0
 14327                           indf0	equ	0xFEF
 14328                           postinc0	equ	0xFEE
 14329                           plusw0	equ	0xFEB
 14330                           fsr0h	equ	0xFEA
 14331                           fsr0l	equ	0xFE9
 14332                           wreg	equ	0xFE8
 14333                           indf1	equ	0xFE7
 14334                           postinc1	equ	0xFE6
 14335                           postdec1	equ	0xFE5
 14336                           fsr1h	equ	0xFE2
 14337                           fsr1l	equ	0xFE1
 14338                           indf2	equ	0xFDF
 14339                           postinc2	equ	0xFDE
 14340                           postdec2	equ	0xFDD
 14341                           plusw2	equ	0xFDB
 14342                           fsr2h	equ	0xFDA
 14343                           fsr2l	equ	0xFD9
 14344                           status	equ	0xFD8
 14345                           
 14346 ;; *************** function _toupper *****************
 14347 ;; Defined at:
 14348 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
 14349 ;; Parameters:    Size  Location     Type
 14350 ;;  c               1    wreg     unsigned char 
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;  c               1    0[BANK0 ] unsigned char 
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      unsigned char 
 14355 ;; Registers used:
 14356 ;;		wreg, status,2, status,0
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14365 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14366 ;;Total ram usage:        1 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:   11
 14369 ;; This function calls:
 14370 ;;		Nothing
 14371 ;; This function is called by:
 14372 ;;		_strtol
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376                           	psect	text56
 14377  00A002                     __ptext56:
 14378                           	opt stack 0
 14379  00A002                     _toupper:
 14380                           	opt stack 13
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;incstack = 0
 14384                           ;toupper@c stored from wreg
 14385  00A002  0100               	movlb	0	; () banked
 14386  00A004  6F60               	movwf	toupper@c& (0+255),b
 14387  00A006  0E7B               	movlw	123
 14388  00A008  0100               	movlb	0	; () banked
 14389  00A00A  6160               	cpfslt	toupper@c& (0+255),b
 14390  00A00C  D004               	goto	l2782
 14391                           
 14392                           ; BSR set to: 0
 14393  00A00E  0E60               	movlw	96
 14394  00A010  6560               	cpfsgt	toupper@c& (0+255),b
 14395  00A012  D001               	goto	l2782
 14396                           
 14397                           ; BSR set to: 0
 14398  00A014  9B60               	bcf	toupper@c& (0+255),5,b
 14399  00A016                     l2782:
 14400                           
 14401                           ; BSR set to: 0
 14402                           
 14403                           ; BSR set to: 0
 14404  00A016  5160               	movf	toupper@c& (0+255),w,b
 14405  00A018  0012               	return	
 14406  00A01A                     __end_of_toupper:
 14407                           	opt stack 0
 14408                           tosu	equ	0xFFF
 14409                           tosh	equ	0xFFE
 14410                           tosl	equ	0xFFD
 14411                           pclath	equ	0xFFA
 14412                           tblptru	equ	0xFF8
 14413                           tblptrh	equ	0xFF7
 14414                           tblptrl	equ	0xFF6
 14415                           tablat	equ	0xFF5
 14416                           prodh	equ	0xFF4
 14417                           prodl	equ	0xFF3
 14418                           intcon	equ	0xFF2
 14419                           intcon2	equ	0xFF1
 14420                           intcon3	equ	0xFF0
 14421                           indf0	equ	0xFEF
 14422                           postinc0	equ	0xFEE
 14423                           plusw0	equ	0xFEB
 14424                           fsr0h	equ	0xFEA
 14425                           fsr0l	equ	0xFE9
 14426                           wreg	equ	0xFE8
 14427                           indf1	equ	0xFE7
 14428                           postinc1	equ	0xFE6
 14429                           postdec1	equ	0xFE5
 14430                           fsr1h	equ	0xFE2
 14431                           fsr1l	equ	0xFE1
 14432                           indf2	equ	0xFDF
 14433                           postinc2	equ	0xFDE
 14434                           postdec2	equ	0xFDD
 14435                           plusw2	equ	0xFDB
 14436                           fsr2h	equ	0xFDA
 14437                           fsr2l	equ	0xFD9
 14438                           status	equ	0xFD8
 14439                           
 14440 ;; *************** function _isspace *****************
 14441 ;; Defined at:
 14442 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isspace.c"
 14443 ;; Parameters:    Size  Location     Type
 14444 ;;  c               1    wreg     unsigned char 
 14445 ;; Auto vars:     Size  Location     Type
 14446 ;;  c               1    2[BANK0 ] unsigned char 
 14447 ;; Return value:  Size  Location     Type
 14448 ;;		None               void
 14449 ;; Registers used:
 14450 ;;		wreg, status,2, status,0
 14451 ;; Tracked objects:
 14452 ;;		On entry : 0/0
 14453 ;;		On exit  : 0/0
 14454 ;;		Unchanged: 0/0
 14455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14457 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14458 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14459 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14460 ;;Total ram usage:        3 bytes
 14461 ;; Hardware stack levels used:    1
 14462 ;; Hardware stack levels required when called:   11
 14463 ;; This function calls:
 14464 ;;		Nothing
 14465 ;; This function is called by:
 14466 ;;		_strtol
 14467 ;; This function uses a non-reentrant model
 14468 ;;
 14469                           
 14470                           	psect	text57
 14471  00A28E                     __ptext57:
 14472                           	opt stack 0
 14473  00A28E                     _isspace:
 14474                           	opt stack 13
 14475                           
 14476                           ; BSR set to: 0
 14477                           ;incstack = 0
 14478                           ;isspace@c stored from wreg
 14479  00A28E  0100               	movlb	0	; () banked
 14480  00A290  6F62               	movwf	isspace@c& (0+255),b
 14481  00A292  0E01               	movlw	1
 14482  00A294  0100               	movlb	0	; () banked
 14483  00A296  6F61               	movwf	_isspace$5860& (0+255),b
 14484                           
 14485                           ; BSR set to: 0
 14486  00A298  0E20               	movlw	32
 14487  00A29A  1962               	xorwf	isspace@c& (0+255),w,b
 14488  00A29C  B4D8               	btfsc	status,2,c
 14489  00A29E  D008               	goto	l2813
 14490                           
 14491                           ; BSR set to: 0
 14492  00A2A0  0E0E               	movlw	14
 14493  00A2A2  6162               	cpfslt	isspace@c& (0+255),b
 14494  00A2A4  D003               	goto	u5220
 14495                           
 14496                           ; BSR set to: 0
 14497  00A2A6  0E09               	movlw	9
 14498  00A2A8  6162               	cpfslt	isspace@c& (0+255),b
 14499  00A2AA  D002               	goto	l2813
 14500  00A2AC                     u5220:
 14501                           
 14502                           ; BSR set to: 0
 14503                           
 14504                           ; BSR set to: 0
 14505  00A2AC  0E00               	movlw	0
 14506  00A2AE  6F61               	movwf	_isspace$5860& (0+255),b
 14507  00A2B0                     l2813:
 14508                           
 14509                           ; BSR set to: 0
 14510                           
 14511                           ; BSR set to: 0
 14512  00A2B0  C061  F060         	movff	_isspace$5860,??_isspace
 14513  00A2B4  3160               	rrcf	??_isspace& (0+255),w,b
 14514  00A2B6  0012               	return	
 14515  00A2B8                     __end_of_isspace:
 14516                           	opt stack 0
 14517                           tosu	equ	0xFFF
 14518                           tosh	equ	0xFFE
 14519                           tosl	equ	0xFFD
 14520                           pclath	equ	0xFFA
 14521                           tblptru	equ	0xFF8
 14522                           tblptrh	equ	0xFF7
 14523                           tblptrl	equ	0xFF6
 14524                           tablat	equ	0xFF5
 14525                           prodh	equ	0xFF4
 14526                           prodl	equ	0xFF3
 14527                           intcon	equ	0xFF2
 14528                           intcon2	equ	0xFF1
 14529                           intcon3	equ	0xFF0
 14530                           indf0	equ	0xFEF
 14531                           postinc0	equ	0xFEE
 14532                           plusw0	equ	0xFEB
 14533                           fsr0h	equ	0xFEA
 14534                           fsr0l	equ	0xFE9
 14535                           wreg	equ	0xFE8
 14536                           indf1	equ	0xFE7
 14537                           postinc1	equ	0xFE6
 14538                           postdec1	equ	0xFE5
 14539                           fsr1h	equ	0xFE2
 14540                           fsr1l	equ	0xFE1
 14541                           indf2	equ	0xFDF
 14542                           postinc2	equ	0xFDE
 14543                           postdec2	equ	0xFDD
 14544                           plusw2	equ	0xFDB
 14545                           fsr2h	equ	0xFDA
 14546                           fsr2l	equ	0xFD9
 14547                           status	equ	0xFD8
 14548                           
 14549 ;; *************** function _isalpha *****************
 14550 ;; Defined at:
 14551 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isalpha.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;  c               1    wreg     unsigned char 
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;  c               1    5[BANK0 ] unsigned char 
 14556 ;; Return value:  Size  Location     Type
 14557 ;;		None               void
 14558 ;; Registers used:
 14559 ;;		wreg, status,2, status,0, cstack
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14568 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14569 ;;Total ram usage:        3 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:   12
 14572 ;; This function calls:
 14573 ;;		_isupper
 14574 ;; This function is called by:
 14575 ;;		_strtol
 14576 ;; This function uses a non-reentrant model
 14577 ;;
 14578                           
 14579                           	psect	text58
 14580  00A36A                     __ptext58:
 14581                           	opt stack 0
 14582  00A36A                     _isalpha:
 14583                           	opt stack 12
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;incstack = 0
 14587                           ;isalpha@c stored from wreg
 14588  00A36A  0100               	movlb	0	; () banked
 14589  00A36C  6F65               	movwf	isalpha@c& (0+255),b
 14590  00A36E  0E01               	movlw	1
 14591  00A370  0100               	movlb	0	; () banked
 14592  00A372  6F64               	movwf	_isalpha$5857& (0+255),b
 14593                           
 14594                           ; BSR set to: 0
 14595  00A374  0E7B               	movlw	123
 14596  00A376  6165               	cpfslt	isalpha@c& (0+255),b
 14597  00A378  D003               	goto	u5240
 14598                           
 14599                           ; BSR set to: 0
 14600  00A37A  0E61               	movlw	97
 14601  00A37C  6165               	cpfslt	isalpha@c& (0+255),b
 14602  00A37E  D008               	goto	l2808
 14603  00A380                     u5240:
 14604                           
 14605                           ; BSR set to: 0
 14606                           
 14607                           ; BSR set to: 0
 14608  00A380  5165               	movf	isalpha@c& (0+255),w,b
 14609  00A382  ECD9  F050         	call	_isupper
 14610  00A386  B0D8               	btfsc	status,0,c
 14611  00A388  D003               	goto	l2808
 14612  00A38A  0E00               	movlw	0
 14613  00A38C  0100               	movlb	0	; () banked
 14614  00A38E  6F64               	movwf	_isalpha$5857& (0+255),b
 14615  00A390                     l2808:
 14616                           
 14617                           ; BSR set to: 0
 14618  00A390  C064  F063         	movff	_isalpha$5857,??_isalpha
 14619  00A394  0100               	movlb	0	; () banked
 14620  00A396  3163               	rrcf	??_isalpha& (0+255),w,b
 14621  00A398  0012               	return	
 14622  00A39A                     __end_of_isalpha:
 14623                           	opt stack 0
 14624                           tosu	equ	0xFFF
 14625                           tosh	equ	0xFFE
 14626                           tosl	equ	0xFFD
 14627                           pclath	equ	0xFFA
 14628                           tblptru	equ	0xFF8
 14629                           tblptrh	equ	0xFF7
 14630                           tblptrl	equ	0xFF6
 14631                           tablat	equ	0xFF5
 14632                           prodh	equ	0xFF4
 14633                           prodl	equ	0xFF3
 14634                           intcon	equ	0xFF2
 14635                           intcon2	equ	0xFF1
 14636                           intcon3	equ	0xFF0
 14637                           indf0	equ	0xFEF
 14638                           postinc0	equ	0xFEE
 14639                           plusw0	equ	0xFEB
 14640                           fsr0h	equ	0xFEA
 14641                           fsr0l	equ	0xFE9
 14642                           wreg	equ	0xFE8
 14643                           indf1	equ	0xFE7
 14644                           postinc1	equ	0xFE6
 14645                           postdec1	equ	0xFE5
 14646                           fsr1h	equ	0xFE2
 14647                           fsr1l	equ	0xFE1
 14648                           indf2	equ	0xFDF
 14649                           postinc2	equ	0xFDE
 14650                           postdec2	equ	0xFDD
 14651                           plusw2	equ	0xFDB
 14652                           fsr2h	equ	0xFDA
 14653                           fsr2l	equ	0xFD9
 14654                           status	equ	0xFD8
 14655                           
 14656 ;; *************** function _isupper *****************
 14657 ;; Defined at:
 14658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isupper.c"
 14659 ;; Parameters:    Size  Location     Type
 14660 ;;  c               1    wreg     unsigned char 
 14661 ;; Auto vars:     Size  Location     Type
 14662 ;;  c               1    2[BANK0 ] unsigned char 
 14663 ;; Return value:  Size  Location     Type
 14664 ;;		None               void
 14665 ;; Registers used:
 14666 ;;		wreg, status,2, status,0
 14667 ;; Tracked objects:
 14668 ;;		On entry : 0/0
 14669 ;;		On exit  : 0/0
 14670 ;;		Unchanged: 0/0
 14671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14673 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14674 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14675 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14676 ;;Total ram usage:        3 bytes
 14677 ;; Hardware stack levels used:    1
 14678 ;; Hardware stack levels required when called:   11
 14679 ;; This function calls:
 14680 ;;		Nothing
 14681 ;; This function is called by:
 14682 ;;		_isalpha
 14683 ;; This function uses a non-reentrant model
 14684 ;;
 14685                           
 14686                           	psect	text59
 14687  00A1B2                     __ptext59:
 14688                           	opt stack 0
 14689  00A1B2                     _isupper:
 14690                           	opt stack 12
 14691                           
 14692                           ; BSR set to: 0
 14693                           ;incstack = 0
 14694                           ;isupper@c stored from wreg
 14695  00A1B2  0100               	movlb	0	; () banked
 14696  00A1B4  6F62               	movwf	isupper@c& (0+255),b
 14697  00A1B6  0E00               	movlw	0
 14698  00A1B8  0100               	movlb	0	; () banked
 14699  00A1BA  6F61               	movwf	_isupper$5863& (0+255),b
 14700                           
 14701                           ; BSR set to: 0
 14702  00A1BC  0E5B               	movlw	91
 14703  00A1BE  6162               	cpfslt	isupper@c& (0+255),b
 14704  00A1C0  D005               	goto	l2818
 14705                           
 14706                           ; BSR set to: 0
 14707  00A1C2  0E40               	movlw	64
 14708  00A1C4  6562               	cpfsgt	isupper@c& (0+255),b
 14709  00A1C6  D002               	goto	l2818
 14710                           
 14711                           ; BSR set to: 0
 14712  00A1C8  0E01               	movlw	1
 14713  00A1CA  6F61               	movwf	_isupper$5863& (0+255),b
 14714  00A1CC                     l2818:
 14715                           
 14716                           ; BSR set to: 0
 14717                           
 14718                           ; BSR set to: 0
 14719  00A1CC  C061  F060         	movff	_isupper$5863,??_isupper
 14720  00A1D0  3160               	rrcf	??_isupper& (0+255),w,b
 14721  00A1D2  0012               	return	
 14722  00A1D4                     __end_of_isupper:
 14723                           	opt stack 0
 14724                           tosu	equ	0xFFF
 14725                           tosh	equ	0xFFE
 14726                           tosl	equ	0xFFD
 14727                           pclath	equ	0xFFA
 14728                           tblptru	equ	0xFF8
 14729                           tblptrh	equ	0xFF7
 14730                           tblptrl	equ	0xFF6
 14731                           tablat	equ	0xFF5
 14732                           prodh	equ	0xFF4
 14733                           prodl	equ	0xFF3
 14734                           intcon	equ	0xFF2
 14735                           intcon2	equ	0xFF1
 14736                           intcon3	equ	0xFF0
 14737                           indf0	equ	0xFEF
 14738                           postinc0	equ	0xFEE
 14739                           plusw0	equ	0xFEB
 14740                           fsr0h	equ	0xFEA
 14741                           fsr0l	equ	0xFE9
 14742                           wreg	equ	0xFE8
 14743                           indf1	equ	0xFE7
 14744                           postinc1	equ	0xFE6
 14745                           postdec1	equ	0xFE5
 14746                           fsr1h	equ	0xFE2
 14747                           fsr1l	equ	0xFE1
 14748                           indf2	equ	0xFDF
 14749                           postinc2	equ	0xFDE
 14750                           postdec2	equ	0xFDD
 14751                           plusw2	equ	0xFDB
 14752                           fsr2h	equ	0xFDA
 14753                           fsr2l	equ	0xFD9
 14754                           status	equ	0xFD8
 14755                           
 14756 ;; *************** function _putUSBUSART *****************
 14757 ;; Defined at:
 14758 ;;		line 559 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 14759 ;; Parameters:    Size  Location     Type
 14760 ;;  data            2    6[BANK0 ] PTR unsigned char 
 14761 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(236), Welcome(137), 
 14762 ;;		 -> Terminal@TermRxBuffer(50), Terminal@Payload(100), Terminal@UsbRxBuffer(200), WifiTerminal@UartBuffer(200), 
 14763 ;;  length          1    8[BANK0 ] unsigned char 
 14764 ;; Auto vars:     Size  Location     Type
 14765 ;;		None
 14766 ;; Return value:  Size  Location     Type
 14767 ;;                  1    wreg      void 
 14768 ;; Registers used:
 14769 ;;		wreg, status,2, status,0
 14770 ;; Tracked objects:
 14771 ;;		On entry : 0/0
 14772 ;;		On exit  : 0/0
 14773 ;;		Unchanged: 0/0
 14774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14775 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14778 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14779 ;;Total ram usage:        3 bytes
 14780 ;; Hardware stack levels used:    1
 14781 ;; Hardware stack levels required when called:   11
 14782 ;; This function calls:
 14783 ;;		Nothing
 14784 ;; This function is called by:
 14785 ;;		_Terminal
 14786 ;;		_Term_MainSm
 14787 ;;		_WifiTerminal
 14788 ;; This function uses a non-reentrant model
 14789 ;;
 14790                           
 14791                           	psect	text60
 14792  00A190                     __ptext60:
 14793                           	opt stack 0
 14794  00A190                     _putUSBUSART:
 14795                           	opt stack 15
 14796                           
 14797                           ;usb_device_cdc.c: 584: ;
 14798                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 14799                           
 14800                           ; BSR set to: 0
 14801                           ;incstack = 0
 14802  00A190  0100               	movlb	0	; () banked
 14803  00A192  51FB               	movf	_cdc_trf_state& (0+255),w,b
 14804  00A194  A4D8               	btfss	status,2,c
 14805  00A196  0012               	return	
 14806                           
 14807                           ; BSR set to: 0
 14808                           ;usb_device_cdc.c: 586: {
 14809                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 14810  00A198  C066  F135         	movff	putUSBUSART@data,_pCDCSrc
 14811  00A19C  C067  F136         	movff	putUSBUSART@data+1,_pCDCSrc+1
 14812                           
 14813                           ; BSR set to: 0
 14814  00A1A0  C068  F046         	movff	putUSBUSART@length,_cdc_tx_len
 14815                           
 14816                           ; BSR set to: 0
 14817  00A1A4  0E01               	movlw	1
 14818  00A1A6  0101               	movlb	1	; () banked
 14819  00A1A8  6F5C               	movwf	_cdc_mem_type& (0+255),b
 14820                           
 14821                           ; BSR set to: 1
 14822  00A1AA  0E01               	movlw	1
 14823  00A1AC  0100               	movlb	0	; () banked
 14824  00A1AE  6FFB               	movwf	_cdc_trf_state& (0+255),b
 14825  00A1B0  0012               	return	
 14826  00A1B2                     __end_of_putUSBUSART:
 14827                           	opt stack 0
 14828                           tosu	equ	0xFFF
 14829                           tosh	equ	0xFFE
 14830                           tosl	equ	0xFFD
 14831                           pclath	equ	0xFFA
 14832                           tblptru	equ	0xFF8
 14833                           tblptrh	equ	0xFF7
 14834                           tblptrl	equ	0xFF6
 14835                           tablat	equ	0xFF5
 14836                           prodh	equ	0xFF4
 14837                           prodl	equ	0xFF3
 14838                           intcon	equ	0xFF2
 14839                           intcon2	equ	0xFF1
 14840                           intcon3	equ	0xFF0
 14841                           indf0	equ	0xFEF
 14842                           postinc0	equ	0xFEE
 14843                           plusw0	equ	0xFEB
 14844                           fsr0h	equ	0xFEA
 14845                           fsr0l	equ	0xFE9
 14846                           wreg	equ	0xFE8
 14847                           indf1	equ	0xFE7
 14848                           postinc1	equ	0xFE6
 14849                           postdec1	equ	0xFE5
 14850                           fsr1h	equ	0xFE2
 14851                           fsr1l	equ	0xFE1
 14852                           indf2	equ	0xFDF
 14853                           postinc2	equ	0xFDE
 14854                           postdec2	equ	0xFDD
 14855                           plusw2	equ	0xFDB
 14856                           fsr2h	equ	0xFDA
 14857                           fsr2l	equ	0xFD9
 14858                           status	equ	0xFD8
 14859                           
 14860 ;; *************** function _itoa *****************
 14861 ;; Defined at:
 14862 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 14863 ;; Parameters:    Size  Location     Type
 14864 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 14865 ;;		 -> Terminal@Payload(100), 
 14866 ;;  val             2   18[BANK0 ] int 
 14867 ;;  base            2   20[BANK0 ] int 
 14868 ;; Auto vars:     Size  Location     Type
 14869 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 14870 ;;		 -> Terminal@Payload(100), 
 14871 ;; Return value:  Size  Location     Type
 14872 ;;                  2   16[BANK0 ] PTR unsigned char 
 14873 ;; Registers used:
 14874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14875 ;; Tracked objects:
 14876 ;;		On entry : 0/0
 14877 ;;		On exit  : 0/0
 14878 ;;		Unchanged: 0/0
 14879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14880 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14883 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14884 ;;Total ram usage:        8 bytes
 14885 ;; Hardware stack levels used:    1
 14886 ;; Hardware stack levels required when called:   13
 14887 ;; This function calls:
 14888 ;;		_utoa
 14889 ;; This function is called by:
 14890 ;;		_Terminal
 14891 ;; This function uses a non-reentrant model
 14892 ;;
 14893                           
 14894                           	psect	text61
 14895  00A6EE                     __ptext61:
 14896                           	opt stack 0
 14897  00A6EE                     _itoa:
 14898                           	opt stack 12
 14899                           
 14900                           ; BSR set to: 0
 14901                           ;incstack = 0
 14902  00A6EE  C070  F076         	movff	itoa@buf,itoa@cp
 14903  00A6F2  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 14904  00A6F6  0100               	movlb	0	; () banked
 14905  00A6F8  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 14906  00A6FA  D00C               	goto	l2469
 14907                           
 14908                           ; BSR set to: 0
 14909  00A6FC  C070  FFD9         	movff	itoa@buf,fsr2l
 14910  00A700  C071  FFDA         	movff	itoa@buf+1,fsr2h
 14911  00A704  0E2D               	movlw	45
 14912  00A706  6EDF               	movwf	indf2,c
 14913                           
 14914                           ; BSR set to: 0
 14915  00A708  4B70               	infsnz	itoa@buf& (0+255),f,b
 14916  00A70A  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 14917                           
 14918                           ; BSR set to: 0
 14919  00A70C  6D72               	negf	itoa@val& (0+255),b
 14920  00A70E  1F73               	comf	(itoa@val+1)& (0+255),f,b
 14921  00A710  B0D8               	btfsc	status,0,c
 14922  00A712  2B73               	incf	(itoa@val+1)& (0+255),f,b
 14923  00A714                     l2469:
 14924                           
 14925                           ; BSR set to: 0
 14926                           
 14927                           ; BSR set to: 0
 14928  00A714  C070  F067         	movff	itoa@buf,utoa@buf
 14929  00A718  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 14930  00A71C  C072  F069         	movff	itoa@val,utoa@val
 14931  00A720  C073  F06A         	movff	itoa@val+1,utoa@val+1
 14932  00A724  C074  F06B         	movff	itoa@base,utoa@base
 14933  00A728  C075  F06C         	movff	itoa@base+1,utoa@base+1
 14934  00A72C  ECF3  F05C         	call	_utoa	;wreg free
 14935  00A730  0012               	return	
 14936  00A732                     __end_of_itoa:
 14937                           	opt stack 0
 14938                           tosu	equ	0xFFF
 14939                           tosh	equ	0xFFE
 14940                           tosl	equ	0xFFD
 14941                           pclath	equ	0xFFA
 14942                           tblptru	equ	0xFF8
 14943                           tblptrh	equ	0xFF7
 14944                           tblptrl	equ	0xFF6
 14945                           tablat	equ	0xFF5
 14946                           prodh	equ	0xFF4
 14947                           prodl	equ	0xFF3
 14948                           intcon	equ	0xFF2
 14949                           intcon2	equ	0xFF1
 14950                           intcon3	equ	0xFF0
 14951                           indf0	equ	0xFEF
 14952                           postinc0	equ	0xFEE
 14953                           plusw0	equ	0xFEB
 14954                           fsr0h	equ	0xFEA
 14955                           fsr0l	equ	0xFE9
 14956                           wreg	equ	0xFE8
 14957                           indf1	equ	0xFE7
 14958                           postinc1	equ	0xFE6
 14959                           postdec1	equ	0xFE5
 14960                           fsr1h	equ	0xFE2
 14961                           fsr1l	equ	0xFE1
 14962                           indf2	equ	0xFDF
 14963                           postinc2	equ	0xFDE
 14964                           postdec2	equ	0xFDD
 14965                           plusw2	equ	0xFDB
 14966                           fsr2h	equ	0xFDA
 14967                           fsr2l	equ	0xFD9
 14968                           status	equ	0xFD8
 14969                           
 14970 ;; *************** function _getsUSBUSART *****************
 14971 ;; Defined at:
 14972 ;;		line 488 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 14973 ;; Parameters:    Size  Location     Type
 14974 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 14975 ;;		 -> Terminal@UsbRxBuffer(200), WifiTerminal@UsbBuffer(200), 
 14976 ;;  len             1    9[BANK0 ] unsigned char 
 14977 ;; Auto vars:     Size  Location     Type
 14978 ;;		None
 14979 ;; Return value:  Size  Location     Type
 14980 ;;                  1    wreg      unsigned char 
 14981 ;; Registers used:
 14982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14983 ;; Tracked objects:
 14984 ;;		On entry : 0/0
 14985 ;;		On exit  : 0/0
 14986 ;;		Unchanged: 0/0
 14987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14988 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14991 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14992 ;;Total ram usage:        4 bytes
 14993 ;; Hardware stack levels used:    1
 14994 ;; Hardware stack levels required when called:   12
 14995 ;; This function calls:
 14996 ;;		_USBTransferOnePacket
 14997 ;; This function is called by:
 14998 ;;		_Terminal
 14999 ;;		_WifiTerminal
 15000 ;; This function uses a non-reentrant model
 15001 ;;
 15002                           
 15003                           	psect	text62
 15004  00B5B4                     __ptext62:
 15005                           	opt stack 0
 15006  00B5B4                     _getsUSBUSART:
 15007                           	opt stack 13
 15008                           
 15009                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 15010                           
 15011                           ;incstack = 0
 15012  00B5B4  0E00               	movlw	0
 15013  00B5B6  6E47               	movwf	_cdc_rx_len,c
 15014                           
 15015                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 15016  00B5B8  5044               	movf	_CDCDataOutHandle,w,c
 15017  00B5BA  1045               	iorwf	_CDCDataOutHandle+1,w,c
 15018  00B5BC  B4D8               	btfsc	status,2,c
 15019  00B5BE  D006               	goto	u5480
 15020  00B5C0  C044  FFD9         	movff	_CDCDataOutHandle,fsr2l
 15021  00B5C4  C045  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 15022  00B5C8  BEDF               	btfsc	indf2,7,c
 15023  00B5CA  D03C               	goto	l1661
 15024  00B5CC                     u5480:
 15025                           
 15026                           ;usb_device_cdc.c: 493: {
 15027                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 15028  00B5CC  EE20 F001          	lfsr	2,1
 15029  00B5D0  5044               	movf	_CDCDataOutHandle,w,c
 15030  00B5D2  26D9               	addwf	fsr2l,f,c
 15031  00B5D4  5045               	movf	_CDCDataOutHandle+1,w,c
 15032  00B5D6  22DA               	addwfc	fsr2h,f,c
 15033  00B5D8  0100               	movlb	0	; () banked
 15034  00B5DA  5169               	movf	getsUSBUSART@len& (0+255),w,b
 15035  00B5DC  5CDE               	subwf	postinc2,w,c
 15036  00B5DE  B0D8               	btfsc	status,0,c
 15037  00B5E0  D008               	goto	l1664
 15038                           
 15039                           ; BSR set to: 0
 15040                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 15041  00B5E2  EE20 F001          	lfsr	2,1
 15042  00B5E6  5044               	movf	_CDCDataOutHandle,w,c
 15043  00B5E8  26D9               	addwf	fsr2l,f,c
 15044  00B5EA  5045               	movf	_CDCDataOutHandle+1,w,c
 15045  00B5EC  22DA               	addwfc	fsr2h,f,c
 15046  00B5EE  50DF               	movf	indf2,w,c
 15047  00B5F0  6F69               	movwf	getsUSBUSART@len& (0+255),b
 15048  00B5F2                     l1664:
 15049                           
 15050                           ; BSR set to: 0
 15051                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 15052                           
 15053                           ; BSR set to: 0
 15054  00B5F2  0E00               	movlw	0
 15055  00B5F4  6E47               	movwf	_cdc_rx_len,c
 15056  00B5F6  D013               	goto	l1665
 15057  00B5F8                     
 15058                           ; BSR set to: 0
 15059                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 15060                           
 15061                           ; BSR set to: 0
 15062  00B5F8  5047               	movf	_cdc_rx_len,w,c
 15063  00B5FA  0D01               	mullw	1
 15064  00B5FC  0E00               	movlw	low _cdc_data_rx
 15065  00B5FE  24F3               	addwf	prodl,w,c
 15066  00B600  6ED9               	movwf	fsr2l,c
 15067  00B602  0E02               	movlw	high _cdc_data_rx
 15068  00B604  20F4               	addwfc	prodh,w,c
 15069  00B606  6EDA               	movwf	fsr2h,c
 15070  00B608  5047               	movf	_cdc_rx_len,w,c
 15071  00B60A  0D01               	mullw	1
 15072  00B60C  50F3               	movf	prodl,w,c
 15073  00B60E  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 15074  00B610  6EE1               	movwf	fsr1l,c
 15075  00B612  50F4               	movf	prodh,w,c
 15076  00B614  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 15077  00B616  6EE2               	movwf	fsr1h,c
 15078  00B618  CFDF FFE7          	movff	indf2,indf1
 15079                           
 15080                           ; BSR set to: 0
 15081  00B61C  2A47               	incf	_cdc_rx_len,f,c
 15082  00B61E                     l1665:
 15083                           
 15084                           ; BSR set to: 0
 15085                           
 15086                           ; BSR set to: 0
 15087  00B61E  5169               	movf	getsUSBUSART@len& (0+255),w,b
 15088  00B620  5C47               	subwf	_cdc_rx_len,w,c
 15089  00B622  A0D8               	btfss	status,0,c
 15090  00B624  D7E9               	goto	l1666
 15091                           
 15092                           ; BSR set to: 0
 15093                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15094                           
 15095                           ; BSR set to: 0
 15096  00B626  0E00               	movlw	0
 15097  00B628  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 15098  00B62A  0E00               	movlw	low _cdc_data_rx
 15099  00B62C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 15100  00B62E  0E02               	movlw	high _cdc_data_rx
 15101  00B630  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 15102  00B632  0E40               	movlw	64
 15103  00B634  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 15104  00B636  0E02               	movlw	2
 15105  00B638  ECA7  F05E         	call	_USBTransferOnePacket
 15106  00B63C  C060  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 15107  00B640  C061  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 15108  00B644                     l1661:
 15109                           
 15110                           ;usb_device_cdc.c: 513: }
 15111                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 15112  00B644  5047               	movf	_cdc_rx_len,w,c
 15113  00B646  0012               	return	
 15114  00B648                     __end_of_getsUSBUSART:
 15115                           	opt stack 0
 15116                           tosu	equ	0xFFF
 15117                           tosh	equ	0xFFE
 15118                           tosl	equ	0xFFD
 15119                           pclath	equ	0xFFA
 15120                           tblptru	equ	0xFF8
 15121                           tblptrh	equ	0xFF7
 15122                           tblptrl	equ	0xFF6
 15123                           tablat	equ	0xFF5
 15124                           prodh	equ	0xFF4
 15125                           prodl	equ	0xFF3
 15126                           intcon	equ	0xFF2
 15127                           intcon2	equ	0xFF1
 15128                           intcon3	equ	0xFF0
 15129                           indf0	equ	0xFEF
 15130                           postinc0	equ	0xFEE
 15131                           plusw0	equ	0xFEB
 15132                           fsr0h	equ	0xFEA
 15133                           fsr0l	equ	0xFE9
 15134                           wreg	equ	0xFE8
 15135                           indf1	equ	0xFE7
 15136                           postinc1	equ	0xFE6
 15137                           postdec1	equ	0xFE5
 15138                           fsr1h	equ	0xFE2
 15139                           fsr1l	equ	0xFE1
 15140                           indf2	equ	0xFDF
 15141                           postinc2	equ	0xFDE
 15142                           postdec2	equ	0xFDD
 15143                           plusw2	equ	0xFDB
 15144                           fsr2h	equ	0xFDA
 15145                           fsr2l	equ	0xFD9
 15146                           status	equ	0xFD8
 15147                           
 15148 ;; *************** function _USBTransferOnePacket *****************
 15149 ;; Defined at:
 15150 ;;		line 1013 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 15151 ;; Parameters:    Size  Location     Type
 15152 ;;  ep              1    wreg     unsigned char 
 15153 ;;  dir             1    0[BANK0 ] unsigned char 
 15154 ;;  data            2    1[BANK0 ] PTR unsigned char 
 15155 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 15156 ;;  len             1    3[BANK0 ] unsigned char 
 15157 ;; Auto vars:     Size  Location     Type
 15158 ;;  ep              1    4[BANK0 ] unsigned char 
 15159 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 15160 ;;		 -> BDT(48), NULL(0), 
 15161 ;; Return value:  Size  Location     Type
 15162 ;;                  2    0[BANK0 ] PTR void 
 15163 ;; Registers used:
 15164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15165 ;; Tracked objects:
 15166 ;;		On entry : 0/0
 15167 ;;		On exit  : 0/0
 15168 ;;		Unchanged: 0/0
 15169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15171 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15173 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15174 ;;Total ram usage:        7 bytes
 15175 ;; Hardware stack levels used:    1
 15176 ;; Hardware stack levels required when called:   11
 15177 ;; This function calls:
 15178 ;;		Nothing
 15179 ;; This function is called by:
 15180 ;;		_CDCInitEP
 15181 ;;		_getsUSBUSART
 15182 ;;		_CDCTxService
 15183 ;;		_USBCDCEventHandler
 15184 ;; This function uses a non-reentrant model
 15185 ;;
 15186                           
 15187                           	psect	text63
 15188  00BD4E                     __ptext63:
 15189                           	opt stack 0
 15190  00BD4E                     _USBTransferOnePacket:
 15191                           	opt stack 13
 15192                           
 15193                           ;incstack = 0
 15194                           ;USBTransferOnePacket@ep stored from wreg
 15195  00BD4E  0100               	movlb	0	; () banked
 15196  00BD50  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 15197                           
 15198                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 15199                           ;usb_device.c: 1018: if(dir != 0)
 15200  00BD52  0100               	movlb	0	; () banked
 15201  00BD54  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 15202  00BD56  B4D8               	btfsc	status,2,c
 15203  00BD58  D007               	goto	l1385
 15204                           
 15205                           ; BSR set to: 0
 15206                           ;usb_device.c: 1019: {
 15207                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 15208  00BD5A  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15209  00BD5C  0D02               	mullw	2
 15210  00BD5E  0E3E               	movlw	low _pBDTEntryIn
 15211  00BD60  24F3               	addwf	prodl,w,c
 15212  00BD62  6ED9               	movwf	fsr2l,c
 15213  00BD64  0E00               	movlw	high _pBDTEntryIn
 15214  00BD66  D006               	goto	L14
 15215  00BD68                     l1385:
 15216                           
 15217                           ; BSR set to: 0
 15218                           ;usb_device.c: 1023: else
 15219                           ;usb_device.c: 1024: {
 15220                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 15221                           
 15222                           ; BSR set to: 0
 15223  00BD68  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15224  00BD6A  0D02               	mullw	2
 15225  00BD6C  0E20               	movlw	low _pBDTEntryOut
 15226  00BD6E  24F3               	addwf	prodl,w,c
 15227  00BD70  6ED9               	movwf	fsr2l,c
 15228  00BD72  0E01               	movlw	high _pBDTEntryOut
 15229  00BD74                     L14:
 15230  00BD74  20F4               	addwfc	prodh,w,c
 15231  00BD76  6EDA               	movwf	fsr2h,c
 15232  00BD78  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 15233  00BD7C  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 15234                           
 15235                           ; BSR set to: 0
 15236                           ;usb_device.c: 1027: }
 15237                           ;usb_device.c: 1031: if(handle == 0)
 15238                           
 15239                           ; BSR set to: 0
 15240  00BD80  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15241  00BD82  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15242  00BD84  A4D8               	btfss	status,2,c
 15243  00BD86  D005               	goto	l1387
 15244                           
 15245                           ; BSR set to: 0
 15246                           ;usb_device.c: 1032: {
 15247                           ;usb_device.c: 1033: return 0;
 15248  00BD88  0E00               	movlw	0
 15249  00BD8A  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 15250  00BD8C  0E00               	movlw	0
 15251  00BD8E  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 15252                           
 15253                           ; BSR set to: 0
 15254  00BD90  0012               	return	
 15255  00BD92                     l1387:
 15256                           
 15257                           ; BSR set to: 0
 15258                           ;usb_device.c: 1034: }
 15259                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 15260                           
 15261                           ; BSR set to: 0
 15262  00BD92  EE20 F002          	lfsr	2,2
 15263  00BD96  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15264  00BD98  26D9               	addwf	fsr2l,f,c
 15265  00BD9A  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15266  00BD9C  22DA               	addwfc	fsr2h,f,c
 15267  00BD9E  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 15268  00BDA2  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 15269                           
 15270                           ;usb_device.c: 1048: handle->CNT = len;
 15271  00BDA6  EE20 F001          	lfsr	2,1
 15272  00BDAA  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15273  00BDAC  26D9               	addwf	fsr2l,f,c
 15274  00BDAE  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15275  00BDB0  22DA               	addwfc	fsr2h,f,c
 15276  00BDB2  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 15277                           
 15278                           ; BSR set to: 0
 15279                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 15280  00BDB6  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15281  00BDBA  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15282  00BDBE  0E40               	movlw	64
 15283  00BDC0  16DF               	andwf	indf2,f,c
 15284                           
 15285                           ; BSR set to: 0
 15286                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 15287  00BDC2  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15288  00BDC6  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15289  00BDCA  0E00               	movlw	0
 15290  00BDCC  86DB               	bsf	plusw2,3,c
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 15294  00BDCE  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15295  00BDD2  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15296  00BDD6  0E00               	movlw	0
 15297  00BDD8  8EDB               	bsf	plusw2,7,c
 15298                           
 15299                           ; BSR set to: 0
 15300                           ;usb_device.c: 1054: if(dir != 0)
 15301  00BDDA  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 15302  00BDDC  B4D8               	btfsc	status,2,c
 15303  00BDDE  D007               	goto	l1389
 15304                           
 15305                           ; BSR set to: 0
 15306                           ;usb_device.c: 1055: {
 15307                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 15308  00BDE0  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15309  00BDE2  0D02               	mullw	2
 15310  00BDE4  0E3E               	movlw	low _pBDTEntryIn
 15311  00BDE6  24F3               	addwf	prodl,w,c
 15312  00BDE8  6ED9               	movwf	fsr2l,c
 15313  00BDEA  0E00               	movlw	high _pBDTEntryIn
 15314  00BDEC  D006               	goto	L15
 15315  00BDEE                     l1389:
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;usb_device.c: 1059: else
 15319                           ;usb_device.c: 1060: {
 15320                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 15321                           
 15322                           ; BSR set to: 0
 15323  00BDEE  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15324  00BDF0  0D02               	mullw	2
 15325  00BDF2  0E20               	movlw	low _pBDTEntryOut
 15326  00BDF4  24F3               	addwf	prodl,w,c
 15327  00BDF6  6ED9               	movwf	fsr2l,c
 15328  00BDF8  0E01               	movlw	high _pBDTEntryOut
 15329  00BDFA                     L15:
 15330  00BDFA  20F4               	addwfc	prodh,w,c
 15331  00BDFC  6EDA               	movwf	fsr2h,c
 15332  00BDFE  0E04               	movlw	4
 15333  00BE00  1ADF               	xorwf	indf2,f,c
 15334                           
 15335                           ; BSR set to: 0
 15336                           ;usb_device.c: 1063: }
 15337                           ;usb_device.c: 1064: return (void*)handle;
 15338                           
 15339                           ; BSR set to: 0
 15340  00BE02  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 15341  00BE06  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 15342  00BE0A  0012               	return	
 15343  00BE0C                     __end_of_USBTransferOnePacket:
 15344                           	opt stack 0
 15345                           tosu	equ	0xFFF
 15346                           tosh	equ	0xFFE
 15347                           tosl	equ	0xFFD
 15348                           pclath	equ	0xFFA
 15349                           tblptru	equ	0xFF8
 15350                           tblptrh	equ	0xFF7
 15351                           tblptrl	equ	0xFF6
 15352                           tablat	equ	0xFF5
 15353                           prodh	equ	0xFF4
 15354                           prodl	equ	0xFF3
 15355                           intcon	equ	0xFF2
 15356                           intcon2	equ	0xFF1
 15357                           intcon3	equ	0xFF0
 15358                           indf0	equ	0xFEF
 15359                           postinc0	equ	0xFEE
 15360                           plusw0	equ	0xFEB
 15361                           fsr0h	equ	0xFEA
 15362                           fsr0l	equ	0xFE9
 15363                           wreg	equ	0xFE8
 15364                           indf1	equ	0xFE7
 15365                           postinc1	equ	0xFE6
 15366                           postdec1	equ	0xFE5
 15367                           fsr1h	equ	0xFE2
 15368                           fsr1l	equ	0xFE1
 15369                           indf2	equ	0xFDF
 15370                           postinc2	equ	0xFDE
 15371                           postdec2	equ	0xFDD
 15372                           plusw2	equ	0xFDB
 15373                           fsr2h	equ	0xFDA
 15374                           fsr2l	equ	0xFD9
 15375                           status	equ	0xFD8
 15376                           
 15377 ;; *************** function _atoi *****************
 15378 ;; Defined at:
 15379 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 15380 ;; Parameters:    Size  Location     Type
 15381 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 15382 ;;		 -> Terminal@Addr(4), Terminal@Len(4), 
 15383 ;; Auto vars:     Size  Location     Type
 15384 ;;  a               2   11[BANK0 ] int 
 15385 ;;  sign            1   10[BANK0 ] unsigned char 
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  2    6[BANK0 ] int 
 15388 ;; Registers used:
 15389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15396 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15397 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15398 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15399 ;;Total ram usage:        7 bytes
 15400 ;; Hardware stack levels used:    1
 15401 ;; Hardware stack levels required when called:   12
 15402 ;; This function calls:
 15403 ;;		___wmul
 15404 ;;		_isdigit
 15405 ;; This function is called by:
 15406 ;;		_Terminal
 15407 ;; This function uses a non-reentrant model
 15408 ;;
 15409                           
 15410                           	psect	text64
 15411  00C2C0                     __ptext64:
 15412                           	opt stack 0
 15413  00C2C0                     _atoi:
 15414                           	opt stack 13
 15415                           
 15416                           ; BSR set to: 0
 15417                           ;incstack = 0
 15418  00C2C0  D003               	goto	l2282
 15419  00C2C2  0100               	movlb	0	; () banked
 15420  00C2C4  4B66               	infsnz	atoi@s& (0+255),f,b
 15421  00C2C6  2B67               	incf	(atoi@s+1)& (0+255),f,b
 15422  00C2C8                     l2282:
 15423                           
 15424                           ; BSR set to: 0
 15425  00C2C8  C066  FFD9         	movff	atoi@s,fsr2l
 15426  00C2CC  C067  FFDA         	movff	atoi@s+1,fsr2h
 15427  00C2D0  0E20               	movlw	32
 15428  00C2D2  18DE               	xorwf	postinc2,w,c
 15429  00C2D4  B4D8               	btfsc	status,2,c
 15430  00C2D6  D7F5               	goto	l2283
 15431  00C2D8  C066  FFD9         	movff	atoi@s,fsr2l
 15432  00C2DC  C067  FFDA         	movff	atoi@s+1,fsr2h
 15433  00C2E0  0E09               	movlw	9
 15434  00C2E2  18DE               	xorwf	postinc2,w,c
 15435  00C2E4  B4D8               	btfsc	status,2,c
 15436  00C2E6  D7ED               	goto	l2283
 15437  00C2E8  0E00               	movlw	0
 15438  00C2EA  0100               	movlb	0	; () banked
 15439  00C2EC  6F6C               	movwf	(atoi@a+1)& (0+255),b
 15440  00C2EE  0E00               	movlw	0
 15441  00C2F0  6F6B               	movwf	atoi@a& (0+255),b
 15442  00C2F2  0E00               	movlw	0
 15443  00C2F4  6F6A               	movwf	atoi@sign& (0+255),b
 15444                           
 15445                           ; BSR set to: 0
 15446  00C2F6  C066  FFD9         	movff	atoi@s,fsr2l
 15447  00C2FA  C067  FFDA         	movff	atoi@s+1,fsr2h
 15448  00C2FE  0E2D               	movlw	45
 15449  00C300  18DE               	xorwf	postinc2,w,c
 15450  00C302  A4D8               	btfss	status,2,c
 15451  00C304  D002               	goto	l2285
 15452                           
 15453                           ; BSR set to: 0
 15454  00C306  2B6A               	incf	atoi@sign& (0+255),f,b
 15455  00C308  D026               	goto	l7380
 15456  00C30A                     l2285:
 15457                           
 15458                           ; BSR set to: 0
 15459                           
 15460                           ; BSR set to: 0
 15461  00C30A  C066  FFD9         	movff	atoi@s,fsr2l
 15462  00C30E  C067  FFDA         	movff	atoi@s+1,fsr2h
 15463  00C312  0E2B               	movlw	43
 15464  00C314  18DE               	xorwf	postinc2,w,c
 15465  00C316  A4D8               	btfss	status,2,c
 15466  00C318  D020               	goto	l2288
 15467  00C31A  D01D               	goto	l7380
 15468  00C31C                     
 15469                           ; BSR set to: 0
 15470  00C31C  C06B  F060         	movff	atoi@a,___wmul@multiplier
 15471  00C320  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 15472  00C324  0E00               	movlw	0
 15473  00C326  0100               	movlb	0	; () banked
 15474  00C328  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15475  00C32A  0E0A               	movlw	10
 15476  00C32C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 15477  00C32E  EC33  F051         	call	___wmul	;wreg free
 15478  00C332  C066  FFD9         	movff	atoi@s,fsr2l
 15479  00C336  C067  FFDA         	movff	atoi@s+1,fsr2h
 15480  00C33A  50DF               	movf	indf2,w,c
 15481  00C33C  0100               	movlb	0	; () banked
 15482  00C33E  6F68               	movwf	??_atoi& (0+255),b
 15483  00C340  6B69               	clrf	(??_atoi+1)& (0+255),b
 15484  00C342  5160               	movf	?___wmul& (0+255),w,b
 15485  00C344  2768               	addwf	??_atoi& (0+255),f,b
 15486  00C346  5161               	movf	(?___wmul+1)& (0+255),w,b
 15487  00C348  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 15488  00C34A  0ED0               	movlw	208
 15489  00C34C  2568               	addwf	??_atoi& (0+255),w,b
 15490  00C34E  6F6B               	movwf	atoi@a& (0+255),b
 15491  00C350  0EFF               	movlw	255
 15492  00C352  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 15493  00C354  6F6C               	movwf	(atoi@a+1)& (0+255),b
 15494  00C356                     l7380:
 15495                           
 15496                           ; BSR set to: 0
 15497  00C356  4B66               	infsnz	atoi@s& (0+255),f,b
 15498  00C358  2B67               	incf	(atoi@s+1)& (0+255),f,b
 15499  00C35A                     l2288:
 15500                           
 15501                           ; BSR set to: 0
 15502                           
 15503                           ; BSR set to: 0
 15504  00C35A  C066  FFD9         	movff	atoi@s,fsr2l
 15505  00C35E  C067  FFDA         	movff	atoi@s+1,fsr2h
 15506  00C362  50DF               	movf	indf2,w,c
 15507  00C364  ECB7  F050         	call	_isdigit
 15508  00C368  B0D8               	btfsc	status,0,c
 15509  00C36A  D7D8               	goto	l2289
 15510  00C36C  0100               	movlb	0	; () banked
 15511  00C36E  516A               	movf	atoi@sign& (0+255),w,b
 15512  00C370  B4D8               	btfsc	status,2,c
 15513  00C372  D00D               	goto	l2291
 15514                           
 15515                           ; BSR set to: 0
 15516  00C374  C06B  F068         	movff	atoi@a,??_atoi
 15517  00C378  C06C  F069         	movff	atoi@a+1,??_atoi+1
 15518  00C37C  1F68               	comf	??_atoi& (0+255),f,b
 15519  00C37E  1F69               	comf	(??_atoi+1)& (0+255),f,b
 15520  00C380  4B68               	infsnz	??_atoi& (0+255),f,b
 15521  00C382  2B69               	incf	(??_atoi+1)& (0+255),f,b
 15522  00C384  C068  F066         	movff	??_atoi,?_atoi
 15523  00C388  C069  F067         	movff	??_atoi+1,?_atoi+1
 15524  00C38C  0012               	return	
 15525  00C38E                     l2291:
 15526                           
 15527                           ; BSR set to: 0
 15528  00C38E  C06B  F066         	movff	atoi@a,?_atoi
 15529  00C392  C06C  F067         	movff	atoi@a+1,?_atoi+1
 15530                           
 15531                           ; BSR set to: 0
 15532  00C396  0012               	return		;funcret
 15533  00C398                     __end_of_atoi:
 15534                           	opt stack 0
 15535                           tosu	equ	0xFFF
 15536                           tosh	equ	0xFFE
 15537                           tosl	equ	0xFFD
 15538                           pclath	equ	0xFFA
 15539                           tblptru	equ	0xFF8
 15540                           tblptrh	equ	0xFF7
 15541                           tblptrl	equ	0xFF6
 15542                           tablat	equ	0xFF5
 15543                           prodh	equ	0xFF4
 15544                           prodl	equ	0xFF3
 15545                           intcon	equ	0xFF2
 15546                           intcon2	equ	0xFF1
 15547                           intcon3	equ	0xFF0
 15548                           indf0	equ	0xFEF
 15549                           postinc0	equ	0xFEE
 15550                           plusw0	equ	0xFEB
 15551                           fsr0h	equ	0xFEA
 15552                           fsr0l	equ	0xFE9
 15553                           wreg	equ	0xFE8
 15554                           indf1	equ	0xFE7
 15555                           postinc1	equ	0xFE6
 15556                           postdec1	equ	0xFE5
 15557                           fsr1h	equ	0xFE2
 15558                           fsr1l	equ	0xFE1
 15559                           indf2	equ	0xFDF
 15560                           postinc2	equ	0xFDE
 15561                           postdec2	equ	0xFDD
 15562                           plusw2	equ	0xFDB
 15563                           fsr2h	equ	0xFDA
 15564                           fsr2l	equ	0xFD9
 15565                           status	equ	0xFD8
 15566                           
 15567 ;; *************** function _isdigit *****************
 15568 ;; Defined at:
 15569 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;  c               1    wreg     unsigned char 
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;  c               1    2[BANK0 ] unsigned char 
 15574 ;; Return value:  Size  Location     Type
 15575 ;;		None               void
 15576 ;; Registers used:
 15577 ;;		wreg, status,2, status,0
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15585 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15586 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15587 ;;Total ram usage:        3 bytes
 15588 ;; Hardware stack levels used:    1
 15589 ;; Hardware stack levels required when called:   11
 15590 ;; This function calls:
 15591 ;;		Nothing
 15592 ;; This function is called by:
 15593 ;;		_atoi
 15594 ;;		_strtol
 15595 ;; This function uses a non-reentrant model
 15596 ;;
 15597                           
 15598                           	psect	text65
 15599  00A16E                     __ptext65:
 15600                           	opt stack 0
 15601  00A16E                     _isdigit:
 15602                           	opt stack 13
 15603                           
 15604                           ; BSR set to: 0
 15605                           ;incstack = 0
 15606                           ;isdigit@c stored from wreg
 15607  00A16E  0100               	movlb	0	; () banked
 15608  00A170  6F62               	movwf	isdigit@c& (0+255),b
 15609  00A172  0E00               	movlw	0
 15610  00A174  0100               	movlb	0	; () banked
 15611  00A176  6F61               	movwf	_isdigit$5592& (0+255),b
 15612                           
 15613                           ; BSR set to: 0
 15614  00A178  0E3A               	movlw	58
 15615  00A17A  6162               	cpfslt	isdigit@c& (0+255),b
 15616  00A17C  D005               	goto	l2463
 15617                           
 15618                           ; BSR set to: 0
 15619  00A17E  0E2F               	movlw	47
 15620  00A180  6562               	cpfsgt	isdigit@c& (0+255),b
 15621  00A182  D002               	goto	l2463
 15622                           
 15623                           ; BSR set to: 0
 15624  00A184  0E01               	movlw	1
 15625  00A186  6F61               	movwf	_isdigit$5592& (0+255),b
 15626  00A188                     l2463:
 15627                           
 15628                           ; BSR set to: 0
 15629                           
 15630                           ; BSR set to: 0
 15631  00A188  C061  F060         	movff	_isdigit$5592,??_isdigit
 15632  00A18C  3160               	rrcf	??_isdigit& (0+255),w,b
 15633  00A18E  0012               	return	
 15634  00A190                     __end_of_isdigit:
 15635                           	opt stack 0
 15636                           tosu	equ	0xFFF
 15637                           tosh	equ	0xFFE
 15638                           tosl	equ	0xFFD
 15639                           pclath	equ	0xFFA
 15640                           tblptru	equ	0xFF8
 15641                           tblptrh	equ	0xFF7
 15642                           tblptrl	equ	0xFF6
 15643                           tablat	equ	0xFF5
 15644                           prodh	equ	0xFF4
 15645                           prodl	equ	0xFF3
 15646                           intcon	equ	0xFF2
 15647                           intcon2	equ	0xFF1
 15648                           intcon3	equ	0xFF0
 15649                           indf0	equ	0xFEF
 15650                           postinc0	equ	0xFEE
 15651                           plusw0	equ	0xFEB
 15652                           fsr0h	equ	0xFEA
 15653                           fsr0l	equ	0xFE9
 15654                           wreg	equ	0xFE8
 15655                           indf1	equ	0xFE7
 15656                           postinc1	equ	0xFE6
 15657                           postdec1	equ	0xFE5
 15658                           fsr1h	equ	0xFE2
 15659                           fsr1l	equ	0xFE1
 15660                           indf2	equ	0xFDF
 15661                           postinc2	equ	0xFDE
 15662                           postdec2	equ	0xFDD
 15663                           plusw2	equ	0xFDB
 15664                           fsr2h	equ	0xFDA
 15665                           fsr2l	equ	0xFD9
 15666                           status	equ	0xFD8
 15667                           
 15668 ;; *************** function _I2cSlv_SendI2cMsg *****************
 15669 ;; Defined at:
 15670 ;;		line 236 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 15671 ;; Parameters:    Size  Location     Type
 15672 ;;  TxBuffer        2    3[BANK0 ] PTR unsigned char 
 15673 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 15674 ;;  SlaveAddr       1    5[BANK0 ] unsigned char 
 15675 ;;  DataLenght      1    6[BANK0 ] unsigned char 
 15676 ;; Auto vars:     Size  Location     Type
 15677 ;;  TxSts           1    7[BANK0 ] unsigned char 
 15678 ;; Return value:  Size  Location     Type
 15679 ;;                  1    wreg      unsigned char 
 15680 ;; Registers used:
 15681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15682 ;; Tracked objects:
 15683 ;;		On entry : 0/0
 15684 ;;		On exit  : 0/0
 15685 ;;		Unchanged: 0/0
 15686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15687 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15690 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15691 ;;Total ram usage:        5 bytes
 15692 ;; Hardware stack levels used:    1
 15693 ;; Hardware stack levels required when called:   12
 15694 ;; This function calls:
 15695 ;;		_GenerateEvt
 15696 ;; This function is called by:
 15697 ;;		_Terminal
 15698 ;; This function uses a non-reentrant model
 15699 ;;
 15700                           
 15701                           	psect	text66
 15702  00A5E6                     __ptext66:
 15703                           	opt stack 0
 15704  00A5E6                     _I2cSlv_SendI2cMsg:
 15705                           	opt stack 13
 15706                           
 15707                           ;i2c_slv.c: 238: UINT8 TxSts = 0u;
 15708                           
 15709                           ; BSR set to: 0
 15710                           ;incstack = 0
 15711  00A5E6  0E00               	movlw	0
 15712  00A5E8  0100               	movlb	0	; () banked
 15713  00A5EA  6F67               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15714                           
 15715                           ; BSR set to: 0
 15716                           ;i2c_slv.c: 240: if (I2cComSts != TxInProgress)
 15717  00A5EC  044E               	decf	_I2cComSts,w,c
 15718  00A5EE  B4D8               	btfsc	status,2,c
 15719  00A5F0  D016               	goto	l1182
 15720                           
 15721                           ; BSR set to: 0
 15722                           ;i2c_slv.c: 241: {
 15723                           ;i2c_slv.c: 243: I2cTxPacket.SlaveAddress = SlaveAddr;
 15724  00A5F2  C065  F1AC         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;i2c_slv.c: 244: I2cTxPacket.ReadWrite = ((UINT8)(0));
 15728  00A5F6  0E00               	movlw	0
 15729  00A5F8  0101               	movlb	1	; () banked
 15730  00A5FA  6FAD               	movwf	(_I2cTxPacket+1)& (0+255),b
 15731                           
 15732                           ; BSR set to: 1
 15733                           ;i2c_slv.c: 245: I2cTxPacket.Lenght = DataLenght;
 15734  00A5FC  C066  F1B0         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 15735                           
 15736                           ; BSR set to: 1
 15737                           ;i2c_slv.c: 246: I2cTxPacket.Buffer = TxBuffer;
 15738  00A600  C063  F1AE         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 15739  00A604  C064  F1AF         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 15740                           
 15741                           ; BSR set to: 1
 15742                           ;i2c_slv.c: 249: GenerateEvt(&I2cWriteDataEvt);
 15743  00A608  0E54               	movlw	low _I2cWriteDataEvt
 15744  00A60A  0100               	movlb	0	; () banked
 15745  00A60C  6F60               	movwf	GenerateEvt@Event& (0+255),b
 15746  00A60E  0E00               	movlw	high _I2cWriteDataEvt
 15747  00A610  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 15748  00A612  ECF5  F04F         	call	_GenerateEvt	;wreg free
 15749                           
 15750                           ;i2c_slv.c: 251: TxSts = 1u;
 15751  00A616  0E01               	movlw	1
 15752  00A618  0100               	movlb	0	; () banked
 15753  00A61A  6F67               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15754                           
 15755                           ;i2c_slv.c: 252: }
 15756  00A61C  0012               	return	
 15757  00A61E                     l1182:
 15758                           
 15759                           ; BSR set to: 0
 15760                           ;i2c_slv.c: 253: else
 15761                           ;i2c_slv.c: 254: {
 15762                           ;i2c_slv.c: 256: TxSts = 0u;
 15763                           
 15764                           ; BSR set to: 0
 15765  00A61E  0E00               	movlw	0
 15766  00A620  6F67               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15767                           
 15768                           ; BSR set to: 0
 15769  00A622  0012               	return	
 15770  00A624                     __end_of_I2cSlv_SendI2cMsg:
 15771                           	opt stack 0
 15772                           tosu	equ	0xFFF
 15773                           tosh	equ	0xFFE
 15774                           tosl	equ	0xFFD
 15775                           pclath	equ	0xFFA
 15776                           tblptru	equ	0xFF8
 15777                           tblptrh	equ	0xFF7
 15778                           tblptrl	equ	0xFF6
 15779                           tablat	equ	0xFF5
 15780                           prodh	equ	0xFF4
 15781                           prodl	equ	0xFF3
 15782                           intcon	equ	0xFF2
 15783                           intcon2	equ	0xFF1
 15784                           intcon3	equ	0xFF0
 15785                           indf0	equ	0xFEF
 15786                           postinc0	equ	0xFEE
 15787                           plusw0	equ	0xFEB
 15788                           fsr0h	equ	0xFEA
 15789                           fsr0l	equ	0xFE9
 15790                           wreg	equ	0xFE8
 15791                           indf1	equ	0xFE7
 15792                           postinc1	equ	0xFE6
 15793                           postdec1	equ	0xFE5
 15794                           fsr1h	equ	0xFE2
 15795                           fsr1l	equ	0xFE1
 15796                           indf2	equ	0xFDF
 15797                           postinc2	equ	0xFDE
 15798                           postdec2	equ	0xFDD
 15799                           plusw2	equ	0xFDB
 15800                           fsr2h	equ	0xFDA
 15801                           fsr2l	equ	0xFD9
 15802                           status	equ	0xFD8
 15803                           
 15804 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 15805 ;; Defined at:
 15806 ;;		line 273 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 15807 ;; Parameters:    Size  Location     Type
 15808 ;;  RxBuffer        2    3[BANK0 ] PTR unsigned char 
 15809 ;;		 -> Terminal@TermRxBuffer(50), 
 15810 ;;  SlaveAddr       1    5[BANK0 ] unsigned char 
 15811 ;;  DataLenght      1    6[BANK0 ] unsigned char 
 15812 ;; Auto vars:     Size  Location     Type
 15813 ;;  RxSts           1    7[BANK0 ] unsigned char 
 15814 ;; Return value:  Size  Location     Type
 15815 ;;                  1    wreg      unsigned char 
 15816 ;; Registers used:
 15817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15818 ;; Tracked objects:
 15819 ;;		On entry : 0/0
 15820 ;;		On exit  : 0/0
 15821 ;;		Unchanged: 0/0
 15822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15823 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15826 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15827 ;;Total ram usage:        5 bytes
 15828 ;; Hardware stack levels used:    1
 15829 ;; Hardware stack levels required when called:   12
 15830 ;; This function calls:
 15831 ;;		_GenerateEvt
 15832 ;; This function is called by:
 15833 ;;		_Terminal
 15834 ;; This function uses a non-reentrant model
 15835 ;;
 15836                           
 15837                           	psect	text67
 15838  00A6AA                     __ptext67:
 15839                           	opt stack 0
 15840  00A6AA                     _I2cSlv_ReceiveI2cMsg:
 15841                           	opt stack 13
 15842                           
 15843                           ;i2c_slv.c: 275: UINT8 RxSts = 0u;
 15844                           
 15845                           ; BSR set to: 0
 15846                           ;incstack = 0
 15847  00A6AA  0E00               	movlw	0
 15848  00A6AC  0100               	movlb	0	; () banked
 15849  00A6AE  6F67               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;i2c_slv.c: 277: if (I2cComSts != RxInProgress)
 15853  00A6B0  0E02               	movlw	2
 15854  00A6B2  184E               	xorwf	_I2cComSts,w,c
 15855  00A6B4  B4D8               	btfsc	status,2,c
 15856  00A6B6  D018               	goto	l1187
 15857                           
 15858                           ; BSR set to: 0
 15859                           ;i2c_slv.c: 278: {
 15860                           ;i2c_slv.c: 280: I2cRxPacket.SlaveAddress = SlaveAddr;
 15861  00A6B8  C065  F1A6         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 15862                           
 15863                           ; BSR set to: 0
 15864                           ;i2c_slv.c: 281: I2cRxPacket.ReadWrite = ((UINT8)(1));
 15865  00A6BC  0E01               	movlw	1
 15866  00A6BE  0101               	movlb	1	; () banked
 15867  00A6C0  6FA7               	movwf	(_I2cRxPacket+1)& (0+255),b
 15868                           
 15869                           ; BSR set to: 1
 15870                           ;i2c_slv.c: 283: I2cRxPacket.Lenght = DataLenght + 1;
 15871  00A6C2  0100               	movlb	0	; () banked
 15872  00A6C4  2966               	incf	I2cSlv_ReceiveI2cMsg@DataLenght& (0+255),w,b
 15873  00A6C6  0101               	movlb	1	; () banked
 15874  00A6C8  6FAA               	movwf	(_I2cRxPacket+4)& (0+255),b
 15875                           
 15876                           ; BSR set to: 1
 15877                           ;i2c_slv.c: 284: I2cRxPacket.Buffer = RxBuffer;
 15878  00A6CA  C063  F1A8         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 15879  00A6CE  C064  F1A9         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 15880                           
 15881                           ; BSR set to: 1
 15882                           ;i2c_slv.c: 287: GenerateEvt(&I2cReadDataEvt);
 15883  00A6D2  0E53               	movlw	low _I2cReadDataEvt
 15884  00A6D4  0100               	movlb	0	; () banked
 15885  00A6D6  6F60               	movwf	GenerateEvt@Event& (0+255),b
 15886  00A6D8  0E00               	movlw	high _I2cReadDataEvt
 15887  00A6DA  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 15888  00A6DC  ECF5  F04F         	call	_GenerateEvt	;wreg free
 15889                           
 15890                           ;i2c_slv.c: 289: RxSts = 1u;
 15891  00A6E0  0E01               	movlw	1
 15892  00A6E2  0100               	movlb	0	; () banked
 15893  00A6E4  6F67               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15894                           
 15895                           ;i2c_slv.c: 290: }
 15896  00A6E6  0012               	return	
 15897  00A6E8                     l1187:
 15898                           
 15899                           ; BSR set to: 0
 15900                           ;i2c_slv.c: 291: else
 15901                           ;i2c_slv.c: 292: {
 15902                           ;i2c_slv.c: 294: RxSts = 0u;
 15903                           
 15904                           ; BSR set to: 0
 15905  00A6E8  0E00               	movlw	0
 15906  00A6EA  6F67               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15907                           
 15908                           ; BSR set to: 0
 15909  00A6EC  0012               	return	
 15910  00A6EE                     __end_of_I2cSlv_ReceiveI2cMsg:
 15911                           	opt stack 0
 15912                           tosu	equ	0xFFF
 15913                           tosh	equ	0xFFE
 15914                           tosl	equ	0xFFD
 15915                           pclath	equ	0xFFA
 15916                           tblptru	equ	0xFF8
 15917                           tblptrh	equ	0xFF7
 15918                           tblptrl	equ	0xFF6
 15919                           tablat	equ	0xFF5
 15920                           prodh	equ	0xFF4
 15921                           prodl	equ	0xFF3
 15922                           intcon	equ	0xFF2
 15923                           intcon2	equ	0xFF1
 15924                           intcon3	equ	0xFF0
 15925                           indf0	equ	0xFEF
 15926                           postinc0	equ	0xFEE
 15927                           plusw0	equ	0xFEB
 15928                           fsr0h	equ	0xFEA
 15929                           fsr0l	equ	0xFE9
 15930                           wreg	equ	0xFE8
 15931                           indf1	equ	0xFE7
 15932                           postinc1	equ	0xFE6
 15933                           postdec1	equ	0xFE5
 15934                           fsr1h	equ	0xFE2
 15935                           fsr1l	equ	0xFE1
 15936                           indf2	equ	0xFDF
 15937                           postinc2	equ	0xFDE
 15938                           postdec2	equ	0xFDD
 15939                           plusw2	equ	0xFDB
 15940                           fsr2h	equ	0xFDA
 15941                           fsr2l	equ	0xFD9
 15942                           status	equ	0xFD8
 15943                           
 15944 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 15945 ;; Defined at:
 15946 ;;		line 309 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 15947 ;; Parameters:    Size  Location     Type
 15948 ;;		None
 15949 ;; Auto vars:     Size  Location     Type
 15950 ;;  Result          1    4[BANK0 ] enum E8843
 15951 ;; Return value:  Size  Location     Type
 15952 ;;                  1    wreg      enum E8843
 15953 ;; Registers used:
 15954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15955 ;; Tracked objects:
 15956 ;;		On entry : 0/0
 15957 ;;		On exit  : 0/0
 15958 ;;		Unchanged: 0/0
 15959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15963 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15964 ;;Total ram usage:        1 bytes
 15965 ;; Hardware stack levels used:    1
 15966 ;; Hardware stack levels required when called:   12
 15967 ;; This function calls:
 15968 ;;		_ReceiveEvt
 15969 ;; This function is called by:
 15970 ;;		_Terminal
 15971 ;; This function uses a non-reentrant model
 15972 ;;
 15973                           
 15974                           	psect	text68
 15975  00A14C                     __ptext68:
 15976                           	opt stack 0
 15977  00A14C                     _I2cSlv_I2cReadMsgSts:
 15978                           	opt stack 13
 15979                           
 15980                           ;i2c_slv.c: 312: I2cReadMsgStsType Result;
 15981                           ;i2c_slv.c: 315: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 15982                           
 15983                           ; BSR set to: 0
 15984                           ;incstack = 0
 15985  00A14C  0EAB               	movlw	low (_I2cRxPacket+5)
 15986  00A14E  0100               	movlb	0	; () banked
 15987  00A150  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 15988  00A152  0E01               	movlw	high (_I2cRxPacket+5)
 15989  00A154  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 15990  00A156  EC87  F051         	call	_ReceiveEvt	;wreg free
 15991  00A15A  0900               	iorlw	0
 15992  00A15C  B4D8               	btfsc	status,2,c
 15993  00A15E  D002               	goto	l1192
 15994                           
 15995                           ;i2c_slv.c: 316: {
 15996                           ;i2c_slv.c: 317: Result = MessageReceived;
 15997  00A160  0E01               	movlw	1
 15998  00A162  D001               	goto	L16
 15999  00A164                     l1192:
 16000                           
 16001                           ;i2c_slv.c: 319: else
 16002                           ;i2c_slv.c: 320: {
 16003                           ;i2c_slv.c: 321: Result = MessageNotReceived;
 16004                           
 16005                           ; BSR set to: 0
 16006  00A164  0E00               	movlw	0
 16007  00A166                     L16:
 16008  00A166  0100               	movlb	0	; () banked
 16009  00A168  6F64               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 16010                           
 16011                           ; BSR set to: 0
 16012                           ;i2c_slv.c: 322: }
 16013                           ;i2c_slv.c: 324: return Result;
 16014  00A16A  5164               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 16015  00A16C  0012               	return	
 16016  00A16E                     __end_of_I2cSlv_I2cReadMsgSts:
 16017                           	opt stack 0
 16018                           tosu	equ	0xFFF
 16019                           tosh	equ	0xFFE
 16020                           tosl	equ	0xFFD
 16021                           pclath	equ	0xFFA
 16022                           tblptru	equ	0xFF8
 16023                           tblptrh	equ	0xFF7
 16024                           tblptrl	equ	0xFF6
 16025                           tablat	equ	0xFF5
 16026                           prodh	equ	0xFF4
 16027                           prodl	equ	0xFF3
 16028                           intcon	equ	0xFF2
 16029                           intcon2	equ	0xFF1
 16030                           intcon3	equ	0xFF0
 16031                           indf0	equ	0xFEF
 16032                           postinc0	equ	0xFEE
 16033                           plusw0	equ	0xFEB
 16034                           fsr0h	equ	0xFEA
 16035                           fsr0l	equ	0xFE9
 16036                           wreg	equ	0xFE8
 16037                           indf1	equ	0xFE7
 16038                           postinc1	equ	0xFE6
 16039                           postdec1	equ	0xFE5
 16040                           fsr1h	equ	0xFE2
 16041                           fsr1l	equ	0xFE1
 16042                           indf2	equ	0xFDF
 16043                           postinc2	equ	0xFDE
 16044                           postdec2	equ	0xFDD
 16045                           plusw2	equ	0xFDB
 16046                           fsr2h	equ	0xFDA
 16047                           fsr2l	equ	0xFD9
 16048                           status	equ	0xFD8
 16049                           
 16050 ;; *************** function _Rtcm_SetRtccDate *****************
 16051 ;; Defined at:
 16052 ;;		line 178 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 16053 ;; Parameters:    Size  Location     Type
 16054 ;;  Date            8   12[BANK0 ] struct _RtccDateType
 16055 ;; Auto vars:     Size  Location     Type
 16056 ;;		None
 16057 ;; Return value:  Size  Location     Type
 16058 ;;                  1    wreg      void 
 16059 ;; Registers used:
 16060 ;;		wreg, status,2, status,0, cstack
 16061 ;; Tracked objects:
 16062 ;;		On entry : 0/0
 16063 ;;		On exit  : 0/0
 16064 ;;		Unchanged: 0/0
 16065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16066 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16069 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16070 ;;Total ram usage:        8 bytes
 16071 ;; Hardware stack levels used:    1
 16072 ;; Hardware stack levels required when called:   13
 16073 ;; This function calls:
 16074 ;;		_Rtcc_LockRtc
 16075 ;;		_Rtcc_SetRtccValue
 16076 ;;		_Rtcc_UnlockRtc
 16077 ;; This function is called by:
 16078 ;;		_Rtcm_MainTask
 16079 ;; This function uses a non-reentrant model
 16080 ;;
 16081                           
 16082                           	psect	text69
 16083  00AA5E                     __ptext69:
 16084                           	opt stack 0
 16085  00AA5E                     _Rtcm_SetRtccDate:
 16086                           	opt stack 14
 16087                           
 16088                           ;rtcm.c: 181: Rtcc_UnlockRtc();
 16089                           
 16090                           ; BSR set to: 0
 16091                           ;incstack = 0
 16092  00AA5E  ECA6  F04F         	call	_Rtcc_UnlockRtc	;wreg free
 16093                           
 16094                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 16095  00AA62  0100               	movlb	0	; () banked
 16096  00AA64  516C               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 16097  00AA66  0F30               	addlw	48
 16098  00AA68  6F68               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 16099  00AA6A  0E00               	movlw	0
 16100  00AA6C  EC25  F06D         	call	_Rtcc_SetRtccValue
 16101                           
 16102                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 16103  00AA70  C06E  F068         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 16104  00AA74  0E01               	movlw	1
 16105  00AA76  EC25  F06D         	call	_Rtcc_SetRtccValue
 16106                           
 16107                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 16108  00AA7A  C06F  F068         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 16109  00AA7E  0E02               	movlw	2
 16110  00AA80  EC25  F06D         	call	_Rtcc_SetRtccValue
 16111                           
 16112                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 16113  00AA84  C070  F068         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 16114  00AA88  0E03               	movlw	3
 16115  00AA8A  EC25  F06D         	call	_Rtcc_SetRtccValue
 16116                           
 16117                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 16118  00AA8E  C071  F068         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 16119  00AA92  0E04               	movlw	4
 16120  00AA94  EC25  F06D         	call	_Rtcc_SetRtccValue
 16121                           
 16122                           ;rtcm.c: 189: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 16123  00AA98  C072  F068         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 16124  00AA9C  0E05               	movlw	5
 16125  00AA9E  EC25  F06D         	call	_Rtcc_SetRtccValue
 16126                           
 16127                           ;rtcm.c: 190: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 16128  00AAA2  C073  F068         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 16129  00AAA6  0E06               	movlw	6
 16130  00AAA8  EC25  F06D         	call	_Rtcc_SetRtccValue
 16131                           
 16132                           ;rtcm.c: 193: Rtcc_LockRtc();
 16133  00AAAC  EC9E  F04F         	call	_Rtcc_LockRtc	;wreg free
 16134  00AAB0  0012               	return		;funcret
 16135  00AAB2                     __end_of_Rtcm_SetRtccDate:
 16136                           	opt stack 0
 16137                           tosu	equ	0xFFF
 16138                           tosh	equ	0xFFE
 16139                           tosl	equ	0xFFD
 16140                           pclath	equ	0xFFA
 16141                           tblptru	equ	0xFF8
 16142                           tblptrh	equ	0xFF7
 16143                           tblptrl	equ	0xFF6
 16144                           tablat	equ	0xFF5
 16145                           prodh	equ	0xFF4
 16146                           prodl	equ	0xFF3
 16147                           intcon	equ	0xFF2
 16148                           intcon2	equ	0xFF1
 16149                           intcon3	equ	0xFF0
 16150                           indf0	equ	0xFEF
 16151                           postinc0	equ	0xFEE
 16152                           plusw0	equ	0xFEB
 16153                           fsr0h	equ	0xFEA
 16154                           fsr0l	equ	0xFE9
 16155                           wreg	equ	0xFE8
 16156                           indf1	equ	0xFE7
 16157                           postinc1	equ	0xFE6
 16158                           postdec1	equ	0xFE5
 16159                           fsr1h	equ	0xFE2
 16160                           fsr1l	equ	0xFE1
 16161                           indf2	equ	0xFDF
 16162                           postinc2	equ	0xFDE
 16163                           postdec2	equ	0xFDD
 16164                           plusw2	equ	0xFDB
 16165                           fsr2h	equ	0xFDA
 16166                           fsr2l	equ	0xFD9
 16167                           status	equ	0xFD8
 16168                           
 16169 ;; *************** function _Rtcc_UnlockRtc *****************
 16170 ;; Defined at:
 16171 ;;		line 163 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 16172 ;; Parameters:    Size  Location     Type
 16173 ;;		None
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;		None
 16176 ;; Return value:  Size  Location     Type
 16177 ;;                  1    wreg      void 
 16178 ;; Registers used:
 16179 ;;		None
 16180 ;; Tracked objects:
 16181 ;;		On entry : 0/0
 16182 ;;		On exit  : 0/0
 16183 ;;		Unchanged: 0/0
 16184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16189 ;;Total ram usage:        0 bytes
 16190 ;; Hardware stack levels used:    1
 16191 ;; Hardware stack levels required when called:   11
 16192 ;; This function calls:
 16193 ;;		Nothing
 16194 ;; This function is called by:
 16195 ;;		_Rtcm_MainTask
 16196 ;;		_Rtcm_SetRtccDate
 16197 ;;		_Rtcm_SetRtccAlarm
 16198 ;; This function uses a non-reentrant model
 16199 ;;
 16200                           
 16201                           	psect	text70
 16202  009F4C                     __ptext70:
 16203                           	opt stack 0
 16204  009F4C                     _Rtcc_UnlockRtc:
 16205                           	opt stack 15
 16206                           
 16207                           ;incstack = 0
 16208  009F4C  010F               	movlb	15	;# 
 16209  009F4E  0E55               	movlw	85	;# 
 16210  009F50  6EA7               	movwf	4007,c	;# 
 16211  009F52  0EAA               	movlw	170	;# 
 16212  009F54  6EA7               	movwf	4007,c	;# 
 16213                           
 16214                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1;
 16215  009F56  010F               	movlb	15	; () banked
 16216  009F58  8B3F               	bsf	63,5,b	;volatile
 16217                           
 16218                           ; BSR set to: 15
 16219  009F5A  0012               	return		;funcret
 16220  009F5C                     __end_of_Rtcc_UnlockRtc:
 16221                           	opt stack 0
 16222                           tosu	equ	0xFFF
 16223                           tosh	equ	0xFFE
 16224                           tosl	equ	0xFFD
 16225                           pclath	equ	0xFFA
 16226                           tblptru	equ	0xFF8
 16227                           tblptrh	equ	0xFF7
 16228                           tblptrl	equ	0xFF6
 16229                           tablat	equ	0xFF5
 16230                           prodh	equ	0xFF4
 16231                           prodl	equ	0xFF3
 16232                           intcon	equ	0xFF2
 16233                           intcon2	equ	0xFF1
 16234                           intcon3	equ	0xFF0
 16235                           indf0	equ	0xFEF
 16236                           postinc0	equ	0xFEE
 16237                           plusw0	equ	0xFEB
 16238                           fsr0h	equ	0xFEA
 16239                           fsr0l	equ	0xFE9
 16240                           wreg	equ	0xFE8
 16241                           indf1	equ	0xFE7
 16242                           postinc1	equ	0xFE6
 16243                           postdec1	equ	0xFE5
 16244                           fsr1h	equ	0xFE2
 16245                           fsr1l	equ	0xFE1
 16246                           indf2	equ	0xFDF
 16247                           postinc2	equ	0xFDE
 16248                           postdec2	equ	0xFDD
 16249                           plusw2	equ	0xFDB
 16250                           fsr2h	equ	0xFDA
 16251                           fsr2l	equ	0xFD9
 16252                           status	equ	0xFD8
 16253                           
 16254 ;; *************** function _Rtcc_SetRtccValue *****************
 16255 ;; Defined at:
 16256 ;;		line 383 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 16257 ;; Parameters:    Size  Location     Type
 16258 ;;  RtccPtrVal      1    wreg     enum E7751
 16259 ;;  Value           1    8[BANK0 ] unsigned char 
 16260 ;; Auto vars:     Size  Location     Type
 16261 ;;  RtccPtrVal      1   11[BANK0 ] enum E7751
 16262 ;; Return value:  Size  Location     Type
 16263 ;;                  1    wreg      void 
 16264 ;; Registers used:
 16265 ;;		wreg, status,2, status,0, cstack
 16266 ;; Tracked objects:
 16267 ;;		On entry : 0/0
 16268 ;;		On exit  : 0/0
 16269 ;;		Unchanged: 0/0
 16270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16271 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16273 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16274 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16275 ;;Total ram usage:        4 bytes
 16276 ;; Hardware stack levels used:    1
 16277 ;; Hardware stack levels required when called:   12
 16278 ;; This function calls:
 16279 ;;		___awdiv
 16280 ;;		___awmod
 16281 ;; This function is called by:
 16282 ;;		_Rtcm_SetRtccDate
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286                           	psect	text71
 16287  00DA4A                     __ptext71:
 16288                           	opt stack 0
 16289  00DA4A                     _Rtcc_SetRtccValue:
 16290                           	opt stack 14
 16291                           
 16292                           ; BSR set to: 15
 16293                           ;incstack = 0
 16294                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 16295  00DA4A  0100               	movlb	0	; () banked
 16296  00DA4C  6F6B               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 16297                           
 16298                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 16299  00DA4E  D0FC               	goto	l323
 16300  00DA50                     l324:
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 16304  00DA50  010F               	movlb	15	; () banked
 16305  00DA52  833F               	bsf	63,1,b	;volatile
 16306                           
 16307                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 16308  00DA54  813F               	bsf	63,0,b	;volatile
 16309                           
 16310                           ; BSR set to: 15
 16311                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16312  00DA56  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16313  00DA5A  0100               	movlb	0	; () banked
 16314  00DA5C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16315  00DA5E  0E00               	movlw	0
 16316  00DA60  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16317  00DA62  0E0A               	movlw	10
 16318  00DA64  6F62               	movwf	___awmod@divisor& (0+255),b
 16319  00DA66  EC39  F058         	call	___awmod	;wreg free
 16320  00DA6A  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16321  00DA6E  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16322  00DA72  0E0F               	movlw	15
 16323  00DA74  0100               	movlb	0	; () banked
 16324  00DA76  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16325  00DA78  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16326  00DA7C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16327  00DA7E  0E00               	movlw	0
 16328  00DA80  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16329  00DA82  0E0A               	movlw	10
 16330  00DA84  6F62               	movwf	___awdiv@divisor& (0+255),b
 16331  00DA86  EC34  F059         	call	___awdiv	;wreg free
 16332  00DA8A  0100               	movlb	0	; () banked
 16333  00DA8C  3960               	swapf	?___awdiv& (0+255),w,b
 16334  00DA8E  0BF0               	andlw	240
 16335  00DA90  0BF0               	andlw	240
 16336  00DA92  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16337  00DA94  6E98               	movwf	3992,c	;volatile
 16338                           
 16339                           ;rtcc_drv.c: 393: break;
 16340  00DA96  0012               	return	
 16341  00DA98                     l326:
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 16345  00DA98  010F               	movlb	15	; () banked
 16346  00DA9A  833F               	bsf	63,1,b	;volatile
 16347                           
 16348                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 16349  00DA9C  913F               	bcf	63,0,b	;volatile
 16350                           
 16351                           ; BSR set to: 15
 16352                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16353  00DA9E  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16354  00DAA2  0100               	movlb	0	; () banked
 16355  00DAA4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16356  00DAA6  0E00               	movlw	0
 16357  00DAA8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16358  00DAAA  0E0A               	movlw	10
 16359  00DAAC  6F62               	movwf	___awmod@divisor& (0+255),b
 16360  00DAAE  EC39  F058         	call	___awmod	;wreg free
 16361  00DAB2  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16362  00DAB6  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16363  00DABA  0E0F               	movlw	15
 16364  00DABC  0100               	movlb	0	; () banked
 16365  00DABE  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16366  00DAC0  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16367  00DAC4  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16368  00DAC6  0E00               	movlw	0
 16369  00DAC8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16370  00DACA  0E0A               	movlw	10
 16371  00DACC  6F62               	movwf	___awdiv@divisor& (0+255),b
 16372  00DACE  EC34  F059         	call	___awdiv	;wreg free
 16373  00DAD2  0100               	movlb	0	; () banked
 16374  00DAD4  3960               	swapf	?___awdiv& (0+255),w,b
 16375  00DAD6  0BF0               	andlw	240
 16376  00DAD8  0BF0               	andlw	240
 16377  00DADA  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16378  00DADC  6E99               	movwf	3993,c	;volatile
 16379                           
 16380                           ;rtcc_drv.c: 401: break;
 16381  00DADE  0012               	return	
 16382  00DAE0                     l327:
 16383                           
 16384                           ; BSR set to: 0
 16385                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 16386  00DAE0  010F               	movlb	15	; () banked
 16387  00DAE2  833F               	bsf	63,1,b	;volatile
 16388                           
 16389                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 16390  00DAE4  913F               	bcf	63,0,b	;volatile
 16391                           
 16392                           ; BSR set to: 15
 16393                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16394  00DAE6  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16395  00DAEA  0100               	movlb	0	; () banked
 16396  00DAEC  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16397  00DAEE  0E00               	movlw	0
 16398  00DAF0  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16399  00DAF2  0E0A               	movlw	10
 16400  00DAF4  6F62               	movwf	___awmod@divisor& (0+255),b
 16401  00DAF6  EC39  F058         	call	___awmod	;wreg free
 16402  00DAFA  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16403  00DAFE  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16404  00DB02  0E0F               	movlw	15
 16405  00DB04  0100               	movlb	0	; () banked
 16406  00DB06  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16407  00DB08  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16408  00DB0C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16409  00DB0E  0E00               	movlw	0
 16410  00DB10  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16411  00DB12  0E0A               	movlw	10
 16412  00DB14  6F62               	movwf	___awdiv@divisor& (0+255),b
 16413  00DB16  EC34  F059         	call	___awdiv	;wreg free
 16414  00DB1A  0100               	movlb	0	; () banked
 16415  00DB1C  3960               	swapf	?___awdiv& (0+255),w,b
 16416  00DB1E  0BF0               	andlw	240
 16417  00DB20  0BF0               	andlw	240
 16418  00DB22  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16419  00DB24  6E98               	movwf	3992,c	;volatile
 16420                           
 16421                           ;rtcc_drv.c: 409: break;
 16422  00DB26  0012               	return	
 16423  00DB28                     l328:
 16424                           
 16425                           ; BSR set to: 0
 16426                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 16427  00DB28  010F               	movlb	15	; () banked
 16428  00DB2A  933F               	bcf	63,1,b	;volatile
 16429                           
 16430                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 16431  00DB2C  813F               	bsf	63,0,b	;volatile
 16432                           
 16433                           ; BSR set to: 15
 16434                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16435  00DB2E  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16436  00DB32  0100               	movlb	0	; () banked
 16437  00DB34  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16438  00DB36  0E00               	movlw	0
 16439  00DB38  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16440  00DB3A  0E0A               	movlw	10
 16441  00DB3C  6F62               	movwf	___awmod@divisor& (0+255),b
 16442  00DB3E  EC39  F058         	call	___awmod	;wreg free
 16443  00DB42  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16444  00DB46  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16445  00DB4A  0E0F               	movlw	15
 16446  00DB4C  0100               	movlb	0	; () banked
 16447  00DB4E  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16448  00DB50  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16449  00DB54  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16450  00DB56  0E00               	movlw	0
 16451  00DB58  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16452  00DB5A  0E0A               	movlw	10
 16453  00DB5C  6F62               	movwf	___awdiv@divisor& (0+255),b
 16454  00DB5E  EC34  F059         	call	___awdiv	;wreg free
 16455  00DB62  0100               	movlb	0	; () banked
 16456  00DB64  3960               	swapf	?___awdiv& (0+255),w,b
 16457  00DB66  0BF0               	andlw	240
 16458  00DB68  0BF0               	andlw	240
 16459  00DB6A  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16460  00DB6C  6E99               	movwf	3993,c	;volatile
 16461                           
 16462                           ;rtcc_drv.c: 417: break;
 16463  00DB6E  0012               	return	
 16464  00DB70                     l329:
 16465                           
 16466                           ; BSR set to: 0
 16467                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 16468  00DB70  010F               	movlb	15	; () banked
 16469  00DB72  933F               	bcf	63,1,b	;volatile
 16470                           
 16471                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 16472  00DB74  813F               	bsf	63,0,b	;volatile
 16473                           
 16474                           ; BSR set to: 15
 16475                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16476  00DB76  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16477  00DB7A  0100               	movlb	0	; () banked
 16478  00DB7C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16479  00DB7E  0E00               	movlw	0
 16480  00DB80  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16481  00DB82  0E0A               	movlw	10
 16482  00DB84  6F62               	movwf	___awmod@divisor& (0+255),b
 16483  00DB86  EC39  F058         	call	___awmod	;wreg free
 16484  00DB8A  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16485  00DB8E  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16486  00DB92  0E0F               	movlw	15
 16487  00DB94  0100               	movlb	0	; () banked
 16488  00DB96  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16489  00DB98  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16490  00DB9C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16491  00DB9E  0E00               	movlw	0
 16492  00DBA0  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16493  00DBA2  0E0A               	movlw	10
 16494  00DBA4  6F62               	movwf	___awdiv@divisor& (0+255),b
 16495  00DBA6  EC34  F059         	call	___awdiv	;wreg free
 16496  00DBAA  0100               	movlb	0	; () banked
 16497  00DBAC  3960               	swapf	?___awdiv& (0+255),w,b
 16498  00DBAE  0BF0               	andlw	240
 16499  00DBB0  0BF0               	andlw	240
 16500  00DBB2  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16501  00DBB4  6E98               	movwf	3992,c	;volatile
 16502                           
 16503                           ;rtcc_drv.c: 425: break;
 16504  00DBB6  0012               	return	
 16505  00DBB8                     l330:
 16506                           
 16507                           ; BSR set to: 0
 16508                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 16509  00DBB8  010F               	movlb	15	; () banked
 16510  00DBBA  933F               	bcf	63,1,b	;volatile
 16511                           
 16512                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 16513  00DBBC  913F               	bcf	63,0,b	;volatile
 16514                           
 16515                           ; BSR set to: 15
 16516                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16517  00DBBE  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16518  00DBC2  0100               	movlb	0	; () banked
 16519  00DBC4  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16520  00DBC6  0E00               	movlw	0
 16521  00DBC8  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16522  00DBCA  0E0A               	movlw	10
 16523  00DBCC  6F62               	movwf	___awmod@divisor& (0+255),b
 16524  00DBCE  EC39  F058         	call	___awmod	;wreg free
 16525  00DBD2  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16526  00DBD6  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16527  00DBDA  0E0F               	movlw	15
 16528  00DBDC  0100               	movlb	0	; () banked
 16529  00DBDE  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16530  00DBE0  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16531  00DBE4  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16532  00DBE6  0E00               	movlw	0
 16533  00DBE8  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16534  00DBEA  0E0A               	movlw	10
 16535  00DBEC  6F62               	movwf	___awdiv@divisor& (0+255),b
 16536  00DBEE  EC34  F059         	call	___awdiv	;wreg free
 16537  00DBF2  0100               	movlb	0	; () banked
 16538  00DBF4  3960               	swapf	?___awdiv& (0+255),w,b
 16539  00DBF6  0BF0               	andlw	240
 16540  00DBF8  0BF0               	andlw	240
 16541  00DBFA  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16542  00DBFC  6E99               	movwf	3993,c	;volatile
 16543                           
 16544                           ;rtcc_drv.c: 433: break;
 16545  00DBFE  0012               	return	
 16546  00DC00                     l331:
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 16550  00DC00  010F               	movlb	15	; () banked
 16551  00DC02  933F               	bcf	63,1,b	;volatile
 16552                           
 16553                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 16554  00DC04  913F               	bcf	63,0,b	;volatile
 16555                           
 16556                           ; BSR set to: 15
 16557                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16558  00DC06  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16559  00DC0A  0100               	movlb	0	; () banked
 16560  00DC0C  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16561  00DC0E  0E00               	movlw	0
 16562  00DC10  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16563  00DC12  0E0A               	movlw	10
 16564  00DC14  6F62               	movwf	___awmod@divisor& (0+255),b
 16565  00DC16  EC39  F058         	call	___awmod	;wreg free
 16566  00DC1A  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16567  00DC1E  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16568  00DC22  0E0F               	movlw	15
 16569  00DC24  0100               	movlb	0	; () banked
 16570  00DC26  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16571  00DC28  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16572  00DC2C  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16573  00DC2E  0E00               	movlw	0
 16574  00DC30  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16575  00DC32  0E0A               	movlw	10
 16576  00DC34  6F62               	movwf	___awdiv@divisor& (0+255),b
 16577  00DC36  EC34  F059         	call	___awdiv	;wreg free
 16578  00DC3A  0100               	movlb	0	; () banked
 16579  00DC3C  3960               	swapf	?___awdiv& (0+255),w,b
 16580  00DC3E  0BF0               	andlw	240
 16581  00DC40  0BF0               	andlw	240
 16582  00DC42  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16583  00DC44  6E98               	movwf	3992,c	;volatile
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;rtcc_drv.c: 445: }
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;rtcc_drv.c: 444: break;
 16590                           
 16591                           ;rtcc_drv.c: 443: default:
 16592                           
 16593                           ;rtcc_drv.c: 441: break;
 16594  00DC46  0012               	return	
 16595  00DC48                     l323:
 16596                           
 16597                           ; BSR set to: 0
 16598  00DC48  0100               	movlb	0	; () banked
 16599  00DC4A  516B               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 16600                           
 16601                           ; Switch size 1, requested type "space"
 16602                           ; Number of cases is 7, Range of values is 0 to 6
 16603                           ; switch strategies available:
 16604                           ; Name         Instructions Cycles
 16605                           ; simple_byte           22    12 (average)
 16606                           ;	Chosen strategy is simple_byte
 16607  00DC4C  0A00               	xorlw	0	; case 0
 16608  00DC4E  B4D8               	btfsc	status,2,c
 16609  00DC50  D6FF               	goto	l324
 16610  00DC52  0A01               	xorlw	1	; case 1
 16611  00DC54  B4D8               	btfsc	status,2,c
 16612  00DC56  D720               	goto	l326
 16613  00DC58  0A03               	xorlw	3	; case 2
 16614  00DC5A  B4D8               	btfsc	status,2,c
 16615  00DC5C  D741               	goto	l327
 16616  00DC5E  0A01               	xorlw	1	; case 3
 16617  00DC60  B4D8               	btfsc	status,2,c
 16618  00DC62  D762               	goto	l328
 16619  00DC64  0A07               	xorlw	7	; case 4
 16620  00DC66  B4D8               	btfsc	status,2,c
 16621  00DC68  D783               	goto	l329
 16622  00DC6A  0A01               	xorlw	1	; case 5
 16623  00DC6C  B4D8               	btfsc	status,2,c
 16624  00DC6E  D7A4               	goto	l330
 16625  00DC70  0A03               	xorlw	3	; case 6
 16626  00DC72  A4D8               	btfss	status,2,c
 16627  00DC74  0012               	return	
 16628  00DC76  D7C4               	goto	l331
 16629  00DC78                     __end_of_Rtcc_SetRtccValue:
 16630                           	opt stack 0
 16631                           tosu	equ	0xFFF
 16632                           tosh	equ	0xFFE
 16633                           tosl	equ	0xFFD
 16634                           pclath	equ	0xFFA
 16635                           tblptru	equ	0xFF8
 16636                           tblptrh	equ	0xFF7
 16637                           tblptrl	equ	0xFF6
 16638                           tablat	equ	0xFF5
 16639                           prodh	equ	0xFF4
 16640                           prodl	equ	0xFF3
 16641                           intcon	equ	0xFF2
 16642                           intcon2	equ	0xFF1
 16643                           intcon3	equ	0xFF0
 16644                           indf0	equ	0xFEF
 16645                           postinc0	equ	0xFEE
 16646                           plusw0	equ	0xFEB
 16647                           fsr0h	equ	0xFEA
 16648                           fsr0l	equ	0xFE9
 16649                           wreg	equ	0xFE8
 16650                           indf1	equ	0xFE7
 16651                           postinc1	equ	0xFE6
 16652                           postdec1	equ	0xFE5
 16653                           fsr1h	equ	0xFE2
 16654                           fsr1l	equ	0xFE1
 16655                           indf2	equ	0xFDF
 16656                           postinc2	equ	0xFDE
 16657                           postdec2	equ	0xFDD
 16658                           plusw2	equ	0xFDB
 16659                           fsr2h	equ	0xFDA
 16660                           fsr2l	equ	0xFD9
 16661                           status	equ	0xFD8
 16662                           
 16663 ;; *************** function ___awmod *****************
 16664 ;; Defined at:
 16665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 16666 ;; Parameters:    Size  Location     Type
 16667 ;;  dividend        2    0[BANK0 ] int 
 16668 ;;  divisor         2    2[BANK0 ] int 
 16669 ;; Auto vars:     Size  Location     Type
 16670 ;;  sign            1    5[BANK0 ] unsigned char 
 16671 ;;  counter         1    4[BANK0 ] unsigned char 
 16672 ;; Return value:  Size  Location     Type
 16673 ;;                  2    0[BANK0 ] int 
 16674 ;; Registers used:
 16675 ;;		wreg, status,2, status,0
 16676 ;; Tracked objects:
 16677 ;;		On entry : 0/0
 16678 ;;		On exit  : 0/0
 16679 ;;		Unchanged: 0/0
 16680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16681 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16684 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16685 ;;Total ram usage:        6 bytes
 16686 ;; Hardware stack levels used:    1
 16687 ;; Hardware stack levels required when called:   11
 16688 ;; This function calls:
 16689 ;;		Nothing
 16690 ;; This function is called by:
 16691 ;;		_Rtcc_SetRtccValue
 16692 ;;		_Rtcc_SetRtccAlarm
 16693 ;; This function uses a non-reentrant model
 16694 ;;
 16695                           
 16696                           	psect	text72
 16697  00B072                     __ptext72:
 16698                           	opt stack 0
 16699  00B072                     ___awmod:
 16700                           	opt stack 14
 16701                           
 16702                           ; BSR set to: 0
 16703                           ;incstack = 0
 16704  00B072  0E00               	movlw	0
 16705  00B074  0100               	movlb	0	; () banked
 16706  00B076  6F65               	movwf	___awmod@sign& (0+255),b
 16707                           
 16708                           ; BSR set to: 0
 16709  00B078  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 16710  00B07A  D006               	goto	l2314
 16711                           
 16712                           ; BSR set to: 0
 16713  00B07C  6D60               	negf	___awmod@dividend& (0+255),b
 16714  00B07E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 16715  00B080  B0D8               	btfsc	status,0,c
 16716  00B082  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 16717                           
 16718                           ; BSR set to: 0
 16719  00B084  0E01               	movlw	1
 16720  00B086  6F65               	movwf	___awmod@sign& (0+255),b
 16721  00B088                     l2314:
 16722                           
 16723                           ; BSR set to: 0
 16724                           
 16725                           ; BSR set to: 0
 16726  00B088  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16727  00B08A  D004               	goto	l2315
 16728                           
 16729                           ; BSR set to: 0
 16730  00B08C  6D62               	negf	___awmod@divisor& (0+255),b
 16731  00B08E  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 16732  00B090  B0D8               	btfsc	status,0,c
 16733  00B092  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 16734  00B094                     l2315:
 16735                           
 16736                           ; BSR set to: 0
 16737                           
 16738                           ; BSR set to: 0
 16739  00B094  5162               	movf	___awmod@divisor& (0+255),w,b
 16740  00B096  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 16741  00B098  B4D8               	btfsc	status,2,c
 16742  00B09A  D018               	goto	l2322
 16743                           
 16744                           ; BSR set to: 0
 16745  00B09C  0E01               	movlw	1
 16746  00B09E  6F64               	movwf	___awmod@counter& (0+255),b
 16747  00B0A0  D004               	goto	l2317
 16748  00B0A2                     
 16749                           ; BSR set to: 0
 16750                           
 16751                           ; BSR set to: 0
 16752  00B0A2  90D8               	bcf	status,0,c
 16753  00B0A4  3762               	rlcf	___awmod@divisor& (0+255),f,b
 16754  00B0A6  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 16755  00B0A8  2B64               	incf	___awmod@counter& (0+255),f,b
 16756  00B0AA                     l2317:
 16757                           
 16758                           ; BSR set to: 0
 16759                           
 16760                           ; BSR set to: 0
 16761  00B0AA  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16762  00B0AC  D7FA               	goto	l2318
 16763  00B0AE                     u5850:
 16764                           
 16765                           ; BSR set to: 0
 16766                           
 16767                           ; BSR set to: 0
 16768                           
 16769                           ; BSR set to: 0
 16770  00B0AE  5162               	movf	___awmod@divisor& (0+255),w,b
 16771  00B0B0  5D60               	subwf	___awmod@dividend& (0+255),w,b
 16772  00B0B2  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 16773  00B0B4  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 16774  00B0B6  A0D8               	btfss	status,0,c
 16775  00B0B8  D004               	goto	l2321
 16776                           
 16777                           ; BSR set to: 0
 16778  00B0BA  5162               	movf	___awmod@divisor& (0+255),w,b
 16779  00B0BC  5F60               	subwf	___awmod@dividend& (0+255),f,b
 16780  00B0BE  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 16781  00B0C0  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 16782  00B0C2                     l2321:
 16783                           
 16784                           ; BSR set to: 0
 16785                           
 16786                           ; BSR set to: 0
 16787  00B0C2  90D8               	bcf	status,0,c
 16788  00B0C4  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 16789  00B0C6  3362               	rrcf	___awmod@divisor& (0+255),f,b
 16790                           
 16791                           ; BSR set to: 0
 16792  00B0C8  2F64               	decfsz	___awmod@counter& (0+255),f,b
 16793  00B0CA  D7F1               	goto	u5850
 16794  00B0CC                     l2322:
 16795                           
 16796                           ; BSR set to: 0
 16797                           
 16798                           ; BSR set to: 0
 16799                           
 16800                           ; BSR set to: 0
 16801  00B0CC  5165               	movf	___awmod@sign& (0+255),w,b
 16802  00B0CE  B4D8               	btfsc	status,2,c
 16803  00B0D0  D004               	goto	l2323
 16804                           
 16805                           ; BSR set to: 0
 16806  00B0D2  6D60               	negf	___awmod@dividend& (0+255),b
 16807  00B0D4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 16808  00B0D6  B0D8               	btfsc	status,0,c
 16809  00B0D8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 16810  00B0DA                     l2323:
 16811                           
 16812                           ; BSR set to: 0
 16813                           
 16814                           ; BSR set to: 0
 16815  00B0DA  C060  F060         	movff	___awmod@dividend,?___awmod
 16816  00B0DE  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 16817  00B0E2  0012               	return	
 16818  00B0E4                     __end_of___awmod:
 16819                           	opt stack 0
 16820                           tosu	equ	0xFFF
 16821                           tosh	equ	0xFFE
 16822                           tosl	equ	0xFFD
 16823                           pclath	equ	0xFFA
 16824                           tblptru	equ	0xFF8
 16825                           tblptrh	equ	0xFF7
 16826                           tblptrl	equ	0xFF6
 16827                           tablat	equ	0xFF5
 16828                           prodh	equ	0xFF4
 16829                           prodl	equ	0xFF3
 16830                           intcon	equ	0xFF2
 16831                           intcon2	equ	0xFF1
 16832                           intcon3	equ	0xFF0
 16833                           indf0	equ	0xFEF
 16834                           postinc0	equ	0xFEE
 16835                           plusw0	equ	0xFEB
 16836                           fsr0h	equ	0xFEA
 16837                           fsr0l	equ	0xFE9
 16838                           wreg	equ	0xFE8
 16839                           indf1	equ	0xFE7
 16840                           postinc1	equ	0xFE6
 16841                           postdec1	equ	0xFE5
 16842                           fsr1h	equ	0xFE2
 16843                           fsr1l	equ	0xFE1
 16844                           indf2	equ	0xFDF
 16845                           postinc2	equ	0xFDE
 16846                           postdec2	equ	0xFDD
 16847                           plusw2	equ	0xFDB
 16848                           fsr2h	equ	0xFDA
 16849                           fsr2l	equ	0xFD9
 16850                           status	equ	0xFD8
 16851                           
 16852 ;; *************** function ___awdiv *****************
 16853 ;; Defined at:
 16854 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 16855 ;; Parameters:    Size  Location     Type
 16856 ;;  dividend        2    0[BANK0 ] int 
 16857 ;;  divisor         2    2[BANK0 ] int 
 16858 ;; Auto vars:     Size  Location     Type
 16859 ;;  quotient        2    6[BANK0 ] int 
 16860 ;;  sign            1    5[BANK0 ] unsigned char 
 16861 ;;  counter         1    4[BANK0 ] unsigned char 
 16862 ;; Return value:  Size  Location     Type
 16863 ;;                  2    0[BANK0 ] int 
 16864 ;; Registers used:
 16865 ;;		wreg, status,2, status,0
 16866 ;; Tracked objects:
 16867 ;;		On entry : 0/0
 16868 ;;		On exit  : 0/0
 16869 ;;		Unchanged: 0/0
 16870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16872 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16874 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16875 ;;Total ram usage:        8 bytes
 16876 ;; Hardware stack levels used:    1
 16877 ;; Hardware stack levels required when called:   11
 16878 ;; This function calls:
 16879 ;;		Nothing
 16880 ;; This function is called by:
 16881 ;;		_Rtcc_SetRtccValue
 16882 ;;		_Rtcc_SetRtccAlarm
 16883 ;; This function uses a non-reentrant model
 16884 ;;
 16885                           
 16886                           	psect	text73
 16887  00B268                     __ptext73:
 16888                           	opt stack 0
 16889  00B268                     ___awdiv:
 16890                           	opt stack 14
 16891                           
 16892                           ; BSR set to: 0
 16893                           ;incstack = 0
 16894  00B268  0E00               	movlw	0
 16895  00B26A  0100               	movlb	0	; () banked
 16896  00B26C  6F65               	movwf	___awdiv@sign& (0+255),b
 16897                           
 16898                           ; BSR set to: 0
 16899  00B26E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16900  00B270  D006               	goto	l2301
 16901                           
 16902                           ; BSR set to: 0
 16903  00B272  6D62               	negf	___awdiv@divisor& (0+255),b
 16904  00B274  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 16905  00B276  B0D8               	btfsc	status,0,c
 16906  00B278  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 16907                           
 16908                           ; BSR set to: 0
 16909  00B27A  0E01               	movlw	1
 16910  00B27C  6F65               	movwf	___awdiv@sign& (0+255),b
 16911  00B27E                     l2301:
 16912                           
 16913                           ; BSR set to: 0
 16914                           
 16915                           ; BSR set to: 0
 16916  00B27E  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 16917  00B280  D006               	goto	l2302
 16918                           
 16919                           ; BSR set to: 0
 16920  00B282  6D60               	negf	___awdiv@dividend& (0+255),b
 16921  00B284  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 16922  00B286  B0D8               	btfsc	status,0,c
 16923  00B288  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 16924                           
 16925                           ; BSR set to: 0
 16926  00B28A  0E01               	movlw	1
 16927  00B28C  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 16928  00B28E                     l2302:
 16929                           
 16930                           ; BSR set to: 0
 16931                           
 16932                           ; BSR set to: 0
 16933  00B28E  0E00               	movlw	0
 16934  00B290  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 16935  00B292  0E00               	movlw	0
 16936  00B294  6F66               	movwf	___awdiv@quotient& (0+255),b
 16937                           
 16938                           ; BSR set to: 0
 16939  00B296  5162               	movf	___awdiv@divisor& (0+255),w,b
 16940  00B298  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 16941  00B29A  B4D8               	btfsc	status,2,c
 16942  00B29C  D01C               	goto	l2309
 16943                           
 16944                           ; BSR set to: 0
 16945  00B29E  0E01               	movlw	1
 16946  00B2A0  6F64               	movwf	___awdiv@counter& (0+255),b
 16947  00B2A2  D004               	goto	l2304
 16948  00B2A4                     
 16949                           ; BSR set to: 0
 16950                           
 16951                           ; BSR set to: 0
 16952  00B2A4  90D8               	bcf	status,0,c
 16953  00B2A6  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 16954  00B2A8  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 16955  00B2AA  2B64               	incf	___awdiv@counter& (0+255),f,b
 16956  00B2AC                     l2304:
 16957                           
 16958                           ; BSR set to: 0
 16959                           
 16960                           ; BSR set to: 0
 16961  00B2AC  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16962  00B2AE  D7FA               	goto	l2305
 16963  00B2B0                     u5790:
 16964                           
 16965                           ; BSR set to: 0
 16966                           
 16967                           ; BSR set to: 0
 16968                           
 16969                           ; BSR set to: 0
 16970  00B2B0  90D8               	bcf	status,0,c
 16971  00B2B2  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 16972  00B2B4  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 16973                           
 16974                           ; BSR set to: 0
 16975  00B2B6  5162               	movf	___awdiv@divisor& (0+255),w,b
 16976  00B2B8  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 16977  00B2BA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16978  00B2BC  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 16979  00B2BE  A0D8               	btfss	status,0,c
 16980  00B2C0  D005               	goto	l2308
 16981                           
 16982                           ; BSR set to: 0
 16983  00B2C2  5162               	movf	___awdiv@divisor& (0+255),w,b
 16984  00B2C4  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 16985  00B2C6  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16986  00B2C8  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 16987                           
 16988                           ; BSR set to: 0
 16989  00B2CA  8166               	bsf	___awdiv@quotient& (0+255),0,b
 16990  00B2CC                     l2308:
 16991                           
 16992                           ; BSR set to: 0
 16993                           
 16994                           ; BSR set to: 0
 16995  00B2CC  90D8               	bcf	status,0,c
 16996  00B2CE  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 16997  00B2D0  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 16998                           
 16999                           ; BSR set to: 0
 17000  00B2D2  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 17001  00B2D4  D7ED               	goto	u5790
 17002  00B2D6                     l2309:
 17003                           
 17004                           ; BSR set to: 0
 17005                           
 17006                           ; BSR set to: 0
 17007                           
 17008                           ; BSR set to: 0
 17009  00B2D6  5165               	movf	___awdiv@sign& (0+255),w,b
 17010  00B2D8  B4D8               	btfsc	status,2,c
 17011  00B2DA  D004               	goto	l2310
 17012                           
 17013                           ; BSR set to: 0
 17014  00B2DC  6D66               	negf	___awdiv@quotient& (0+255),b
 17015  00B2DE  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 17016  00B2E0  B0D8               	btfsc	status,0,c
 17017  00B2E2  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 17018  00B2E4                     l2310:
 17019                           
 17020                           ; BSR set to: 0
 17021                           
 17022                           ; BSR set to: 0
 17023  00B2E4  C066  F060         	movff	___awdiv@quotient,?___awdiv
 17024  00B2E8  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 17025  00B2EC  0012               	return	
 17026  00B2EE                     __end_of___awdiv:
 17027                           	opt stack 0
 17028                           tosu	equ	0xFFF
 17029                           tosh	equ	0xFFE
 17030                           tosl	equ	0xFFD
 17031                           pclath	equ	0xFFA
 17032                           tblptru	equ	0xFF8
 17033                           tblptrh	equ	0xFF7
 17034                           tblptrl	equ	0xFF6
 17035                           tablat	equ	0xFF5
 17036                           prodh	equ	0xFF4
 17037                           prodl	equ	0xFF3
 17038                           intcon	equ	0xFF2
 17039                           intcon2	equ	0xFF1
 17040                           intcon3	equ	0xFF0
 17041                           indf0	equ	0xFEF
 17042                           postinc0	equ	0xFEE
 17043                           plusw0	equ	0xFEB
 17044                           fsr0h	equ	0xFEA
 17045                           fsr0l	equ	0xFE9
 17046                           wreg	equ	0xFE8
 17047                           indf1	equ	0xFE7
 17048                           postinc1	equ	0xFE6
 17049                           postdec1	equ	0xFE5
 17050                           fsr1h	equ	0xFE2
 17051                           fsr1l	equ	0xFE1
 17052                           indf2	equ	0xFDF
 17053                           postinc2	equ	0xFDE
 17054                           postdec2	equ	0xFDD
 17055                           plusw2	equ	0xFDB
 17056                           fsr2h	equ	0xFDA
 17057                           fsr2l	equ	0xFD9
 17058                           status	equ	0xFD8
 17059                           
 17060 ;; *************** function _Rtcc_LockRtc *****************
 17061 ;; Defined at:
 17062 ;;		line 183 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17063 ;; Parameters:    Size  Location     Type
 17064 ;;		None
 17065 ;; Auto vars:     Size  Location     Type
 17066 ;;		None
 17067 ;; Return value:  Size  Location     Type
 17068 ;;                  1    wreg      void 
 17069 ;; Registers used:
 17070 ;;		None
 17071 ;; Tracked objects:
 17072 ;;		On entry : 0/0
 17073 ;;		On exit  : 0/0
 17074 ;;		Unchanged: 0/0
 17075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17080 ;;Total ram usage:        0 bytes
 17081 ;; Hardware stack levels used:    1
 17082 ;; Hardware stack levels required when called:   11
 17083 ;; This function calls:
 17084 ;;		Nothing
 17085 ;; This function is called by:
 17086 ;;		_Rtcm_MainTask
 17087 ;;		_Rtcm_SetRtccDate
 17088 ;;		_Rtcm_SetRtccAlarm
 17089 ;; This function uses a non-reentrant model
 17090 ;;
 17091                           
 17092                           	psect	text74
 17093  009F3C                     __ptext74:
 17094                           	opt stack 0
 17095  009F3C                     _Rtcc_LockRtc:
 17096                           	opt stack 15
 17097                           
 17098                           ; BSR set to: 0
 17099                           ;incstack = 0
 17100  009F3C  010F               	movlb	15	;# 
 17101  009F3E  0E55               	movlw	85	;# 
 17102  009F40  6EA7               	movwf	4007,c	;# 
 17103  009F42  0EAA               	movlw	170	;# 
 17104  009F44  6EA7               	movwf	4007,c	;# 
 17105                           
 17106                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0;
 17107  009F46  010F               	movlb	15	; () banked
 17108  009F48  9B3F               	bcf	63,5,b	;volatile
 17109                           
 17110                           ; BSR set to: 15
 17111  009F4A  0012               	return		;funcret
 17112  009F4C                     __end_of_Rtcc_LockRtc:
 17113                           	opt stack 0
 17114                           tosu	equ	0xFFF
 17115                           tosh	equ	0xFFE
 17116                           tosl	equ	0xFFD
 17117                           pclath	equ	0xFFA
 17118                           tblptru	equ	0xFF8
 17119                           tblptrh	equ	0xFF7
 17120                           tblptrl	equ	0xFF6
 17121                           tablat	equ	0xFF5
 17122                           prodh	equ	0xFF4
 17123                           prodl	equ	0xFF3
 17124                           intcon	equ	0xFF2
 17125                           intcon2	equ	0xFF1
 17126                           intcon3	equ	0xFF0
 17127                           indf0	equ	0xFEF
 17128                           postinc0	equ	0xFEE
 17129                           plusw0	equ	0xFEB
 17130                           fsr0h	equ	0xFEA
 17131                           fsr0l	equ	0xFE9
 17132                           wreg	equ	0xFE8
 17133                           indf1	equ	0xFE7
 17134                           postinc1	equ	0xFE6
 17135                           postdec1	equ	0xFE5
 17136                           fsr1h	equ	0xFE2
 17137                           fsr1l	equ	0xFE1
 17138                           indf2	equ	0xFDF
 17139                           postinc2	equ	0xFDE
 17140                           postdec2	equ	0xFDD
 17141                           plusw2	equ	0xFDB
 17142                           fsr2h	equ	0xFDA
 17143                           fsr2l	equ	0xFD9
 17144                           status	equ	0xFD8
 17145                           
 17146 ;; *************** function _Rtcm_SetAlarmAction *****************
 17147 ;; Defined at:
 17148 ;;		line 278 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 17149 ;; Parameters:    Size  Location     Type
 17150 ;;  Action          2    2[BANK0 ] PTR FTN()void 
 17151 ;;		 -> Alarm(1), 
 17152 ;; Auto vars:     Size  Location     Type
 17153 ;;		None
 17154 ;; Return value:  Size  Location     Type
 17155 ;;                  1    wreg      void 
 17156 ;; Registers used:
 17157 ;;		wreg, status,2, status,0, cstack
 17158 ;; Tracked objects:
 17159 ;;		On entry : 0/0
 17160 ;;		On exit  : 0/0
 17161 ;;		Unchanged: 0/0
 17162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17166 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17167 ;;Total ram usage:        2 bytes
 17168 ;; Hardware stack levels used:    1
 17169 ;; Hardware stack levels required when called:   12
 17170 ;; This function calls:
 17171 ;;		_Rtcc_RegisterRtcIsrCallback
 17172 ;; This function is called by:
 17173 ;;		_Rtcm_MainTask
 17174 ;; This function uses a non-reentrant model
 17175 ;;
 17176                           
 17177                           	psect	text75
 17178  009EF0                     __ptext75:
 17179                           	opt stack 0
 17180  009EF0                     _Rtcm_SetAlarmAction:
 17181                           	opt stack 15
 17182                           
 17183                           ;rtcm.c: 281: Rtcc_RegisterRtcIsrCallback(Action);
 17184                           
 17185                           ; BSR set to: 15
 17186                           ;incstack = 0
 17187  009EF0  C062  F060         	movff	Rtcm_SetAlarmAction@Action,Rtcc_RegisterRtcIsrCallback@IsrCallback
 17188  009EF4  C063  F061         	movff	Rtcm_SetAlarmAction@Action+1,Rtcc_RegisterRtcIsrCallback@IsrCallback+1
 17189  009EF8  EC61  F04F         	call	_Rtcc_RegisterRtcIsrCallback	;wreg free
 17190  009EFC  0012               	return		;funcret
 17191  009EFE                     __end_of_Rtcm_SetAlarmAction:
 17192                           	opt stack 0
 17193                           tosu	equ	0xFFF
 17194                           tosh	equ	0xFFE
 17195                           tosl	equ	0xFFD
 17196                           pclath	equ	0xFFA
 17197                           tblptru	equ	0xFF8
 17198                           tblptrh	equ	0xFF7
 17199                           tblptrl	equ	0xFF6
 17200                           tablat	equ	0xFF5
 17201                           prodh	equ	0xFF4
 17202                           prodl	equ	0xFF3
 17203                           intcon	equ	0xFF2
 17204                           intcon2	equ	0xFF1
 17205                           intcon3	equ	0xFF0
 17206                           indf0	equ	0xFEF
 17207                           postinc0	equ	0xFEE
 17208                           plusw0	equ	0xFEB
 17209                           fsr0h	equ	0xFEA
 17210                           fsr0l	equ	0xFE9
 17211                           wreg	equ	0xFE8
 17212                           indf1	equ	0xFE7
 17213                           postinc1	equ	0xFE6
 17214                           postdec1	equ	0xFE5
 17215                           fsr1h	equ	0xFE2
 17216                           fsr1l	equ	0xFE1
 17217                           indf2	equ	0xFDF
 17218                           postinc2	equ	0xFDE
 17219                           postdec2	equ	0xFDD
 17220                           plusw2	equ	0xFDB
 17221                           fsr2h	equ	0xFDA
 17222                           fsr2l	equ	0xFD9
 17223                           status	equ	0xFD8
 17224                           
 17225 ;; *************** function _Rtcc_RegisterRtcIsrCallback *****************
 17226 ;; Defined at:
 17227 ;;		line 558 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17228 ;; Parameters:    Size  Location     Type
 17229 ;;  IsrCallback     2    0[BANK0 ] PTR FTN()void 
 17230 ;;		 -> Alarm(1), 
 17231 ;; Auto vars:     Size  Location     Type
 17232 ;;		None
 17233 ;; Return value:  Size  Location     Type
 17234 ;;                  1    wreg      void 
 17235 ;; Registers used:
 17236 ;;		wreg, status,2, status,0
 17237 ;; Tracked objects:
 17238 ;;		On entry : 0/0
 17239 ;;		On exit  : 0/0
 17240 ;;		Unchanged: 0/0
 17241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17245 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17246 ;;Total ram usage:        2 bytes
 17247 ;; Hardware stack levels used:    1
 17248 ;; Hardware stack levels required when called:   11
 17249 ;; This function calls:
 17250 ;;		Nothing
 17251 ;; This function is called by:
 17252 ;;		_Rtcm_SetAlarmAction
 17253 ;; This function uses a non-reentrant model
 17254 ;;
 17255                           
 17256                           	psect	text76
 17257  009EC2                     __ptext76:
 17258                           	opt stack 0
 17259  009EC2                     _Rtcc_RegisterRtcIsrCallback:
 17260                           	opt stack 15
 17261                           
 17262                           ;rtcc_drv.c: 561: RtccIsrCallback = IsrCallback;
 17263                           
 17264                           ;incstack = 0
 17265  009EC2  C060  F150         	movff	Rtcc_RegisterRtcIsrCallback@IsrCallback,_RtccIsrCallback
 17266  009EC6  C061  F151         	movff	Rtcc_RegisterRtcIsrCallback@IsrCallback+1,_RtccIsrCallback+1
 17267  009ECA  0012               	return		;funcret
 17268  009ECC                     __end_of_Rtcc_RegisterRtcIsrCallback:
 17269                           	opt stack 0
 17270                           tosu	equ	0xFFF
 17271                           tosh	equ	0xFFE
 17272                           tosl	equ	0xFFD
 17273                           pclath	equ	0xFFA
 17274                           tblptru	equ	0xFF8
 17275                           tblptrh	equ	0xFF7
 17276                           tblptrl	equ	0xFF6
 17277                           tablat	equ	0xFF5
 17278                           prodh	equ	0xFF4
 17279                           prodl	equ	0xFF3
 17280                           intcon	equ	0xFF2
 17281                           intcon2	equ	0xFF1
 17282                           intcon3	equ	0xFF0
 17283                           indf0	equ	0xFEF
 17284                           postinc0	equ	0xFEE
 17285                           plusw0	equ	0xFEB
 17286                           fsr0h	equ	0xFEA
 17287                           fsr0l	equ	0xFE9
 17288                           wreg	equ	0xFE8
 17289                           indf1	equ	0xFE7
 17290                           postinc1	equ	0xFE6
 17291                           postdec1	equ	0xFE5
 17292                           fsr1h	equ	0xFE2
 17293                           fsr1l	equ	0xFE1
 17294                           indf2	equ	0xFDF
 17295                           postinc2	equ	0xFDE
 17296                           postdec2	equ	0xFDD
 17297                           plusw2	equ	0xFDB
 17298                           fsr2h	equ	0xFDA
 17299                           fsr2l	equ	0xFD9
 17300                           status	equ	0xFD8
 17301                           
 17302 ;; *************** function _Rtcm_GetRtccDate *****************
 17303 ;; Defined at:
 17304 ;;		line 204 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 17305 ;; Parameters:    Size  Location     Type
 17306 ;;		None
 17307 ;; Auto vars:     Size  Location     Type
 17308 ;;  LocalDate       8   13[BANK0 ] struct _RtccDateType
 17309 ;; Return value:  Size  Location     Type
 17310 ;;                  8    4[BANK0 ] struct _RtccDateType
 17311 ;; Registers used:
 17312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17313 ;; Tracked objects:
 17314 ;;		On entry : 0/0
 17315 ;;		On exit  : 0/0
 17316 ;;		Unchanged: 0/0
 17317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17318 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17319 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17320 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17321 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17322 ;;Total ram usage:       17 bytes
 17323 ;; Hardware stack levels used:    1
 17324 ;; Hardware stack levels required when called:   12
 17325 ;; This function calls:
 17326 ;;		_Rtcc_GetRtccValue
 17327 ;; This function is called by:
 17328 ;;		_Rtcm_MainTask
 17329 ;; This function uses a non-reentrant model
 17330 ;;
 17331                           
 17332                           	psect	text77
 17333  00ADE6                     __ptext77:
 17334                           	opt stack 0
 17335  00ADE6                     _Rtcm_GetRtccDate:
 17336                           	opt stack 15
 17337                           
 17338                           ;rtcm.c: 206: RtccDateType LocalDate;
 17339                           ;rtcm.c: 209: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 17340                           
 17341                           ;incstack = 0
 17342  00ADE6  0E00               	movlw	0
 17343  00ADE8  EC90  F05A         	call	_Rtcc_GetRtccValue
 17344  00ADEC  0100               	movlb	0	; () banked
 17345  00ADEE  6F6C               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 17346  00ADF0  0ED0               	movlw	208
 17347  00ADF2  256C               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 17348  00ADF4  6F6D               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 17349  00ADF6  6B6E               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 17350  00ADF8  0E07               	movlw	7
 17351  00ADFA  236E               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 17352                           
 17353                           ;rtcm.c: 210: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 17354  00ADFC  0E01               	movlw	1
 17355  00ADFE  EC90  F05A         	call	_Rtcc_GetRtccValue
 17356  00AE02  0100               	movlb	0	; () banked
 17357  00AE04  6F6F               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 17358                           
 17359                           ;rtcm.c: 211: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 17360  00AE06  0E02               	movlw	2
 17361  00AE08  EC90  F05A         	call	_Rtcc_GetRtccValue
 17362  00AE0C  0100               	movlb	0	; () banked
 17363  00AE0E  6F70               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 17364                           
 17365                           ;rtcm.c: 212: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 17366  00AE10  0E03               	movlw	3
 17367  00AE12  EC90  F05A         	call	_Rtcc_GetRtccValue
 17368  00AE16  0100               	movlb	0	; () banked
 17369  00AE18  6F71               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 17370                           
 17371                           ;rtcm.c: 213: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 17372  00AE1A  0E04               	movlw	4
 17373  00AE1C  EC90  F05A         	call	_Rtcc_GetRtccValue
 17374  00AE20  0100               	movlb	0	; () banked
 17375  00AE22  6F72               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 17376                           
 17377                           ;rtcm.c: 214: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 17378  00AE24  0E05               	movlw	5
 17379  00AE26  EC90  F05A         	call	_Rtcc_GetRtccValue
 17380  00AE2A  0100               	movlb	0	; () banked
 17381  00AE2C  6F73               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 17382                           
 17383                           ;rtcm.c: 215: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 17384  00AE2E  0E06               	movlw	6
 17385  00AE30  EC90  F05A         	call	_Rtcc_GetRtccValue
 17386  00AE34  0100               	movlb	0	; () banked
 17387  00AE36  6F74               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 17388                           
 17389                           ; BSR set to: 0
 17390                           ;rtcm.c: 218: return LocalDate;
 17391  00AE38  EE20  F06D         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 17392  00AE3C  EE00  F064         	lfsr	0,?_Rtcm_GetRtccDate
 17393  00AE40  0E07               	movlw	7
 17394  00AE42                     u7601:
 17395  00AE42  CFDB FFEB          	movff	plusw2,plusw0
 17396  00AE46  06E8               	decf	wreg,f,c
 17397  00AE48  E2FC               	bc	u7601
 17398  00AE4A  0012               	return	
 17399  00AE4C                     __end_of_Rtcm_GetRtccDate:
 17400                           	opt stack 0
 17401                           tosu	equ	0xFFF
 17402                           tosh	equ	0xFFE
 17403                           tosl	equ	0xFFD
 17404                           pclath	equ	0xFFA
 17405                           tblptru	equ	0xFF8
 17406                           tblptrh	equ	0xFF7
 17407                           tblptrl	equ	0xFF6
 17408                           tablat	equ	0xFF5
 17409                           prodh	equ	0xFF4
 17410                           prodl	equ	0xFF3
 17411                           intcon	equ	0xFF2
 17412                           intcon2	equ	0xFF1
 17413                           intcon3	equ	0xFF0
 17414                           indf0	equ	0xFEF
 17415                           postinc0	equ	0xFEE
 17416                           plusw0	equ	0xFEB
 17417                           fsr0h	equ	0xFEA
 17418                           fsr0l	equ	0xFE9
 17419                           wreg	equ	0xFE8
 17420                           indf1	equ	0xFE7
 17421                           postinc1	equ	0xFE6
 17422                           postdec1	equ	0xFE5
 17423                           fsr1h	equ	0xFE2
 17424                           fsr1l	equ	0xFE1
 17425                           indf2	equ	0xFDF
 17426                           postinc2	equ	0xFDE
 17427                           postdec2	equ	0xFDD
 17428                           plusw2	equ	0xFDB
 17429                           fsr2h	equ	0xFDA
 17430                           fsr2l	equ	0xFD9
 17431                           status	equ	0xFD8
 17432                           
 17433 ;; *************** function _Rtcc_GetRtccValue *****************
 17434 ;; Defined at:
 17435 ;;		line 205 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17436 ;; Parameters:    Size  Location     Type
 17437 ;;  RtccPtrVal      1    wreg     enum E7751
 17438 ;; Auto vars:     Size  Location     Type
 17439 ;;  RtccPtrVal      1    1[BANK0 ] enum E7751
 17440 ;;  RegValue        1    3[BANK0 ] unsigned char 
 17441 ;;  RetValue        1    2[BANK0 ] unsigned char 
 17442 ;; Return value:  Size  Location     Type
 17443 ;;                  1    wreg      unsigned char 
 17444 ;; Registers used:
 17445 ;;		wreg, status,2, status,0, prodl, prodh
 17446 ;; Tracked objects:
 17447 ;;		On entry : 0/0
 17448 ;;		On exit  : 0/0
 17449 ;;		Unchanged: 0/0
 17450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17452 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17453 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17454 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17455 ;;Total ram usage:        4 bytes
 17456 ;; Hardware stack levels used:    1
 17457 ;; Hardware stack levels required when called:   11
 17458 ;; This function calls:
 17459 ;;		Nothing
 17460 ;; This function is called by:
 17461 ;;		_Rtcm_GetRtccDate
 17462 ;; This function uses a non-reentrant model
 17463 ;;
 17464                           
 17465                           	psect	text78
 17466  00B520                     __ptext78:
 17467                           	opt stack 0
 17468  00B520                     _Rtcc_GetRtccValue:
 17469                           	opt stack 15
 17470                           
 17471                           ; BSR set to: 0
 17472                           ;incstack = 0
 17473                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 17474  00B520  0100               	movlb	0	; () banked
 17475  00B522  6F61               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 17476                           
 17477                           ;rtcc_drv.c: 208: UINT8 RegValue;
 17478                           ;rtcc_drv.c: 209: UINT8 RetValue;
 17479                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 17480  00B524  D02D               	goto	l298
 17481  00B526                     l299:
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 17485  00B526  010F               	movlb	15	; () banked
 17486  00B528  833F               	bsf	63,1,b	;volatile
 17487  00B52A                     
 17488                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 17489  00B52A  813F               	bsf	63,0,b	;volatile
 17490  00B52C  D01C               	goto	L17
 17491  00B52E                     l301:
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 17495  00B52E  010F               	movlb	15	; () banked
 17496  00B530  833F               	bsf	63,1,b	;volatile
 17497  00B532  D01E               	goto	L18
 17498  00B534                     l302:
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 17502  00B534  010F               	movlb	15	; () banked
 17503  00B536  833F               	bsf	63,1,b	;volatile
 17504  00B538  D021               	goto	L21
 17505  00B53A                     l7780:
 17506                           
 17507                           ; BSR set to: 15
 17508                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 17509  00B53A  C063  F060         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 17510  00B53E  0E0F               	movlw	15
 17511  00B540  0100               	movlb	0	; () banked
 17512  00B542  1760               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 17513  00B544  3963               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 17514  00B546  0B0F               	andlw	15
 17515  00B548  0B0F               	andlw	15
 17516  00B54A  0D0A               	mullw	10
 17517  00B54C  50F3               	movf	prodl,w,c
 17518  00B54E  2560               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 17519  00B550  6F62               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 17520                           
 17521                           ;rtcc_drv.c: 241: break;
 17522  00B552  D02D               	goto	l300
 17523  00B554                     l303:
 17524                           
 17525                           ; BSR set to: 0
 17526                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 17527  00B554  010F               	movlb	15	; () banked
 17528  00B556  933F               	bcf	63,1,b	;volatile
 17529                           
 17530                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 17531  00B558  813F               	bsf	63,0,b	;volatile
 17532                           
 17533                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 17534  00B55A  CF99 F062          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 17535                           
 17536                           ;rtcc_drv.c: 249: break;
 17537  00B55E  D027               	goto	l300
 17538  00B560                     l304:
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 17542  00B560  010F               	movlb	15	; () banked
 17543  00B562  933F               	bcf	63,1,b	;volatile
 17544  00B564  D7E2               	goto	L19
 17545  00B566                     L17:
 17546                           
 17547                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 17548  00B566  CF98 F063          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 17549  00B56A  D7E7               	goto	l7780
 17550  00B56C                     l305:
 17551                           
 17552                           ; BSR set to: 0
 17553                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 17554  00B56C  010F               	movlb	15	; () banked
 17555  00B56E  933F               	bcf	63,1,b	;volatile
 17556  00B570                     L18:
 17557                           
 17558                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 17559  00B570  913F               	bcf	63,0,b	;volatile
 17560                           
 17561                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 17562  00B572  CF99 F063          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 17563  00B576  D7E1               	goto	l7780
 17564  00B578                     l306:
 17565                           
 17566                           ; BSR set to: 0
 17567                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 17568  00B578  010F               	movlb	15	; () banked
 17569  00B57A  933F               	bcf	63,1,b	;volatile
 17570  00B57C                     L21:
 17571                           
 17572                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 17573  00B57C  913F               	bcf	63,0,b	;volatile
 17574  00B57E  D7F3               	goto	L17
 17575  00B580                     l298:
 17576                           
 17577                           ; BSR set to: 0
 17578  00B580  0100               	movlb	0	; () banked
 17579  00B582  5161               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 17580                           
 17581                           ; Switch size 1, requested type "space"
 17582                           ; Number of cases is 7, Range of values is 0 to 6
 17583                           ; switch strategies available:
 17584                           ; Name         Instructions Cycles
 17585                           ; simple_byte           22    12 (average)
 17586                           ;	Chosen strategy is simple_byte
 17587  00B584  0A00               	xorlw	0	; case 0
 17588  00B586  B4D8               	btfsc	status,2,c
 17589  00B588  D7CE               	goto	l299
 17590  00B58A  0A01               	xorlw	1	; case 1
 17591  00B58C  B4D8               	btfsc	status,2,c
 17592  00B58E  D7CF               	goto	l301
 17593  00B590  0A03               	xorlw	3	; case 2
 17594  00B592  B4D8               	btfsc	status,2,c
 17595  00B594  D7CF               	goto	l302
 17596  00B596  0A01               	xorlw	1	; case 3
 17597  00B598  B4D8               	btfsc	status,2,c
 17598  00B59A  D7DC               	goto	l303
 17599  00B59C  0A07               	xorlw	7	; case 4
 17600  00B59E  B4D8               	btfsc	status,2,c
 17601  00B5A0  D7DF               	goto	l304
 17602  00B5A2  0A01               	xorlw	1	; case 5
 17603  00B5A4  B4D8               	btfsc	status,2,c
 17604  00B5A6  D7E2               	goto	l305
 17605  00B5A8  0A03               	xorlw	3	; case 6
 17606  00B5AA  B4D8               	btfsc	status,2,c
 17607  00B5AC  D7E5               	goto	l306
 17608  00B5AE                     l300:
 17609                           
 17610                           ;rtcc_drv.c: 286: return RetValue;
 17611                           
 17612                           ; BSR set to: 0
 17613  00B5AE  0100               	movlb	0	; () banked
 17614  00B5B0  5162               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 17615  00B5B2  0012               	return	
 17616  00B5B4                     __end_of_Rtcc_GetRtccValue:
 17617                           	opt stack 0
 17618                           tosu	equ	0xFFF
 17619                           tosh	equ	0xFFE
 17620                           tosl	equ	0xFFD
 17621                           pclath	equ	0xFFA
 17622                           tblptru	equ	0xFF8
 17623                           tblptrh	equ	0xFF7
 17624                           tblptrl	equ	0xFF6
 17625                           tablat	equ	0xFF5
 17626                           prodh	equ	0xFF4
 17627                           prodl	equ	0xFF3
 17628                           intcon	equ	0xFF2
 17629                           intcon2	equ	0xFF1
 17630                           intcon3	equ	0xFF0
 17631                           indf0	equ	0xFEF
 17632                           postinc0	equ	0xFEE
 17633                           plusw0	equ	0xFEB
 17634                           fsr0h	equ	0xFEA
 17635                           fsr0l	equ	0xFE9
 17636                           wreg	equ	0xFE8
 17637                           indf1	equ	0xFE7
 17638                           postinc1	equ	0xFE6
 17639                           postdec1	equ	0xFE5
 17640                           fsr1h	equ	0xFE2
 17641                           fsr1l	equ	0xFE1
 17642                           indf2	equ	0xFDF
 17643                           postinc2	equ	0xFDE
 17644                           postdec2	equ	0xFDD
 17645                           plusw2	equ	0xFDB
 17646                           fsr2h	equ	0xFDA
 17647                           fsr2l	equ	0xFD9
 17648                           status	equ	0xFD8
 17649                           
 17650 ;; *************** function _Rtcc_SetRtcStatus *****************
 17651 ;; Defined at:
 17652 ;;		line 149 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17653 ;; Parameters:    Size  Location     Type
 17654 ;;  Status          1    wreg     unsigned char 
 17655 ;; Auto vars:     Size  Location     Type
 17656 ;;  Status          1    0[BANK0 ] unsigned char 
 17657 ;; Return value:  Size  Location     Type
 17658 ;;                  1    wreg      void 
 17659 ;; Registers used:
 17660 ;;		wreg
 17661 ;; Tracked objects:
 17662 ;;		On entry : 0/0
 17663 ;;		On exit  : 0/0
 17664 ;;		Unchanged: 0/0
 17665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17669 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17670 ;;Total ram usage:        1 bytes
 17671 ;; Hardware stack levels used:    1
 17672 ;; Hardware stack levels required when called:   11
 17673 ;; This function calls:
 17674 ;;		Nothing
 17675 ;; This function is called by:
 17676 ;;		_Rtcm_MainTask
 17677 ;; This function uses a non-reentrant model
 17678 ;;
 17679                           
 17680                           	psect	text79
 17681  009FD4                     __ptext79:
 17682                           	opt stack 0
 17683  009FD4                     _Rtcc_SetRtcStatus:
 17684                           	opt stack 16
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;incstack = 0
 17688                           ;Rtcc_SetRtcStatus@Status stored from wreg
 17689  009FD4  0100               	movlb	0	; () banked
 17690  009FD6  6F60               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 17691                           
 17692                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 17693  009FD8  0100               	movlb	0	; () banked
 17694  009FDA  B160               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 17695  009FDC  D003               	bra	u6815
 17696  009FDE  010F               	movlb	15	; () banked
 17697  009FE0  9F3F               	bcf	63,7,b	;volatile
 17698  009FE2  D002               	bra	u6816
 17699  009FE4                     u6815:
 17700  009FE4  010F               	movlb	15	; () banked
 17701  009FE6  8F3F               	bsf	63,7,b	;volatile
 17702  009FE8                     u6816:
 17703                           
 17704                           ; BSR set to: 15
 17705  009FE8  0012               	return		;funcret
 17706  009FEA                     __end_of_Rtcc_SetRtcStatus:
 17707                           	opt stack 0
 17708                           tosu	equ	0xFFF
 17709                           tosh	equ	0xFFE
 17710                           tosl	equ	0xFFD
 17711                           pclath	equ	0xFFA
 17712                           tblptru	equ	0xFF8
 17713                           tblptrh	equ	0xFF7
 17714                           tblptrl	equ	0xFF6
 17715                           tablat	equ	0xFF5
 17716                           prodh	equ	0xFF4
 17717                           prodl	equ	0xFF3
 17718                           intcon	equ	0xFF2
 17719                           intcon2	equ	0xFF1
 17720                           intcon3	equ	0xFF0
 17721                           indf0	equ	0xFEF
 17722                           postinc0	equ	0xFEE
 17723                           plusw0	equ	0xFEB
 17724                           fsr0h	equ	0xFEA
 17725                           fsr0l	equ	0xFE9
 17726                           wreg	equ	0xFE8
 17727                           indf1	equ	0xFE7
 17728                           postinc1	equ	0xFE6
 17729                           postdec1	equ	0xFE5
 17730                           fsr1h	equ	0xFE2
 17731                           fsr1l	equ	0xFE1
 17732                           indf2	equ	0xFDF
 17733                           postinc2	equ	0xFDE
 17734                           postdec2	equ	0xFDD
 17735                           plusw2	equ	0xFDB
 17736                           fsr2h	equ	0xFDA
 17737                           fsr2l	equ	0xFD9
 17738                           status	equ	0xFD8
 17739                           
 17740 ;; *************** function _Rtcc_RtcConfig *****************
 17741 ;; Defined at:
 17742 ;;		line 106 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17743 ;; Parameters:    Size  Location     Type
 17744 ;;  RtcConfig       2    1[BANK0 ] PTR struct _RtccConfigTy
 17745 ;;		 -> RtcConfig(4), 
 17746 ;; Auto vars:     Size  Location     Type
 17747 ;;		None
 17748 ;; Return value:  Size  Location     Type
 17749 ;;                  1    wreg      void 
 17750 ;; Registers used:
 17751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17752 ;; Tracked objects:
 17753 ;;		On entry : 0/0
 17754 ;;		On exit  : 0/0
 17755 ;;		Unchanged: 0/0
 17756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17760 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17761 ;;Total ram usage:        3 bytes
 17762 ;; Hardware stack levels used:    1
 17763 ;; Hardware stack levels required when called:   12
 17764 ;; This function calls:
 17765 ;;		_RtccIrqInit
 17766 ;; This function is called by:
 17767 ;;		_Rtcm_MainTask
 17768 ;; This function uses a non-reentrant model
 17769 ;;
 17770                           
 17771                           	psect	text80
 17772  00B8A6                     __ptext80:
 17773                           	opt stack 0
 17774  00B8A6                     _Rtcc_RtcConfig:
 17775                           	opt stack 15
 17776                           
 17777                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 17778                           
 17779                           ; BSR set to: 15
 17780                           ;incstack = 0
 17781  00B8A6  C061  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 17782  00B8AA  C062  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 17783  00B8AE  50DF               	movf	indf2,w,c
 17784  00B8B0  0100               	movlb	0	; () banked
 17785  00B8B2  6F63               	movwf	??_Rtcc_RtcConfig& (0+255),b
 17786  00B8B4  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17787  00B8B6  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17788  00B8B8  010F               	movlb	15	; () banked
 17789  00B8BA  513F               	movf	63,w,b	;volatile
 17790  00B8BC  0100               	movlb	0	; () banked
 17791  00B8BE  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17792  00B8C0  0BFB               	andlw	-5
 17793  00B8C2  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17794  00B8C4  010F               	movlb	15	; () banked
 17795  00B8C6  6F3F               	movwf	63,b	;volatile
 17796                           
 17797                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 17798  00B8C8  0100               	movlb	0	; () banked
 17799  00B8CA  EE20 F001          	lfsr	2,1
 17800  00B8CE  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17801  00B8D0  26D9               	addwf	fsr2l,f,c
 17802  00B8D2  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17803  00B8D4  22DA               	addwfc	fsr2h,f,c
 17804  00B8D6  50DF               	movf	indf2,w,c
 17805  00B8D8  6F63               	movwf	??_Rtcc_RtcConfig& (0+255),b
 17806  00B8DA  0E01               	movlw	1
 17807  00B8DC  1763               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 17808  00B8DE  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17809  00B8E0  010F               	movlb	15	; () banked
 17810  00B8E2  513C               	movf	60,w,b	;volatile
 17811  00B8E4  0100               	movlb	0	; () banked
 17812  00B8E6  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17813  00B8E8  0BFD               	andlw	-3
 17814  00B8EA  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17815  00B8EC  010F               	movlb	15	; () banked
 17816  00B8EE  6F3C               	movwf	60,b	;volatile
 17817                           
 17818                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 17819  00B8F0  0100               	movlb	0	; () banked
 17820  00B8F2  EE20 F001          	lfsr	2,1
 17821  00B8F6  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17822  00B8F8  26D9               	addwf	fsr2l,f,c
 17823  00B8FA  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17824  00B8FC  22DA               	addwfc	fsr2h,f,c
 17825  00B8FE  50DF               	movf	indf2,w,c
 17826  00B900  6F63               	movwf	??_Rtcc_RtcConfig& (0+255),b
 17827  00B902  90D8               	bcf	status,0,c
 17828  00B904  3363               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 17829  00B906  0E01               	movlw	1
 17830  00B908  1763               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 17831  00B90A  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17832  00B90C  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17833  00B90E  010F               	movlb	15	; () banked
 17834  00B910  513C               	movf	60,w,b	;volatile
 17835  00B912  0100               	movlb	0	; () banked
 17836  00B914  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17837  00B916  0BFB               	andlw	-5
 17838  00B918  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17839  00B91A  010F               	movlb	15	; () banked
 17840  00B91C  6F3C               	movwf	60,b	;volatile
 17841                           
 17842                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 17843  00B91E  0100               	movlb	0	; () banked
 17844  00B920  EE20 F002          	lfsr	2,2
 17845  00B924  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17846  00B926  26D9               	addwf	fsr2l,f,c
 17847  00B928  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17848  00B92A  22DA               	addwfc	fsr2h,f,c
 17849  00B92C  04DE               	decf	postinc2,w,c
 17850  00B92E  A4D8               	btfss	status,2,c
 17851  00B930  0012               	return	
 17852                           
 17853                           ; BSR set to: 0
 17854                           ;rtcc_drv.c: 115: {
 17855                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 17856  00B932  EE20 F003          	lfsr	2,3
 17857  00B936  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17858  00B938  26D9               	addwf	fsr2l,f,c
 17859  00B93A  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17860  00B93C  22DA               	addwfc	fsr2h,f,c
 17861  00B93E  50DF               	movf	indf2,w,c
 17862  00B940  ECDF  F04F         	call	_RtccIrqInit
 17863  00B944  0012               	return	
 17864  00B946                     __end_of_Rtcc_RtcConfig:
 17865                           	opt stack 0
 17866                           tosu	equ	0xFFF
 17867                           tosh	equ	0xFFE
 17868                           tosl	equ	0xFFD
 17869                           pclath	equ	0xFFA
 17870                           tblptru	equ	0xFF8
 17871                           tblptrh	equ	0xFF7
 17872                           tblptrl	equ	0xFF6
 17873                           tablat	equ	0xFF5
 17874                           prodh	equ	0xFF4
 17875                           prodl	equ	0xFF3
 17876                           intcon	equ	0xFF2
 17877                           intcon2	equ	0xFF1
 17878                           intcon3	equ	0xFF0
 17879                           indf0	equ	0xFEF
 17880                           postinc0	equ	0xFEE
 17881                           plusw0	equ	0xFEB
 17882                           fsr0h	equ	0xFEA
 17883                           fsr0l	equ	0xFE9
 17884                           wreg	equ	0xFE8
 17885                           indf1	equ	0xFE7
 17886                           postinc1	equ	0xFE6
 17887                           postdec1	equ	0xFE5
 17888                           fsr1h	equ	0xFE2
 17889                           fsr1l	equ	0xFE1
 17890                           indf2	equ	0xFDF
 17891                           postinc2	equ	0xFDE
 17892                           postdec2	equ	0xFDD
 17893                           plusw2	equ	0xFDB
 17894                           fsr2h	equ	0xFDA
 17895                           fsr2l	equ	0xFD9
 17896                           status	equ	0xFD8
 17897                           
 17898 ;; *************** function _RtccIrqInit *****************
 17899 ;; Defined at:
 17900 ;;		line 84 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17901 ;; Parameters:    Size  Location     Type
 17902 ;;  Priority        1    wreg     enum E7710
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;  Priority        1    0[BANK0 ] enum E7710
 17905 ;; Return value:  Size  Location     Type
 17906 ;;                  1    wreg      void 
 17907 ;; Registers used:
 17908 ;;		wreg
 17909 ;; Tracked objects:
 17910 ;;		On entry : 0/0
 17911 ;;		On exit  : 0/0
 17912 ;;		Unchanged: 0/0
 17913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17917 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17918 ;;Total ram usage:        1 bytes
 17919 ;; Hardware stack levels used:    1
 17920 ;; Hardware stack levels required when called:   11
 17921 ;; This function calls:
 17922 ;;		Nothing
 17923 ;; This function is called by:
 17924 ;;		_Rtcc_RtcConfig
 17925 ;; This function uses a non-reentrant model
 17926 ;;
 17927                           
 17928                           	psect	text81
 17929  009FBE                     __ptext81:
 17930                           	opt stack 0
 17931  009FBE                     _RtccIrqInit:
 17932                           	opt stack 15
 17933                           
 17934                           ;incstack = 0
 17935                           ;RtccIrqInit@Priority stored from wreg
 17936  009FBE  0100               	movlb	0	; () banked
 17937  009FC0  6F60               	movwf	RtccIrqInit@Priority& (0+255),b
 17938                           
 17939                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 17940  009FC2  90A4               	bcf	4004,0,c	;volatile
 17941                           
 17942                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 17943  009FC4  0100               	movlb	0	; () banked
 17944  009FC6  B160               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 17945  009FC8  D002               	bra	u6085
 17946  009FCA  90A5               	bcf	4005,0,c	;volatile
 17947  009FCC  D001               	bra	u6086
 17948  009FCE                     u6085:
 17949  009FCE  80A5               	bsf	4005,0,c	;volatile
 17950  009FD0                     u6086:
 17951                           
 17952                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 17953  009FD0  80A3               	bsf	4003,0,c	;volatile
 17954  009FD2  0012               	return		;funcret
 17955  009FD4                     __end_of_RtccIrqInit:
 17956                           	opt stack 0
 17957                           tosu	equ	0xFFF
 17958                           tosh	equ	0xFFE
 17959                           tosl	equ	0xFFD
 17960                           pclath	equ	0xFFA
 17961                           tblptru	equ	0xFF8
 17962                           tblptrh	equ	0xFF7
 17963                           tblptrl	equ	0xFF6
 17964                           tablat	equ	0xFF5
 17965                           prodh	equ	0xFF4
 17966                           prodl	equ	0xFF3
 17967                           intcon	equ	0xFF2
 17968                           intcon2	equ	0xFF1
 17969                           intcon3	equ	0xFF0
 17970                           indf0	equ	0xFEF
 17971                           postinc0	equ	0xFEE
 17972                           plusw0	equ	0xFEB
 17973                           fsr0h	equ	0xFEA
 17974                           fsr0l	equ	0xFE9
 17975                           wreg	equ	0xFE8
 17976                           indf1	equ	0xFE7
 17977                           postinc1	equ	0xFE6
 17978                           postdec1	equ	0xFE5
 17979                           fsr1h	equ	0xFE2
 17980                           fsr1l	equ	0xFE1
 17981                           indf2	equ	0xFDF
 17982                           postinc2	equ	0xFDE
 17983                           postdec2	equ	0xFDD
 17984                           plusw2	equ	0xFDB
 17985                           fsr2h	equ	0xFDA
 17986                           fsr2l	equ	0xFD9
 17987                           status	equ	0xFD8
 17988                           
 17989 ;; *************** function _Rtcc_AlarmConfig *****************
 17990 ;; Defined at:
 17991 ;;		line 129 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17992 ;; Parameters:    Size  Location     Type
 17993 ;;  AlarmConfig     2    0[BANK0 ] PTR struct _RtccAlarmCon
 17994 ;;		 -> AlCfg(4), 
 17995 ;; Auto vars:     Size  Location     Type
 17996 ;;		None
 17997 ;; Return value:  Size  Location     Type
 17998 ;;                  1    wreg      void 
 17999 ;; Registers used:
 18000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18001 ;; Tracked objects:
 18002 ;;		On entry : 0/0
 18003 ;;		On exit  : 0/0
 18004 ;;		Unchanged: 0/0
 18005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18008 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18009 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18010 ;;Total ram usage:        3 bytes
 18011 ;; Hardware stack levels used:    1
 18012 ;; Hardware stack levels required when called:   11
 18013 ;; This function calls:
 18014 ;;		Nothing
 18015 ;; This function is called by:
 18016 ;;		_Rtcm_MainTask
 18017 ;; This function uses a non-reentrant model
 18018 ;;
 18019                           
 18020                           	psect	text82
 18021  00AEB8                     __ptext82:
 18022                           	opt stack 0
 18023  00AEB8                     _Rtcc_AlarmConfig:
 18024                           	opt stack 16
 18025                           
 18026                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 18027                           
 18028                           ;incstack = 0
 18029  00AEB8  C060  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 18030  00AEBC  C061  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 18031  00AEC0  50DF               	movf	indf2,w,c
 18032  00AEC2  0100               	movlb	0	; () banked
 18033  00AEC4  6F62               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 18034  00AEC6  3362               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 18035  00AEC8  3362               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 18036  00AECA  5091               	movf	3985,w,c	;volatile
 18037  00AECC  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18038  00AECE  0B7F               	andlw	-129
 18039  00AED0  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18040  00AED2  6E91               	movwf	3985,c	;volatile
 18041                           
 18042                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 18043  00AED4  EE20 F001          	lfsr	2,1
 18044  00AED8  5160               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 18045  00AEDA  26D9               	addwf	fsr2l,f,c
 18046  00AEDC  5161               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 18047  00AEDE  22DA               	addwfc	fsr2h,f,c
 18048  00AEE0  50DF               	movf	indf2,w,c
 18049  00AEE2  6F62               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 18050  00AEE4  3B62               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 18051  00AEE6  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18052  00AEE8  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18053  00AEEA  5091               	movf	3985,w,c	;volatile
 18054  00AEEC  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18055  00AEEE  0BBF               	andlw	-65
 18056  00AEF0  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18057  00AEF2  6E91               	movwf	3985,c	;volatile
 18058                           
 18059                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 18060  00AEF4  EE20 F002          	lfsr	2,2
 18061  00AEF8  5160               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 18062  00AEFA  26D9               	addwf	fsr2l,f,c
 18063  00AEFC  5161               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 18064  00AEFE  22DA               	addwfc	fsr2h,f,c
 18065  00AF00  50DF               	movf	indf2,w,c
 18066  00AF02  6F62               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 18067  00AF04  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18068  00AF06  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18069  00AF08  5091               	movf	3985,w,c	;volatile
 18070  00AF0A  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18071  00AF0C  0BC3               	andlw	-61
 18072  00AF0E  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18073  00AF10  6E91               	movwf	3985,c	;volatile
 18074                           
 18075                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 18076  00AF12  EE20 F003          	lfsr	2,3
 18077  00AF16  5160               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 18078  00AF18  26D9               	addwf	fsr2l,f,c
 18079  00AF1A  5161               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 18080  00AF1C  22DA               	addwfc	fsr2h,f,c
 18081  00AF1E  50DF               	movf	indf2,w,c
 18082  00AF20  6E90               	movwf	3984,c	;volatile
 18083                           
 18084                           ; BSR set to: 0
 18085  00AF22  0012               	return		;funcret
 18086  00AF24                     __end_of_Rtcc_AlarmConfig:
 18087                           	opt stack 0
 18088                           tosu	equ	0xFFF
 18089                           tosh	equ	0xFFE
 18090                           tosl	equ	0xFFD
 18091                           pclath	equ	0xFFA
 18092                           tblptru	equ	0xFF8
 18093                           tblptrh	equ	0xFF7
 18094                           tblptrl	equ	0xFF6
 18095                           tablat	equ	0xFF5
 18096                           prodh	equ	0xFF4
 18097                           prodl	equ	0xFF3
 18098                           intcon	equ	0xFF2
 18099                           intcon2	equ	0xFF1
 18100                           intcon3	equ	0xFF0
 18101                           indf0	equ	0xFEF
 18102                           postinc0	equ	0xFEE
 18103                           plusw0	equ	0xFEB
 18104                           fsr0h	equ	0xFEA
 18105                           fsr0l	equ	0xFE9
 18106                           wreg	equ	0xFE8
 18107                           indf1	equ	0xFE7
 18108                           postinc1	equ	0xFE6
 18109                           postdec1	equ	0xFE5
 18110                           fsr1h	equ	0xFE2
 18111                           fsr1l	equ	0xFE1
 18112                           indf2	equ	0xFDF
 18113                           postinc2	equ	0xFDE
 18114                           postdec2	equ	0xFDD
 18115                           plusw2	equ	0xFDB
 18116                           fsr2h	equ	0xFDA
 18117                           fsr2l	equ	0xFD9
 18118                           status	equ	0xFD8
 18119                           
 18120 ;; *************** function _Uart_InitUartModule *****************
 18121 ;; Defined at:
 18122 ;;		line 288 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 18123 ;; Parameters:    Size  Location     Type
 18124 ;;  Module          1    wreg     unsigned char 
 18125 ;;  UartConfig      2   32[BANK0 ] PTR struct _UartConfig
 18126 ;;		 -> UartConfig(21), 
 18127 ;; Auto vars:     Size  Location     Type
 18128 ;;  Module          1   36[BANK0 ] unsigned char 
 18129 ;; Return value:  Size  Location     Type
 18130 ;;                  1    wreg      void 
 18131 ;; Registers used:
 18132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18133 ;; Tracked objects:
 18134 ;;		On entry : 0/0
 18135 ;;		On exit  : 0/0
 18136 ;;		Unchanged: 0/0
 18137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18141 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18142 ;;Total ram usage:        5 bytes
 18143 ;; Hardware stack levels used:    1
 18144 ;; Hardware stack levels required when called:   13
 18145 ;; This function calls:
 18146 ;;		_SetUartBaudRate
 18147 ;; This function is called by:
 18148 ;;		_MdmWifi_MainTask
 18149 ;; This function uses a non-reentrant model
 18150 ;;
 18151                           
 18152                           	psect	text83
 18153  00E1E2                     __ptext83:
 18154                           	opt stack 0
 18155  00E1E2                     _Uart_InitUartModule:
 18156                           	opt stack 14
 18157                           
 18158                           ; BSR set to: 0
 18159                           ;incstack = 0
 18160                           ;Uart_InitUartModule@Module stored from wreg
 18161  00E1E2  0100               	movlb	0	; () banked
 18162  00E1E4  6F84               	movwf	Uart_InitUartModule@Module& (0+255),b
 18163                           
 18164                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 18165  00E1E6  0100               	movlb	0	; () banked
 18166  00E1E8  0584               	decf	Uart_InitUartModule@Module& (0+255),w,b
 18167  00E1EA  A4D8               	btfss	status,2,c
 18168  00E1EC  D0B8               	goto	l550
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;uart_drv.c: 291: {
 18172                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 18173  00E1EE  9C94               	bcf	3988,6,c	;volatile
 18174                           
 18175                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 18176  00E1F0  8E94               	bsf	3988,7,c	;volatile
 18177                           
 18178                           ; BSR set to: 0
 18179                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 18180  00E1F2  C080  F079         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 18181  00E1F6  C081  F07A         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 18182  00E1FA  0E01               	movlw	1
 18183  00E1FC  ECB9  F065         	call	_SetUartBaudRate
 18184                           
 18185                           ;uart_drv.c: 302: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 18186  00E200  0100               	movlb	0	; () banked
 18187  00E202  EE20 F004          	lfsr	2,4
 18188  00E206  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18189  00E208  26D9               	addwf	fsr2l,f,c
 18190  00E20A  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18191  00E20C  22DA               	addwfc	fsr2h,f,c
 18192  00E20E  50DF               	movf	indf2,w,c
 18193  00E210  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18194  00E212  0E06               	movlw	6
 18195  00E214  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18196  00E216                     u6885:
 18197  00E216  90D8               	bcf	status,0,c
 18198  00E218  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18199  00E21A  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18200  00E21C  D7FC               	goto	u6885
 18201  00E21E  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18202  00E220  12AD               	iorwf	4013,f,c	;volatile
 18203                           
 18204                           ; BSR set to: 0
 18205                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 18206  00E222  EE20 F006          	lfsr	2,6
 18207  00E226  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18208  00E228  26D9               	addwf	fsr2l,f,c
 18209  00E22A  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18210  00E22C  22DA               	addwfc	fsr2h,f,c
 18211  00E22E  50DF               	movf	indf2,w,c
 18212  00E230  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18213  00E232  0E05               	movlw	5
 18214  00E234  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18215  00E236                     u6895:
 18216  00E236  90D8               	bcf	status,0,c
 18217  00E238  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18218  00E23A  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18219  00E23C  D7FC               	goto	u6895
 18220  00E23E  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18221  00E240  12AD               	iorwf	4013,f,c	;volatile
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 18225  00E242  EE20 F001          	lfsr	2,1
 18226  00E246  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18227  00E248  26D9               	addwf	fsr2l,f,c
 18228  00E24A  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18229  00E24C  22DA               	addwfc	fsr2h,f,c
 18230  00E24E  50DF               	movf	indf2,w,c
 18231  00E250  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18232  00E252  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18233  00E254  0BF0               	andlw	240
 18234  00E256  12AD               	iorwf	4013,f,c	;volatile
 18235                           
 18236                           ; BSR set to: 0
 18237                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 18238  00E258  EE20 F008          	lfsr	2,8
 18239  00E25C  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18240  00E25E  26D9               	addwf	fsr2l,f,c
 18241  00E260  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18242  00E262  22DA               	addwfc	fsr2h,f,c
 18243  00E264  50DF               	movf	indf2,w,c
 18244  00E266  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18245  00E268  90D8               	bcf	status,0,c
 18246  00E26A  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18247  00E26C  90D8               	bcf	status,0,c
 18248  00E26E  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18249  00E270  90D8               	bcf	status,0,c
 18250  00E272  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18251  00E274  12AD               	iorwf	4013,f,c	;volatile
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 18255  00E276  EE20 F003          	lfsr	2,3
 18256  00E27A  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18257  00E27C  26D9               	addwf	fsr2l,f,c
 18258  00E27E  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18259  00E280  22DA               	addwfc	fsr2h,f,c
 18260  00E282  50DF               	movf	indf2,w,c
 18261  00E284  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18262  00E286  90D8               	bcf	status,0,c
 18263  00E288  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18264  00E28A  90D8               	bcf	status,0,c
 18265  00E28C  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18266  00E28E  12AD               	iorwf	4013,f,c	;volatile
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;uart_drv.c: 309: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 18270  00E290  C080  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 18271  00E294  C081  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 18272  00E298  50DF               	movf	indf2,w,c
 18273  00E29A  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18274  00E29C  0E00               	movlw	0
 18275  00E29E  B182               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 18276  00E2A0  0E80               	movlw	128
 18277  00E2A2  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18278  00E2A4  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18279  00E2A6  12AC               	iorwf	4012,f,c	;volatile
 18280                           
 18281                           ; BSR set to: 0
 18282                           ;uart_drv.c: 310: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 18283  00E2A8  EE20 F005          	lfsr	2,5
 18284  00E2AC  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18285  00E2AE  26D9               	addwf	fsr2l,f,c
 18286  00E2B0  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18287  00E2B2  22DA               	addwfc	fsr2h,f,c
 18288  00E2B4  50DF               	movf	indf2,w,c
 18289  00E2B6  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18290  00E2B8  0E06               	movlw	6
 18291  00E2BA  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18292  00E2BC                     u6905:
 18293  00E2BC  90D8               	bcf	status,0,c
 18294  00E2BE  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18295  00E2C0  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18296  00E2C2  D7FC               	goto	u6905
 18297  00E2C4  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18298  00E2C6  12AC               	iorwf	4012,f,c	;volatile
 18299                           
 18300                           ; BSR set to: 0
 18301                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 18302  00E2C8  EE20 F007          	lfsr	2,7
 18303  00E2CC  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18304  00E2CE  26D9               	addwf	fsr2l,f,c
 18305  00E2D0  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18306  00E2D2  22DA               	addwfc	fsr2h,f,c
 18307  00E2D4  50DF               	movf	indf2,w,c
 18308  00E2D6  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18309  00E2D8  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18310  00E2DA  0BF0               	andlw	240
 18311  00E2DC  12AC               	iorwf	4012,f,c	;volatile
 18312                           
 18313                           ; BSR set to: 0
 18314                           ;uart_drv.c: 314: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 18315  00E2DE  EE20 F002          	lfsr	2,2
 18316  00E2E2  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18317  00E2E4  26D9               	addwf	fsr2l,f,c
 18318  00E2E6  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18319  00E2E8  22DA               	addwfc	fsr2h,f,c
 18320  00E2EA  50DF               	movf	indf2,w,c
 18321  00E2EC  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18322  00E2EE  90D8               	bcf	status,0,c
 18323  00E2F0  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18324  00E2F2  90D8               	bcf	status,0,c
 18325  00E2F4  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18326  00E2F6  90D8               	bcf	status,0,c
 18327  00E2F8  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18328  00E2FA  127E               	iorwf	3966,f,c	;volatile
 18329                           
 18330                           ; BSR set to: 0
 18331                           ;uart_drv.c: 315: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 18332  00E2FC  EE20 F00A          	lfsr	2,10
 18333  00E300  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18334  00E302  26D9               	addwf	fsr2l,f,c
 18335  00E304  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18336  00E306  22DA               	addwfc	fsr2h,f,c
 18337  00E308  50DF               	movf	indf2,w,c
 18338  00E30A  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18339  00E30C  90D8               	bcf	status,0,c
 18340  00E30E  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18341  00E310  127E               	iorwf	3966,f,c	;volatile
 18342                           
 18343                           ; BSR set to: 0
 18344                           ;uart_drv.c: 316: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 18345  00E312  EE20 F009          	lfsr	2,9
 18346  00E316  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18347  00E318  26D9               	addwf	fsr2l,f,c
 18348  00E31A  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18349  00E31C  22DA               	addwfc	fsr2h,f,c
 18350  00E31E  50DF               	movf	indf2,w,c
 18351  00E320  127E               	iorwf	3966,f,c	;volatile
 18352                           
 18353                           ; BSR set to: 0
 18354                           ;uart_drv.c: 319: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 18355  00E322  EE20 F00B          	lfsr	2,11
 18356  00E326  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18357  00E328  26D9               	addwf	fsr2l,f,c
 18358  00E32A  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18359  00E32C  22DA               	addwfc	fsr2h,f,c
 18360  00E32E  50DF               	movf	indf2,w,c
 18361  00E330  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18362  00E332  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18363  00E334  509D               	movf	3997,w,c	;volatile
 18364  00E336  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18365  00E338  0BEF               	andlw	-17
 18366  00E33A  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18367  00E33C  6E9D               	movwf	3997,c	;volatile
 18368                           
 18369                           ; BSR set to: 0
 18370                           ;uart_drv.c: 320: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 18371  00E33E  EE20 F00C          	lfsr	2,12
 18372  00E342  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18373  00E344  26D9               	addwf	fsr2l,f,c
 18374  00E346  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18375  00E348  22DA               	addwfc	fsr2h,f,c
 18376  00E34A  50DF               	movf	indf2,w,c
 18377  00E34C  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18378  00E34E  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18379  00E350  4782               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 18380  00E352  509D               	movf	3997,w,c	;volatile
 18381  00E354  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18382  00E356  0BDF               	andlw	-33
 18383  00E358  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18384  00E35A  6E9D               	movwf	3997,c	;volatile
 18385                           
 18386                           ;uart_drv.c: 323: }
 18387  00E35C  0012               	return	
 18388  00E35E                     l550:
 18389                           
 18390                           ; BSR set to: 0
 18391                           ;uart_drv.c: 324: else if (Module == ((UINT8)(2)))
 18392                           
 18393                           ; BSR set to: 0
 18394  00E35E  0E02               	movlw	2
 18395  00E360  1984               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 18396  00E362  A4D8               	btfss	status,2,c
 18397  00E364  0012               	return	
 18398                           
 18399                           ; BSR set to: 0
 18400                           ;uart_drv.c: 325: {
 18401                           ;uart_drv.c: 327: TRISCbits.TRISC0 = ((UINT8)(0));
 18402  00E366  9094               	bcf	3988,0,c	;volatile
 18403                           
 18404                           ;uart_drv.c: 328: TRISCbits.TRISC1 = ((UINT8)(1));
 18405  00E368  8294               	bsf	3988,1,c	;volatile
 18406                           
 18407                           ; BSR set to: 0
 18408                           ;uart_drv.c: 331: SetUartBaudRate(((UINT8)(2)), UartConfig);
 18409  00E36A  C080  F079         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 18410  00E36E  C081  F07A         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 18411  00E372  0E02               	movlw	2
 18412  00E374  ECB9  F065         	call	_SetUartBaudRate
 18413                           
 18414                           ;uart_drv.c: 336: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 18415  00E378  0100               	movlb	0	; () banked
 18416  00E37A  EE20 F004          	lfsr	2,4
 18417  00E37E  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18418  00E380  26D9               	addwf	fsr2l,f,c
 18419  00E382  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18420  00E384  22DA               	addwfc	fsr2h,f,c
 18421  00E386  50DF               	movf	indf2,w,c
 18422  00E388  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18423  00E38A  0E06               	movlw	6
 18424  00E38C  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18425  00E38E                     u6925:
 18426  00E38E  90D8               	bcf	status,0,c
 18427  00E390  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18428  00E392  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18429  00E394  D7FC               	goto	u6925
 18430  00E396  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18431  00E398  12A8               	iorwf	4008,f,c	;volatile
 18432                           
 18433                           ; BSR set to: 0
 18434                           ;uart_drv.c: 337: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 18435  00E39A  EE20 F006          	lfsr	2,6
 18436  00E39E  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18437  00E3A0  26D9               	addwf	fsr2l,f,c
 18438  00E3A2  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18439  00E3A4  22DA               	addwfc	fsr2h,f,c
 18440  00E3A6  50DF               	movf	indf2,w,c
 18441  00E3A8  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18442  00E3AA  0E05               	movlw	5
 18443  00E3AC  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18444  00E3AE                     u6935:
 18445  00E3AE  90D8               	bcf	status,0,c
 18446  00E3B0  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18447  00E3B2  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18448  00E3B4  D7FC               	goto	u6935
 18449  00E3B6  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18450  00E3B8  12A8               	iorwf	4008,f,c	;volatile
 18451                           
 18452                           ; BSR set to: 0
 18453                           ;uart_drv.c: 338: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 18454  00E3BA  EE20 F001          	lfsr	2,1
 18455  00E3BE  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18456  00E3C0  26D9               	addwf	fsr2l,f,c
 18457  00E3C2  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18458  00E3C4  22DA               	addwfc	fsr2h,f,c
 18459  00E3C6  50DF               	movf	indf2,w,c
 18460  00E3C8  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18461  00E3CA  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18462  00E3CC  0BF0               	andlw	240
 18463  00E3CE  12A8               	iorwf	4008,f,c	;volatile
 18464                           
 18465                           ; BSR set to: 0
 18466                           ;uart_drv.c: 339: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 18467  00E3D0  EE20 F008          	lfsr	2,8
 18468  00E3D4  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18469  00E3D6  26D9               	addwf	fsr2l,f,c
 18470  00E3D8  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18471  00E3DA  22DA               	addwfc	fsr2h,f,c
 18472  00E3DC  50DF               	movf	indf2,w,c
 18473  00E3DE  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18474  00E3E0  90D8               	bcf	status,0,c
 18475  00E3E2  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18476  00E3E4  90D8               	bcf	status,0,c
 18477  00E3E6  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18478  00E3E8  90D8               	bcf	status,0,c
 18479  00E3EA  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18480  00E3EC  12A8               	iorwf	4008,f,c	;volatile
 18481                           
 18482                           ; BSR set to: 0
 18483                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 18484  00E3EE  EE20 F003          	lfsr	2,3
 18485  00E3F2  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18486  00E3F4  26D9               	addwf	fsr2l,f,c
 18487  00E3F6  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18488  00E3F8  22DA               	addwfc	fsr2h,f,c
 18489  00E3FA  50DF               	movf	indf2,w,c
 18490  00E3FC  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18491  00E3FE  90D8               	bcf	status,0,c
 18492  00E400  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18493  00E402  90D8               	bcf	status,0,c
 18494  00E404  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18495  00E406  12A8               	iorwf	4008,f,c	;volatile
 18496                           
 18497                           ; BSR set to: 0
 18498                           ;uart_drv.c: 343: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 18499  00E408  C080  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 18500  00E40C  C081  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 18501  00E410  50DF               	movf	indf2,w,c
 18502  00E412  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18503  00E414  0E00               	movlw	0
 18504  00E416  B182               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 18505  00E418  0E80               	movlw	128
 18506  00E41A  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18507  00E41C  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18508  00E41E  129C               	iorwf	3996,f,c	;volatile
 18509                           
 18510                           ; BSR set to: 0
 18511                           ;uart_drv.c: 344: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 18512  00E420  EE20 F005          	lfsr	2,5
 18513  00E424  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18514  00E426  26D9               	addwf	fsr2l,f,c
 18515  00E428  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18516  00E42A  22DA               	addwfc	fsr2h,f,c
 18517  00E42C  50DF               	movf	indf2,w,c
 18518  00E42E  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18519  00E430  0E06               	movlw	6
 18520  00E432  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18521  00E434                     u6945:
 18522  00E434  90D8               	bcf	status,0,c
 18523  00E436  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18524  00E438  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18525  00E43A  D7FC               	goto	u6945
 18526  00E43C  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18527  00E43E  129C               	iorwf	3996,f,c	;volatile
 18528                           
 18529                           ; BSR set to: 0
 18530                           ;uart_drv.c: 345: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 18531  00E440  EE20 F007          	lfsr	2,7
 18532  00E444  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18533  00E446  26D9               	addwf	fsr2l,f,c
 18534  00E448  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18535  00E44A  22DA               	addwfc	fsr2h,f,c
 18536  00E44C  50DF               	movf	indf2,w,c
 18537  00E44E  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18538  00E450  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18539  00E452  0BF0               	andlw	240
 18540  00E454  129C               	iorwf	3996,f,c	;volatile
 18541                           
 18542                           ; BSR set to: 0
 18543                           ;uart_drv.c: 348: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 18544  00E456  EE20 F002          	lfsr	2,2
 18545  00E45A  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18546  00E45C  26D9               	addwf	fsr2l,f,c
 18547  00E45E  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18548  00E460  22DA               	addwfc	fsr2h,f,c
 18549  00E462  50DF               	movf	indf2,w,c
 18550  00E464  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18551  00E466  90D8               	bcf	status,0,c
 18552  00E468  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18553  00E46A  90D8               	bcf	status,0,c
 18554  00E46C  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18555  00E46E  90D8               	bcf	status,0,c
 18556  00E470  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18557  00E472  127C               	iorwf	3964,f,c	;volatile
 18558                           
 18559                           ; BSR set to: 0
 18560                           ;uart_drv.c: 349: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 18561  00E474  EE20 F00A          	lfsr	2,10
 18562  00E478  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18563  00E47A  26D9               	addwf	fsr2l,f,c
 18564  00E47C  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18565  00E47E  22DA               	addwfc	fsr2h,f,c
 18566  00E480  50DF               	movf	indf2,w,c
 18567  00E482  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18568  00E484  90D8               	bcf	status,0,c
 18569  00E486  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18570  00E488  127C               	iorwf	3964,f,c	;volatile
 18571                           
 18572                           ; BSR set to: 0
 18573                           ;uart_drv.c: 350: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 18574  00E48A  EE20 F009          	lfsr	2,9
 18575  00E48E  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18576  00E490  26D9               	addwf	fsr2l,f,c
 18577  00E492  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18578  00E494  22DA               	addwfc	fsr2h,f,c
 18579  00E496  50DF               	movf	indf2,w,c
 18580  00E498  127C               	iorwf	3964,f,c	;volatile
 18581                           
 18582                           ; BSR set to: 0
 18583                           ;uart_drv.c: 353: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 18584  00E49A  EE20 F00B          	lfsr	2,11
 18585  00E49E  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18586  00E4A0  26D9               	addwf	fsr2l,f,c
 18587  00E4A2  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18588  00E4A4  22DA               	addwfc	fsr2h,f,c
 18589  00E4A6  50DF               	movf	indf2,w,c
 18590  00E4A8  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18591  00E4AA  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18592  00E4AC  50A3               	movf	4003,w,c	;volatile
 18593  00E4AE  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18594  00E4B0  0BEF               	andlw	-17
 18595  00E4B2  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18596  00E4B4  6EA3               	movwf	4003,c	;volatile
 18597                           
 18598                           ; BSR set to: 0
 18599                           ;uart_drv.c: 354: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 18600  00E4B6  EE20 F00C          	lfsr	2,12
 18601  00E4BA  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18602  00E4BC  26D9               	addwf	fsr2l,f,c
 18603  00E4BE  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18604  00E4C0  22DA               	addwfc	fsr2h,f,c
 18605  00E4C2  50DF               	movf	indf2,w,c
 18606  00E4C4  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18607  00E4C6  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18608  00E4C8  4782               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 18609  00E4CA  50A3               	movf	4003,w,c	;volatile
 18610  00E4CC  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18611  00E4CE  0BDF               	andlw	-33
 18612  00E4D0  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18613  00E4D2  6EA3               	movwf	4003,c	;volatile
 18614                           
 18615                           ; BSR set to: 0
 18616  00E4D4  0012               	return	
 18617  00E4D6                     __end_of_Uart_InitUartModule:
 18618                           	opt stack 0
 18619                           tosu	equ	0xFFF
 18620                           tosh	equ	0xFFE
 18621                           tosl	equ	0xFFD
 18622                           pclath	equ	0xFFA
 18623                           tblptru	equ	0xFF8
 18624                           tblptrh	equ	0xFF7
 18625                           tblptrl	equ	0xFF6
 18626                           tablat	equ	0xFF5
 18627                           prodh	equ	0xFF4
 18628                           prodl	equ	0xFF3
 18629                           intcon	equ	0xFF2
 18630                           intcon2	equ	0xFF1
 18631                           intcon3	equ	0xFF0
 18632                           indf0	equ	0xFEF
 18633                           postinc0	equ	0xFEE
 18634                           plusw0	equ	0xFEB
 18635                           fsr0h	equ	0xFEA
 18636                           fsr0l	equ	0xFE9
 18637                           wreg	equ	0xFE8
 18638                           indf1	equ	0xFE7
 18639                           postinc1	equ	0xFE6
 18640                           postdec1	equ	0xFE5
 18641                           fsr1h	equ	0xFE2
 18642                           fsr1l	equ	0xFE1
 18643                           indf2	equ	0xFDF
 18644                           postinc2	equ	0xFDE
 18645                           postdec2	equ	0xFDD
 18646                           plusw2	equ	0xFDB
 18647                           fsr2h	equ	0xFDA
 18648                           fsr2l	equ	0xFD9
 18649                           status	equ	0xFD8
 18650                           
 18651 ;; *************** function _SetUartBaudRate *****************
 18652 ;; Defined at:
 18653 ;;		line 121 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 18654 ;; Parameters:    Size  Location     Type
 18655 ;;  Module          1    wreg     unsigned char 
 18656 ;;  UartConfig      2   25[BANK0 ] PTR struct _UartConfig
 18657 ;;		 -> UartConfig(21), 
 18658 ;; Auto vars:     Size  Location     Type
 18659 ;;  Module          1   28[BANK0 ] unsigned char 
 18660 ;;  BaudRateRegi    2   29[BANK0 ] unsigned short 
 18661 ;;  DivisionFact    1   31[BANK0 ] unsigned char 
 18662 ;; Return value:  Size  Location     Type
 18663 ;;                  1    wreg      void 
 18664 ;; Registers used:
 18665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18666 ;; Tracked objects:
 18667 ;;		On entry : 0/0
 18668 ;;		On exit  : 0/0
 18669 ;;		Unchanged: 0/0
 18670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18671 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18672 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18673 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18674 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18675 ;;Total ram usage:        7 bytes
 18676 ;; Hardware stack levels used:    1
 18677 ;; Hardware stack levels required when called:   12
 18678 ;; This function calls:
 18679 ;;		___lldiv
 18680 ;;		___lmul
 18681 ;; This function is called by:
 18682 ;;		_Uart_InitUartModule
 18683 ;; This function uses a non-reentrant model
 18684 ;;
 18685                           
 18686                           	psect	text84
 18687  00CB72                     __ptext84:
 18688                           	opt stack 0
 18689  00CB72                     _SetUartBaudRate:
 18690                           	opt stack 14
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;incstack = 0
 18694                           ;SetUartBaudRate@Module stored from wreg
 18695  00CB72  0100               	movlb	0	; () banked
 18696  00CB74  6F7C               	movwf	SetUartBaudRate@Module& (0+255),b
 18697                           
 18698                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 18699  00CB76  0E00               	movlw	0
 18700  00CB78  0100               	movlb	0	; () banked
 18701  00CB7A  6F7E               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 18702  00CB7C  0E00               	movlw	0
 18703  00CB7E  6F7D               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 18704                           
 18705                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 18706  00CB80  0E00               	movlw	0
 18707  00CB82  6F7F               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 18708                           
 18709                           ; BSR set to: 0
 18710                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 18711  00CB84  EE20 F002          	lfsr	2,2
 18712  00CB88  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18713  00CB8A  26D9               	addwf	fsr2l,f,c
 18714  00CB8C  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18715  00CB8E  22DA               	addwfc	fsr2h,f,c
 18716  00CB90  50DF               	movf	indf2,w,c
 18717  00CB92  A4D8               	btfss	status,2,c
 18718  00CB94  D00B               	goto	l507
 18719                           
 18720                           ; BSR set to: 0
 18721  00CB96  EE20 F002          	lfsr	2,2
 18722  00CB9A  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18723  00CB9C  26D9               	addwf	fsr2l,f,c
 18724  00CB9E  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18725  00CBA0  22DA               	addwfc	fsr2h,f,c
 18726  00CBA2  50DF               	movf	indf2,w,c
 18727  00CBA4  A4D8               	btfss	status,2,c
 18728  00CBA6  D002               	goto	l507
 18729                           
 18730                           ; BSR set to: 0
 18731                           ;uart_drv.c: 128: {
 18732                           ;uart_drv.c: 129: DivisionFactor = 64;
 18733  00CBA8  0E40               	movlw	64
 18734  00CBAA  D039               	goto	L23
 18735  00CBAC                     l507:
 18736                           
 18737                           ; BSR set to: 0
 18738                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 18739                           
 18740                           ; BSR set to: 0
 18741  00CBAC  EE20 F002          	lfsr	2,2
 18742  00CBB0  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18743  00CBB2  26D9               	addwf	fsr2l,f,c
 18744  00CBB4  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18745  00CBB6  22DA               	addwfc	fsr2h,f,c
 18746  00CBB8  04DE               	decf	postinc2,w,c
 18747  00CBBA  A4D8               	btfss	status,2,c
 18748  00CBBC  D009               	goto	l509
 18749                           
 18750                           ; BSR set to: 0
 18751  00CBBE  EE20 F002          	lfsr	2,2
 18752  00CBC2  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18753  00CBC4  26D9               	addwf	fsr2l,f,c
 18754  00CBC6  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18755  00CBC8  22DA               	addwfc	fsr2h,f,c
 18756  00CBCA  50DF               	movf	indf2,w,c
 18757  00CBCC  B4D8               	btfsc	status,2,c
 18758  00CBCE  D012               	goto	u6140
 18759  00CBD0                     l509:
 18760                           
 18761                           ; BSR set to: 0
 18762                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 18763                           
 18764                           ; BSR set to: 0
 18765  00CBD0  EE20 F002          	lfsr	2,2
 18766  00CBD4  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18767  00CBD6  26D9               	addwf	fsr2l,f,c
 18768  00CBD8  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18769  00CBDA  22DA               	addwfc	fsr2h,f,c
 18770  00CBDC  50DF               	movf	indf2,w,c
 18771  00CBDE  A4D8               	btfss	status,2,c
 18772  00CBE0  D00B               	goto	l511
 18773                           
 18774                           ; BSR set to: 0
 18775  00CBE2  EE20 F002          	lfsr	2,2
 18776  00CBE6  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18777  00CBE8  26D9               	addwf	fsr2l,f,c
 18778  00CBEA  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18779  00CBEC  22DA               	addwfc	fsr2h,f,c
 18780  00CBEE  04DE               	decf	postinc2,w,c
 18781  00CBF0  A4D8               	btfss	status,2,c
 18782  00CBF2  D002               	goto	l511
 18783  00CBF4                     u6140:
 18784                           
 18785                           ; BSR set to: 0
 18786                           ;uart_drv.c: 136: {
 18787                           ;uart_drv.c: 137: DivisionFactor = 16;
 18788  00CBF4  0E10               	movlw	16
 18789  00CBF6  D013               	goto	L23
 18790  00CBF8                     l511:
 18791                           
 18792                           ; BSR set to: 0
 18793                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 18794                           
 18795                           ; BSR set to: 0
 18796  00CBF8  EE20 F002          	lfsr	2,2
 18797  00CBFC  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18798  00CBFE  26D9               	addwf	fsr2l,f,c
 18799  00CC00  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18800  00CC02  22DA               	addwfc	fsr2h,f,c
 18801  00CC04  04DE               	decf	postinc2,w,c
 18802  00CC06  A4D8               	btfss	status,2,c
 18803  00CC08  D00B               	goto	l513
 18804                           
 18805                           ; BSR set to: 0
 18806  00CC0A  EE20 F002          	lfsr	2,2
 18807  00CC0E  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18808  00CC10  26D9               	addwf	fsr2l,f,c
 18809  00CC12  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18810  00CC14  22DA               	addwfc	fsr2h,f,c
 18811  00CC16  04DE               	decf	postinc2,w,c
 18812  00CC18  A4D8               	btfss	status,2,c
 18813  00CC1A  D002               	goto	l513
 18814                           
 18815                           ; BSR set to: 0
 18816                           ;uart_drv.c: 140: {
 18817                           ;uart_drv.c: 141: DivisionFactor = 4;
 18818  00CC1C  0E04               	movlw	4
 18819  00CC1E                     L23:
 18820  00CC1E  6F7F               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 18821  00CC20                     l513:
 18822                           
 18823                           ; BSR set to: 0
 18824                           ;uart_drv.c: 146: }
 18825                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 18826                           
 18827                           ; BSR set to: 0
 18828                           
 18829                           ; BSR set to: 0
 18830                           
 18831                           ; BSR set to: 0
 18832                           
 18833                           ; BSR set to: 0
 18834                           
 18835                           ;uart_drv.c: 143: else
 18836                           ;uart_drv.c: 144: {
 18837                           
 18838                           ; BSR set to: 0
 18839  00CC20  EE20 F00D          	lfsr	2,13
 18840  00CC24  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18841  00CC26  26D9               	addwf	fsr2l,f,c
 18842  00CC28  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18843  00CC2A  22DA               	addwfc	fsr2h,f,c
 18844  00CC2C  CFDE F06C          	movff	postinc2,___lldiv@dividend
 18845  00CC30  CFDE F06D          	movff	postinc2,___lldiv@dividend+1
 18846  00CC34  CFDE F06E          	movff	postinc2,___lldiv@dividend+2
 18847  00CC38  CFDE F06F          	movff	postinc2,___lldiv@dividend+3
 18848  00CC3C  517F               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 18849  00CC3E  6F60               	movwf	___lmul@multiplier& (0+255),b
 18850  00CC40  6B61               	clrf	(___lmul@multiplier+1)& (0+255),b
 18851  00CC42  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
 18852  00CC44  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
 18853  00CC46  EE20 F011          	lfsr	2,17
 18854  00CC4A  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18855  00CC4C  26D9               	addwf	fsr2l,f,c
 18856  00CC4E  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18857  00CC50  22DA               	addwfc	fsr2h,f,c
 18858  00CC52  CFDE F064          	movff	postinc2,___lmul@multiplicand
 18859  00CC56  CFDE F065          	movff	postinc2,___lmul@multiplicand+1
 18860  00CC5A  CFDE F066          	movff	postinc2,___lmul@multiplicand+2
 18861  00CC5E  CFDE F067          	movff	postinc2,___lmul@multiplicand+3
 18862  00CC62  EC06  F056         	call	___lmul	;wreg free
 18863  00CC66  C060  F070         	movff	?___lmul,___lldiv@divisor
 18864  00CC6A  C061  F071         	movff	?___lmul+1,___lldiv@divisor+1
 18865  00CC6E  C062  F072         	movff	?___lmul+2,___lldiv@divisor+2
 18866  00CC72  C063  F073         	movff	?___lmul+3,___lldiv@divisor+3
 18867  00CC76  ECAF  F058         	call	___lldiv	;wreg free
 18868  00CC7A  0EFF               	movlw	255
 18869  00CC7C  0100               	movlb	0	; () banked
 18870  00CC7E  256C               	addwf	?___lldiv& (0+255),w,b
 18871  00CC80  6F7D               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 18872  00CC82  0EFF               	movlw	255
 18873  00CC84  216D               	addwfc	(?___lldiv+1)& (0+255),w,b
 18874  00CC86  6F7E               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 18875                           
 18876                           ; BSR set to: 0
 18877                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 18878  00CC88  057C               	decf	SetUartBaudRate@Module& (0+255),w,b
 18879  00CC8A  A4D8               	btfss	status,2,c
 18880  00CC8C  D005               	goto	l515
 18881                           
 18882                           ; BSR set to: 0
 18883                           ;uart_drv.c: 152: {
 18884                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 18885  00CC8E  0E00               	movlw	0
 18886  00CC90  6E7F               	movwf	3967,c	;volatile
 18887                           
 18888                           ; BSR set to: 0
 18889                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 18890  00CC92  C07D  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 18891                           
 18892                           ;uart_drv.c: 156: }
 18893  00CC96  0012               	return	
 18894  00CC98                     l515:
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 18898                           
 18899                           ; BSR set to: 0
 18900  00CC98  0E02               	movlw	2
 18901  00CC9A  197C               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 18902  00CC9C  A4D8               	btfss	status,2,c
 18903  00CC9E  0012               	return	
 18904                           
 18905                           ; BSR set to: 0
 18906                           ;uart_drv.c: 158: {
 18907                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 18908  00CCA0  0E00               	movlw	0
 18909  00CCA2  6E7D               	movwf	3965,c	;volatile
 18910                           
 18911                           ; BSR set to: 0
 18912                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 18913  00CCA4  C07D  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 18914                           
 18915                           ; BSR set to: 0
 18916  00CCA8  0012               	return	
 18917  00CCAA                     __end_of_SetUartBaudRate:
 18918                           	opt stack 0
 18919                           tosu	equ	0xFFF
 18920                           tosh	equ	0xFFE
 18921                           tosl	equ	0xFFD
 18922                           pclath	equ	0xFFA
 18923                           tblptru	equ	0xFF8
 18924                           tblptrh	equ	0xFF7
 18925                           tblptrl	equ	0xFF6
 18926                           tablat	equ	0xFF5
 18927                           prodh	equ	0xFF4
 18928                           prodl	equ	0xFF3
 18929                           intcon	equ	0xFF2
 18930                           intcon2	equ	0xFF1
 18931                           intcon3	equ	0xFF0
 18932                           indf0	equ	0xFEF
 18933                           postinc0	equ	0xFEE
 18934                           plusw0	equ	0xFEB
 18935                           fsr0h	equ	0xFEA
 18936                           fsr0l	equ	0xFE9
 18937                           wreg	equ	0xFE8
 18938                           indf1	equ	0xFE7
 18939                           postinc1	equ	0xFE6
 18940                           postdec1	equ	0xFE5
 18941                           fsr1h	equ	0xFE2
 18942                           fsr1l	equ	0xFE1
 18943                           indf2	equ	0xFDF
 18944                           postinc2	equ	0xFDE
 18945                           postdec2	equ	0xFDD
 18946                           plusw2	equ	0xFDB
 18947                           fsr2h	equ	0xFDA
 18948                           fsr2l	equ	0xFD9
 18949                           status	equ	0xFD8
 18950                           
 18951 ;; *************** function ___lmul *****************
 18952 ;; Defined at:
 18953 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 18954 ;; Parameters:    Size  Location     Type
 18955 ;;  multiplier      4    0[BANK0 ] unsigned long 
 18956 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 18957 ;; Auto vars:     Size  Location     Type
 18958 ;;  product         4    8[BANK0 ] unsigned long 
 18959 ;; Return value:  Size  Location     Type
 18960 ;;                  4    0[BANK0 ] unsigned long 
 18961 ;; Registers used:
 18962 ;;		wreg, status,2, status,0
 18963 ;; Tracked objects:
 18964 ;;		On entry : 0/0
 18965 ;;		On exit  : 0/0
 18966 ;;		Unchanged: 0/0
 18967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18968 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18969 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18971 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18972 ;;Total ram usage:       12 bytes
 18973 ;; Hardware stack levels used:    1
 18974 ;; Hardware stack levels required when called:   11
 18975 ;; This function calls:
 18976 ;;		Nothing
 18977 ;; This function is called by:
 18978 ;;		_Tmr_TmrBPrSet
 18979 ;;		_SetUartBaudRate
 18980 ;;		_strtol
 18981 ;; This function uses a non-reentrant model
 18982 ;;
 18983                           
 18984                           	psect	text85
 18985  00AC0C                     __ptext85:
 18986                           	opt stack 0
 18987  00AC0C                     ___lmul:
 18988                           	opt stack 15
 18989                           
 18990                           ; BSR set to: 0
 18991                           ;incstack = 0
 18992  00AC0C  0E00               	movlw	0
 18993  00AC0E  0100               	movlb	0	; () banked
 18994  00AC10  6F68               	movwf	___lmul@product& (0+255),b
 18995  00AC12  0E00               	movlw	0
 18996  00AC14  6F69               	movwf	(___lmul@product+1)& (0+255),b
 18997  00AC16  0E00               	movlw	0
 18998  00AC18  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 18999  00AC1A  0E00               	movlw	0
 19000  00AC1C  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 19001  00AC1E                     
 19002                           ; BSR set to: 0
 19003                           
 19004                           ; BSR set to: 0
 19005  00AC1E  A160               	btfss	___lmul@multiplier& (0+255),0,b
 19006  00AC20  D008               	goto	l2131
 19007                           
 19008                           ; BSR set to: 0
 19009  00AC22  5164               	movf	___lmul@multiplicand& (0+255),w,b
 19010  00AC24  2768               	addwf	___lmul@product& (0+255),f,b
 19011  00AC26  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19012  00AC28  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 19013  00AC2A  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19014  00AC2C  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 19015  00AC2E  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19016  00AC30  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 19017  00AC32                     l2131:
 19018                           
 19019                           ; BSR set to: 0
 19020                           
 19021                           ; BSR set to: 0
 19022  00AC32  90D8               	bcf	status,0,c
 19023  00AC34  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 19024  00AC36  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19025  00AC38  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19026  00AC3A  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19027                           
 19028                           ; BSR set to: 0
 19029  00AC3C  90D8               	bcf	status,0,c
 19030  00AC3E  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19031  00AC40  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19032  00AC42  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19033  00AC44  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 19034  00AC46  5160               	movf	___lmul@multiplier& (0+255),w,b
 19035  00AC48  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19036  00AC4A  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19037  00AC4C  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19038  00AC4E  A4D8               	btfss	status,2,c
 19039  00AC50  D7E6               	goto	l2130
 19040                           
 19041                           ; BSR set to: 0
 19042  00AC52  C068  F060         	movff	___lmul@product,?___lmul
 19043  00AC56  C069  F061         	movff	___lmul@product+1,?___lmul+1
 19044  00AC5A  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 19045  00AC5E  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 19046                           
 19047                           ; BSR set to: 0
 19048  00AC62  0012               	return		;funcret
 19049  00AC64                     __end_of___lmul:
 19050                           	opt stack 0
 19051                           tosu	equ	0xFFF
 19052                           tosh	equ	0xFFE
 19053                           tosl	equ	0xFFD
 19054                           pclath	equ	0xFFA
 19055                           tblptru	equ	0xFF8
 19056                           tblptrh	equ	0xFF7
 19057                           tblptrl	equ	0xFF6
 19058                           tablat	equ	0xFF5
 19059                           prodh	equ	0xFF4
 19060                           prodl	equ	0xFF3
 19061                           intcon	equ	0xFF2
 19062                           intcon2	equ	0xFF1
 19063                           intcon3	equ	0xFF0
 19064                           indf0	equ	0xFEF
 19065                           postinc0	equ	0xFEE
 19066                           plusw0	equ	0xFEB
 19067                           fsr0h	equ	0xFEA
 19068                           fsr0l	equ	0xFE9
 19069                           wreg	equ	0xFE8
 19070                           indf1	equ	0xFE7
 19071                           postinc1	equ	0xFE6
 19072                           postdec1	equ	0xFE5
 19073                           fsr1h	equ	0xFE2
 19074                           fsr1l	equ	0xFE1
 19075                           indf2	equ	0xFDF
 19076                           postinc2	equ	0xFDE
 19077                           postdec2	equ	0xFDD
 19078                           plusw2	equ	0xFDB
 19079                           fsr2h	equ	0xFDA
 19080                           fsr2l	equ	0xFD9
 19081                           status	equ	0xFD8
 19082                           
 19083 ;; *************** function _UartSetConfig *****************
 19084 ;; Defined at:
 19085 ;;		line 119 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19086 ;; Parameters:    Size  Location     Type
 19087 ;;		None
 19088 ;; Auto vars:     Size  Location     Type
 19089 ;;		None
 19090 ;; Return value:  Size  Location     Type
 19091 ;;                  1    wreg      void 
 19092 ;; Registers used:
 19093 ;;		wreg, status,2
 19094 ;; Tracked objects:
 19095 ;;		On entry : 0/0
 19096 ;;		On exit  : 0/0
 19097 ;;		Unchanged: 0/0
 19098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19103 ;;Total ram usage:        0 bytes
 19104 ;; Hardware stack levels used:    1
 19105 ;; Hardware stack levels required when called:   11
 19106 ;; This function calls:
 19107 ;;		Nothing
 19108 ;; This function is called by:
 19109 ;;		_MdmWifi_MainTask
 19110 ;; This function uses a non-reentrant model
 19111 ;;
 19112                           
 19113                           	psect	text86
 19114  00ABB4                     __ptext86:
 19115                           	opt stack 0
 19116  00ABB4                     _UartSetConfig:
 19117                           	opt stack 16
 19118                           
 19119                           ;mdm_wifi.c: 121: UartConfig.UartEnable = ((UINT8)(1));
 19120                           
 19121                           ; BSR set to: 0
 19122                           ;incstack = 0
 19123  00ABB4  0E01               	movlw	1
 19124  00ABB6  0101               	movlb	1	; () banked
 19125  00ABB8  6F78               	movwf	_UartConfig& (0+255),b
 19126                           
 19127                           ;mdm_wifi.c: 122: UartConfig.UartMode = ((UINT8)(0));
 19128  00ABBA  0E00               	movlw	0
 19129  00ABBC  6F79               	movwf	(_UartConfig+1)& (0+255),b
 19130                           
 19131                           ;mdm_wifi.c: 123: UartConfig.BaudRateMode = ((UINT8)(1));
 19132  00ABBE  0E01               	movlw	1
 19133  00ABC0  6F7A               	movwf	(_UartConfig+2)& (0+255),b
 19134                           
 19135                           ;mdm_wifi.c: 124: UartConfig.HighBaudMode = ((UINT8)(1));
 19136  00ABC2  0E01               	movlw	1
 19137  00ABC4  6F7B               	movwf	(_UartConfig+3)& (0+255),b
 19138                           
 19139                           ;mdm_wifi.c: 125: UartConfig.Tx9bitMode = ((UINT8)(0));
 19140  00ABC6  0E00               	movlw	0
 19141  00ABC8  6F7C               	movwf	(_UartConfig+4)& (0+255),b
 19142                           
 19143                           ;mdm_wifi.c: 126: UartConfig.Rx9bitMode = ((UINT8)(0));
 19144  00ABCA  0E00               	movlw	0
 19145  00ABCC  6F7D               	movwf	(_UartConfig+5)& (0+255),b
 19146                           
 19147                           ;mdm_wifi.c: 127: UartConfig.TxEnable = ((UINT8)(1));
 19148  00ABCE  0E01               	movlw	1
 19149  00ABD0  6F7E               	movwf	(_UartConfig+6)& (0+255),b
 19150                           
 19151                           ;mdm_wifi.c: 128: UartConfig.RxEnable = ((UINT8)(1));
 19152  00ABD2  0E01               	movlw	1
 19153  00ABD4  6F7F               	movwf	(_UartConfig+7)& (0+255),b
 19154                           
 19155                           ;mdm_wifi.c: 129: UartConfig.SendBreakEnable = ((UINT8)(0));
 19156  00ABD6  0E00               	movlw	0
 19157  00ABD8  6F80               	movwf	(_UartConfig+8)& (0+255),b
 19158                           
 19159                           ;mdm_wifi.c: 130: UartConfig.AutobaudEnable = ((UINT8)(0));
 19160  00ABDA  0E00               	movlw	0
 19161  00ABDC  6F81               	movwf	(_UartConfig+9)& (0+255),b
 19162                           
 19163                           ;mdm_wifi.c: 131: UartConfig.WakeUpEnable = ((UINT8)(0));
 19164  00ABDE  0E00               	movlw	0
 19165  00ABE0  6F82               	movwf	(_UartConfig+10)& (0+255),b
 19166                           
 19167                           ;mdm_wifi.c: 132: UartConfig.TxInterruptEnable = ((UINT8)(0));
 19168  00ABE2  0E00               	movlw	0
 19169  00ABE4  6F83               	movwf	(_UartConfig+11)& (0+255),b
 19170                           
 19171                           ;mdm_wifi.c: 133: UartConfig.RxInterruptEnable = ((UINT8)(1));
 19172  00ABE6  0E01               	movlw	1
 19173  00ABE8  6F84               	movwf	(_UartConfig+12)& (0+255),b
 19174                           
 19175                           ;mdm_wifi.c: 134: UartConfig.McuBusClock = ((UINT32)(48000000));
 19176  00ABEA  0E00               	movlw	0
 19177  00ABEC  6F85               	movwf	(_UartConfig+13)& (0+255),b
 19178  00ABEE  0E6C               	movlw	108
 19179  00ABF0  6F86               	movwf	(_UartConfig+14)& (0+255),b
 19180  00ABF2  0EDC               	movlw	220
 19181  00ABF4  6F87               	movwf	(_UartConfig+15)& (0+255),b
 19182  00ABF6  0E02               	movlw	2
 19183  00ABF8  6F88               	movwf	(_UartConfig+16)& (0+255),b
 19184                           
 19185                           ;mdm_wifi.c: 135: UartConfig.DesiredBaudRate = 115200;
 19186  00ABFA  0E00               	movlw	0
 19187  00ABFC  6F89               	movwf	(_UartConfig+17)& (0+255),b
 19188  00ABFE  0EC2               	movlw	194
 19189  00AC00  6F8A               	movwf	(_UartConfig+18)& (0+255),b
 19190  00AC02  0E01               	movlw	1
 19191  00AC04  6F8B               	movwf	(_UartConfig+19)& (0+255),b
 19192  00AC06  0E00               	movlw	0
 19193  00AC08  6F8C               	movwf	(_UartConfig+20)& (0+255),b
 19194                           
 19195                           ; BSR set to: 1
 19196  00AC0A  0012               	return		;funcret
 19197  00AC0C                     __end_of_UartSetConfig:
 19198                           	opt stack 0
 19199                           tosu	equ	0xFFF
 19200                           tosh	equ	0xFFE
 19201                           tosl	equ	0xFFD
 19202                           pclath	equ	0xFFA
 19203                           tblptru	equ	0xFF8
 19204                           tblptrh	equ	0xFF7
 19205                           tblptrl	equ	0xFF6
 19206                           tablat	equ	0xFF5
 19207                           prodh	equ	0xFF4
 19208                           prodl	equ	0xFF3
 19209                           intcon	equ	0xFF2
 19210                           intcon2	equ	0xFF1
 19211                           intcon3	equ	0xFF0
 19212                           indf0	equ	0xFEF
 19213                           postinc0	equ	0xFEE
 19214                           plusw0	equ	0xFEB
 19215                           fsr0h	equ	0xFEA
 19216                           fsr0l	equ	0xFE9
 19217                           wreg	equ	0xFE8
 19218                           indf1	equ	0xFE7
 19219                           postinc1	equ	0xFE6
 19220                           postdec1	equ	0xFE5
 19221                           fsr1h	equ	0xFE2
 19222                           fsr1l	equ	0xFE1
 19223                           indf2	equ	0xFDF
 19224                           postinc2	equ	0xFDE
 19225                           postdec2	equ	0xFDD
 19226                           plusw2	equ	0xFDB
 19227                           fsr2h	equ	0xFDA
 19228                           fsr2l	equ	0xFD9
 19229                           status	equ	0xFD8
 19230                           
 19231 ;; *************** function _MdmWifiGetUartData *****************
 19232 ;; Defined at:
 19233 ;;		line 146 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19234 ;; Parameters:    Size  Location     Type
 19235 ;;		None
 19236 ;; Auto vars:     Size  Location     Type
 19237 ;;		None
 19238 ;; Return value:  Size  Location     Type
 19239 ;;                  1    wreg      void 
 19240 ;; Registers used:
 19241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19242 ;; Tracked objects:
 19243 ;;		On entry : 0/0
 19244 ;;		On exit  : 0/0
 19245 ;;		Unchanged: 0/0
 19246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19251 ;;Total ram usage:        0 bytes
 19252 ;; Hardware stack levels used:    1
 19253 ;; Hardware stack levels required when called:   12
 19254 ;; This function calls:
 19255 ;;		_ClearBuffer
 19256 ;;		_GenerateEvt
 19257 ;;		_ReceiveEvt
 19258 ;;		_StringCopy
 19259 ;; This function is called by:
 19260 ;;		_MdmWifi_MainTask
 19261 ;; This function uses a non-reentrant model
 19262 ;;
 19263                           
 19264                           	psect	text87
 19265  00C1EE                     __ptext87:
 19266                           	opt stack 0
 19267  00C1EE                     _MdmWifiGetUartData:
 19268                           	opt stack 15
 19269                           
 19270                           ;mdm_wifi.c: 148: static WifiUartGetDataStateType WifiUartGetDataState = WifiMdmUart_RxI
      +                          dle;
 19271                           ;mdm_wifi.c: 149: static UINT8 Counter = 0;
 19272                           ;mdm_wifi.c: 151: switch (WifiUartGetDataState)
 19273                           
 19274                           ; BSR set to: 1
 19275                           ;incstack = 0
 19276  00C1EE  D05F               	goto	l864
 19277  00C1F0                     
 19278                           ;mdm_wifi.c: 155: if (ReceiveEvt(&NewWifiUartData))
 19279  00C1F0  0E5C               	movlw	low _NewWifiUartData
 19280  00C1F2  0100               	movlb	0	; () banked
 19281  00C1F4  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19282  00C1F6  0E00               	movlw	high _NewWifiUartData
 19283  00C1F8  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19284  00C1FA  EC87  F051         	call	_ReceiveEvt	;wreg free
 19285  00C1FE  0900               	iorlw	0
 19286  00C200  B4D8               	btfsc	status,2,c
 19287  00C202  0012               	return	
 19288                           
 19289                           ;mdm_wifi.c: 156: {
 19290                           ;mdm_wifi.c: 158: WifiUartGetDataState = WifiMdmUart_Receiving;
 19291  00C204  0E01               	movlw	1
 19292  00C206  0101               	movlb	1	; () banked
 19293  00C208  6F6C               	movwf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),b
 19294                           
 19295                           ; BSR set to: 1
 19296                           ;mdm_wifi.c: 159: }
 19297                           ;mdm_wifi.c: 160: break;
 19298  00C20A  0012               	return	
 19299  00C20C                     
 19300                           ; BSR set to: 1
 19301                           ;mdm_wifi.c: 164: if (ReceiveEvt(&NewWifiUartData))
 19302                           
 19303                           ; BSR set to: 1
 19304  00C20C  0E5C               	movlw	low _NewWifiUartData
 19305  00C20E  0100               	movlb	0	; () banked
 19306  00C210  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19307  00C212  0E00               	movlw	high _NewWifiUartData
 19308  00C214  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19309  00C216  EC87  F051         	call	_ReceiveEvt	;wreg free
 19310  00C21A  0900               	iorlw	0
 19311  00C21C  B4D8               	btfsc	status,2,c
 19312  00C21E  D004               	goto	l869
 19313                           
 19314                           ;mdm_wifi.c: 165: {
 19315                           ;mdm_wifi.c: 167: Counter = 0;
 19316  00C220  0E00               	movlw	0
 19317  00C222  0101               	movlb	1	; () banked
 19318  00C224  6F6B               	movwf	MdmWifiGetUartData@Counter& (0+255),b
 19319                           
 19320                           ;mdm_wifi.c: 168: }
 19321  00C226  0012               	return	
 19322  00C228                     l869:
 19323                           
 19324                           ;mdm_wifi.c: 169: else
 19325                           ;mdm_wifi.c: 170: {
 19326                           ;mdm_wifi.c: 172: Counter++;
 19327                           
 19328                           ; BSR set to: 1
 19329  00C228  0101               	movlb	1	; () banked
 19330  00C22A  2B6B               	incf	MdmWifiGetUartData@Counter& (0+255),f,b
 19331                           
 19332                           ; BSR set to: 1
 19333                           ;mdm_wifi.c: 174: if (Counter >= (((UINT16)(10))/((UINT16)(1))))
 19334  00C22C  0E09               	movlw	9
 19335  00C22E  656B               	cpfsgt	MdmWifiGetUartData@Counter& (0+255),b
 19336  00C230  0012               	return	
 19337                           
 19338                           ; BSR set to: 1
 19339                           ;mdm_wifi.c: 175: {
 19340                           ;mdm_wifi.c: 177: Counter = 0;
 19341  00C232  0E00               	movlw	0
 19342  00C234  6F6B               	movwf	MdmWifiGetUartData@Counter& (0+255),b
 19343                           
 19344                           ; BSR set to: 1
 19345                           ;mdm_wifi.c: 179: StringCopy(MdmWifi_UartRxBuffer,WifiRxPacket.RxBuffer,MdmWifi_UartRxCo
      +                          unter);
 19346  00C236  0E00               	movlw	low _MdmWifi_UartRxBuffer
 19347  00C238  0100               	movlb	0	; () banked
 19348  00C23A  6F60               	movwf	StringCopy@SourceStr& (0+255),b
 19349  00C23C  0E0B               	movlw	high _MdmWifi_UartRxBuffer
 19350  00C23E  6F61               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 19351  00C240  0E00               	movlw	low _WifiRxPacket
 19352  00C242  6F62               	movwf	StringCopy@DestStr& (0+255),b
 19353  00C244  0E07               	movlw	high _WifiRxPacket
 19354  00C246  6F63               	movwf	(StringCopy@DestStr+1)& (0+255),b
 19355  00C248  C14A  F064         	movff	_MdmWifi_UartRxCounter,StringCopy@Len
 19356  00C24C  C14B  F065         	movff	_MdmWifi_UartRxCounter+1,StringCopy@Len+1
 19357  00C250  EC12  F053         	call	_StringCopy	;wreg free
 19358                           
 19359                           ;mdm_wifi.c: 180: WifiRxPacket.RxByteNum = MdmWifi_UartRxCounter;
 19360  00C254  C14A  F7FA         	movff	_MdmWifi_UartRxCounter,_WifiRxPacket+250
 19361  00C258  C14B  F7FB         	movff	_MdmWifi_UartRxCounter+1,_WifiRxPacket+251
 19362                           
 19363                           ;mdm_wifi.c: 182: ClearBuffer(MdmWifi_UartRxBuffer,sizeof(MdmWifi_UartRxBuffer));
 19364  00C25C  0E00               	movlw	low _MdmWifi_UartRxBuffer
 19365  00C25E  0100               	movlb	0	; () banked
 19366  00C260  6F60               	movwf	ClearBuffer@Buffer& (0+255),b
 19367  00C262  0E0B               	movlw	high _MdmWifi_UartRxBuffer
 19368  00C264  6F61               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 19369  00C266  0E00               	movlw	0
 19370  00C268  6F63               	movwf	(ClearBuffer@Len+1)& (0+255),b
 19371  00C26A  0EFA               	movlw	250
 19372  00C26C  6F62               	movwf	ClearBuffer@Len& (0+255),b
 19373  00C26E  EC49  F052         	call	_ClearBuffer	;wreg free
 19374                           
 19375                           ;mdm_wifi.c: 183: MdmWifi_UartRxCounter = 0;
 19376  00C272  0E00               	movlw	0
 19377  00C274  0101               	movlb	1	; () banked
 19378  00C276  6F4B               	movwf	(_MdmWifi_UartRxCounter+1)& (0+255),b
 19379  00C278  0E00               	movlw	0
 19380  00C27A  6F4A               	movwf	_MdmWifi_UartRxCounter& (0+255),b
 19381                           
 19382                           ; BSR set to: 1
 19383                           ;mdm_wifi.c: 185: GenerateEvt(&(WifiRxPacket.PacketRxNotificationEvt));
 19384  00C27C  0EFC               	movlw	low (_WifiRxPacket+252)
 19385  00C27E  0100               	movlb	0	; () banked
 19386  00C280  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19387  00C282  0E07               	movlw	high (_WifiRxPacket+252)
 19388  00C284  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19389  00C286  ECF5  F04F         	call	_GenerateEvt	;wreg free
 19390                           
 19391                           ;mdm_wifi.c: 186: GenerateEvt(&NewWifiPacket);
 19392  00C28A  0E5A               	movlw	low _NewWifiPacket
 19393  00C28C  0100               	movlb	0	; () banked
 19394  00C28E  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19395  00C290  0E00               	movlw	high _NewWifiPacket
 19396  00C292  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19397  00C294  ECF5  F04F         	call	_GenerateEvt	;wreg free
 19398                           
 19399                           ;mdm_wifi.c: 187: GenerateEvt(&NewWifiPacketParser);
 19400  00C298  0E59               	movlw	low _NewWifiPacketParser
 19401  00C29A  0100               	movlb	0	; () banked
 19402  00C29C  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19403  00C29E  0E00               	movlw	high _NewWifiPacketParser
 19404  00C2A0  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19405  00C2A2  ECF5  F04F         	call	_GenerateEvt	;wreg free
 19406                           
 19407                           ;mdm_wifi.c: 189: WifiUartGetDataState = WifiMdmUart_RxIdle;
 19408  00C2A6  0E00               	movlw	0
 19409  00C2A8  0101               	movlb	1	; () banked
 19410  00C2AA  6F6C               	movwf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),b
 19411                           
 19412                           ; BSR set to: 1
 19413                           ;mdm_wifi.c: 196: }
 19414                           
 19415                           ; BSR set to: 1
 19416                           ;mdm_wifi.c: 195: break;
 19417                           
 19418                           ;mdm_wifi.c: 194: default:
 19419                           
 19420                           ; BSR set to: 1
 19421                           ;mdm_wifi.c: 190: }
 19422                           ;mdm_wifi.c: 191: }
 19423                           ;mdm_wifi.c: 192: break;
 19424                           
 19425                           ; BSR set to: 1
 19426  00C2AC  0012               	return	
 19427  00C2AE                     l864:
 19428                           
 19429                           ; BSR set to: 1
 19430  00C2AE  0101               	movlb	1	; () banked
 19431  00C2B0  516C               	movf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),w,b
 19432                           
 19433                           ; Switch size 1, requested type "space"
 19434                           ; Number of cases is 2, Range of values is 0 to 1
 19435                           ; switch strategies available:
 19436                           ; Name         Instructions Cycles
 19437                           ; simple_byte            7     4 (average)
 19438                           ;	Chosen strategy is simple_byte
 19439  00C2B2  0A00               	xorlw	0	; case 0
 19440  00C2B4  B4D8               	btfsc	status,2,c
 19441  00C2B6  D79C               	goto	l865
 19442  00C2B8  0A01               	xorlw	1	; case 1
 19443  00C2BA  A4D8               	btfss	status,2,c
 19444  00C2BC  0012               	return	
 19445  00C2BE  D7A6               	goto	l868
 19446  00C2C0                     __end_of_MdmWifiGetUartData:
 19447                           	opt stack 0
 19448                           tosu	equ	0xFFF
 19449                           tosh	equ	0xFFE
 19450                           tosl	equ	0xFFD
 19451                           pclath	equ	0xFFA
 19452                           tblptru	equ	0xFF8
 19453                           tblptrh	equ	0xFF7
 19454                           tblptrl	equ	0xFF6
 19455                           tablat	equ	0xFF5
 19456                           prodh	equ	0xFF4
 19457                           prodl	equ	0xFF3
 19458                           intcon	equ	0xFF2
 19459                           intcon2	equ	0xFF1
 19460                           intcon3	equ	0xFF0
 19461                           indf0	equ	0xFEF
 19462                           postinc0	equ	0xFEE
 19463                           plusw0	equ	0xFEB
 19464                           fsr0h	equ	0xFEA
 19465                           fsr0l	equ	0xFE9
 19466                           wreg	equ	0xFE8
 19467                           indf1	equ	0xFE7
 19468                           postinc1	equ	0xFE6
 19469                           postdec1	equ	0xFE5
 19470                           fsr1h	equ	0xFE2
 19471                           fsr1l	equ	0xFE1
 19472                           indf2	equ	0xFDF
 19473                           postinc2	equ	0xFDE
 19474                           postdec2	equ	0xFDD
 19475                           plusw2	equ	0xFDB
 19476                           fsr2h	equ	0xFDA
 19477                           fsr2l	equ	0xFD9
 19478                           status	equ	0xFD8
 19479                           
 19480 ;; *************** function _MdmWifiEvtParser *****************
 19481 ;; Defined at:
 19482 ;;		line 207 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19483 ;; Parameters:    Size  Location     Type
 19484 ;;		None
 19485 ;; Auto vars:     Size  Location     Type
 19486 ;;		None
 19487 ;; Return value:  Size  Location     Type
 19488 ;;                  1    wreg      void 
 19489 ;; Registers used:
 19490 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19491 ;; Tracked objects:
 19492 ;;		On entry : 0/0
 19493 ;;		On exit  : 0/0
 19494 ;;		Unchanged: 0/0
 19495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19500 ;;Total ram usage:        0 bytes
 19501 ;; Hardware stack levels used:    1
 19502 ;; Hardware stack levels required when called:   13
 19503 ;; This function calls:
 19504 ;;		_GenerateEvt
 19505 ;;		_ReceiveEvt
 19506 ;;		_strstr
 19507 ;; This function is called by:
 19508 ;;		_MdmWifi_MainTask
 19509 ;; This function uses a non-reentrant model
 19510 ;;
 19511                           
 19512                           	psect	text88
 19513  00AF90                     __ptext88:
 19514                           	opt stack 0
 19515  00AF90                     _MdmWifiEvtParser:
 19516                           	opt stack 14
 19517                           
 19518                           ;mdm_wifi.c: 210: if (ReceiveEvt(&NewWifiPacketParser))
 19519                           
 19520                           ;incstack = 0
 19521  00AF90  0E59               	movlw	low _NewWifiPacketParser
 19522  00AF92  0100               	movlb	0	; () banked
 19523  00AF94  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19524  00AF96  0E00               	movlw	high _NewWifiPacketParser
 19525  00AF98  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19526  00AF9A  EC87  F051         	call	_ReceiveEvt	;wreg free
 19527  00AF9E  0900               	iorlw	0
 19528  00AFA0  B4D8               	btfsc	status,2,c
 19529  00AFA2  0012               	return	
 19530                           
 19531                           ;mdm_wifi.c: 211: {
 19532                           ;mdm_wifi.c: 213: if (strstr(WifiRxPacket.RxBuffer,(void*)"ERROR") != (0))
 19533  00AFA4  0E00               	movlw	low _WifiRxPacket
 19534  00AFA6  0100               	movlb	0	; () banked
 19535  00AFA8  6F6F               	movwf	strstr@s1& (0+255),b
 19536  00AFAA  0E07               	movlw	high _WifiRxPacket
 19537  00AFAC  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19538  00AFAE  0ED5               	movlw	low STR_1
 19539  00AFB0  6F71               	movwf	strstr@s2& (0+255),b
 19540  00AFB2  0EEF               	movlw	high STR_1
 19541  00AFB4  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19542  00AFB6  EC77  F059         	call	_strstr	;wreg free
 19543  00AFBA  0100               	movlb	0	; () banked
 19544  00AFBC  516F               	movf	?_strstr& (0+255),w,b
 19545  00AFBE  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19546  00AFC0  B4D8               	btfsc	status,2,c
 19547  00AFC2  D007               	goto	l877
 19548                           
 19549                           ; BSR set to: 0
 19550                           ;mdm_wifi.c: 214: {
 19551                           ;mdm_wifi.c: 216: GenerateEvt(&WifiGenericError);
 19552  00AFC4  0EC5               	movlw	low _WifiGenericError
 19553  00AFC6  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19554  00AFC8  0E01               	movlw	high _WifiGenericError
 19555  00AFCA  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19556  00AFCC  ECF5  F04F         	call	_GenerateEvt	;wreg free
 19557                           
 19558                           ;mdm_wifi.c: 217: }
 19559  00AFD0  0012               	return	
 19560  00AFD2                     l877:
 19561                           
 19562                           ;mdm_wifi.c: 219: else if (strstr(WifiRxPacket.RxBuffer,(void*)"+IPD") != (0))
 19563  00AFD2  0E00               	movlw	low _WifiRxPacket
 19564  00AFD4  0100               	movlb	0	; () banked
 19565  00AFD6  6F6F               	movwf	strstr@s1& (0+255),b
 19566  00AFD8  0E07               	movlw	high _WifiRxPacket
 19567  00AFDA  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19568  00AFDC  0EDB               	movlw	low STR_2
 19569  00AFDE  6F71               	movwf	strstr@s2& (0+255),b
 19570  00AFE0  0EEF               	movlw	high STR_2
 19571  00AFE2  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19572  00AFE4  EC77  F059         	call	_strstr	;wreg free
 19573  00AFE8  0100               	movlb	0	; () banked
 19574  00AFEA  516F               	movf	?_strstr& (0+255),w,b
 19575  00AFEC  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19576  00AFEE  B4D8               	btfsc	status,2,c
 19577  00AFF0  0012               	return	
 19578                           
 19579                           ; BSR set to: 0
 19580                           ;mdm_wifi.c: 220: {
 19581                           ;mdm_wifi.c: 222: GenerateEvt(&WifiReceiveNetData);
 19582  00AFF2  0E58               	movlw	low _WifiReceiveNetData
 19583  00AFF4  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19584  00AFF6  0E00               	movlw	high _WifiReceiveNetData
 19585  00AFF8  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19586  00AFFA  ECF5  F04F         	call	_GenerateEvt	;wreg free
 19587                           
 19588                           ;mdm_wifi.c: 224: else
 19589                           ;mdm_wifi.c: 225: {
 19590                           
 19591                           ;mdm_wifi.c: 223: }
 19592  00AFFE  0012               	return	
 19593  00B000                     __end_of_MdmWifiEvtParser:
 19594                           	opt stack 0
 19595                           tosu	equ	0xFFF
 19596                           tosh	equ	0xFFE
 19597                           tosl	equ	0xFFD
 19598                           pclath	equ	0xFFA
 19599                           tblptru	equ	0xFF8
 19600                           tblptrh	equ	0xFF7
 19601                           tblptrl	equ	0xFF6
 19602                           tablat	equ	0xFF5
 19603                           prodh	equ	0xFF4
 19604                           prodl	equ	0xFF3
 19605                           intcon	equ	0xFF2
 19606                           intcon2	equ	0xFF1
 19607                           intcon3	equ	0xFF0
 19608                           indf0	equ	0xFEF
 19609                           postinc0	equ	0xFEE
 19610                           plusw0	equ	0xFEB
 19611                           fsr0h	equ	0xFEA
 19612                           fsr0l	equ	0xFE9
 19613                           wreg	equ	0xFE8
 19614                           indf1	equ	0xFE7
 19615                           postinc1	equ	0xFE6
 19616                           postdec1	equ	0xFE5
 19617                           fsr1h	equ	0xFE2
 19618                           fsr1l	equ	0xFE1
 19619                           indf2	equ	0xFDF
 19620                           postinc2	equ	0xFDE
 19621                           postdec2	equ	0xFDD
 19622                           plusw2	equ	0xFDB
 19623                           fsr2h	equ	0xFDA
 19624                           fsr2l	equ	0xFD9
 19625                           status	equ	0xFD8
 19626                           
 19627 ;; *************** function _MdmWifi_StartWifiModemSm *****************
 19628 ;; Defined at:
 19629 ;;		line 84 in file "../Source/c/01_Hal/02_Drv/mdm_wifi_drv.c"
 19630 ;; Parameters:    Size  Location     Type
 19631 ;;		None
 19632 ;; Auto vars:     Size  Location     Type
 19633 ;;		None
 19634 ;; Return value:  Size  Location     Type
 19635 ;;                  1    wreg      void 
 19636 ;; Registers used:
 19637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19638 ;; Tracked objects:
 19639 ;;		On entry : 0/0
 19640 ;;		On exit  : 0/0
 19641 ;;		Unchanged: 0/0
 19642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19647 ;;Total ram usage:        0 bytes
 19648 ;; Hardware stack levels used:    1
 19649 ;; Hardware stack levels required when called:   12
 19650 ;; This function calls:
 19651 ;;		_GenerateEvt
 19652 ;;		_ReceiveEvt
 19653 ;; This function is called by:
 19654 ;;		_MdmWifi_DrvMainFn
 19655 ;; This function uses a non-reentrant model
 19656 ;;
 19657                           
 19658                           	psect	text89
 19659  00B1E2                     __ptext89:
 19660                           	opt stack 0
 19661  00B1E2                     _MdmWifi_StartWifiModemSm:
 19662                           	opt stack 15
 19663                           
 19664                           ;mdm_wifi_drv.c: 86: static WifiModeSmStateType WifiModeSmState = WifiMdm_Autostart;
 19665                           ;mdm_wifi_drv.c: 87: static UINT16 Counter = 0;
 19666                           ;mdm_wifi_drv.c: 89: switch (WifiModeSmState)
 19667                           
 19668                           ;incstack = 0
 19669  00B1E2  D033               	goto	l647
 19670  00B1E4                     l648:
 19671                           
 19672                           ; BSR set to: 1
 19673                           ;mdm_wifi_drv.c: 93: TRISEbits.TRISE0 = ((UINT8)(0));
 19674  00B1E4  9096               	bcf	3990,0,c	;volatile
 19675                           
 19676                           ;mdm_wifi_drv.c: 95: LATEbits.LATE0 = ((UINT8)(0));
 19677  00B1E6  908D               	bcf	3981,0,c	;volatile
 19678                           
 19679                           ; BSR set to: 1
 19680                           ;mdm_wifi_drv.c: 97: GenerateEvt(&StartWifiModem);
 19681  00B1E8  0E5B               	movlw	low _StartWifiModem
 19682  00B1EA  0100               	movlb	0	; () banked
 19683  00B1EC  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19684  00B1EE  0E00               	movlw	high _StartWifiModem
 19685  00B1F0  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19686  00B1F2  ECF5  F04F         	call	_GenerateEvt	;wreg free
 19687                           
 19688                           ;mdm_wifi_drv.c: 99: WifiModeSmState = WifiMdm_Idle;
 19689  00B1F6  0E01               	movlw	1
 19690  00B1F8  0101               	movlb	1	; () banked
 19691  00B1FA  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19692                           
 19693                           ;mdm_wifi_drv.c: 100: break;
 19694  00B1FC  0012               	return	
 19695  00B1FE                     
 19696                           ; BSR set to: 1
 19697                           ;mdm_wifi_drv.c: 104: if (ReceiveEvt(&StartWifiModem))
 19698                           
 19699                           ; BSR set to: 1
 19700  00B1FE  0E5B               	movlw	low _StartWifiModem
 19701  00B200  0100               	movlb	0	; () banked
 19702  00B202  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19703  00B204  0E00               	movlw	high _StartWifiModem
 19704  00B206  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19705  00B208  EC87  F051         	call	_ReceiveEvt	;wreg free
 19706  00B20C  0900               	iorlw	0
 19707  00B20E  B4D8               	btfsc	status,2,c
 19708  00B210  0012               	return	
 19709                           
 19710                           ;mdm_wifi_drv.c: 105: {
 19711                           ;mdm_wifi_drv.c: 107: LATEbits.LATE0 = ((UINT8)(0));
 19712  00B212  908D               	bcf	3981,0,c	;volatile
 19713                           
 19714                           ;mdm_wifi_drv.c: 109: WifiMdmStatus = ((UINT8)(1));
 19715  00B214  0E01               	movlw	1
 19716  00B216  0101               	movlb	1	; () banked
 19717  00B218  6F6E               	movwf	_WifiMdmStatus& (0+255),b
 19718                           
 19719                           ;mdm_wifi_drv.c: 111: WifiModeSmState = WifiMdm_Delay;
 19720  00B21A  0E03               	movlw	3
 19721  00B21C  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19722                           
 19723                           ; BSR set to: 1
 19724                           ;mdm_wifi_drv.c: 112: }
 19725                           ;mdm_wifi_drv.c: 113: break;
 19726  00B21E  0012               	return	
 19727  00B220                     
 19728                           ; BSR set to: 1
 19729                           ;mdm_wifi_drv.c: 117: Counter++;
 19730                           
 19731                           ; BSR set to: 1
 19732  00B220  4B46               	infsnz	MdmWifi_StartWifiModemSm@Counter& (0+255),f,b
 19733  00B222  2B47               	incf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),f,b
 19734                           
 19735                           ; BSR set to: 1
 19736                           ;mdm_wifi_drv.c: 119: if (Counter >= (((UINT16)(200))/((UINT16)(10))))
 19737  00B224  5147               	movf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),w,b
 19738  00B226  E104               	bnz	u6960
 19739  00B228  0E14               	movlw	20
 19740  00B22A  5D46               	subwf	MdmWifi_StartWifiModemSm@Counter& (0+255),w,b
 19741  00B22C  A0D8               	btfss	status,0,c
 19742  00B22E  0012               	return	
 19743  00B230                     u6960:
 19744                           
 19745                           ; BSR set to: 1
 19746                           ;mdm_wifi_drv.c: 120: {
 19747                           ;mdm_wifi_drv.c: 122: Counter = 0;
 19748  00B230  0E00               	movlw	0
 19749  00B232  6F47               	movwf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),b
 19750  00B234  0E00               	movlw	0
 19751  00B236  6F46               	movwf	MdmWifi_StartWifiModemSm@Counter& (0+255),b
 19752                           
 19753                           ;mdm_wifi_drv.c: 124: WifiModeSmState = WifiMdm_RestartMdm;
 19754  00B238  0E04               	movlw	4
 19755  00B23A  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19756                           
 19757                           ; BSR set to: 1
 19758                           ;mdm_wifi_drv.c: 125: }
 19759                           ;mdm_wifi_drv.c: 126: break;
 19760  00B23C  0012               	return	
 19761  00B23E                     l654:
 19762                           
 19763                           ; BSR set to: 1
 19764                           ;mdm_wifi_drv.c: 130: LATEbits.LATE0 = ((UINT8)(1));
 19765  00B23E  808D               	bsf	3981,0,c	;volatile
 19766                           
 19767                           ; BSR set to: 1
 19768                           ;mdm_wifi_drv.c: 132: WifiMdmStatus = ((UINT8)(2));
 19769  00B240  0E02               	movlw	2
 19770  00B242  6F6E               	movwf	_WifiMdmStatus& (0+255),b
 19771                           
 19772                           ;mdm_wifi_drv.c: 134: WifiModeSmState = WifiMdm_Idle;
 19773  00B244  0E01               	movlw	1
 19774  00B246  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19775                           
 19776                           ; BSR set to: 1
 19777                           ;mdm_wifi_drv.c: 139: }
 19778                           
 19779                           ; BSR set to: 1
 19780                           ;mdm_wifi_drv.c: 138: break;
 19781                           
 19782                           ;mdm_wifi_drv.c: 137: default:
 19783                           
 19784                           ;mdm_wifi_drv.c: 135: break;
 19785  00B248  0012               	return	
 19786  00B24A                     l647:
 19787                           
 19788                           ; BSR set to: 1
 19789  00B24A  0101               	movlb	1	; () banked
 19790  00B24C  516D               	movf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),w,b
 19791                           
 19792                           ; Switch size 1, requested type "space"
 19793                           ; Number of cases is 4, Range of values is 0 to 4
 19794                           ; switch strategies available:
 19795                           ; Name         Instructions Cycles
 19796                           ; simple_byte           13     7 (average)
 19797                           ;	Chosen strategy is simple_byte
 19798  00B24E  0A00               	xorlw	0	; case 0
 19799  00B250  B4D8               	btfsc	status,2,c
 19800  00B252  D7C8               	goto	l648
 19801  00B254  0A01               	xorlw	1	; case 1
 19802  00B256  B4D8               	btfsc	status,2,c
 19803  00B258  D7D2               	goto	l650
 19804  00B25A  0A02               	xorlw	2	; case 3
 19805  00B25C  B4D8               	btfsc	status,2,c
 19806  00B25E  D7E0               	goto	l652
 19807  00B260  0A07               	xorlw	7	; case 4
 19808  00B262  A4D8               	btfss	status,2,c
 19809  00B264  0012               	return	
 19810  00B266  D7EB               	goto	l654
 19811  00B268                     __end_of_MdmWifi_StartWifiModemSm:
 19812                           	opt stack 0
 19813                           tosu	equ	0xFFF
 19814                           tosh	equ	0xFFE
 19815                           tosl	equ	0xFFD
 19816                           pclath	equ	0xFFA
 19817                           tblptru	equ	0xFF8
 19818                           tblptrh	equ	0xFF7
 19819                           tblptrl	equ	0xFF6
 19820                           tablat	equ	0xFF5
 19821                           prodh	equ	0xFF4
 19822                           prodl	equ	0xFF3
 19823                           intcon	equ	0xFF2
 19824                           intcon2	equ	0xFF1
 19825                           intcon3	equ	0xFF0
 19826                           indf0	equ	0xFEF
 19827                           postinc0	equ	0xFEE
 19828                           plusw0	equ	0xFEB
 19829                           fsr0h	equ	0xFEA
 19830                           fsr0l	equ	0xFE9
 19831                           wreg	equ	0xFE8
 19832                           indf1	equ	0xFE7
 19833                           postinc1	equ	0xFE6
 19834                           postdec1	equ	0xFE5
 19835                           fsr1h	equ	0xFE2
 19836                           fsr1l	equ	0xFE1
 19837                           indf2	equ	0xFDF
 19838                           postinc2	equ	0xFDE
 19839                           postdec2	equ	0xFDD
 19840                           plusw2	equ	0xFDB
 19841                           fsr2h	equ	0xFDA
 19842                           fsr2l	equ	0xFD9
 19843                           status	equ	0xFD8
 19844                           
 19845 ;; *************** function _StartConnectionSm *****************
 19846 ;; Defined at:
 19847 ;;		line 104 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 19848 ;; Parameters:    Size  Location     Type
 19849 ;;		None
 19850 ;; Auto vars:     Size  Location     Type
 19851 ;;  Data          100   19[BANK0 ] unsigned char [100]
 19852 ;;  PortAscii       4  119[BANK0 ] unsigned char [4]
 19853 ;;  IdAscii         1  124[BANK0 ] unsigned char [1]
 19854 ;;  DataIndex       1  123[BANK0 ] unsigned char 
 19855 ;; Return value:  Size  Location     Type
 19856 ;;                  1    wreg      void 
 19857 ;; Registers used:
 19858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19859 ;; Tracked objects:
 19860 ;;		On entry : 0/0
 19861 ;;		On exit  : 0/0
 19862 ;;		Unchanged: 0/0
 19863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19865 ;;      Locals:         0     106       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19867 ;;      Totals:         0     106       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19868 ;;Total ram usage:      106 bytes
 19869 ;; Hardware stack levels used:    1
 19870 ;; Hardware stack levels required when called:   14
 19871 ;; This function calls:
 19872 ;;		_ClearBuffer
 19873 ;;		_MdmWifi_ReceiveWifiMsg
 19874 ;;		_MdmWifi_SendWifiMsg
 19875 ;;		_ReceiveEvt
 19876 ;;		_strcat
 19877 ;;		_strcpy
 19878 ;;		_strstr
 19879 ;;		_utoa
 19880 ;; This function is called by:
 19881 ;;		_MdmWifiCmd_MainTask
 19882 ;; This function uses a non-reentrant model
 19883 ;;
 19884                           
 19885                           	psect	text90
 19886  00DF0C                     __ptext90:
 19887                           	opt stack 0
 19888  00DF0C                     _StartConnectionSm:
 19889                           	opt stack 13
 19890                           
 19891                           ;mdm_wifi_cmd.c: 106: static StartConnStateType StartConnState = StCon_WaitEvt;
 19892                           ;mdm_wifi_cmd.c: 107: UINT8 Data[((UINT8)(100))];
 19893                           ;mdm_wifi_cmd.c: 108: UINT8 DataIndex;
 19894                           ;mdm_wifi_cmd.c: 109: UINT8 PortAscii[4];
 19895                           ;mdm_wifi_cmd.c: 110: UINT8 IdAscii[1];
 19896                           ;mdm_wifi_cmd.c: 112: switch (StartConnState)
 19897                           
 19898                           ;incstack = 0
 19899  00DF0C  D15E               	goto	l974
 19900  00DF0E                     
 19901                           ;mdm_wifi_cmd.c: 116: if (ReceiveEvt(&StartConnection))
 19902  00DF0E  0E57               	movlw	low _StartConnection
 19903  00DF10  0100               	movlb	0	; () banked
 19904  00DF12  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19905  00DF14  0E00               	movlw	high _StartConnection
 19906  00DF16  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19907  00DF18  EC87  F051         	call	_ReceiveEvt	;wreg free
 19908  00DF1C  0900               	iorlw	0
 19909  00DF1E  B4D8               	btfsc	status,2,c
 19910  00DF20  0012               	return	
 19911                           
 19912                           ;mdm_wifi_cmd.c: 117: {
 19913                           ;mdm_wifi_cmd.c: 118: StartConnState = StCon_SendStartCmd;
 19914  00DF22  0E01               	movlw	1
 19915  00DF24  0101               	movlb	1	; () banked
 19916  00DF26  6F67               	movwf	StartConnectionSm@StartConnState& (0+255),b
 19917                           
 19918                           ; BSR set to: 1
 19919                           ;mdm_wifi_cmd.c: 119: }
 19920                           ;mdm_wifi_cmd.c: 120: break;
 19921  00DF28  0012               	return	
 19922  00DF2A                     
 19923                           ; BSR set to: 1
 19924                           ;mdm_wifi_cmd.c: 124: strcpy(Data,"AT+CIPSTART=");
 19925                           
 19926                           ; BSR set to: 1
 19927  00DF2A  0E73               	movlw	low StartConnectionSm@Data
 19928  00DF2C  0100               	movlb	0	; () banked
 19929  00DF2E  6F60               	movwf	strcpy@to& (0+255),b
 19930  00DF30  0E00               	movlw	high StartConnectionSm@Data
 19931  00DF32  6F61               	movwf	(strcpy@to+1)& (0+255),b
 19932  00DF34  0E54               	movlw	low STR_3
 19933  00DF36  6F62               	movwf	strcpy@from& (0+255),b
 19934  00DF38  0EEF               	movlw	high STR_3
 19935  00DF3A  6F63               	movwf	(strcpy@from+1)& (0+255),b
 19936  00DF3C  EC00  F054         	call	_strcpy	;wreg free
 19937                           
 19938                           ;mdm_wifi_cmd.c: 126: if (ModeLocal == ((UINT8)(1)))
 19939  00DF40  0451               	decf	_ModeLocal,w,c
 19940  00DF42  A4D8               	btfss	status,2,c
 19941  00DF44  D02E               	goto	l979
 19942                           
 19943                           ;mdm_wifi_cmd.c: 127: {
 19944                           ;mdm_wifi_cmd.c: 128: utoa(IdAscii,IdLocal,10);
 19945  00DF46  0EDC               	movlw	low StartConnectionSm@IdAscii
 19946  00DF48  0100               	movlb	0	; () banked
 19947  00DF4A  6F67               	movwf	utoa@buf& (0+255),b
 19948  00DF4C  0E00               	movlw	high StartConnectionSm@IdAscii
 19949  00DF4E  6F68               	movwf	(utoa@buf+1)& (0+255),b
 19950  00DF50  C050  F069         	movff	_IdLocal,utoa@val
 19951  00DF54  6B6A               	clrf	(utoa@val+1)& (0+255),b
 19952  00DF56  0E00               	movlw	0
 19953  00DF58  6F6C               	movwf	(utoa@base+1)& (0+255),b
 19954  00DF5A  0E0A               	movlw	10
 19955  00DF5C  6F6B               	movwf	utoa@base& (0+255),b
 19956  00DF5E  ECF3  F05C         	call	_utoa	;wreg free
 19957                           
 19958                           ;mdm_wifi_cmd.c: 129: strcat(Data,IdAscii);
 19959  00DF62  0E73               	movlw	low StartConnectionSm@Data
 19960  00DF64  0100               	movlb	0	; () banked
 19961  00DF66  6F60               	movwf	strcat@to& (0+255),b
 19962  00DF68  0E00               	movlw	high StartConnectionSm@Data
 19963  00DF6A  6F61               	movwf	(strcat@to+1)& (0+255),b
 19964  00DF6C  0EDC               	movlw	low StartConnectionSm@IdAscii
 19965  00DF6E  6F62               	movwf	strcat@from& (0+255),b
 19966  00DF70  0E00               	movlw	high StartConnectionSm@IdAscii
 19967  00DF72  6F63               	movwf	(strcat@from+1)& (0+255),b
 19968  00DF74  5162               	movf	strcat@from& (0+255),w,b
 19969  00DF76  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 19970  00DF78  A4D8               	btfss	status,2,c
 19971  00DF7A  0E20               	movlw	32
 19972  00DF7C  6F64               	movwf	(strcat@from+2)& (0+255),b
 19973  00DF7E  ECC1  F056         	call	_strcat	;wreg free
 19974                           
 19975                           ;mdm_wifi_cmd.c: 130: strcat(Data,",");
 19976  00DF82  0E73               	movlw	low StartConnectionSm@Data
 19977  00DF84  0100               	movlb	0	; () banked
 19978  00DF86  6F60               	movwf	strcat@to& (0+255),b
 19979  00DF88  0E00               	movlw	high StartConnectionSm@Data
 19980  00DF8A  6F61               	movwf	(strcat@to+1)& (0+255),b
 19981  00DF8C  0EED               	movlw	low (STR_46+1)
 19982  00DF8E  6F62               	movwf	strcat@from& (0+255),b
 19983  00DF90  0EEF               	movlw	high (STR_46+1)
 19984  00DF92  6F63               	movwf	(strcat@from+1)& (0+255),b
 19985  00DF94  5162               	movf	strcat@from& (0+255),w,b
 19986  00DF96  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 19987  00DF98  A4D8               	btfss	status,2,c
 19988  00DF9A  0E00               	movlw	low (__mediumconst shr (0+16))
 19989  00DF9C  6F64               	movwf	(strcat@from+2)& (0+255),b
 19990  00DF9E  ECC1  F056         	call	_strcat	;wreg free
 19991  00DFA2                     l979:
 19992                           
 19993                           ;mdm_wifi_cmd.c: 131: }
 19994                           ;mdm_wifi_cmd.c: 132: strcat(Data,"\"");
 19995  00DFA2  0E73               	movlw	low StartConnectionSm@Data
 19996  00DFA4  0100               	movlb	0	; () banked
 19997  00DFA6  6F60               	movwf	strcat@to& (0+255),b
 19998  00DFA8  0E00               	movlw	high StartConnectionSm@Data
 19999  00DFAA  6F61               	movwf	(strcat@to+1)& (0+255),b
 20000  00DFAC  0EE2               	movlw	low (STR_28+2)
 20001  00DFAE  6F62               	movwf	strcat@from& (0+255),b
 20002  00DFB0  0EEF               	movlw	high (STR_28+2)
 20003  00DFB2  6F63               	movwf	(strcat@from+1)& (0+255),b
 20004  00DFB4  5162               	movf	strcat@from& (0+255),w,b
 20005  00DFB6  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20006  00DFB8  A4D8               	btfss	status,2,c
 20007  00DFBA  0E00               	movlw	low (__mediumconst shr (0+16))
 20008  00DFBC  6F64               	movwf	(strcat@from+2)& (0+255),b
 20009  00DFBE  ECC1  F056         	call	_strcat	;wreg free
 20010                           
 20011                           ;mdm_wifi_cmd.c: 134: if (ProtocolLocal == ((UINT8)(0)))
 20012  00DFC2  0101               	movlb	1	; () banked
 20013  00DFC4  516A               	movf	_ProtocolLocal& (0+255),w,b
 20014  00DFC6  A4D8               	btfss	status,2,c
 20015  00DFC8  D011               	goto	l980
 20016                           
 20017                           ; BSR set to: 1
 20018                           ;mdm_wifi_cmd.c: 135: {
 20019                           ;mdm_wifi_cmd.c: 136: strcat(Data,"UDP");
 20020  00DFCA  0E73               	movlw	low StartConnectionSm@Data
 20021  00DFCC  0100               	movlb	0	; () banked
 20022  00DFCE  6F60               	movwf	strcat@to& (0+255),b
 20023  00DFD0  0E00               	movlw	high StartConnectionSm@Data
 20024  00DFD2  6F61               	movwf	(strcat@to+1)& (0+255),b
 20025  00DFD4  0EE8               	movlw	low STR_6
 20026  00DFD6  6F62               	movwf	strcat@from& (0+255),b
 20027  00DFD8  0EEF               	movlw	high STR_6
 20028  00DFDA  6F63               	movwf	(strcat@from+1)& (0+255),b
 20029  00DFDC  5162               	movf	strcat@from& (0+255),w,b
 20030  00DFDE  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20031  00DFE0  A4D8               	btfss	status,2,c
 20032  00DFE2  0E00               	movlw	low (__mediumconst shr (0+16))
 20033  00DFE4  6F64               	movwf	(strcat@from+2)& (0+255),b
 20034  00DFE6  ECC1  F056         	call	_strcat	;wreg free
 20035                           
 20036                           ;mdm_wifi_cmd.c: 137: }
 20037  00DFEA  D010               	goto	l981
 20038  00DFEC                     l980:
 20039                           
 20040                           ;mdm_wifi_cmd.c: 138: else
 20041                           ;mdm_wifi_cmd.c: 139: {
 20042                           ;mdm_wifi_cmd.c: 140: strcat(Data,"TCP");
 20043  00DFEC  0E73               	movlw	low StartConnectionSm@Data
 20044  00DFEE  0100               	movlb	0	; () banked
 20045  00DFF0  6F60               	movwf	strcat@to& (0+255),b
 20046  00DFF2  0E00               	movlw	high StartConnectionSm@Data
 20047  00DFF4  6F61               	movwf	(strcat@to+1)& (0+255),b
 20048  00DFF6  0EE4               	movlw	low STR_7
 20049  00DFF8  6F62               	movwf	strcat@from& (0+255),b
 20050  00DFFA  0EEF               	movlw	high STR_7
 20051  00DFFC  6F63               	movwf	(strcat@from+1)& (0+255),b
 20052  00DFFE  5162               	movf	strcat@from& (0+255),w,b
 20053  00E000  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20054  00E002  A4D8               	btfss	status,2,c
 20055  00E004  0E00               	movlw	low (__mediumconst shr (0+16))
 20056  00E006  6F64               	movwf	(strcat@from+2)& (0+255),b
 20057  00E008  ECC1  F056         	call	_strcat	;wreg free
 20058  00E00C                     l981:
 20059                           
 20060                           ;mdm_wifi_cmd.c: 141: }
 20061                           ;mdm_wifi_cmd.c: 142: strcat(Data,"\"");
 20062  00E00C  0E73               	movlw	low StartConnectionSm@Data
 20063  00E00E  0100               	movlb	0	; () banked
 20064  00E010  6F60               	movwf	strcat@to& (0+255),b
 20065  00E012  0E00               	movlw	high StartConnectionSm@Data
 20066  00E014  6F61               	movwf	(strcat@to+1)& (0+255),b
 20067  00E016  0EE2               	movlw	low (STR_28+2)
 20068  00E018  6F62               	movwf	strcat@from& (0+255),b
 20069  00E01A  0EEF               	movlw	high (STR_28+2)
 20070  00E01C  6F63               	movwf	(strcat@from+1)& (0+255),b
 20071  00E01E  5162               	movf	strcat@from& (0+255),w,b
 20072  00E020  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20073  00E022  A4D8               	btfss	status,2,c
 20074  00E024  0E00               	movlw	low (__mediumconst shr (0+16))
 20075  00E026  6F64               	movwf	(strcat@from+2)& (0+255),b
 20076  00E028  ECC1  F056         	call	_strcat	;wreg free
 20077                           
 20078                           ;mdm_wifi_cmd.c: 143: strcat(Data,",");
 20079  00E02C  0E73               	movlw	low StartConnectionSm@Data
 20080  00E02E  0100               	movlb	0	; () banked
 20081  00E030  6F60               	movwf	strcat@to& (0+255),b
 20082  00E032  0E00               	movlw	high StartConnectionSm@Data
 20083  00E034  6F61               	movwf	(strcat@to+1)& (0+255),b
 20084  00E036  0EED               	movlw	low (STR_46+1)
 20085  00E038  6F62               	movwf	strcat@from& (0+255),b
 20086  00E03A  0EEF               	movlw	high (STR_46+1)
 20087  00E03C  6F63               	movwf	(strcat@from+1)& (0+255),b
 20088  00E03E  5162               	movf	strcat@from& (0+255),w,b
 20089  00E040  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20090  00E042  A4D8               	btfss	status,2,c
 20091  00E044  0E00               	movlw	low (__mediumconst shr (0+16))
 20092  00E046  6F64               	movwf	(strcat@from+2)& (0+255),b
 20093  00E048  ECC1  F056         	call	_strcat	;wreg free
 20094                           
 20095                           ;mdm_wifi_cmd.c: 144: strcat(Data,"\"");
 20096  00E04C  0E73               	movlw	low StartConnectionSm@Data
 20097  00E04E  0100               	movlb	0	; () banked
 20098  00E050  6F60               	movwf	strcat@to& (0+255),b
 20099  00E052  0E00               	movlw	high StartConnectionSm@Data
 20100  00E054  6F61               	movwf	(strcat@to+1)& (0+255),b
 20101  00E056  0EE2               	movlw	low (STR_28+2)
 20102  00E058  6F62               	movwf	strcat@from& (0+255),b
 20103  00E05A  0EEF               	movlw	high (STR_28+2)
 20104  00E05C  6F63               	movwf	(strcat@from+1)& (0+255),b
 20105  00E05E  5162               	movf	strcat@from& (0+255),w,b
 20106  00E060  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20107  00E062  A4D8               	btfss	status,2,c
 20108  00E064  0E00               	movlw	low (__mediumconst shr (0+16))
 20109  00E066  6F64               	movwf	(strcat@from+2)& (0+255),b
 20110  00E068  ECC1  F056         	call	_strcat	;wreg free
 20111                           
 20112                           ;mdm_wifi_cmd.c: 145: strcat(Data,AddressLocal);
 20113  00E06C  0E73               	movlw	low StartConnectionSm@Data
 20114  00E06E  0100               	movlb	0	; () banked
 20115  00E070  6F60               	movwf	strcat@to& (0+255),b
 20116  00E072  0E00               	movlw	high StartConnectionSm@Data
 20117  00E074  6F61               	movwf	(strcat@to+1)& (0+255),b
 20118  00E076  0E72               	movlw	low _AddressLocal
 20119  00E078  6F62               	movwf	strcat@from& (0+255),b
 20120  00E07A  0E02               	movlw	high _AddressLocal
 20121  00E07C  6F63               	movwf	(strcat@from+1)& (0+255),b
 20122  00E07E  5162               	movf	strcat@from& (0+255),w,b
 20123  00E080  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20124  00E082  A4D8               	btfss	status,2,c
 20125  00E084  0E20               	movlw	32
 20126  00E086  6F64               	movwf	(strcat@from+2)& (0+255),b
 20127  00E088  ECC1  F056         	call	_strcat	;wreg free
 20128                           
 20129                           ;mdm_wifi_cmd.c: 146: strcat(Data,"\"");
 20130  00E08C  0E73               	movlw	low StartConnectionSm@Data
 20131  00E08E  0100               	movlb	0	; () banked
 20132  00E090  6F60               	movwf	strcat@to& (0+255),b
 20133  00E092  0E00               	movlw	high StartConnectionSm@Data
 20134  00E094  6F61               	movwf	(strcat@to+1)& (0+255),b
 20135  00E096  0EE2               	movlw	low (STR_28+2)
 20136  00E098  6F62               	movwf	strcat@from& (0+255),b
 20137  00E09A  0EEF               	movlw	high (STR_28+2)
 20138  00E09C  6F63               	movwf	(strcat@from+1)& (0+255),b
 20139  00E09E  5162               	movf	strcat@from& (0+255),w,b
 20140  00E0A0  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20141  00E0A2  A4D8               	btfss	status,2,c
 20142  00E0A4  0E00               	movlw	low (__mediumconst shr (0+16))
 20143  00E0A6  6F64               	movwf	(strcat@from+2)& (0+255),b
 20144  00E0A8  ECC1  F056         	call	_strcat	;wreg free
 20145                           
 20146                           ;mdm_wifi_cmd.c: 148: utoa(PortAscii,PortLocal,10);
 20147  00E0AC  0ED7               	movlw	low StartConnectionSm@PortAscii
 20148  00E0AE  0100               	movlb	0	; () banked
 20149  00E0B0  6F67               	movwf	utoa@buf& (0+255),b
 20150  00E0B2  0E00               	movlw	high StartConnectionSm@PortAscii
 20151  00E0B4  6F68               	movwf	(utoa@buf+1)& (0+255),b
 20152  00E0B6  C169  F069         	movff	_PortLocal,utoa@val
 20153  00E0BA  6B6A               	clrf	(utoa@val+1)& (0+255),b
 20154  00E0BC  0E00               	movlw	0
 20155  00E0BE  6F6C               	movwf	(utoa@base+1)& (0+255),b
 20156  00E0C0  0E0A               	movlw	10
 20157  00E0C2  6F6B               	movwf	utoa@base& (0+255),b
 20158  00E0C4  ECF3  F05C         	call	_utoa	;wreg free
 20159                           
 20160                           ;mdm_wifi_cmd.c: 149: strcat(Data,",");
 20161  00E0C8  0E73               	movlw	low StartConnectionSm@Data
 20162  00E0CA  0100               	movlb	0	; () banked
 20163  00E0CC  6F60               	movwf	strcat@to& (0+255),b
 20164  00E0CE  0E00               	movlw	high StartConnectionSm@Data
 20165  00E0D0  6F61               	movwf	(strcat@to+1)& (0+255),b
 20166  00E0D2  0EED               	movlw	low (STR_46+1)
 20167  00E0D4  6F62               	movwf	strcat@from& (0+255),b
 20168  00E0D6  0EEF               	movlw	high (STR_46+1)
 20169  00E0D8  6F63               	movwf	(strcat@from+1)& (0+255),b
 20170  00E0DA  5162               	movf	strcat@from& (0+255),w,b
 20171  00E0DC  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20172  00E0DE  A4D8               	btfss	status,2,c
 20173  00E0E0  0E00               	movlw	low (__mediumconst shr (0+16))
 20174  00E0E2  6F64               	movwf	(strcat@from+2)& (0+255),b
 20175  00E0E4  ECC1  F056         	call	_strcat	;wreg free
 20176                           
 20177                           ;mdm_wifi_cmd.c: 150: strcat(Data,PortAscii);
 20178  00E0E8  0E73               	movlw	low StartConnectionSm@Data
 20179  00E0EA  0100               	movlb	0	; () banked
 20180  00E0EC  6F60               	movwf	strcat@to& (0+255),b
 20181  00E0EE  0E00               	movlw	high StartConnectionSm@Data
 20182  00E0F0  6F61               	movwf	(strcat@to+1)& (0+255),b
 20183  00E0F2  0ED7               	movlw	low StartConnectionSm@PortAscii
 20184  00E0F4  6F62               	movwf	strcat@from& (0+255),b
 20185  00E0F6  0E00               	movlw	high StartConnectionSm@PortAscii
 20186  00E0F8  6F63               	movwf	(strcat@from+1)& (0+255),b
 20187  00E0FA  5162               	movf	strcat@from& (0+255),w,b
 20188  00E0FC  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20189  00E0FE  A4D8               	btfss	status,2,c
 20190  00E100  0E20               	movlw	32
 20191  00E102  6F64               	movwf	(strcat@from+2)& (0+255),b
 20192  00E104  ECC1  F056         	call	_strcat	;wreg free
 20193                           
 20194                           ;mdm_wifi_cmd.c: 152: strcat(Data,"\r\n");
 20195  00E108  0E73               	movlw	low StartConnectionSm@Data
 20196  00E10A  0100               	movlb	0	; () banked
 20197  00E10C  6F60               	movwf	strcat@to& (0+255),b
 20198  00E10E  0E00               	movlw	high StartConnectionSm@Data
 20199  00E110  6F61               	movwf	(strcat@to+1)& (0+255),b
 20200  00E112  0E8D               	movlw	low (STR_31+8)
 20201  00E114  6F62               	movwf	strcat@from& (0+255),b
 20202  00E116  0EEF               	movlw	high (STR_31+8)
 20203  00E118  6F63               	movwf	(strcat@from+1)& (0+255),b
 20204  00E11A  5162               	movf	strcat@from& (0+255),w,b
 20205  00E11C  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20206  00E11E  A4D8               	btfss	status,2,c
 20207  00E120  0E00               	movlw	low (__mediumconst shr (0+16))
 20208  00E122  6F64               	movwf	(strcat@from+2)& (0+255),b
 20209  00E124  ECC1  F056         	call	_strcat	;wreg free
 20210                           
 20211                           ;mdm_wifi_cmd.c: 153: strcat(Data,(0));
 20212  00E128  0E73               	movlw	low StartConnectionSm@Data
 20213  00E12A  0100               	movlb	0	; () banked
 20214  00E12C  6F60               	movwf	strcat@to& (0+255),b
 20215  00E12E  0E00               	movlw	high StartConnectionSm@Data
 20216  00E130  6F61               	movwf	(strcat@to+1)& (0+255),b
 20217  00E132  0E00               	movlw	0
 20218  00E134  6F62               	movwf	strcat@from& (0+255),b
 20219  00E136  0E00               	movlw	0
 20220  00E138  6F63               	movwf	(strcat@from+1)& (0+255),b
 20221  00E13A  0E00               	movlw	0
 20222  00E13C  6F64               	movwf	(strcat@from+2)& (0+255),b
 20223  00E13E  ECC1  F056         	call	_strcat	;wreg free
 20224                           
 20225                           ;mdm_wifi_cmd.c: 155: MdmWifi_SendWifiMsg(Data);
 20226  00E142  0E73               	movlw	low StartConnectionSm@Data
 20227  00E144  0100               	movlb	0	; () banked
 20228  00E146  6F66               	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20229  00E148  0E00               	movlw	high StartConnectionSm@Data
 20230  00E14A  6F67               	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20231  00E14C  EC96  F04F         	call	_MdmWifi_SendWifiMsg	;wreg free
 20232                           
 20233                           ;mdm_wifi_cmd.c: 158: ClearBuffer(AddressLocal,sizeof(AddressLocal));
 20234  00E150  0E72               	movlw	low _AddressLocal
 20235  00E152  0100               	movlb	0	; () banked
 20236  00E154  6F60               	movwf	ClearBuffer@Buffer& (0+255),b
 20237  00E156  0E02               	movlw	high _AddressLocal
 20238  00E158  6F61               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 20239  00E15A  0E00               	movlw	0
 20240  00E15C  6F63               	movwf	(ClearBuffer@Len+1)& (0+255),b
 20241  00E15E  0E19               	movlw	25
 20242  00E160  6F62               	movwf	ClearBuffer@Len& (0+255),b
 20243  00E162  EC49  F052         	call	_ClearBuffer	;wreg free
 20244                           
 20245                           ;mdm_wifi_cmd.c: 161: StartConnState = StCon_CheckCmdRes;
 20246  00E166  0E02               	movlw	2
 20247  00E168  0101               	movlb	1	; () banked
 20248  00E16A  6F67               	movwf	StartConnectionSm@StartConnState& (0+255),b
 20249                           
 20250                           ;mdm_wifi_cmd.c: 162: break;
 20251  00E16C  0012               	return	
 20252  00E16E                     
 20253                           ; BSR set to: 1
 20254                           ;mdm_wifi_cmd.c: 166: if (MdmWifi_ReceiveWifiMsg(Data,&DataIndex) == WifiMsg_Received)
 20255                           
 20256                           ; BSR set to: 1
 20257  00E16E  0E73               	movlw	low StartConnectionSm@Data
 20258  00E170  0100               	movlb	0	; () banked
 20259  00E172  6F68               	movwf	MdmWifi_ReceiveWifiMsg@RxBuffer& (0+255),b
 20260  00E174  0E00               	movlw	high StartConnectionSm@Data
 20261  00E176  6F69               	movwf	(MdmWifi_ReceiveWifiMsg@RxBuffer+1)& (0+255),b
 20262  00E178  0EDB               	movlw	low StartConnectionSm@DataIndex
 20263  00E17A  6F6A               	movwf	MdmWifi_ReceiveWifiMsg@DataLenght& (0+255),b
 20264  00E17C  0E00               	movlw	high StartConnectionSm@DataIndex
 20265  00E17E  6F6B               	movwf	(MdmWifi_ReceiveWifiMsg@DataLenght+1)& (0+255),b
 20266  00E180  EC6B  F054         	call	_MdmWifi_ReceiveWifiMsg	;wreg free
 20267  00E184  06E8               	decf	wreg,f,c
 20268  00E186  A4D8               	btfss	status,2,c
 20269  00E188  0012               	return	
 20270                           
 20271                           ;mdm_wifi_cmd.c: 167: {
 20272                           ;mdm_wifi_cmd.c: 169: if ((Data[0] != 'A') && (Data[1] != 'T'))
 20273  00E18A  0E41               	movlw	65
 20274  00E18C  0100               	movlb	0	; () banked
 20275  00E18E  1973               	xorwf	StartConnectionSm@Data& (0+255),w,b
 20276  00E190  B4D8               	btfsc	status,2,c
 20277  00E192  0012               	return	
 20278                           
 20279                           ; BSR set to: 0
 20280  00E194  0E54               	movlw	84
 20281  00E196  1974               	xorwf	(StartConnectionSm@Data+1)& (0+255),w,b
 20282  00E198  B4D8               	btfsc	status,2,c
 20283  00E19A  0012               	return	
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;mdm_wifi_cmd.c: 170: {
 20287                           ;mdm_wifi_cmd.c: 172: if (strstr(Data,(void*)"CONNECT") != (0))
 20288  00E19C  0E73               	movlw	low StartConnectionSm@Data
 20289  00E19E  6F6F               	movwf	strstr@s1& (0+255),b
 20290  00E1A0  0E00               	movlw	high StartConnectionSm@Data
 20291  00E1A2  6F70               	movwf	(strstr@s1+1)& (0+255),b
 20292  00E1A4  0ECD               	movlw	low STR_14
 20293  00E1A6  6F71               	movwf	strstr@s2& (0+255),b
 20294  00E1A8  0EEF               	movlw	high STR_14
 20295  00E1AA  6F72               	movwf	(strstr@s2+1)& (0+255),b
 20296  00E1AC  EC77  F059         	call	_strstr	;wreg free
 20297  00E1B0  0100               	movlb	0	; () banked
 20298  00E1B2  516F               	movf	?_strstr& (0+255),w,b
 20299  00E1B4  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 20300  00E1B6  B4D8               	btfsc	status,2,c
 20301  00E1B8  D002               	goto	l985
 20302                           
 20303                           ; BSR set to: 0
 20304                           ;mdm_wifi_cmd.c: 173: {
 20305                           ;mdm_wifi_cmd.c: 174: ConnStatus = ((UINT8)(1));
 20306  00E1BA  0E01               	movlw	1
 20307  00E1BC  D001               	goto	L24
 20308  00E1BE                     l985:
 20309                           
 20310                           ;mdm_wifi_cmd.c: 176: else
 20311                           ;mdm_wifi_cmd.c: 177: {
 20312                           ;mdm_wifi_cmd.c: 178: ConnStatus = ((UINT8)(0));
 20313                           
 20314                           ; BSR set to: 1
 20315  00E1BE  0E00               	movlw	0
 20316  00E1C0                     L24:
 20317  00E1C0  0101               	movlb	1	; () banked
 20318  00E1C2  6F68               	movwf	_ConnStatus& (0+255),b
 20319                           
 20320                           ; BSR set to: 1
 20321                           ;mdm_wifi_cmd.c: 179: }
 20322                           ;mdm_wifi_cmd.c: 182: StartConnState = StCon_WaitEvt;
 20323  00E1C4  0E00               	movlw	0
 20324  00E1C6  6F67               	movwf	StartConnectionSm@StartConnState& (0+255),b
 20325                           
 20326                           ; BSR set to: 1
 20327                           ;mdm_wifi_cmd.c: 189: }
 20328                           
 20329                           ; BSR set to: 1
 20330                           ;mdm_wifi_cmd.c: 188: break;
 20331                           
 20332                           ;mdm_wifi_cmd.c: 187: default:
 20333                           
 20334                           ; BSR set to: 1
 20335                           ;mdm_wifi_cmd.c: 183: }
 20336                           ;mdm_wifi_cmd.c: 184: }
 20337                           ;mdm_wifi_cmd.c: 185: break;
 20338                           
 20339                           ; BSR set to: 1
 20340  00E1C8  0012               	return	
 20341  00E1CA                     l974:
 20342                           
 20343                           ; BSR set to: 1
 20344  00E1CA  0101               	movlb	1	; () banked
 20345  00E1CC  5167               	movf	StartConnectionSm@StartConnState& (0+255),w,b
 20346                           
 20347                           ; Switch size 1, requested type "space"
 20348                           ; Number of cases is 3, Range of values is 0 to 2
 20349                           ; switch strategies available:
 20350                           ; Name         Instructions Cycles
 20351                           ; simple_byte           10     6 (average)
 20352                           ;	Chosen strategy is simple_byte
 20353  00E1CE  0A00               	xorlw	0	; case 0
 20354  00E1D0  B4D8               	btfsc	status,2,c
 20355  00E1D2  D69D               	goto	l975
 20356  00E1D4  0A01               	xorlw	1	; case 1
 20357  00E1D6  B4D8               	btfsc	status,2,c
 20358  00E1D8  D6A8               	goto	l978
 20359  00E1DA  0A03               	xorlw	3	; case 2
 20360  00E1DC  A4D8               	btfss	status,2,c
 20361  00E1DE  0012               	return	
 20362  00E1E0  D7C6               	goto	l982
 20363  00E1E2                     __end_of_StartConnectionSm:
 20364                           	opt stack 0
 20365                           tosu	equ	0xFFF
 20366                           tosh	equ	0xFFE
 20367                           tosl	equ	0xFFD
 20368                           pclath	equ	0xFFA
 20369                           tblptru	equ	0xFF8
 20370                           tblptrh	equ	0xFF7
 20371                           tblptrl	equ	0xFF6
 20372                           tablat	equ	0xFF5
 20373                           prodh	equ	0xFF4
 20374                           prodl	equ	0xFF3
 20375                           intcon	equ	0xFF2
 20376                           intcon2	equ	0xFF1
 20377                           intcon3	equ	0xFF0
 20378                           indf0	equ	0xFEF
 20379                           postinc0	equ	0xFEE
 20380                           plusw0	equ	0xFEB
 20381                           fsr0h	equ	0xFEA
 20382                           fsr0l	equ	0xFE9
 20383                           wreg	equ	0xFE8
 20384                           indf1	equ	0xFE7
 20385                           postinc1	equ	0xFE6
 20386                           postdec1	equ	0xFE5
 20387                           fsr1h	equ	0xFE2
 20388                           fsr1l	equ	0xFE1
 20389                           indf2	equ	0xFDF
 20390                           postinc2	equ	0xFDE
 20391                           postdec2	equ	0xFDD
 20392                           plusw2	equ	0xFDB
 20393                           fsr2h	equ	0xFDA
 20394                           fsr2l	equ	0xFD9
 20395                           status	equ	0xFD8
 20396                           
 20397 ;; *************** function _ClearBuffer *****************
 20398 ;; Defined at:
 20399 ;;		line 124 in file "../Source/c/03_Sml/02_Ssl/sf.c"
 20400 ;; Parameters:    Size  Location     Type
 20401 ;;  Buffer          2    0[BANK0 ] PTR unsigned char 
 20402 ;;		 -> WifiTerminal@UartBuffer(200), AddressLocal(25), MdmWifi_UartRxBuffer(250), 
 20403 ;;  Len             2    2[BANK0 ] unsigned short 
 20404 ;; Auto vars:     Size  Location     Type
 20405 ;;  Index           2    4[BANK0 ] unsigned short 
 20406 ;; Return value:  Size  Location     Type
 20407 ;;                  1    wreg      void 
 20408 ;; Registers used:
 20409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20410 ;; Tracked objects:
 20411 ;;		On entry : 0/0
 20412 ;;		On exit  : 0/0
 20413 ;;		Unchanged: 0/0
 20414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20415 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20416 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20418 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20419 ;;Total ram usage:        6 bytes
 20420 ;; Hardware stack levels used:    1
 20421 ;; Hardware stack levels required when called:   11
 20422 ;; This function calls:
 20423 ;;		Nothing
 20424 ;; This function is called by:
 20425 ;;		_MdmWifiGetUartData
 20426 ;;		_StartConnectionSm
 20427 ;;		_WifiTerminal
 20428 ;; This function uses a non-reentrant model
 20429 ;;
 20430                           
 20431                           	psect	text91
 20432  00A492                     __ptext91:
 20433                           	opt stack 0
 20434  00A492                     _ClearBuffer:
 20435                           	opt stack 15
 20436                           
 20437                           ;sf.c: 126: UINT16 Index = 0;
 20438                           
 20439                           ;incstack = 0
 20440  00A492  0E00               	movlw	0
 20441  00A494  0100               	movlb	0	; () banked
 20442  00A496  6F65               	movwf	(ClearBuffer@Index+1)& (0+255),b
 20443  00A498  0E00               	movlw	0
 20444  00A49A  6F64               	movwf	ClearBuffer@Index& (0+255),b
 20445                           
 20446                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 20447  00A49C  0E00               	movlw	0
 20448  00A49E  6F65               	movwf	(ClearBuffer@Index+1)& (0+255),b
 20449  00A4A0  0E00               	movlw	0
 20450  00A4A2  6F64               	movwf	ClearBuffer@Index& (0+255),b
 20451  00A4A4  D00A               	goto	l1921
 20452  00A4A6                     
 20453                           ; BSR set to: 0
 20454                           ;sf.c: 130: {
 20455                           ;sf.c: 131: *(Buffer + Index) = 0;
 20456                           
 20457                           ; BSR set to: 0
 20458  00A4A6  5164               	movf	ClearBuffer@Index& (0+255),w,b
 20459  00A4A8  2560               	addwf	ClearBuffer@Buffer& (0+255),w,b
 20460  00A4AA  6ED9               	movwf	fsr2l,c
 20461  00A4AC  5165               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 20462  00A4AE  2161               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 20463  00A4B0  6EDA               	movwf	fsr2h,c
 20464  00A4B2  0E00               	movlw	0
 20465  00A4B4  6EDF               	movwf	indf2,c
 20466                           
 20467                           ; BSR set to: 0
 20468  00A4B6  4B64               	infsnz	ClearBuffer@Index& (0+255),f,b
 20469  00A4B8  2B65               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 20470  00A4BA                     l1921:
 20471                           
 20472                           ; BSR set to: 0
 20473                           
 20474                           ; BSR set to: 0
 20475  00A4BA  5164               	movf	ClearBuffer@Index& (0+255),w,b
 20476  00A4BC  5D62               	subwf	ClearBuffer@Len& (0+255),w,b
 20477  00A4BE  5165               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 20478  00A4C0  5963               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 20479  00A4C2  A0D8               	btfss	status,0,c
 20480  00A4C4  0012               	return	
 20481  00A4C6  D7EF               	goto	l1922
 20482  00A4C8                     __end_of_ClearBuffer:
 20483                           	opt stack 0
 20484                           tosu	equ	0xFFF
 20485                           tosh	equ	0xFFE
 20486                           tosl	equ	0xFFD
 20487                           pclath	equ	0xFFA
 20488                           tblptru	equ	0xFF8
 20489                           tblptrh	equ	0xFF7
 20490                           tblptrl	equ	0xFF6
 20491                           tablat	equ	0xFF5
 20492                           prodh	equ	0xFF4
 20493                           prodl	equ	0xFF3
 20494                           intcon	equ	0xFF2
 20495                           intcon2	equ	0xFF1
 20496                           intcon3	equ	0xFF0
 20497                           indf0	equ	0xFEF
 20498                           postinc0	equ	0xFEE
 20499                           plusw0	equ	0xFEB
 20500                           fsr0h	equ	0xFEA
 20501                           fsr0l	equ	0xFE9
 20502                           wreg	equ	0xFE8
 20503                           indf1	equ	0xFE7
 20504                           postinc1	equ	0xFE6
 20505                           postdec1	equ	0xFE5
 20506                           fsr1h	equ	0xFE2
 20507                           fsr1l	equ	0xFE1
 20508                           indf2	equ	0xFDF
 20509                           postinc2	equ	0xFDE
 20510                           postdec2	equ	0xFDD
 20511                           plusw2	equ	0xFDB
 20512                           fsr2h	equ	0xFDA
 20513                           fsr2l	equ	0xFD9
 20514                           status	equ	0xFD8
 20515                           
 20516 ;; *************** function _SendDataSm *****************
 20517 ;; Defined at:
 20518 ;;		line 200 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 20519 ;; Parameters:    Size  Location     Type
 20520 ;;		None
 20521 ;; Auto vars:     Size  Location     Type
 20522 ;;  Data          103   30[BANK0 ] unsigned char [103]
 20523 ;;  LenAscii        4  133[BANK0 ] unsigned char [4]
 20524 ;;  IdAscii         1  138[BANK0 ] unsigned char [1]
 20525 ;;  DataIndex       1  137[BANK0 ] unsigned char 
 20526 ;; Return value:  Size  Location     Type
 20527 ;;                  1    wreg      void 
 20528 ;; Registers used:
 20529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20530 ;; Tracked objects:
 20531 ;;		On entry : 0/0
 20532 ;;		On exit  : 0/0
 20533 ;;		Unchanged: 0/0
 20534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20536 ;;      Locals:         0     109       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20538 ;;      Totals:         0     109       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20539 ;;Total ram usage:      109 bytes
 20540 ;; Hardware stack levels used:    1
 20541 ;; Hardware stack levels required when called:   14
 20542 ;; This function calls:
 20543 ;;		_MdmWifi_ReceiveWifiMsg
 20544 ;;		_MdmWifi_SendWifiMsg
 20545 ;;		_OsTmr_GetTimerStatus
 20546 ;;		_OsTmr_StartTimer
 20547 ;;		_ReceiveEvt
 20548 ;;		_strcat
 20549 ;;		_strcpy
 20550 ;;		_strstr
 20551 ;;		_utoa
 20552 ;; This function is called by:
 20553 ;;		_MdmWifiCmd_MainTask
 20554 ;; This function uses a non-reentrant model
 20555 ;;
 20556                           
 20557                           	psect	text92
 20558  00D820                     __ptext92:
 20559                           	opt stack 0
 20560  00D820                     _SendDataSm:
 20561                           	opt stack 13
 20562                           
 20563                           ;mdm_wifi_cmd.c: 202: static WifiSendDataStateType WifiSendDataState = WiFiSnd_WaitEvt;
 20564                           ;mdm_wifi_cmd.c: 203: UINT8 Data[((UINT8)(100)) + 3];
 20565                           ;mdm_wifi_cmd.c: 204: UINT8 DataIndex;
 20566                           ;mdm_wifi_cmd.c: 205: UINT8 IdAscii[1];
 20567                           ;mdm_wifi_cmd.c: 206: UINT8 LenAscii[4];
 20568                           ;mdm_wifi_cmd.c: 207: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, };
 20569                           ;mdm_wifi_cmd.c: 209: switch (WifiSendDataState)
 20570                           
 20571                           ; BSR set to: 0
 20572                           ;incstack = 0
 20573  00D820  D105               	goto	l995
 20574  00D822                     
 20575                           ;mdm_wifi_cmd.c: 213: if (ReceiveEvt(&WifiSendData))
 20576  00D822  0E56               	movlw	low _WifiSendData
 20577  00D824  0100               	movlb	0	; () banked
 20578  00D826  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 20579  00D828  0E00               	movlw	high _WifiSendData
 20580  00D82A  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 20581  00D82C  EC87  F051         	call	_ReceiveEvt	;wreg free
 20582  00D830  0900               	iorlw	0
 20583  00D832  B4D8               	btfsc	status,2,c
 20584  00D834  0012               	return	
 20585                           
 20586                           ;mdm_wifi_cmd.c: 214: {
 20587                           ;mdm_wifi_cmd.c: 215: WifiSendDataState = WiFiSnd_SendDataCmd;
 20588  00D836  0E01               	movlw	1
 20589  00D838  0101               	movlb	1	; () banked
 20590  00D83A  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20591                           
 20592                           ; BSR set to: 1
 20593                           ;mdm_wifi_cmd.c: 216: }
 20594                           ;mdm_wifi_cmd.c: 217: break;
 20595  00D83C  0012               	return	
 20596  00D83E                     
 20597                           ; BSR set to: 1
 20598                           ;mdm_wifi_cmd.c: 221: strcpy(Data,"AT+CIPSEND=");
 20599                           
 20600                           ; BSR set to: 1
 20601  00D83E  0E7E               	movlw	low SendDataSm@Data
 20602  00D840  0100               	movlb	0	; () banked
 20603  00D842  6F60               	movwf	strcpy@to& (0+255),b
 20604  00D844  0E00               	movlw	high SendDataSm@Data
 20605  00D846  6F61               	movwf	(strcpy@to+1)& (0+255),b
 20606  00D848  0E61               	movlw	low STR_15
 20607  00D84A  6F62               	movwf	strcpy@from& (0+255),b
 20608  00D84C  0EEF               	movlw	high STR_15
 20609  00D84E  6F63               	movwf	(strcpy@from+1)& (0+255),b
 20610  00D850  EC00  F054         	call	_strcpy	;wreg free
 20611                           
 20612                           ;mdm_wifi_cmd.c: 223: if (ModeLocal == ((UINT8)(1)))
 20613  00D854  0451               	decf	_ModeLocal,w,c
 20614  00D856  A4D8               	btfss	status,2,c
 20615  00D858  D02E               	goto	l1000
 20616                           
 20617                           ;mdm_wifi_cmd.c: 224: {
 20618                           ;mdm_wifi_cmd.c: 225: utoa(IdAscii,IdLocal,10);
 20619  00D85A  0EEA               	movlw	low SendDataSm@IdAscii
 20620  00D85C  0100               	movlb	0	; () banked
 20621  00D85E  6F67               	movwf	utoa@buf& (0+255),b
 20622  00D860  0E00               	movlw	high SendDataSm@IdAscii
 20623  00D862  6F68               	movwf	(utoa@buf+1)& (0+255),b
 20624  00D864  C050  F069         	movff	_IdLocal,utoa@val
 20625  00D868  6B6A               	clrf	(utoa@val+1)& (0+255),b
 20626  00D86A  0E00               	movlw	0
 20627  00D86C  6F6C               	movwf	(utoa@base+1)& (0+255),b
 20628  00D86E  0E0A               	movlw	10
 20629  00D870  6F6B               	movwf	utoa@base& (0+255),b
 20630  00D872  ECF3  F05C         	call	_utoa	;wreg free
 20631                           
 20632                           ;mdm_wifi_cmd.c: 226: strcat(Data,IdAscii);
 20633  00D876  0E7E               	movlw	low SendDataSm@Data
 20634  00D878  0100               	movlb	0	; () banked
 20635  00D87A  6F60               	movwf	strcat@to& (0+255),b
 20636  00D87C  0E00               	movlw	high SendDataSm@Data
 20637  00D87E  6F61               	movwf	(strcat@to+1)& (0+255),b
 20638  00D880  0EEA               	movlw	low SendDataSm@IdAscii
 20639  00D882  6F62               	movwf	strcat@from& (0+255),b
 20640  00D884  0E00               	movlw	high SendDataSm@IdAscii
 20641  00D886  6F63               	movwf	(strcat@from+1)& (0+255),b
 20642  00D888  5162               	movf	strcat@from& (0+255),w,b
 20643  00D88A  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20644  00D88C  A4D8               	btfss	status,2,c
 20645  00D88E  0E20               	movlw	32
 20646  00D890  6F64               	movwf	(strcat@from+2)& (0+255),b
 20647  00D892  ECC1  F056         	call	_strcat	;wreg free
 20648                           
 20649                           ;mdm_wifi_cmd.c: 227: strcat(Data,",");
 20650  00D896  0E7E               	movlw	low SendDataSm@Data
 20651  00D898  0100               	movlb	0	; () banked
 20652  00D89A  6F60               	movwf	strcat@to& (0+255),b
 20653  00D89C  0E00               	movlw	high SendDataSm@Data
 20654  00D89E  6F61               	movwf	(strcat@to+1)& (0+255),b
 20655  00D8A0  0EED               	movlw	low (STR_46+1)
 20656  00D8A2  6F62               	movwf	strcat@from& (0+255),b
 20657  00D8A4  0EEF               	movlw	high (STR_46+1)
 20658  00D8A6  6F63               	movwf	(strcat@from+1)& (0+255),b
 20659  00D8A8  5162               	movf	strcat@from& (0+255),w,b
 20660  00D8AA  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20661  00D8AC  A4D8               	btfss	status,2,c
 20662  00D8AE  0E00               	movlw	low (__mediumconst shr (0+16))
 20663  00D8B0  6F64               	movwf	(strcat@from+2)& (0+255),b
 20664  00D8B2  ECC1  F056         	call	_strcat	;wreg free
 20665  00D8B6                     l1000:
 20666                           
 20667                           ;mdm_wifi_cmd.c: 228: }
 20668                           ;mdm_wifi_cmd.c: 230: LenLocal = LenLocal + 2;
 20669  00D8B6  504F               	movf	_LenLocal,w,c
 20670  00D8B8  0F02               	addlw	2
 20671  00D8BA  6E4F               	movwf	_LenLocal,c
 20672                           
 20673                           ;mdm_wifi_cmd.c: 231: utoa(LenAscii,LenLocal,10);
 20674  00D8BC  0EE5               	movlw	low SendDataSm@LenAscii
 20675  00D8BE  0100               	movlb	0	; () banked
 20676  00D8C0  6F67               	movwf	utoa@buf& (0+255),b
 20677  00D8C2  0E00               	movlw	high SendDataSm@LenAscii
 20678  00D8C4  6F68               	movwf	(utoa@buf+1)& (0+255),b
 20679  00D8C6  C04F  F069         	movff	_LenLocal,utoa@val
 20680  00D8CA  6B6A               	clrf	(utoa@val+1)& (0+255),b
 20681  00D8CC  0E00               	movlw	0
 20682  00D8CE  6F6C               	movwf	(utoa@base+1)& (0+255),b
 20683  00D8D0  0E0A               	movlw	10
 20684  00D8D2  6F6B               	movwf	utoa@base& (0+255),b
 20685  00D8D4  ECF3  F05C         	call	_utoa	;wreg free
 20686                           
 20687                           ;mdm_wifi_cmd.c: 232: strcat(Data,LenAscii);
 20688  00D8D8  0E7E               	movlw	low SendDataSm@Data
 20689  00D8DA  0100               	movlb	0	; () banked
 20690  00D8DC  6F60               	movwf	strcat@to& (0+255),b
 20691  00D8DE  0E00               	movlw	high SendDataSm@Data
 20692  00D8E0  6F61               	movwf	(strcat@to+1)& (0+255),b
 20693  00D8E2  0EE5               	movlw	low SendDataSm@LenAscii
 20694  00D8E4  6F62               	movwf	strcat@from& (0+255),b
 20695  00D8E6  0E00               	movlw	high SendDataSm@LenAscii
 20696  00D8E8  6F63               	movwf	(strcat@from+1)& (0+255),b
 20697  00D8EA  5162               	movf	strcat@from& (0+255),w,b
 20698  00D8EC  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20699  00D8EE  A4D8               	btfss	status,2,c
 20700  00D8F0  0E20               	movlw	32
 20701  00D8F2  6F64               	movwf	(strcat@from+2)& (0+255),b
 20702  00D8F4  ECC1  F056         	call	_strcat	;wreg free
 20703                           
 20704                           ;mdm_wifi_cmd.c: 235: strcat(Data,"\r\n");
 20705  00D8F8  0E7E               	movlw	low SendDataSm@Data
 20706  00D8FA  0100               	movlb	0	; () banked
 20707  00D8FC  6F60               	movwf	strcat@to& (0+255),b
 20708  00D8FE  0E00               	movlw	high SendDataSm@Data
 20709  00D900  6F61               	movwf	(strcat@to+1)& (0+255),b
 20710  00D902  0E8D               	movlw	low (STR_31+8)
 20711  00D904  6F62               	movwf	strcat@from& (0+255),b
 20712  00D906  0EEF               	movlw	high (STR_31+8)
 20713  00D908  6F63               	movwf	(strcat@from+1)& (0+255),b
 20714  00D90A  5162               	movf	strcat@from& (0+255),w,b
 20715  00D90C  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20716  00D90E  A4D8               	btfss	status,2,c
 20717  00D910  0E00               	movlw	low (__mediumconst shr (0+16))
 20718  00D912  6F64               	movwf	(strcat@from+2)& (0+255),b
 20719  00D914  ECC1  F056         	call	_strcat	;wreg free
 20720                           
 20721                           ;mdm_wifi_cmd.c: 236: strcat(Data,(0));
 20722  00D918  0E7E               	movlw	low SendDataSm@Data
 20723  00D91A  0100               	movlb	0	; () banked
 20724  00D91C  6F60               	movwf	strcat@to& (0+255),b
 20725  00D91E  0E00               	movlw	high SendDataSm@Data
 20726  00D920  6F61               	movwf	(strcat@to+1)& (0+255),b
 20727  00D922  0E00               	movlw	0
 20728  00D924  6F62               	movwf	strcat@from& (0+255),b
 20729  00D926  0E00               	movlw	0
 20730  00D928  6F63               	movwf	(strcat@from+1)& (0+255),b
 20731  00D92A  0E00               	movlw	0
 20732  00D92C  6F64               	movwf	(strcat@from+2)& (0+255),b
 20733  00D92E  ECC1  F056         	call	_strcat	;wreg free
 20734                           
 20735                           ;mdm_wifi_cmd.c: 238: MdmWifi_SendWifiMsg(Data);
 20736  00D932  0E7E               	movlw	low SendDataSm@Data
 20737  00D934  0100               	movlb	0	; () banked
 20738  00D936  6F66               	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20739  00D938  0E00               	movlw	high SendDataSm@Data
 20740  00D93A  6F67               	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20741  00D93C  EC96  F04F         	call	_MdmWifi_SendWifiMsg	;wreg free
 20742                           
 20743                           ;mdm_wifi_cmd.c: 240: OsTmr_StartTimer(&SwTimer,2000);
 20744  00D940  0EF6               	movlw	low SendDataSm@SwTimer
 20745  00D942  0100               	movlb	0	; () banked
 20746  00D944  6F64               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 20747  00D946  0E01               	movlw	high SendDataSm@SwTimer
 20748  00D948  6F65               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 20749  00D94A  0ED0               	movlw	208
 20750  00D94C  6F66               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 20751  00D94E  0E07               	movlw	7
 20752  00D950  6F67               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 20753  00D952  0E00               	movlw	0
 20754  00D954  6F68               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 20755  00D956  0E00               	movlw	0
 20756  00D958  6F69               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 20757  00D95A  EC32  F056         	call	_OsTmr_StartTimer	;wreg free
 20758                           
 20759                           ;mdm_wifi_cmd.c: 243: WifiSendDataState = WiFiSnd_WaitPrompt;
 20760  00D95E  0E02               	movlw	2
 20761  00D960  0101               	movlb	1	; () banked
 20762  00D962  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20763                           
 20764                           ;mdm_wifi_cmd.c: 244: break;
 20765  00D964  0012               	return	
 20766  00D966                     
 20767                           ; BSR set to: 1
 20768                           ;mdm_wifi_cmd.c: 248: if (MdmWifi_ReceiveWifiMsg(Data,&DataIndex) == WifiMsg_Received)
 20769                           
 20770                           ; BSR set to: 1
 20771  00D966  0E7E               	movlw	low SendDataSm@Data
 20772  00D968  0100               	movlb	0	; () banked
 20773  00D96A  6F68               	movwf	MdmWifi_ReceiveWifiMsg@RxBuffer& (0+255),b
 20774  00D96C  0E00               	movlw	high SendDataSm@Data
 20775  00D96E  6F69               	movwf	(MdmWifi_ReceiveWifiMsg@RxBuffer+1)& (0+255),b
 20776  00D970  0EE9               	movlw	low SendDataSm@DataIndex
 20777  00D972  6F6A               	movwf	MdmWifi_ReceiveWifiMsg@DataLenght& (0+255),b
 20778  00D974  0E00               	movlw	high SendDataSm@DataIndex
 20779  00D976  6F6B               	movwf	(MdmWifi_ReceiveWifiMsg@DataLenght+1)& (0+255),b
 20780  00D978  EC6B  F054         	call	_MdmWifi_ReceiveWifiMsg	;wreg free
 20781  00D97C  06E8               	decf	wreg,f,c
 20782  00D97E  A4D8               	btfss	status,2,c
 20783  00D980  D014               	goto	l1002
 20784                           
 20785                           ;mdm_wifi_cmd.c: 249: {
 20786                           ;mdm_wifi_cmd.c: 251: if (strstr(Data,(void*)">") != (0))
 20787  00D982  0E7E               	movlw	low SendDataSm@Data
 20788  00D984  0100               	movlb	0	; () banked
 20789  00D986  6F6F               	movwf	strstr@s1& (0+255),b
 20790  00D988  0E00               	movlw	high SendDataSm@Data
 20791  00D98A  6F70               	movwf	(strstr@s1+1)& (0+255),b
 20792  00D98C  0EFB               	movlw	low STR_18
 20793  00D98E  6F71               	movwf	strstr@s2& (0+255),b
 20794  00D990  0EEF               	movlw	high STR_18
 20795  00D992  6F72               	movwf	(strstr@s2+1)& (0+255),b
 20796  00D994  EC77  F059         	call	_strstr	;wreg free
 20797  00D998  0100               	movlb	0	; () banked
 20798  00D99A  516F               	movf	?_strstr& (0+255),w,b
 20799  00D99C  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 20800  00D99E  B4D8               	btfsc	status,2,c
 20801  00D9A0  0012               	return	
 20802                           
 20803                           ; BSR set to: 0
 20804                           ;mdm_wifi_cmd.c: 252: {
 20805                           ;mdm_wifi_cmd.c: 254: WifiSendDataState = WiFiSnd_SendPayload;
 20806  00D9A2  0E03               	movlw	3
 20807  00D9A4  0101               	movlb	1	; () banked
 20808  00D9A6  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20809                           
 20810                           ; BSR set to: 1
 20811                           ;mdm_wifi_cmd.c: 255: }
 20812                           ;mdm_wifi_cmd.c: 256: }
 20813  00D9A8  0012               	return	
 20814  00D9AA                     l1002:
 20815                           
 20816                           ;mdm_wifi_cmd.c: 257: else if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 20817                           
 20818                           ; BSR set to: 1
 20819  00D9AA  0EF6               	movlw	low SendDataSm@SwTimer
 20820  00D9AC  0100               	movlb	0	; () banked
 20821  00D9AE  6F78               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 20822  00D9B0  0E01               	movlw	high SendDataSm@SwTimer
 20823  00D9B2  6F79               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 20824  00D9B4  EC48  F05A         	call	_OsTmr_GetTimerStatus	;wreg free
 20825  00D9B8  06E8               	decf	wreg,f,c
 20826  00D9BA  A4D8               	btfss	status,2,c
 20827  00D9BC  0012               	return	
 20828                           
 20829                           ;mdm_wifi_cmd.c: 258: {
 20830                           ;mdm_wifi_cmd.c: 260: WifiSendDataState = WiFiSnd_WaitEvt;
 20831  00D9BE  0E00               	movlw	0
 20832  00D9C0  0101               	movlb	1	; () banked
 20833  00D9C2  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20834                           
 20835                           ; BSR set to: 1
 20836                           ;mdm_wifi_cmd.c: 261: }
 20837                           ;mdm_wifi_cmd.c: 262: break;
 20838                           
 20839                           ; BSR set to: 1
 20840  00D9C4  0012               	return	
 20841  00D9C6                     
 20842                           ; BSR set to: 1
 20843                           ;mdm_wifi_cmd.c: 266: strcpy(Data,BufferLocal);
 20844                           
 20845                           ; BSR set to: 1
 20846  00D9C6  0E7E               	movlw	low SendDataSm@Data
 20847  00D9C8  0100               	movlb	0	; () banked
 20848  00D9CA  6F60               	movwf	strcpy@to& (0+255),b
 20849  00D9CC  0E00               	movlw	high SendDataSm@Data
 20850  00D9CE  6F61               	movwf	(strcpy@to+1)& (0+255),b
 20851  00D9D0  0E64               	movlw	low _BufferLocal
 20852  00D9D2  6F62               	movwf	strcpy@from& (0+255),b
 20853  00D9D4  0E06               	movlw	high _BufferLocal
 20854  00D9D6  6F63               	movwf	(strcpy@from+1)& (0+255),b
 20855  00D9D8  EC00  F054         	call	_strcpy	;wreg free
 20856                           
 20857                           ;mdm_wifi_cmd.c: 268: strcat(Data,"\r\n");
 20858  00D9DC  0E7E               	movlw	low SendDataSm@Data
 20859  00D9DE  0100               	movlb	0	; () banked
 20860  00D9E0  6F60               	movwf	strcat@to& (0+255),b
 20861  00D9E2  0E00               	movlw	high SendDataSm@Data
 20862  00D9E4  6F61               	movwf	(strcat@to+1)& (0+255),b
 20863  00D9E6  0E8D               	movlw	low (STR_31+8)
 20864  00D9E8  6F62               	movwf	strcat@from& (0+255),b
 20865  00D9EA  0EEF               	movlw	high (STR_31+8)
 20866  00D9EC  6F63               	movwf	(strcat@from+1)& (0+255),b
 20867  00D9EE  5162               	movf	strcat@from& (0+255),w,b
 20868  00D9F0  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20869  00D9F2  A4D8               	btfss	status,2,c
 20870  00D9F4  0E00               	movlw	low (__mediumconst shr (0+16))
 20871  00D9F6  6F64               	movwf	(strcat@from+2)& (0+255),b
 20872  00D9F8  ECC1  F056         	call	_strcat	;wreg free
 20873                           
 20874                           ;mdm_wifi_cmd.c: 269: strcat(Data,(0));
 20875  00D9FC  0E7E               	movlw	low SendDataSm@Data
 20876  00D9FE  0100               	movlb	0	; () banked
 20877  00DA00  6F60               	movwf	strcat@to& (0+255),b
 20878  00DA02  0E00               	movlw	high SendDataSm@Data
 20879  00DA04  6F61               	movwf	(strcat@to+1)& (0+255),b
 20880  00DA06  0E00               	movlw	0
 20881  00DA08  6F62               	movwf	strcat@from& (0+255),b
 20882  00DA0A  0E00               	movlw	0
 20883  00DA0C  6F63               	movwf	(strcat@from+1)& (0+255),b
 20884  00DA0E  0E00               	movlw	0
 20885  00DA10  6F64               	movwf	(strcat@from+2)& (0+255),b
 20886  00DA12  ECC1  F056         	call	_strcat	;wreg free
 20887                           
 20888                           ;mdm_wifi_cmd.c: 272: MdmWifi_SendWifiMsg(Data);
 20889  00DA16  0E7E               	movlw	low SendDataSm@Data
 20890  00DA18  0100               	movlb	0	; () banked
 20891  00DA1A  6F66               	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20892  00DA1C  0E00               	movlw	high SendDataSm@Data
 20893  00DA1E  6F67               	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20894  00DA20  EC96  F04F         	call	_MdmWifi_SendWifiMsg	;wreg free
 20895                           
 20896                           ;mdm_wifi_cmd.c: 275: WifiSendDataState = WiFiSnd_WaitEvt;
 20897  00DA24  0E00               	movlw	0
 20898  00DA26  0101               	movlb	1	; () banked
 20899  00DA28  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20900                           
 20901                           ; BSR set to: 1
 20902                           ;mdm_wifi_cmd.c: 280: }
 20903                           
 20904                           ; BSR set to: 1
 20905                           ;mdm_wifi_cmd.c: 279: break;
 20906                           
 20907                           ;mdm_wifi_cmd.c: 278: default:
 20908                           
 20909                           ;mdm_wifi_cmd.c: 276: break;
 20910  00DA2A  0012               	return	
 20911  00DA2C                     l995:
 20912                           
 20913                           ; BSR set to: 1
 20914  00DA2C  0101               	movlb	1	; () banked
 20915  00DA2E  5166               	movf	SendDataSm@WifiSendDataState& (0+255),w,b
 20916                           
 20917                           ; Switch size 1, requested type "space"
 20918                           ; Number of cases is 4, Range of values is 0 to 3
 20919                           ; switch strategies available:
 20920                           ; Name         Instructions Cycles
 20921                           ; simple_byte           13     7 (average)
 20922                           ;	Chosen strategy is simple_byte
 20923  00DA30  0A00               	xorlw	0	; case 0
 20924  00DA32  B4D8               	btfsc	status,2,c
 20925  00DA34  D6F6               	goto	l996
 20926  00DA36  0A01               	xorlw	1	; case 1
 20927  00DA38  B4D8               	btfsc	status,2,c
 20928  00DA3A  D701               	goto	l999
 20929  00DA3C  0A03               	xorlw	3	; case 2
 20930  00DA3E  B4D8               	btfsc	status,2,c
 20931  00DA40  D792               	goto	l1001
 20932  00DA42  0A01               	xorlw	1	; case 3
 20933  00DA44  A4D8               	btfss	status,2,c
 20934  00DA46  0012               	return	
 20935  00DA48  D7BE               	goto	l1006
 20936  00DA4A                     __end_of_SendDataSm:
 20937                           	opt stack 0
 20938                           tosu	equ	0xFFF
 20939                           tosh	equ	0xFFE
 20940                           tosl	equ	0xFFD
 20941                           pclath	equ	0xFFA
 20942                           tblptru	equ	0xFF8
 20943                           tblptrh	equ	0xFF7
 20944                           tblptrl	equ	0xFF6
 20945                           tablat	equ	0xFF5
 20946                           prodh	equ	0xFF4
 20947                           prodl	equ	0xFF3
 20948                           intcon	equ	0xFF2
 20949                           intcon2	equ	0xFF1
 20950                           intcon3	equ	0xFF0
 20951                           indf0	equ	0xFEF
 20952                           postinc0	equ	0xFEE
 20953                           plusw0	equ	0xFEB
 20954                           fsr0h	equ	0xFEA
 20955                           fsr0l	equ	0xFE9
 20956                           wreg	equ	0xFE8
 20957                           indf1	equ	0xFE7
 20958                           postinc1	equ	0xFE6
 20959                           postdec1	equ	0xFE5
 20960                           fsr1h	equ	0xFE2
 20961                           fsr1l	equ	0xFE1
 20962                           indf2	equ	0xFDF
 20963                           postinc2	equ	0xFDE
 20964                           postdec2	equ	0xFDD
 20965                           plusw2	equ	0xFDB
 20966                           fsr2h	equ	0xFDA
 20967                           fsr2l	equ	0xFD9
 20968                           status	equ	0xFD8
 20969                           
 20970 ;; *************** function _utoa *****************
 20971 ;; Defined at:
 20972 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 20973 ;; Parameters:    Size  Location     Type
 20974 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 20975 ;;		 -> Term_MainSm@FwkBuildYearStr(4), Term_MainSm@FwkBuildMonthStr(4), Term_MainSm@FwkBuildDayStr(4), Term_MainSm@FwkB
      +uildStr(4), 
 20976 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(100), MdmWifiCmd_ConfigureServer@PortAs
      +cii(10), 
 20977 ;;		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(5), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(5), MdmWifiCmd_CloseConnect
      +ion@IdAscii(1), SendDataSm@LenAscii(4), 
 20978 ;;		 -> SendDataSm@IdAscii(1), StartConnectionSm@PortAscii(4), StartConnectionSm@IdAscii(1), 
 20979 ;;  val             2    9[BANK0 ] unsigned int 
 20980 ;;  base            2   11[BANK0 ] int 
 20981 ;; Auto vars:     Size  Location     Type
 20982 ;;  v               2   13[BANK0 ] unsigned int 
 20983 ;;  c               1   15[BANK0 ] unsigned char 
 20984 ;; Return value:  Size  Location     Type
 20985 ;;                  2    7[BANK0 ] PTR unsigned char 
 20986 ;; Registers used:
 20987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20988 ;; Tracked objects:
 20989 ;;		On entry : 0/0
 20990 ;;		On exit  : 0/0
 20991 ;;		Unchanged: 0/0
 20992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20993 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20994 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20996 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20997 ;;Total ram usage:        9 bytes
 20998 ;; Hardware stack levels used:    1
 20999 ;; Hardware stack levels required when called:   12
 21000 ;; This function calls:
 21001 ;;		___lwdiv
 21002 ;;		___lwmod
 21003 ;; This function is called by:
 21004 ;;		_StartConnectionSm
 21005 ;;		_SendDataSm
 21006 ;;		_Term_MainSm
 21007 ;;		_itoa
 21008 ;;		_MdmWifiCmd_CloseConnection
 21009 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 21010 ;;		_MdmWifiCmd_ConfigureServer
 21011 ;; This function uses a non-reentrant model
 21012 ;;
 21013                           
 21014                           	psect	text93
 21015  00B9E6                     __ptext93:
 21016                           	opt stack 0
 21017  00B9E6                     _utoa:
 21018                           	opt stack 14
 21019                           
 21020                           ;incstack = 0
 21021  00B9E6  C069  F06D         	movff	utoa@val,utoa@v
 21022  00B9EA  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 21023  00B9EE  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 21024  00B9F2  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 21025  00B9F6  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 21026  00B9FA  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 21027  00B9FE  EC05  F055         	call	___lwdiv	;wreg free
 21028  00BA02  C060  F06D         	movff	?___lwdiv,utoa@v
 21029  00BA06  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 21030  00BA0A  0100               	movlb	0	; () banked
 21031  00BA0C  4B67               	infsnz	utoa@buf& (0+255),f,b
 21032  00BA0E  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 21033                           
 21034                           ; BSR set to: 0
 21035  00BA10  516D               	movf	utoa@v& (0+255),w,b
 21036  00BA12  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 21037  00BA14  A4D8               	btfss	status,2,c
 21038  00BA16  D7EB               	goto	l2473
 21039                           
 21040                           ; BSR set to: 0
 21041                           
 21042                           ; BSR set to: 0
 21043  00BA18  C067  FFD9         	movff	utoa@buf,fsr2l
 21044  00BA1C  C068  FFDA         	movff	utoa@buf+1,fsr2h
 21045  00BA20  0E00               	movlw	0
 21046  00BA22  6EDF               	movwf	indf2,c
 21047                           
 21048                           ; BSR set to: 0
 21049  00BA24  0767               	decf	utoa@buf& (0+255),f,b
 21050  00BA26  A0D8               	btfss	status,0,c
 21051  00BA28  0768               	decf	(utoa@buf+1)& (0+255),f,b
 21052  00BA2A                     
 21053                           ; BSR set to: 0
 21054                           
 21055                           ; BSR set to: 0
 21056  00BA2A  C069  F060         	movff	utoa@val,___lwmod@dividend
 21057  00BA2E  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 21058  00BA32  C06B  F062         	movff	utoa@base,___lwmod@divisor
 21059  00BA36  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 21060  00BA3A  EC33  F053         	call	___lwmod	;wreg free
 21061  00BA3E  0100               	movlb	0	; () banked
 21062  00BA40  5160               	movf	?___lwmod& (0+255),w,b
 21063  00BA42  6F6F               	movwf	utoa@c& (0+255),b
 21064                           
 21065                           ; BSR set to: 0
 21066  00BA44  C069  F060         	movff	utoa@val,___lwdiv@dividend
 21067  00BA48  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 21068  00BA4C  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 21069  00BA50  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 21070  00BA54  EC05  F055         	call	___lwdiv	;wreg free
 21071  00BA58  C060  F069         	movff	?___lwdiv,utoa@val
 21072  00BA5C  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 21073  00BA60  0E09               	movlw	9
 21074  00BA62  0100               	movlb	0	; () banked
 21075  00BA64  656F               	cpfsgt	utoa@c& (0+255),b
 21076  00BA66  D002               	goto	l2476
 21077                           
 21078                           ; BSR set to: 0
 21079  00BA68  0E07               	movlw	7
 21080  00BA6A  276F               	addwf	utoa@c& (0+255),f,b
 21081  00BA6C                     l2476:
 21082                           
 21083                           ; BSR set to: 0
 21084  00BA6C  0E30               	movlw	48
 21085  00BA6E  276F               	addwf	utoa@c& (0+255),f,b
 21086                           
 21087                           ; BSR set to: 0
 21088  00BA70  C067  FFD9         	movff	utoa@buf,fsr2l
 21089  00BA74  C068  FFDA         	movff	utoa@buf+1,fsr2h
 21090  00BA78  C06F  FFDF         	movff	utoa@c,indf2
 21091                           
 21092                           ; BSR set to: 0
 21093  00BA7C  0767               	decf	utoa@buf& (0+255),f,b
 21094  00BA7E  A0D8               	btfss	status,0,c
 21095  00BA80  0768               	decf	(utoa@buf+1)& (0+255),f,b
 21096                           
 21097                           ; BSR set to: 0
 21098  00BA82  5169               	movf	utoa@val& (0+255),w,b
 21099  00BA84  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 21100  00BA86  A4D8               	btfss	status,2,c
 21101  00BA88  D7D0               	goto	l2475
 21102                           
 21103                           ; BSR set to: 0
 21104                           ;	Return value of _utoa is never used
 21105                           
 21106                           ; BSR set to: 0
 21107  00BA8A  4B67               	infsnz	utoa@buf& (0+255),f,b
 21108  00BA8C  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 21109  00BA8E  0012               	return	
 21110  00BA90                     __end_of_utoa:
 21111                           	opt stack 0
 21112                           tosu	equ	0xFFF
 21113                           tosh	equ	0xFFE
 21114                           tosl	equ	0xFFD
 21115                           pclath	equ	0xFFA
 21116                           tblptru	equ	0xFF8
 21117                           tblptrh	equ	0xFF7
 21118                           tblptrl	equ	0xFF6
 21119                           tablat	equ	0xFF5
 21120                           prodh	equ	0xFF4
 21121                           prodl	equ	0xFF3
 21122                           intcon	equ	0xFF2
 21123                           intcon2	equ	0xFF1
 21124                           intcon3	equ	0xFF0
 21125                           indf0	equ	0xFEF
 21126                           postinc0	equ	0xFEE
 21127                           plusw0	equ	0xFEB
 21128                           fsr0h	equ	0xFEA
 21129                           fsr0l	equ	0xFE9
 21130                           wreg	equ	0xFE8
 21131                           indf1	equ	0xFE7
 21132                           postinc1	equ	0xFE6
 21133                           postdec1	equ	0xFE5
 21134                           fsr1h	equ	0xFE2
 21135                           fsr1l	equ	0xFE1
 21136                           indf2	equ	0xFDF
 21137                           postinc2	equ	0xFDE
 21138                           postdec2	equ	0xFDD
 21139                           plusw2	equ	0xFDB
 21140                           fsr2h	equ	0xFDA
 21141                           fsr2l	equ	0xFD9
 21142                           status	equ	0xFD8
 21143                           
 21144 ;; *************** function ___lwmod *****************
 21145 ;; Defined at:
 21146 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 21147 ;; Parameters:    Size  Location     Type
 21148 ;;  dividend        2    0[BANK0 ] unsigned int 
 21149 ;;  divisor         2    2[BANK0 ] unsigned int 
 21150 ;; Auto vars:     Size  Location     Type
 21151 ;;  counter         1    4[BANK0 ] unsigned char 
 21152 ;; Return value:  Size  Location     Type
 21153 ;;                  2    0[BANK0 ] unsigned int 
 21154 ;; Registers used:
 21155 ;;		wreg, status,2, status,0
 21156 ;; Tracked objects:
 21157 ;;		On entry : 0/0
 21158 ;;		On exit  : 0/0
 21159 ;;		Unchanged: 0/0
 21160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21161 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21162 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21164 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21165 ;;Total ram usage:        5 bytes
 21166 ;; Hardware stack levels used:    1
 21167 ;; Hardware stack levels required when called:   11
 21168 ;; This function calls:
 21169 ;;		Nothing
 21170 ;; This function is called by:
 21171 ;;		_utoa
 21172 ;; This function uses a non-reentrant model
 21173 ;;
 21174                           
 21175                           	psect	text94
 21176  00A666                     __ptext94:
 21177                           	opt stack 0
 21178  00A666                     ___lwmod:
 21179                           	opt stack 14
 21180                           
 21181                           ; BSR set to: 0
 21182                           ;incstack = 0
 21183  00A666  0100               	movlb	0	; () banked
 21184  00A668  5162               	movf	___lwmod@divisor& (0+255),w,b
 21185  00A66A  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 21186  00A66C  B4D8               	btfsc	status,2,c
 21187  00A66E  D018               	goto	l2571
 21188                           
 21189                           ; BSR set to: 0
 21190  00A670  0E01               	movlw	1
 21191  00A672  6F64               	movwf	___lwmod@counter& (0+255),b
 21192  00A674  D004               	goto	l2566
 21193  00A676                     
 21194                           ; BSR set to: 0
 21195                           
 21196                           ; BSR set to: 0
 21197  00A676  90D8               	bcf	status,0,c
 21198  00A678  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 21199  00A67A  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21200  00A67C  2B64               	incf	___lwmod@counter& (0+255),f,b
 21201  00A67E                     l2566:
 21202                           
 21203                           ; BSR set to: 0
 21204                           
 21205                           ; BSR set to: 0
 21206  00A67E  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21207  00A680  D7FA               	goto	l2567
 21208  00A682                     u4870:
 21209                           
 21210                           ; BSR set to: 0
 21211                           
 21212                           ; BSR set to: 0
 21213                           
 21214                           ; BSR set to: 0
 21215  00A682  5162               	movf	___lwmod@divisor& (0+255),w,b
 21216  00A684  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 21217  00A686  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21218  00A688  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21219  00A68A  A0D8               	btfss	status,0,c
 21220  00A68C  D004               	goto	l2570
 21221                           
 21222                           ; BSR set to: 0
 21223  00A68E  5162               	movf	___lwmod@divisor& (0+255),w,b
 21224  00A690  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 21225  00A692  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21226  00A694  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21227  00A696                     l2570:
 21228                           
 21229                           ; BSR set to: 0
 21230                           
 21231                           ; BSR set to: 0
 21232  00A696  90D8               	bcf	status,0,c
 21233  00A698  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 21234  00A69A  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 21235                           
 21236                           ; BSR set to: 0
 21237  00A69C  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 21238  00A69E  D7F1               	goto	u4870
 21239  00A6A0                     l2571:
 21240                           
 21241                           ; BSR set to: 0
 21242                           
 21243                           ; BSR set to: 0
 21244  00A6A0  C060  F060         	movff	___lwmod@dividend,?___lwmod
 21245  00A6A4  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 21246                           
 21247                           ; BSR set to: 0
 21248  00A6A8  0012               	return		;funcret
 21249  00A6AA                     __end_of___lwmod:
 21250                           	opt stack 0
 21251                           tosu	equ	0xFFF
 21252                           tosh	equ	0xFFE
 21253                           tosl	equ	0xFFD
 21254                           pclath	equ	0xFFA
 21255                           tblptru	equ	0xFF8
 21256                           tblptrh	equ	0xFF7
 21257                           tblptrl	equ	0xFF6
 21258                           tablat	equ	0xFF5
 21259                           prodh	equ	0xFF4
 21260                           prodl	equ	0xFF3
 21261                           intcon	equ	0xFF2
 21262                           intcon2	equ	0xFF1
 21263                           intcon3	equ	0xFF0
 21264                           indf0	equ	0xFEF
 21265                           postinc0	equ	0xFEE
 21266                           plusw0	equ	0xFEB
 21267                           fsr0h	equ	0xFEA
 21268                           fsr0l	equ	0xFE9
 21269                           wreg	equ	0xFE8
 21270                           indf1	equ	0xFE7
 21271                           postinc1	equ	0xFE6
 21272                           postdec1	equ	0xFE5
 21273                           fsr1h	equ	0xFE2
 21274                           fsr1l	equ	0xFE1
 21275                           indf2	equ	0xFDF
 21276                           postinc2	equ	0xFDE
 21277                           postdec2	equ	0xFDD
 21278                           plusw2	equ	0xFDB
 21279                           fsr2h	equ	0xFDA
 21280                           fsr2l	equ	0xFD9
 21281                           status	equ	0xFD8
 21282                           
 21283 ;; *************** function ___lwdiv *****************
 21284 ;; Defined at:
 21285 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 21286 ;; Parameters:    Size  Location     Type
 21287 ;;  dividend        2    0[BANK0 ] unsigned int 
 21288 ;;  divisor         2    2[BANK0 ] unsigned int 
 21289 ;; Auto vars:     Size  Location     Type
 21290 ;;  quotient        2    4[BANK0 ] unsigned int 
 21291 ;;  counter         1    6[BANK0 ] unsigned char 
 21292 ;; Return value:  Size  Location     Type
 21293 ;;                  2    0[BANK0 ] unsigned int 
 21294 ;; Registers used:
 21295 ;;		wreg, status,2, status,0
 21296 ;; Tracked objects:
 21297 ;;		On entry : 0/0
 21298 ;;		On exit  : 0/0
 21299 ;;		Unchanged: 0/0
 21300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21301 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21302 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21304 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21305 ;;Total ram usage:        7 bytes
 21306 ;; Hardware stack levels used:    1
 21307 ;; Hardware stack levels required when called:   11
 21308 ;; This function calls:
 21309 ;;		Nothing
 21310 ;; This function is called by:
 21311 ;;		_utoa
 21312 ;; This function uses a non-reentrant model
 21313 ;;
 21314                           
 21315                           	psect	text95
 21316  00AA0A                     __ptext95:
 21317                           	opt stack 0
 21318  00AA0A                     ___lwdiv:
 21319                           	opt stack 14
 21320                           
 21321                           ; BSR set to: 0
 21322                           ;incstack = 0
 21323  00AA0A  0E00               	movlw	0
 21324  00AA0C  0100               	movlb	0	; () banked
 21325  00AA0E  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 21326  00AA10  0E00               	movlw	0
 21327  00AA12  6F64               	movwf	___lwdiv@quotient& (0+255),b
 21328                           
 21329                           ; BSR set to: 0
 21330  00AA14  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21331  00AA16  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 21332  00AA18  B4D8               	btfsc	status,2,c
 21333  00AA1A  D01C               	goto	l2561
 21334                           
 21335                           ; BSR set to: 0
 21336  00AA1C  0E01               	movlw	1
 21337  00AA1E  6F66               	movwf	___lwdiv@counter& (0+255),b
 21338  00AA20  D004               	goto	l2556
 21339  00AA22                     
 21340                           ; BSR set to: 0
 21341                           
 21342                           ; BSR set to: 0
 21343  00AA22  90D8               	bcf	status,0,c
 21344  00AA24  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 21345  00AA26  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 21346  00AA28  2B66               	incf	___lwdiv@counter& (0+255),f,b
 21347  00AA2A                     l2556:
 21348                           
 21349                           ; BSR set to: 0
 21350                           
 21351                           ; BSR set to: 0
 21352  00AA2A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 21353  00AA2C  D7FA               	goto	l2557
 21354  00AA2E                     u4840:
 21355                           
 21356                           ; BSR set to: 0
 21357                           
 21358                           ; BSR set to: 0
 21359                           
 21360                           ; BSR set to: 0
 21361  00AA2E  90D8               	bcf	status,0,c
 21362  00AA30  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 21363  00AA32  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 21364                           
 21365                           ; BSR set to: 0
 21366  00AA34  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21367  00AA36  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 21368  00AA38  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21369  00AA3A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 21370  00AA3C  A0D8               	btfss	status,0,c
 21371  00AA3E  D005               	goto	l2560
 21372                           
 21373                           ; BSR set to: 0
 21374  00AA40  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21375  00AA42  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 21376  00AA44  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21377  00AA46  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 21378                           
 21379                           ; BSR set to: 0
 21380  00AA48  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 21381  00AA4A                     l2560:
 21382                           
 21383                           ; BSR set to: 0
 21384                           
 21385                           ; BSR set to: 0
 21386  00AA4A  90D8               	bcf	status,0,c
 21387  00AA4C  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 21388  00AA4E  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 21389                           
 21390                           ; BSR set to: 0
 21391  00AA50  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 21392  00AA52  D7ED               	goto	u4840
 21393  00AA54                     l2561:
 21394                           
 21395                           ; BSR set to: 0
 21396                           
 21397                           ; BSR set to: 0
 21398  00AA54  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 21399  00AA58  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 21400                           
 21401                           ; BSR set to: 0
 21402  00AA5C  0012               	return		;funcret
 21403  00AA5E                     __end_of___lwdiv:
 21404                           	opt stack 0
 21405                           tosu	equ	0xFFF
 21406                           tosh	equ	0xFFE
 21407                           tosl	equ	0xFFD
 21408                           pclath	equ	0xFFA
 21409                           tblptru	equ	0xFF8
 21410                           tblptrh	equ	0xFF7
 21411                           tblptrl	equ	0xFF6
 21412                           tablat	equ	0xFF5
 21413                           prodh	equ	0xFF4
 21414                           prodl	equ	0xFF3
 21415                           intcon	equ	0xFF2
 21416                           intcon2	equ	0xFF1
 21417                           intcon3	equ	0xFF0
 21418                           indf0	equ	0xFEF
 21419                           postinc0	equ	0xFEE
 21420                           plusw0	equ	0xFEB
 21421                           fsr0h	equ	0xFEA
 21422                           fsr0l	equ	0xFE9
 21423                           wreg	equ	0xFE8
 21424                           indf1	equ	0xFE7
 21425                           postinc1	equ	0xFE6
 21426                           postdec1	equ	0xFE5
 21427                           fsr1h	equ	0xFE2
 21428                           fsr1l	equ	0xFE1
 21429                           indf2	equ	0xFDF
 21430                           postinc2	equ	0xFDE
 21431                           postdec2	equ	0xFDD
 21432                           plusw2	equ	0xFDB
 21433                           fsr2h	equ	0xFDA
 21434                           fsr2l	equ	0xFD9
 21435                           status	equ	0xFD8
 21436                           
 21437 ;; *************** function _strstr *****************
 21438 ;; Defined at:
 21439 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 21440 ;; Parameters:    Size  Location     Type
 21441 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 21442 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(250), 
 21443 ;;		 -> WifiRxPacket(253), 
 21444 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 21445 ;;		 -> STR_18(2), STR_14(8), STR_2(5), STR_1(6), 
 21446 ;; Auto vars:     Size  Location     Type
 21447 ;;		None
 21448 ;; Return value:  Size  Location     Type
 21449 ;;                  2   15[BANK0 ] PTR unsigned char 
 21450 ;; Registers used:
 21451 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21452 ;; Tracked objects:
 21453 ;;		On entry : 0/0
 21454 ;;		On exit  : 0/0
 21455 ;;		Unchanged: 0/0
 21456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21460 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21461 ;;Total ram usage:        4 bytes
 21462 ;; Hardware stack levels used:    1
 21463 ;; Hardware stack levels required when called:   12
 21464 ;; This function calls:
 21465 ;;		_strchr
 21466 ;;		_strlen
 21467 ;;		_strncmp
 21468 ;; This function is called by:
 21469 ;;		_MdmWifiEvtParser
 21470 ;;		_StartConnectionSm
 21471 ;;		_SendDataSm
 21472 ;; This function uses a non-reentrant model
 21473 ;;
 21474                           
 21475                           	psect	text96
 21476  00B2EE                     __ptext96:
 21477                           	opt stack 0
 21478  00B2EE                     _strstr:
 21479                           	opt stack 14
 21480                           
 21481                           ; BSR set to: 0
 21482                           ;incstack = 0
 21483  00B2EE  D033               	goto	l2739
 21484  00B2F0  C06F  F066         	movff	strstr@s1,strncmp@s1
 21485  00B2F4  C070  F067         	movff	strstr@s1+1,strncmp@s1+1
 21486  00B2F8  C071  F068         	movff	strstr@s2,strncmp@s2
 21487  00B2FC  C072  F069         	movff	strstr@s2+1,strncmp@s2+1
 21488  00B300  C071  F060         	movff	strstr@s2,strlen@s
 21489  00B304  C072  F061         	movff	strstr@s2+1,strlen@s+1
 21490  00B308  EC83  F055         	call	_strlen	;wreg free
 21491  00B30C  C060  F06A         	movff	?_strlen,strncmp@len
 21492  00B310  C061  F06B         	movff	?_strlen+1,strncmp@len+1
 21493  00B314  ECBC  F059         	call	_strncmp	;wreg free
 21494  00B318  0100               	movlb	0	; () banked
 21495  00B31A  5166               	movf	?_strncmp& (0+255),w,b
 21496  00B31C  1167               	iorwf	(?_strncmp+1)& (0+255),w,b
 21497  00B31E  A4D8               	btfss	status,2,c
 21498  00B320  D005               	goto	l2741
 21499                           
 21500                           ; BSR set to: 0
 21501  00B322  C06F  F06F         	movff	strstr@s1,?_strstr
 21502  00B326  C070  F070         	movff	strstr@s1+1,?_strstr+1
 21503                           
 21504                           ; BSR set to: 0
 21505  00B32A  0012               	return	
 21506  00B32C                     l2741:
 21507                           
 21508                           ; BSR set to: 0
 21509                           
 21510                           ; BSR set to: 0
 21511  00B32C  0E01               	movlw	1
 21512  00B32E  256F               	addwf	strstr@s1& (0+255),w,b
 21513  00B330  6F60               	movwf	strchr@ptr& (0+255),b
 21514  00B332  0E00               	movlw	0
 21515  00B334  2170               	addwfc	(strstr@s1+1)& (0+255),w,b
 21516  00B336  6F61               	movwf	(strchr@ptr+1)& (0+255),b
 21517  00B338  C071  FFF6         	movff	strstr@s2,tblptrl
 21518  00B33C  C072  FFF7         	movff	strstr@s2+1,tblptrh
 21519  00B340                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21520  00B340  6AF8               	clrf	tblptru,c
 21521  00B342                     	endif
 21522  00B342                     	if	0	;tblptru may be non-zero
 21523  00B342                     	endif
 21524  00B342  0008               	tblrd		*
 21525  00B344  50F5               	movf	tablat,w,c
 21526  00B346  6F62               	movwf	strchr@chr& (0+255),b
 21527  00B348  6B63               	clrf	(strchr@chr+1)& (0+255),b
 21528  00B34A  EC80  F052         	call	_strchr	;wreg free
 21529  00B34E  C060  F06F         	movff	?_strchr,strstr@s1
 21530  00B352  C061  F070         	movff	?_strchr+1,strstr@s1+1
 21531  00B356                     l2739:
 21532  00B356  0100               	movlb	0	; () banked
 21533  00B358  516F               	movf	strstr@s1& (0+255),w,b
 21534  00B35A  1170               	iorwf	(strstr@s1+1)& (0+255),w,b
 21535  00B35C  B4D8               	btfsc	status,2,c
 21536  00B35E  D007               	goto	u6240
 21537                           
 21538                           ; BSR set to: 0
 21539  00B360  C06F  FFD9         	movff	strstr@s1,fsr2l
 21540  00B364  C070  FFDA         	movff	strstr@s1+1,fsr2h
 21541  00B368  50DF               	movf	indf2,w,c
 21542  00B36A  A4D8               	btfss	status,2,c
 21543  00B36C  D7C1               	goto	l2740
 21544  00B36E                     u6240:
 21545                           
 21546                           ; BSR set to: 0
 21547                           
 21548                           ; BSR set to: 0
 21549                           
 21550                           ; BSR set to: 0
 21551  00B36E  0E00               	movlw	0
 21552  00B370  6F6F               	movwf	?_strstr& (0+255),b
 21553  00B372  0E00               	movlw	0
 21554  00B374  6F70               	movwf	(?_strstr+1)& (0+255),b
 21555  00B376  0012               	return	
 21556  00B378                     __end_of_strstr:
 21557                           	opt stack 0
 21558                           tosu	equ	0xFFF
 21559                           tosh	equ	0xFFE
 21560                           tosl	equ	0xFFD
 21561                           pclath	equ	0xFFA
 21562                           tblptru	equ	0xFF8
 21563                           tblptrh	equ	0xFF7
 21564                           tblptrl	equ	0xFF6
 21565                           tablat	equ	0xFF5
 21566                           prodh	equ	0xFF4
 21567                           prodl	equ	0xFF3
 21568                           intcon	equ	0xFF2
 21569                           intcon2	equ	0xFF1
 21570                           intcon3	equ	0xFF0
 21571                           indf0	equ	0xFEF
 21572                           postinc0	equ	0xFEE
 21573                           plusw0	equ	0xFEB
 21574                           fsr0h	equ	0xFEA
 21575                           fsr0l	equ	0xFE9
 21576                           wreg	equ	0xFE8
 21577                           indf1	equ	0xFE7
 21578                           postinc1	equ	0xFE6
 21579                           postdec1	equ	0xFE5
 21580                           fsr1h	equ	0xFE2
 21581                           fsr1l	equ	0xFE1
 21582                           indf2	equ	0xFDF
 21583                           postinc2	equ	0xFDE
 21584                           postdec2	equ	0xFDD
 21585                           plusw2	equ	0xFDB
 21586                           fsr2h	equ	0xFDA
 21587                           fsr2l	equ	0xFD9
 21588                           status	equ	0xFD8
 21589                           
 21590 ;; *************** function _strncmp *****************
 21591 ;; Defined at:
 21592 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 21593 ;; Parameters:    Size  Location     Type
 21594 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 21595 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(250), 
 21596 ;;		 -> WifiRxPacket(253), 
 21597 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 21598 ;;		 -> STR_18(2), STR_14(8), STR_2(5), STR_1(6), 
 21599 ;;  len             2   10[BANK0 ] unsigned int 
 21600 ;; Auto vars:     Size  Location     Type
 21601 ;;		None
 21602 ;; Return value:  Size  Location     Type
 21603 ;;                  2    6[BANK0 ] int 
 21604 ;; Registers used:
 21605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21606 ;; Tracked objects:
 21607 ;;		On entry : 0/0
 21608 ;;		On exit  : 0/0
 21609 ;;		Unchanged: 0/0
 21610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21611 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21613 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21614 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21615 ;;Total ram usage:        9 bytes
 21616 ;; Hardware stack levels used:    1
 21617 ;; Hardware stack levels required when called:   11
 21618 ;; This function calls:
 21619 ;;		Nothing
 21620 ;; This function is called by:
 21621 ;;		_strstr
 21622 ;; This function uses a non-reentrant model
 21623 ;;
 21624                           
 21625                           	psect	text97
 21626  00B378                     __ptext97:
 21627                           	opt stack 0
 21628  00B378                     _strncmp:
 21629                           	opt stack 14
 21630                           
 21631                           ; BSR set to: 0
 21632                           ;incstack = 0
 21633  00B378  D037               	goto	l2828
 21634  00B37A                     l7592:
 21635  00B37A  C066  FFD9         	movff	strncmp@s1,fsr2l
 21636  00B37E  C067  FFDA         	movff	strncmp@s1+1,fsr2h
 21637  00B382  50DF               	movf	indf2,w,c
 21638  00B384  B4D8               	btfsc	status,2,c
 21639  00B386  D011               	goto	u5920
 21640  00B388  C066  FFD9         	movff	strncmp@s1,fsr2l
 21641  00B38C  C067  FFDA         	movff	strncmp@s1+1,fsr2h
 21642  00B390  50DF               	movf	indf2,w,c
 21643  00B392  0100               	movlb	0	; () banked
 21644  00B394  6F6C               	movwf	??_strncmp& (0+255),b
 21645  00B396  C068  FFF6         	movff	strncmp@s2,tblptrl
 21646  00B39A  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21647  00B39E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21648  00B39E  6AF8               	clrf	tblptru,c
 21649  00B3A0                     	endif
 21650  00B3A0                     	if	0	;tblptru may be non-zero
 21651  00B3A0                     	endif
 21652  00B3A0  0008               	tblrd		*
 21653  00B3A2  50F5               	movf	tablat,w,c
 21654  00B3A4  196C               	xorwf	??_strncmp& (0+255),w,b
 21655  00B3A6  B4D8               	btfsc	status,2,c
 21656  00B3A8  D01B               	goto	l2830
 21657  00B3AA                     u5920:
 21658                           
 21659                           ; BSR set to: 0
 21660  00B3AA  C068  FFF6         	movff	strncmp@s2,tblptrl
 21661  00B3AE  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21662  00B3B2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21663  00B3B2  6AF8               	clrf	tblptru,c
 21664  00B3B4                     	endif
 21665  00B3B4                     	if	0	;tblptru may be non-zero
 21666  00B3B4                     	endif
 21667  00B3B4  0008               	tblrd		*
 21668  00B3B6  50F5               	movf	tablat,w,c
 21669  00B3B8  0100               	movlb	0	; () banked
 21670  00B3BA  6F6C               	movwf	??_strncmp& (0+255),b
 21671  00B3BC  6B6D               	clrf	(??_strncmp+1)& (0+255),b
 21672  00B3BE  1F6C               	comf	??_strncmp& (0+255),f,b
 21673  00B3C0  1F6D               	comf	(??_strncmp+1)& (0+255),f,b
 21674  00B3C2  4B6C               	infsnz	??_strncmp& (0+255),f,b
 21675  00B3C4  2B6D               	incf	(??_strncmp+1)& (0+255),f,b
 21676  00B3C6  C066  FFD9         	movff	strncmp@s1,fsr2l
 21677  00B3CA  C067  FFDA         	movff	strncmp@s1+1,fsr2h
 21678  00B3CE  50DF               	movf	indf2,w,c
 21679  00B3D0  6F6E               	movwf	(??_strncmp+2)& (0+255),b
 21680  00B3D2  516E               	movf	(??_strncmp+2)& (0+255),w,b
 21681  00B3D4  256C               	addwf	??_strncmp& (0+255),w,b
 21682  00B3D6  6F66               	movwf	?_strncmp& (0+255),b
 21683  00B3D8  0E00               	movlw	0
 21684  00B3DA  216D               	addwfc	(??_strncmp+1)& (0+255),w,b
 21685  00B3DC  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21686                           
 21687                           ; BSR set to: 0
 21688  00B3DE  0012               	return	
 21689  00B3E0                     l2830:
 21690                           
 21691                           ; BSR set to: 0
 21692                           
 21693                           ; BSR set to: 0
 21694  00B3E0  4B66               	infsnz	strncmp@s1& (0+255),f,b
 21695  00B3E2  2B67               	incf	(strncmp@s1+1)& (0+255),f,b
 21696  00B3E4  4B68               	infsnz	strncmp@s2& (0+255),f,b
 21697  00B3E6  2B69               	incf	(strncmp@s2+1)& (0+255),f,b
 21698  00B3E8                     l2828:
 21699                           
 21700                           ; BSR set to: 0
 21701  00B3E8  0100               	movlb	0	; () banked
 21702  00B3EA  076A               	decf	strncmp@len& (0+255),f,b
 21703  00B3EC  A0D8               	btfss	status,0,c
 21704  00B3EE  076B               	decf	(strncmp@len+1)& (0+255),f,b
 21705  00B3F0  296A               	incf	strncmp@len& (0+255),w,b
 21706  00B3F2  E1C3               	bnz	l7592
 21707  00B3F4  296B               	incf	(strncmp@len+1)& (0+255),w,b
 21708  00B3F6  A4D8               	btfss	status,2,c
 21709  00B3F8  D7C0               	goto	l2829
 21710                           
 21711                           ; BSR set to: 0
 21712                           
 21713                           ; BSR set to: 0
 21714  00B3FA  0E00               	movlw	0
 21715  00B3FC  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21716  00B3FE  0E00               	movlw	0
 21717  00B400  6F66               	movwf	?_strncmp& (0+255),b
 21718  00B402  0012               	return	
 21719  00B404                     __end_of_strncmp:
 21720                           	opt stack 0
 21721                           tosu	equ	0xFFF
 21722                           tosh	equ	0xFFE
 21723                           tosl	equ	0xFFD
 21724                           pclath	equ	0xFFA
 21725                           tblptru	equ	0xFF8
 21726                           tblptrh	equ	0xFF7
 21727                           tblptrl	equ	0xFF6
 21728                           tablat	equ	0xFF5
 21729                           prodh	equ	0xFF4
 21730                           prodl	equ	0xFF3
 21731                           intcon	equ	0xFF2
 21732                           intcon2	equ	0xFF1
 21733                           intcon3	equ	0xFF0
 21734                           indf0	equ	0xFEF
 21735                           postinc0	equ	0xFEE
 21736                           plusw0	equ	0xFEB
 21737                           fsr0h	equ	0xFEA
 21738                           fsr0l	equ	0xFE9
 21739                           wreg	equ	0xFE8
 21740                           indf1	equ	0xFE7
 21741                           postinc1	equ	0xFE6
 21742                           postdec1	equ	0xFE5
 21743                           fsr1h	equ	0xFE2
 21744                           fsr1l	equ	0xFE1
 21745                           indf2	equ	0xFDF
 21746                           postinc2	equ	0xFDE
 21747                           postdec2	equ	0xFDD
 21748                           plusw2	equ	0xFDB
 21749                           fsr2h	equ	0xFDA
 21750                           fsr2l	equ	0xFD9
 21751                           status	equ	0xFD8
 21752                           
 21753 ;; *************** function _strlen *****************
 21754 ;; Defined at:
 21755 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 21756 ;; Parameters:    Size  Location     Type
 21757 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 21758 ;;		 -> Term_MainSm@Data(50), STR_18(2), STR_14(8), STR_2(5), 
 21759 ;;		 -> STR_1(6), 
 21760 ;; Auto vars:     Size  Location     Type
 21761 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 21762 ;;		 -> Term_MainSm@Data(50), STR_18(2), STR_14(8), STR_2(5), 
 21763 ;;		 -> STR_1(6), 
 21764 ;; Return value:  Size  Location     Type
 21765 ;;                  2    0[BANK0 ] unsigned int 
 21766 ;; Registers used:
 21767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21768 ;; Tracked objects:
 21769 ;;		On entry : 0/0
 21770 ;;		On exit  : 0/0
 21771 ;;		Unchanged: 0/0
 21772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21773 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21774 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21775 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21776 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21777 ;;Total ram usage:        6 bytes
 21778 ;; Hardware stack levels used:    1
 21779 ;; Hardware stack levels required when called:   11
 21780 ;; This function calls:
 21781 ;;		Nothing
 21782 ;; This function is called by:
 21783 ;;		_Term_MainSm
 21784 ;;		_strstr
 21785 ;; This function uses a non-reentrant model
 21786 ;;
 21787                           
 21788                           	psect	text98
 21789  00AB06                     __ptext98:
 21790                           	opt stack 0
 21791  00AB06                     _strlen:
 21792                           	opt stack 15
 21793                           
 21794                           ; BSR set to: 0
 21795                           ;incstack = 0
 21796  00AB06  C060  F064         	movff	strlen@s,strlen@cp
 21797  00AB0A  C061  F065         	movff	strlen@s+1,strlen@cp+1
 21798  00AB0E  D003               	goto	l2727
 21799  00AB10  0100               	movlb	0	; () banked
 21800  00AB12  4B64               	infsnz	strlen@cp& (0+255),f,b
 21801  00AB14  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 21802  00AB16                     l2727:
 21803                           
 21804                           ; BSR set to: 0
 21805  00AB16  C064  FFF6         	movff	strlen@cp,tblptrl
 21806  00AB1A  C065  FFF7         	movff	strlen@cp+1,tblptrh
 21807  00AB1E  6AF8               	clrf	tblptru,c
 21808  00AB20  0E0E               	movlw	(high __ramtop+-1)
 21809  00AB22  64F7               	cpfsgt	tblptrh,c
 21810  00AB24  D003               	bra	u5747
 21811  00AB26  0008               	tblrd		*
 21812  00AB28  50F5               	movf	tablat,w,c
 21813  00AB2A  D005               	bra	u5740
 21814  00AB2C                     u5747:
 21815  00AB2C  CFF6 FFE9          	movff	tblptrl,fsr0l
 21816  00AB30  CFF7 FFEA          	movff	tblptrh,fsr0h
 21817  00AB34  50EF               	movf	indf0,w,c
 21818  00AB36                     u5740:
 21819  00AB36  0900               	iorlw	0
 21820  00AB38  A4D8               	btfss	status,2,c
 21821  00AB3A  D7EA               	goto	l2728
 21822  00AB3C  C060  F062         	movff	strlen@s,??_strlen
 21823  00AB40  C061  F063         	movff	strlen@s+1,??_strlen+1
 21824  00AB44  0100               	movlb	0	; () banked
 21825  00AB46  1F62               	comf	??_strlen& (0+255),f,b
 21826  00AB48  1F63               	comf	(??_strlen+1)& (0+255),f,b
 21827  00AB4A  4B62               	infsnz	??_strlen& (0+255),f,b
 21828  00AB4C  2B63               	incf	(??_strlen+1)& (0+255),f,b
 21829  00AB4E  5164               	movf	strlen@cp& (0+255),w,b
 21830  00AB50  2562               	addwf	??_strlen& (0+255),w,b
 21831  00AB52  6F60               	movwf	?_strlen& (0+255),b
 21832  00AB54  5165               	movf	(strlen@cp+1)& (0+255),w,b
 21833  00AB56  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 21834  00AB58  6F61               	movwf	(?_strlen+1)& (0+255),b
 21835  00AB5A  0012               	return	
 21836  00AB5C                     __end_of_strlen:
 21837                           	opt stack 0
 21838                           tosu	equ	0xFFF
 21839                           tosh	equ	0xFFE
 21840                           tosl	equ	0xFFD
 21841                           pclath	equ	0xFFA
 21842                           tblptru	equ	0xFF8
 21843                           tblptrh	equ	0xFF7
 21844                           tblptrl	equ	0xFF6
 21845                           tablat	equ	0xFF5
 21846                           prodh	equ	0xFF4
 21847                           prodl	equ	0xFF3
 21848                           intcon	equ	0xFF2
 21849                           intcon2	equ	0xFF1
 21850                           intcon3	equ	0xFF0
 21851                           indf0	equ	0xFEF
 21852                           postinc0	equ	0xFEE
 21853                           plusw0	equ	0xFEB
 21854                           fsr0h	equ	0xFEA
 21855                           fsr0l	equ	0xFE9
 21856                           wreg	equ	0xFE8
 21857                           indf1	equ	0xFE7
 21858                           postinc1	equ	0xFE6
 21859                           postdec1	equ	0xFE5
 21860                           fsr1h	equ	0xFE2
 21861                           fsr1l	equ	0xFE1
 21862                           indf2	equ	0xFDF
 21863                           postinc2	equ	0xFDE
 21864                           postdec2	equ	0xFDD
 21865                           plusw2	equ	0xFDB
 21866                           fsr2h	equ	0xFDA
 21867                           fsr2l	equ	0xFD9
 21868                           status	equ	0xFD8
 21869                           
 21870 ;; *************** function _strchr *****************
 21871 ;; Defined at:
 21872 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 21873 ;; Parameters:    Size  Location     Type
 21874 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 21875 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(250), 
 21876 ;;		 -> WifiRxPacket(253), 
 21877 ;;  chr             2    2[BANK0 ] int 
 21878 ;; Auto vars:     Size  Location     Type
 21879 ;;		None
 21880 ;; Return value:  Size  Location     Type
 21881 ;;                  2    0[BANK0 ] PTR unsigned char 
 21882 ;; Registers used:
 21883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21884 ;; Tracked objects:
 21885 ;;		On entry : 0/0
 21886 ;;		On exit  : 0/0
 21887 ;;		Unchanged: 0/0
 21888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21889 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21891 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21892 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21893 ;;Total ram usage:        5 bytes
 21894 ;; Hardware stack levels used:    1
 21895 ;; Hardware stack levels required when called:   11
 21896 ;; This function calls:
 21897 ;;		Nothing
 21898 ;; This function is called by:
 21899 ;;		_strstr
 21900 ;; This function uses a non-reentrant model
 21901 ;;
 21902                           
 21903                           	psect	text99
 21904  00A500                     __ptext99:
 21905                           	opt stack 0
 21906  00A500                     _strchr:
 21907                           	opt stack 14
 21908                           
 21909                           ; BSR set to: 0
 21910                           ;incstack = 0
 21911  00A500  C060  FFD9         	movff	strchr@ptr,fsr2l
 21912  00A504  C061  FFDA         	movff	strchr@ptr+1,fsr2h
 21913  00A508  0100               	movlb	0	; () banked
 21914  00A50A  5162               	movf	strchr@chr& (0+255),w,b
 21915  00A50C  18DE               	xorwf	postinc2,w,c
 21916  00A50E  A4D8               	btfss	status,2,c
 21917  00A510  D005               	goto	l2823
 21918                           
 21919                           ; BSR set to: 0
 21920  00A512  C060  F060         	movff	strchr@ptr,?_strchr
 21921  00A516  C061  F061         	movff	strchr@ptr+1,?_strchr+1
 21922                           
 21923                           ; BSR set to: 0
 21924  00A51A  0012               	return	
 21925  00A51C                     l2823:
 21926                           
 21927                           ; BSR set to: 0
 21928                           
 21929                           ; BSR set to: 0
 21930  00A51C  C060  FFD9         	movff	strchr@ptr,fsr2l
 21931  00A520  C061  FFDA         	movff	strchr@ptr+1,fsr2h
 21932  00A524  4B60               	infsnz	strchr@ptr& (0+255),f,b
 21933  00A526  2B61               	incf	(strchr@ptr+1)& (0+255),f,b
 21934  00A528  50DF               	movf	indf2,w,c
 21935  00A52A  A4D8               	btfss	status,2,c
 21936  00A52C  D7E9               	goto	_strchr
 21937                           
 21938                           ; BSR set to: 0
 21939                           
 21940                           ; BSR set to: 0
 21941  00A52E  0E00               	movlw	0
 21942  00A530  6F60               	movwf	?_strchr& (0+255),b
 21943  00A532  0E00               	movlw	0
 21944  00A534  6F61               	movwf	(?_strchr+1)& (0+255),b
 21945  00A536  0012               	return	
 21946  00A538                     __end_of_strchr:
 21947                           	opt stack 0
 21948                           tosu	equ	0xFFF
 21949                           tosh	equ	0xFFE
 21950                           tosl	equ	0xFFD
 21951                           pclath	equ	0xFFA
 21952                           tblptru	equ	0xFF8
 21953                           tblptrh	equ	0xFF7
 21954                           tblptrl	equ	0xFF6
 21955                           tablat	equ	0xFF5
 21956                           prodh	equ	0xFF4
 21957                           prodl	equ	0xFF3
 21958                           intcon	equ	0xFF2
 21959                           intcon2	equ	0xFF1
 21960                           intcon3	equ	0xFF0
 21961                           indf0	equ	0xFEF
 21962                           postinc0	equ	0xFEE
 21963                           plusw0	equ	0xFEB
 21964                           fsr0h	equ	0xFEA
 21965                           fsr0l	equ	0xFE9
 21966                           wreg	equ	0xFE8
 21967                           indf1	equ	0xFE7
 21968                           postinc1	equ	0xFE6
 21969                           postdec1	equ	0xFE5
 21970                           fsr1h	equ	0xFE2
 21971                           fsr1l	equ	0xFE1
 21972                           indf2	equ	0xFDF
 21973                           postinc2	equ	0xFDE
 21974                           postdec2	equ	0xFDD
 21975                           plusw2	equ	0xFDB
 21976                           fsr2h	equ	0xFDA
 21977                           fsr2l	equ	0xFD9
 21978                           status	equ	0xFD8
 21979                           
 21980 ;; *************** function _strcpy *****************
 21981 ;; Defined at:
 21982 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 21983 ;; Parameters:    Size  Location     Type
 21984 ;;  to              2    0[BANK0 ] PTR unsigned char 
 21985 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 21986 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 21987 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), BufferLocal(100), SendDataSm@Data(103), AddressLocal(25), 
 21988 ;;		 -> StartConnectionSm@Data(100), 
 21989 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 21990 ;;		 -> STR_62(21), STR_58(20), STR_53(14), STR_49(10), 
 21991 ;;		 -> STR_43(10), STR_41(13), STR_40(12), STR_36(11), 
 21992 ;;		 -> STR_32(12), STR_26(10), STR_21(11), BufferLocal(100), 
 21993 ;;		 -> STR_15(12), STR_3(13), 
 21994 ;; Auto vars:     Size  Location     Type
 21995 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 21996 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 21997 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 21998 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), BufferLocal(100), SendDataSm@Data(103), AddressLocal(25), 
 21999 ;;		 -> StartConnectionSm@Data(100), 
 22000 ;; Return value:  Size  Location     Type
 22001 ;;                  2    0[BANK0 ] PTR unsigned char 
 22002 ;; Registers used:
 22003 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22004 ;; Tracked objects:
 22005 ;;		On entry : 0/0
 22006 ;;		On exit  : 0/0
 22007 ;;		Unchanged: 0/0
 22008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22009 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22010 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22012 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22013 ;;Total ram usage:        6 bytes
 22014 ;; Hardware stack levels used:    1
 22015 ;; Hardware stack levels required when called:   11
 22016 ;; This function calls:
 22017 ;;		Nothing
 22018 ;; This function is called by:
 22019 ;;		_StartConnectionSm
 22020 ;;		_SendDataSm
 22021 ;;		_Term_MainSm
 22022 ;;		_MdmWifiCmd_SetWifiMode
 22023 ;;		_MdmWifiCmd_JoinAccessPoint
 22024 ;;		_MdmWifiCmd_SetTransferMode
 22025 ;;		_MdmWifiCmd_SetConnectionMode
 22026 ;;		_MdmWifiCmd_StartConnection
 22027 ;;		_MdmWifiCmd_SendData
 22028 ;;		_MdmWifiCmd_CloseConnection
 22029 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 22030 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 22031 ;;		_MdmWifiCmd_ConfigureServer
 22032 ;; This function uses a non-reentrant model
 22033 ;;
 22034                           
 22035                           	psect	text100
 22036  00A800                     __ptext100:
 22037                           	opt stack 0
 22038  00A800                     _strcpy:
 22039                           	opt stack 15
 22040                           
 22041                           ; BSR set to: 0
 22042                           ;incstack = 0
 22043  00A800  C060  F064         	movff	strcpy@to,strcpy@cp
 22044  00A804  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 22045  00A808  D005               	goto	l2721
 22046  00A80A  0100               	movlb	0	; () banked
 22047  00A80C  4B64               	infsnz	strcpy@cp& (0+255),f,b
 22048  00A80E  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 22049  00A810  4B62               	infsnz	strcpy@from& (0+255),f,b
 22050  00A812  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 22051  00A814                     l2721:
 22052                           
 22053                           ; BSR set to: 0
 22054  00A814  C062  FFF6         	movff	strcpy@from,tblptrl
 22055  00A818  C063  FFF7         	movff	strcpy@from+1,tblptrh
 22056  00A81C  6AF8               	clrf	tblptru,c
 22057  00A81E  C064  FFD9         	movff	strcpy@cp,fsr2l
 22058  00A822  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 22059  00A826  0E0E               	movlw	(high __ramtop+-1)
 22060  00A828  64F7               	cpfsgt	tblptrh,c
 22061  00A82A  D003               	bra	u6267
 22062  00A82C  0008               	tblrd		*
 22063  00A82E  50F5               	movf	tablat,w,c
 22064  00A830  D005               	bra	u6260
 22065  00A832                     u6267:
 22066  00A832  CFF6 FFE9          	movff	tblptrl,fsr0l
 22067  00A836  CFF7 FFEA          	movff	tblptrh,fsr0h
 22068  00A83A  50EF               	movf	indf0,w,c
 22069  00A83C                     u6260:
 22070  00A83C  6EDF               	movwf	indf2,c
 22071  00A83E  50DF               	movf	indf2,w,c
 22072  00A840  B4D8               	btfsc	status,2,c
 22073  00A842  0012               	return	
 22074  00A844  D7E2               	goto	l2722
 22075  00A846                     __end_of_strcpy:
 22076                           	opt stack 0
 22077                           tosu	equ	0xFFF
 22078                           tosh	equ	0xFFE
 22079                           tosl	equ	0xFFD
 22080                           pclath	equ	0xFFA
 22081                           tblptru	equ	0xFF8
 22082                           tblptrh	equ	0xFF7
 22083                           tblptrl	equ	0xFF6
 22084                           tablat	equ	0xFF5
 22085                           prodh	equ	0xFF4
 22086                           prodl	equ	0xFF3
 22087                           intcon	equ	0xFF2
 22088                           intcon2	equ	0xFF1
 22089                           intcon3	equ	0xFF0
 22090                           indf0	equ	0xFEF
 22091                           postinc0	equ	0xFEE
 22092                           plusw0	equ	0xFEB
 22093                           fsr0h	equ	0xFEA
 22094                           fsr0l	equ	0xFE9
 22095                           wreg	equ	0xFE8
 22096                           indf1	equ	0xFE7
 22097                           postinc1	equ	0xFE6
 22098                           postdec1	equ	0xFE5
 22099                           fsr1h	equ	0xFE2
 22100                           fsr1l	equ	0xFE1
 22101                           indf2	equ	0xFDF
 22102                           postinc2	equ	0xFDE
 22103                           postdec2	equ	0xFDD
 22104                           plusw2	equ	0xFDB
 22105                           fsr2h	equ	0xFDA
 22106                           fsr2l	equ	0xFD9
 22107                           status	equ	0xFD8
 22108                           
 22109 ;; *************** function _strcat *****************
 22110 ;; Defined at:
 22111 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 22112 ;; Parameters:    Size  Location     Type
 22113 ;;  to              2    0[BANK0 ] PTR unsigned char 
 22114 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 22115 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 22116 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22117 ;;  from            3    2[BANK0 ] PTR const unsigned char 
 22118 ;;		 -> STR_65(3), STR_64(2), STR_63(2), Term_MainSm@FwkBuildYearStr(4), 
 22119 ;;		 -> Term_MainSm@FwkBuildMonthStr(4), Term_MainSm@FwkBuildDayStr(4), STR_61(3), STR_60(2), 
 22120 ;;		 -> STR_59(2), Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 22121 ;;		 -> STR_57(3), MdmWifiCmd_ConfigureServer@PortAscii(10), STR_56(2), STR_55(2), 
 22122 ;;		 -> STR_54(2), STR_52(3), STR_51(2), STR_50(2), 
 22123 ;;		 -> STR_48(3), MdmWifiCmd_ConfigureSoftAPMode@EncAscii(5), STR_47(2), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(5), 
 22124 ;;		 -> STR_46(3), STR_45(4), STR_44(2), STR_42(3), 
 22125 ;;		 -> MdmWifiCmd_CloseConnection@IdAscii(1), STR_39(3), STR_38(2), STR_37(2), 
 22126 ;;		 -> STR_35(3), STR_34(2), STR_33(2), STR_30(3), 
 22127 ;;		 -> STR_29(2), STR_28(4), STR_27(2), STR_25(3), 
 22128 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_19(3), 
 22129 ;;		 -> STR_17(3), SendDataSm@LenAscii(4), STR_16(2), SendDataSm@IdAscii(1), 
 22130 ;;		 -> ROM(65527), STR_13(3), STR_12(2), StartConnectionSm@PortAscii(4), 
 22131 ;;		 -> STR_11(2), AddressLocal(25), STR_10(2), STR_9(2), 
 22132 ;;		 -> STR_8(2), STR_7(4), STR_6(4), STR_5(2), 
 22133 ;;		 -> STR_4(2), StartConnectionSm@IdAscii(1), 
 22134 ;; Auto vars:     Size  Location     Type
 22135 ;;  cp              2    5[BANK0 ] PTR unsigned char 
 22136 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 22137 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 22138 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22139 ;; Return value:  Size  Location     Type
 22140 ;;                  2    0[BANK0 ] PTR unsigned char 
 22141 ;; Registers used:
 22142 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22143 ;; Tracked objects:
 22144 ;;		On entry : 0/0
 22145 ;;		On exit  : 0/0
 22146 ;;		Unchanged: 0/0
 22147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22148 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22149 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22151 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22152 ;;Total ram usage:        7 bytes
 22153 ;; Hardware stack levels used:    1
 22154 ;; Hardware stack levels required when called:   11
 22155 ;; This function calls:
 22156 ;;		Nothing
 22157 ;; This function is called by:
 22158 ;;		_StartConnectionSm
 22159 ;;		_SendDataSm
 22160 ;;		_Term_MainSm
 22161 ;;		_MdmWifiCmd_SetWifiMode
 22162 ;;		_MdmWifiCmd_JoinAccessPoint
 22163 ;;		_MdmWifiCmd_SetTransferMode
 22164 ;;		_MdmWifiCmd_SetConnectionMode
 22165 ;;		_MdmWifiCmd_CloseConnection
 22166 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 22167 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 22168 ;;		_MdmWifiCmd_ConfigureServer
 22169 ;; This function uses a non-reentrant model
 22170 ;;
 22171                           
 22172                           	psect	text101
 22173  00AD82                     __ptext101:
 22174                           	opt stack 0
 22175  00AD82                     _strcat:
 22176                           	opt stack 15
 22177                           
 22178                           ;incstack = 0
 22179  00AD82  C060  F065         	movff	strcat@to,strcat@cp
 22180  00AD86  C061  F066         	movff	strcat@to+1,strcat@cp+1
 22181  00AD8A  D003               	goto	l2712
 22182  00AD8C  0100               	movlb	0	; () banked
 22183  00AD8E  4B65               	infsnz	strcat@cp& (0+255),f,b
 22184  00AD90  2B66               	incf	(strcat@cp+1)& (0+255),f,b
 22185  00AD92                     l2712:
 22186                           
 22187                           ; BSR set to: 0
 22188  00AD92  C065  FFD9         	movff	strcat@cp,fsr2l
 22189  00AD96  C066  FFDA         	movff	strcat@cp+1,fsr2h
 22190  00AD9A  50DF               	movf	indf2,w,c
 22191  00AD9C  B4D8               	btfsc	status,2,c
 22192  00AD9E  D00A               	goto	l2715
 22193  00ADA0  D7F5               	goto	l2713
 22194  00ADA2  0100               	movlb	0	; () banked
 22195  00ADA4  4B65               	infsnz	strcat@cp& (0+255),f,b
 22196  00ADA6  2B66               	incf	(strcat@cp+1)& (0+255),f,b
 22197                           
 22198                           ; BSR set to: 0
 22199  00ADA8  0E01               	movlw	1
 22200  00ADAA  2762               	addwf	strcat@from& (0+255),f,b
 22201  00ADAC  0E00               	movlw	0
 22202  00ADAE  2363               	addwfc	(strcat@from+1)& (0+255),f,b
 22203  00ADB0  0E00               	movlw	0
 22204  00ADB2  2364               	addwfc	(strcat@from+2)& (0+255),f,b
 22205  00ADB4                     l2715:
 22206                           
 22207                           ; BSR set to: 0
 22208  00ADB4  C062  FFF6         	movff	strcat@from,tblptrl
 22209  00ADB8  C063  FFF7         	movff	strcat@from+1,tblptrh
 22210  00ADBC  C064  FFF8         	movff	strcat@from+2,tblptru
 22211  00ADC0  C065  FFD9         	movff	strcat@cp,fsr2l
 22212  00ADC4  C066  FFDA         	movff	strcat@cp+1,fsr2h
 22213  00ADC8  BAF8               	btfsc	tblptru,5,c
 22214  00ADCA  D003               	bra	u6297
 22215  00ADCC  0008               	tblrd		*
 22216  00ADCE  50F5               	movf	tablat,w,c
 22217  00ADD0  D005               	bra	u6290
 22218  00ADD2                     u6297:
 22219  00ADD2  CFF6 FFE9          	movff	tblptrl,fsr0l
 22220  00ADD6  CFF7 FFEA          	movff	tblptrh,fsr0h
 22221  00ADDA  50EF               	movf	indf0,w,c
 22222  00ADDC                     u6290:
 22223  00ADDC  6EDF               	movwf	indf2,c
 22224  00ADDE  50DF               	movf	indf2,w,c
 22225  00ADE0  B4D8               	btfsc	status,2,c
 22226  00ADE2  0012               	return	
 22227  00ADE4  D7DE               	goto	l2716
 22228  00ADE6                     __end_of_strcat:
 22229                           	opt stack 0
 22230                           tosu	equ	0xFFF
 22231                           tosh	equ	0xFFE
 22232                           tosl	equ	0xFFD
 22233                           pclath	equ	0xFFA
 22234                           tblptru	equ	0xFF8
 22235                           tblptrh	equ	0xFF7
 22236                           tblptrl	equ	0xFF6
 22237                           tablat	equ	0xFF5
 22238                           prodh	equ	0xFF4
 22239                           prodl	equ	0xFF3
 22240                           intcon	equ	0xFF2
 22241                           intcon2	equ	0xFF1
 22242                           intcon3	equ	0xFF0
 22243                           indf0	equ	0xFEF
 22244                           postinc0	equ	0xFEE
 22245                           plusw0	equ	0xFEB
 22246                           fsr0h	equ	0xFEA
 22247                           fsr0l	equ	0xFE9
 22248                           wreg	equ	0xFE8
 22249                           indf1	equ	0xFE7
 22250                           postinc1	equ	0xFE6
 22251                           postdec1	equ	0xFE5
 22252                           fsr1h	equ	0xFE2
 22253                           fsr1l	equ	0xFE1
 22254                           indf2	equ	0xFDF
 22255                           postinc2	equ	0xFDE
 22256                           postdec2	equ	0xFDD
 22257                           plusw2	equ	0xFDB
 22258                           fsr2h	equ	0xFDA
 22259                           fsr2l	equ	0xFD9
 22260                           status	equ	0xFD8
 22261                           
 22262 ;; *************** function _OsTmr_GetTimerStatus *****************
 22263 ;; Defined at:
 22264 ;;		line 151 in file "../Source/c/02_Osl/os_timers.c"
 22265 ;; Parameters:    Size  Location     Type
 22266 ;;  Timer           2   24[BANK0 ] PTR struct _SwTimerType
 22267 ;;		 -> Term_MainSm@TermDelay(10), SendDataSm@SwTimer(10), 
 22268 ;; Auto vars:     Size  Location     Type
 22269 ;;		None
 22270 ;; Return value:  Size  Location     Type
 22271 ;;                  1    wreg      enum E7734
 22272 ;; Registers used:
 22273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22274 ;; Tracked objects:
 22275 ;;		On entry : 0/0
 22276 ;;		On exit  : 0/0
 22277 ;;		Unchanged: 0/0
 22278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22279 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22281 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22282 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22283 ;;Total ram usage:        6 bytes
 22284 ;; Hardware stack levels used:    1
 22285 ;; Hardware stack levels required when called:   13
 22286 ;; This function calls:
 22287 ;;		_GetElapsedTime
 22288 ;; This function is called by:
 22289 ;;		_SendDataSm
 22290 ;;		_Term_MainSm
 22291 ;; This function uses a non-reentrant model
 22292 ;;
 22293                           
 22294                           	psect	text102
 22295  00B490                     __ptext102:
 22296                           	opt stack 0
 22297  00B490                     _OsTmr_GetTimerStatus:
 22298                           	opt stack 13
 22299                           
 22300                           ;os_timers.c: 154: if (Timer->Enabled == 1u)
 22301                           
 22302                           ;incstack = 0
 22303  00B490  C078  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 22304  00B494  C079  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 22305  00B498  04DE               	decf	postinc2,w,c
 22306  00B49A  A4D8               	btfss	status,2,c
 22307  00B49C  D030               	goto	l782
 22308                           
 22309                           ;os_timers.c: 155: {
 22310                           ;os_timers.c: 157: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 22311  00B49E  0100               	movlb	0	; () banked
 22312  00B4A0  EE20 F006          	lfsr	2,6
 22313  00B4A4  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22314  00B4A6  26D9               	addwf	fsr2l,f,c
 22315  00B4A8  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22316  00B4AA  22DA               	addwfc	fsr2h,f,c
 22317  00B4AC  EE10 F002          	lfsr	1,2
 22318  00B4B0  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22319  00B4B2  26E1               	addwf	fsr1l,f,c
 22320  00B4B4  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22321  00B4B6  22E2               	addwfc	fsr1h,f,c
 22322  00B4B8  CFE6 F064          	movff	postinc1,GetElapsedTime@StartTime
 22323  00B4BC  CFE6 F065          	movff	postinc1,GetElapsedTime@StartTime+1
 22324  00B4C0  CFE6 F066          	movff	postinc1,GetElapsedTime@StartTime+2
 22325  00B4C4  CFE6 F067          	movff	postinc1,GetElapsedTime@StartTime+3
 22326  00B4C8  ECCA  F05F         	call	_GetElapsedTime	;wreg free
 22327  00B4CC  50DE               	movf	postinc2,w,c
 22328  00B4CE  0100               	movlb	0	; () banked
 22329  00B4D0  5D64               	subwf	?_GetElapsedTime& (0+255),w,b
 22330  00B4D2  50DE               	movf	postinc2,w,c
 22331  00B4D4  5965               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 22332  00B4D6  50DE               	movf	postinc2,w,c
 22333  00B4D8  5966               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 22334  00B4DA  50DE               	movf	postinc2,w,c
 22335  00B4DC  5967               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 22336  00B4DE  A0D8               	btfss	status,0,c
 22337  00B4E0  D017               	goto	l785
 22338                           
 22339                           ; BSR set to: 0
 22340                           ;os_timers.c: 158: {
 22341                           ;os_timers.c: 160: Timer->Enabled = 0u;
 22342  00B4E2  C078  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 22343  00B4E6  C079  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 22344  00B4EA  0E00               	movlw	0
 22345  00B4EC  6EDF               	movwf	indf2,c
 22346                           
 22347                           ; BSR set to: 0
 22348                           ;os_timers.c: 162: Timer->Status = SwTimerExpired;
 22349  00B4EE  EE20 F001          	lfsr	2,1
 22350  00B4F2  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22351  00B4F4  26D9               	addwf	fsr2l,f,c
 22352  00B4F6  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22353  00B4F8  22DA               	addwfc	fsr2h,f,c
 22354  00B4FA  0E01               	movlw	1
 22355  00B4FC  D008               	goto	L45
 22356  00B4FE                     l782:
 22357                           
 22358                           ;os_timers.c: 169: else
 22359                           ;os_timers.c: 170: {
 22360                           ;os_timers.c: 172: Timer->Status = SwTimerDisabled;
 22361                           
 22362                           ; BSR set to: 0
 22363  00B4FE  0100               	movlb	0	; () banked
 22364  00B500  EE20 F001          	lfsr	2,1
 22365  00B504  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22366  00B506  26D9               	addwf	fsr2l,f,c
 22367  00B508  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22368  00B50A  22DA               	addwfc	fsr2h,f,c
 22369  00B50C  0E02               	movlw	2
 22370  00B50E                     L45:
 22371  00B50E  6EDF               	movwf	indf2,c
 22372  00B510                     l785:
 22373                           
 22374                           ; BSR set to: 0
 22375                           ;os_timers.c: 173: }
 22376                           ;os_timers.c: 176: return Timer->Status;
 22377  00B510  EE20 F001          	lfsr	2,1
 22378  00B514  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22379  00B516  26D9               	addwf	fsr2l,f,c
 22380  00B518  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22381  00B51A  22DA               	addwfc	fsr2h,f,c
 22382  00B51C  50DF               	movf	indf2,w,c
 22383  00B51E  0012               	return	
 22384  00B520                     __end_of_OsTmr_GetTimerStatus:
 22385                           	opt stack 0
 22386                           tosu	equ	0xFFF
 22387                           tosh	equ	0xFFE
 22388                           tosl	equ	0xFFD
 22389                           pclath	equ	0xFFA
 22390                           tblptru	equ	0xFF8
 22391                           tblptrh	equ	0xFF7
 22392                           tblptrl	equ	0xFF6
 22393                           tablat	equ	0xFF5
 22394                           prodh	equ	0xFF4
 22395                           prodl	equ	0xFF3
 22396                           intcon	equ	0xFF2
 22397                           intcon2	equ	0xFF1
 22398                           intcon3	equ	0xFF0
 22399                           indf0	equ	0xFEF
 22400                           postinc0	equ	0xFEE
 22401                           plusw0	equ	0xFEB
 22402                           fsr0h	equ	0xFEA
 22403                           fsr0l	equ	0xFE9
 22404                           wreg	equ	0xFE8
 22405                           indf1	equ	0xFE7
 22406                           postinc1	equ	0xFE6
 22407                           postdec1	equ	0xFE5
 22408                           fsr1h	equ	0xFE2
 22409                           fsr1l	equ	0xFE1
 22410                           indf2	equ	0xFDF
 22411                           postinc2	equ	0xFDE
 22412                           postdec2	equ	0xFDD
 22413                           plusw2	equ	0xFDB
 22414                           fsr2h	equ	0xFDA
 22415                           fsr2l	equ	0xFD9
 22416                           status	equ	0xFD8
 22417                           
 22418 ;; *************** function _GetElapsedTime *****************
 22419 ;; Defined at:
 22420 ;;		line 83 in file "../Source/c/02_Osl/os_timers.c"
 22421 ;; Parameters:    Size  Location     Type
 22422 ;;  StartTime       4    4[BANK0 ] unsigned long 
 22423 ;; Auto vars:     Size  Location     Type
 22424 ;;  CurrentTimes    4   20[BANK0 ] unsigned long 
 22425 ;;  TimeValue       4   16[BANK0 ] unsigned long 
 22426 ;; Return value:  Size  Location     Type
 22427 ;;                  4    4[BANK0 ] unsigned long 
 22428 ;; Registers used:
 22429 ;;		wreg, status,2, status,0, cstack
 22430 ;; Tracked objects:
 22431 ;;		On entry : 0/0
 22432 ;;		On exit  : 0/0
 22433 ;;		Unchanged: 0/0
 22434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22435 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22436 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22437 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22438 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22439 ;;Total ram usage:       20 bytes
 22440 ;; Hardware stack levels used:    1
 22441 ;; Hardware stack levels required when called:   12
 22442 ;; This function calls:
 22443 ;;		_GetOsTickCounter
 22444 ;; This function is called by:
 22445 ;;		_OsTmr_GetTimerStatus
 22446 ;;		_OsTmr_GetRemainingTime
 22447 ;; This function uses a non-reentrant model
 22448 ;;
 22449                           
 22450                           	psect	text103
 22451  00BF94                     __ptext103:
 22452                           	opt stack 0
 22453  00BF94                     _GetElapsedTime:
 22454                           	opt stack 13
 22455                           
 22456                           ;os_timers.c: 85: UINT32 CurrentTimestamp;
 22457                           ;os_timers.c: 86: UINT32 TimeValue;
 22458                           ;os_timers.c: 89: CurrentTimestamp = GetOsTickCounter();
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;incstack = 0
 22462  00BF94  ECB6  F04F         	call	_GetOsTickCounter	;wreg free
 22463  00BF98  C060  F074         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 22464  00BF9C  C061  F075         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 22465  00BFA0  C062  F076         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 22466  00BFA4  C063  F077         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 22467                           
 22468                           ;os_timers.c: 92: if (CurrentTimestamp >= StartTime)
 22469  00BFA8  0100               	movlb	0	; () banked
 22470  00BFAA  5164               	movf	GetElapsedTime@StartTime& (0+255),w,b
 22471  00BFAC  5D74               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 22472  00BFAE  5165               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 22473  00BFB0  5975               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 22474  00BFB2  5166               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 22475  00BFB4  5976               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 22476  00BFB6  5167               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 22477  00BFB8  5977               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 22478  00BFBA  A0D8               	btfss	status,0,c
 22479  00BFBC  D01D               	goto	l771
 22480                           
 22481                           ; BSR set to: 0
 22482                           ;os_timers.c: 93: {
 22483                           ;os_timers.c: 94: TimeValue = (CurrentTimestamp - StartTime);
 22484  00BFBE  C064  F068         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 22485  00BFC2  C065  F069         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 22486  00BFC6  C066  F06A         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 22487  00BFCA  C067  F06B         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 22488  00BFCE  1F68               	comf	??_GetElapsedTime& (0+255),f,b
 22489  00BFD0  1F69               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 22490  00BFD2  1F6A               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 22491  00BFD4  1F6B               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 22492  00BFD6  2B68               	incf	??_GetElapsedTime& (0+255),f,b
 22493  00BFD8  0E00               	movlw	0
 22494  00BFDA  2369               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 22495  00BFDC  236A               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 22496  00BFDE  236B               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 22497  00BFE0  5174               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 22498  00BFE2  2568               	addwf	??_GetElapsedTime& (0+255),w,b
 22499  00BFE4  6F70               	movwf	GetElapsedTime@TimeValue& (0+255),b
 22500  00BFE6  5175               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 22501  00BFE8  2169               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 22502  00BFEA  6F71               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 22503  00BFEC  5176               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 22504  00BFEE  216A               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 22505  00BFF0  6F72               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 22506  00BFF2  5177               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 22507  00BFF4  216B               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 22508  00BFF6  D028               	goto	L25
 22509  00BFF8                     l771:
 22510                           
 22511                           ; BSR set to: 0
 22512                           ;os_timers.c: 96: else
 22513                           ;os_timers.c: 97: {
 22514                           ;os_timers.c: 98: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 22515                           
 22516                           ; BSR set to: 0
 22517  00BFF8  C064  F068         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 22518  00BFFC  C065  F069         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 22519  00C000  C066  F06A         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 22520  00C004  C067  F06B         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 22521  00C008  1F68               	comf	??_GetElapsedTime& (0+255),f,b
 22522  00C00A  1F69               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 22523  00C00C  1F6A               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 22524  00C00E  1F6B               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 22525  00C010  2B68               	incf	??_GetElapsedTime& (0+255),f,b
 22526  00C012  0E00               	movlw	0
 22527  00C014  2369               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 22528  00C016  236A               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 22529  00C018  236B               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 22530  00C01A  5174               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 22531  00C01C  2568               	addwf	??_GetElapsedTime& (0+255),w,b
 22532  00C01E  6F6C               	movwf	(??_GetElapsedTime+4)& (0+255),b
 22533  00C020  5175               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 22534  00C022  2169               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 22535  00C024  6F6D               	movwf	(??_GetElapsedTime+5)& (0+255),b
 22536  00C026  5176               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 22537  00C028  216A               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 22538  00C02A  6F6E               	movwf	(??_GetElapsedTime+6)& (0+255),b
 22539  00C02C  5177               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 22540  00C02E  216B               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 22541  00C030  6F6F               	movwf	(??_GetElapsedTime+7)& (0+255),b
 22542  00C032  0EFF               	movlw	255
 22543  00C034  256C               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 22544  00C036  6F70               	movwf	GetElapsedTime@TimeValue& (0+255),b
 22545  00C038  0EFF               	movlw	255
 22546  00C03A  216D               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 22547  00C03C  6F71               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 22548  00C03E  0EFF               	movlw	255
 22549  00C040  216E               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 22550  00C042  6F72               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 22551  00C044  0EFF               	movlw	255
 22552  00C046  216F               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 22553  00C048                     L25:
 22554  00C048  6F73               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 22555                           
 22556                           ; BSR set to: 0
 22557                           ;os_timers.c: 99: }
 22558                           ;os_timers.c: 101: return TimeValue;
 22559                           
 22560                           ; BSR set to: 0
 22561  00C04A  C070  F064         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 22562  00C04E  C071  F065         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 22563  00C052  C072  F066         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 22564  00C056  C073  F067         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 22565  00C05A  0012               	return	
 22566  00C05C                     __end_of_GetElapsedTime:
 22567                           	opt stack 0
 22568                           tosu	equ	0xFFF
 22569                           tosh	equ	0xFFE
 22570                           tosl	equ	0xFFD
 22571                           pclath	equ	0xFFA
 22572                           tblptru	equ	0xFF8
 22573                           tblptrh	equ	0xFF7
 22574                           tblptrl	equ	0xFF6
 22575                           tablat	equ	0xFF5
 22576                           prodh	equ	0xFF4
 22577                           prodl	equ	0xFF3
 22578                           intcon	equ	0xFF2
 22579                           intcon2	equ	0xFF1
 22580                           intcon3	equ	0xFF0
 22581                           indf0	equ	0xFEF
 22582                           postinc0	equ	0xFEE
 22583                           plusw0	equ	0xFEB
 22584                           fsr0h	equ	0xFEA
 22585                           fsr0l	equ	0xFE9
 22586                           wreg	equ	0xFE8
 22587                           indf1	equ	0xFE7
 22588                           postinc1	equ	0xFE6
 22589                           postdec1	equ	0xFE5
 22590                           fsr1h	equ	0xFE2
 22591                           fsr1l	equ	0xFE1
 22592                           indf2	equ	0xFDF
 22593                           postinc2	equ	0xFDE
 22594                           postdec2	equ	0xFDD
 22595                           plusw2	equ	0xFDB
 22596                           fsr2h	equ	0xFDA
 22597                           fsr2l	equ	0xFD9
 22598                           status	equ	0xFD8
 22599                           
 22600 ;; *************** function _MdmWifi_SendWifiMsg *****************
 22601 ;; Defined at:
 22602 ;;		line 424 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 22603 ;; Parameters:    Size  Location     Type
 22604 ;;  TxBuffer        2    6[BANK0 ] PTR unsigned char 
 22605 ;;		 -> MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifiCmd_ConfigureSoftAPMod
      +e@Data(100), MdmWifiCmd_CloseConnection@Data(20), 
 22606 ;;		 -> MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20), STR_31(11), MdmWifiCmd_JoinAccessPoi
      +nt@Data(100), 
 22607 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), STR_20(9), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22608 ;; Auto vars:     Size  Location     Type
 22609 ;;		None
 22610 ;; Return value:  Size  Location     Type
 22611 ;;                  1    wreg      void 
 22612 ;; Registers used:
 22613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22614 ;; Tracked objects:
 22615 ;;		On entry : 0/0
 22616 ;;		On exit  : 0/0
 22617 ;;		Unchanged: 0/0
 22618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22622 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22623 ;;Total ram usage:        2 bytes
 22624 ;; Hardware stack levels used:    1
 22625 ;; Hardware stack levels required when called:   13
 22626 ;; This function calls:
 22627 ;;		_Uart_WriteString
 22628 ;; This function is called by:
 22629 ;;		_StartConnectionSm
 22630 ;;		_SendDataSm
 22631 ;;		_MdmWifiCmd_RestartModem
 22632 ;;		_MdmWifiCmd_SetWifiMode
 22633 ;;		_MdmWifiCmd_JoinAccessPoint
 22634 ;;		_MdmWifiCmd_QuitAccessPoint
 22635 ;;		_MdmWifiCmd_SetTransferMode
 22636 ;;		_MdmWifiCmd_SetConnectionMode
 22637 ;;		_MdmWifiCmd_CloseConnection
 22638 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 22639 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 22640 ;;		_MdmWifiCmd_ConfigureServer
 22641 ;; This function uses a non-reentrant model
 22642 ;;
 22643                           
 22644                           	psect	text104
 22645  009F2C                     __ptext104:
 22646                           	opt stack 0
 22647  009F2C                     _MdmWifi_SendWifiMsg:
 22648                           	opt stack 13
 22649                           
 22650                           ;mdm_wifi.c: 427: Uart_WriteString(((UINT8)(1)), TxBuffer);
 22651                           
 22652                           ; BSR set to: 0
 22653                           ;incstack = 0
 22654  009F2C  C066  F063         	movff	MdmWifi_SendWifiMsg@TxBuffer,Uart_WriteString@StringToWrite
 22655  009F30  C067  F064         	movff	MdmWifi_SendWifiMsg@TxBuffer+1,Uart_WriteString@StringToWrite+1
 22656  009F34  0E01               	movlw	1
 22657  009F36  EC26  F057         	call	_Uart_WriteString
 22658  009F3A  0012               	return		;funcret
 22659  009F3C                     __end_of_MdmWifi_SendWifiMsg:
 22660                           	opt stack 0
 22661                           tosu	equ	0xFFF
 22662                           tosh	equ	0xFFE
 22663                           tosl	equ	0xFFD
 22664                           pclath	equ	0xFFA
 22665                           tblptru	equ	0xFF8
 22666                           tblptrh	equ	0xFF7
 22667                           tblptrl	equ	0xFF6
 22668                           tablat	equ	0xFF5
 22669                           prodh	equ	0xFF4
 22670                           prodl	equ	0xFF3
 22671                           intcon	equ	0xFF2
 22672                           intcon2	equ	0xFF1
 22673                           intcon3	equ	0xFF0
 22674                           indf0	equ	0xFEF
 22675                           postinc0	equ	0xFEE
 22676                           plusw0	equ	0xFEB
 22677                           fsr0h	equ	0xFEA
 22678                           fsr0l	equ	0xFE9
 22679                           wreg	equ	0xFE8
 22680                           indf1	equ	0xFE7
 22681                           postinc1	equ	0xFE6
 22682                           postdec1	equ	0xFE5
 22683                           fsr1h	equ	0xFE2
 22684                           fsr1l	equ	0xFE1
 22685                           indf2	equ	0xFDF
 22686                           postinc2	equ	0xFDE
 22687                           postdec2	equ	0xFDD
 22688                           plusw2	equ	0xFDB
 22689                           fsr2h	equ	0xFDA
 22690                           fsr2l	equ	0xFD9
 22691                           status	equ	0xFD8
 22692                           
 22693 ;; *************** function _Uart_WriteString *****************
 22694 ;; Defined at:
 22695 ;;		line 506 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22696 ;; Parameters:    Size  Location     Type
 22697 ;;  Module          1    wreg     unsigned char 
 22698 ;;  StringToWrit    2    3[BANK0 ] PTR unsigned char 
 22699 ;;		 -> MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifiCmd_ConfigureSoftAPMod
      +e@Data(100), MdmWifiCmd_CloseConnection@Data(20), 
 22700 ;;		 -> MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20), STR_31(11), MdmWifiCmd_JoinAccessPoi
      +nt@Data(100), 
 22701 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), STR_20(9), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22702 ;; Auto vars:     Size  Location     Type
 22703 ;;  Module          1    5[BANK0 ] unsigned char 
 22704 ;; Return value:  Size  Location     Type
 22705 ;;                  1    wreg      void 
 22706 ;; Registers used:
 22707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22708 ;; Tracked objects:
 22709 ;;		On entry : 0/0
 22710 ;;		On exit  : 0/0
 22711 ;;		Unchanged: 0/0
 22712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22716 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22717 ;;Total ram usage:        3 bytes
 22718 ;; Hardware stack levels used:    1
 22719 ;; Hardware stack levels required when called:   12
 22720 ;; This function calls:
 22721 ;;		_UartTxBufferStatus
 22722 ;;		_UartWriteByte
 22723 ;; This function is called by:
 22724 ;;		_MdmWifi_SendWifiMsg
 22725 ;; This function uses a non-reentrant model
 22726 ;;
 22727                           
 22728                           	psect	text105
 22729  00AE4C                     __ptext105:
 22730                           	opt stack 0
 22731  00AE4C                     _Uart_WriteString:
 22732                           	opt stack 13
 22733                           
 22734                           ;incstack = 0
 22735                           ;Uart_WriteString@Module stored from wreg
 22736  00AE4C  0100               	movlb	0	; () banked
 22737  00AE4E  6F65               	movwf	Uart_WriteString@Module& (0+255),b
 22738                           
 22739                           ;uart_drv.c: 509: while (*StringToWrite)
 22740  00AE50  D01F               	goto	u5300
 22741  00AE52                     
 22742                           ;uart_drv.c: 510: {
 22743                           ;uart_drv.c: 512: UartWriteByte(Module, *StringToWrite);
 22744  00AE52  C063  FFF6         	movff	Uart_WriteString@StringToWrite,tblptrl
 22745  00AE56  C064  FFF7         	movff	Uart_WriteString@StringToWrite+1,tblptrh
 22746  00AE5A  6AF8               	clrf	tblptru,c
 22747  00AE5C  0E0E               	movlw	(high __ramtop+-1)
 22748  00AE5E  64F7               	cpfsgt	tblptrh,c
 22749  00AE60  D003               	bra	u5297
 22750  00AE62  0008               	tblrd		*
 22751  00AE64  50F5               	movf	tablat,w,c
 22752  00AE66  D005               	bra	u5290
 22753  00AE68                     u5297:
 22754  00AE68  CFF6 FFE9          	movff	tblptrl,fsr0l
 22755  00AE6C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22756  00AE70  50EF               	movf	indf0,w,c
 22757  00AE72                     u5290:
 22758  00AE72  0100               	movlb	0	; () banked
 22759  00AE74  6F60               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 22760  00AE76  5165               	movf	Uart_WriteString@Module& (0+255),w,b
 22761  00AE78  EC54  F050         	call	_UartWriteByte
 22762                           
 22763                           ;uart_drv.c: 514: StringToWrite++;
 22764  00AE7C  0100               	movlb	0	; () banked
 22765  00AE7E  4B63               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 22766  00AE80  2B64               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 22767  00AE82                     
 22768                           ; BSR set to: 0
 22769                           
 22770                           ; BSR set to: 0
 22771  00AE82  0100               	movlb	0	; () banked
 22772  00AE84  5165               	movf	Uart_WriteString@Module& (0+255),w,b
 22773  00AE86  ECDE  F054         	call	_UartTxBufferStatus
 22774  00AE8A  06E8               	decf	wreg,f,c
 22775  00AE8C  B4D8               	btfsc	status,2,c
 22776  00AE8E  D7F9               	goto	l572
 22777  00AE90                     u5300:
 22778  00AE90  C063  FFF6         	movff	Uart_WriteString@StringToWrite,tblptrl
 22779  00AE94  C064  FFF7         	movff	Uart_WriteString@StringToWrite+1,tblptrh
 22780  00AE98  6AF8               	clrf	tblptru,c
 22781  00AE9A  0E0E               	movlw	(high __ramtop+-1)
 22782  00AE9C  64F7               	cpfsgt	tblptrh,c
 22783  00AE9E  D003               	bra	u5317
 22784  00AEA0  0008               	tblrd		*
 22785  00AEA2  50F5               	movf	tablat,w,c
 22786  00AEA4  D005               	bra	u5310
 22787  00AEA6                     u5317:
 22788  00AEA6  CFF6 FFE9          	movff	tblptrl,fsr0l
 22789  00AEAA  CFF7 FFEA          	movff	tblptrh,fsr0h
 22790  00AEAE  50EF               	movf	indf0,w,c
 22791  00AEB0                     u5310:
 22792  00AEB0  0900               	iorlw	0
 22793  00AEB2  B4D8               	btfsc	status,2,c
 22794  00AEB4  0012               	return	
 22795  00AEB6  D7CD               	goto	l570
 22796  00AEB8                     __end_of_Uart_WriteString:
 22797                           	opt stack 0
 22798                           tosu	equ	0xFFF
 22799                           tosh	equ	0xFFE
 22800                           tosl	equ	0xFFD
 22801                           pclath	equ	0xFFA
 22802                           tblptru	equ	0xFF8
 22803                           tblptrh	equ	0xFF7
 22804                           tblptrl	equ	0xFF6
 22805                           tablat	equ	0xFF5
 22806                           prodh	equ	0xFF4
 22807                           prodl	equ	0xFF3
 22808                           intcon	equ	0xFF2
 22809                           intcon2	equ	0xFF1
 22810                           intcon3	equ	0xFF0
 22811                           indf0	equ	0xFEF
 22812                           postinc0	equ	0xFEE
 22813                           plusw0	equ	0xFEB
 22814                           fsr0h	equ	0xFEA
 22815                           fsr0l	equ	0xFE9
 22816                           wreg	equ	0xFE8
 22817                           indf1	equ	0xFE7
 22818                           postinc1	equ	0xFE6
 22819                           postdec1	equ	0xFE5
 22820                           fsr1h	equ	0xFE2
 22821                           fsr1l	equ	0xFE1
 22822                           indf2	equ	0xFDF
 22823                           postinc2	equ	0xFDE
 22824                           postdec2	equ	0xFDD
 22825                           plusw2	equ	0xFDB
 22826                           fsr2h	equ	0xFDA
 22827                           fsr2l	equ	0xFD9
 22828                           status	equ	0xFD8
 22829                           
 22830 ;; *************** function _UartWriteByte *****************
 22831 ;; Defined at:
 22832 ;;		line 173 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22833 ;; Parameters:    Size  Location     Type
 22834 ;;  Module          1    wreg     unsigned char 
 22835 ;;  ByteToWrite     1    0[BANK0 ] unsigned char 
 22836 ;; Auto vars:     Size  Location     Type
 22837 ;;  Module          1    1[BANK0 ] unsigned char 
 22838 ;; Return value:  Size  Location     Type
 22839 ;;                  1    wreg      void 
 22840 ;; Registers used:
 22841 ;;		wreg, status,2, status,0
 22842 ;; Tracked objects:
 22843 ;;		On entry : 0/0
 22844 ;;		On exit  : 0/0
 22845 ;;		Unchanged: 0/0
 22846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22847 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22850 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22851 ;;Total ram usage:        2 bytes
 22852 ;; Hardware stack levels used:    1
 22853 ;; Hardware stack levels required when called:   11
 22854 ;; This function calls:
 22855 ;;		Nothing
 22856 ;; This function is called by:
 22857 ;;		_Uart_WriteString
 22858 ;;		_Uart_WriteConstString
 22859 ;;		_Uart_WriteStringLen
 22860 ;; This function uses a non-reentrant model
 22861 ;;
 22862                           
 22863                           	psect	text106
 22864  00A0A8                     __ptext106:
 22865                           	opt stack 0
 22866  00A0A8                     _UartWriteByte:
 22867                           	opt stack 13
 22868                           
 22869                           ;incstack = 0
 22870                           ;UartWriteByte@Module stored from wreg
 22871  00A0A8  0100               	movlb	0	; () banked
 22872  00A0AA  6F61               	movwf	UartWriteByte@Module& (0+255),b
 22873                           
 22874                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 22875  00A0AC  0100               	movlb	0	; () banked
 22876  00A0AE  0561               	decf	UartWriteByte@Module& (0+255),w,b
 22877  00A0B0  A4D8               	btfss	status,2,c
 22878  00A0B2  D003               	goto	l521
 22879                           
 22880                           ; BSR set to: 0
 22881                           ;uart_drv.c: 176: {
 22882                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 22883  00A0B4  C060  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 22884                           
 22885                           ;uart_drv.c: 179: }
 22886  00A0B8  0012               	return	
 22887  00A0BA                     l521:
 22888                           
 22889                           ; BSR set to: 0
 22890                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 22891                           
 22892                           ; BSR set to: 0
 22893  00A0BA  0E02               	movlw	2
 22894  00A0BC  1961               	xorwf	UartWriteByte@Module& (0+255),w,b
 22895  00A0BE  A4D8               	btfss	status,2,c
 22896  00A0C0  0012               	return	
 22897                           
 22898                           ; BSR set to: 0
 22899                           ;uart_drv.c: 181: {
 22900                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 22901  00A0C2  C060  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 22902                           
 22903                           ; BSR set to: 0
 22904  00A0C6  0012               	return	
 22905  00A0C8                     __end_of_UartWriteByte:
 22906                           	opt stack 0
 22907                           tosu	equ	0xFFF
 22908                           tosh	equ	0xFFE
 22909                           tosl	equ	0xFFD
 22910                           pclath	equ	0xFFA
 22911                           tblptru	equ	0xFF8
 22912                           tblptrh	equ	0xFF7
 22913                           tblptrl	equ	0xFF6
 22914                           tablat	equ	0xFF5
 22915                           prodh	equ	0xFF4
 22916                           prodl	equ	0xFF3
 22917                           intcon	equ	0xFF2
 22918                           intcon2	equ	0xFF1
 22919                           intcon3	equ	0xFF0
 22920                           indf0	equ	0xFEF
 22921                           postinc0	equ	0xFEE
 22922                           plusw0	equ	0xFEB
 22923                           fsr0h	equ	0xFEA
 22924                           fsr0l	equ	0xFE9
 22925                           wreg	equ	0xFE8
 22926                           indf1	equ	0xFE7
 22927                           postinc1	equ	0xFE6
 22928                           postdec1	equ	0xFE5
 22929                           fsr1h	equ	0xFE2
 22930                           fsr1l	equ	0xFE1
 22931                           indf2	equ	0xFDF
 22932                           postinc2	equ	0xFDE
 22933                           postdec2	equ	0xFDD
 22934                           plusw2	equ	0xFDB
 22935                           fsr2h	equ	0xFDA
 22936                           fsr2l	equ	0xFD9
 22937                           status	equ	0xFD8
 22938                           
 22939 ;; *************** function _UartTxBufferStatus *****************
 22940 ;; Defined at:
 22941 ;;		line 223 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22942 ;; Parameters:    Size  Location     Type
 22943 ;;  Module          1    wreg     unsigned char 
 22944 ;; Auto vars:     Size  Location     Type
 22945 ;;  Module          1    1[BANK0 ] unsigned char 
 22946 ;;  TxBufferStat    1    2[BANK0 ] enum E8864
 22947 ;; Return value:  Size  Location     Type
 22948 ;;                  1    wreg      enum E8864
 22949 ;; Registers used:
 22950 ;;		wreg, status,2, status,0
 22951 ;; Tracked objects:
 22952 ;;		On entry : 0/0
 22953 ;;		On exit  : 0/0
 22954 ;;		Unchanged: 0/0
 22955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22957 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22958 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22959 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22960 ;;Total ram usage:        3 bytes
 22961 ;; Hardware stack levels used:    1
 22962 ;; Hardware stack levels required when called:   11
 22963 ;; This function calls:
 22964 ;;		Nothing
 22965 ;; This function is called by:
 22966 ;;		_Uart_WriteString
 22967 ;;		_Uart_WriteConstString
 22968 ;;		_Uart_WriteStringLen
 22969 ;; This function uses a non-reentrant model
 22970 ;;
 22971                           
 22972                           	psect	text107
 22973  00A9BC                     __ptext107:
 22974                           	opt stack 0
 22975  00A9BC                     _UartTxBufferStatus:
 22976                           	opt stack 13
 22977                           
 22978                           ; BSR set to: 0
 22979                           ;incstack = 0
 22980                           ;UartTxBufferStatus@Module stored from wreg
 22981  00A9BC  0100               	movlb	0	; () banked
 22982  00A9BE  6F61               	movwf	UartTxBufferStatus@Module& (0+255),b
 22983                           
 22984                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 22985  00A9C0  0E00               	movlw	0
 22986  00A9C2  0100               	movlb	0	; () banked
 22987  00A9C4  6F62               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 22988                           
 22989                           ; BSR set to: 0
 22990                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 22991  00A9C6  0561               	decf	UartTxBufferStatus@Module& (0+255),w,b
 22992  00A9C8  A4D8               	btfss	status,2,c
 22993  00A9CA  D00B               	goto	l533
 22994                           
 22995                           ; BSR set to: 0
 22996                           ;uart_drv.c: 228: {
 22997                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 22998  00A9CC  CFAD F060          	movff	4013,??_UartTxBufferStatus	;volatile
 22999  00A9D0  90D8               	bcf	status,0,c
 23000  00A9D2  3360               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 23001  00A9D4  B160               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 23002  00A9D6  D002               	goto	l534
 23003  00A9D8                     u4940:
 23004                           
 23005                           ; BSR set to: 0
 23006                           ;uart_drv.c: 231: {
 23007                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 23008  00A9D8  0E01               	movlw	1
 23009  00A9DA  D014               	goto	L28
 23010  00A9DC                     l534:
 23011                           
 23012                           ; BSR set to: 0
 23013                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 23014                           
 23015                           ; BSR set to: 0
 23016  00A9DC  CFAD F060          	movff	4013,??_UartTxBufferStatus	;volatile
 23017  00A9E0  D00C               	goto	L46
 23018  00A9E2                     l533:
 23019                           
 23020                           ; BSR set to: 0
 23021                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 23022                           
 23023                           ; BSR set to: 0
 23024  00A9E2  0E02               	movlw	2
 23025  00A9E4  1961               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 23026  00A9E6  A4D8               	btfss	status,2,c
 23027  00A9E8  D00E               	goto	l542
 23028                           
 23029                           ; BSR set to: 0
 23030                           ;uart_drv.c: 244: {
 23031                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 23032  00A9EA  CFA8 F060          	movff	4008,??_UartTxBufferStatus	;volatile
 23033  00A9EE  90D8               	bcf	status,0,c
 23034  00A9F0  3360               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 23035  00A9F2  A160               	btfss	??_UartTxBufferStatus& (0+255),0,b
 23036  00A9F4  D7F1               	goto	u4940
 23037                           
 23038                           ; BSR set to: 0
 23039                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 23040                           
 23041                           ; BSR set to: 0
 23042                           
 23043                           ;uart_drv.c: 249: }
 23044                           
 23045                           ; BSR set to: 0
 23046                           ;uart_drv.c: 247: {
 23047                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 23048  00A9F6  CFA8 F060          	movff	4008,??_UartTxBufferStatus	;volatile
 23049  00A9FA                     L46:
 23050  00A9FA  90D8               	bcf	status,0,c
 23051  00A9FC  3360               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 23052  00A9FE  A160               	btfss	??_UartTxBufferStatus& (0+255),0,b
 23053  00AA00  D002               	goto	l542
 23054                           
 23055                           ; BSR set to: 0
 23056                           ;uart_drv.c: 251: {
 23057                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 23058  00AA02  0E02               	movlw	2
 23059  00AA04                     L28:
 23060  00AA04  6F62               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 23061  00AA06                     l542:
 23062                           
 23063                           ; BSR set to: 0
 23064                           ;uart_drv.c: 257: }
 23065                           ;uart_drv.c: 258: }
 23066                           ;uart_drv.c: 260: return TxBufferStatus;
 23067                           
 23068                           ; BSR set to: 0
 23069                           
 23070                           ; BSR set to: 0
 23071                           
 23072                           ; BSR set to: 0
 23073                           
 23074                           ; BSR set to: 0
 23075                           
 23076                           ;uart_drv.c: 254: else
 23077                           ;uart_drv.c: 255: {
 23078                           
 23079                           ; BSR set to: 0
 23080  00AA06  5162               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 23081  00AA08  0012               	return	
 23082  00AA0A                     __end_of_UartTxBufferStatus:
 23083                           	opt stack 0
 23084                           tosu	equ	0xFFF
 23085                           tosh	equ	0xFFE
 23086                           tosl	equ	0xFFD
 23087                           pclath	equ	0xFFA
 23088                           tblptru	equ	0xFF8
 23089                           tblptrh	equ	0xFF7
 23090                           tblptrl	equ	0xFF6
 23091                           tablat	equ	0xFF5
 23092                           prodh	equ	0xFF4
 23093                           prodl	equ	0xFF3
 23094                           intcon	equ	0xFF2
 23095                           intcon2	equ	0xFF1
 23096                           intcon3	equ	0xFF0
 23097                           indf0	equ	0xFEF
 23098                           postinc0	equ	0xFEE
 23099                           plusw0	equ	0xFEB
 23100                           fsr0h	equ	0xFEA
 23101                           fsr0l	equ	0xFE9
 23102                           wreg	equ	0xFE8
 23103                           indf1	equ	0xFE7
 23104                           postinc1	equ	0xFE6
 23105                           postdec1	equ	0xFE5
 23106                           fsr1h	equ	0xFE2
 23107                           fsr1l	equ	0xFE1
 23108                           indf2	equ	0xFDF
 23109                           postinc2	equ	0xFDE
 23110                           postdec2	equ	0xFDD
 23111                           plusw2	equ	0xFDB
 23112                           fsr2h	equ	0xFDA
 23113                           fsr2l	equ	0xFD9
 23114                           status	equ	0xFD8
 23115                           
 23116 ;; *************** function _MdmWifi_ReceiveWifiMsg *****************
 23117 ;; Defined at:
 23118 ;;		line 343 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 23119 ;; Parameters:    Size  Location     Type
 23120 ;;  RxBuffer        2    8[BANK0 ] PTR unsigned char 
 23121 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), 
 23122 ;;  DataLenght      2   10[BANK0 ] PTR unsigned char 
 23123 ;;		 -> SendDataSm@DataIndex(1), StartConnectionSm@DataIndex(1), 
 23124 ;; Auto vars:     Size  Location     Type
 23125 ;;  Ret             1   12[BANK0 ] enum E8823
 23126 ;; Return value:  Size  Location     Type
 23127 ;;                  1    wreg      enum E8823
 23128 ;; Registers used:
 23129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23130 ;; Tracked objects:
 23131 ;;		On entry : 0/0
 23132 ;;		On exit  : 0/0
 23133 ;;		Unchanged: 0/0
 23134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23138 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23139 ;;Total ram usage:        5 bytes
 23140 ;; Hardware stack levels used:    1
 23141 ;; Hardware stack levels required when called:   12
 23142 ;; This function calls:
 23143 ;;		_ReceiveEvt
 23144 ;;		_StringCopy
 23145 ;; This function is called by:
 23146 ;;		_StartConnectionSm
 23147 ;;		_SendDataSm
 23148 ;; This function uses a non-reentrant model
 23149 ;;
 23150                           
 23151                           	psect	text108
 23152  00A8D6                     __ptext108:
 23153                           	opt stack 0
 23154  00A8D6                     _MdmWifi_ReceiveWifiMsg:
 23155                           	opt stack 14
 23156                           
 23157                           ;mdm_wifi.c: 345: WifiRxMsgStsType Ret;
 23158                           ;mdm_wifi.c: 348: if (ReceiveEvt(&WifiRxPacket.PacketRxNotificationEvt))
 23159                           
 23160                           ; BSR set to: 0
 23161                           ;incstack = 0
 23162  00A8D6  0EFC               	movlw	low (_WifiRxPacket+252)
 23163  00A8D8  0100               	movlb	0	; () banked
 23164  00A8DA  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 23165  00A8DC  0E07               	movlw	high (_WifiRxPacket+252)
 23166  00A8DE  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23167  00A8E0  EC87  F051         	call	_ReceiveEvt	;wreg free
 23168  00A8E4  0900               	iorlw	0
 23169  00A8E6  B4D8               	btfsc	status,2,c
 23170  00A8E8  D017               	goto	l892
 23171                           
 23172                           ;mdm_wifi.c: 349: {
 23173                           ;mdm_wifi.c: 351: StringCopy(WifiRxPacket.RxBuffer, RxBuffer, WifiRxPacket.RxByteNum);
 23174  00A8EA  0E00               	movlw	low _WifiRxPacket
 23175  00A8EC  0100               	movlb	0	; () banked
 23176  00A8EE  6F60               	movwf	StringCopy@SourceStr& (0+255),b
 23177  00A8F0  0E07               	movlw	high _WifiRxPacket
 23178  00A8F2  6F61               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23179  00A8F4  C068  F062         	movff	MdmWifi_ReceiveWifiMsg@RxBuffer,StringCopy@DestStr
 23180  00A8F8  C069  F063         	movff	MdmWifi_ReceiveWifiMsg@RxBuffer+1,StringCopy@DestStr+1
 23181  00A8FC  C7FA  F064         	movff	_WifiRxPacket+250,StringCopy@Len
 23182  00A900  C7FB  F065         	movff	_WifiRxPacket+251,StringCopy@Len+1
 23183  00A904  EC12  F053         	call	_StringCopy	;wreg free
 23184                           
 23185                           ;mdm_wifi.c: 353: *DataLenght = WifiRxPacket.RxByteNum;
 23186  00A908  C06A  FFD9         	movff	MdmWifi_ReceiveWifiMsg@DataLenght,fsr2l
 23187  00A90C  C06B  FFDA         	movff	MdmWifi_ReceiveWifiMsg@DataLenght+1,fsr2h
 23188  00A910  C7FA  FFDF         	movff	_WifiRxPacket+250,indf2
 23189                           
 23190                           ;mdm_wifi.c: 355: Ret = WifiMsg_Received;
 23191  00A914  0E01               	movlw	1
 23192  00A916  D001               	goto	L29
 23193  00A918                     l892:
 23194                           
 23195                           ;mdm_wifi.c: 357: else
 23196                           ;mdm_wifi.c: 358: {
 23197                           ;mdm_wifi.c: 360: Ret = WifiMsg_NotReceived;
 23198                           
 23199                           ; BSR set to: 0
 23200  00A918  0E00               	movlw	0
 23201  00A91A                     L29:
 23202  00A91A  0100               	movlb	0	; () banked
 23203  00A91C  6F6C               	movwf	MdmWifi_ReceiveWifiMsg@Ret& (0+255),b
 23204                           
 23205                           ; BSR set to: 0
 23206                           ;mdm_wifi.c: 361: }
 23207                           ;mdm_wifi.c: 363: return Ret;
 23208  00A91E  516C               	movf	MdmWifi_ReceiveWifiMsg@Ret& (0+255),w,b
 23209  00A920  0012               	return	
 23210  00A922                     __end_of_MdmWifi_ReceiveWifiMsg:
 23211                           	opt stack 0
 23212                           tosu	equ	0xFFF
 23213                           tosh	equ	0xFFE
 23214                           tosl	equ	0xFFD
 23215                           pclath	equ	0xFFA
 23216                           tblptru	equ	0xFF8
 23217                           tblptrh	equ	0xFF7
 23218                           tblptrl	equ	0xFF6
 23219                           tablat	equ	0xFF5
 23220                           prodh	equ	0xFF4
 23221                           prodl	equ	0xFF3
 23222                           intcon	equ	0xFF2
 23223                           intcon2	equ	0xFF1
 23224                           intcon3	equ	0xFF0
 23225                           indf0	equ	0xFEF
 23226                           postinc0	equ	0xFEE
 23227                           plusw0	equ	0xFEB
 23228                           fsr0h	equ	0xFEA
 23229                           fsr0l	equ	0xFE9
 23230                           wreg	equ	0xFE8
 23231                           indf1	equ	0xFE7
 23232                           postinc1	equ	0xFE6
 23233                           postdec1	equ	0xFE5
 23234                           fsr1h	equ	0xFE2
 23235                           fsr1l	equ	0xFE1
 23236                           indf2	equ	0xFDF
 23237                           postinc2	equ	0xFDE
 23238                           postdec2	equ	0xFDD
 23239                           plusw2	equ	0xFDB
 23240                           fsr2h	equ	0xFDA
 23241                           fsr2l	equ	0xFD9
 23242                           status	equ	0xFD8
 23243                           
 23244 ;; *************** function _StringCopy *****************
 23245 ;; Defined at:
 23246 ;;		line 104 in file "../Source/c/03_Sml/02_Ssl/sf.c"
 23247 ;; Parameters:    Size  Location     Type
 23248 ;;  SourceStr       2    0[BANK0 ] PTR unsigned char 
 23249 ;;		 -> WifiRxPacket(253), MdmWifi_UartRxBuffer(250), 
 23250 ;;  DestStr         2    2[BANK0 ] PTR unsigned char 
 23251 ;;		 -> WifiTerminal@UartBuffer(200), SendDataSm@Data(103), StartConnectionSm@Data(100), WifiRxPacket(253), 
 23252 ;;  Len             2    4[BANK0 ] unsigned short 
 23253 ;; Auto vars:     Size  Location     Type
 23254 ;;  Index           2    6[BANK0 ] unsigned short 
 23255 ;; Return value:  Size  Location     Type
 23256 ;;                  1    wreg      void 
 23257 ;; Registers used:
 23258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23259 ;; Tracked objects:
 23260 ;;		On entry : 0/0
 23261 ;;		On exit  : 0/0
 23262 ;;		Unchanged: 0/0
 23263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23264 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23267 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23268 ;;Total ram usage:        8 bytes
 23269 ;; Hardware stack levels used:    1
 23270 ;; Hardware stack levels required when called:   11
 23271 ;; This function calls:
 23272 ;;		Nothing
 23273 ;; This function is called by:
 23274 ;;		_MdmWifiGetUartData
 23275 ;;		_MdmWifi_ReceiveWifiMsg
 23276 ;;		_MdmWifi_ReceiveWifiMsgTerminal
 23277 ;;		_MdmWifiCmd_ReceiveWifiMsg
 23278 ;; This function uses a non-reentrant model
 23279 ;;
 23280                           
 23281                           	psect	text109
 23282  00A624                     __ptext109:
 23283                           	opt stack 0
 23284  00A624                     _StringCopy:
 23285                           	opt stack 15
 23286                           
 23287                           ;sf.c: 106: UINT16 Index = 0;
 23288                           
 23289                           ; BSR set to: 0
 23290                           ;incstack = 0
 23291  00A624  0E00               	movlw	0
 23292  00A626  0100               	movlb	0	; () banked
 23293  00A628  6F67               	movwf	(StringCopy@Index+1)& (0+255),b
 23294  00A62A  0E00               	movlw	0
 23295  00A62C  6F66               	movwf	StringCopy@Index& (0+255),b
 23296                           
 23297                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 23298  00A62E  0E00               	movlw	0
 23299  00A630  6F67               	movwf	(StringCopy@Index+1)& (0+255),b
 23300  00A632  0E00               	movlw	0
 23301  00A634  6F66               	movwf	StringCopy@Index& (0+255),b
 23302  00A636  D010               	goto	l1915
 23303  00A638                     
 23304                           ; BSR set to: 0
 23305                           ;sf.c: 110: {
 23306                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 23307                           
 23308                           ; BSR set to: 0
 23309  00A638  5166               	movf	StringCopy@Index& (0+255),w,b
 23310  00A63A  2560               	addwf	StringCopy@SourceStr& (0+255),w,b
 23311  00A63C  6ED9               	movwf	fsr2l,c
 23312  00A63E  5167               	movf	(StringCopy@Index+1)& (0+255),w,b
 23313  00A640  2161               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 23314  00A642  6EDA               	movwf	fsr2h,c
 23315  00A644  5166               	movf	StringCopy@Index& (0+255),w,b
 23316  00A646  2562               	addwf	StringCopy@DestStr& (0+255),w,b
 23317  00A648  6EE1               	movwf	fsr1l,c
 23318  00A64A  5167               	movf	(StringCopy@Index+1)& (0+255),w,b
 23319  00A64C  2163               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 23320  00A64E  6EE2               	movwf	fsr1h,c
 23321  00A650  CFDF FFE7          	movff	indf2,indf1
 23322                           
 23323                           ; BSR set to: 0
 23324  00A654  4B66               	infsnz	StringCopy@Index& (0+255),f,b
 23325  00A656  2B67               	incf	(StringCopy@Index+1)& (0+255),f,b
 23326  00A658                     l1915:
 23327                           
 23328                           ; BSR set to: 0
 23329                           
 23330                           ; BSR set to: 0
 23331  00A658  5164               	movf	StringCopy@Len& (0+255),w,b
 23332  00A65A  5D66               	subwf	StringCopy@Index& (0+255),w,b
 23333  00A65C  5165               	movf	(StringCopy@Len+1)& (0+255),w,b
 23334  00A65E  5967               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 23335  00A660  B0D8               	btfsc	status,0,c
 23336  00A662  0012               	return	
 23337  00A664  D7E9               	goto	l1916
 23338  00A666                     __end_of_StringCopy:
 23339                           	opt stack 0
 23340                           tosu	equ	0xFFF
 23341                           tosh	equ	0xFFE
 23342                           tosl	equ	0xFFD
 23343                           pclath	equ	0xFFA
 23344                           tblptru	equ	0xFF8
 23345                           tblptrh	equ	0xFF7
 23346                           tblptrl	equ	0xFF6
 23347                           tablat	equ	0xFF5
 23348                           prodh	equ	0xFF4
 23349                           prodl	equ	0xFF3
 23350                           intcon	equ	0xFF2
 23351                           intcon2	equ	0xFF1
 23352                           intcon3	equ	0xFF0
 23353                           indf0	equ	0xFEF
 23354                           postinc0	equ	0xFEE
 23355                           plusw0	equ	0xFEB
 23356                           fsr0h	equ	0xFEA
 23357                           fsr0l	equ	0xFE9
 23358                           wreg	equ	0xFE8
 23359                           indf1	equ	0xFE7
 23360                           postinc1	equ	0xFE6
 23361                           postdec1	equ	0xFE5
 23362                           fsr1h	equ	0xFE2
 23363                           fsr1l	equ	0xFE1
 23364                           indf2	equ	0xFDF
 23365                           postinc2	equ	0xFDE
 23366                           postdec2	equ	0xFDD
 23367                           plusw2	equ	0xFDB
 23368                           fsr2h	equ	0xFDA
 23369                           fsr2l	equ	0xFD9
 23370                           status	equ	0xFD8
 23371                           
 23372 ;; *************** function _ReceiveDataSm *****************
 23373 ;; Defined at:
 23374 ;;		line 291 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 23375 ;; Parameters:    Size  Location     Type
 23376 ;;		None
 23377 ;; Auto vars:     Size  Location     Type
 23378 ;;		None
 23379 ;; Return value:  Size  Location     Type
 23380 ;;                  1    wreg      void 
 23381 ;; Registers used:
 23382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23383 ;; Tracked objects:
 23384 ;;		On entry : 0/0
 23385 ;;		On exit  : 0/0
 23386 ;;		Unchanged: 0/0
 23387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23392 ;;Total ram usage:        0 bytes
 23393 ;; Hardware stack levels used:    1
 23394 ;; Hardware stack levels required when called:   12
 23395 ;; This function calls:
 23396 ;;		_GenerateEvt
 23397 ;;		_ReceiveEvt
 23398 ;; This function is called by:
 23399 ;;		_MdmWifiCmd_MainTask
 23400 ;; This function uses a non-reentrant model
 23401 ;;
 23402                           
 23403                           	psect	text110
 23404  00A7BA                     __ptext110:
 23405                           	opt stack 0
 23406  00A7BA                     _ReceiveDataSm:
 23407                           	opt stack 15
 23408                           
 23409                           ;mdm_wifi_cmd.c: 293: static WifiReceiveDataStateType WifiReceiveDataState = WiFiRcv_Wai
      +                          tEvt;
 23410                           ;mdm_wifi_cmd.c: 296: switch (WifiReceiveDataState)
 23411                           
 23412                           ; BSR set to: 0
 23413                           ;incstack = 0
 23414  00A7BA  D019               	goto	l1013
 23415  00A7BC                     
 23416                           ;mdm_wifi_cmd.c: 300: if (ReceiveEvt(&WifiReceiveNetData))
 23417  00A7BC  0E58               	movlw	low _WifiReceiveNetData
 23418  00A7BE  0100               	movlb	0	; () banked
 23419  00A7C0  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 23420  00A7C2  0E00               	movlw	high _WifiReceiveNetData
 23421  00A7C4  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23422  00A7C6  EC87  F051         	call	_ReceiveEvt	;wreg free
 23423  00A7CA  0900               	iorlw	0
 23424  00A7CC  B4D8               	btfsc	status,2,c
 23425  00A7CE  0012               	return	
 23426                           
 23427                           ;mdm_wifi_cmd.c: 301: {
 23428                           ;mdm_wifi_cmd.c: 302: WifiReceiveDataState = WiFiRcv_GetData;
 23429  00A7D0  0E01               	movlw	1
 23430  00A7D2  0101               	movlb	1	; () banked
 23431  00A7D4  6F65               	movwf	ReceiveDataSm@WifiReceiveDataState& (0+255),b
 23432                           
 23433                           ; BSR set to: 1
 23434                           ;mdm_wifi_cmd.c: 303: }
 23435                           ;mdm_wifi_cmd.c: 304: break;
 23436  00A7D6  0012               	return	
 23437  00A7D8                     
 23438                           ; BSR set to: 1
 23439                           ;mdm_wifi_cmd.c: 308: GenerateEvt(&WifiReceiveData);
 23440                           
 23441                           ; BSR set to: 1
 23442  00A7D8  0E55               	movlw	low _WifiReceiveData
 23443  00A7DA  0100               	movlb	0	; () banked
 23444  00A7DC  6F60               	movwf	GenerateEvt@Event& (0+255),b
 23445  00A7DE  0E00               	movlw	high _WifiReceiveData
 23446  00A7E0  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23447  00A7E2  ECF5  F04F         	call	_GenerateEvt	;wreg free
 23448                           
 23449                           ;mdm_wifi_cmd.c: 310: WifiReceiveDataState = WiFiRcv_WaitEvt;
 23450  00A7E6  0E00               	movlw	0
 23451  00A7E8  0101               	movlb	1	; () banked
 23452  00A7EA  6F65               	movwf	ReceiveDataSm@WifiReceiveDataState& (0+255),b
 23453                           
 23454                           ; BSR set to: 1
 23455                           ;mdm_wifi_cmd.c: 315: }
 23456                           
 23457                           ; BSR set to: 1
 23458                           ;mdm_wifi_cmd.c: 314: break;
 23459                           
 23460                           ;mdm_wifi_cmd.c: 313: default:
 23461                           
 23462                           ;mdm_wifi_cmd.c: 311: break;
 23463  00A7EC  0012               	return	
 23464  00A7EE                     l1013:
 23465                           
 23466                           ; BSR set to: 1
 23467  00A7EE  0101               	movlb	1	; () banked
 23468  00A7F0  5165               	movf	ReceiveDataSm@WifiReceiveDataState& (0+255),w,b
 23469                           
 23470                           ; Switch size 1, requested type "space"
 23471                           ; Number of cases is 2, Range of values is 0 to 1
 23472                           ; switch strategies available:
 23473                           ; Name         Instructions Cycles
 23474                           ; simple_byte            7     4 (average)
 23475                           ;	Chosen strategy is simple_byte
 23476  00A7F2  0A00               	xorlw	0	; case 0
 23477  00A7F4  B4D8               	btfsc	status,2,c
 23478  00A7F6  D7E2               	goto	l1014
 23479  00A7F8  0A01               	xorlw	1	; case 1
 23480  00A7FA  A4D8               	btfss	status,2,c
 23481  00A7FC  0012               	return	
 23482  00A7FE  D7EC               	goto	l1017
 23483  00A800                     __end_of_ReceiveDataSm:
 23484                           	opt stack 0
 23485                           tosu	equ	0xFFF
 23486                           tosh	equ	0xFFE
 23487                           tosl	equ	0xFFD
 23488                           pclath	equ	0xFFA
 23489                           tblptru	equ	0xFF8
 23490                           tblptrh	equ	0xFF7
 23491                           tblptrl	equ	0xFF6
 23492                           tablat	equ	0xFF5
 23493                           prodh	equ	0xFF4
 23494                           prodl	equ	0xFF3
 23495                           intcon	equ	0xFF2
 23496                           intcon2	equ	0xFF1
 23497                           intcon3	equ	0xFF0
 23498                           indf0	equ	0xFEF
 23499                           postinc0	equ	0xFEE
 23500                           plusw0	equ	0xFEB
 23501                           fsr0h	equ	0xFEA
 23502                           fsr0l	equ	0xFE9
 23503                           wreg	equ	0xFE8
 23504                           indf1	equ	0xFE7
 23505                           postinc1	equ	0xFE6
 23506                           postdec1	equ	0xFE5
 23507                           fsr1h	equ	0xFE2
 23508                           fsr1l	equ	0xFE1
 23509                           indf2	equ	0xFDF
 23510                           postinc2	equ	0xFDE
 23511                           postdec2	equ	0xFDD
 23512                           plusw2	equ	0xFDB
 23513                           fsr2h	equ	0xFDA
 23514                           fsr2l	equ	0xFD9
 23515                           status	equ	0xFD8
 23516                           
 23517 ;; *************** function _OsTmr_StartTimer *****************
 23518 ;; Defined at:
 23519 ;;		line 117 in file "../Source/c/02_Osl/os_timers.c"
 23520 ;; Parameters:    Size  Location     Type
 23521 ;;  Timer           2    4[BANK0 ] PTR struct _SwTimerType
 23522 ;;		 -> Term_MainSm@TermDelay(10), Led_MainTask@LedTimer1(10), SendDataSm@SwTimer(10), 
 23523 ;;  Timeout         4    6[BANK0 ] unsigned long 
 23524 ;; Auto vars:     Size  Location     Type
 23525 ;;		None
 23526 ;; Return value:  Size  Location     Type
 23527 ;;                  1    wreg      void 
 23528 ;; Registers used:
 23529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23530 ;; Tracked objects:
 23531 ;;		On entry : 0/0
 23532 ;;		On exit  : 0/0
 23533 ;;		Unchanged: 0/0
 23534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23535 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23538 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23539 ;;Total ram usage:        6 bytes
 23540 ;; Hardware stack levels used:    1
 23541 ;; Hardware stack levels required when called:   12
 23542 ;; This function calls:
 23543 ;;		_GetOsTickCounter
 23544 ;; This function is called by:
 23545 ;;		_SendDataSm
 23546 ;;		_Led_MainTask
 23547 ;;		_Term_MainSm
 23548 ;; This function uses a non-reentrant model
 23549 ;;
 23550                           
 23551                           	psect	text111
 23552  00AC64                     __ptext111:
 23553                           	opt stack 0
 23554  00AC64                     _OsTmr_StartTimer:
 23555                           	opt stack 14
 23556                           
 23557                           ;os_timers.c: 120: Timer->Status = SwTmrNotExpired;
 23558                           
 23559                           ;incstack = 0
 23560  00AC64  0100               	movlb	0	; () banked
 23561  00AC66  EE20 F001          	lfsr	2,1
 23562  00AC6A  5164               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 23563  00AC6C  26D9               	addwf	fsr2l,f,c
 23564  00AC6E  5165               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 23565  00AC70  22DA               	addwfc	fsr2h,f,c
 23566  00AC72  0E00               	movlw	0
 23567  00AC74  6EDF               	movwf	indf2,c
 23568                           
 23569                           ; BSR set to: 0
 23570                           ;os_timers.c: 122: Timer->StartTime = GetOsTickCounter();
 23571  00AC76  ECB6  F04F         	call	_GetOsTickCounter	;wreg free
 23572  00AC7A  0100               	movlb	0	; () banked
 23573  00AC7C  EE20 F002          	lfsr	2,2
 23574  00AC80  5164               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 23575  00AC82  26D9               	addwf	fsr2l,f,c
 23576  00AC84  5165               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 23577  00AC86  22DA               	addwfc	fsr2h,f,c
 23578  00AC88  C060  FFDE         	movff	?_GetOsTickCounter,postinc2
 23579  00AC8C  C061  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 23580  00AC90  C062  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 23581  00AC94  C063  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 23582                           
 23583                           ; BSR set to: 0
 23584                           ;os_timers.c: 124: Timer->TargetTime = Timeout;
 23585  00AC98  EE20 F006          	lfsr	2,6
 23586  00AC9C  5164               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 23587  00AC9E  26D9               	addwf	fsr2l,f,c
 23588  00ACA0  5165               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 23589  00ACA2  22DA               	addwfc	fsr2h,f,c
 23590  00ACA4  C066  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 23591  00ACA8  C067  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 23592  00ACAC  C068  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 23593  00ACB0  C069  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 23594                           
 23595                           ; BSR set to: 0
 23596                           ;os_timers.c: 126: Timer->Enabled = 1u;
 23597  00ACB4  C064  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 23598  00ACB8  C065  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 23599  00ACBC  0E01               	movlw	1
 23600  00ACBE  6EDF               	movwf	indf2,c
 23601                           
 23602                           ; BSR set to: 0
 23603  00ACC0  0012               	return		;funcret
 23604  00ACC2                     __end_of_OsTmr_StartTimer:
 23605                           	opt stack 0
 23606                           tosu	equ	0xFFF
 23607                           tosh	equ	0xFFE
 23608                           tosl	equ	0xFFD
 23609                           pclath	equ	0xFFA
 23610                           tblptru	equ	0xFF8
 23611                           tblptrh	equ	0xFF7
 23612                           tblptrl	equ	0xFF6
 23613                           tablat	equ	0xFF5
 23614                           prodh	equ	0xFF4
 23615                           prodl	equ	0xFF3
 23616                           intcon	equ	0xFF2
 23617                           intcon2	equ	0xFF1
 23618                           intcon3	equ	0xFF0
 23619                           indf0	equ	0xFEF
 23620                           postinc0	equ	0xFEE
 23621                           plusw0	equ	0xFEB
 23622                           fsr0h	equ	0xFEA
 23623                           fsr0l	equ	0xFE9
 23624                           wreg	equ	0xFE8
 23625                           indf1	equ	0xFE7
 23626                           postinc1	equ	0xFE6
 23627                           postdec1	equ	0xFE5
 23628                           fsr1h	equ	0xFE2
 23629                           fsr1l	equ	0xFE1
 23630                           indf2	equ	0xFDF
 23631                           postinc2	equ	0xFDE
 23632                           postdec2	equ	0xFDD
 23633                           plusw2	equ	0xFDB
 23634                           fsr2h	equ	0xFDA
 23635                           fsr2l	equ	0xFD9
 23636                           status	equ	0xFD8
 23637                           
 23638 ;; *************** function _GetOsTickCounter *****************
 23639 ;; Defined at:
 23640 ;;		line 69 in file "../Source/c/02_Osl/os_timers.c"
 23641 ;; Parameters:    Size  Location     Type
 23642 ;;		None
 23643 ;; Auto vars:     Size  Location     Type
 23644 ;;		None
 23645 ;; Return value:  Size  Location     Type
 23646 ;;                  4    0[BANK0 ] unsigned long 
 23647 ;; Registers used:
 23648 ;;		None
 23649 ;; Tracked objects:
 23650 ;;		On entry : 0/0
 23651 ;;		On exit  : 0/0
 23652 ;;		Unchanged: 0/0
 23653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23657 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23658 ;;Total ram usage:        4 bytes
 23659 ;; Hardware stack levels used:    1
 23660 ;; Hardware stack levels required when called:   11
 23661 ;; This function calls:
 23662 ;;		Nothing
 23663 ;; This function is called by:
 23664 ;;		_GetElapsedTime
 23665 ;;		_OsTmr_StartTimer
 23666 ;;		_OsTmr_GetElapsedTime
 23667 ;; This function uses a non-reentrant model
 23668 ;;
 23669                           
 23670                           	psect	text112
 23671  009F6C                     __ptext112:
 23672                           	opt stack 0
 23673  009F6C                     _GetOsTickCounter:
 23674                           	opt stack 14
 23675                           
 23676                           ;os_timers.c: 72: return OsTmr_OsTickCounter;
 23677                           
 23678                           ; BSR set to: 0
 23679                           ;incstack = 0
 23680  009F6C  C12E  F060         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 23681  009F70  C12F  F061         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 23682  009F74  C130  F062         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 23683  009F78  C131  F063         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 23684  009F7C  0012               	return		;funcret
 23685  009F7E                     __end_of_GetOsTickCounter:
 23686                           	opt stack 0
 23687                           tosu	equ	0xFFF
 23688                           tosh	equ	0xFFE
 23689                           tosl	equ	0xFFD
 23690                           pclath	equ	0xFFA
 23691                           tblptru	equ	0xFF8
 23692                           tblptrh	equ	0xFF7
 23693                           tblptrl	equ	0xFF6
 23694                           tablat	equ	0xFF5
 23695                           prodh	equ	0xFF4
 23696                           prodl	equ	0xFF3
 23697                           intcon	equ	0xFF2
 23698                           intcon2	equ	0xFF1
 23699                           intcon3	equ	0xFF0
 23700                           indf0	equ	0xFEF
 23701                           postinc0	equ	0xFEE
 23702                           plusw0	equ	0xFEB
 23703                           fsr0h	equ	0xFEA
 23704                           fsr0l	equ	0xFE9
 23705                           wreg	equ	0xFE8
 23706                           indf1	equ	0xFE7
 23707                           postinc1	equ	0xFE6
 23708                           postdec1	equ	0xFE5
 23709                           fsr1h	equ	0xFE2
 23710                           fsr1l	equ	0xFE1
 23711                           indf2	equ	0xFDF
 23712                           postinc2	equ	0xFDE
 23713                           postdec2	equ	0xFDD
 23714                           plusw2	equ	0xFDB
 23715                           fsr2h	equ	0xFDA
 23716                           fsr2l	equ	0xFD9
 23717                           status	equ	0xFD8
 23718                           
 23719 ;; *************** function _OsAlrm_SetOsAlarm *****************
 23720 ;; Defined at:
 23721 ;;		line 76 in file "../Source/c/02_Osl/os_alarms.c"
 23722 ;; Parameters:    Size  Location     Type
 23723 ;;  OsAlarmId       2    6[BANK0 ] unsigned short 
 23724 ;;  OsAlarmTimeo    4    8[BANK0 ] unsigned long 
 23725 ;;  AlarmCallbac    2   12[BANK0 ] PTR FTN()void 
 23726 ;;		 -> I2cDummyTx(1), 
 23727 ;; Auto vars:     Size  Location     Type
 23728 ;;		None
 23729 ;; Return value:  Size  Location     Type
 23730 ;;                  1    wreg      void 
 23731 ;; Registers used:
 23732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23733 ;; Tracked objects:
 23734 ;;		On entry : 0/0
 23735 ;;		On exit  : 0/0
 23736 ;;		Unchanged: 0/0
 23737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23738 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23741 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23742 ;;Total ram usage:        8 bytes
 23743 ;; Hardware stack levels used:    1
 23744 ;; Hardware stack levels required when called:   12
 23745 ;; This function calls:
 23746 ;;		___wmul
 23747 ;; This function is called by:
 23748 ;;		_I2cSlv_MainTask
 23749 ;; This function uses a non-reentrant model
 23750 ;;
 23751                           
 23752                           	psect	text113
 23753  00BECC                     __ptext113:
 23754                           	opt stack 0
 23755  00BECC                     _OsAlrm_SetOsAlarm:
 23756                           	opt stack 15
 23757                           
 23758                           ;os_alarms.c: 79: OsAlarms[OsAlarmId].Enabled = 1u;
 23759                           
 23760                           ;incstack = 0
 23761  00BECC  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23762  00BED0  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23763  00BED4  0E00               	movlw	0
 23764  00BED6  0100               	movlb	0	; () banked
 23765  00BED8  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23766  00BEDA  0E0B               	movlw	11
 23767  00BEDC  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23768  00BEDE  EC33  F051         	call	___wmul	;wreg free
 23769  00BEE2  0E00               	movlw	low _OsAlarms
 23770  00BEE4  0100               	movlb	0	; () banked
 23771  00BEE6  2560               	addwf	?___wmul& (0+255),w,b
 23772  00BEE8  6ED9               	movwf	fsr2l,c
 23773  00BEEA  0E05               	movlw	high _OsAlarms
 23774  00BEEC  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23775  00BEEE  6EDA               	movwf	fsr2h,c
 23776  00BEF0  0E01               	movlw	1
 23777  00BEF2  6EDF               	movwf	indf2,c
 23778                           
 23779                           ;os_alarms.c: 81: OsAlarms[OsAlarmId].Counter = 0;
 23780  00BEF4  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23781  00BEF8  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23782  00BEFC  0E00               	movlw	0
 23783  00BEFE  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23784  00BF00  0E0B               	movlw	11
 23785  00BF02  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23786  00BF04  EC33  F051         	call	___wmul	;wreg free
 23787  00BF08  0E01               	movlw	1
 23788  00BF0A  0100               	movlb	0	; () banked
 23789  00BF0C  2760               	addwf	?___wmul& (0+255),f,b
 23790  00BF0E  0E00               	movlw	0
 23791  00BF10  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 23792  00BF12  0E00               	movlw	low _OsAlarms
 23793  00BF14  2560               	addwf	?___wmul& (0+255),w,b
 23794  00BF16  6ED9               	movwf	fsr2l,c
 23795  00BF18  0E05               	movlw	high _OsAlarms
 23796  00BF1A  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23797  00BF1C  6EDA               	movwf	fsr2h,c
 23798  00BF1E  6ADE               	clrf	postinc2,c
 23799  00BF20  6ADE               	clrf	postinc2,c
 23800  00BF22  6ADE               	clrf	postinc2,c
 23801  00BF24  6ADD               	clrf	postdec2,c
 23802                           
 23803                           ;os_alarms.c: 83: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 23804  00BF26  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23805  00BF2A  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23806  00BF2E  0E00               	movlw	0
 23807  00BF30  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23808  00BF32  0E0B               	movlw	11
 23809  00BF34  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23810  00BF36  EC33  F051         	call	___wmul	;wreg free
 23811  00BF3A  0E05               	movlw	5
 23812  00BF3C  0100               	movlb	0	; () banked
 23813  00BF3E  2760               	addwf	?___wmul& (0+255),f,b
 23814  00BF40  0E00               	movlw	0
 23815  00BF42  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 23816  00BF44  0E00               	movlw	low _OsAlarms
 23817  00BF46  2560               	addwf	?___wmul& (0+255),w,b
 23818  00BF48  6ED9               	movwf	fsr2l,c
 23819  00BF4A  0E05               	movlw	high _OsAlarms
 23820  00BF4C  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23821  00BF4E  6EDA               	movwf	fsr2h,c
 23822  00BF50  C068  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 23823  00BF54  C069  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 23824  00BF58  C06A  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 23825  00BF5C  C06B  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 23826                           
 23827                           ;os_alarms.c: 85: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 23828  00BF60  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23829  00BF64  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23830  00BF68  0E00               	movlw	0
 23831  00BF6A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23832  00BF6C  0E0B               	movlw	11
 23833  00BF6E  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23834  00BF70  EC33  F051         	call	___wmul	;wreg free
 23835  00BF74  0E09               	movlw	9
 23836  00BF76  0100               	movlb	0	; () banked
 23837  00BF78  2760               	addwf	?___wmul& (0+255),f,b
 23838  00BF7A  0E00               	movlw	0
 23839  00BF7C  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 23840  00BF7E  0E00               	movlw	low _OsAlarms
 23841  00BF80  2560               	addwf	?___wmul& (0+255),w,b
 23842  00BF82  6ED9               	movwf	fsr2l,c
 23843  00BF84  0E05               	movlw	high _OsAlarms
 23844  00BF86  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23845  00BF88  6EDA               	movwf	fsr2h,c
 23846  00BF8A  C06C  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 23847  00BF8E  C06D  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 23848                           
 23849                           ; BSR set to: 0
 23850  00BF92  0012               	return		;funcret
 23851  00BF94                     __end_of_OsAlrm_SetOsAlarm:
 23852                           	opt stack 0
 23853                           tosu	equ	0xFFF
 23854                           tosh	equ	0xFFE
 23855                           tosl	equ	0xFFD
 23856                           pclath	equ	0xFFA
 23857                           tblptru	equ	0xFF8
 23858                           tblptrh	equ	0xFF7
 23859                           tblptrl	equ	0xFF6
 23860                           tablat	equ	0xFF5
 23861                           prodh	equ	0xFF4
 23862                           prodl	equ	0xFF3
 23863                           intcon	equ	0xFF2
 23864                           intcon2	equ	0xFF1
 23865                           intcon3	equ	0xFF0
 23866                           indf0	equ	0xFEF
 23867                           postinc0	equ	0xFEE
 23868                           plusw0	equ	0xFEB
 23869                           fsr0h	equ	0xFEA
 23870                           fsr0l	equ	0xFE9
 23871                           wreg	equ	0xFE8
 23872                           indf1	equ	0xFE7
 23873                           postinc1	equ	0xFE6
 23874                           postdec1	equ	0xFE5
 23875                           fsr1h	equ	0xFE2
 23876                           fsr1l	equ	0xFE1
 23877                           indf2	equ	0xFDF
 23878                           postinc2	equ	0xFDE
 23879                           postdec2	equ	0xFDD
 23880                           plusw2	equ	0xFDB
 23881                           fsr2h	equ	0xFDA
 23882                           fsr2l	equ	0xFD9
 23883                           status	equ	0xFD8
 23884                           
 23885 ;; *************** function ___wmul *****************
 23886 ;; Defined at:
 23887 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 23888 ;; Parameters:    Size  Location     Type
 23889 ;;  multiplier      2    0[BANK0 ] unsigned int 
 23890 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 23891 ;; Auto vars:     Size  Location     Type
 23892 ;;  product         2    4[BANK0 ] unsigned int 
 23893 ;; Return value:  Size  Location     Type
 23894 ;;                  2    0[BANK0 ] unsigned int 
 23895 ;; Registers used:
 23896 ;;		wreg, status,2, status,0, prodl, prodh
 23897 ;; Tracked objects:
 23898 ;;		On entry : 0/0
 23899 ;;		On exit  : 0/0
 23900 ;;		Unchanged: 0/0
 23901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23902 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23903 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23905 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23906 ;;Total ram usage:        6 bytes
 23907 ;; Hardware stack levels used:    1
 23908 ;; Hardware stack levels required when called:   11
 23909 ;; This function calls:
 23910 ;;		Nothing
 23911 ;; This function is called by:
 23912 ;;		_OsAlrm_SetOsAlarm
 23913 ;;		_atoi
 23914 ;; This function uses a non-reentrant model
 23915 ;;
 23916                           
 23917                           	psect	text114
 23918  00A266                     __ptext114:
 23919                           	opt stack 0
 23920  00A266                     ___wmul:
 23921                           	opt stack 13
 23922                           
 23923                           ; BSR set to: 0
 23924                           ;incstack = 0
 23925  00A266  0100               	movlb	0	; () banked
 23926  00A268  5160               	movf	___wmul@multiplier& (0+255),w,b
 23927  00A26A  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23928  00A26C  CFF3 F064          	movff	prodl,___wmul@product
 23929  00A270  CFF4 F065          	movff	prodh,___wmul@product+1
 23930  00A274  5160               	movf	___wmul@multiplier& (0+255),w,b
 23931  00A276  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 23932  00A278  50F3               	movf	prodl,w,c
 23933  00A27A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23934  00A27C  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 23935  00A27E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23936  00A280  50F3               	movf	prodl,w,c
 23937  00A282  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23938                           
 23939                           ; BSR set to: 0
 23940  00A284  C064  F060         	movff	___wmul@product,?___wmul
 23941  00A288  C065  F061         	movff	___wmul@product+1,?___wmul+1
 23942  00A28C  0012               	return	
 23943  00A28E                     __end_of___wmul:
 23944                           	opt stack 0
 23945                           tosu	equ	0xFFF
 23946                           tosh	equ	0xFFE
 23947                           tosl	equ	0xFFD
 23948                           pclath	equ	0xFFA
 23949                           tblptru	equ	0xFF8
 23950                           tblptrh	equ	0xFF7
 23951                           tblptrl	equ	0xFF6
 23952                           tablat	equ	0xFF5
 23953                           prodh	equ	0xFF4
 23954                           prodl	equ	0xFF3
 23955                           intcon	equ	0xFF2
 23956                           intcon2	equ	0xFF1
 23957                           intcon3	equ	0xFF0
 23958                           indf0	equ	0xFEF
 23959                           postinc0	equ	0xFEE
 23960                           plusw0	equ	0xFEB
 23961                           fsr0h	equ	0xFEA
 23962                           fsr0l	equ	0xFE9
 23963                           wreg	equ	0xFE8
 23964                           indf1	equ	0xFE7
 23965                           postinc1	equ	0xFE6
 23966                           postdec1	equ	0xFE5
 23967                           fsr1h	equ	0xFE2
 23968                           fsr1l	equ	0xFE1
 23969                           indf2	equ	0xFDF
 23970                           postinc2	equ	0xFDE
 23971                           postdec2	equ	0xFDD
 23972                           plusw2	equ	0xFDB
 23973                           fsr2h	equ	0xFDA
 23974                           fsr2l	equ	0xFD9
 23975                           status	equ	0xFD8
 23976                           
 23977 ;; *************** function _I2c_InitI2cModule *****************
 23978 ;; Defined at:
 23979 ;;		line 228 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 23980 ;; Parameters:    Size  Location     Type
 23981 ;;  I2cConfig       2   37[BANK0 ] PTR struct _I2cConfig
 23982 ;;		 -> I2cConfig(10), 
 23983 ;; Auto vars:     Size  Location     Type
 23984 ;;		None
 23985 ;; Return value:  Size  Location     Type
 23986 ;;                  1    wreg      void 
 23987 ;; Registers used:
 23988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23989 ;; Tracked objects:
 23990 ;;		On entry : 0/0
 23991 ;;		On exit  : 0/0
 23992 ;;		Unchanged: 0/0
 23993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23994 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23996 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23997 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23998 ;;Total ram usage:        4 bytes
 23999 ;; Hardware stack levels used:    1
 24000 ;; Hardware stack levels required when called:   13
 24001 ;; This function calls:
 24002 ;;		_SetBaudRate
 24003 ;; This function is called by:
 24004 ;;		_I2cSlv_MainTask
 24005 ;; This function uses a non-reentrant model
 24006 ;;
 24007                           
 24008                           	psect	text115
 24009  00B000                     __ptext115:
 24010                           	opt stack 0
 24011  00B000                     _I2c_InitI2cModule:
 24012                           	opt stack 14
 24013                           
 24014                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 24015                           
 24016                           ; BSR set to: 0
 24017                           ;incstack = 0
 24018  00B000  8295               	bsf	3989,1,c	;volatile
 24019                           
 24020                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 24021  00B002  8095               	bsf	3989,0,c	;volatile
 24022                           
 24023                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 24024  00B004  C085  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 24025  00B008  C086  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 24026  00B00C  CFDE F079          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 24027  00B010  CFDE F07A          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 24028  00B014  CFDE F07B          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 24029  00B018  CFDE F07C          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 24030  00B01C  0100               	movlb	0	; () banked
 24031  00B01E  EE20 F004          	lfsr	2,4
 24032  00B022  5185               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24033  00B024  26D9               	addwf	fsr2l,f,c
 24034  00B026  5186               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24035  00B028  22DA               	addwfc	fsr2h,f,c
 24036  00B02A  CFDE F07D          	movff	postinc2,SetBaudRate@McuClockHz
 24037  00B02E  CFDE F07E          	movff	postinc2,SetBaudRate@McuClockHz+1
 24038  00B032  CFDE F07F          	movff	postinc2,SetBaudRate@McuClockHz+2
 24039  00B036  CFDE F080          	movff	postinc2,SetBaudRate@McuClockHz+3
 24040  00B03A  ECB7  F054         	call	_SetBaudRate	;wreg free
 24041                           
 24042                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 24043  00B03E  0100               	movlb	0	; () banked
 24044  00B040  EE20 F008          	lfsr	2,8
 24045  00B044  5185               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24046  00B046  26D9               	addwf	fsr2l,f,c
 24047  00B048  5186               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24048  00B04A  22DA               	addwfc	fsr2h,f,c
 24049  00B04C  50DF               	movf	indf2,w,c
 24050  00B04E  1272               	iorwf	3954,f,c	;volatile
 24051                           
 24052                           ; BSR set to: 0
 24053                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 24054  00B050  EE20 F009          	lfsr	2,9
 24055  00B054  5185               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24056  00B056  26D9               	addwf	fsr2l,f,c
 24057  00B058  5186               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24058  00B05A  22DA               	addwfc	fsr2h,f,c
 24059  00B05C  50DF               	movf	indf2,w,c
 24060  00B05E  6F87               	movwf	??_I2c_InitI2cModule& (0+255),b
 24061  00B060  0E05               	movlw	5
 24062  00B062  6F88               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 24063  00B064                     u6795:
 24064  00B064  90D8               	bcf	status,0,c
 24065  00B066  3787               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 24066  00B068  2F88               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 24067  00B06A  D7FC               	goto	u6795
 24068  00B06C  5187               	movf	??_I2c_InitI2cModule& (0+255),w,b
 24069  00B06E  1272               	iorwf	3954,f,c	;volatile
 24070                           
 24071                           ; BSR set to: 0
 24072  00B070  0012               	return		;funcret
 24073  00B072                     __end_of_I2c_InitI2cModule:
 24074                           	opt stack 0
 24075                           tosu	equ	0xFFF
 24076                           tosh	equ	0xFFE
 24077                           tosl	equ	0xFFD
 24078                           pclath	equ	0xFFA
 24079                           tblptru	equ	0xFF8
 24080                           tblptrh	equ	0xFF7
 24081                           tblptrl	equ	0xFF6
 24082                           tablat	equ	0xFF5
 24083                           prodh	equ	0xFF4
 24084                           prodl	equ	0xFF3
 24085                           intcon	equ	0xFF2
 24086                           intcon2	equ	0xFF1
 24087                           intcon3	equ	0xFF0
 24088                           indf0	equ	0xFEF
 24089                           postinc0	equ	0xFEE
 24090                           plusw0	equ	0xFEB
 24091                           fsr0h	equ	0xFEA
 24092                           fsr0l	equ	0xFE9
 24093                           wreg	equ	0xFE8
 24094                           indf1	equ	0xFE7
 24095                           postinc1	equ	0xFE6
 24096                           postdec1	equ	0xFE5
 24097                           fsr1h	equ	0xFE2
 24098                           fsr1l	equ	0xFE1
 24099                           indf2	equ	0xFDF
 24100                           postinc2	equ	0xFDE
 24101                           postdec2	equ	0xFDD
 24102                           plusw2	equ	0xFDB
 24103                           fsr2h	equ	0xFDA
 24104                           fsr2l	equ	0xFD9
 24105                           status	equ	0xFD8
 24106                           
 24107 ;; *************** function _SetBaudRate *****************
 24108 ;; Defined at:
 24109 ;;		line 78 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 24110 ;; Parameters:    Size  Location     Type
 24111 ;;  DesiredI2cBu    4   25[BANK0 ] unsigned long 
 24112 ;;  McuClockHz      4   29[BANK0 ] unsigned long 
 24113 ;; Auto vars:     Size  Location     Type
 24114 ;;		None
 24115 ;; Return value:  Size  Location     Type
 24116 ;;                  1    wreg      void 
 24117 ;; Registers used:
 24118 ;;		wreg, status,2, status,0, cstack
 24119 ;; Tracked objects:
 24120 ;;		On entry : 0/0
 24121 ;;		On exit  : 0/0
 24122 ;;		Unchanged: 0/0
 24123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24124 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24126 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24127 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24128 ;;Total ram usage:       12 bytes
 24129 ;; Hardware stack levels used:    1
 24130 ;; Hardware stack levels required when called:   12
 24131 ;; This function calls:
 24132 ;;		___lldiv
 24133 ;; This function is called by:
 24134 ;;		_I2c_InitI2cModule
 24135 ;; This function uses a non-reentrant model
 24136 ;;
 24137                           
 24138                           	psect	text116
 24139  00A96E                     __ptext116:
 24140                           	opt stack 0
 24141  00A96E                     _SetBaudRate:
 24142                           	opt stack 14
 24143                           
 24144                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 24145                           
 24146                           ; BSR set to: 0
 24147                           ;incstack = 0
 24148  00A96E  C07D  F06C         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 24149  00A972  C07E  F06D         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 24150  00A976  C07F  F06E         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 24151  00A97A  C080  F06F         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 24152  00A97E  C079  F081         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 24153  00A982  C07A  F082         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 24154  00A986  C07B  F083         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 24155  00A98A  C07C  F084         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 24156  00A98E  0E02               	movlw	2
 24157  00A990                     u5965:
 24158  00A990  90D8               	bcf	status,0,c
 24159  00A992  0100               	movlb	0	; () banked
 24160  00A994  3781               	rlcf	??_SetBaudRate& (0+255),f,b
 24161  00A996  3782               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 24162  00A998  3783               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 24163  00A99A  3784               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 24164  00A99C  2EE8               	decfsz	wreg,f,c
 24165  00A99E  D7F8               	goto	u5965
 24166  00A9A0  C081  F070         	movff	??_SetBaudRate,___lldiv@divisor
 24167  00A9A4  C082  F071         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 24168  00A9A8  C083  F072         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 24169  00A9AC  C084  F073         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 24170  00A9B0  ECAF  F058         	call	___lldiv	;wreg free
 24171  00A9B4  0100               	movlb	0	; () banked
 24172  00A9B6  056C               	decf	?___lldiv& (0+255),w,b
 24173  00A9B8  6E74               	movwf	3956,c	;volatile
 24174                           
 24175                           ; BSR set to: 0
 24176  00A9BA  0012               	return		;funcret
 24177  00A9BC                     __end_of_SetBaudRate:
 24178                           	opt stack 0
 24179                           tosu	equ	0xFFF
 24180                           tosh	equ	0xFFE
 24181                           tosl	equ	0xFFD
 24182                           pclath	equ	0xFFA
 24183                           tblptru	equ	0xFF8
 24184                           tblptrh	equ	0xFF7
 24185                           tblptrl	equ	0xFF6
 24186                           tablat	equ	0xFF5
 24187                           prodh	equ	0xFF4
 24188                           prodl	equ	0xFF3
 24189                           intcon	equ	0xFF2
 24190                           intcon2	equ	0xFF1
 24191                           intcon3	equ	0xFF0
 24192                           indf0	equ	0xFEF
 24193                           postinc0	equ	0xFEE
 24194                           plusw0	equ	0xFEB
 24195                           fsr0h	equ	0xFEA
 24196                           fsr0l	equ	0xFE9
 24197                           wreg	equ	0xFE8
 24198                           indf1	equ	0xFE7
 24199                           postinc1	equ	0xFE6
 24200                           postdec1	equ	0xFE5
 24201                           fsr1h	equ	0xFE2
 24202                           fsr1l	equ	0xFE1
 24203                           indf2	equ	0xFDF
 24204                           postinc2	equ	0xFDE
 24205                           postdec2	equ	0xFDD
 24206                           plusw2	equ	0xFDB
 24207                           fsr2h	equ	0xFDA
 24208                           fsr2l	equ	0xFD9
 24209                           status	equ	0xFD8
 24210                           
 24211 ;; *************** function ___lldiv *****************
 24212 ;; Defined at:
 24213 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 24214 ;; Parameters:    Size  Location     Type
 24215 ;;  dividend        4   12[BANK0 ] unsigned long 
 24216 ;;  divisor         4   16[BANK0 ] unsigned long 
 24217 ;; Auto vars:     Size  Location     Type
 24218 ;;  quotient        4   20[BANK0 ] unsigned long 
 24219 ;;  counter         1   24[BANK0 ] unsigned char 
 24220 ;; Return value:  Size  Location     Type
 24221 ;;                  4   12[BANK0 ] unsigned long 
 24222 ;; Registers used:
 24223 ;;		wreg, status,2, status,0
 24224 ;; Tracked objects:
 24225 ;;		On entry : 0/0
 24226 ;;		On exit  : 0/0
 24227 ;;		Unchanged: 0/0
 24228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24229 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24230 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24232 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24233 ;;Total ram usage:       13 bytes
 24234 ;; Hardware stack levels used:    1
 24235 ;; Hardware stack levels required when called:   11
 24236 ;; This function calls:
 24237 ;;		Nothing
 24238 ;; This function is called by:
 24239 ;;		_SetBaudRate
 24240 ;;		_Tmr_TmrBPrSet
 24241 ;;		_SetUartBaudRate
 24242 ;; This function uses a non-reentrant model
 24243 ;;
 24244                           
 24245                           	psect	text117
 24246  00B15E                     __ptext117:
 24247                           	opt stack 0
 24248  00B15E                     ___lldiv:
 24249                           	opt stack 15
 24250                           
 24251                           ; BSR set to: 0
 24252                           ;incstack = 0
 24253  00B15E  0E00               	movlw	0
 24254  00B160  0100               	movlb	0	; () banked
 24255  00B162  6F74               	movwf	___lldiv@quotient& (0+255),b
 24256  00B164  0E00               	movlw	0
 24257  00B166  6F75               	movwf	(___lldiv@quotient+1)& (0+255),b
 24258  00B168  0E00               	movlw	0
 24259  00B16A  6F76               	movwf	(___lldiv@quotient+2)& (0+255),b
 24260  00B16C  0E00               	movlw	0
 24261  00B16E  6F77               	movwf	(___lldiv@quotient+3)& (0+255),b
 24262                           
 24263                           ; BSR set to: 0
 24264  00B170  5170               	movf	___lldiv@divisor& (0+255),w,b
 24265  00B172  1171               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24266  00B174  1172               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24267  00B176  1173               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24268  00B178  B4D8               	btfsc	status,2,c
 24269  00B17A  D02A               	goto	l2508
 24270                           
 24271                           ; BSR set to: 0
 24272  00B17C  0E01               	movlw	1
 24273  00B17E  6F78               	movwf	___lldiv@counter& (0+255),b
 24274  00B180  D006               	goto	l2503
 24275  00B182                     
 24276                           ; BSR set to: 0
 24277                           
 24278                           ; BSR set to: 0
 24279  00B182  90D8               	bcf	status,0,c
 24280  00B184  3770               	rlcf	___lldiv@divisor& (0+255),f,b
 24281  00B186  3771               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24282  00B188  3772               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24283  00B18A  3773               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24284  00B18C  2B78               	incf	___lldiv@counter& (0+255),f,b
 24285  00B18E                     l2503:
 24286                           
 24287                           ; BSR set to: 0
 24288                           
 24289                           ; BSR set to: 0
 24290  00B18E  AF73               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24291  00B190  D7F8               	goto	l2504
 24292  00B192                     u5890:
 24293                           
 24294                           ; BSR set to: 0
 24295                           
 24296                           ; BSR set to: 0
 24297                           
 24298                           ; BSR set to: 0
 24299  00B192  90D8               	bcf	status,0,c
 24300  00B194  3774               	rlcf	___lldiv@quotient& (0+255),f,b
 24301  00B196  3775               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24302  00B198  3776               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24303  00B19A  3777               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24304                           
 24305                           ; BSR set to: 0
 24306  00B19C  5170               	movf	___lldiv@divisor& (0+255),w,b
 24307  00B19E  5D6C               	subwf	___lldiv@dividend& (0+255),w,b
 24308  00B1A0  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24309  00B1A2  596D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24310  00B1A4  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24311  00B1A6  596E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24312  00B1A8  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24313  00B1AA  596F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24314  00B1AC  A0D8               	btfss	status,0,c
 24315  00B1AE  D009               	goto	l2507
 24316                           
 24317                           ; BSR set to: 0
 24318  00B1B0  5170               	movf	___lldiv@divisor& (0+255),w,b
 24319  00B1B2  5F6C               	subwf	___lldiv@dividend& (0+255),f,b
 24320  00B1B4  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24321  00B1B6  5B6D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24322  00B1B8  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24323  00B1BA  5B6E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24324  00B1BC  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24325  00B1BE  5B6F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24326                           
 24327                           ; BSR set to: 0
 24328  00B1C0  8174               	bsf	___lldiv@quotient& (0+255),0,b
 24329  00B1C2                     l2507:
 24330                           
 24331                           ; BSR set to: 0
 24332                           
 24333                           ; BSR set to: 0
 24334  00B1C2  90D8               	bcf	status,0,c
 24335  00B1C4  3373               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24336  00B1C6  3372               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24337  00B1C8  3371               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24338  00B1CA  3370               	rrcf	___lldiv@divisor& (0+255),f,b
 24339                           
 24340                           ; BSR set to: 0
 24341  00B1CC  2F78               	decfsz	___lldiv@counter& (0+255),f,b
 24342  00B1CE  D7E1               	goto	u5890
 24343  00B1D0                     l2508:
 24344                           
 24345                           ; BSR set to: 0
 24346                           
 24347                           ; BSR set to: 0
 24348  00B1D0  C074  F06C         	movff	___lldiv@quotient,?___lldiv
 24349  00B1D4  C075  F06D         	movff	___lldiv@quotient+1,?___lldiv+1
 24350  00B1D8  C076  F06E         	movff	___lldiv@quotient+2,?___lldiv+2
 24351  00B1DC  C077  F06F         	movff	___lldiv@quotient+3,?___lldiv+3
 24352                           
 24353                           ; BSR set to: 0
 24354  00B1E0  0012               	return		;funcret
 24355  00B1E2                     __end_of___lldiv:
 24356                           	opt stack 0
 24357                           tosu	equ	0xFFF
 24358                           tosh	equ	0xFFE
 24359                           tosl	equ	0xFFD
 24360                           pclath	equ	0xFFA
 24361                           tblptru	equ	0xFF8
 24362                           tblptrh	equ	0xFF7
 24363                           tblptrl	equ	0xFF6
 24364                           tablat	equ	0xFF5
 24365                           prodh	equ	0xFF4
 24366                           prodl	equ	0xFF3
 24367                           intcon	equ	0xFF2
 24368                           intcon2	equ	0xFF1
 24369                           intcon3	equ	0xFF0
 24370                           indf0	equ	0xFEF
 24371                           postinc0	equ	0xFEE
 24372                           plusw0	equ	0xFEB
 24373                           fsr0h	equ	0xFEA
 24374                           fsr0l	equ	0xFE9
 24375                           wreg	equ	0xFE8
 24376                           indf1	equ	0xFE7
 24377                           postinc1	equ	0xFE6
 24378                           postdec1	equ	0xFE5
 24379                           fsr1h	equ	0xFE2
 24380                           fsr1l	equ	0xFE1
 24381                           indf2	equ	0xFDF
 24382                           postinc2	equ	0xFDE
 24383                           postdec2	equ	0xFDD
 24384                           plusw2	equ	0xFDB
 24385                           fsr2h	equ	0xFDA
 24386                           fsr2l	equ	0xFD9
 24387                           status	equ	0xFD8
 24388                           
 24389 ;; *************** function _I2cSetConfig *****************
 24390 ;; Defined at:
 24391 ;;		line 89 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24392 ;; Parameters:    Size  Location     Type
 24393 ;;		None
 24394 ;; Auto vars:     Size  Location     Type
 24395 ;;		None
 24396 ;; Return value:  Size  Location     Type
 24397 ;;                  1    wreg      void 
 24398 ;; Registers used:
 24399 ;;		wreg, status,2
 24400 ;; Tracked objects:
 24401 ;;		On entry : 0/0
 24402 ;;		On exit  : 0/0
 24403 ;;		Unchanged: 0/0
 24404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24409 ;;Total ram usage:        0 bytes
 24410 ;; Hardware stack levels used:    1
 24411 ;; Hardware stack levels required when called:   11
 24412 ;; This function calls:
 24413 ;;		Nothing
 24414 ;; This function is called by:
 24415 ;;		_I2cSlv_MainTask
 24416 ;; This function uses a non-reentrant model
 24417 ;;
 24418                           
 24419                           	psect	text118
 24420  00A2E2                     __ptext118:
 24421                           	opt stack 0
 24422  00A2E2                     _I2cSetConfig:
 24423                           	opt stack 16
 24424                           
 24425                           ;i2c_slv.c: 91: I2cConfig.I2cBaudRateHz = ((UINT32)(100000));
 24426                           
 24427                           ; BSR set to: 0
 24428                           ;incstack = 0
 24429  00A2E2  0EA0               	movlw	160
 24430  00A2E4  0101               	movlb	1	; () banked
 24431  00A2E6  6F8D               	movwf	_I2cConfig& (0+255),b
 24432  00A2E8  0E86               	movlw	134
 24433  00A2EA  6F8E               	movwf	(_I2cConfig+1)& (0+255),b
 24434  00A2EC  0E01               	movlw	1
 24435  00A2EE  6F8F               	movwf	(_I2cConfig+2)& (0+255),b
 24436  00A2F0  0E00               	movlw	0
 24437  00A2F2  6F90               	movwf	(_I2cConfig+3)& (0+255),b
 24438                           
 24439                           ;i2c_slv.c: 92: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 24440  00A2F4  0E00               	movlw	0
 24441  00A2F6  6F91               	movwf	(_I2cConfig+4)& (0+255),b
 24442  00A2F8  0E6C               	movlw	108
 24443  00A2FA  6F92               	movwf	(_I2cConfig+5)& (0+255),b
 24444  00A2FC  0EDC               	movlw	220
 24445  00A2FE  6F93               	movwf	(_I2cConfig+6)& (0+255),b
 24446  00A300  0E02               	movlw	2
 24447  00A302  6F94               	movwf	(_I2cConfig+7)& (0+255),b
 24448                           
 24449                           ;i2c_slv.c: 93: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 24450  00A304  0E08               	movlw	8
 24451  00A306  6F95               	movwf	(_I2cConfig+8)& (0+255),b
 24452                           
 24453                           ;i2c_slv.c: 94: I2cConfig.EnableI2cModule = ((UINT8)(1));
 24454  00A308  0E01               	movlw	1
 24455  00A30A  6F96               	movwf	(_I2cConfig+9)& (0+255),b
 24456                           
 24457                           ; BSR set to: 1
 24458  00A30C  0012               	return		;funcret
 24459  00A30E                     __end_of_I2cSetConfig:
 24460                           	opt stack 0
 24461                           tosu	equ	0xFFF
 24462                           tosh	equ	0xFFE
 24463                           tosl	equ	0xFFD
 24464                           pclath	equ	0xFFA
 24465                           tblptru	equ	0xFF8
 24466                           tblptrh	equ	0xFF7
 24467                           tblptrl	equ	0xFF6
 24468                           tablat	equ	0xFF5
 24469                           prodh	equ	0xFF4
 24470                           prodl	equ	0xFF3
 24471                           intcon	equ	0xFF2
 24472                           intcon2	equ	0xFF1
 24473                           intcon3	equ	0xFF0
 24474                           indf0	equ	0xFEF
 24475                           postinc0	equ	0xFEE
 24476                           plusw0	equ	0xFEB
 24477                           fsr0h	equ	0xFEA
 24478                           fsr0l	equ	0xFE9
 24479                           wreg	equ	0xFE8
 24480                           indf1	equ	0xFE7
 24481                           postinc1	equ	0xFE6
 24482                           postdec1	equ	0xFE5
 24483                           fsr1h	equ	0xFE2
 24484                           fsr1l	equ	0xFE1
 24485                           indf2	equ	0xFDF
 24486                           postinc2	equ	0xFDE
 24487                           postdec2	equ	0xFDD
 24488                           plusw2	equ	0xFDB
 24489                           fsr2h	equ	0xFDA
 24490                           fsr2l	equ	0xFD9
 24491                           status	equ	0xFD8
 24492                           
 24493 ;; *************** function _I2cSendMsgSm *****************
 24494 ;; Defined at:
 24495 ;;		line 105 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24496 ;; Parameters:    Size  Location     Type
 24497 ;;		None
 24498 ;; Auto vars:     Size  Location     Type
 24499 ;;		None
 24500 ;; Return value:  Size  Location     Type
 24501 ;;                  1    wreg      void 
 24502 ;; Registers used:
 24503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24504 ;; Tracked objects:
 24505 ;;		On entry : 0/0
 24506 ;;		On exit  : 0/0
 24507 ;;		Unchanged: 0/0
 24508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24513 ;;Total ram usage:        0 bytes
 24514 ;; Hardware stack levels used:    1
 24515 ;; Hardware stack levels required when called:   13
 24516 ;; This function calls:
 24517 ;;		_I2c_ReadData
 24518 ;;		_I2c_WriteData
 24519 ;;		_ReceiveEvt
 24520 ;; This function is called by:
 24521 ;;		_I2cSlv_MainTask
 24522 ;; This function uses a non-reentrant model
 24523 ;;
 24524                           
 24525                           	psect	text119
 24526  00BB3C                     __ptext119:
 24527                           	opt stack 0
 24528  00BB3C                     _I2cSendMsgSm:
 24529                           	opt stack 14
 24530                           
 24531                           ;i2c_slv.c: 108: static I2cComStateType I2cComState = I2cComIdle;
 24532                           ;i2c_slv.c: 110: switch(I2cComState)
 24533                           
 24534                           ; BSR set to: 1
 24535                           ;incstack = 0
 24536  00BB3C  D045               	goto	l1152
 24537  00BB3E                     
 24538                           ;i2c_slv.c: 114: if (ReceiveEvt(&I2cWriteDataEvt))
 24539  00BB3E  0E54               	movlw	low _I2cWriteDataEvt
 24540  00BB40  0100               	movlb	0	; () banked
 24541  00BB42  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 24542  00BB44  0E00               	movlw	high _I2cWriteDataEvt
 24543  00BB46  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24544  00BB48  EC87  F051         	call	_ReceiveEvt	;wreg free
 24545  00BB4C  0900               	iorlw	0
 24546  00BB4E  B4D8               	btfsc	status,2,c
 24547  00BB50  D006               	goto	l1154
 24548                           
 24549                           ;i2c_slv.c: 115: {
 24550                           ;i2c_slv.c: 117: I2cComState = I2cComWriteData;
 24551  00BB52  0E01               	movlw	1
 24552  00BB54  0101               	movlb	1	; () banked
 24553  00BB56  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24554                           
 24555                           ;i2c_slv.c: 119: I2cComSts = TxInProgress;
 24556  00BB58  0E01               	movlw	1
 24557  00BB5A  6E4E               	movwf	_I2cComSts,c
 24558                           
 24559                           ;i2c_slv.c: 120: }
 24560  00BB5C  0012               	return	
 24561  00BB5E                     l1154:
 24562                           
 24563                           ;i2c_slv.c: 121: else if (ReceiveEvt(&I2cReadDataEvt))
 24564                           
 24565                           ; BSR set to: 1
 24566  00BB5E  0E53               	movlw	low _I2cReadDataEvt
 24567  00BB60  0100               	movlb	0	; () banked
 24568  00BB62  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 24569  00BB64  0E00               	movlw	high _I2cReadDataEvt
 24570  00BB66  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24571  00BB68  EC87  F051         	call	_ReceiveEvt	;wreg free
 24572  00BB6C  0900               	iorlw	0
 24573  00BB6E  B4D8               	btfsc	status,2,c
 24574  00BB70  D006               	goto	l1156
 24575                           
 24576                           ;i2c_slv.c: 122: {
 24577                           ;i2c_slv.c: 124: I2cComState = I2cComReadData;
 24578  00BB72  0E02               	movlw	2
 24579  00BB74  0101               	movlb	1	; () banked
 24580  00BB76  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24581                           
 24582                           ;i2c_slv.c: 126: I2cComSts = RxInProgress;
 24583  00BB78  0E02               	movlw	2
 24584  00BB7A  6E4E               	movwf	_I2cComSts,c
 24585                           
 24586                           ;i2c_slv.c: 127: }
 24587  00BB7C  0012               	return	
 24588  00BB7E                     l1156:
 24589                           
 24590                           ;i2c_slv.c: 128: else
 24591                           ;i2c_slv.c: 129: {
 24592                           ;i2c_slv.c: 131: I2cComSts = TxRxIdle;
 24593                           
 24594                           ; BSR set to: 1
 24595  00BB7E  0E00               	movlw	0
 24596  00BB80  6E4E               	movwf	_I2cComSts,c
 24597                           
 24598                           ;i2c_slv.c: 132: }
 24599                           ;i2c_slv.c: 133: break;
 24600  00BB82  0012               	return	
 24601  00BB84                     
 24602                           ;i2c_slv.c: 137: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 24603  00BB84  0EAC               	movlw	low _I2cTxPacket
 24604  00BB86  0100               	movlb	0	; () banked
 24605  00BB88  6F61               	movwf	I2c_WriteData@WritePacket& (0+255),b
 24606  00BB8A  0E01               	movlw	high _I2cTxPacket
 24607  00BB8C  6F62               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 24608  00BB8E  ECA4  F069         	call	_I2c_WriteData	;wreg free
 24609  00BB92  0900               	iorlw	0
 24610  00BB94  B4D8               	btfsc	status,2,c
 24611  00BB96  0012               	return	
 24612                           
 24613                           ;i2c_slv.c: 138: {
 24614                           ;i2c_slv.c: 140: I2cComState = I2cComWriteComplete;
 24615  00BB98  0E03               	movlw	3
 24616  00BB9A  0101               	movlb	1	; () banked
 24617  00BB9C  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24618                           
 24619                           ; BSR set to: 1
 24620                           ;i2c_slv.c: 141: }
 24621                           ;i2c_slv.c: 142: break;
 24622  00BB9E  0012               	return	
 24623  00BBA0                     
 24624                           ; BSR set to: 1
 24625                           ;i2c_slv.c: 146: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 24626                           
 24627                           ; BSR set to: 1
 24628  00BBA0  0EA6               	movlw	low _I2cRxPacket
 24629  00BBA2  0100               	movlb	0	; () banked
 24630  00BBA4  6F63               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 24631  00BBA6  0E01               	movlw	high _I2cRxPacket
 24632  00BBA8  6F64               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 24633  00BBAA  ECE9  F068         	call	_I2c_ReadData	;wreg free
 24634  00BBAE  0900               	iorlw	0
 24635  00BBB0  B4D8               	btfsc	status,2,c
 24636  00BBB2  0012               	return	
 24637                           
 24638                           ;i2c_slv.c: 147: {
 24639                           ;i2c_slv.c: 149: I2cComState = I2cComReadComplete;
 24640  00BBB4  0E04               	movlw	4
 24641  00BBB6  0101               	movlb	1	; () banked
 24642  00BBB8  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24643                           
 24644                           ; BSR set to: 1
 24645                           ;i2c_slv.c: 150: }
 24646                           ;i2c_slv.c: 152: break;
 24647  00BBBA  0012               	return	
 24648  00BBBC                     
 24649                           ; BSR set to: 1
 24650                           ;i2c_slv.c: 156: I2cComState = I2cComIdle;
 24651                           
 24652                           ; BSR set to: 1
 24653  00BBBC  0E00               	movlw	0
 24654  00BBBE  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24655                           
 24656                           ;i2c_slv.c: 157: break;
 24657  00BBC0  0012               	return	
 24658  00BBC2                     
 24659                           ; BSR set to: 1
 24660                           ;i2c_slv.c: 161: I2cComState = I2cComIdle;
 24661                           
 24662                           ; BSR set to: 1
 24663  00BBC2  0E00               	movlw	0
 24664  00BBC4  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24665                           
 24666                           ; BSR set to: 1
 24667                           ;i2c_slv.c: 166: }
 24668                           
 24669                           ; BSR set to: 1
 24670                           ;i2c_slv.c: 165: break;
 24671                           
 24672                           ;i2c_slv.c: 164: default:
 24673                           
 24674                           ;i2c_slv.c: 162: break;
 24675  00BBC6  0012               	return	
 24676  00BBC8                     l1152:
 24677                           
 24678                           ; BSR set to: 1
 24679  00BBC8  0101               	movlb	1	; () banked
 24680  00BBCA  5163               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 24681                           
 24682                           ; Switch size 1, requested type "space"
 24683                           ; Number of cases is 5, Range of values is 0 to 4
 24684                           ; switch strategies available:
 24685                           ; Name         Instructions Cycles
 24686                           ; simple_byte           16     9 (average)
 24687                           ;	Chosen strategy is simple_byte
 24688  00BBCC  0A00               	xorlw	0	; case 0
 24689  00BBCE  B4D8               	btfsc	status,2,c
 24690  00BBD0  D7B6               	goto	l1153
 24691  00BBD2  0A01               	xorlw	1	; case 1
 24692  00BBD4  B4D8               	btfsc	status,2,c
 24693  00BBD6  D7D6               	goto	l1159
 24694  00BBD8  0A03               	xorlw	3	; case 2
 24695  00BBDA  B4D8               	btfsc	status,2,c
 24696  00BBDC  D7E1               	goto	l1161
 24697  00BBDE  0A01               	xorlw	1	; case 3
 24698  00BBE0  B4D8               	btfsc	status,2,c
 24699  00BBE2  D7EC               	goto	l1163
 24700  00BBE4  0A07               	xorlw	7	; case 4
 24701  00BBE6  A4D8               	btfss	status,2,c
 24702  00BBE8  0012               	return	
 24703  00BBEA  D7EB               	goto	l1164
 24704  00BBEC                     __end_of_I2cSendMsgSm:
 24705                           	opt stack 0
 24706                           tosu	equ	0xFFF
 24707                           tosh	equ	0xFFE
 24708                           tosl	equ	0xFFD
 24709                           pclath	equ	0xFFA
 24710                           tblptru	equ	0xFF8
 24711                           tblptrh	equ	0xFF7
 24712                           tblptrl	equ	0xFF6
 24713                           tablat	equ	0xFF5
 24714                           prodh	equ	0xFF4
 24715                           prodl	equ	0xFF3
 24716                           intcon	equ	0xFF2
 24717                           intcon2	equ	0xFF1
 24718                           intcon3	equ	0xFF0
 24719                           indf0	equ	0xFEF
 24720                           postinc0	equ	0xFEE
 24721                           plusw0	equ	0xFEB
 24722                           fsr0h	equ	0xFEA
 24723                           fsr0l	equ	0xFE9
 24724                           wreg	equ	0xFE8
 24725                           indf1	equ	0xFE7
 24726                           postinc1	equ	0xFE6
 24727                           postdec1	equ	0xFE5
 24728                           fsr1h	equ	0xFE2
 24729                           fsr1l	equ	0xFE1
 24730                           indf2	equ	0xFDF
 24731                           postinc2	equ	0xFDE
 24732                           postdec2	equ	0xFDD
 24733                           plusw2	equ	0xFDB
 24734                           fsr2h	equ	0xFDA
 24735                           fsr2l	equ	0xFD9
 24736                           status	equ	0xFD8
 24737                           
 24738 ;; *************** function _ReceiveEvt *****************
 24739 ;; Defined at:
 24740 ;;		line 95 in file "../Source/c/02_Osl/os_ser.c"
 24741 ;; Parameters:    Size  Location     Type
 24742 ;;  Event           2    0[BANK0 ] PTR struct EventStructur
 24743 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), WifiReceiveData(1), 
 24744 ;;		 -> WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), NewWifiPacketParser(1), 
 24745 ;;		 -> NewWifiPacket(1), WifiRxPacket(253), StartWifiModem(1), NewWifiUartData(1), 
 24746 ;; Auto vars:     Size  Location     Type
 24747 ;;  EventStatus     1    3[BANK0 ] enum E7721
 24748 ;; Return value:  Size  Location     Type
 24749 ;;                  1    wreg      enum E7693
 24750 ;; Registers used:
 24751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24752 ;; Tracked objects:
 24753 ;;		On entry : 0/0
 24754 ;;		On exit  : 0/0
 24755 ;;		Unchanged: 0/0
 24756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24760 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24761 ;;Total ram usage:        4 bytes
 24762 ;; Hardware stack levels used:    1
 24763 ;; Hardware stack levels required when called:   11
 24764 ;; This function calls:
 24765 ;;		Nothing
 24766 ;; This function is called by:
 24767 ;;		_MdmWifi_StartWifiModemSm
 24768 ;;		_MdmWifiGetUartData
 24769 ;;		_MdmWifiEvtParser
 24770 ;;		_MdmWifi_ReceiveWifiMsg
 24771 ;;		_StartConnectionSm
 24772 ;;		_SendDataSm
 24773 ;;		_ReceiveDataSm
 24774 ;;		_I2cSendMsgSm
 24775 ;;		_I2cSlv_I2cReadMsgSts
 24776 ;;		_MdmWifi_ReceiveWifiMsgTerminal
 24777 ;;		_MdmWifiCmd_ReceiveWifiMsg
 24778 ;; This function uses a non-reentrant model
 24779 ;;
 24780                           
 24781                           	psect	text120
 24782  00A30E                     __ptext120:
 24783                           	opt stack 0
 24784  00A30E                     _ReceiveEvt:
 24785                           	opt stack 13
 24786                           
 24787                           ;os_ser.c: 98: EventStatusType EventStatus = EventIdle;
 24788                           
 24789                           ;incstack = 0
 24790  00A30E  0E00               	movlw	0
 24791  00A310  0100               	movlb	0	; () banked
 24792  00A312  6F63               	movwf	ReceiveEvt@EventStatus& (0+255),b
 24793                           
 24794                           ; BSR set to: 0
 24795                           ;os_ser.c: 101: if (Event->EventStatus == EventSent)
 24796  00A314  C060  FFD9         	movff	ReceiveEvt@Event,fsr2l
 24797  00A318  C061  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 24798  00A31C  0E02               	movlw	2
 24799  00A31E  18DE               	xorwf	postinc2,w,c
 24800  00A320  A4D8               	btfss	status,2,c
 24801  00A322  D008               	goto	l761
 24802                           
 24803                           ; BSR set to: 0
 24804                           ;os_ser.c: 102: {
 24805                           ;os_ser.c: 104: Event->EventStatus = EventReceived;
 24806  00A324  C060  FFD9         	movff	ReceiveEvt@Event,fsr2l
 24807  00A328  C061  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 24808  00A32C  0E01               	movlw	1
 24809  00A32E  6EDF               	movwf	indf2,c
 24810                           
 24811                           ; BSR set to: 0
 24812                           ;os_ser.c: 106: EventStatus = EventReceived;
 24813  00A330  0E01               	movlw	1
 24814  00A332  D001               	goto	L30
 24815  00A334                     l761:
 24816                           
 24817                           ; BSR set to: 0
 24818                           ;os_ser.c: 108: else
 24819                           ;os_ser.c: 109: {
 24820                           ;os_ser.c: 111: EventStatus = EventIdle;
 24821                           
 24822                           ; BSR set to: 0
 24823  00A334  0E00               	movlw	0
 24824  00A336                     L30:
 24825  00A336  6F63               	movwf	ReceiveEvt@EventStatus& (0+255),b
 24826                           
 24827                           ; BSR set to: 0
 24828                           ;os_ser.c: 112: }
 24829                           ;os_ser.c: 115: return(EventStatus);
 24830  00A338  5163               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 24831  00A33A  0012               	return	
 24832  00A33C                     __end_of_ReceiveEvt:
 24833                           	opt stack 0
 24834                           tosu	equ	0xFFF
 24835                           tosh	equ	0xFFE
 24836                           tosl	equ	0xFFD
 24837                           pclath	equ	0xFFA
 24838                           tblptru	equ	0xFF8
 24839                           tblptrh	equ	0xFF7
 24840                           tblptrl	equ	0xFF6
 24841                           tablat	equ	0xFF5
 24842                           prodh	equ	0xFF4
 24843                           prodl	equ	0xFF3
 24844                           intcon	equ	0xFF2
 24845                           intcon2	equ	0xFF1
 24846                           intcon3	equ	0xFF0
 24847                           indf0	equ	0xFEF
 24848                           postinc0	equ	0xFEE
 24849                           plusw0	equ	0xFEB
 24850                           fsr0h	equ	0xFEA
 24851                           fsr0l	equ	0xFE9
 24852                           wreg	equ	0xFE8
 24853                           indf1	equ	0xFE7
 24854                           postinc1	equ	0xFE6
 24855                           postdec1	equ	0xFE5
 24856                           fsr1h	equ	0xFE2
 24857                           fsr1l	equ	0xFE1
 24858                           indf2	equ	0xFDF
 24859                           postinc2	equ	0xFDE
 24860                           postdec2	equ	0xFDD
 24861                           plusw2	equ	0xFDB
 24862                           fsr2h	equ	0xFDA
 24863                           fsr2l	equ	0xFD9
 24864                           status	equ	0xFD8
 24865                           
 24866 ;; *************** function _I2c_WriteData *****************
 24867 ;; Defined at:
 24868 ;;		line 252 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 24869 ;; Parameters:    Size  Location     Type
 24870 ;;  WritePacket     2    1[BANK0 ] PTR struct _I2cWritePack
 24871 ;;		 -> I2cTxPacket(5), 
 24872 ;; Auto vars:     Size  Location     Type
 24873 ;;		None
 24874 ;; Return value:  Size  Location     Type
 24875 ;;                  1    wreg      enum E7734
 24876 ;; Registers used:
 24877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24878 ;; Tracked objects:
 24879 ;;		On entry : 0/0
 24880 ;;		On exit  : 0/0
 24881 ;;		Unchanged: 0/0
 24882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24885 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24886 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24887 ;;Total ram usage:        4 bytes
 24888 ;; Hardware stack levels used:    1
 24889 ;; Hardware stack levels required when called:   12
 24890 ;; This function calls:
 24891 ;;		_CheckAckStatus
 24892 ;;		_CheckTxStatus
 24893 ;;		_StartCondition
 24894 ;;		_StopCondition
 24895 ;;		_WriteByte
 24896 ;; This function is called by:
 24897 ;;		_I2cSendMsgSm
 24898 ;; This function uses a non-reentrant model
 24899 ;;
 24900                           
 24901                           	psect	text121
 24902  00D348                     __ptext121:
 24903                           	opt stack 0
 24904  00D348                     _I2c_WriteData:
 24905                           	opt stack 14
 24906                           
 24907                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 24908                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 24909                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 24910                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 24911                           ;i2c_drv.c: 260: switch (I2cWriteState)
 24912                           
 24913                           ; BSR set to: 0
 24914                           ;incstack = 0
 24915  00D348  D09C               	goto	l160
 24916  00D34A                     
 24917                           ;i2c_drv.c: 264: StartCondition();
 24918  00D34A  EC46  F04F         	call	_StartCondition	;wreg free
 24919                           
 24920                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 24921  00D34E  0E00               	movlw	0
 24922  00D350  0101               	movlb	1	; () banked
 24923  00D352  6F74               	movwf	I2c_WriteData@WriteStatus& (0+255),b
 24924                           
 24925                           ; BSR set to: 1
 24926                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 24927  00D354  0E01               	movlw	1
 24928  00D356  D06C               	goto	L34
 24929  00D358                     
 24930                           ; BSR set to: 1
 24931                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 24932                           
 24933                           ; BSR set to: 1
 24934  00D358  0100               	movlb	0	; () banked
 24935  00D35A  EE20 F001          	lfsr	2,1
 24936  00D35E  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 24937  00D360  26D9               	addwf	fsr2l,f,c
 24938  00D362  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 24939  00D364  22DA               	addwfc	fsr2h,f,c
 24940  00D366  50DF               	movf	indf2,w,c
 24941  00D368  6F63               	movwf	??_I2c_WriteData& (0+255),b
 24942  00D36A  C061  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 24943  00D36E  C062  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 24944  00D372  50DF               	movf	indf2,w,c
 24945  00D374  6F64               	movwf	(??_I2c_WriteData+1)& (0+255),b
 24946  00D376  90D8               	bcf	status,0,c
 24947  00D378  3564               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 24948  00D37A  1163               	iorwf	??_I2c_WriteData& (0+255),w,b
 24949  00D37C  C061  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 24950  00D380  C062  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 24951  00D384  6EDF               	movwf	indf2,c
 24952                           
 24953                           ; BSR set to: 0
 24954                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 24955  00D386  C061  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 24956  00D38A  C062  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 24957  00D38E  50DF               	movf	indf2,w,c
 24958  00D390  EC5C  F04F         	call	_WriteByte
 24959                           
 24960                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 24961  00D394  0E02               	movlw	2
 24962  00D396  0101               	movlb	1	; () banked
 24963  00D398  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 24964  00D39A                     
 24965                           ; BSR set to: 1
 24966                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 24967                           
 24968                           ; BSR set to: 1
 24969  00D39A  EC52  F04F         	call	_CheckTxStatus	;wreg free
 24970  00D39E  0900               	iorlw	0
 24971  00D3A0  A4D8               	btfss	status,2,c
 24972  00D3A2  D08F               	goto	l162
 24973                           
 24974                           ;i2c_drv.c: 282: {
 24975                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 24976  00D3A4  0E03               	movlw	3
 24977  00D3A6  D01B               	goto	L38
 24978  00D3A8                     
 24979                           ; BSR set to: 1
 24980                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 24981                           
 24982                           ; BSR set to: 1
 24983  00D3A8  0100               	movlb	0	; () banked
 24984  00D3AA  EE20 F002          	lfsr	2,2
 24985  00D3AE  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 24986  00D3B0  26D9               	addwf	fsr2l,f,c
 24987  00D3B2  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 24988  00D3B4  22DA               	addwfc	fsr2h,f,c
 24989  00D3B6  CFDE F063          	movff	postinc2,??_I2c_WriteData
 24990  00D3BA  CFDD F064          	movff	postdec2,??_I2c_WriteData+1
 24991  00D3BE  C063  FFD9         	movff	??_I2c_WriteData,fsr2l
 24992  00D3C2  C064  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 24993  00D3C6  50DF               	movf	indf2,w,c
 24994  00D3C8  EC5C  F04F         	call	_WriteByte
 24995                           
 24996                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 24997  00D3CC  0E04               	movlw	4
 24998  00D3CE                     L37:
 24999  00D3CE  0101               	movlb	1	; () banked
 25000  00D3D0  D02F               	goto	L34
 25001  00D3D2                     
 25002                           ; BSR set to: 1
 25003                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 25004                           
 25005                           ; BSR set to: 1
 25006  00D3D2  EC52  F04F         	call	_CheckTxStatus	;wreg free
 25007  00D3D6  0900               	iorlw	0
 25008  00D3D8  A4D8               	btfss	status,2,c
 25009  00D3DA  D073               	goto	l162
 25010                           
 25011                           ;i2c_drv.c: 300: {
 25012                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 25013  00D3DC  0E05               	movlw	5
 25014  00D3DE                     L38:
 25015  00D3DE  0101               	movlb	1	; () banked
 25016  00D3E0  6F76               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25017                           
 25018                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 25019  00D3E2  0E08               	movlw	8
 25020  00D3E4  D025               	goto	L34
 25021  00D3E6                     
 25022                           ; BSR set to: 1
 25023                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 25024                           
 25025                           ; BSR set to: 1
 25026  00D3E6  0100               	movlb	0	; () banked
 25027  00D3E8  EE20 F004          	lfsr	2,4
 25028  00D3EC  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25029  00D3EE  26D9               	addwf	fsr2l,f,c
 25030  00D3F0  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25031  00D3F2  22DA               	addwfc	fsr2h,f,c
 25032  00D3F4  50DF               	movf	indf2,w,c
 25033  00D3F6  B4D8               	btfsc	status,2,c
 25034  00D3F8  D010               	goto	l170
 25035                           
 25036                           ; BSR set to: 0
 25037                           ;i2c_drv.c: 310: {
 25038                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 25039  00D3FA  EE20 F004          	lfsr	2,4
 25040  00D3FE  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25041  00D400  26D9               	addwf	fsr2l,f,c
 25042  00D402  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25043  00D404  22DA               	addwfc	fsr2h,f,c
 25044  00D406  06DF               	decf	indf2,f,c
 25045                           
 25046                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 25047  00D408  EE20 F002          	lfsr	2,2
 25048  00D40C  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25049  00D40E  26D9               	addwf	fsr2l,f,c
 25050  00D410  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25051  00D412  22DA               	addwfc	fsr2h,f,c
 25052  00D414  2ADE               	incf	postinc2,f,c
 25053  00D416  0E00               	movlw	0
 25054  00D418  22DD               	addwfc	postdec2,f,c
 25055  00D41A                     l170:
 25056                           
 25057                           ; BSR set to: 0
 25058                           ;i2c_drv.c: 315: }
 25059                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 25060  00D41A  EE20 F004          	lfsr	2,4
 25061  00D41E  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25062  00D420  26D9               	addwf	fsr2l,f,c
 25063  00D422  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25064  00D424  22DA               	addwfc	fsr2h,f,c
 25065  00D426  50DF               	movf	indf2,w,c
 25066  00D428  A4D8               	btfss	status,2,c
 25067  00D42A  D004               	goto	l171
 25068                           
 25069                           ; BSR set to: 0
 25070                           ;i2c_drv.c: 319: {
 25071                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 25072  00D42C  0E06               	movlw	6
 25073  00D42E  D7CF               	goto	L37
 25074  00D430                     L34:
 25075  00D430  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25076                           
 25077                           ;i2c_drv.c: 322: }
 25078  00D432  D047               	goto	l162
 25079  00D434                     l171:
 25080                           
 25081                           ;i2c_drv.c: 323: else
 25082                           ;i2c_drv.c: 324: {
 25083                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 25084                           
 25085                           ; BSR set to: 1
 25086  00D434  0E03               	movlw	3
 25087  00D436  D7CB               	goto	L37
 25088  00D438                     
 25089                           ; BSR set to: 1
 25090                           ;i2c_drv.c: 332: StopCondition();
 25091                           
 25092                           ; BSR set to: 1
 25093  00D438  EC48  F04F         	call	_StopCondition	;wreg free
 25094                           
 25095                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 25096  00D43C  0E07               	movlw	7
 25097  00D43E  D7C7               	goto	L37
 25098  00D440                     
 25099                           ; BSR set to: 1
 25100                           ;i2c_drv.c: 339: TentativeCounter++;
 25101                           
 25102                           ; BSR set to: 1
 25103  00D440  2B75               	incf	I2c_WriteData@TentativeCounter& (0+255),f,b
 25104                           
 25105                           ; BSR set to: 1
 25106                           ;i2c_drv.c: 341: if (CheckAckStatus() == ((UINT8)(0)))
 25107  00D442  EC4D  F04F         	call	_CheckAckStatus	;wreg free
 25108  00D446  0900               	iorlw	0
 25109  00D448  A4D8               	btfss	status,2,c
 25110  00D44A  D006               	goto	l175
 25111                           
 25112                           ;i2c_drv.c: 342: {
 25113                           ;i2c_drv.c: 344: TentativeCounter = 0;
 25114  00D44C  0E00               	movlw	0
 25115  00D44E  0101               	movlb	1	; () banked
 25116  00D450  6F75               	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 25117                           
 25118                           ; BSR set to: 1
 25119                           ;i2c_drv.c: 346: I2cWriteState = I2cNextState;
 25120  00D452  C176  F177         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 25121                           
 25122                           ;i2c_drv.c: 347: }
 25123  00D456  D035               	goto	l162
 25124  00D458                     l175:
 25125                           
 25126                           ;i2c_drv.c: 348: else
 25127                           ;i2c_drv.c: 349: {
 25128                           ;i2c_drv.c: 351: if (TentativeCounter >= ((UINT8)(3)))
 25129                           
 25130                           ; BSR set to: 1
 25131  00D458  0E02               	movlw	2
 25132  00D45A  0101               	movlb	1	; () banked
 25133  00D45C  6575               	cpfsgt	I2c_WriteData@TentativeCounter& (0+255),b
 25134  00D45E  D031               	goto	l162
 25135                           
 25136                           ; BSR set to: 1
 25137                           ;i2c_drv.c: 352: {
 25138                           ;i2c_drv.c: 354: I2cWriteState = TxErrorStatus;
 25139  00D460  0E09               	movlw	9
 25140  00D462  D7E6               	goto	L34
 25141  00D464                     
 25142                           ; BSR set to: 1
 25143                           ;i2c_drv.c: 361: I2cWriteState = TxAssertStart;
 25144                           
 25145                           ; BSR set to: 1
 25146  00D464  0E00               	movlw	0
 25147  00D466  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25148                           
 25149                           ;i2c_drv.c: 362: I2cNextState = TxAssertStart;
 25150  00D468  0E00               	movlw	0
 25151  00D46A  6F76               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25152                           
 25153                           ;i2c_drv.c: 364: WriteStatus = I2cWriteOk;
 25154  00D46C  0E02               	movlw	2
 25155  00D46E  D007               	goto	L36
 25156  00D470                     
 25157                           ; BSR set to: 1
 25158                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 25159                           
 25160                           ; BSR set to: 1
 25161  00D470  0E00               	movlw	0
 25162  00D472  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25163                           
 25164                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 25165  00D474  0E00               	movlw	0
 25166  00D476  6F76               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25167                           
 25168                           ;i2c_drv.c: 372: TentativeCounter = 0;
 25169  00D478  0E00               	movlw	0
 25170  00D47A  6F75               	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 25171                           
 25172                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 25173  00D47C  0E01               	movlw	1
 25174  00D47E                     L36:
 25175  00D47E  6F74               	movwf	I2c_WriteData@WriteStatus& (0+255),b
 25176                           
 25177                           ; BSR set to: 1
 25178                           ;i2c_drv.c: 379: }
 25179                           
 25180                           ; BSR set to: 1
 25181                           ;i2c_drv.c: 378: break;
 25182                           
 25183                           ;i2c_drv.c: 377: default:
 25184                           
 25185                           ;i2c_drv.c: 375: break;
 25186  00D480  D020               	goto	l162
 25187  00D482                     l160:
 25188                           
 25189                           ; BSR set to: 1
 25190  00D482  0101               	movlb	1	; () banked
 25191  00D484  5177               	movf	I2c_WriteData@I2cWriteState& (0+255),w,b
 25192                           
 25193                           ; Switch size 1, requested type "space"
 25194                           ; Number of cases is 10, Range of values is 0 to 9
 25195                           ; switch strategies available:
 25196                           ; Name         Instructions Cycles
 25197                           ; simple_byte           31    16 (average)
 25198                           ;	Chosen strategy is simple_byte
 25199  00D486  0A00               	xorlw	0	; case 0
 25200  00D488  B4D8               	btfsc	status,2,c
 25201  00D48A  D75F               	goto	l161
 25202  00D48C  0A01               	xorlw	1	; case 1
 25203  00D48E  B4D8               	btfsc	status,2,c
 25204  00D490  D763               	goto	l163
 25205  00D492  0A03               	xorlw	3	; case 2
 25206  00D494  B4D8               	btfsc	status,2,c
 25207  00D496  D781               	goto	l164
 25208  00D498  0A01               	xorlw	1	; case 3
 25209  00D49A  B4D8               	btfsc	status,2,c
 25210  00D49C  D785               	goto	l166
 25211  00D49E  0A07               	xorlw	7	; case 4
 25212  00D4A0  B4D8               	btfsc	status,2,c
 25213  00D4A2  D797               	goto	l167
 25214  00D4A4  0A01               	xorlw	1	; case 5
 25215  00D4A6  B4D8               	btfsc	status,2,c
 25216  00D4A8  D79E               	goto	l169
 25217  00D4AA  0A03               	xorlw	3	; case 6
 25218  00D4AC  B4D8               	btfsc	status,2,c
 25219  00D4AE  D7C4               	goto	l173
 25220  00D4B0  0A01               	xorlw	1	; case 7
 25221  00D4B2  B4D8               	btfsc	status,2,c
 25222  00D4B4  D7D7               	goto	l178
 25223  00D4B6  0A0F               	xorlw	15	; case 8
 25224  00D4B8  B4D8               	btfsc	status,2,c
 25225  00D4BA  D7C2               	goto	l174
 25226  00D4BC  0A01               	xorlw	1	; case 9
 25227  00D4BE  B4D8               	btfsc	status,2,c
 25228  00D4C0  D7D7               	goto	l179
 25229  00D4C2                     l162:
 25230                           
 25231                           ;i2c_drv.c: 382: return WriteStatus;
 25232                           
 25233                           ; BSR set to: 1
 25234  00D4C2  0101               	movlb	1	; () banked
 25235  00D4C4  5174               	movf	I2c_WriteData@WriteStatus& (0+255),w,b
 25236  00D4C6  0012               	return	
 25237  00D4C8                     __end_of_I2c_WriteData:
 25238                           	opt stack 0
 25239                           tosu	equ	0xFFF
 25240                           tosh	equ	0xFFE
 25241                           tosl	equ	0xFFD
 25242                           pclath	equ	0xFFA
 25243                           tblptru	equ	0xFF8
 25244                           tblptrh	equ	0xFF7
 25245                           tblptrl	equ	0xFF6
 25246                           tablat	equ	0xFF5
 25247                           prodh	equ	0xFF4
 25248                           prodl	equ	0xFF3
 25249                           intcon	equ	0xFF2
 25250                           intcon2	equ	0xFF1
 25251                           intcon3	equ	0xFF0
 25252                           indf0	equ	0xFEF
 25253                           postinc0	equ	0xFEE
 25254                           plusw0	equ	0xFEB
 25255                           fsr0h	equ	0xFEA
 25256                           fsr0l	equ	0xFE9
 25257                           wreg	equ	0xFE8
 25258                           indf1	equ	0xFE7
 25259                           postinc1	equ	0xFE6
 25260                           postdec1	equ	0xFE5
 25261                           fsr1h	equ	0xFE2
 25262                           fsr1l	equ	0xFE1
 25263                           indf2	equ	0xFDF
 25264                           postinc2	equ	0xFDE
 25265                           postdec2	equ	0xFDD
 25266                           plusw2	equ	0xFDB
 25267                           fsr2h	equ	0xFDA
 25268                           fsr2l	equ	0xFD9
 25269                           status	equ	0xFD8
 25270                           
 25271 ;; *************** function _I2c_ReadData *****************
 25272 ;; Defined at:
 25273 ;;		line 393 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25274 ;; Parameters:    Size  Location     Type
 25275 ;;  ReadPacket      2    3[BANK0 ] PTR struct _I2cReadPacke
 25276 ;;		 -> I2cRxPacket(6), 
 25277 ;; Auto vars:     Size  Location     Type
 25278 ;;		None
 25279 ;; Return value:  Size  Location     Type
 25280 ;;                  1    wreg      enum E7781
 25281 ;; Registers used:
 25282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25283 ;; Tracked objects:
 25284 ;;		On entry : 0/0
 25285 ;;		On exit  : 0/0
 25286 ;;		Unchanged: 0/0
 25287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25290 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25291 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25292 ;;Total ram usage:        4 bytes
 25293 ;; Hardware stack levels used:    1
 25294 ;; Hardware stack levels required when called:   12
 25295 ;; This function calls:
 25296 ;;		_CheckAckStatus
 25297 ;;		_CheckTxStatus
 25298 ;;		_EnableReceiver
 25299 ;;		_GenerateEvt
 25300 ;;		_ReadByte
 25301 ;;		_SetAckStatus
 25302 ;;		_StartCondition
 25303 ;;		_StopCondition
 25304 ;;		_WriteByte
 25305 ;; This function is called by:
 25306 ;;		_I2cSendMsgSm
 25307 ;; This function uses a non-reentrant model
 25308 ;;
 25309                           
 25310                           	psect	text122
 25311  00D1D2                     __ptext122:
 25312                           	opt stack 0
 25313  00D1D2                     _I2c_ReadData:
 25314                           	opt stack 14
 25315                           
 25316                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 25317                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 25318                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 25319                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 25320                           ;i2c_drv.c: 402: switch (I2cReadState)
 25321                           
 25322                           ; BSR set to: 1
 25323                           ;incstack = 0
 25324  00D1D2  D09A               	goto	l192
 25325  00D1D4                     
 25326                           ;i2c_drv.c: 406: StartCondition();
 25327  00D1D4  EC46  F04F         	call	_StartCondition	;wreg free
 25328                           
 25329                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 25330  00D1D8  0E00               	movlw	0
 25331  00D1DA  0101               	movlb	1	; () banked
 25332  00D1DC  6F70               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 25333                           
 25334                           ; BSR set to: 1
 25335                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 25336  00D1DE  0E01               	movlw	1
 25337  00D1E0  D020               	goto	L39
 25338  00D1E2                     
 25339                           ; BSR set to: 1
 25340                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 25341                           
 25342                           ; BSR set to: 1
 25343  00D1E2  0100               	movlb	0	; () banked
 25344  00D1E4  EE20 F001          	lfsr	2,1
 25345  00D1E8  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25346  00D1EA  26D9               	addwf	fsr2l,f,c
 25347  00D1EC  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25348  00D1EE  22DA               	addwfc	fsr2h,f,c
 25349  00D1F0  50DF               	movf	indf2,w,c
 25350  00D1F2  6F65               	movwf	??_I2c_ReadData& (0+255),b
 25351  00D1F4  C063  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 25352  00D1F8  C064  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 25353  00D1FC  50DF               	movf	indf2,w,c
 25354  00D1FE  6F66               	movwf	(??_I2c_ReadData+1)& (0+255),b
 25355  00D200  90D8               	bcf	status,0,c
 25356  00D202  3566               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 25357  00D204  1165               	iorwf	??_I2c_ReadData& (0+255),w,b
 25358  00D206  C063  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 25359  00D20A  C064  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 25360  00D20E  6EDF               	movwf	indf2,c
 25361                           
 25362                           ; BSR set to: 0
 25363                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 25364  00D210  C063  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 25365  00D214  C064  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 25366  00D218  50DF               	movf	indf2,w,c
 25367  00D21A  EC5C  F04F         	call	_WriteByte
 25368                           
 25369                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 25370  00D21E  0E02               	movlw	2
 25371  00D220  D06C               	goto	L43
 25372  00D222                     L39:
 25373  00D222  6F73               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 25374                           
 25375                           ;i2c_drv.c: 420: break;
 25376  00D224  D08E               	goto	l194
 25377  00D226                     
 25378                           ; BSR set to: 1
 25379                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 25380                           
 25381                           ; BSR set to: 1
 25382  00D226  EC52  F04F         	call	_CheckTxStatus	;wreg free
 25383  00D22A  0900               	iorlw	0
 25384  00D22C  A4D8               	btfss	status,2,c
 25385  00D22E  D089               	goto	l194
 25386                           
 25387                           ;i2c_drv.c: 425: {
 25388                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 25389  00D230  0E03               	movlw	3
 25390  00D232  D063               	goto	L43
 25391  00D234                     
 25392                           ; BSR set to: 1
 25393                           ;i2c_drv.c: 433: TentativeCounter++;
 25394                           
 25395                           ; BSR set to: 1
 25396  00D234  2B71               	incf	I2c_ReadData@TentativeCounter& (0+255),f,b
 25397                           
 25398                           ; BSR set to: 1
 25399                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 25400  00D236  EC4D  F04F         	call	_CheckAckStatus	;wreg free
 25401  00D23A  0900               	iorlw	0
 25402  00D23C  A4D8               	btfss	status,2,c
 25403  00D23E  D005               	goto	l199
 25404                           
 25405                           ;i2c_drv.c: 436: {
 25406                           ;i2c_drv.c: 438: TentativeCounter = 0;
 25407  00D240  0E00               	movlw	0
 25408  00D242  0101               	movlb	1	; () banked
 25409  00D244  6F71               	movwf	I2c_ReadData@TentativeCounter& (0+255),b
 25410                           
 25411                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 25412  00D246  0E04               	movlw	4
 25413  00D248  D7EC               	goto	L39
 25414  00D24A                     l199:
 25415                           
 25416                           ;i2c_drv.c: 442: else
 25417                           ;i2c_drv.c: 443: {
 25418                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 25419                           
 25420                           ; BSR set to: 1
 25421  00D24A  0E02               	movlw	2
 25422  00D24C  0101               	movlb	1	; () banked
 25423  00D24E  6571               	cpfsgt	I2c_ReadData@TentativeCounter& (0+255),b
 25424  00D250  D078               	goto	l194
 25425                           
 25426                           ; BSR set to: 1
 25427                           ;i2c_drv.c: 446: {
 25428                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 25429  00D252  0E08               	movlw	8
 25430  00D254  D7E6               	goto	L39
 25431  00D256                     
 25432                           ; BSR set to: 1
 25433                           ;i2c_drv.c: 455: EnableReceiver();
 25434                           
 25435                           ; BSR set to: 1
 25436  00D256  EC44  F04F         	call	_EnableReceiver	;wreg free
 25437                           
 25438                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 25439  00D25A  0E05               	movlw	5
 25440  00D25C  D04E               	goto	L43
 25441  00D25E                     
 25442                           ; BSR set to: 1
 25443                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 25444                           
 25445                           ; BSR set to: 1
 25446  00D25E  EC52  F04F         	call	_CheckTxStatus	;wreg free
 25447  00D262  0900               	iorlw	0
 25448  00D264  A4D8               	btfss	status,2,c
 25449  00D266  D06D               	goto	l194
 25450                           
 25451                           ;i2c_drv.c: 463: {
 25452                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 25453  00D268  0100               	movlb	0	; () banked
 25454  00D26A  EE20 F002          	lfsr	2,2
 25455  00D26E  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25456  00D270  26D9               	addwf	fsr2l,f,c
 25457  00D272  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25458  00D274  22DA               	addwfc	fsr2h,f,c
 25459  00D276  CFDE F065          	movff	postinc2,??_I2c_ReadData
 25460  00D27A  CFDD F066          	movff	postdec2,??_I2c_ReadData+1
 25461  00D27E  C065  FFD9         	movff	??_I2c_ReadData,fsr2l
 25462  00D282  C066  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 25463  00D286  EC57  F04F         	call	_ReadByte	;wreg free
 25464  00D28A  6EDF               	movwf	indf2,c
 25465                           
 25466                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 25467  00D28C  0100               	movlb	0	; () banked
 25468  00D28E  EE20 F002          	lfsr	2,2
 25469  00D292  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25470  00D294  26D9               	addwf	fsr2l,f,c
 25471  00D296  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25472  00D298  22DA               	addwfc	fsr2h,f,c
 25473  00D29A  2ADE               	incf	postinc2,f,c
 25474  00D29C  0E00               	movlw	0
 25475  00D29E  22DD               	addwfc	postdec2,f,c
 25476                           
 25477                           ; BSR set to: 0
 25478                           ;i2c_drv.c: 469: DataCounter++;
 25479  00D2A0  0101               	movlb	1	; () banked
 25480  00D2A2  2B72               	incf	I2c_ReadData@DataCounter& (0+255),f,b
 25481                           
 25482                           ; BSR set to: 1
 25483                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 25484  00D2A4  0E06               	movlw	6
 25485  00D2A6  D7BD               	goto	L39
 25486  00D2A8                     
 25487                           ; BSR set to: 1
 25488                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 25489                           
 25490                           ; BSR set to: 1
 25491  00D2A8  0100               	movlb	0	; () banked
 25492  00D2AA  EE20 F004          	lfsr	2,4
 25493  00D2AE  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25494  00D2B0  26D9               	addwf	fsr2l,f,c
 25495  00D2B2  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25496  00D2B4  22DA               	addwfc	fsr2h,f,c
 25497  00D2B6  50DE               	movf	postinc2,w,c
 25498  00D2B8  0101               	movlb	1	; () banked
 25499  00D2BA  5D72               	subwf	I2c_ReadData@DataCounter& (0+255),w,b
 25500  00D2BC  A0D8               	btfss	status,0,c
 25501  00D2BE  D009               	goto	l206
 25502                           
 25503                           ; BSR set to: 1
 25504                           ;i2c_drv.c: 478: {
 25505                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 25506  00D2C0  0E01               	movlw	1
 25507  00D2C2  ECBF  F04F         	call	_SetAckStatus
 25508                           
 25509                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 25510  00D2C6  0E07               	movlw	7
 25511  00D2C8  0101               	movlb	1	; () banked
 25512  00D2CA  6F73               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 25513                           
 25514                           ; BSR set to: 1
 25515                           ;i2c_drv.c: 484: DataCounter = 0;
 25516  00D2CC  0E00               	movlw	0
 25517  00D2CE  6F72               	movwf	I2c_ReadData@DataCounter& (0+255),b
 25518                           
 25519                           ;i2c_drv.c: 485: }
 25520  00D2D0  D038               	goto	l194
 25521  00D2D2                     l206:
 25522                           
 25523                           ; BSR set to: 1
 25524                           ;i2c_drv.c: 486: else
 25525                           ;i2c_drv.c: 487: {
 25526                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 25527                           
 25528                           ; BSR set to: 1
 25529  00D2D2  0E00               	movlw	0
 25530  00D2D4  ECBF  F04F         	call	_SetAckStatus
 25531                           
 25532                           ;i2c_drv.c: 491: I2cReadState = RxGetData;
 25533  00D2D8  0E04               	movlw	4
 25534  00D2DA  D00F               	goto	L43
 25535  00D2DC                     
 25536                           ; BSR set to: 1
 25537                           ;i2c_drv.c: 497: StopCondition();
 25538                           
 25539                           ; BSR set to: 1
 25540  00D2DC  EC48  F04F         	call	_StopCondition	;wreg free
 25541                           
 25542                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 25543  00D2E0  0E02               	movlw	2
 25544  00D2E2  0101               	movlb	1	; () banked
 25545  00D2E4  6F70               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 25546                           
 25547                           ; BSR set to: 1
 25548                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 25549  00D2E6  0E05               	movlw	5
 25550  00D2E8  0100               	movlb	0	; () banked
 25551  00D2EA  2563               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 25552  00D2EC  6F60               	movwf	GenerateEvt@Event& (0+255),b
 25553  00D2EE  0E00               	movlw	0
 25554  00D2F0  2164               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25555  00D2F2  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25556  00D2F4  ECF5  F04F         	call	_GenerateEvt	;wreg free
 25557                           
 25558                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 25559  00D2F8  0E00               	movlw	0
 25560  00D2FA                     L43:
 25561  00D2FA  0101               	movlb	1	; () banked
 25562  00D2FC  D792               	goto	L39
 25563  00D2FE                     
 25564                           ; BSR set to: 1
 25565                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 25566                           
 25567                           ; BSR set to: 1
 25568  00D2FE  0E00               	movlw	0
 25569  00D300  6F73               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 25570                           
 25571                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 25572  00D302  0E01               	movlw	1
 25573  00D304  6F70               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 25574                           
 25575                           ; BSR set to: 1
 25576                           ;i2c_drv.c: 515: }
 25577                           
 25578                           ; BSR set to: 1
 25579                           ;i2c_drv.c: 514: break;
 25580                           
 25581                           ;i2c_drv.c: 513: default:
 25582                           
 25583                           ;i2c_drv.c: 511: break;
 25584  00D306  D01D               	goto	l194
 25585  00D308                     l192:
 25586                           
 25587                           ; BSR set to: 1
 25588  00D308  0101               	movlb	1	; () banked
 25589  00D30A  5173               	movf	I2c_ReadData@I2cReadState& (0+255),w,b
 25590                           
 25591                           ; Switch size 1, requested type "space"
 25592                           ; Number of cases is 9, Range of values is 0 to 8
 25593                           ; switch strategies available:
 25594                           ; Name         Instructions Cycles
 25595                           ; simple_byte           28    15 (average)
 25596                           ;	Chosen strategy is simple_byte
 25597  00D30C  0A00               	xorlw	0	; case 0
 25598  00D30E  B4D8               	btfsc	status,2,c
 25599  00D310  D761               	goto	l193
 25600  00D312  0A01               	xorlw	1	; case 1
 25601  00D314  B4D8               	btfsc	status,2,c
 25602  00D316  D765               	goto	l195
 25603  00D318  0A03               	xorlw	3	; case 2
 25604  00D31A  B4D8               	btfsc	status,2,c
 25605  00D31C  D784               	goto	l196
 25606  00D31E  0A01               	xorlw	1	; case 3
 25607  00D320  B4D8               	btfsc	status,2,c
 25608  00D322  D788               	goto	l198
 25609  00D324  0A07               	xorlw	7	; case 4
 25610  00D326  B4D8               	btfsc	status,2,c
 25611  00D328  D796               	goto	l202
 25612  00D32A  0A01               	xorlw	1	; case 5
 25613  00D32C  B4D8               	btfsc	status,2,c
 25614  00D32E  D797               	goto	l203
 25615  00D330  0A03               	xorlw	3	; case 6
 25616  00D332  B4D8               	btfsc	status,2,c
 25617  00D334  D7B9               	goto	l205
 25618  00D336  0A01               	xorlw	1	; case 7
 25619  00D338  B4D8               	btfsc	status,2,c
 25620  00D33A  D7D0               	goto	l208
 25621  00D33C  0A0F               	xorlw	15	; case 8
 25622  00D33E  B4D8               	btfsc	status,2,c
 25623  00D340  D7DE               	goto	l209
 25624  00D342                     l194:
 25625                           
 25626                           ;i2c_drv.c: 518: return ReadStatus;
 25627                           
 25628                           ; BSR set to: 1
 25629  00D342  0101               	movlb	1	; () banked
 25630  00D344  5170               	movf	I2c_ReadData@ReadStatus& (0+255),w,b
 25631  00D346  0012               	return	
 25632  00D348                     __end_of_I2c_ReadData:
 25633                           	opt stack 0
 25634                           tosu	equ	0xFFF
 25635                           tosh	equ	0xFFE
 25636                           tosl	equ	0xFFD
 25637                           pclath	equ	0xFFA
 25638                           tblptru	equ	0xFF8
 25639                           tblptrh	equ	0xFF7
 25640                           tblptrl	equ	0xFF6
 25641                           tablat	equ	0xFF5
 25642                           prodh	equ	0xFF4
 25643                           prodl	equ	0xFF3
 25644                           intcon	equ	0xFF2
 25645                           intcon2	equ	0xFF1
 25646                           intcon3	equ	0xFF0
 25647                           indf0	equ	0xFEF
 25648                           postinc0	equ	0xFEE
 25649                           plusw0	equ	0xFEB
 25650                           fsr0h	equ	0xFEA
 25651                           fsr0l	equ	0xFE9
 25652                           wreg	equ	0xFE8
 25653                           indf1	equ	0xFE7
 25654                           postinc1	equ	0xFE6
 25655                           postdec1	equ	0xFE5
 25656                           fsr1h	equ	0xFE2
 25657                           fsr1l	equ	0xFE1
 25658                           indf2	equ	0xFDF
 25659                           postinc2	equ	0xFDE
 25660                           postdec2	equ	0xFDD
 25661                           plusw2	equ	0xFDB
 25662                           fsr2h	equ	0xFDA
 25663                           fsr2l	equ	0xFD9
 25664                           status	equ	0xFD8
 25665                           
 25666 ;; *************** function _WriteByte *****************
 25667 ;; Defined at:
 25668 ;;		line 190 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25669 ;; Parameters:    Size  Location     Type
 25670 ;;  Byte            1    wreg     unsigned char 
 25671 ;; Auto vars:     Size  Location     Type
 25672 ;;  Byte            1    0[BANK0 ] unsigned char 
 25673 ;; Return value:  Size  Location     Type
 25674 ;;                  1    wreg      void 
 25675 ;; Registers used:
 25676 ;;		wreg
 25677 ;; Tracked objects:
 25678 ;;		On entry : 0/0
 25679 ;;		On exit  : 0/0
 25680 ;;		Unchanged: 0/0
 25681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25683 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25685 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25686 ;;Total ram usage:        1 bytes
 25687 ;; Hardware stack levels used:    1
 25688 ;; Hardware stack levels required when called:   11
 25689 ;; This function calls:
 25690 ;;		Nothing
 25691 ;; This function is called by:
 25692 ;;		_I2c_WriteData
 25693 ;;		_I2c_ReadData
 25694 ;; This function uses a non-reentrant model
 25695 ;;
 25696                           
 25697                           	psect	text123
 25698  009EB8                     __ptext123:
 25699                           	opt stack 0
 25700  009EB8                     _WriteByte:
 25701                           	opt stack 14
 25702                           
 25703                           ; BSR set to: 1
 25704                           ;incstack = 0
 25705                           ;WriteByte@Byte stored from wreg
 25706  009EB8  0100               	movlb	0	; () banked
 25707  009EBA  6F60               	movwf	WriteByte@Byte& (0+255),b
 25708                           
 25709                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 25710  009EBC  C060  FF75         	movff	WriteByte@Byte,3957	;volatile
 25711  009EC0  0012               	return		;funcret
 25712  009EC2                     __end_of_WriteByte:
 25713                           	opt stack 0
 25714                           tosu	equ	0xFFF
 25715                           tosh	equ	0xFFE
 25716                           tosl	equ	0xFFD
 25717                           pclath	equ	0xFFA
 25718                           tblptru	equ	0xFF8
 25719                           tblptrh	equ	0xFF7
 25720                           tblptrl	equ	0xFF6
 25721                           tablat	equ	0xFF5
 25722                           prodh	equ	0xFF4
 25723                           prodl	equ	0xFF3
 25724                           intcon	equ	0xFF2
 25725                           intcon2	equ	0xFF1
 25726                           intcon3	equ	0xFF0
 25727                           indf0	equ	0xFEF
 25728                           postinc0	equ	0xFEE
 25729                           plusw0	equ	0xFEB
 25730                           fsr0h	equ	0xFEA
 25731                           fsr0l	equ	0xFE9
 25732                           wreg	equ	0xFE8
 25733                           indf1	equ	0xFE7
 25734                           postinc1	equ	0xFE6
 25735                           postdec1	equ	0xFE5
 25736                           fsr1h	equ	0xFE2
 25737                           fsr1l	equ	0xFE1
 25738                           indf2	equ	0xFDF
 25739                           postinc2	equ	0xFDE
 25740                           postdec2	equ	0xFDD
 25741                           plusw2	equ	0xFDB
 25742                           fsr2h	equ	0xFDA
 25743                           fsr2l	equ	0xFD9
 25744                           status	equ	0xFD8
 25745                           
 25746 ;; *************** function _StopCondition *****************
 25747 ;; Defined at:
 25748 ;;		line 120 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25749 ;; Parameters:    Size  Location     Type
 25750 ;;		None
 25751 ;; Auto vars:     Size  Location     Type
 25752 ;;		None
 25753 ;; Return value:  Size  Location     Type
 25754 ;;                  1    wreg      void 
 25755 ;; Registers used:
 25756 ;;		status,2, status,0
 25757 ;; Tracked objects:
 25758 ;;		On entry : 0/0
 25759 ;;		On exit  : 0/0
 25760 ;;		Unchanged: 0/0
 25761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25766 ;;Total ram usage:        0 bytes
 25767 ;; Hardware stack levels used:    1
 25768 ;; Hardware stack levels required when called:   11
 25769 ;; This function calls:
 25770 ;;		Nothing
 25771 ;; This function is called by:
 25772 ;;		_I2c_WriteData
 25773 ;;		_I2c_ReadData
 25774 ;; This function uses a non-reentrant model
 25775 ;;
 25776                           
 25777                           	psect	text124
 25778  009E90                     __ptext124:
 25779                           	opt stack 0
 25780  009E90                     _StopCondition:
 25781                           	opt stack 14
 25782                           
 25783                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 25784                           
 25785                           ;incstack = 0
 25786  009E90  8471               	bsf	3953,2,c	;volatile
 25787  009E92  0012               	return		;funcret
 25788  009E94                     __end_of_StopCondition:
 25789                           	opt stack 0
 25790                           tosu	equ	0xFFF
 25791                           tosh	equ	0xFFE
 25792                           tosl	equ	0xFFD
 25793                           pclath	equ	0xFFA
 25794                           tblptru	equ	0xFF8
 25795                           tblptrh	equ	0xFF7
 25796                           tblptrl	equ	0xFF6
 25797                           tablat	equ	0xFF5
 25798                           prodh	equ	0xFF4
 25799                           prodl	equ	0xFF3
 25800                           intcon	equ	0xFF2
 25801                           intcon2	equ	0xFF1
 25802                           intcon3	equ	0xFF0
 25803                           indf0	equ	0xFEF
 25804                           postinc0	equ	0xFEE
 25805                           plusw0	equ	0xFEB
 25806                           fsr0h	equ	0xFEA
 25807                           fsr0l	equ	0xFE9
 25808                           wreg	equ	0xFE8
 25809                           indf1	equ	0xFE7
 25810                           postinc1	equ	0xFE6
 25811                           postdec1	equ	0xFE5
 25812                           fsr1h	equ	0xFE2
 25813                           fsr1l	equ	0xFE1
 25814                           indf2	equ	0xFDF
 25815                           postinc2	equ	0xFDE
 25816                           postdec2	equ	0xFDD
 25817                           plusw2	equ	0xFDB
 25818                           fsr2h	equ	0xFDA
 25819                           fsr2l	equ	0xFD9
 25820                           status	equ	0xFD8
 25821                           
 25822 ;; *************** function _StartCondition *****************
 25823 ;; Defined at:
 25824 ;;		line 92 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25825 ;; Parameters:    Size  Location     Type
 25826 ;;		None
 25827 ;; Auto vars:     Size  Location     Type
 25828 ;;		None
 25829 ;; Return value:  Size  Location     Type
 25830 ;;                  1    wreg      void 
 25831 ;; Registers used:
 25832 ;;		status,2, status,0
 25833 ;; Tracked objects:
 25834 ;;		On entry : 0/0
 25835 ;;		On exit  : 0/0
 25836 ;;		Unchanged: 0/0
 25837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25842 ;;Total ram usage:        0 bytes
 25843 ;; Hardware stack levels used:    1
 25844 ;; Hardware stack levels required when called:   11
 25845 ;; This function calls:
 25846 ;;		Nothing
 25847 ;; This function is called by:
 25848 ;;		_I2c_WriteData
 25849 ;;		_I2c_ReadData
 25850 ;; This function uses a non-reentrant model
 25851 ;;
 25852                           
 25853                           	psect	text125
 25854  009E8C                     __ptext125:
 25855                           	opt stack 0
 25856  009E8C                     _StartCondition:
 25857                           	opt stack 14
 25858                           
 25859                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 25860                           
 25861                           ;incstack = 0
 25862  009E8C  8071               	bsf	3953,0,c	;volatile
 25863  009E8E  0012               	return		;funcret
 25864  009E90                     __end_of_StartCondition:
 25865                           	opt stack 0
 25866                           tosu	equ	0xFFF
 25867                           tosh	equ	0xFFE
 25868                           tosl	equ	0xFFD
 25869                           pclath	equ	0xFFA
 25870                           tblptru	equ	0xFF8
 25871                           tblptrh	equ	0xFF7
 25872                           tblptrl	equ	0xFF6
 25873                           tablat	equ	0xFF5
 25874                           prodh	equ	0xFF4
 25875                           prodl	equ	0xFF3
 25876                           intcon	equ	0xFF2
 25877                           intcon2	equ	0xFF1
 25878                           intcon3	equ	0xFF0
 25879                           indf0	equ	0xFEF
 25880                           postinc0	equ	0xFEE
 25881                           plusw0	equ	0xFEB
 25882                           fsr0h	equ	0xFEA
 25883                           fsr0l	equ	0xFE9
 25884                           wreg	equ	0xFE8
 25885                           indf1	equ	0xFE7
 25886                           postinc1	equ	0xFE6
 25887                           postdec1	equ	0xFE5
 25888                           fsr1h	equ	0xFE2
 25889                           fsr1l	equ	0xFE1
 25890                           indf2	equ	0xFDF
 25891                           postinc2	equ	0xFDE
 25892                           postdec2	equ	0xFDD
 25893                           plusw2	equ	0xFDB
 25894                           fsr2h	equ	0xFDA
 25895                           fsr2l	equ	0xFD9
 25896                           status	equ	0xFD8
 25897                           
 25898 ;; *************** function _SetAckStatus *****************
 25899 ;; Defined at:
 25900 ;;		line 162 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25901 ;; Parameters:    Size  Location     Type
 25902 ;;  AckSts          1    wreg     unsigned char 
 25903 ;; Auto vars:     Size  Location     Type
 25904 ;;  AckSts          1    0[BANK0 ] unsigned char 
 25905 ;; Return value:  Size  Location     Type
 25906 ;;                  1    wreg      void 
 25907 ;; Registers used:
 25908 ;;		wreg
 25909 ;; Tracked objects:
 25910 ;;		On entry : 0/0
 25911 ;;		On exit  : 0/0
 25912 ;;		Unchanged: 0/0
 25913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25917 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25918 ;;Total ram usage:        1 bytes
 25919 ;; Hardware stack levels used:    1
 25920 ;; Hardware stack levels required when called:   11
 25921 ;; This function calls:
 25922 ;;		Nothing
 25923 ;; This function is called by:
 25924 ;;		_I2c_ReadData
 25925 ;; This function uses a non-reentrant model
 25926 ;;
 25927                           
 25928                           	psect	text126
 25929  009F7E                     __ptext126:
 25930                           	opt stack 0
 25931  009F7E                     _SetAckStatus:
 25932                           	opt stack 14
 25933                           
 25934                           ;incstack = 0
 25935                           ;SetAckStatus@AckSts stored from wreg
 25936  009F7E  0100               	movlb	0	; () banked
 25937  009F80  6F60               	movwf	SetAckStatus@AckSts& (0+255),b
 25938                           
 25939                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 25940  009F82  0100               	movlb	0	; () banked
 25941  009F84  B160               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 25942  009F86  D002               	bra	u5285
 25943  009F88  9A71               	bcf	3953,5,c	;volatile
 25944  009F8A  D001               	bra	u5286
 25945  009F8C                     u5285:
 25946  009F8C  8A71               	bsf	3953,5,c	;volatile
 25947  009F8E                     u5286:
 25948                           
 25949                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 25950  009F8E  8871               	bsf	3953,4,c	;volatile
 25951  009F90  0012               	return		;funcret
 25952  009F92                     __end_of_SetAckStatus:
 25953                           	opt stack 0
 25954                           tosu	equ	0xFFF
 25955                           tosh	equ	0xFFE
 25956                           tosl	equ	0xFFD
 25957                           pclath	equ	0xFFA
 25958                           tblptru	equ	0xFF8
 25959                           tblptrh	equ	0xFF7
 25960                           tblptrl	equ	0xFF6
 25961                           tablat	equ	0xFF5
 25962                           prodh	equ	0xFF4
 25963                           prodl	equ	0xFF3
 25964                           intcon	equ	0xFF2
 25965                           intcon2	equ	0xFF1
 25966                           intcon3	equ	0xFF0
 25967                           indf0	equ	0xFEF
 25968                           postinc0	equ	0xFEE
 25969                           plusw0	equ	0xFEB
 25970                           fsr0h	equ	0xFEA
 25971                           fsr0l	equ	0xFE9
 25972                           wreg	equ	0xFE8
 25973                           indf1	equ	0xFE7
 25974                           postinc1	equ	0xFE6
 25975                           postdec1	equ	0xFE5
 25976                           fsr1h	equ	0xFE2
 25977                           fsr1l	equ	0xFE1
 25978                           indf2	equ	0xFDF
 25979                           postinc2	equ	0xFDE
 25980                           postdec2	equ	0xFDD
 25981                           plusw2	equ	0xFDB
 25982                           fsr2h	equ	0xFDA
 25983                           fsr2l	equ	0xFD9
 25984                           status	equ	0xFD8
 25985                           
 25986 ;; *************** function _ReadByte *****************
 25987 ;; Defined at:
 25988 ;;		line 204 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25989 ;; Parameters:    Size  Location     Type
 25990 ;;		None
 25991 ;; Auto vars:     Size  Location     Type
 25992 ;;  Byte            1    0[BANK0 ] unsigned char 
 25993 ;; Return value:  Size  Location     Type
 25994 ;;                  1    wreg      unsigned char 
 25995 ;; Registers used:
 25996 ;;		wreg, status,2
 25997 ;; Tracked objects:
 25998 ;;		On entry : 0/0
 25999 ;;		On exit  : 0/0
 26000 ;;		Unchanged: 0/0
 26001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26005 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26006 ;;Total ram usage:        1 bytes
 26007 ;; Hardware stack levels used:    1
 26008 ;; Hardware stack levels required when called:   11
 26009 ;; This function calls:
 26010 ;;		Nothing
 26011 ;; This function is called by:
 26012 ;;		_I2c_ReadData
 26013 ;; This function uses a non-reentrant model
 26014 ;;
 26015                           
 26016                           	psect	text127
 26017  009EAE                     __ptext127:
 26018                           	opt stack 0
 26019  009EAE                     _ReadByte:
 26020                           	opt stack 14
 26021                           
 26022                           ;i2c_drv.c: 207: UINT8 Byte;
 26023                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 26024                           
 26025                           ;incstack = 0
 26026  009EAE  CF75 F060          	movff	3957,ReadByte@Byte	;volatile
 26027                           
 26028                           ;i2c_drv.c: 213: return Byte;
 26029  009EB2  0100               	movlb	0	; () banked
 26030  009EB4  5160               	movf	ReadByte@Byte& (0+255),w,b
 26031  009EB6  0012               	return	
 26032  009EB8                     __end_of_ReadByte:
 26033                           	opt stack 0
 26034                           tosu	equ	0xFFF
 26035                           tosh	equ	0xFFE
 26036                           tosl	equ	0xFFD
 26037                           pclath	equ	0xFFA
 26038                           tblptru	equ	0xFF8
 26039                           tblptrh	equ	0xFF7
 26040                           tblptrl	equ	0xFF6
 26041                           tablat	equ	0xFF5
 26042                           prodh	equ	0xFF4
 26043                           prodl	equ	0xFF3
 26044                           intcon	equ	0xFF2
 26045                           intcon2	equ	0xFF1
 26046                           intcon3	equ	0xFF0
 26047                           indf0	equ	0xFEF
 26048                           postinc0	equ	0xFEE
 26049                           plusw0	equ	0xFEB
 26050                           fsr0h	equ	0xFEA
 26051                           fsr0l	equ	0xFE9
 26052                           wreg	equ	0xFE8
 26053                           indf1	equ	0xFE7
 26054                           postinc1	equ	0xFE6
 26055                           postdec1	equ	0xFE5
 26056                           fsr1h	equ	0xFE2
 26057                           fsr1l	equ	0xFE1
 26058                           indf2	equ	0xFDF
 26059                           postinc2	equ	0xFDE
 26060                           postdec2	equ	0xFDD
 26061                           plusw2	equ	0xFDB
 26062                           fsr2h	equ	0xFDA
 26063                           fsr2l	equ	0xFD9
 26064                           status	equ	0xFD8
 26065                           
 26066 ;; *************** function _GenerateEvt *****************
 26067 ;; Defined at:
 26068 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 26069 ;; Parameters:    Size  Location     Type
 26070 ;;  Event           2    0[BANK0 ] PTR struct EventStructur
 26071 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 26072 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 26073 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(253), 
 26074 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 26075 ;; Auto vars:     Size  Location     Type
 26076 ;;  EventStatus     1    2[BANK0 ] enum E7721
 26077 ;; Return value:  Size  Location     Type
 26078 ;;                  1    wreg      enum E7693
 26079 ;; Registers used:
 26080 ;;		wreg, fsr2l, fsr2h, status,2
 26081 ;; Tracked objects:
 26082 ;;		On entry : 0/0
 26083 ;;		On exit  : 0/0
 26084 ;;		Unchanged: 0/0
 26085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26086 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26089 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26090 ;;Total ram usage:        3 bytes
 26091 ;; Hardware stack levels used:    1
 26092 ;; Hardware stack levels required when called:   11
 26093 ;; This function calls:
 26094 ;;		Nothing
 26095 ;; This function is called by:
 26096 ;;		_I2c_ReadData
 26097 ;;		_MdmWifi_StartWifiModemSm
 26098 ;;		_MdmWifiGetUartData
 26099 ;;		_MdmWifiEvtParser
 26100 ;;		_ReceiveDataSm
 26101 ;;		_I2cSlv_SendI2cMsg
 26102 ;;		_I2cSlv_ReceiveI2cMsg
 26103 ;;		_MdmWifi_RestartModem
 26104 ;;		_MdmWifiCmd_StartConnection
 26105 ;;		_MdmWifiCmd_SendData
 26106 ;; This function uses a non-reentrant model
 26107 ;;
 26108                           
 26109                           	psect	text128
 26110  009FEA                     __ptext128:
 26111                           	opt stack 0
 26112  009FEA                     _GenerateEvt:
 26113                           	opt stack 13
 26114                           
 26115                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 26116                           
 26117                           ; BSR set to: 0
 26118                           ;incstack = 0
 26119  009FEA  0E00               	movlw	0
 26120  009FEC  0100               	movlb	0	; () banked
 26121  009FEE  6F62               	movwf	GenerateEvt@EventStatus& (0+255),b
 26122                           
 26123                           ; BSR set to: 0
 26124                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 26125  009FF0  C060  FFD9         	movff	GenerateEvt@Event,fsr2l
 26126  009FF4  C061  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 26127  009FF8  0E02               	movlw	2
 26128  009FFA  6EDF               	movwf	indf2,c
 26129                           
 26130                           ; BSR set to: 0
 26131                           ;os_ser.c: 81: EventStatus = EventSent;
 26132  009FFC  0E02               	movlw	2
 26133  009FFE  6F62               	movwf	GenerateEvt@EventStatus& (0+255),b
 26134  00A000  0012               	return	
 26135  00A002                     __end_of_GenerateEvt:
 26136                           	opt stack 0
 26137                           tosu	equ	0xFFF
 26138                           tosh	equ	0xFFE
 26139                           tosl	equ	0xFFD
 26140                           pclath	equ	0xFFA
 26141                           tblptru	equ	0xFF8
 26142                           tblptrh	equ	0xFF7
 26143                           tblptrl	equ	0xFF6
 26144                           tablat	equ	0xFF5
 26145                           prodh	equ	0xFF4
 26146                           prodl	equ	0xFF3
 26147                           intcon	equ	0xFF2
 26148                           intcon2	equ	0xFF1
 26149                           intcon3	equ	0xFF0
 26150                           indf0	equ	0xFEF
 26151                           postinc0	equ	0xFEE
 26152                           plusw0	equ	0xFEB
 26153                           fsr0h	equ	0xFEA
 26154                           fsr0l	equ	0xFE9
 26155                           wreg	equ	0xFE8
 26156                           indf1	equ	0xFE7
 26157                           postinc1	equ	0xFE6
 26158                           postdec1	equ	0xFE5
 26159                           fsr1h	equ	0xFE2
 26160                           fsr1l	equ	0xFE1
 26161                           indf2	equ	0xFDF
 26162                           postinc2	equ	0xFDE
 26163                           postdec2	equ	0xFDD
 26164                           plusw2	equ	0xFDB
 26165                           fsr2h	equ	0xFDA
 26166                           fsr2l	equ	0xFD9
 26167                           status	equ	0xFD8
 26168                           
 26169 ;; *************** function _EnableReceiver *****************
 26170 ;; Defined at:
 26171 ;;		line 177 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26172 ;; Parameters:    Size  Location     Type
 26173 ;;		None
 26174 ;; Auto vars:     Size  Location     Type
 26175 ;;		None
 26176 ;; Return value:  Size  Location     Type
 26177 ;;                  1    wreg      void 
 26178 ;; Registers used:
 26179 ;;		status,2, status,0
 26180 ;; Tracked objects:
 26181 ;;		On entry : 0/0
 26182 ;;		On exit  : 0/0
 26183 ;;		Unchanged: 0/0
 26184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26189 ;;Total ram usage:        0 bytes
 26190 ;; Hardware stack levels used:    1
 26191 ;; Hardware stack levels required when called:   11
 26192 ;; This function calls:
 26193 ;;		Nothing
 26194 ;; This function is called by:
 26195 ;;		_I2c_ReadData
 26196 ;; This function uses a non-reentrant model
 26197 ;;
 26198                           
 26199                           	psect	text129
 26200  009E88                     __ptext129:
 26201                           	opt stack 0
 26202  009E88                     _EnableReceiver:
 26203                           	opt stack 14
 26204                           
 26205                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 26206                           
 26207                           ; BSR set to: 0
 26208                           ;incstack = 0
 26209  009E88  8671               	bsf	3953,3,c	;volatile
 26210  009E8A  0012               	return		;funcret
 26211  009E8C                     __end_of_EnableReceiver:
 26212                           	opt stack 0
 26213                           tosu	equ	0xFFF
 26214                           tosh	equ	0xFFE
 26215                           tosl	equ	0xFFD
 26216                           pclath	equ	0xFFA
 26217                           tblptru	equ	0xFF8
 26218                           tblptrh	equ	0xFF7
 26219                           tblptrl	equ	0xFF6
 26220                           tablat	equ	0xFF5
 26221                           prodh	equ	0xFF4
 26222                           prodl	equ	0xFF3
 26223                           intcon	equ	0xFF2
 26224                           intcon2	equ	0xFF1
 26225                           intcon3	equ	0xFF0
 26226                           indf0	equ	0xFEF
 26227                           postinc0	equ	0xFEE
 26228                           plusw0	equ	0xFEB
 26229                           fsr0h	equ	0xFEA
 26230                           fsr0l	equ	0xFE9
 26231                           wreg	equ	0xFE8
 26232                           indf1	equ	0xFE7
 26233                           postinc1	equ	0xFE6
 26234                           postdec1	equ	0xFE5
 26235                           fsr1h	equ	0xFE2
 26236                           fsr1l	equ	0xFE1
 26237                           indf2	equ	0xFDF
 26238                           postinc2	equ	0xFDE
 26239                           postdec2	equ	0xFDD
 26240                           plusw2	equ	0xFDB
 26241                           fsr2h	equ	0xFDA
 26242                           fsr2l	equ	0xFD9
 26243                           status	equ	0xFD8
 26244                           
 26245 ;; *************** function _CheckTxStatus *****************
 26246 ;; Defined at:
 26247 ;;		line 148 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26248 ;; Parameters:    Size  Location     Type
 26249 ;;		None
 26250 ;; Auto vars:     Size  Location     Type
 26251 ;;		None
 26252 ;; Return value:  Size  Location     Type
 26253 ;;                  1    wreg      unsigned char 
 26254 ;; Registers used:
 26255 ;;		wreg, status,2, status,0
 26256 ;; Tracked objects:
 26257 ;;		On entry : 0/0
 26258 ;;		On exit  : 0/0
 26259 ;;		Unchanged: 0/0
 26260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26265 ;;Total ram usage:        0 bytes
 26266 ;; Hardware stack levels used:    1
 26267 ;; Hardware stack levels required when called:   11
 26268 ;; This function calls:
 26269 ;;		Nothing
 26270 ;; This function is called by:
 26271 ;;		_I2c_WriteData
 26272 ;;		_I2c_ReadData
 26273 ;; This function uses a non-reentrant model
 26274 ;;
 26275                           
 26276                           	psect	text130
 26277  009EA4                     __ptext130:
 26278                           	opt stack 0
 26279  009EA4                     _CheckTxStatus:
 26280                           	opt stack 14
 26281                           
 26282                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 26283                           
 26284                           ;incstack = 0
 26285  009EA4  4073               	rrncf	3955,w,c	;volatile
 26286  009EA6  42E8               	rrncf	wreg,f,c
 26287  009EA8  0B3F               	andlw	63
 26288  009EAA  0B01               	andlw	1
 26289  009EAC  0012               	return	
 26290  009EAE                     __end_of_CheckTxStatus:
 26291                           	opt stack 0
 26292                           tosu	equ	0xFFF
 26293                           tosh	equ	0xFFE
 26294                           tosl	equ	0xFFD
 26295                           pclath	equ	0xFFA
 26296                           tblptru	equ	0xFF8
 26297                           tblptrh	equ	0xFF7
 26298                           tblptrl	equ	0xFF6
 26299                           tablat	equ	0xFF5
 26300                           prodh	equ	0xFF4
 26301                           prodl	equ	0xFF3
 26302                           intcon	equ	0xFF2
 26303                           intcon2	equ	0xFF1
 26304                           intcon3	equ	0xFF0
 26305                           indf0	equ	0xFEF
 26306                           postinc0	equ	0xFEE
 26307                           plusw0	equ	0xFEB
 26308                           fsr0h	equ	0xFEA
 26309                           fsr0l	equ	0xFE9
 26310                           wreg	equ	0xFE8
 26311                           indf1	equ	0xFE7
 26312                           postinc1	equ	0xFE6
 26313                           postdec1	equ	0xFE5
 26314                           fsr1h	equ	0xFE2
 26315                           fsr1l	equ	0xFE1
 26316                           indf2	equ	0xFDF
 26317                           postinc2	equ	0xFDE
 26318                           postdec2	equ	0xFDD
 26319                           plusw2	equ	0xFDB
 26320                           fsr2h	equ	0xFDA
 26321                           fsr2l	equ	0xFD9
 26322                           status	equ	0xFD8
 26323                           
 26324 ;; *************** function _CheckAckStatus *****************
 26325 ;; Defined at:
 26326 ;;		line 134 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26327 ;; Parameters:    Size  Location     Type
 26328 ;;		None
 26329 ;; Auto vars:     Size  Location     Type
 26330 ;;		None
 26331 ;; Return value:  Size  Location     Type
 26332 ;;                  1    wreg      unsigned char 
 26333 ;; Registers used:
 26334 ;;		wreg, status,2, status,0
 26335 ;; Tracked objects:
 26336 ;;		On entry : 0/0
 26337 ;;		On exit  : 0/0
 26338 ;;		Unchanged: 0/0
 26339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26344 ;;Total ram usage:        0 bytes
 26345 ;; Hardware stack levels used:    1
 26346 ;; Hardware stack levels required when called:   11
 26347 ;; This function calls:
 26348 ;;		Nothing
 26349 ;; This function is called by:
 26350 ;;		_I2c_WriteData
 26351 ;;		_I2c_ReadData
 26352 ;; This function uses a non-reentrant model
 26353 ;;
 26354                           
 26355                           	psect	text131
 26356  009E9A                     __ptext131:
 26357                           	opt stack 0
 26358  009E9A                     _CheckAckStatus:
 26359                           	opt stack 14
 26360                           
 26361                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 26362                           
 26363                           ;incstack = 0
 26364  009E9A  4471               	rlncf	3953,w,c	;volatile
 26365  009E9C  46E8               	rlncf	wreg,f,c
 26366  009E9E  0B03               	andlw	3
 26367  009EA0  0B01               	andlw	1
 26368  009EA2  0012               	return	
 26369  009EA4                     __end_of_CheckAckStatus:
 26370                           	opt stack 0
 26371                           tosu	equ	0xFFF
 26372                           tosh	equ	0xFFE
 26373                           tosl	equ	0xFFD
 26374                           pclath	equ	0xFFA
 26375                           tblptru	equ	0xFF8
 26376                           tblptrh	equ	0xFF7
 26377                           tblptrl	equ	0xFF6
 26378                           tablat	equ	0xFF5
 26379                           prodh	equ	0xFF4
 26380                           prodl	equ	0xFF3
 26381                           intcon	equ	0xFF2
 26382                           intcon2	equ	0xFF1
 26383                           intcon3	equ	0xFF0
 26384                           indf0	equ	0xFEF
 26385                           postinc0	equ	0xFEE
 26386                           plusw0	equ	0xFEB
 26387                           fsr0h	equ	0xFEA
 26388                           fsr0l	equ	0xFE9
 26389                           wreg	equ	0xFE8
 26390                           indf1	equ	0xFE7
 26391                           postinc1	equ	0xFE6
 26392                           postdec1	equ	0xFE5
 26393                           fsr1h	equ	0xFE2
 26394                           fsr1l	equ	0xFE1
 26395                           indf2	equ	0xFDF
 26396                           postinc2	equ	0xFDE
 26397                           postdec2	equ	0xFDD
 26398                           plusw2	equ	0xFDB
 26399                           fsr2h	equ	0xFDA
 26400                           fsr2l	equ	0xFD9
 26401                           status	equ	0xFD8
 26402                           
 26403 ;; *************** function _LowPriorityIsr *****************
 26404 ;; Defined at:
 26405 ;;		line 236 in file "../Source/c/01_Hal/01_Sys/irq.c"
 26406 ;; Parameters:    Size  Location     Type
 26407 ;;		None
 26408 ;; Auto vars:     Size  Location     Type
 26409 ;;		None
 26410 ;; Return value:  Size  Location     Type
 26411 ;;                  1    wreg      void 
 26412 ;; Registers used:
 26413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26414 ;; Tracked objects:
 26415 ;;		On entry : 0/0
 26416 ;;		On exit  : 0/0
 26417 ;;		Unchanged: 0/0
 26418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26421 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26422 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26423 ;;Total ram usage:       21 bytes
 26424 ;; Hardware stack levels used:    1
 26425 ;; Hardware stack levels required when called:   10
 26426 ;; This function calls:
 26427 ;;		_Tmr_Tmr2Isr
 26428 ;; This function is called by:
 26429 ;;		Interrupt level 1
 26430 ;; This function uses a non-reentrant model
 26431 ;;
 26432                           
 26433                           	psect	intcodelo
 26434  002018                     __pintcodelo:
 26435                           	opt stack 0
 26436  002018                     _LowPriorityIsr:
 26437                           	opt stack 8
 26438                           
 26439                           ;incstack = 0
 26440  002018  805D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 26441  00201A  CFD8 F029          	movff	status,??_LowPriorityIsr
 26442  00201E  CFE8 F02A          	movff	wreg,??_LowPriorityIsr+1
 26443  002022  CFE0 F02B          	movff	bsr,??_LowPriorityIsr+2
 26444  002026  CFFA F02C          	movff	pclath,??_LowPriorityIsr+3
 26445  00202A  CFFB F02D          	movff	pclatu,??_LowPriorityIsr+4
 26446  00202E  CFE9 F02E          	movff	fsr0l,??_LowPriorityIsr+5
 26447  002032  CFEA F02F          	movff	fsr0h,??_LowPriorityIsr+6
 26448  002036  CFE1 F030          	movff	fsr1l,??_LowPriorityIsr+7
 26449  00203A  CFE2 F031          	movff	fsr1h,??_LowPriorityIsr+8
 26450  00203E  CFD9 F032          	movff	fsr2l,??_LowPriorityIsr+9
 26451  002042  CFDA F033          	movff	fsr2h,??_LowPriorityIsr+10
 26452  002046  CFF3 F034          	movff	prodl,??_LowPriorityIsr+11
 26453  00204A  CFF4 F035          	movff	prodh,??_LowPriorityIsr+12
 26454  00204E  CFF6 F036          	movff	tblptrl,??_LowPriorityIsr+13
 26455  002052  CFF7 F037          	movff	tblptrh,??_LowPriorityIsr+14
 26456  002056  CFF8 F038          	movff	tblptru,??_LowPriorityIsr+15
 26457  00205A  CFF5 F039          	movff	tablat,??_LowPriorityIsr+16
 26458  00205E  C05D  F03A         	movff	btemp,??_LowPriorityIsr+17
 26459  002062  C05E  F03B         	movff	btemp+1,??_LowPriorityIsr+18
 26460  002066  C05F  F03C         	movff	btemp+2,??_LowPriorityIsr+19
 26461  00206A  C060  F03D         	movff	btemp+3,??_LowPriorityIsr+20
 26462                           
 26463                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 26464  00206E  B29E               	btfsc	3998,1,c	;volatile
 26465                           
 26466                           ;irq.c: 259: {
 26467                           ;irq.c: 261: Tmr_Tmr2Isr();
 26468  002070  EC95  F050         	call	_Tmr_Tmr2Isr	;wreg free
 26469  002074  C03D  F060         	movff	??_LowPriorityIsr+20,btemp+3
 26470  002078  C03C  F05F         	movff	??_LowPriorityIsr+19,btemp+2
 26471  00207C  C03B  F05E         	movff	??_LowPriorityIsr+18,btemp+1
 26472  002080  C03A  F05D         	movff	??_LowPriorityIsr+17,btemp
 26473  002084  C039  FFF5         	movff	??_LowPriorityIsr+16,tablat
 26474  002088  C038  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 26475  00208C  C037  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 26476  002090  C036  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 26477  002094  C035  FFF4         	movff	??_LowPriorityIsr+12,prodh
 26478  002098  C034  FFF3         	movff	??_LowPriorityIsr+11,prodl
 26479  00209C  C033  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 26480  0020A0  C032  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 26481  0020A4  C031  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 26482  0020A8  C030  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 26483  0020AC  C02F  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 26484  0020B0  C02E  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 26485  0020B4  C02D  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 26486  0020B8  C02C  FFFA         	movff	??_LowPriorityIsr+3,pclath
 26487  0020BC  C02B  FFE0         	movff	??_LowPriorityIsr+2,bsr
 26488  0020C0  C02A  FFE8         	movff	??_LowPriorityIsr+1,wreg
 26489  0020C4  C029  FFD8         	movff	??_LowPriorityIsr,status
 26490  0020C8  905D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 26491  0020CA  0010               	retfie	
 26492  0020CC                     __end_of_LowPriorityIsr:
 26493                           	opt stack 0
 26494                           tosu	equ	0xFFF
 26495                           tosh	equ	0xFFE
 26496                           tosl	equ	0xFFD
 26497                           pclatu	equ	0xFFB
 26498                           pclath	equ	0xFFA
 26499                           tblptru	equ	0xFF8
 26500                           tblptrh	equ	0xFF7
 26501                           tblptrl	equ	0xFF6
 26502                           tablat	equ	0xFF5
 26503                           prodh	equ	0xFF4
 26504                           prodl	equ	0xFF3
 26505                           intcon	equ	0xFF2
 26506                           intcon2	equ	0xFF1
 26507                           intcon3	equ	0xFF0
 26508                           indf0	equ	0xFEF
 26509                           postinc0	equ	0xFEE
 26510                           plusw0	equ	0xFEB
 26511                           fsr0h	equ	0xFEA
 26512                           fsr0l	equ	0xFE9
 26513                           wreg	equ	0xFE8
 26514                           indf1	equ	0xFE7
 26515                           postinc1	equ	0xFE6
 26516                           postdec1	equ	0xFE5
 26517                           fsr1h	equ	0xFE2
 26518                           fsr1l	equ	0xFE1
 26519                           bsr	equ	0xFE0
 26520                           indf2	equ	0xFDF
 26521                           postinc2	equ	0xFDE
 26522                           postdec2	equ	0xFDD
 26523                           plusw2	equ	0xFDB
 26524                           fsr2h	equ	0xFDA
 26525                           fsr2l	equ	0xFD9
 26526                           status	equ	0xFD8
 26527                           
 26528 ;; *************** function _Tmr_Tmr2Isr *****************
 26529 ;; Defined at:
 26530 ;;		line 308 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
 26531 ;; Parameters:    Size  Location     Type
 26532 ;;		None
 26533 ;; Auto vars:     Size  Location     Type
 26534 ;;		None
 26535 ;; Return value:  Size  Location     Type
 26536 ;;                  1    wreg      void 
 26537 ;; Registers used:
 26538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26539 ;; Tracked objects:
 26540 ;;		On entry : 0/0
 26541 ;;		On exit  : 0/0
 26542 ;;		Unchanged: 0/0
 26543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26548 ;;Total ram usage:        0 bytes
 26549 ;; Hardware stack levels used:    1
 26550 ;; Hardware stack levels required when called:    9
 26551 ;; This function calls:
 26552 ;;		Absolute function
 26553 ;;		_Sch_SchmIntService
 26554 ;; This function is called by:
 26555 ;;		_LowPriorityIsr
 26556 ;; This function uses a non-reentrant model
 26557 ;;
 26558                           
 26559                           	psect	text133
 26560  00A12A                     __ptext133:
 26561                           	opt stack 0
 26562  00A12A                     _Tmr_Tmr2Isr:
 26563                           	opt stack 8
 26564                           
 26565                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 26566                           
 26567                           ;incstack = 0
 26568  00A12A  929E               	bcf	3998,1,c	;volatile
 26569                           
 26570                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 26571  00A12C  0101               	movlb	1	; () banked
 26572  00A12E  5154               	movf	_Tmr2IsrCallback& (0+255),w,b
 26573  00A130  1155               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 26574  00A132  B4D8               	btfsc	status,2,c
 26575  00A134  0012               	return	
 26576                           
 26577                           ; BSR set to: 1
 26578                           ;tmr_drv.c: 315: {
 26579                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 26580  00A136  D801               	call	i1u800_28
 26581  00A138  0012               	return	
 26582  00A13A                     i1u800_28:
 26583  00A13A  0005               	push	
 26584  00A13C  6EFA               	movwf	pclath,c
 26585  00A13E  5154               	movf	_Tmr2IsrCallback& (0+255),w,b
 26586  00A140  6EFD               	movwf	tosl,c
 26587  00A142  5155               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 26588  00A144  6EFE               	movwf	tosh,c
 26589  00A146  6AFF               	clrf	tosu,c
 26590  00A148  50FA               	movf	pclath,w,c
 26591  00A14A  0012               	return		;indir
 26592  00A14C                     __end_of_Tmr_Tmr2Isr:
 26593                           	opt stack 0
 26594                           tosu	equ	0xFFF
 26595                           tosh	equ	0xFFE
 26596                           tosl	equ	0xFFD
 26597                           pclatu	equ	0xFFB
 26598                           pclath	equ	0xFFA
 26599                           tblptru	equ	0xFF8
 26600                           tblptrh	equ	0xFF7
 26601                           tblptrl	equ	0xFF6
 26602                           tablat	equ	0xFF5
 26603                           prodh	equ	0xFF4
 26604                           prodl	equ	0xFF3
 26605                           intcon	equ	0xFF2
 26606                           intcon2	equ	0xFF1
 26607                           intcon3	equ	0xFF0
 26608                           indf0	equ	0xFEF
 26609                           postinc0	equ	0xFEE
 26610                           plusw0	equ	0xFEB
 26611                           fsr0h	equ	0xFEA
 26612                           fsr0l	equ	0xFE9
 26613                           wreg	equ	0xFE8
 26614                           indf1	equ	0xFE7
 26615                           postinc1	equ	0xFE6
 26616                           postdec1	equ	0xFE5
 26617                           fsr1h	equ	0xFE2
 26618                           fsr1l	equ	0xFE1
 26619                           bsr	equ	0xFE0
 26620                           indf2	equ	0xFDF
 26621                           postinc2	equ	0xFDE
 26622                           postdec2	equ	0xFDD
 26623                           plusw2	equ	0xFDB
 26624                           fsr2h	equ	0xFDA
 26625                           fsr2l	equ	0xFD9
 26626                           status	equ	0xFD8
 26627                           
 26628 ;; *************** function _Sch_SchmIntService *****************
 26629 ;; Defined at:
 26630 ;;		line 214 in file "../Source/c/02_Osl/os_sched.c"
 26631 ;; Parameters:    Size  Location     Type
 26632 ;;		None
 26633 ;; Auto vars:     Size  Location     Type
 26634 ;;		None
 26635 ;; Return value:  Size  Location     Type
 26636 ;;                  1    wreg      void 
 26637 ;; Registers used:
 26638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26639 ;; Tracked objects:
 26640 ;;		On entry : 0/0
 26641 ;;		On exit  : 0/0
 26642 ;;		Unchanged: 0/0
 26643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26648 ;;Total ram usage:        0 bytes
 26649 ;; Hardware stack levels used:    1
 26650 ;; Hardware stack levels required when called:    8
 26651 ;; This function calls:
 26652 ;;		_OsAlrm_ProcessOsAlarms
 26653 ;;		_UpdateOsCounters
 26654 ;;		_UpdateSchFlag
 26655 ;; This function is called by:
 26656 ;;		_SystemInit
 26657 ;;		_Tmr_Tmr2Isr
 26658 ;; This function uses a non-reentrant model
 26659 ;;
 26660                           
 26661                           	psect	text134
 26662  009EE2                     __ptext134:
 26663                           	opt stack 0
 26664  009EE2                     _Sch_SchmIntService:
 26665                           	opt stack 8
 26666                           
 26667                           ;os_sched.c: 217: UpdateSchFlag();
 26668                           
 26669                           ;incstack = 0
 26670  009EE2  EC28  F050         	call	_UpdateSchFlag	;wreg free
 26671                           
 26672                           ;os_sched.c: 219: UpdateOsCounters();
 26673  009EE6  EC8E  F04F         	call	_UpdateOsCounters	;wreg free
 26674                           
 26675                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 26676  009EEA  EC3B  F068         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 26677  009EEE  0012               	return		;funcret
 26678  009EF0                     __end_of_Sch_SchmIntService:
 26679                           	opt stack 0
 26680                           tosu	equ	0xFFF
 26681                           tosh	equ	0xFFE
 26682                           tosl	equ	0xFFD
 26683                           pclatu	equ	0xFFB
 26684                           pclath	equ	0xFFA
 26685                           tblptru	equ	0xFF8
 26686                           tblptrh	equ	0xFF7
 26687                           tblptrl	equ	0xFF6
 26688                           tablat	equ	0xFF5
 26689                           prodh	equ	0xFF4
 26690                           prodl	equ	0xFF3
 26691                           intcon	equ	0xFF2
 26692                           intcon2	equ	0xFF1
 26693                           intcon3	equ	0xFF0
 26694                           indf0	equ	0xFEF
 26695                           postinc0	equ	0xFEE
 26696                           plusw0	equ	0xFEB
 26697                           fsr0h	equ	0xFEA
 26698                           fsr0l	equ	0xFE9
 26699                           wreg	equ	0xFE8
 26700                           indf1	equ	0xFE7
 26701                           postinc1	equ	0xFE6
 26702                           postdec1	equ	0xFE5
 26703                           fsr1h	equ	0xFE2
 26704                           fsr1l	equ	0xFE1
 26705                           bsr	equ	0xFE0
 26706                           indf2	equ	0xFDF
 26707                           postinc2	equ	0xFDE
 26708                           postdec2	equ	0xFDD
 26709                           plusw2	equ	0xFDB
 26710                           fsr2h	equ	0xFDA
 26711                           fsr2l	equ	0xFD9
 26712                           status	equ	0xFD8
 26713                           
 26714 ;; *************** function _UpdateSchFlag *****************
 26715 ;; Defined at:
 26716 ;;		line 132 in file "../Source/c/02_Osl/os_sched.c"
 26717 ;; Parameters:    Size  Location     Type
 26718 ;;		None
 26719 ;; Auto vars:     Size  Location     Type
 26720 ;;		None
 26721 ;; Return value:  Size  Location     Type
 26722 ;;                  1    wreg      void 
 26723 ;; Registers used:
 26724 ;;		wreg, status,2, status,0
 26725 ;; Tracked objects:
 26726 ;;		On entry : 0/0
 26727 ;;		On exit  : 0/0
 26728 ;;		Unchanged: 0/0
 26729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26734 ;;Total ram usage:        0 bytes
 26735 ;; Hardware stack levels used:    1
 26736 ;; Hardware stack levels required when called:    4
 26737 ;; This function calls:
 26738 ;;		Nothing
 26739 ;; This function is called by:
 26740 ;;		_Sch_SchmIntService
 26741 ;; This function uses a non-reentrant model
 26742 ;;
 26743                           
 26744                           	psect	text135
 26745  00A050                     __ptext135:
 26746                           	opt stack 0
 26747  00A050                     _UpdateSchFlag:
 26748                           	opt stack 11
 26749                           
 26750                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 26751                           ;os_sched.c: 138: InterruptCounter++;
 26752                           
 26753                           ;incstack = 0
 26754  00A050  0101               	movlb	1	; () banked
 26755  00A052  4B44               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 26756  00A054  2B45               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 26757                           
 26758                           ; BSR set to: 1
 26759                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 26760  00A056  5144               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 26761  00A058  1145               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 26762  00A05A  B4D8               	btfsc	status,2,c
 26763  00A05C  0012               	return	
 26764                           
 26765                           ; BSR set to: 1
 26766                           ;os_sched.c: 141: {
 26767                           ;os_sched.c: 143: InterruptCounter = 0;
 26768  00A05E  0E00               	movlw	0
 26769  00A060  6F45               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 26770  00A062  0E00               	movlw	0
 26771  00A064  6F44               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 26772                           
 26773                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 26774  00A066  0E00               	movlw	0
 26775  00A068  6FE1               	movwf	_MainSystemTimebaseFlag& (0+255),b
 26776  00A06A  0012               	return	
 26777  00A06C                     __end_of_UpdateSchFlag:
 26778                           	opt stack 0
 26779                           tosu	equ	0xFFF
 26780                           tosh	equ	0xFFE
 26781                           tosl	equ	0xFFD
 26782                           pclatu	equ	0xFFB
 26783                           pclath	equ	0xFFA
 26784                           tblptru	equ	0xFF8
 26785                           tblptrh	equ	0xFF7
 26786                           tblptrl	equ	0xFF6
 26787                           tablat	equ	0xFF5
 26788                           prodh	equ	0xFF4
 26789                           prodl	equ	0xFF3
 26790                           intcon	equ	0xFF2
 26791                           intcon2	equ	0xFF1
 26792                           intcon3	equ	0xFF0
 26793                           indf0	equ	0xFEF
 26794                           postinc0	equ	0xFEE
 26795                           plusw0	equ	0xFEB
 26796                           fsr0h	equ	0xFEA
 26797                           fsr0l	equ	0xFE9
 26798                           wreg	equ	0xFE8
 26799                           indf1	equ	0xFE7
 26800                           postinc1	equ	0xFE6
 26801                           postdec1	equ	0xFE5
 26802                           fsr1h	equ	0xFE2
 26803                           fsr1l	equ	0xFE1
 26804                           bsr	equ	0xFE0
 26805                           indf2	equ	0xFDF
 26806                           postinc2	equ	0xFDE
 26807                           postdec2	equ	0xFDD
 26808                           plusw2	equ	0xFDB
 26809                           fsr2h	equ	0xFDA
 26810                           fsr2l	equ	0xFD9
 26811                           status	equ	0xFD8
 26812                           
 26813 ;; *************** function _UpdateOsCounters *****************
 26814 ;; Defined at:
 26815 ;;		line 157 in file "../Source/c/02_Osl/os_sched.c"
 26816 ;; Parameters:    Size  Location     Type
 26817 ;;		None
 26818 ;; Auto vars:     Size  Location     Type
 26819 ;;		None
 26820 ;; Return value:  Size  Location     Type
 26821 ;;                  1    wreg      void 
 26822 ;; Registers used:
 26823 ;;		wreg, status,2, status,0
 26824 ;; Tracked objects:
 26825 ;;		On entry : 0/0
 26826 ;;		On exit  : 0/0
 26827 ;;		Unchanged: 0/0
 26828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26833 ;;Total ram usage:        0 bytes
 26834 ;; Hardware stack levels used:    1
 26835 ;; Hardware stack levels required when called:    4
 26836 ;; This function calls:
 26837 ;;		Nothing
 26838 ;; This function is called by:
 26839 ;;		_Sch_SchmIntService
 26840 ;; This function uses a non-reentrant model
 26841 ;;
 26842                           
 26843                           	psect	text136
 26844  009F1C                     __ptext136:
 26845                           	opt stack 0
 26846  009F1C                     _UpdateOsCounters:
 26847                           	opt stack 11
 26848                           
 26849                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 26850                           
 26851                           ; BSR set to: 1
 26852                           ;incstack = 0
 26853  009F1C  0E01               	movlw	1
 26854  009F1E  0101               	movlb	1	; () banked
 26855  009F20  272E               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 26856  009F22  0E00               	movlw	0
 26857  009F24  232F               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 26858  009F26  2330               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 26859  009F28  2331               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 26860                           
 26861                           ; BSR set to: 1
 26862  009F2A  0012               	return		;funcret
 26863  009F2C                     __end_of_UpdateOsCounters:
 26864                           	opt stack 0
 26865                           tosu	equ	0xFFF
 26866                           tosh	equ	0xFFE
 26867                           tosl	equ	0xFFD
 26868                           pclatu	equ	0xFFB
 26869                           pclath	equ	0xFFA
 26870                           tblptru	equ	0xFF8
 26871                           tblptrh	equ	0xFF7
 26872                           tblptrl	equ	0xFF6
 26873                           tablat	equ	0xFF5
 26874                           prodh	equ	0xFF4
 26875                           prodl	equ	0xFF3
 26876                           intcon	equ	0xFF2
 26877                           intcon2	equ	0xFF1
 26878                           intcon3	equ	0xFF0
 26879                           indf0	equ	0xFEF
 26880                           postinc0	equ	0xFEE
 26881                           plusw0	equ	0xFEB
 26882                           fsr0h	equ	0xFEA
 26883                           fsr0l	equ	0xFE9
 26884                           wreg	equ	0xFE8
 26885                           indf1	equ	0xFE7
 26886                           postinc1	equ	0xFE6
 26887                           postdec1	equ	0xFE5
 26888                           fsr1h	equ	0xFE2
 26889                           fsr1l	equ	0xFE1
 26890                           bsr	equ	0xFE0
 26891                           indf2	equ	0xFDF
 26892                           postinc2	equ	0xFDE
 26893                           postdec2	equ	0xFDD
 26894                           plusw2	equ	0xFDB
 26895                           fsr2h	equ	0xFDA
 26896                           fsr2l	equ	0xFD9
 26897                           status	equ	0xFD8
 26898                           
 26899 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 26900 ;; Defined at:
 26901 ;;		line 114 in file "../Source/c/02_Osl/os_alarms.c"
 26902 ;; Parameters:    Size  Location     Type
 26903 ;;		None
 26904 ;; Auto vars:     Size  Location     Type
 26905 ;;  AlarmIndex      2   38[COMRAM] unsigned short 
 26906 ;; Return value:  Size  Location     Type
 26907 ;;                  1    wreg      void 
 26908 ;; Registers used:
 26909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26910 ;; Tracked objects:
 26911 ;;		On entry : 0/0
 26912 ;;		On exit  : 0/0
 26913 ;;		Unchanged: 0/0
 26914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26917 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26918 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26919 ;;Total ram usage:       10 bytes
 26920 ;; Hardware stack levels used:    1
 26921 ;; Hardware stack levels required when called:    7
 26922 ;; This function calls:
 26923 ;;		_I2cDummyTx
 26924 ;;		_OsAlrm_ClearOsAlarm
 26925 ;;		i1___wmul
 26926 ;; This function is called by:
 26927 ;;		_Sch_SchmIntService
 26928 ;; This function uses a non-reentrant model
 26929 ;;
 26930                           
 26931                           	psect	text137
 26932  00D076                     __ptext137:
 26933                           	opt stack 0
 26934  00D076                     _OsAlrm_ProcessOsAlarms:
 26935                           	opt stack 8
 26936                           
 26937                           ;os_alarms.c: 116: UINT16 AlarmIndex;
 26938                           ;os_alarms.c: 119: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 26939                           
 26940                           ; BSR set to: 1
 26941                           ;incstack = 0
 26942  00D076  0E00               	movlw	0
 26943  00D078  6E28               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 26944  00D07A  0E00               	movlw	0
 26945  00D07C  6E27               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 26946  00D07E  5028               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 26947  00D080  E105               	bnz	i1u771_20
 26948  00D082  0E14               	movlw	20
 26949  00D084  5C27               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 26950  00D086  B0D8               	btfsc	status,0,c
 26951  00D088  0012               	return	
 26952  00D08A  D001               	goto	i1l673
 26953  00D08C                     i1u771_20:
 26954  00D08C  0012               	return	
 26955  00D08E                     i1l673:
 26956                           
 26957                           ;os_alarms.c: 120: {
 26958                           ;os_alarms.c: 122: if (OsAlarms[AlarmIndex].Enabled == 1u)
 26959  00D08E  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 26960  00D092  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 26961  00D096  0E00               	movlw	0
 26962  00D098  6E1A               	movwf	i1___wmul@multiplicand+1,c
 26963  00D09A  0E0B               	movlw	11
 26964  00D09C  6E19               	movwf	i1___wmul@multiplicand,c
 26965  00D09E  EC20  F051         	call	i1___wmul	;wreg free
 26966  00D0A2  0E00               	movlw	low _OsAlarms
 26967  00D0A4  2417               	addwf	?i1___wmul,w,c
 26968  00D0A6  6ED9               	movwf	fsr2l,c
 26969  00D0A8  0E05               	movlw	high _OsAlarms
 26970  00D0AA  2018               	addwfc	?i1___wmul+1,w,c
 26971  00D0AC  6EDA               	movwf	fsr2h,c
 26972  00D0AE  04DE               	decf	postinc2,w,c
 26973  00D0B0  A4D8               	btfss	status,2,c
 26974  00D0B2  D089               	goto	i1u775_29
 26975                           
 26976                           ;os_alarms.c: 123: {
 26977                           ;os_alarms.c: 125: OsAlarms[AlarmIndex].Counter++;
 26978  00D0B4  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 26979  00D0B8  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 26980  00D0BC  0E00               	movlw	0
 26981  00D0BE  6E1A               	movwf	i1___wmul@multiplicand+1,c
 26982  00D0C0  0E0B               	movlw	11
 26983  00D0C2  6E19               	movwf	i1___wmul@multiplicand,c
 26984  00D0C4  EC20  F051         	call	i1___wmul	;wreg free
 26985  00D0C8  0E01               	movlw	1
 26986  00D0CA  2617               	addwf	?i1___wmul,f,c
 26987  00D0CC  0E00               	movlw	0
 26988  00D0CE  2218               	addwfc	?i1___wmul+1,f,c
 26989  00D0D0  0E00               	movlw	low _OsAlarms
 26990  00D0D2  2417               	addwf	?i1___wmul,w,c
 26991  00D0D4  6ED9               	movwf	fsr2l,c
 26992  00D0D6  0E05               	movlw	high _OsAlarms
 26993  00D0D8  2018               	addwfc	?i1___wmul+1,w,c
 26994  00D0DA  6EDA               	movwf	fsr2h,c
 26995  00D0DC  2ADE               	incf	postinc2,f,c
 26996  00D0DE  0E00               	movlw	0
 26997  00D0E0  22DE               	addwfc	postinc2,f,c
 26998  00D0E2  22DE               	addwfc	postinc2,f,c
 26999  00D0E4  22DE               	addwfc	postinc2,f,c
 27000                           
 27001                           ;os_alarms.c: 127: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 27002  00D0E6  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27003  00D0EA  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27004  00D0EE  0E00               	movlw	0
 27005  00D0F0  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27006  00D0F2  0E0B               	movlw	11
 27007  00D0F4  6E19               	movwf	i1___wmul@multiplicand,c
 27008  00D0F6  EC20  F051         	call	i1___wmul	;wreg free
 27009  00D0FA  0E05               	movlw	5
 27010  00D0FC  2617               	addwf	?i1___wmul,f,c
 27011  00D0FE  0E00               	movlw	0
 27012  00D100  2218               	addwfc	?i1___wmul+1,f,c
 27013  00D102  0E00               	movlw	low _OsAlarms
 27014  00D104  2417               	addwf	?i1___wmul,w,c
 27015  00D106  6ED9               	movwf	fsr2l,c
 27016  00D108  0E05               	movlw	high _OsAlarms
 27017  00D10A  2018               	addwfc	?i1___wmul+1,w,c
 27018  00D10C  6EDA               	movwf	fsr2h,c
 27019  00D10E  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27020  00D112  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27021  00D116  0E00               	movlw	0
 27022  00D118  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27023  00D11A  0E0B               	movlw	11
 27024  00D11C  6E19               	movwf	i1___wmul@multiplicand,c
 27025  00D11E  EC20  F051         	call	i1___wmul	;wreg free
 27026  00D122  0E01               	movlw	1
 27027  00D124  2617               	addwf	?i1___wmul,f,c
 27028  00D126  0E00               	movlw	0
 27029  00D128  2218               	addwfc	?i1___wmul+1,f,c
 27030  00D12A  0E00               	movlw	low _OsAlarms
 27031  00D12C  2417               	addwf	?i1___wmul,w,c
 27032  00D12E  6EE1               	movwf	fsr1l,c
 27033  00D130  0E05               	movlw	high _OsAlarms
 27034  00D132  2018               	addwfc	?i1___wmul+1,w,c
 27035  00D134  6EE2               	movwf	fsr1h,c
 27036  00D136  50DE               	movf	postinc2,w,c
 27037  00D138  5CE6               	subwf	postinc1,w,c
 27038  00D13A  50DE               	movf	postinc2,w,c
 27039  00D13C  58E6               	subwfb	postinc1,w,c
 27040  00D13E  50DE               	movf	postinc2,w,c
 27041  00D140  58E6               	subwfb	postinc1,w,c
 27042  00D142  50DE               	movf	postinc2,w,c
 27043  00D144  58E6               	subwfb	postinc1,w,c
 27044  00D146  A0D8               	btfss	status,0,c
 27045  00D148  D03E               	goto	i1u775_29
 27046                           
 27047                           ;os_alarms.c: 128: {
 27048                           ;os_alarms.c: 130: OsAlrm_ClearOsAlarm(AlarmIndex);
 27049  00D14A  5027               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 27050  00D14C  ECAE  F055         	call	_OsAlrm_ClearOsAlarm
 27051                           
 27052                           ;os_alarms.c: 132: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 27053  00D150  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27054  00D154  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27055  00D158  0E00               	movlw	0
 27056  00D15A  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27057  00D15C  0E0B               	movlw	11
 27058  00D15E  6E19               	movwf	i1___wmul@multiplicand,c
 27059  00D160  EC20  F051         	call	i1___wmul	;wreg free
 27060  00D164  0E09               	movlw	9
 27061  00D166  2617               	addwf	?i1___wmul,f,c
 27062  00D168  0E00               	movlw	0
 27063  00D16A  2218               	addwfc	?i1___wmul+1,f,c
 27064  00D16C  0E00               	movlw	low _OsAlarms
 27065  00D16E  2417               	addwf	?i1___wmul,w,c
 27066  00D170  6ED9               	movwf	fsr2l,c
 27067  00D172  0E05               	movlw	high _OsAlarms
 27068  00D174  2018               	addwfc	?i1___wmul+1,w,c
 27069  00D176  6EDA               	movwf	fsr2h,c
 27070  00D178  50DE               	movf	postinc2,w,c
 27071  00D17A  10DE               	iorwf	postinc2,w,c
 27072  00D17C  B4D8               	btfsc	status,2,c
 27073  00D17E  D023               	goto	i1u775_29
 27074                           
 27075                           ;os_alarms.c: 133: {
 27076                           ;os_alarms.c: 135: OsAlarms[AlarmIndex].AlrmCbk();
 27077  00D180  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27078  00D184  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27079  00D188  0E00               	movlw	0
 27080  00D18A  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27081  00D18C  0E0B               	movlw	11
 27082  00D18E  6E19               	movwf	i1___wmul@multiplicand,c
 27083  00D190  EC20  F051         	call	i1___wmul	;wreg free
 27084  00D194  0E09               	movlw	9
 27085  00D196  2617               	addwf	?i1___wmul,f,c
 27086  00D198  0E00               	movlw	0
 27087  00D19A  2218               	addwfc	?i1___wmul+1,f,c
 27088  00D19C  0E00               	movlw	low _OsAlarms
 27089  00D19E  2417               	addwf	?i1___wmul,w,c
 27090  00D1A0  6ED9               	movwf	fsr2l,c
 27091  00D1A2  0E05               	movlw	high _OsAlarms
 27092  00D1A4  2018               	addwfc	?i1___wmul+1,w,c
 27093  00D1A6  6EDA               	movwf	fsr2h,c
 27094  00D1A8  CFDE F01F          	movff	postinc2,??_OsAlrm_ProcessOsAlarms
 27095  00D1AC  CFDD F020          	movff	postdec2,??_OsAlrm_ProcessOsAlarms+1
 27096  00D1B0  D801               	call	i1u775_28
 27097  00D1B2  D009               	goto	i1u775_29
 27098  00D1B4                     i1u775_28:
 27099  00D1B4  0005               	push	
 27100  00D1B6  6EFA               	movwf	pclath,c
 27101  00D1B8  501F               	movf	??_OsAlrm_ProcessOsAlarms,w,c
 27102  00D1BA  6EFD               	movwf	tosl,c
 27103  00D1BC  5020               	movf	??_OsAlrm_ProcessOsAlarms+1,w,c
 27104  00D1BE  6EFE               	movwf	tosh,c
 27105  00D1C0  6AFF               	clrf	tosu,c
 27106  00D1C2  50FA               	movf	pclath,w,c
 27107  00D1C4  0012               	return		;indir
 27108  00D1C6                     i1u775_29:
 27109  00D1C6  4A27               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 27110  00D1C8  2A28               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 27111  00D1CA  5028               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 27112  00D1CC  E101               	bnz	i1l678
 27113  00D1CE  D759               	goto	L44
 27114  00D1D0                     i1l678:
 27115  00D1D0  0012               	return		;funcret
 27116  00D1D2                     __end_of_OsAlrm_ProcessOsAlarms:
 27117                           	opt stack 0
 27118                           tosu	equ	0xFFF
 27119                           tosh	equ	0xFFE
 27120                           tosl	equ	0xFFD
 27121                           pclatu	equ	0xFFB
 27122                           pclath	equ	0xFFA
 27123                           tblptru	equ	0xFF8
 27124                           tblptrh	equ	0xFF7
 27125                           tblptrl	equ	0xFF6
 27126                           tablat	equ	0xFF5
 27127                           prodh	equ	0xFF4
 27128                           prodl	equ	0xFF3
 27129                           intcon	equ	0xFF2
 27130                           intcon2	equ	0xFF1
 27131                           intcon3	equ	0xFF0
 27132                           indf0	equ	0xFEF
 27133                           postinc0	equ	0xFEE
 27134                           plusw0	equ	0xFEB
 27135                           fsr0h	equ	0xFEA
 27136                           fsr0l	equ	0xFE9
 27137                           wreg	equ	0xFE8
 27138                           indf1	equ	0xFE7
 27139                           postinc1	equ	0xFE6
 27140                           postdec1	equ	0xFE5
 27141                           fsr1h	equ	0xFE2
 27142                           fsr1l	equ	0xFE1
 27143                           bsr	equ	0xFE0
 27144                           indf2	equ	0xFDF
 27145                           postinc2	equ	0xFDE
 27146                           postdec2	equ	0xFDD
 27147                           plusw2	equ	0xFDB
 27148                           fsr2h	equ	0xFDA
 27149                           fsr2l	equ	0xFD9
 27150                           status	equ	0xFD8
 27151                           
 27152 ;; *************** function i1___wmul *****************
 27153 ;; Defined at:
 27154 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 27155 ;; Parameters:    Size  Location     Type
 27156 ;;  multiplier      2   22[COMRAM] unsigned int 
 27157 ;;  multiplicand    2   24[COMRAM] unsigned int 
 27158 ;; Auto vars:     Size  Location     Type
 27159 ;;  __wmul          2   26[COMRAM] unsigned int 
 27160 ;; Return value:  Size  Location     Type
 27161 ;;                  2   22[COMRAM] unsigned int 
 27162 ;; Registers used:
 27163 ;;		wreg, status,2, status,0, prodl, prodh
 27164 ;; Tracked objects:
 27165 ;;		On entry : 0/0
 27166 ;;		On exit  : 0/0
 27167 ;;		Unchanged: 0/0
 27168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27172 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27173 ;;Total ram usage:        6 bytes
 27174 ;; Hardware stack levels used:    1
 27175 ;; Hardware stack levels required when called:    4
 27176 ;; This function calls:
 27177 ;;		Nothing
 27178 ;; This function is called by:
 27179 ;;		_OsAlrm_ProcessOsAlarms
 27180 ;; This function uses a non-reentrant model
 27181 ;;
 27182                           
 27183                           	psect	text138
 27184  00A240                     __ptext138:
 27185                           	opt stack 0
 27186  00A240                     i1___wmul:
 27187                           	opt stack 10
 27188                           
 27189                           ;incstack = 0
 27190  00A240  5017               	movf	i1___wmul@multiplier,w,c
 27191  00A242  0219               	mulwf	i1___wmul@multiplicand,c
 27192  00A244  CFF3 F01B          	movff	prodl,i1___wmul@product
 27193  00A248  CFF4 F01C          	movff	prodh,i1___wmul@product+1
 27194  00A24C  5017               	movf	i1___wmul@multiplier,w,c
 27195  00A24E  021A               	mulwf	i1___wmul@multiplicand+1,c
 27196  00A250  50F3               	movf	prodl,w,c
 27197  00A252  261C               	addwf	i1___wmul@product+1,f,c
 27198  00A254  5018               	movf	i1___wmul@multiplier+1,w,c
 27199  00A256  0219               	mulwf	i1___wmul@multiplicand,c
 27200  00A258  50F3               	movf	prodl,w,c
 27201  00A25A  261C               	addwf	i1___wmul@product+1,f,c
 27202  00A25C  C01B  F017         	movff	i1___wmul@product,?i1___wmul
 27203  00A260  C01C  F018         	movff	i1___wmul@product+1,?i1___wmul+1
 27204  00A264  0012               	return	
 27205  00A266                     __end_ofi1___wmul:
 27206                           	opt stack 0
 27207                           tosu	equ	0xFFF
 27208                           tosh	equ	0xFFE
 27209                           tosl	equ	0xFFD
 27210                           pclatu	equ	0xFFB
 27211                           pclath	equ	0xFFA
 27212                           tblptru	equ	0xFF8
 27213                           tblptrh	equ	0xFF7
 27214                           tblptrl	equ	0xFF6
 27215                           tablat	equ	0xFF5
 27216                           prodh	equ	0xFF4
 27217                           prodl	equ	0xFF3
 27218                           intcon	equ	0xFF2
 27219                           intcon2	equ	0xFF1
 27220                           intcon3	equ	0xFF0
 27221                           indf0	equ	0xFEF
 27222                           postinc0	equ	0xFEE
 27223                           plusw0	equ	0xFEB
 27224                           fsr0h	equ	0xFEA
 27225                           fsr0l	equ	0xFE9
 27226                           wreg	equ	0xFE8
 27227                           indf1	equ	0xFE7
 27228                           postinc1	equ	0xFE6
 27229                           postdec1	equ	0xFE5
 27230                           fsr1h	equ	0xFE2
 27231                           fsr1l	equ	0xFE1
 27232                           bsr	equ	0xFE0
 27233                           indf2	equ	0xFDF
 27234                           postinc2	equ	0xFDE
 27235                           postdec2	equ	0xFDD
 27236                           plusw2	equ	0xFDB
 27237                           fsr2h	equ	0xFDA
 27238                           fsr2l	equ	0xFD9
 27239                           status	equ	0xFD8
 27240                           
 27241 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 27242 ;; Defined at:
 27243 ;;		line 96 in file "../Source/c/02_Osl/os_alarms.c"
 27244 ;; Parameters:    Size  Location     Type
 27245 ;;  OsAlarmId       1    wreg     unsigned char 
 27246 ;; Auto vars:     Size  Location     Type
 27247 ;;  OsAlarmId       1   22[COMRAM] unsigned char 
 27248 ;; Return value:  Size  Location     Type
 27249 ;;                  1    wreg      void 
 27250 ;; Registers used:
 27251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27252 ;; Tracked objects:
 27253 ;;		On entry : 0/0
 27254 ;;		On exit  : 0/0
 27255 ;;		Unchanged: 0/0
 27256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27260 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27261 ;;Total ram usage:        1 bytes
 27262 ;; Hardware stack levels used:    1
 27263 ;; Hardware stack levels required when called:    4
 27264 ;; This function calls:
 27265 ;;		Nothing
 27266 ;; This function is called by:
 27267 ;;		_OsAlrm_ProcessOsAlarms
 27268 ;; This function uses a non-reentrant model
 27269 ;;
 27270                           
 27271                           	psect	text139
 27272  00AB5C                     __ptext139:
 27273                           	opt stack 0
 27274  00AB5C                     _OsAlrm_ClearOsAlarm:
 27275                           	opt stack 10
 27276                           
 27277                           ;incstack = 0
 27278                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 27279  00AB5C  6E17               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 27280                           
 27281                           ;os_alarms.c: 99: OsAlarms[OsAlarmId].Enabled = 0u;
 27282  00AB5E  5017               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 27283  00AB60  0D0B               	mullw	11
 27284  00AB62  0E00               	movlw	low _OsAlarms
 27285  00AB64  24F3               	addwf	prodl,w,c
 27286  00AB66  6ED9               	movwf	fsr2l,c
 27287  00AB68  0E05               	movlw	high _OsAlarms
 27288  00AB6A  20F4               	addwfc	prodh,w,c
 27289  00AB6C  6EDA               	movwf	fsr2h,c
 27290  00AB6E  0E00               	movlw	0
 27291  00AB70  6EDF               	movwf	indf2,c
 27292                           
 27293                           ;os_alarms.c: 101: OsAlarms[OsAlarmId].Counter = 0;
 27294  00AB72  5017               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 27295  00AB74  0D0B               	mullw	11
 27296  00AB76  0E01               	movlw	1
 27297  00AB78  26F3               	addwf	prodl,f,c
 27298  00AB7A  0E00               	movlw	0
 27299  00AB7C  22F4               	addwfc	prodh,f,c
 27300  00AB7E  0E00               	movlw	low _OsAlarms
 27301  00AB80  24F3               	addwf	prodl,w,c
 27302  00AB82  6ED9               	movwf	fsr2l,c
 27303  00AB84  0E05               	movlw	high _OsAlarms
 27304  00AB86  20F4               	addwfc	prodh,w,c
 27305  00AB88  6EDA               	movwf	fsr2h,c
 27306  00AB8A  6ADE               	clrf	postinc2,c
 27307  00AB8C  6ADE               	clrf	postinc2,c
 27308  00AB8E  6ADE               	clrf	postinc2,c
 27309  00AB90  6ADD               	clrf	postdec2,c
 27310                           
 27311                           ;os_alarms.c: 103: OsAlarms[OsAlarmId].AlarmTime = 0;
 27312  00AB92  5017               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 27313  00AB94  0D0B               	mullw	11
 27314  00AB96  0E05               	movlw	5
 27315  00AB98  26F3               	addwf	prodl,f,c
 27316  00AB9A  0E00               	movlw	0
 27317  00AB9C  22F4               	addwfc	prodh,f,c
 27318  00AB9E  0E00               	movlw	low _OsAlarms
 27319  00ABA0  24F3               	addwf	prodl,w,c
 27320  00ABA2  6ED9               	movwf	fsr2l,c
 27321  00ABA4  0E05               	movlw	high _OsAlarms
 27322  00ABA6  20F4               	addwfc	prodh,w,c
 27323  00ABA8  6EDA               	movwf	fsr2h,c
 27324  00ABAA  6ADE               	clrf	postinc2,c
 27325  00ABAC  6ADE               	clrf	postinc2,c
 27326  00ABAE  6ADE               	clrf	postinc2,c
 27327  00ABB0  6ADD               	clrf	postdec2,c
 27328  00ABB2  0012               	return		;funcret
 27329  00ABB4                     __end_of_OsAlrm_ClearOsAlarm:
 27330                           	opt stack 0
 27331                           tosu	equ	0xFFF
 27332                           tosh	equ	0xFFE
 27333                           tosl	equ	0xFFD
 27334                           pclatu	equ	0xFFB
 27335                           pclath	equ	0xFFA
 27336                           tblptru	equ	0xFF8
 27337                           tblptrh	equ	0xFF7
 27338                           tblptrl	equ	0xFF6
 27339                           tablat	equ	0xFF5
 27340                           prodh	equ	0xFF4
 27341                           prodl	equ	0xFF3
 27342                           intcon	equ	0xFF2
 27343                           intcon2	equ	0xFF1
 27344                           intcon3	equ	0xFF0
 27345                           indf0	equ	0xFEF
 27346                           postinc0	equ	0xFEE
 27347                           plusw0	equ	0xFEB
 27348                           fsr0h	equ	0xFEA
 27349                           fsr0l	equ	0xFE9
 27350                           wreg	equ	0xFE8
 27351                           indf1	equ	0xFE7
 27352                           postinc1	equ	0xFE6
 27353                           postdec1	equ	0xFE5
 27354                           fsr1h	equ	0xFE2
 27355                           fsr1l	equ	0xFE1
 27356                           bsr	equ	0xFE0
 27357                           indf2	equ	0xFDF
 27358                           postinc2	equ	0xFDE
 27359                           postdec2	equ	0xFDD
 27360                           plusw2	equ	0xFDB
 27361                           fsr2h	equ	0xFDA
 27362                           fsr2l	equ	0xFD9
 27363                           status	equ	0xFD8
 27364                           
 27365 ;; *************** function _I2cDummyTx *****************
 27366 ;; Defined at:
 27367 ;;		line 177 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 27368 ;; Parameters:    Size  Location     Type
 27369 ;;		None
 27370 ;; Auto vars:     Size  Location     Type
 27371 ;;		None
 27372 ;; Return value:  Size  Location     Type
 27373 ;;                  1    wreg      void 
 27374 ;; Registers used:
 27375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27376 ;; Tracked objects:
 27377 ;;		On entry : 0/0
 27378 ;;		On exit  : 0/0
 27379 ;;		Unchanged: 0/0
 27380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27385 ;;Total ram usage:        0 bytes
 27386 ;; Hardware stack levels used:    1
 27387 ;; Hardware stack levels required when called:    6
 27388 ;; This function calls:
 27389 ;;		i1_I2cSlv_SendI2cMsg
 27390 ;; This function is called by:
 27391 ;;		_I2cSlv_MainTask
 27392 ;;		_OsAlrm_ProcessOsAlarms
 27393 ;; This function uses a non-reentrant model
 27394 ;;
 27395                           
 27396                           	psect	text140
 27397  00A034                     __ptext140:
 27398                           	opt stack 0
 27399  00A034                     _I2cDummyTx:
 27400                           	opt stack 8
 27401                           
 27402                           ;i2c_slv.c: 179: static UINT8 DummyBuffer = 0x00;
 27403                           ;i2c_slv.c: 182: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 27404                           
 27405                           ;incstack = 0
 27406  00A034  0EC4               	movlw	low I2cDummyTx@DummyBuffer
 27407  00A036  6E1A               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 27408  00A038  0E01               	movlw	high I2cDummyTx@DummyBuffer
 27409  00A03A  6E1B               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 27410  00A03C  0E00               	movlw	0
 27411  00A03E  6E1C               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 27412  00A040  0E01               	movlw	1
 27413  00A042  6E1D               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 27414  00A044  EC64  F052         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 27415                           
 27416                           ;i2c_slv.c: 184: I2cBusStatus = I2cBusReady;
 27417  00A048  0E01               	movlw	1
 27418  00A04A  0101               	movlb	1	; () banked
 27419  00A04C  6F64               	movwf	_I2cBusStatus& (0+255),b
 27420                           
 27421                           ; BSR set to: 1
 27422  00A04E  0012               	return		;funcret
 27423  00A050                     __end_of_I2cDummyTx:
 27424                           	opt stack 0
 27425                           tosu	equ	0xFFF
 27426                           tosh	equ	0xFFE
 27427                           tosl	equ	0xFFD
 27428                           pclatu	equ	0xFFB
 27429                           pclath	equ	0xFFA
 27430                           tblptru	equ	0xFF8
 27431                           tblptrh	equ	0xFF7
 27432                           tblptrl	equ	0xFF6
 27433                           tablat	equ	0xFF5
 27434                           prodh	equ	0xFF4
 27435                           prodl	equ	0xFF3
 27436                           intcon	equ	0xFF2
 27437                           intcon2	equ	0xFF1
 27438                           intcon3	equ	0xFF0
 27439                           indf0	equ	0xFEF
 27440                           postinc0	equ	0xFEE
 27441                           plusw0	equ	0xFEB
 27442                           fsr0h	equ	0xFEA
 27443                           fsr0l	equ	0xFE9
 27444                           wreg	equ	0xFE8
 27445                           indf1	equ	0xFE7
 27446                           postinc1	equ	0xFE6
 27447                           postdec1	equ	0xFE5
 27448                           fsr1h	equ	0xFE2
 27449                           fsr1l	equ	0xFE1
 27450                           bsr	equ	0xFE0
 27451                           indf2	equ	0xFDF
 27452                           postinc2	equ	0xFDE
 27453                           postdec2	equ	0xFDD
 27454                           plusw2	equ	0xFDB
 27455                           fsr2h	equ	0xFDA
 27456                           fsr2l	equ	0xFD9
 27457                           status	equ	0xFD8
 27458                           
 27459 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 27460 ;; Defined at:
 27461 ;;		line 236 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 27462 ;; Parameters:    Size  Location     Type
 27463 ;;  TxBuffer        2   25[COMRAM] PTR unsigned char 
 27464 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 27465 ;;  SlaveAddr       1   27[COMRAM] unsigned char 
 27466 ;;  DataLenght      1   28[COMRAM] unsigned char 
 27467 ;; Auto vars:     Size  Location     Type
 27468 ;;  I2cSlv_SendI    1   29[COMRAM] unsigned char 
 27469 ;; Return value:  Size  Location     Type
 27470 ;;                  1    wreg      unsigned char 
 27471 ;; Registers used:
 27472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27473 ;; Tracked objects:
 27474 ;;		On entry : 0/0
 27475 ;;		On exit  : 0/0
 27476 ;;		Unchanged: 0/0
 27477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27481 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27482 ;;Total ram usage:        5 bytes
 27483 ;; Hardware stack levels used:    1
 27484 ;; Hardware stack levels required when called:    5
 27485 ;; This function calls:
 27486 ;;		i1_GenerateEvt
 27487 ;; This function is called by:
 27488 ;;		_I2cDummyTx
 27489 ;; This function uses a non-reentrant model
 27490 ;;
 27491                           
 27492                           	psect	text141
 27493  00A4C8                     __ptext141:
 27494                           	opt stack 0
 27495  00A4C8                     i1_I2cSlv_SendI2cMsg:
 27496                           	opt stack 8
 27497                           
 27498                           ;i2c_slv.c: 238: UINT8 TxSts = 0u;
 27499                           
 27500                           ; BSR set to: 1
 27501                           ;incstack = 0
 27502  00A4C8  0E00               	movlw	0
 27503  00A4CA  6E1E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 27504                           
 27505                           ;i2c_slv.c: 240: if (I2cComSts != TxInProgress)
 27506  00A4CC  044E               	decf	_I2cComSts,w,c
 27507  00A4CE  B4D8               	btfsc	status,2,c
 27508  00A4D0  D014               	goto	i1l1182
 27509                           
 27510                           ;i2c_slv.c: 241: {
 27511                           ;i2c_slv.c: 243: I2cTxPacket.SlaveAddress = SlaveAddr;
 27512  00A4D2  C01C  F1AC         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 27513                           
 27514                           ;i2c_slv.c: 244: I2cTxPacket.ReadWrite = ((UINT8)(0));
 27515  00A4D6  0E00               	movlw	0
 27516  00A4D8  0101               	movlb	1	; () banked
 27517  00A4DA  6FAD               	movwf	(_I2cTxPacket+1)& (0+255),b
 27518                           
 27519                           ; BSR set to: 1
 27520                           ;i2c_slv.c: 245: I2cTxPacket.Lenght = DataLenght;
 27521  00A4DC  C01D  F1B0         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 27522                           
 27523                           ; BSR set to: 1
 27524                           ;i2c_slv.c: 246: I2cTxPacket.Buffer = TxBuffer;
 27525  00A4E0  C01A  F1AE         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 27526  00A4E4  C01B  F1AF         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 27527                           
 27528                           ; BSR set to: 1
 27529                           ;i2c_slv.c: 249: GenerateEvt(&I2cWriteDataEvt);
 27530  00A4E8  0E54               	movlw	low _I2cWriteDataEvt
 27531  00A4EA  6E17               	movwf	i1GenerateEvt@Event,c
 27532  00A4EC  0E00               	movlw	high _I2cWriteDataEvt
 27533  00A4EE  6E18               	movwf	i1GenerateEvt@Event+1,c
 27534  00A4F0  ECD4  F04F         	call	i1_GenerateEvt	;wreg free
 27535                           
 27536                           ;i2c_slv.c: 251: TxSts = 1u;
 27537  00A4F4  0E01               	movlw	1
 27538  00A4F6  6E1E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 27539                           
 27540                           ;i2c_slv.c: 252: }
 27541  00A4F8  0012               	return	
 27542  00A4FA                     i1l1182:
 27543                           
 27544                           ;i2c_slv.c: 253: else
 27545                           ;i2c_slv.c: 254: {
 27546                           ;i2c_slv.c: 256: TxSts = 0u;
 27547  00A4FA  0E00               	movlw	0
 27548  00A4FC  6E1E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 27549  00A4FE  0012               	return	
 27550  00A500                     __end_ofi1_I2cSlv_SendI2cMsg:
 27551                           	opt stack 0
 27552                           tosu	equ	0xFFF
 27553                           tosh	equ	0xFFE
 27554                           tosl	equ	0xFFD
 27555                           pclatu	equ	0xFFB
 27556                           pclath	equ	0xFFA
 27557                           tblptru	equ	0xFF8
 27558                           tblptrh	equ	0xFF7
 27559                           tblptrl	equ	0xFF6
 27560                           tablat	equ	0xFF5
 27561                           prodh	equ	0xFF4
 27562                           prodl	equ	0xFF3
 27563                           intcon	equ	0xFF2
 27564                           intcon2	equ	0xFF1
 27565                           intcon3	equ	0xFF0
 27566                           indf0	equ	0xFEF
 27567                           postinc0	equ	0xFEE
 27568                           plusw0	equ	0xFEB
 27569                           fsr0h	equ	0xFEA
 27570                           fsr0l	equ	0xFE9
 27571                           wreg	equ	0xFE8
 27572                           indf1	equ	0xFE7
 27573                           postinc1	equ	0xFE6
 27574                           postdec1	equ	0xFE5
 27575                           fsr1h	equ	0xFE2
 27576                           fsr1l	equ	0xFE1
 27577                           bsr	equ	0xFE0
 27578                           indf2	equ	0xFDF
 27579                           postinc2	equ	0xFDE
 27580                           postdec2	equ	0xFDD
 27581                           plusw2	equ	0xFDB
 27582                           fsr2h	equ	0xFDA
 27583                           fsr2l	equ	0xFD9
 27584                           status	equ	0xFD8
 27585                           
 27586 ;; *************** function i1_GenerateEvt *****************
 27587 ;; Defined at:
 27588 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 27589 ;; Parameters:    Size  Location     Type
 27590 ;;  Event           2   22[COMRAM] PTR struct EventStructur
 27591 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 27592 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 27593 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(253), 
 27594 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 27595 ;; Auto vars:     Size  Location     Type
 27596 ;;  GenerateEvt     1   24[COMRAM] enum E7721
 27597 ;; Return value:  Size  Location     Type
 27598 ;;                  1    wreg      enum E7693
 27599 ;; Registers used:
 27600 ;;		wreg, fsr2l, fsr2h, status,2
 27601 ;; Tracked objects:
 27602 ;;		On entry : 0/0
 27603 ;;		On exit  : 0/0
 27604 ;;		Unchanged: 0/0
 27605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27609 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27610 ;;Total ram usage:        3 bytes
 27611 ;; Hardware stack levels used:    1
 27612 ;; Hardware stack levels required when called:    4
 27613 ;; This function calls:
 27614 ;;		Nothing
 27615 ;; This function is called by:
 27616 ;;		i1_I2cSlv_SendI2cMsg
 27617 ;; This function uses a non-reentrant model
 27618 ;;
 27619                           
 27620                           	psect	text142
 27621  009FA8                     __ptext142:
 27622                           	opt stack 0
 27623  009FA8                     i1_GenerateEvt:
 27624                           	opt stack 8
 27625                           
 27626                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 27627                           
 27628                           ;incstack = 0
 27629  009FA8  0E00               	movlw	0
 27630  009FAA  6E19               	movwf	i1GenerateEvt@EventStatus,c
 27631                           
 27632                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 27633  009FAC  C017  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 27634  009FB0  C018  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 27635  009FB4  0E02               	movlw	2
 27636  009FB6  6EDF               	movwf	indf2,c
 27637                           
 27638                           ;os_ser.c: 81: EventStatus = EventSent;
 27639  009FB8  0E02               	movlw	2
 27640  009FBA  6E19               	movwf	i1GenerateEvt@EventStatus,c
 27641  009FBC  0012               	return	
 27642  009FBE                     __end_ofi1_GenerateEvt:
 27643                           	opt stack 0
 27644                           tosu	equ	0xFFF
 27645                           tosh	equ	0xFFE
 27646                           tosl	equ	0xFFD
 27647                           pclatu	equ	0xFFB
 27648                           pclath	equ	0xFFA
 27649                           tblptru	equ	0xFF8
 27650                           tblptrh	equ	0xFF7
 27651                           tblptrl	equ	0xFF6
 27652                           tablat	equ	0xFF5
 27653                           prodh	equ	0xFF4
 27654                           prodl	equ	0xFF3
 27655                           intcon	equ	0xFF2
 27656                           intcon2	equ	0xFF1
 27657                           intcon3	equ	0xFF0
 27658                           indf0	equ	0xFEF
 27659                           postinc0	equ	0xFEE
 27660                           plusw0	equ	0xFEB
 27661                           fsr0h	equ	0xFEA
 27662                           fsr0l	equ	0xFE9
 27663                           wreg	equ	0xFE8
 27664                           indf1	equ	0xFE7
 27665                           postinc1	equ	0xFE6
 27666                           postdec1	equ	0xFE5
 27667                           fsr1h	equ	0xFE2
 27668                           fsr1l	equ	0xFE1
 27669                           bsr	equ	0xFE0
 27670                           indf2	equ	0xFDF
 27671                           postinc2	equ	0xFDE
 27672                           postdec2	equ	0xFDD
 27673                           plusw2	equ	0xFDB
 27674                           fsr2h	equ	0xFDA
 27675                           fsr2l	equ	0xFD9
 27676                           status	equ	0xFD8
 27677                           
 27678 ;; *************** function _HighPriorityIsr *****************
 27679 ;; Defined at:
 27680 ;;		line 153 in file "../Source/c/01_Hal/01_Sys/irq.c"
 27681 ;; Parameters:    Size  Location     Type
 27682 ;;		None
 27683 ;; Auto vars:     Size  Location     Type
 27684 ;;		None
 27685 ;; Return value:  Size  Location     Type
 27686 ;;                  1    wreg      void 
 27687 ;; Registers used:
 27688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 27689 ;; Tracked objects:
 27690 ;;		On entry : 0/0
 27691 ;;		On exit  : 0/0
 27692 ;;		Unchanged: 0/0
 27693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27696 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27697 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27698 ;;Total ram usage:       18 bytes
 27699 ;; Hardware stack levels used:    1
 27700 ;; Hardware stack levels required when called:    3
 27701 ;; This function calls:
 27702 ;;		_Mcu_Int0Isr
 27703 ;;		_Mcu_Int1Isr
 27704 ;;		_Rtcc_RtcIsr
 27705 ;;		_Uart_Uart1RxIsr
 27706 ;; This function is called by:
 27707 ;;		Interrupt level 2
 27708 ;; This function uses a non-reentrant model
 27709 ;;
 27710                           
 27711                           	psect	intcode
 27712  002008                     __pintcode:
 27713                           	opt stack 0
 27714  002008                     _HighPriorityIsr:
 27715                           	opt stack 8
 27716                           
 27717                           ;incstack = 0
 27718  002008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 27719  00200A  EF48  F05D         	goto	int_func
 27720                           tosu	equ	0xFFF
 27721                           tosh	equ	0xFFE
 27722                           tosl	equ	0xFFD
 27723                           pclatu	equ	0xFFB
 27724                           pclath	equ	0xFFA
 27725                           tblptru	equ	0xFF8
 27726                           tblptrh	equ	0xFF7
 27727                           tblptrl	equ	0xFF6
 27728                           tablat	equ	0xFF5
 27729                           prodh	equ	0xFF4
 27730                           prodl	equ	0xFF3
 27731                           intcon	equ	0xFF2
 27732                           intcon2	equ	0xFF1
 27733                           intcon3	equ	0xFF0
 27734                           indf0	equ	0xFEF
 27735                           postinc0	equ	0xFEE
 27736                           plusw0	equ	0xFEB
 27737                           fsr0h	equ	0xFEA
 27738                           fsr0l	equ	0xFE9
 27739                           wreg	equ	0xFE8
 27740                           indf1	equ	0xFE7
 27741                           postinc1	equ	0xFE6
 27742                           postdec1	equ	0xFE5
 27743                           fsr1h	equ	0xFE2
 27744                           fsr1l	equ	0xFE1
 27745                           bsr	equ	0xFE0
 27746                           indf2	equ	0xFDF
 27747                           postinc2	equ	0xFDE
 27748                           postdec2	equ	0xFDD
 27749                           plusw2	equ	0xFDB
 27750                           fsr2h	equ	0xFDA
 27751                           fsr2l	equ	0xFD9
 27752                           status	equ	0xFD8
 27753                           
 27754                           	psect	intcode_body
 27755  00BA90                     __pintcode_body:
 27756                           	opt stack 8
 27757  00BA90                     int_func:
 27758                           	opt stack 8
 27759  00BA90  CFFA F005          	movff	pclath,??_HighPriorityIsr
 27760  00BA94  CFFB F006          	movff	pclatu,??_HighPriorityIsr+1
 27761  00BA98  CFE9 F007          	movff	fsr0l,??_HighPriorityIsr+2
 27762  00BA9C  CFEA F008          	movff	fsr0h,??_HighPriorityIsr+3
 27763  00BAA0  CFE1 F009          	movff	fsr1l,??_HighPriorityIsr+4
 27764  00BAA4  CFE2 F00A          	movff	fsr1h,??_HighPriorityIsr+5
 27765  00BAA8  CFD9 F00B          	movff	fsr2l,??_HighPriorityIsr+6
 27766  00BAAC  CFDA F00C          	movff	fsr2h,??_HighPriorityIsr+7
 27767  00BAB0  CFF3 F00D          	movff	prodl,??_HighPriorityIsr+8
 27768  00BAB4  CFF4 F00E          	movff	prodh,??_HighPriorityIsr+9
 27769  00BAB8  CFF6 F00F          	movff	tblptrl,??_HighPriorityIsr+10
 27770  00BABC  CFF7 F010          	movff	tblptrh,??_HighPriorityIsr+11
 27771  00BAC0  CFF8 F011          	movff	tblptru,??_HighPriorityIsr+12
 27772  00BAC4  CFF5 F012          	movff	tablat,??_HighPriorityIsr+13
 27773  00BAC8  C05D  F013         	movff	btemp,??_HighPriorityIsr+14
 27774  00BACC  C05E  F014         	movff	btemp+1,??_HighPriorityIsr+15
 27775  00BAD0  C05F  F015         	movff	btemp+2,??_HighPriorityIsr+16
 27776  00BAD4  C060  F016         	movff	btemp+3,??_HighPriorityIsr+17
 27777                           
 27778                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 27779  00BAD8  B2F2               	btfsc	intcon,1,c	;volatile
 27780                           
 27781                           ;irq.c: 158: {
 27782                           ;irq.c: 160: Mcu_Int0Isr();
 27783  00BADA  EC40  F04F         	call	_Mcu_Int0Isr	;wreg free
 27784                           
 27785                           ;irq.c: 161: }
 27786                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 27787  00BADE  B0F0               	btfsc	intcon3,0,c	;volatile
 27788                           
 27789                           ;irq.c: 167: {
 27790                           ;irq.c: 169: Mcu_Int1Isr();
 27791  00BAE0  EC42  F04F         	call	_Mcu_Int1Isr	;wreg free
 27792                           
 27793                           ;irq.c: 170: }
 27794                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 27795  00BAE4  B0A4               	btfsc	4004,0,c	;volatile
 27796                           
 27797                           ;irq.c: 203: {
 27798                           ;irq.c: 205: Rtcc_RtcIsr();
 27799  00BAE6  EC84  F050         	call	_Rtcc_RtcIsr	;wreg free
 27800                           
 27801                           ;irq.c: 206: }
 27802                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 27803  00BAEA  BA9E               	btfsc	3998,5,c	;volatile
 27804                           
 27805                           ;irq.c: 212: {
 27806                           ;irq.c: 214: Uart_Uart1RxIsr();
 27807  00BAEC  EC86  F04F         	call	_Uart_Uart1RxIsr	;wreg free
 27808  00BAF0  C016  F060         	movff	??_HighPriorityIsr+17,btemp+3
 27809  00BAF4  C015  F05F         	movff	??_HighPriorityIsr+16,btemp+2
 27810  00BAF8  C014  F05E         	movff	??_HighPriorityIsr+15,btemp+1
 27811  00BAFC  C013  F05D         	movff	??_HighPriorityIsr+14,btemp
 27812  00BB00  C012  FFF5         	movff	??_HighPriorityIsr+13,tablat
 27813  00BB04  C011  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 27814  00BB08  C010  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 27815  00BB0C  C00F  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 27816  00BB10  C00E  FFF4         	movff	??_HighPriorityIsr+9,prodh
 27817  00BB14  C00D  FFF3         	movff	??_HighPriorityIsr+8,prodl
 27818  00BB18  C00C  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 27819  00BB1C  C00B  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 27820  00BB20  C00A  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 27821  00BB24  C009  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 27822  00BB28  C008  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 27823  00BB2C  C007  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 27824  00BB30  C006  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 27825  00BB34  C005  FFFA         	movff	??_HighPriorityIsr,pclath
 27826  00BB38  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 27827  00BB3A  0011               	retfie		f
 27828  00BB3C                     __end_of_HighPriorityIsr:
 27829                           	opt stack 0
 27830                           tosu	equ	0xFFF
 27831                           tosh	equ	0xFFE
 27832                           tosl	equ	0xFFD
 27833                           pclatu	equ	0xFFB
 27834                           pclath	equ	0xFFA
 27835                           tblptru	equ	0xFF8
 27836                           tblptrh	equ	0xFF7
 27837                           tblptrl	equ	0xFF6
 27838                           tablat	equ	0xFF5
 27839                           prodh	equ	0xFF4
 27840                           prodl	equ	0xFF3
 27841                           intcon	equ	0xFF2
 27842                           intcon2	equ	0xFF1
 27843                           intcon3	equ	0xFF0
 27844                           indf0	equ	0xFEF
 27845                           postinc0	equ	0xFEE
 27846                           plusw0	equ	0xFEB
 27847                           fsr0h	equ	0xFEA
 27848                           fsr0l	equ	0xFE9
 27849                           wreg	equ	0xFE8
 27850                           indf1	equ	0xFE7
 27851                           postinc1	equ	0xFE6
 27852                           postdec1	equ	0xFE5
 27853                           fsr1h	equ	0xFE2
 27854                           fsr1l	equ	0xFE1
 27855                           bsr	equ	0xFE0
 27856                           indf2	equ	0xFDF
 27857                           postinc2	equ	0xFDE
 27858                           postdec2	equ	0xFDD
 27859                           plusw2	equ	0xFDB
 27860                           fsr2h	equ	0xFDA
 27861                           fsr2l	equ	0xFD9
 27862                           status	equ	0xFD8
 27863                           
 27864 ;; *************** function _Uart_Uart1RxIsr *****************
 27865 ;; Defined at:
 27866 ;;		line 572 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 27867 ;; Parameters:    Size  Location     Type
 27868 ;;		None
 27869 ;; Auto vars:     Size  Location     Type
 27870 ;;		None
 27871 ;; Return value:  Size  Location     Type
 27872 ;;                  1    wreg      void 
 27873 ;; Registers used:
 27874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27875 ;; Tracked objects:
 27876 ;;		On entry : 0/0
 27877 ;;		On exit  : 0/0
 27878 ;;		Unchanged: 0/0
 27879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27884 ;;Total ram usage:        0 bytes
 27885 ;; Hardware stack levels used:    1
 27886 ;; Hardware stack levels required when called:    2
 27887 ;; This function calls:
 27888 ;;		_Uart_MdmWifiReadService
 27889 ;; This function is called by:
 27890 ;;		_HighPriorityIsr
 27891 ;; This function uses a non-reentrant model
 27892 ;;
 27893                           
 27894                           	psect	text144
 27895  009F0C                     __ptext144:
 27896                           	opt stack 0
 27897  009F0C                     _Uart_Uart1RxIsr:
 27898                           	opt stack 8
 27899                           
 27900                           ;uart_drv.c: 575: static UINT8 UartRxData = 0;
 27901                           ;uart_drv.c: 578: UartRxData = RCREG1;
 27902                           
 27903                           ;incstack = 0
 27904  009F0C  CFAF F16F          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 27905                           
 27906                           ;uart_drv.c: 592: Uart_MdmWifiReadService(1,UartRxData);
 27907  009F10  C16F  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmWifiReadService@UartData
 27908  009F14  0E01               	movlw	1
 27909  009F16  ECFD  F051         	call	_Uart_MdmWifiReadService
 27910  009F1A  0012               	return		;funcret
 27911  009F1C                     __end_of_Uart_Uart1RxIsr:
 27912                           	opt stack 0
 27913                           tosu	equ	0xFFF
 27914                           tosh	equ	0xFFE
 27915                           tosl	equ	0xFFD
 27916                           pclatu	equ	0xFFB
 27917                           pclath	equ	0xFFA
 27918                           tblptru	equ	0xFF8
 27919                           tblptrh	equ	0xFF7
 27920                           tblptrl	equ	0xFF6
 27921                           tablat	equ	0xFF5
 27922                           prodh	equ	0xFF4
 27923                           prodl	equ	0xFF3
 27924                           intcon	equ	0xFF2
 27925                           intcon2	equ	0xFF1
 27926                           intcon3	equ	0xFF0
 27927                           indf0	equ	0xFEF
 27928                           postinc0	equ	0xFEE
 27929                           plusw0	equ	0xFEB
 27930                           fsr0h	equ	0xFEA
 27931                           fsr0l	equ	0xFE9
 27932                           wreg	equ	0xFE8
 27933                           indf1	equ	0xFE7
 27934                           postinc1	equ	0xFE6
 27935                           postdec1	equ	0xFE5
 27936                           fsr1h	equ	0xFE2
 27937                           fsr1l	equ	0xFE1
 27938                           bsr	equ	0xFE0
 27939                           indf2	equ	0xFDF
 27940                           postinc2	equ	0xFDE
 27941                           postdec2	equ	0xFDD
 27942                           plusw2	equ	0xFDB
 27943                           fsr2h	equ	0xFDA
 27944                           fsr2l	equ	0xFD9
 27945                           status	equ	0xFD8
 27946                           
 27947 ;; *************** function _Uart_MdmWifiReadService *****************
 27948 ;; Defined at:
 27949 ;;		line 462 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 27950 ;; Parameters:    Size  Location     Type
 27951 ;;  Module          1    wreg     unsigned char 
 27952 ;;  UartData        1    3[COMRAM] unsigned char 
 27953 ;; Auto vars:     Size  Location     Type
 27954 ;;  Module          1    0[COMRAM] unsigned char 
 27955 ;; Return value:  Size  Location     Type
 27956 ;;                  1    wreg      void 
 27957 ;; Registers used:
 27958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27959 ;; Tracked objects:
 27960 ;;		On entry : 0/0
 27961 ;;		On exit  : 0/0
 27962 ;;		Unchanged: 0/0
 27963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27964 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27968 ;;Total ram usage:        1 bytes
 27969 ;; Hardware stack levels used:    1
 27970 ;; Hardware stack levels required when called:    1
 27971 ;; This function calls:
 27972 ;;		i2_GenerateEvt
 27973 ;; This function is called by:
 27974 ;;		_Uart_Uart1RxIsr
 27975 ;; This function uses a non-reentrant model
 27976 ;;
 27977                           
 27978                           	psect	text145
 27979  00A3FA                     __ptext145:
 27980                           	opt stack 0
 27981  00A3FA                     _Uart_MdmWifiReadService:
 27982                           	opt stack 8
 27983                           
 27984                           ;uart_drv.c: 464: if (MdmWifi_UartRxCounter < sizeof(MdmWifi_UartRxBuffer))
 27985                           
 27986                           ;incstack = 0
 27987  00A3FA  0101               	movlb	1	; () banked
 27988  00A3FC  514B               	movf	(_MdmWifi_UartRxCounter+1)& (0+255),w,b
 27989  00A3FE  E115               	bnz	i2l557
 27990  00A400  0EFA               	movlw	250
 27991  00A402  5D4A               	subwf	_MdmWifi_UartRxCounter& (0+255),w,b
 27992  00A404  B0D8               	btfsc	status,0,c
 27993  00A406  0012               	return	
 27994                           
 27995                           ; BSR set to: 1
 27996                           ;uart_drv.c: 465: {
 27997                           ;uart_drv.c: 467: MdmWifi_UartRxBuffer[MdmWifi_UartRxCounter] = UartData;
 27998  00A408  0E00               	movlw	low _MdmWifi_UartRxBuffer
 27999  00A40A  254A               	addwf	_MdmWifi_UartRxCounter& (0+255),w,b
 28000  00A40C  6ED9               	movwf	fsr2l,c
 28001  00A40E  0E0B               	movlw	high _MdmWifi_UartRxBuffer
 28002  00A410  214B               	addwfc	(_MdmWifi_UartRxCounter+1)& (0+255),w,b
 28003  00A412  6EDA               	movwf	fsr2h,c
 28004  00A414  C004  FFDF         	movff	Uart_MdmWifiReadService@UartData,indf2
 28005                           
 28006                           ; BSR set to: 1
 28007                           ;uart_drv.c: 469: MdmWifi_UartRxCounter++;
 28008  00A418  4B4A               	infsnz	_MdmWifi_UartRxCounter& (0+255),f,b
 28009  00A41A  2B4B               	incf	(_MdmWifi_UartRxCounter+1)& (0+255),f,b
 28010                           
 28011                           ; BSR set to: 1
 28012                           ;uart_drv.c: 471: GenerateEvt(&NewWifiUartData);
 28013  00A41C  0E5C               	movlw	low _NewWifiUartData
 28014  00A41E  6E01               	movwf	i2GenerateEvt@Event,c
 28015  00A420  0E00               	movlw	high _NewWifiUartData
 28016  00A422  6E02               	movwf	i2GenerateEvt@Event+1,c
 28017  00A424  ECC9  F04F         	call	i2_GenerateEvt	;wreg free
 28018  00A428  0012               	return	
 28019  00A42A                     i2l557:
 28020  00A42A  0012               	return		;funcret
 28021  00A42C                     __end_of_Uart_MdmWifiReadService:
 28022                           	opt stack 0
 28023                           tosu	equ	0xFFF
 28024                           tosh	equ	0xFFE
 28025                           tosl	equ	0xFFD
 28026                           pclatu	equ	0xFFB
 28027                           pclath	equ	0xFFA
 28028                           tblptru	equ	0xFF8
 28029                           tblptrh	equ	0xFF7
 28030                           tblptrl	equ	0xFF6
 28031                           tablat	equ	0xFF5
 28032                           prodh	equ	0xFF4
 28033                           prodl	equ	0xFF3
 28034                           intcon	equ	0xFF2
 28035                           intcon2	equ	0xFF1
 28036                           intcon3	equ	0xFF0
 28037                           indf0	equ	0xFEF
 28038                           postinc0	equ	0xFEE
 28039                           plusw0	equ	0xFEB
 28040                           fsr0h	equ	0xFEA
 28041                           fsr0l	equ	0xFE9
 28042                           wreg	equ	0xFE8
 28043                           indf1	equ	0xFE7
 28044                           postinc1	equ	0xFE6
 28045                           postdec1	equ	0xFE5
 28046                           fsr1h	equ	0xFE2
 28047                           fsr1l	equ	0xFE1
 28048                           bsr	equ	0xFE0
 28049                           indf2	equ	0xFDF
 28050                           postinc2	equ	0xFDE
 28051                           postdec2	equ	0xFDD
 28052                           plusw2	equ	0xFDB
 28053                           fsr2h	equ	0xFDA
 28054                           fsr2l	equ	0xFD9
 28055                           status	equ	0xFD8
 28056                           
 28057 ;; *************** function _Rtcc_RtcIsr *****************
 28058 ;; Defined at:
 28059 ;;		line 537 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 28060 ;; Parameters:    Size  Location     Type
 28061 ;;		None
 28062 ;; Auto vars:     Size  Location     Type
 28063 ;;		None
 28064 ;; Return value:  Size  Location     Type
 28065 ;;                  1    wreg      void 
 28066 ;; Registers used:
 28067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 28068 ;; Tracked objects:
 28069 ;;		On entry : 0/0
 28070 ;;		On exit  : 0/0
 28071 ;;		Unchanged: 0/0
 28072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28077 ;;Total ram usage:        0 bytes
 28078 ;; Hardware stack levels used:    1
 28079 ;; Hardware stack levels required when called:    2
 28080 ;; This function calls:
 28081 ;;		Absolute function
 28082 ;;		_Alarm
 28083 ;; This function is called by:
 28084 ;;		_HighPriorityIsr
 28085 ;; This function uses a non-reentrant model
 28086 ;;
 28087                           
 28088                           	psect	text146
 28089  00A108                     __ptext146:
 28090                           	opt stack 0
 28091  00A108                     _Rtcc_RtcIsr:
 28092                           	opt stack 8
 28093                           
 28094                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 28095                           
 28096                           ;incstack = 0
 28097  00A108  90A4               	bcf	4004,0,c	;volatile
 28098                           
 28099                           ;rtcc_drv.c: 543: if (RtccIsrCallback != (0))
 28100  00A10A  0101               	movlb	1	; () banked
 28101  00A10C  5150               	movf	_RtccIsrCallback& (0+255),w,b
 28102  00A10E  1151               	iorwf	(_RtccIsrCallback+1)& (0+255),w,b
 28103  00A110  B4D8               	btfsc	status,2,c
 28104  00A112  0012               	return	
 28105                           
 28106                           ; BSR set to: 1
 28107                           ;rtcc_drv.c: 544: {
 28108                           ;rtcc_drv.c: 546: RtccIsrCallback();
 28109  00A114  D801               	call	i2u798_48
 28110  00A116  0012               	return	
 28111  00A118                     i2u798_48:
 28112  00A118  0005               	push	
 28113  00A11A  6EFA               	movwf	pclath,c
 28114  00A11C  5150               	movf	_RtccIsrCallback& (0+255),w,b
 28115  00A11E  6EFD               	movwf	tosl,c
 28116  00A120  5151               	movf	(_RtccIsrCallback+1)& (0+255),w,b
 28117  00A122  6EFE               	movwf	tosh,c
 28118  00A124  6AFF               	clrf	tosu,c
 28119  00A126  50FA               	movf	pclath,w,c
 28120  00A128  0012               	return		;indir
 28121  00A12A                     __end_of_Rtcc_RtcIsr:
 28122                           	opt stack 0
 28123                           tosu	equ	0xFFF
 28124                           tosh	equ	0xFFE
 28125                           tosl	equ	0xFFD
 28126                           pclatu	equ	0xFFB
 28127                           pclath	equ	0xFFA
 28128                           tblptru	equ	0xFF8
 28129                           tblptrh	equ	0xFF7
 28130                           tblptrl	equ	0xFF6
 28131                           tablat	equ	0xFF5
 28132                           prodh	equ	0xFF4
 28133                           prodl	equ	0xFF3
 28134                           intcon	equ	0xFF2
 28135                           intcon2	equ	0xFF1
 28136                           intcon3	equ	0xFF0
 28137                           indf0	equ	0xFEF
 28138                           postinc0	equ	0xFEE
 28139                           plusw0	equ	0xFEB
 28140                           fsr0h	equ	0xFEA
 28141                           fsr0l	equ	0xFE9
 28142                           wreg	equ	0xFE8
 28143                           indf1	equ	0xFE7
 28144                           postinc1	equ	0xFE6
 28145                           postdec1	equ	0xFE5
 28146                           fsr1h	equ	0xFE2
 28147                           fsr1l	equ	0xFE1
 28148                           bsr	equ	0xFE0
 28149                           indf2	equ	0xFDF
 28150                           postinc2	equ	0xFDE
 28151                           postdec2	equ	0xFDD
 28152                           plusw2	equ	0xFDB
 28153                           fsr2h	equ	0xFDA
 28154                           fsr2l	equ	0xFD9
 28155                           status	equ	0xFD8
 28156                           
 28157 ;; *************** function _Alarm *****************
 28158 ;; Defined at:
 28159 ;;		line 80 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 28160 ;; Parameters:    Size  Location     Type
 28161 ;;		None
 28162 ;; Auto vars:     Size  Location     Type
 28163 ;;		None
 28164 ;; Return value:  Size  Location     Type
 28165 ;;                  1    wreg      void 
 28166 ;; Registers used:
 28167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28168 ;; Tracked objects:
 28169 ;;		On entry : 0/0
 28170 ;;		On exit  : 0/0
 28171 ;;		Unchanged: 0/0
 28172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28177 ;;Total ram usage:        1 bytes
 28178 ;; Hardware stack levels used:    1
 28179 ;; Hardware stack levels required when called:    1
 28180 ;; This function calls:
 28181 ;;		i2_GenerateEvt
 28182 ;; This function is called by:
 28183 ;;		_Rtcm_MainTask
 28184 ;;		_Rtcc_RtcIsr
 28185 ;; This function uses a non-reentrant model
 28186 ;;
 28187                           
 28188                           	psect	text147
 28189  00A21A                     __ptext147:
 28190                           	opt stack 0
 28191  00A21A                     _Alarm:
 28192                           	opt stack 8
 28193                           
 28194                           ;rtcm.c: 83: PORTDbits.RD4 = !PORTDbits.RD4;
 28195                           
 28196                           ;incstack = 0
 28197  00A21A  B883               	btfsc	3971,4,c	;volatile
 28198  00A21C  D003               	goto	i2u794_40
 28199  00A21E  6A04               	clrf	??_Alarm& (0+255),c
 28200  00A220  2A04               	incf	??_Alarm& (0+255),f,c
 28201  00A222  D001               	goto	i2u795_48
 28202  00A224                     i2u794_40:
 28203  00A224  6A04               	clrf	??_Alarm& (0+255),c
 28204  00A226                     i2u795_48:
 28205  00A226  3A04               	swapf	??_Alarm,f,c
 28206  00A228  5083               	movf	3971,w,c	;volatile
 28207  00A22A  1804               	xorwf	??_Alarm,w,c
 28208  00A22C  0BEF               	andlw	-17
 28209  00A22E  1804               	xorwf	??_Alarm,w,c
 28210  00A230  6E83               	movwf	3971,c	;volatile
 28211                           
 28212                           ;rtcm.c: 85: GenerateEvt(&AlarmEvent);
 28213  00A232  0EC3               	movlw	low _AlarmEvent
 28214  00A234  6E01               	movwf	i2GenerateEvt@Event,c
 28215  00A236  0E01               	movlw	high _AlarmEvent
 28216  00A238  6E02               	movwf	i2GenerateEvt@Event+1,c
 28217  00A23A  ECC9  F04F         	call	i2_GenerateEvt	;wreg free
 28218  00A23E  0012               	return		;funcret
 28219  00A240                     __end_of_Alarm:
 28220                           	opt stack 0
 28221                           tosu	equ	0xFFF
 28222                           tosh	equ	0xFFE
 28223                           tosl	equ	0xFFD
 28224                           pclatu	equ	0xFFB
 28225                           pclath	equ	0xFFA
 28226                           tblptru	equ	0xFF8
 28227                           tblptrh	equ	0xFF7
 28228                           tblptrl	equ	0xFF6
 28229                           tablat	equ	0xFF5
 28230                           prodh	equ	0xFF4
 28231                           prodl	equ	0xFF3
 28232                           intcon	equ	0xFF2
 28233                           intcon2	equ	0xFF1
 28234                           intcon3	equ	0xFF0
 28235                           indf0	equ	0xFEF
 28236                           postinc0	equ	0xFEE
 28237                           plusw0	equ	0xFEB
 28238                           fsr0h	equ	0xFEA
 28239                           fsr0l	equ	0xFE9
 28240                           wreg	equ	0xFE8
 28241                           indf1	equ	0xFE7
 28242                           postinc1	equ	0xFE6
 28243                           postdec1	equ	0xFE5
 28244                           fsr1h	equ	0xFE2
 28245                           fsr1l	equ	0xFE1
 28246                           bsr	equ	0xFE0
 28247                           indf2	equ	0xFDF
 28248                           postinc2	equ	0xFDE
 28249                           postdec2	equ	0xFDD
 28250                           plusw2	equ	0xFDB
 28251                           fsr2h	equ	0xFDA
 28252                           fsr2l	equ	0xFD9
 28253                           status	equ	0xFD8
 28254                           
 28255 ;; *************** function i2_GenerateEvt *****************
 28256 ;; Defined at:
 28257 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 28258 ;; Parameters:    Size  Location     Type
 28259 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 28260 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 28261 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 28262 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(253), 
 28263 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 28264 ;; Auto vars:     Size  Location     Type
 28265 ;;  GenerateEvt     1    2[COMRAM] enum E7721
 28266 ;; Return value:  Size  Location     Type
 28267 ;;                  1    wreg      enum E7693
 28268 ;; Registers used:
 28269 ;;		wreg, fsr2l, fsr2h, status,2
 28270 ;; Tracked objects:
 28271 ;;		On entry : 0/0
 28272 ;;		On exit  : 0/0
 28273 ;;		Unchanged: 0/0
 28274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28278 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28279 ;;Total ram usage:        3 bytes
 28280 ;; Hardware stack levels used:    1
 28281 ;; This function calls:
 28282 ;;		Nothing
 28283 ;; This function is called by:
 28284 ;;		_Uart_MdmWifiReadService
 28285 ;;		_Alarm
 28286 ;; This function uses a non-reentrant model
 28287 ;;
 28288                           
 28289                           	psect	text148
 28290  009F92                     __ptext148:
 28291                           	opt stack 0
 28292  009F92                     i2_GenerateEvt:
 28293                           	opt stack 8
 28294                           
 28295                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 28296                           
 28297                           ;incstack = 0
 28298  009F92  0E00               	movlw	0
 28299  009F94  6E03               	movwf	i2GenerateEvt@EventStatus,c
 28300                           
 28301                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 28302  009F96  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 28303  009F9A  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 28304  009F9E  0E02               	movlw	2
 28305  009FA0  6EDF               	movwf	indf2,c
 28306                           
 28307                           ;os_ser.c: 81: EventStatus = EventSent;
 28308  009FA2  0E02               	movlw	2
 28309  009FA4  6E03               	movwf	i2GenerateEvt@EventStatus,c
 28310  009FA6  0012               	return	
 28311  009FA8                     __end_ofi2_GenerateEvt:
 28312                           	opt stack 0
 28313                           tosu	equ	0xFFF
 28314                           tosh	equ	0xFFE
 28315                           tosl	equ	0xFFD
 28316                           pclatu	equ	0xFFB
 28317                           pclath	equ	0xFFA
 28318                           tblptru	equ	0xFF8
 28319                           tblptrh	equ	0xFF7
 28320                           tblptrl	equ	0xFF6
 28321                           tablat	equ	0xFF5
 28322                           prodh	equ	0xFF4
 28323                           prodl	equ	0xFF3
 28324                           intcon	equ	0xFF2
 28325                           intcon2	equ	0xFF1
 28326                           intcon3	equ	0xFF0
 28327                           indf0	equ	0xFEF
 28328                           postinc0	equ	0xFEE
 28329                           plusw0	equ	0xFEB
 28330                           fsr0h	equ	0xFEA
 28331                           fsr0l	equ	0xFE9
 28332                           wreg	equ	0xFE8
 28333                           indf1	equ	0xFE7
 28334                           postinc1	equ	0xFE6
 28335                           postdec1	equ	0xFE5
 28336                           fsr1h	equ	0xFE2
 28337                           fsr1l	equ	0xFE1
 28338                           bsr	equ	0xFE0
 28339                           indf2	equ	0xFDF
 28340                           postinc2	equ	0xFDE
 28341                           postdec2	equ	0xFDD
 28342                           plusw2	equ	0xFDB
 28343                           fsr2h	equ	0xFDA
 28344                           fsr2l	equ	0xFD9
 28345                           status	equ	0xFD8
 28346                           
 28347 ;; *************** function _Mcu_Int1Isr *****************
 28348 ;; Defined at:
 28349 ;;		line 155 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
 28350 ;; Parameters:    Size  Location     Type
 28351 ;;		None
 28352 ;; Auto vars:     Size  Location     Type
 28353 ;;		None
 28354 ;; Return value:  Size  Location     Type
 28355 ;;                  1    wreg      void 
 28356 ;; Registers used:
 28357 ;;		wreg, status,2, status,0
 28358 ;; Tracked objects:
 28359 ;;		On entry : 0/0
 28360 ;;		On exit  : 0/0
 28361 ;;		Unchanged: 0/0
 28362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28367 ;;Total ram usage:        0 bytes
 28368 ;; Hardware stack levels used:    1
 28369 ;; This function calls:
 28370 ;;		Nothing
 28371 ;; This function is called by:
 28372 ;;		_HighPriorityIsr
 28373 ;; This function uses a non-reentrant model
 28374 ;;
 28375                           
 28376                           	psect	text149
 28377  009E84                     __ptext149:
 28378                           	opt stack 0
 28379  009E84                     _Mcu_Int1Isr:
 28380                           	opt stack 10
 28381                           
 28382                           ;mcu_drv.c: 158: INTCON3bits.INT1IF = 0u;
 28383                           
 28384                           ;incstack = 0
 28385  009E84  90F0               	bcf	intcon3,0,c	;volatile
 28386  009E86  0012               	return	
 28387  009E88                     __end_of_Mcu_Int1Isr:
 28388                           	opt stack 0
 28389                           tosu	equ	0xFFF
 28390                           tosh	equ	0xFFE
 28391                           tosl	equ	0xFFD
 28392                           pclatu	equ	0xFFB
 28393                           pclath	equ	0xFFA
 28394                           tblptru	equ	0xFF8
 28395                           tblptrh	equ	0xFF7
 28396                           tblptrl	equ	0xFF6
 28397                           tablat	equ	0xFF5
 28398                           prodh	equ	0xFF4
 28399                           prodl	equ	0xFF3
 28400                           intcon	equ	0xFF2
 28401                           intcon2	equ	0xFF1
 28402                           intcon3	equ	0xFF0
 28403                           indf0	equ	0xFEF
 28404                           postinc0	equ	0xFEE
 28405                           plusw0	equ	0xFEB
 28406                           fsr0h	equ	0xFEA
 28407                           fsr0l	equ	0xFE9
 28408                           wreg	equ	0xFE8
 28409                           indf1	equ	0xFE7
 28410                           postinc1	equ	0xFE6
 28411                           postdec1	equ	0xFE5
 28412                           fsr1h	equ	0xFE2
 28413                           fsr1l	equ	0xFE1
 28414                           bsr	equ	0xFE0
 28415                           indf2	equ	0xFDF
 28416                           postinc2	equ	0xFDE
 28417                           postdec2	equ	0xFDD
 28418                           plusw2	equ	0xFDB
 28419                           fsr2h	equ	0xFDA
 28420                           fsr2l	equ	0xFD9
 28421                           status	equ	0xFD8
 28422                           
 28423 ;; *************** function _Mcu_Int0Isr *****************
 28424 ;; Defined at:
 28425 ;;		line 120 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
 28426 ;; Parameters:    Size  Location     Type
 28427 ;;		None
 28428 ;; Auto vars:     Size  Location     Type
 28429 ;;		None
 28430 ;; Return value:  Size  Location     Type
 28431 ;;                  1    wreg      void 
 28432 ;; Registers used:
 28433 ;;		wreg, status,2, status,0
 28434 ;; Tracked objects:
 28435 ;;		On entry : 0/0
 28436 ;;		On exit  : 0/0
 28437 ;;		Unchanged: 0/0
 28438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28443 ;;Total ram usage:        0 bytes
 28444 ;; Hardware stack levels used:    1
 28445 ;; This function calls:
 28446 ;;		Nothing
 28447 ;; This function is called by:
 28448 ;;		_HighPriorityIsr
 28449 ;; This function uses a non-reentrant model
 28450 ;;
 28451                           
 28452                           	psect	text150
 28453  009E80                     __ptext150:
 28454                           	opt stack 0
 28455  009E80                     _Mcu_Int0Isr:
 28456                           	opt stack 10
 28457                           
 28458                           ;mcu_drv.c: 123: INTCONbits.INT0IF = 0u;
 28459                           
 28460                           ;incstack = 0
 28461  009E80  92F2               	bcf	intcon,1,c	;volatile
 28462  009E82  0012               	return	
 28463  009E84                     __end_of_Mcu_Int0Isr:
 28464                           	opt stack 0
 28465                           tosu	equ	0xFFF
 28466                           tosh	equ	0xFFE
 28467                           tosl	equ	0xFFD
 28468                           pclatu	equ	0xFFB
 28469                           pclath	equ	0xFFA
 28470                           tblptru	equ	0xFF8
 28471                           tblptrh	equ	0xFF7
 28472                           tblptrl	equ	0xFF6
 28473                           tablat	equ	0xFF5
 28474                           prodh	equ	0xFF4
 28475                           prodl	equ	0xFF3
 28476                           intcon	equ	0xFF2
 28477                           intcon2	equ	0xFF1
 28478                           intcon3	equ	0xFF0
 28479                           indf0	equ	0xFEF
 28480                           postinc0	equ	0xFEE
 28481                           plusw0	equ	0xFEB
 28482                           fsr0h	equ	0xFEA
 28483                           fsr0l	equ	0xFE9
 28484                           wreg	equ	0xFE8
 28485                           indf1	equ	0xFE7
 28486                           postinc1	equ	0xFE6
 28487                           postdec1	equ	0xFE5
 28488                           fsr1h	equ	0xFE2
 28489                           fsr1l	equ	0xFE1
 28490                           bsr	equ	0xFE0
 28491                           indf2	equ	0xFDF
 28492                           postinc2	equ	0xFDE
 28493                           postdec2	equ	0xFDD
 28494                           plusw2	equ	0xFDB
 28495                           fsr2h	equ	0xFDA
 28496                           fsr2l	equ	0xFD9
 28497                           status	equ	0xFD8
 28498                           tosu	equ	0xFFF
 28499                           tosh	equ	0xFFE
 28500                           tosl	equ	0xFFD
 28501                           pclatu	equ	0xFFB
 28502                           pclath	equ	0xFFA
 28503                           tblptru	equ	0xFF8
 28504                           tblptrh	equ	0xFF7
 28505                           tblptrl	equ	0xFF6
 28506                           tablat	equ	0xFF5
 28507                           prodh	equ	0xFF4
 28508                           prodl	equ	0xFF3
 28509                           intcon	equ	0xFF2
 28510                           intcon2	equ	0xFF1
 28511                           intcon3	equ	0xFF0
 28512                           indf0	equ	0xFEF
 28513                           postinc0	equ	0xFEE
 28514                           plusw0	equ	0xFEB
 28515                           fsr0h	equ	0xFEA
 28516                           fsr0l	equ	0xFE9
 28517                           wreg	equ	0xFE8
 28518                           indf1	equ	0xFE7
 28519                           postinc1	equ	0xFE6
 28520                           postdec1	equ	0xFE5
 28521                           fsr1h	equ	0xFE2
 28522                           fsr1l	equ	0xFE1
 28523                           bsr	equ	0xFE0
 28524                           indf2	equ	0xFDF
 28525                           postinc2	equ	0xFDE
 28526                           postdec2	equ	0xFDD
 28527                           plusw2	equ	0xFDB
 28528                           fsr2h	equ	0xFDA
 28529                           fsr2l	equ	0xFD9
 28530                           status	equ	0xFD8
 28531                           
 28532                           	psect	text151
 28533  000000                     __ptext151:
 28534                           	opt stack 0
 28535                           tosu	equ	0xFFF
 28536                           tosh	equ	0xFFE
 28537                           tosl	equ	0xFFD
 28538                           pclatu	equ	0xFFB
 28539                           pclath	equ	0xFFA
 28540                           tblptru	equ	0xFF8
 28541                           tblptrh	equ	0xFF7
 28542                           tblptrl	equ	0xFF6
 28543                           tablat	equ	0xFF5
 28544                           prodh	equ	0xFF4
 28545                           prodl	equ	0xFF3
 28546                           intcon	equ	0xFF2
 28547                           intcon2	equ	0xFF1
 28548                           intcon3	equ	0xFF0
 28549                           indf0	equ	0xFEF
 28550                           postinc0	equ	0xFEE
 28551                           plusw0	equ	0xFEB
 28552                           fsr0h	equ	0xFEA
 28553                           fsr0l	equ	0xFE9
 28554                           wreg	equ	0xFE8
 28555                           indf1	equ	0xFE7
 28556                           postinc1	equ	0xFE6
 28557                           postdec1	equ	0xFE5
 28558                           fsr1h	equ	0xFE2
 28559                           fsr1l	equ	0xFE1
 28560                           bsr	equ	0xFE0
 28561                           indf2	equ	0xFDF
 28562                           postinc2	equ	0xFDE
 28563                           postdec2	equ	0xFDD
 28564                           plusw2	equ	0xFDB
 28565                           fsr2h	equ	0xFDA
 28566                           fsr2l	equ	0xFD9
 28567                           status	equ	0xFD8
 28568                           
 28569                           	psect	rparam
 28570  0000                     tosu	equ	0xFFF
 28571                           tosh	equ	0xFFE
 28572                           tosl	equ	0xFFD
 28573                           pclatu	equ	0xFFB
 28574                           pclath	equ	0xFFA
 28575                           tblptru	equ	0xFF8
 28576                           tblptrh	equ	0xFF7
 28577                           tblptrl	equ	0xFF6
 28578                           tablat	equ	0xFF5
 28579                           prodh	equ	0xFF4
 28580                           prodl	equ	0xFF3
 28581                           intcon	equ	0xFF2
 28582                           intcon2	equ	0xFF1
 28583                           intcon3	equ	0xFF0
 28584                           indf0	equ	0xFEF
 28585                           postinc0	equ	0xFEE
 28586                           plusw0	equ	0xFEB
 28587                           fsr0h	equ	0xFEA
 28588                           fsr0l	equ	0xFE9
 28589                           wreg	equ	0xFE8
 28590                           indf1	equ	0xFE7
 28591                           postinc1	equ	0xFE6
 28592                           postdec1	equ	0xFE5
 28593                           fsr1h	equ	0xFE2
 28594                           fsr1l	equ	0xFE1
 28595                           bsr	equ	0xFE0
 28596                           indf2	equ	0xFDF
 28597                           postinc2	equ	0xFDE
 28598                           postdec2	equ	0xFDD
 28599                           plusw2	equ	0xFDB
 28600                           fsr2h	equ	0xFDA
 28601                           fsr2l	equ	0xFD9
 28602                           status	equ	0xFD8
 28603                           
 28604                           	psect	temp
 28605  00005D                     btemp:
 28606                           	opt stack 0
 28607  00005D                     	ds	1
 28608  0000                     int$flags	set	btemp
 28609  0000                     wtemp6	set	btemp+1
 28610                           tosu	equ	0xFFF
 28611                           tosh	equ	0xFFE
 28612                           tosl	equ	0xFFD
 28613                           pclatu	equ	0xFFB
 28614                           pclath	equ	0xFFA
 28615                           tblptru	equ	0xFF8
 28616                           tblptrh	equ	0xFF7
 28617                           tblptrl	equ	0xFF6
 28618                           tablat	equ	0xFF5
 28619                           prodh	equ	0xFF4
 28620                           prodl	equ	0xFF3
 28621                           intcon	equ	0xFF2
 28622                           intcon2	equ	0xFF1
 28623                           intcon3	equ	0xFF0
 28624                           indf0	equ	0xFEF
 28625                           postinc0	equ	0xFEE
 28626                           plusw0	equ	0xFEB
 28627                           fsr0h	equ	0xFEA
 28628                           fsr0l	equ	0xFE9
 28629                           wreg	equ	0xFE8
 28630                           indf1	equ	0xFE7
 28631                           postinc1	equ	0xFE6
 28632                           postdec1	equ	0xFE5
 28633                           fsr1h	equ	0xFE2
 28634                           fsr1l	equ	0xFE1
 28635                           bsr	equ	0xFE0
 28636                           indf2	equ	0xFDF
 28637                           postinc2	equ	0xFDE
 28638                           postdec2	equ	0xFDD
 28639                           plusw2	equ	0xFDB
 28640                           fsr2h	equ	0xFDA
 28641                           fsr2l	equ	0xFD9
 28642                           status	equ	0xFD8


Data Sizes:
    Strings     237
    Constant    563
    Data        130
    BSS         2674
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      92
    BANK0           160    144     160
    BANK1           256      0     256
    BANK2           256      0     211
    BANK3           256      0     250
    BANK4           192      0     164
    BANK5           256      0     220
    BANK6           256      0     200
    BANK7           256      0     253
    BANK8           256      0     200
    BANK9           256      0     103
    BANK10          256      0     200
    BANK11          256      0     250
    BANK12          256      0     250
    BANK13          256      0     200
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), STR_1(CODE[6]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), STR_1(CODE[6]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_62(CODE[21]), STR_58(CODE[20]), STR_53(CODE[14]), STR_49(CODE[10]), 
		 -> STR_43(CODE[10]), STR_41(CODE[13]), STR_40(CODE[12]), STR_36(CODE[11]), 
		 -> STR_32(CODE[12]), STR_26(CODE[10]), STR_21(CODE[11]), BufferLocal(BANK6[100]), 
		 -> STR_15(CODE[12]), STR_3(CODE[13]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK2[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK2[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    strcat@from	PTR const unsigned char  size(3) Largest target is 65527
		 -> STR_65(CODE[3]), STR_64(CODE[2]), STR_63(CODE[2]), Term_MainSm@FwkBuildYearStr(BANK0[4]), 
		 -> Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), STR_61(CODE[3]), STR_60(CODE[2]), 
		 -> STR_59(CODE[2]), Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), 
		 -> STR_57(CODE[3]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), STR_56(CODE[2]), STR_55(CODE[2]), 
		 -> STR_54(CODE[2]), STR_52(CODE[3]), STR_51(CODE[2]), STR_50(CODE[2]), 
		 -> STR_48(CODE[3]), MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), STR_47(CODE[2]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), 
		 -> STR_46(CODE[3]), STR_45(CODE[4]), STR_44(CODE[2]), STR_42(CODE[3]), 
		 -> MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), STR_39(CODE[3]), STR_38(CODE[2]), STR_37(CODE[2]), 
		 -> STR_35(CODE[3]), STR_34(CODE[2]), STR_33(CODE[2]), STR_30(CODE[3]), 
		 -> STR_29(CODE[2]), STR_28(CODE[4]), STR_27(CODE[2]), STR_25(CODE[3]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), SendDataSm@LenAscii(BANK0[4]), STR_16(CODE[2]), SendDataSm@IdAscii(BANK0[1]), 
		 -> ROM(CODE[65527]), STR_13(CODE[3]), STR_12(CODE[2]), StartConnectionSm@PortAscii(BANK0[4]), 
		 -> STR_11(CODE[2]), AddressLocal(BANK2[25]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), StartConnectionSm@IdAscii(BANK0[1]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 100
		 -> Term_MainSm@FwkBuildYearStr(BANK0[4]), Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK4[100]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), 
		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), SendDataSm@LenAscii(BANK0[4]), 
		 -> SendDataSm@IdAscii(BANK0[1]), StartConnectionSm@PortAscii(BANK0[4]), StartConnectionSm@IdAscii(BANK0[1]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK1[4]), Terminal@Len(BANK1[4]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 250
		 -> WifiTerminal@UartBuffer(BANK8[200]), AddressLocal(BANK2[25]), MdmWifi_UartRxBuffer(BANK11[250]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 253
		 -> WifiRxPacket(BANK7[253]), MdmWifi_UartRxBuffer(BANK11[250]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 253
		 -> WifiTerminal@UartBuffer(BANK8[200]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), WifiRxPacket(BANK7[253]), 

    Rtcm_SetAlarmAction@Action	PTR FTN()void  size(2) Largest target is 1
		 -> Alarm(), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 236
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK0[50]), MsgFormat(CODE[236]), Welcome(CODE[137]), 
		 -> Terminal@TermRxBuffer(BANK2[50]), Terminal@Payload(BANK4[100]), Terminal@UsbRxBuffer(BANK3[200]), WifiTerminal@UartBuffer(BANK8[200]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK3[200]), WifiTerminal@UsbBuffer(BANK10[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4289$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4289$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4289$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4289$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK4[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S2743$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2733$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2733$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2709$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2709$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2709$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2709$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 100
		 -> Term_MainSm@FwkBuildYearStr(BANK0[4]), Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK4[100]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), 
		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), SendDataSm@LenAscii(BANK0[4]), 
		 -> SendDataSm@IdAscii(BANK0[1]), StartConnectionSm@PortAscii(BANK0[4]), StartConnectionSm@IdAscii(BANK0[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK2[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    MdmWifi_SendWifiMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 103
		 -> MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), MdmWifiCmd_CloseConnection@Data(COMRAM[20]), 
		 -> MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), STR_31(CODE[11]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), STR_20(CODE[9]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    MdmWifi_ReceiveWifiMsg@DataLenght	PTR unsigned char  size(2) Largest target is 1
		 -> SendDataSm@DataIndex(BANK0[1]), StartConnectionSm@DataIndex(BANK0[1]), 

    MdmWifi_ReceiveWifiMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 103
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 10
		 -> Term_MainSm@TermDelay(BANK1[10]), SendDataSm@SwTimer(BANK1[10]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 10
		 -> Term_MainSm@TermDelay(BANK1[10]), Led_MainTask@LedTimer1(BANK1[10]), SendDataSm@SwTimer(BANK1[10]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 253
		 -> I2cRxPacket(BANK1[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(COMRAM[1]), WifiReceiveData(COMRAM[1]), 
		 -> WifiSendData(COMRAM[1]), StartConnection(COMRAM[1]), WifiReceiveNetData(COMRAM[1]), NewWifiPacketParser(COMRAM[1]), 
		 -> NewWifiPacket(COMRAM[1]), WifiRxPacket(BANK7[253]), StartWifiModem(COMRAM[1]), NewWifiUartData(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 253
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK1[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(COMRAM[1]), 
		 -> WifiReceiveData(COMRAM[1]), WifiSendData(COMRAM[1]), StartConnection(COMRAM[1]), WifiReceiveNetData(COMRAM[1]), 
		 -> WifiGenericError(BANK1[1]), NewWifiPacketParser(COMRAM[1]), NewWifiPacket(COMRAM[1]), WifiRxPacket(BANK7[253]), 
		 -> StartWifiModem(COMRAM[1]), NewWifiUartData(COMRAM[1]), 

    S1896_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), UsbDevice_MainTask(), 
		 -> MdmWifiHttp_MainTask(), MdmWifiCmd_MainTask(), MdmWifi_MainTask(), I2cSlv_MainTask(), 
		 -> MdmWifi_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), UsbDevice_MainTask(), 
		 -> MdmWifiHttp_MainTask(), MdmWifiCmd_MainTask(), MdmWifi_MainTask(), I2cSlv_MainTask(), 
		 -> MdmWifi_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S1861_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 103
		 -> MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), MdmWifiCmd_CloseConnection@Data(COMRAM[20]), 
		 -> MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), STR_31(CODE[11]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), STR_20(CODE[9]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK1[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK1[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    Rtcc_RegisterRtcIsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Alarm(), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Alarm(), Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK1[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK1[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK1[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK1[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK1[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmWifiReadService
    _Uart_MdmWifiReadService->i2_GenerateEvt
    _Rtcc_RtcIsr->_Alarm
    _Alarm->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Terminal->_strtol
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_SetAlarmAction->_Rtcc_RegisterRtcIsrCallback
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MdmWifi_MainTask->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _MdmWifiGetUartData->_StringCopy
    _MdmWifiEvtParser->_strstr
    _MdmWifi_StartWifiModemSm->_ReceiveEvt
    _MdmWifiCmd_MainTask->_SendDataSm
    _StartConnectionSm->_strstr
    _SendDataSm->_OsTmr_GetTimerStatus
    _utoa->___lwdiv
    _strstr->_strncmp
    _strncmp->_strlen
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _MdmWifi_SendWifiMsg->_Uart_WriteString
    _Uart_WriteString->_UartTxBufferStatus
    _MdmWifi_ReceiveWifiMsg->_StringCopy
    _ReceiveDataSm->_ReceiveEvt
    _Led_MainTask->_OsTmr_StartTimer
    _OsTmr_StartTimer->_GetOsTickCounter
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    None.

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  402041
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    3901
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    3523
                                             39 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3371
                                             35 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2109
                                             25 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  398140
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  199136
                                            139 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                _MdmWifiCmd_MainTask *
               _MdmWifiHttp_MainTask *
                  _MdmWifi_DrvMainFn *
                   _MdmWifi_MainTask *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  199004
                                            139 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                _MdmWifiCmd_MainTask *
               _MdmWifiHttp_MainTask *
                  _MdmWifi_DrvMainFn *
                   _MdmWifi_MainTask *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   44242
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   40538
                                             27 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    1900
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   23316
                                             26 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   22677
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   17493
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    6880
                                             20 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    5475
                                             20 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5092
                                             12 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2400
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                              8 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    1804
                                              7 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   53401
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         74    74      0   53401
                                             32 BANK0     74    74      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    1698
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                             4     4      0   25133
                                             28 BANK0      4     4      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strtol
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2033
                                             12 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0      90
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     158
                                              3 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    1824
                                              6 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    5592
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2090
                                              7 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    1667
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    8507
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    1844
                                              3 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    1655
                                              3 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    1250
                                              4 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7556
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                _Rtcm_SetAlarmAction
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             12 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                              8 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetAlarmAction                                  2     0      2     222
                                              2 BANK0      2     0      2
        _Rtcc_RegisterRtcIsrCallback
 ---------------------------------------------------------------------------------
 (5) _Rtcc_RegisterRtcIsrCallback                          2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                              4 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                              1 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MdmWifi_MainTask                                     1     1      0   11939
                   _MdmWifiEvtParser
                 _MdmWifiGetUartData
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    2942
                                             32 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2193
                                             25 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     702
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MdmWifiGetUartData                                   0     0      0    4545
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _MdmWifiEvtParser                                     0     0      0    4452
                        _GenerateEvt
                         _ReceiveEvt
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _MdmWifi_DrvMainFn                                    1     1      0    2539
           _MdmWifi_StartWifiModemSm
 ---------------------------------------------------------------------------------
 (4) _MdmWifi_StartWifiModemSm                             0     0      0    2539
                        _GenerateEvt
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _MdmWifiHttp_MainTask                                 1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmWifiCmd_MainTask                                  1     1      0   65783
                      _ReceiveDataSm
                         _SendDataSm
                  _StartConnectionSm
 ---------------------------------------------------------------------------------
 (4) _StartConnectionSm                                  106   106      0   31401
                                             19 BANK0    106   106      0
                        _ClearBuffer
             _MdmWifi_ReceiveWifiMsg
                _MdmWifi_SendWifiMsg
                         _ReceiveEvt
                             _strcat
                             _strcpy
                             _strstr
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4     803
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _SendDataSm                                         109   109      0   31843
                                             30 BANK0    109   109      0
             _MdmWifi_ReceiveWifiMsg
                _MdmWifi_SendWifiMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                             _strcat
                             _strcpy
                             _strstr
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    5162
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _strstr                                               4     0      4    1913
                                             15 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              9     3      6     401
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     357
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strchr                                               5     1      4     266
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4    3279
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _strcat                                               7     2      5   13804
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (5) _OsTmr_GetTimerStatus                                 6     4      2     756
                                             24 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (6) _GetElapsedTime                                      20    16      4     424
                                              4 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (5) _MdmWifi_SendWifiMsg                                  2     0      2    1783
                                              6 BANK0      2     0      2
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2     604
                                              3 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _UartWriteByte                                        2     1      1     355
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _UartTxBufferStatus                                   3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _MdmWifi_ReceiveWifiMsg                               5     1      4    2853
                                              8 BANK0      5     1      4
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                           8     2      6    1203
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) _ReceiveDataSm                                        0     0      0    2539
                        _GenerateEvt
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         1     1      0     644
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (5) _OsTmr_StartTimer                                     6     0      6     644
                                              4 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (6) _GetOsTickCounter                                     4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   12809
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    8254
                                              6 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    7855
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1375
                                             37 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1198
                                             25 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     976
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    3180
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    1226
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     309
                                              1 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    1645
                                              3 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    1313
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0     944
                                             40 COMRAM    21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0     944
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0     944
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0     944
                                             30 COMRAM    10    10      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             25 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             22 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (22) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     275
                                              4 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     193
            _Uart_MdmWifiReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmWifiReadService                             2     1      1     193
                                              3 COMRAM     1     0      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0      82
                   Absolute function *
                              _Alarm *
 ---------------------------------------------------------------------------------
 (22) _Alarm                                               1     1      0      82
                                              3 COMRAM     1     1      0
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2      82
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (22) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _OsTmr_StartTimer
           _GetOsTickCounter
       _MdmWifiCmd_MainTask *
         _ReceiveDataSm
           _GenerateEvt
           _ReceiveEvt
         _SendDataSm
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _StartConnectionSm
           _ClearBuffer
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _MdmWifiHttp_MainTask *
       _MdmWifi_DrvMainFn *
         _MdmWifi_StartWifiModemSm
           _GenerateEvt
           _ReceiveEvt
       _MdmWifi_MainTask *
         _MdmWifiEvtParser
           _GenerateEvt
           _ReceiveEvt
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
         _MdmWifiGetUartData
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetAlarmAction
           _Rtcc_RegisterRtcIsrCallback
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
           _memset
           _putUSBUSART
             _strlen (ARG)
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _OsTmr_StartTimer
           _GetOsTickCounter
       _MdmWifiCmd_MainTask *
         _ReceiveDataSm
           _GenerateEvt
           _ReceiveEvt
         _SendDataSm
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _StartConnectionSm
           _ClearBuffer
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _MdmWifiHttp_MainTask *
       _MdmWifi_DrvMainFn *
         _MdmWifi_StartWifiModemSm
           _GenerateEvt
           _ReceiveEvt
       _MdmWifi_MainTask *
         _MdmWifiEvtParser
           _GenerateEvt
           _ReceiveEvt
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
         _MdmWifiGetUartData
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetAlarmAction
           _Rtcc_RegisterRtcIsrCallback
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
           _memset
           _putUSBUSART
             _strlen (ARG)
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
     Absolute function(Fake) *
     _Alarm *
       i2_GenerateEvt
   _Uart_Uart1RxIsr
     _Uart_MdmWifiReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0       0      36        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0      C8      32       78.1%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0      FA      30       97.7%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0      FA      28       97.7%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      67      24       40.2%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      FD      20       98.8%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      DC      16       85.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      D3      10       82.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      A4      14       85.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      5C       1       97.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     BC1       8        0.0%
DATA                 0      0     BC1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Nov 12 20:52:27 2018

                     SendDataSm@DataIndex 00E9                                _USB_SD_Ptr ECDD  
                         ??_UpdateSchFlag 0017                        _Mcu_StartSystemPll A08A  
                            ___awdiv@sign 0065                    I2c_ReadData@ReadPacket 0063  
                                      bsr 000FE0                             _USBDeviceInit CF28  
                     ___wmul@multiplicand 0062            MdmWifi_ReceiveWifiMsg@RxBuffer 0068  
                        i1___wmul@product 001B                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 0087  
                     _MdmWifiCmd_MainTask A1D4                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0066      USER_USB_CALLBACK_EVENT_HANDLER@event 006C  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 006E                    I2c_ReadData@ReadStatus 0170  
                                     l202 D256                                       l203 D25E  
                                     l300 B5AE                                       l205 D2A8  
                                     l301 B52E                                       l206 D2D2  
                                     l302 B534                                       l303 B554  
                                     l231 A096                                       l208 D2DC  
                                     l160 D482                                       l304 B560  
                                     l209 D2FE                                       l161 D34A  
                                     l305 B56C                                       l162 D4C2  
                                     l170 D41A                                       l306 B578  
                                     l330 DBB8                                       l402 A95C  
                                     l410 C722                                       l171 D434  
                                     l163 D358                                       l323 DC48  
                                     l331 DC00                                       l403 A928  
                                     l411 C70E                                       l164 D39A  
                                     l324 DA50                                       l420 A0F6  
                                     l412 C6B6                                       l173 D438  
                                     l421 A0EE                                       l405 A942  
                                     l413 C71C                                       l174 D440  
                                     l166 D3A8                                       l326 DA98  
             __end_of_USBStdGetDscHandler CDE4                                       l414 C6E2  
                                     l175 D458                                       l167 D3D2  
                                     l511 CBF8                                       l327 DAE0  
                                     l423 A0F2                                       l192 D308  
                                     l328 DB28                                       l193 D1D4  
                                     l169 D3E6                                       l521 A0BA  
                                     l513 CC20                                       l329 DB70  
                                     l194 D342                                       l178 D464  
                                     l195 D1E2                                       l179 D470  
                                     l515 CC98                                       l507 CBAC  
                                     l196 D226                                       l428 C0B4  
                                     l533 A9E2                                       l509 CBD0  
                                     l429 C0D0                                       l198 D234  
                                     l542 AA06                                       l534 A9DC  
                                     l550 E35E                                       l382 B760  
                                     l199 D24A                                       l392 B732  
                                     l384 B6F2                                       l721 A076  
                                     l393 B722                                       l385 B6E2  
                                     l570 AE52                                       l650 B1FE  
                                     l298 B580                                       l706 CB6E  
                                     l394 B746                                       l386 B708  
                                     l299 B526                                       l395 B726  
                                     l387 B6E6                                       l572 AE82  
                                     l652 B220                                       l396 B72C  
                                     l388 B6EC                                       l654 B23E  
                                     l647 B24A                                       l648 B1E4  
                                     l761 A334                                       l771 BFF8  
                                     _BDT 000400                                       l782 B4FE  
                                     l864 C2AE                                       l785 B510  
                                     l865 C1F0                                       l892 A918  
                                     l980 DFEC                                       l868 C20C  
                                     l884 A480                                       l981 E00C  
                                     l877 AFD2                                       l869 C228  
                                     l885 A460                                       l974 E1CA  
                                     l982 E16E                                       l975 DF0E  
                                     l887 A476                                       l985 E1BE  
                                     l978 DF2A                                       l995 DA2C  
                                     l979 DFA2                                       l996 D822  
                                     l999 D83E                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                 __end_of_HighPriorityIsr BB3C                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend A42C                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0074                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0063                            _USBDeviceTasks D4C8  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00FD  
             Rtcc_AlarmConfig@AlarmConfig 0060              __end_of_I2cSlv_ReceiveI2cMsg A6EE  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 0060                            ??_getsUSBUSART 006A  
                USBEnableEndpoint@options 0068                   ?_MdmWifi_ReceiveWifiMsg 0068  
                   ??_Rtcm_SetAlarmAction 0064             ??_Tmr_RegisterTmr2IsrCallback 0062  
                                    l1000 D8B6                                      l1001 D966  
                                    l1002 D9AA                                      l1013 A7EE  
                                    l1014 A7BC                                      l1006 D9C6  
                                    l1022 A1E4                                      l1017 A7D8  
                                    l1025 A1D6                                      l2100 E54E  
                                    l2102 E56E                                      l1152 BBC8  
                                    l2104 E6EA                                      l1161 BBA0  
                                    l1153 BB3E                                      l2113 A022  
                                    l1154 BB5E                                      l2130 AC1E  
                                    l2042 E94A                                      l2106 E866  
                                    l1410 B998                                      l1163 BBBC  
                                    l2131 AC32                                      l2043 E9DA  
                                    l2051 E9C8                                      l1164 BBC2  
                                    l1156 BB7E                                      l2108 E886  
                                    l1404 C16A                                      l1412 B9B4  
                                    l2116 A01C                                      l2301 B27E  
                                    l2061 EAF0                                      l2045 E9A6  
                                    l1421 C7A4                                      l1341 CF72  
                                    l2310 B2E4                                      l2302 B28E  
                                    l1182 A61E                                      l2038 ECC2  
                                    l2062 EAB4                                      l2046 E994  
                                    l1422 C74C                                      l1174 AAF4  
                                    l1159 BB84                                      l2071 EBB6  
                                    l2039 E8DA                                      l1511 B6CA  
                                    l1343 CF9A                                      l1175 AAB4  
                                    l2304 B2AC                                      l1192 A164  
                                    l1440 C3EC                                      l1416 B7D8  
                                    l1512 B6C4                                      l1360 D53E  
                                    l1352 D4F4                                      l2305 B2A4  
                                    l2321 B0C2                                      l2057 EB0E  
                                    l1345 CFD6                                      l1505 A566  
                                    l1361 D54A                                      l1353 D4EA  
                                    l1177 AAEE                                      l2322 B0CC  
                                    l2314 B088                                      l2074 EC0A  
                                    l2058 EAA6                                      l1530 BE3E  
                                    l1450 C97E                                      l1522 AD2E  
                                    l1426 C7CE                                      l1506 A564  
                                    l1370 D5DC                                      l1354 D4E8  
                                    l2323 B0DA                                      l2315 B094  
                                    l1187 A6E8                                      l2075 EBD0  
                                    l2059 EA44                                      l2091 E4FE  
                                    l1443 C468                                      l1435 C3B8  
                                    l1531 BE44                                      l1451 C958  
                                    l1363 D572                                      l2308 B2CC  
                                    l1700 CE70                                      l1444 C42E  
                                    l1532 BEC0                                      l1524 AD7A  
                                    l1380 A746                                      l2309 B2D6  
                                    l2317 B0AA                                      l2069 EB76  
                                    l2093 E51A                                      l1437 C3C2  
                                    l1533 BE84                                      l1453 C9F6  
                                    l1381 A756                                      l1373 D602  
                                    l1365 D586                                      l1357 D510  
                                    l2318 B0A2                                      l2078 EC74  
                                    l1454 C9DC                                      l1470 CDCC  
                                    l1462 C5A2                                      l1550 C496  
                                    l1366 D592                                      l1358 D520  
                                    l2503 B18E                                      l2079 ECBA  
                                    l1703 CEEA                                      l1439 C426  
                                    l1535 BEA6                                      l1471 CCBC  
                                    l1551 C4AA                                      l1375 D622  
                                    l1367 D5BC                                      l1359 D528  
                                    l2504 B182                                      l2088 E88C  
                                    l1704 CEB2                                      l1640 BC12  
                                    l1464 C616                                      l1552 C4B0  
                                    l1368 D5C8                                      l1385 BD68  
                                    l2089 E4D8                                      l1473 CCD0  
                                    l1545 C510                                      l1377 D640  
                                    l2282 C2C8                                      l2098 E52E  
                                    l1642 BC2A                                      l1562 DC9C  
                                    l1474 CD5E                                      l1490 BCE0  
                                    l1554 C4B6                                      l1546 C480  
                                    l1730 A1F8                                      l2507 B1C2  
                                    l2291 C38E                                      l2283 C2C2  
                                    l1387 BD92                                      l1707 CF04  
                                    l1643 BC38                                      l1571 DE08  
                                    l1563 DCA2                                      l1483 BD22  
                                    l1555 C4D4                                      l2508 B1D0  
                                    l1708 CF08                                      l1644 BC56  
                                    l1476 CD66                                      l1484 BCA8  
                                    l1556 C4F0                                      l1548 C48A  
                                    l1732 A1FE                USBConfigureEndpoint@handle 0066  
                                    l2285 C30A                                      l1389 BDEE  
                                    l1661 B644                                      l1645 BC6E  
                                    l1581 DE8E                                      l1573 DDD0  
                                    l1565 DD14                                      l1477 CDBC  
                                    l1549 C490                                      l1574 DDEE  
                                    l2463 A188                                      l1639 BC78  
                                    l1743 ACC4                                      l1583 DEE4  
                                    l1567 DD5C                                      l1479 CDC4  
                                    l1487 BD38                                      l2712 AD92  
                                    l2560 AA4A                                      l2288 C35A  
                                    l1664 B5F2                                      l1576 DE50  
                                    l1568 DD5E                                      l1488 BCBA  
                                    l2713 AD8C                                      l2721 A814  
                                    l2561 AA54                                      l2473 B9EE  
                                    l1921 A4BA                                      l2289 C31C  
                                    l1665 B61E                                      l1737 ACD0  
                                    l1745 ACCA                                      l1577 DE5C  
                                    l1569 DD7A                                      l1489 BCC0  
                                    l1497 A7B6                                      l1729 A208  
                                    l2722 A80A                                      l2570 A696  
                                    l1922 A4A6                                      l1666 B5F8  
                                    l1578 DED8                                      l1498 A7B4  
                                    l1915 A658                                      l2715 ADB4  
                                    l2571 A6A0                                      l2475 BA2A  
                                    l1691 CE08                                      l1916 A638  
                                    l2716 ADA2                                      l2740 B2F0  
                                    l2556 AA2A                                      l2476 BA6C  
                                    l2580 A87A                                      l2741 B32C  
                                    l2557 AA22                                      l2469 A714  
                                    l2813 A2B0                                      l1693 CE3C  
                                    l2581 A858                                      l2830 B3E0  
                                    l2566 A67E                                      l2823 A51C  
                                    l2727 AB16                                      l2567 A676  
                                    l2728 AB10                                      l2808 A390  
                                    l2760 D6A2                                      l1696 CE4E  
                                    l1856 B894                                      l1697 CE52  
                                    l1689 CDFA                                      l1857 B80C  
                                    l2818 A1CC                                      l2762 D6F6  
                                    l2586 A3B6                                      l2739 B356  
                                    l2771 D730                                      l2587 A3A4  
                                    l1699 CEA8                                      l1795 A59E  
                                    l1859 B880                                      l2828 B3E8  
                                    l1796 A574                                      l2829 B37A  
                                    l2782 A016                                      l2774 D742  
                                    l2758 D68A                                      l2775 D7AE  
                                    l2768 D706                                      l2777 D7D4  
                                    l2769 D716                                      l2778 D80E  
                                    l7236 A858                                      l6622 C59A  
                                    l6528 C3C2                                      l8304 C722  
                                    l6490 A3A4                                      l9106 CA50  
                                    l7380 C356                                      l9066 A096  
                                    l9094 B0EE                                      l7592 B37A  
                                    l7780 B53A                                      l7950 CF6A  
                                    l9706 ACEA                                      l9708 AD1A  
                                    l7978 CFCE                                      l8698 D5D4  
                                    STR_1 EFD5                                      STR_2 EFDB  
                                    STR_3 EF54                                      STR_4 EFED  
                                    STR_5 EFE2                                      STR_6 EFE8  
                                    STR_7 EFE4                                      STR_8 EFE2  
                                    STR_9 EFED                                      u4410 C414  
                                    u5300 AE90                                      u5220 A2AC  
                                    u5310 AEB0                                      u4430 C456  
                                    u5240 A380                                      u4520 C5CE  
                                    u4417 C40A                                      u6140 CBF4  
                                    u5317 AEA6                                      u4437 C44C  
                                    u6240 B36E                                      u5600 D692  
                                    u4560 CD28                                      u6320 CF8E  
                                    u5290 AE72                                      u4810 DE72  
                                    u4570 CD58                                      u6260 A83C  
                                    u5285 9F8C                                      u6085 9FCE  
                                    u5286 9F8E                                      u6086 9FD0  
                                    u5630 D6CC                                      u4590 CDB0  
                                    u6350 D032                                      u4567 CD1E  
                                    u4840 AA2E                                      u5480 B5CC  
                                    u5297 AE68                                      u4577 CD4E  
                                    u6290 ADDC                                      u5650 D6DC  
                                    u6267 A832                                      u4940 A9D8  
                                    u5740 AB36                                      u4597 CDA6  
                                    u4870 A682                     ??_USBCtrlTrfTxService 0060  
                                    u5920 B3AA                                      u6297 ADD2  
                                    u7601 AE42                                      u5850 B0AE  
                                    u7450 D646                                      u5747 AB2C  
                                    u7540 CE98                                      u5790 B2B0  
                                    u6750 EC12                                      u6815 9FE4  
                                    _UCFG 000F39                                      u6816 9FE8  
                                    u7560 CEDA                                      u6905 E2BC  
                                    u6825 A932                                      u5890 B192  
                                    u7570 CEF2                                      u6826 A934  
                                    u7547 CE8E                                      u6835 A93E  
                                    u6836 A940                                      _UEP0 000F26  
                                    u5965 A990                                      u6925 E38E  
                                    u6845 A94C                                      u7805 A2C6  
                                    _UEP1 000F27                                      u6846 A94E  
                                    u7806 A2C8                                      u6935 E3AE  
                                    u7567 CED0                                      u6855 A958  
                                    u7815 A2D2                                      u6960 B230  
                                    u6856 A95A                                      u7816 A2D4  
                                    u6945 E434                                      u7825 A2DE  
                                    u7826 A2E0                                      u6795 B064  
                                    _UEIE 000F37                                      u6885 E216  
                                    u7781 B864                  __size_of_Uart_Uart1RxIsr 0010  
                                    u6895 E236                                      u7791 B88A  
                                    u7928 CB24                                      u7929 CB50  
                                    u7888 B12C                                      _UEIR 000F63  
                                    _UCON 000F65                                      u7889 B158  
                              _AlarmEvent 01C3                            ?_StopCondition 0001  
                                    _Led1 01D8                                      _Led2 01D0  
             __end_of_MdmWifi_SendWifiMsg 9F3C                      ?_MdmWifiCmd_MainTask 0001  
                     _OsTmr_OsTickCounter 012E                             __CFG_FCMEN$ON 000000  
                         _CDCDataInHandle 0140              I2c_ReadData@TentativeCounter 0171  
  USBStdFeatureReqHandler@current_ep_data 0077                                      _pDst 0142  
                    _MdmWifiHttp_MainTask 9EFE                                      _atoi C2C0  
                                    _main 9ED6                                      _itoa A6EE  
                        ?_SetUartBaudRate 0079                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0126  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 005D  
                                    _utoa B9E6                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 200E               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue B520               I2cSlv_SendI2cMsg@DataLenght 0066  
                    ??_Mcu_StartSystemPll 0060                                      prodh 000FF4  
                                    prodl 000FF3                                      start 20CC  
                     __end_of_GenerateEvt A002                __end_of_USBCheckStdRequest C554  
                         _Rtcm_SystemDate 010A                    ??_USBCtrlTrfOutHandler 0062  
                __end_of_GetOsTickCounter 9F7E                        ?_Rtcc_GetRtccValue 0001  
         Uart_MdmWifiReadService@UartData 0004                            _GetElapsedTime BF94  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0065                              ___param_bank 000000  
               Term_MainSm@FwkBuildDayStr 00BE                 ??_USBStdFeatureReqHandler 0074  
                     StringCopy@SourceStr 0060               __end_of_OsAlrm_ClearOsAlarm ABB4  
                                   EECON2 000FA7                  ??_USBStdGetStatusHandler 0060  
                     __size_of_I2cDummyTx 001C                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString AE4C  
                     ??_Rtcc_GetRtccValue 0060                           __end_of_Welcome EE5C  
                       ?_UpdateOsCounters 0001                        _MdmWifiGetUartData C1EE  
                                   ?_atoi 0066                                     ?_main 0001  
                                   ?_itoa 0070                           __end_of___awdiv B2EE  
                                   STR_10 EFE2                                     STR_11 EFE2  
                                   STR_12 EFED                                     STR_20 EFC4  
                                   STR_13 EF8D                                     STR_21 EF90  
                                   STR_22 EFF5                                     STR_14 EFCD  
                                   STR_23 EFF7                                     STR_31 EF85  
                                   STR_15 EF61                                     STR_16 EFED  
                                   STR_24 EFF9                                     STR_40 EF79  
                                   STR_32 EF6D                                     STR_17 EF8D  
                                   STR_33 EFF3                                     STR_41 EF47  
                                   STR_18 EFFB                                     STR_26 EFA6  
                                   STR_19 EF8D                                     STR_43 EFBA  
                                   STR_60 EFF1                                     STR_28 EFE0  
                                   STR_36 EF9B                           __end_of___awmod B0E4  
                                   STR_61 EF8D                                     STR_53 EF39  
                                   STR_46 EFEC                                     STR_62 EF10  
                                   STR_63 EFEF                                     STR_64 EFEF  
                                   STR_65 EF8D                                     STR_49 EFB0  
                                   STR_58 EF25                                     STR_59 EFF1  
       __size_of_USBCtrlEPServiceComplete 00FC                           __end_of___lldiv B1E2  
                                   ?_utoa 0067                           ___awdiv@divisor 0062  
                  __end_of_USBDeviceTasks D64A                 ?_USBCtrlEPServiceComplete 0001  
                         __end_of___lwdiv AA5E                           __end_of___lwmod A6AA  
                      ??_UpdateOsCounters 0017                                     i1l673 D08E  
                                   i1l678 D1D0                                     i2l557 A42A  
                                   _UADDR 000F38                           ___awdiv@counter 0064  
                                   _AlCfg 01B9                   I2cSendMsgSm@I2cComState 0163  
                                   _USTAT 000F64                MdmWifiCmd_MainTask@Options 0001  
                                   _Alarm A21A                                _ConnStatus 0168  
      __size_of_USBCtrlEPAllowStatusStage 00CA                       ___lmul@multiplicand 0064  
               __size_of_MdmWifiEvtParser 0070                              _AddressLocal 0272  
          __end_of_MdmWifi_ReceiveWifiMsg A922                                     _RxLen 0148  
                     ?_MdmWifiGetUartData 0001           __end_of_USBCtrlEPAllowDataStage B9E6  
                                   _sd000 EF0C                                     _sd001 EEC5  
                                   _sd002 EE9F            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 0061                      __end_of_Led_MainTask A5AC  
                  ??_OsTmr_GetTimerStatus 007A                           __end_of_isalpha A39A  
                         __end_of_isdigit A190                                     atoi@a 006B  
                                   atoi@s 0066    MdmWifiGetUartData@WifiUartGetDataState 016C  
                             _ClearBuffer A492                           __end_of_isspace A2B8  
               __size_of_MdmWifi_MainTask 0034                I2c_WriteData@I2cWriteState 0177  
               Rtcc_GetRtccValue@RegValue 0063                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper A1D4                                     pclath 000FFA  
                   ??_MdmWifiCmd_MainTask 00EB                                     tablat 000FF5  
                        __end_ofi1___wmul A266                 __end_of_Rtcc_GetRtccValue B5B4  
                   ?_MdmWifiHttp_MainTask 0001                                     plusw0 000FEB  
                                   plusw2 000FDB                         __end_of_CDCInitEP AF90  
                                   utoa@c 006F                             ??_SetBaudRate 0081  
                                   utoa@v 006D                                     status 000FD8  
                         _I2cSlv_MainTask AAB2                 Rtcc_GetRtccValue@RetValue 0062  
                     i1___wmul@multiplier 0017                                     wtemp6 005E  
                     __end_of_Mcu_Int0Isr 9E84                       __end_of_Mcu_Int1Isr 9E88  
                         __end_of_strncmp B404                           __end_of_toupper A01A  
                MdmWifi_DrvMainFn@Options 0001                    __end_of_GetElapsedTime C05C  
                   __end_of_UartSetConfig AC0C          __end_of_MdmWifi_StartWifiModemSm B268  
                ?_Uart_MdmWifiReadService 0004               Rtcc_SetRtccValue@RtccPtrVal 006B  
                   __end_of_Term_MainTask A034                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0066              __size_of_USBStdSetCfgHandler 00E6  
                    ??_MdmWifiGetUartData 0068                   OsTmr_StartTimer@Timeout 0066  
                    __end_of_I2cSetConfig A30E                            _InitSchedTimer A33C  
                         __initialization C824                      __end_of_I2c_ReadData D348  
                 Rtcc_RtcConfig@RtcConfig 0061                      __end_of_I2cSendMsgSm BBEC  
                       _StartConnectionSm DF0C                              __end_of_atoi C398  
                            __end_of_main 9EE2                              __end_of_itoa A732  
                   _control_signal_bitmap 015B                              __end_of_utoa BA90  
                __end_of_Rtcm_SetRtccDate AAB2                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 0060                          __end_of_ReadByte 9EB8  
                      ?_StartConnectionSm 0001                      Term_MainSm@TermDelay 01E2  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady EEFA  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0068  
                                  ??_main 00F0              __size_of_Uart_InitUartModule 02F4  
                                  ??_itoa 0076                                    ??_utoa 006D  
                           __activetblptr 000003                           ?_USBDeviceTasks 0001  
              Term_MainSm@FwkBuildYearStr 00C6                          __end_of_TmrBInit B772  
                              _ReceiveEvt A30E                    __size_of_ReceiveDataSm 0046  
                StartConnectionSm@IdAscii 00DC                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                     ??_StartConnectionSm 0073                                    ?_Alarm 0001  
                        __end_of_Terminal ECDC                             ?_SetAckStatus 0001  
                              _SendDataSm D820                              _cdc_mem_type 015C  
                      ??_Mcu_ConfigExtInt 0060                           ReceiveEvt@Event 0060  
                        _CDCDataOutHandle 0044                           ??_StopCondition 0060  
                        ___awdiv@dividend 0060                __end_of_UsbDevice_MainTask A21A  
                         getsUSBUSART@len 0069                     __end_of_UartWriteByte A0C8  
                        ??_LowPriorityIsr 0029                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F        Irq_InitIntController@IntPriorityEn 0062  
                   __size_of_CDCTxService 0144                                    i1l1182 A4FA  
                             _GenerateEvt 9FEA                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
                           _NewWifiPacket 005A                 Uart_Uart1RxIsr@UartRxData 016F  
                           CDCTxService@i 0067                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                              _TaskNumber ECE5                               _BufferLocal 0664  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                  __end_of_Rtcc_AlarmConfig AF24  
                  __end_of_InitSchedTimer A36A                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0064                            _EnableReceiver 9E88  
                              _UartConfig 0178                 __end_of_StartConnectionSm E1E2  
                       ??_Uart_Uart1RxIsr 0005                         _shortPacketStatus 004D  
                           ??_Term_MainSm 0080                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                           USBDeviceTasks@i 007B  
             USBStdFeatureReqHandler@pUEP 0075                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 0061                             ??_RtccIrqInit 0060  
                ??_OsAlrm_ProcessOsAlarms 001F                           ??_USBDeviceInit 0068  
                     __end_of_SetBaudRate A9BC                                    ___lmul AC0C  
                    _I2cSlv_ReceiveI2cMsg A6AA                              ?_putUSBUSART 0066  
                                  ___wmul A266                                 ??___awdiv 0064  
          GetElapsedTime@CurrentTimestamp 0074                            __CFG_STVREN$ON 000000  
                               ??___awmod 0064                         ?_Rtcm_GetRtccDate 0064  
                               ??___lldiv 0074                      __end_of_getsUSBUSART B648  
                               ??___lwdiv 0064                    Tmr_TmrBPrSet@IntFreqHz 0079  
                               ??___lwmod 0064                         _USBEnableEndpoint A732  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0005  
                            ReadByte@Byte 0060                                    _memcpy A846  
                                  _memset A39A                                    clear_0 C86A  
                                  clear_1 C876                                    clear_2 C882  
                                  clear_3 C88E                                    clear_4 C89A  
                                  clear_5 C8A6                                    clear_6 C8B2  
                                  clear_7 C8BE                                    clear_8 C8CA  
                                  clear_9 C8D6                          ___awdiv@quotient 0066  
                      ??_Rtcm_GetRtccDate 006C                           ___awmod@divisor 0062  
                      _ExtInt0IsrCallback 014E                         ?_OsTmr_StartTimer 0064  
                         ___awmod@counter 0064                       UartWriteByte@Module 0061  
                      ?_USBEnableEndpoint 0068                                    _strcat AD82  
            ?_Rtcc_RegisterRtcIsrCallback 0060                                    _strchr A500  
                                  _strcpy A800                                    _strlen AB06  
                                  _strtol D64A                                    _strstr B2EE  
                        ClearBuffer@Index 0064             __size_of_USBTransferOnePacket 00BE  
                      ??_OsTmr_StartTimer 006A                                    itoa@cp 0076  
                               ??_isalpha 0063                                 ??_isdigit 0060  
                          ??_SetAckStatus 0060                              _CDCTxService CDE4  
                            __mediumconst ECDC                                 ??_isspace 0060  
                  __size_of_CheckTxStatus 000A                                    tblptrh 000FF7  
                               ??_isupper 0060                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 0069  
                 __end_of_I2cSlv_MainTask AB06                             ??_Tmr_Tmr2Isr 0029  
                            ??_I2cDummyTx 001F                 OsTmr_GetTimerStatus@Timer 0078  
                             _Mcu_Int0Isr 9E80                               _Mcu_Int1Isr 9E84  
               MdmWifiGetUartData@Counter 016B                    __size_of_ScheduleTasks 012C  
                             _CtrlTrfData 000438                                 ??_strncmp 006C  
                               ??_toupper 0060                    ??_MdmWifiHttp_MainTask 0060  
                    _controlTransferState 004C                     __end_ofi1_GenerateEvt 9FBE  
         __end_of_Uart_MdmWifiReadService A42C                     __end_of_Rtcm_MainTask B8A6  
              __size_of_Rtcc_GetRtccValue 0094                        _ExtInt1IsrCallback 014C  
                              __accesstop 0060                   __end_of__initialization C918  
                  Tmr_TmrBPrSet@Prescaler 007B                    __end_of_EnableReceiver 9E8C  
                      __size_of_WriteByte 000A                             _ReceiveDataSm A7BA  
                           ___rparam_used 000001                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus AA0A  
                    Terminal@FormatOption 0157                           __CFG_IOL1WAY$ON 000000  
                             _InitCounter 013E                                _StringCopy A624  
                   I2cDummyTx@DummyBuffer 01C4                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032                             __end_of_Alarm A240  
 MdmWifi_StartWifiModemSm@WifiModeSmState 016D                     ?_I2cSlv_ReceiveI2cMsg 0063  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint A776  
                           __end_of_sd000 EF10                             __end_of_sd001 EEE3  
                           __end_of_sd002 EEC5                              __pidataBANK1 A5AC  
                            __pidataBANK2 A88E                  _MdmWifi_StartWifiModemSm B1E2  
        __size_of_USBCtrlEPAllowDataStage 00A0             __size_of_USBConfigureEndpoint 0098  
                __size_of_InitializeTasks 007A                        __end_of_I2cDummyTx A050  
             __end_of_USBCtrlTrfInHandler BECC                           __CFG_DSWDTPS$G2 000000  
                     __end_of_Term_MainSm E8C8                                 ?i1___wmul 0017  
                     __end_of_RtccIrqInit 9FD4                     __size_of_Led_MainTask 003A  
                             ?_ReceiveEvt 0060             ??_Rtcc_RegisterRtcIsrCallback 0062  
                              _SystemInit A3CA                                   ??_Alarm 0004  
                              _cdc_notice 0100                     __end_of_Tmr_TmrBPrSet C728  
                     __end_of_Rtcc_RtcIsr A12A                          _MdmWifiEvtParser AF90  
                              _cdc_rx_len 0047                         __end_of_MsgFormat EDD3  
                              _cdc_tx_len 0046                               ?_SendDataSm 0001  
                     Terminal@UsbRxBuffer 0300                       Terminal@UsbTxBuffer 0D00  
             __end_ofi1_I2cSlv_SendI2cMsg A500                  ??_USBCtrlTrfSetupHandler 007A  
                 _USBTicksSinceSuspendEnd 015D                            ClearBuffer@Len 0062  
                   _Irq_InitIntController A2B8                    _USBStdGetStatusHandler BC9C  
     Mcu_StartSystemPll@PllStartupCounter 0060               MdmWifiHttp_MainTask@Options 0001  
                          _Rtcc_RtcConfig B8A6                          _MdmWifi_MainTask A45E  
                              __pbssBANK0 00F0                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                 ?_Pm_DsReleasePinControl 0001                     __end_ofi2_GenerateEvt 9FA8  
                __end_of_Uart_WriteString AEB8                                 ?_ReadByte 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                          ?_ReceiveDataSm 0001                     __size_of_I2c_ReadData 0176  
                   __size_of_I2cSendMsgSm 00B0                       __end_of_Tmr_Tmr2Isr A14C  
                             _SetBaudRate A96E               __size_of_USBWakeFromSuspend 003A  
                             _pBDTEntryIn 003E                __size_of_StartConnectionSm 02D6  
        UartTxBufferStatus@TxBufferStatus 0062          __end_of_USBCtrlEPServiceComplete C824  
                               ?_TmrBInit 0060                             _CheckTxStatus 9EA4  
                        _WifiGenericError 01C5                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                         ?_GetOsTickCounter 0060  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 0060  
                               ?_Terminal 0001                                   ?___lmul 0060  
                            _Led_MainTask A572                            _Rtcc_UnlockRtc 9F4C  
                            _I2cBusStatus 0164                                   ?___wmul 0060  
         __size_of_OsAlrm_ProcessOsAlarms 015C                             _ScheduleTasks CA46  
               Uart_InitUartModule@Module 0084                     __end_of_I2c_WriteData D4C8  
                      ??_GetOsTickCounter 0064                                   ?_memcpy 0060  
                                 ?_memset 0060                            ___lmul@product 0068  
                              _device_dsc EEFA                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService B648                     __end_of_UpdateSchFlag A06C  
                              _ep_data_in 013B                           _I2cWriteDataEvt 0054  
                i1GenerateEvt@EventStatus 0019                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 0060                                ??i1___wmul 001B  
                                 ?_strchr 0060                                   ?_strcpy 0060  
                                 ?_strlen 0060                                   ?_strtol 006C  
                                 ?_strstr 006F               __end_of_USBCtrlTrfRxService CA46  
                   Led_MainTask@LedTimer1 01EC                     Led_MainTask@LedTimer2 01C6  
                       __end_of_WriteByte 9EC2                        _USBCheckStdRequest C470  
                       _configDescriptor1 EE5C               __end_of_Rtcm_SetAlarmAction 9EFE  
                    _MdmWifi_UartRxBuffer 0B00               __end_of_USBCtrlTrfTxService C470  
                     _USBStdSetCfgHandler C554                   MdmWifi_MainTask@Options 0001  
                    _MdmWifi_UartTxBuffer 0600             Uart_MdmWifiReadService@Module 0001  
                            _I2cSetConfig A2E2                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig B946  
                                 _SSP2ADD 000F74                                   _SSP2BUF 000F75  
                            _I2c_ReadData D1D2                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm BB3C  
                        ?_I2cSlv_MainTask 0001            __end_of_Pm_DsReleasePinControl 2014  
               MdmWifi_ReceiveWifiMsg@Ret 006C                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 013A                                   _UIEbits 000F36  
                            ?_ClearBuffer 0060                                   _UIRbits 000F62  
                                 _IdLocal 0050                 __size_of_UpdateOsCounters 0010  
              __end_of_Sch_SchmIntService 9EF0                             _cdc_trf_state 00FB  
                              ??_ReadByte 0060                       _Uart_InitUartModule E1E2  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 0132                                   _pCDCSrc 0135  
                   __size_of_getsUSBUSART 0094                               ?_StringCopy 0060  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 0062                    ??_I2cSlv_ReceiveI2cMsg 0067  
         ??_USBIncrement1msInternalTimers 0060                            _I2cReadDataEvt 0053  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP AF24  
                  __end_of_Rtcc_UnlockRtc 9F5C                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0068                      __end_of_SetAckStatus 9F92  
                             _Term_MainSm E4D6              __size_of_MdmWifi_SendWifiMsg 0010  
                                 _Welcome EDD3                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 007C  
                     __size_of_SendDataSm 022A                         _Sch_MainScheduler A06C  
                    ??_USBCheckStdRequest 007A                               _RtccIrqInit 9FBE  
           __size_of_USBCtrlTrfOutHandler 0062                                   ___awdiv B268  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod B072  
                                 ___lldiv B15E                          ??_USBDeviceTasks 007B  
                         __size_of___wmul 0028                                   ___lwdiv AA0A  
                       ??_USBStallHandler 0060                                   ___lwmod A666  
                       ?_Rtcm_SetRtccDate 006C                        ?_Sch_MainScheduler 0001  
                             _Rtcc_RtcIsr A108                      __size_of_putUSBUSART 0022  
                                 __pcinit C824                        getsUSBUSART@buffer 0067  
                         __size_of_memcpy 0048                                 _I2cComSts 004E  
                         __size_of_memset 0030                                 _I2cConfig 018D  
                          ??_Rtcc_LockRtc 0060                 __end_of_configDescriptor1 EE9F  
                                 __ramtop 0F00                               Terminal@Len 01B5  
                      ??_Rtcm_SetRtccDate 0074                     Tmr_TmrBIrqSet@TmrNumb 0062  
                    ?_Uart_InitUartModule 0080                                   __ptext0 9ED6  
                                 __ptext1 A3CA                                   __ptext2 9ECC  
                                 __ptext3 200E                                   __ptext4 A08A  
                                 __ptext5 9F5C                                   __ptext6 A2B8  
                                 __ptext7 A33C                                   __ptext8 C05C  
                                 __ptext9 C63A                                   _inPipes 00F0  
              StartConnectionSm@DataIndex 00DB          __size_of_Uart_MdmWifiReadService 0032  
             _USBDeferOUTDataStagePackets 015E                           __size_of_strcat 0064  
                         __size_of_strchr 0038                        _WifiReceiveNetData 0058  
                         __size_of_strcpy 0046                           __size_of_strlen 0056  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                           __size_of_strstr 008A  
                            ??_USBSuspend 0074                                 _T2CONbits 000FCA  
                                 _isalpha A36A                                   _isdigit A16E  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00F0  
                             ?_SystemInit 0001                                   clear_10 C8E2  
                                 clear_11 C8EE                                   clear_12 C8FA  
                                 clear_13 C906                                   clear_14 C912  
                        ___awmod@dividend 0060                         ??_InitializeTasks 00EB  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 0154  
     __end_of_Tmr_RegisterTmr2IsrCallback 9ED6               _Tmr_RegisterTmr2IsrCallback 9ECC  
                                 _isspace A28E               __end_of_MdmWifiCmd_MainTask A1F6  
                                 _isupper A1B2                    ?_Irq_InitIntController 0060  
                  Term_MainSm@FwkBuildStr 00BA                           ?_Rtcc_RtcConfig 0061  
                  _OsAlrm_ProcessOsAlarms D076                        __end_of_USB_CD_Ptr ECE5  
                             _Tmr_Tmr2Isr A12A           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 9F0C                    Term_MainSm@FwkMajorStr 00B2  
                                 _strncmp B378                            __pintcode_body BA90  
                                 _toupper A002                         ClearBuffer@Buffer 0060  
                    end_of_initialization C918                              _getsUSBUSART B5B4  
                        ??_GetElapsedTime 0068             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 0060                           ??_ReceiveDataSm 0064  
                  _MainSystemTimebaseFlag 01E1             i1I2cSlv_SendI2cMsg@DataLenght 001D  
                      __end_of_USB_SD_Ptr ECE3       Irq_InitIntController@PerInt_LowPInt 0061  
                                 memcpy@d 0066                                   memcpy@n 0064  
                                 memcpy@s 0068                       _pBDTEntryEP0OutNext 00F6  
                                 itoa@buf 0070                                   memset@c 0062  
                  Term_MainSm@FwkMinorStr 00B6                                   itoa@val 0072  
                                 memset@n 0064                                   memset@p 0066  
                                 int_func BA90                           _USB1msTickCount 012A  
         _dummy_encapsulated_cmd_response 0197                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 0010                         ?_Rtcc_AlarmConfig 0060  
                   ??_USBStdSetCfgHandler 0074                           ___lldiv@divisor 0070  
               __end_of_Sch_MainScheduler A08A                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0078                         _Rtcc_SetRtccValue DA4A  
                       _Rtcc_SetRtcStatus 9FD4                           ?_Rtcc_UnlockRtc 0001  
             __size_of_MdmWifiGetUartData 00D2                        ??_Rtcc_AlarmConfig 0062  
                      __end_of_USBSuspend A45E                             StringCopy@Len 0064  
                 _USBCtrlEPAllowDataStage B946                        _UsbDevice_MainTask A1F6  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0068                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                   utoa@buf 0067  
                _USBCtrlEPServiceComplete C728                                   utoa@val 0069  
                   i1___wmul@multiplicand 0019                           _RtccIsrCallback 0150  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0027                        Terminal@EchoOption 01E0  
                                 strlen@s 0060                _USBStatusStageEnabledFlag1 0049  
              _USBStatusStageEnabledFlag2 0048                     ??_Uart_InitUartModule 0082  
                                 strtol@a 0077                                   strtol@c 007B  
                          _Rtcm_RtccAlarm 011A                                   strtol@s 006C  
                      USBEnableEndpoint@p 0069                       ?_UsbDevice_MainTask 0001  
                               _PORTDbits 000F83                       ??_Rtcc_SetRtccValue 0069  
                     ??_Rtcc_SetRtcStatus 0060                          __CFG_DSBOREN$OFF 000000  
                          ??_Tmr_StartTmr 0060              __end_of_I2cSlv_I2cReadMsgSts A16E  
                i1I2cSlv_SendI2cMsg@TxSts 001E                         StringCopy@DestStr 0062  
  Rtcc_RegisterRtcIsrCallback@IsrCallback 0060                          __CFG_CPUDIV$OSC1 000000  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 0152  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0042                        _BothEP0OutUOWNsSet 0160  
                            strtol@endptr 006E                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001          MdmWifi_ReceiveWifiMsg@DataLenght 006A  
               I2c_WriteData@I2cNextState 0176                StartConnectionSm@PortAscii 00D7  
               USBConfigureEndpoint@EPNum 0065                ?_USBCtrlEPAllowStatusStage 0001  
                        ??_InitSchedTimer 0087       USER_USB_CALLBACK_EVENT_HANDLER@size 0070  
                               _USTATcopy 00FF                     __end_of_StopCondition 9E94  
                __size_of_HighPriorityIsr 9B34                 Tmr_TmrBPrSet@TmrBPrCfgSts 007D  
               __size_of_OsTmr_StartTimer 005E                        SendDataSm@LenAscii 00E5  
                    ??_UsbDevice_MainTask 007C              __end_of_USBTransferOnePacket BE0C  
                         ??_CheckTxStatus 0060                ??_MdmWifi_StartWifiModemSm 0064  
                   StartConnectionSm@Data 0073                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue DC78                 __end_of_Rtcc_SetRtcStatus 9FEA  
                       _I2cSlv_SendI2cMsg A5E6           SetBaudRate@DesiredI2cBusClockHz 0079  
                         ??_ScheduleTasks 00EB                            _Tmr_TmrBConfig C05C  
                 Tmr_TmrBPrSet@Postscaler 007C                         putUSBUSART@length 0068  
                       _OsAlrm_SetOsAlarm BECC                  __end_of_MdmWifiEvtParser B000  
                    Terminal@TermRxBuffer 0240                        ?_I2cSlv_SendI2cMsg 0063  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet A922  
                     __CFG_MSSP7B_EN$MSK7 000000                           _StartConnection 0057  
                    Terminal@TermTxBuffer 03C8                    _USBCtrlTrfSetupHandler B404  
                      ?_OsAlrm_SetOsAlarm 0066                     __end_of_USBDeviceInit D076  
   __end_of_USBIncrement1msInternalTimers A0E8    __size_of_USBIncrement1msInternalTimers 0020  
           _USBIncrement1msInternalTimers A0C8                            __end_of___lmul AC64  
                          _CheckAckStatus 9E9A                            __end_of___wmul A28E  
                __end_of_MdmWifi_MainTask A492                       ??_I2cSlv_SendI2cMsg 0067  
                  __size_of_UartWriteByte 0020                  ??_MdmWifi_ReceiveWifiMsg 006C  
                          __end_of_memcpy A88E                        Terminal@PackageLen 00FA  
                          __end_of_memset A3CA                        _UartTxBufferStatus A9BC  
                     ??_OsAlrm_SetOsAlarm 006E                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 0062                         _USBBusIsSuspended 0161  
                       ??_SetUartBaudRate 007B                   __end_of_Uart_Uart1RxIsr 9F1C  
                          __end_of_strcat ADE6                            __end_of_strchr A538  
                          __end_of_strcpy A846                            __end_of_strlen AB5C  
                          __end_of_strtol D820                            __end_of_strstr B378  
                     start_initialization C824                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                              ??_SendDataSm 007E  
                  Uart_WriteString@Module 0065             USBCtrlTrfRxService@byteToRead 0061  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 006C  
                     ?_UartTxBufferStatus 0001                                 _ModeLocal 0051  
                        ??_EnableReceiver 0060                               _cdc_data_rx 0200  
                             _cdc_data_tx 04A4              __end_of_USBConfigureEndpoint B80A  
         __end_of_USBStdFeatureReqHandler DF0C                                 _MsgFormat ECE7  
                        _UpdateOsCounters 9F1C                I2c_InitI2cModule@I2cConfig 0085  
       __end_of_USBCtrlEPAllowStatusStage C1EE                 __end_of_I2cSlv_SendI2cMsg A624  
                __end_of_USBCtrlEPService B6DC                         ?_Uart_WriteString 0063  
                   __size_of_SetAckStatus 0014             __size_of_MdmWifiHttp_MainTask 000E  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 9F4C  
                            ?_SetBaudRate 0079                    __end_of_Tmr_TmrBConfig C124  
               __end_of_OsAlrm_SetOsAlarm BF94                    __end_of_Tmr_TmrBIrqSet A96E  
                               _TaskTable 028B                 ??_USBCtrlEPAllowDataStage 0061  
                      ??_Uart_WriteString 0065                               _SystemState 00FE  
                       __size_of_ReadByte 000A                                 _RtcConfig 01BD  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 0080  
                             ??_CDCInitEP 006C                            USBDeviceInit@i 0068  
                           _UartSetConfig ABB4                        __end_of_ReceiveEvt A33C  
                  _pBDTEntryEP0OutCurrent 00F8                             _Term_MainTask A01A  
                 USBTransferOnePacket@dir 0060                      ??_UartTxBufferStatus 0060  
                 USBTransferOnePacket@len 0063                     Tmr_TmrBConfig@TmrNumb 0086  
                 __size_of_LowPriorityIsr 00B4           StartConnectionSm@StartConnState 0167  
                  __end_of_CheckAckStatus 9EA4                                  ??___lmul 0068  
                                ??___wmul 0064                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 0060                        __end_of_SendDataSm DA4A  
                     _USBStdGetDscHandler CCAA                                 _PortLocal 0169  
              I2cSlv_SendI2cMsg@SlaveAddr 0065                               __pdataBANK1 01C6  
                             __pdataBANK2 028B                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 0414                                  ??_memcpy 0066  
                                ??_memset 0066                   _Uart_MdmWifiReadService A3FA  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 0060  
                                ??_strcat 0065                                  ??_strchr 0064  
                                ??_strcpy 0064                                  ??_strlen 0062  
                  __size_of_Rtcm_MainTask 009C                         _MdmWifi_DrvMainFn 9E94  
                                ??_strtol 0072                                  ??_strstr 0073  
                             __pbssBANK10 0A00                               __pbssBANK11 0B00  
                             __pbssBANK12 0C00                               __pbssBANK13 0D00  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 0052  
          __end_of_USBStdGetStatusHandler BD4E                             WriteByte@Byte 0060  
                      __end_of_TaskNumber ECE7           MdmWifi_StartWifiModemSm@Counter 0146  
                             __pbssCOMRAM 003E                   GetElapsedTime@TimeValue 0070  
                      ?_MdmWifi_DrvMainFn 0001                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060              __size_of_USBCtrlTrfInHandler 00C0  
                            _SetAckStatus 9F7E                       _MdmWifi_SendWifiMsg 9F2C  
                            _isalpha$5857 0064                    GenerateEvt@EventStatus 0062  
                               _WriteByte 9EB8                  WifiTerminal@FirstRecFlag 015A  
                    ?_USBStdGetDscHandler 0001                              _isdigit$5592 0061  
           UpdateSchFlag@InterruptCounter 0144                 SetUartBaudRate@UartConfig 0079  
                     ??_MdmWifi_DrvMainFn 0064                   GetElapsedTime@StartTime 0064  
                           _UartWriteByte A0A8                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend A572                           _USBStallHandler A776  
                            _pBDTEntryOut 0120                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 0083  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 9F5C  
              __end_of_USBCheckCDCRequest BC9C              __size_ofi1_I2cSlv_SendI2cMsg 0038  
                     _OsAlrm_ClearOsAlarm AB5C                           ?_Tmr_TmrBIrqSet 0060  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr A108  
             SendDataSm@WifiSendDataState 0166                              ??_StringCopy 0066  
                       ??_HighPriorityIsr 0005                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0060                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts A14C                          GenerateEvt@Event 0060  
                    ?_MdmWifi_SendWifiMsg 0066                    __size_of_Tmr_TmrBPrSet 00EE  
                               __pintcode 2008             Uart_WriteString@StringToWrite 0063  
                           __pmediumconst ECDC                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 0061  
                                ?___awdiv 0060                                 __ptext100 A800  
                               __ptext101 AD82                                 __ptext110 A7BA  
                               __ptext102 B490                                 __ptext111 AC64  
                               __ptext103 BF94                                 __ptext120 A30E  
                               __ptext112 9F6C                                 __ptext104 9F2C  
                               __ptext121 D348                                 __ptext113 BECC  
                               __ptext105 AE4C                                 __ptext130 9EA4  
                               __ptext122 D1D2                                 __ptext114 A266  
                               __ptext106 A0A8                             Terminal@Index 007F  
                               __ptext131 9E9A                                 __ptext123 9EB8  
                               __ptext115 B000                                 __ptext107 A9BC  
                               __ptext140 A034                                 __ptext124 9E90  
                               __ptext116 A96E                                 __ptext108 A8D6  
                               __ptext141 A4C8                                 __ptext133 A12A  
                               __ptext125 9E8C                                 __ptext117 B15E  
                               __ptext109 A624                                 __ptext150 9E80  
                               __ptext142 9FA8                                 __ptext134 9EE2  
                               __ptext126 9F7E                                 __ptext118 A2E2  
                               __ptext151 0000                                 __ptext135 A050  
                               __ptext127 9EAE                                 __ptext119 BB3C  
                               __ptext144 9F0C                                 __ptext136 9F1C  
                               __ptext128 9FEA                                 __ptext145 A3FA  
                               __ptext137 D076                                 __ptext129 9E88  
                               __ptext146 A108                                 __ptext138 A240  
                               __ptext147 A21A                                 __ptext139 AB5C  
                               __ptext148 9F92                                 __ptext149 9E84  
                                ?___awmod 0060                        _Sch_SchmIntService 9EE2  
                         _InitializeTasks B0E4                                  ?___lldiv 006C  
                                ?___lwdiv 0060                                  ?___lwmod 0060  
               __end_of_MdmWifi_DrvMainFn 9E9A                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 2018                             _WifiMdmStatus 016E  
     __end_of_Rtcc_RegisterRtcIsrCallback 9ECC               _Rtcc_RegisterRtcIsrCallback 9EC2  
                  __size_ofi2_GenerateEvt 0016           __size_of_MdmWifi_ReceiveWifiMsg 004C  
                        ??_Rtcc_RtcConfig 0063                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 01A6                       _NewWifiPacketParser 0059  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket BD4E  
                 ??_Irq_InitIntController 0062                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                                  ?_isalpha 0001  
                            ??_SystemInit 008E                                  ?_isdigit 0001  
                             _I2cTxPacket 01AC            InitializeTasks@ActiveTaskIndex 00ED  
                    __CFG_RTCOSC$T1OSCREF 000000                            __size_of_Alarm 0026  
                                ?_isspace 0001                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 0156                           Terminal@Payload 0440  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler AD82  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 0060  
                        _Rtcm_GetRtccDate ADE6                        __end_of_StringCopy A666  
                             _ep_data_out 0138                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0064  
                            ?_Tmr_Tmr2Isr 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 0060  
                                ?_strncmp 0066                                  ?_toupper 0001  
                          ?_UartWriteByte 0060              __size_of_Rtcm_SetAlarmAction 000E  
                  __size_of_I2c_WriteData 0180                          _OsTmr_StartTimer AC64  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 0060                __size_of_I2cSlv_SendI2cMsg 003E  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 0060  
                           i1_GenerateEvt 9FA8                __end_of_Mcu_StartSystemPll A0A8  
                           _Rtcm_MainTask B80A                            ___wmul@product 0064  
                   Terminal@ReceivedBytes 007E                                  _LATEbits 000F8D  
                    ??_Sch_SchmIntService 0029                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 0061  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A                     _MdmWifi_UartRxCounter 014A  
                   ?_I2cSlv_I2cReadMsgSts 0001                     ??_MdmWifi_SendWifiMsg 0068  
                       _I2c_InitI2cModule B000                                  i1u800_28 A13A  
                                _PIR1bits 000F9E                                  i1u771_20 D08C  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                                i1u775_28 D1B4                                  i1u775_29 D1C6  
                                i2u794_40 A224                                  i2u795_48 A226  
                                i2u798_48 A118                        __end_of_SystemInit A3FA  
                                _RCONbits 000FD0                             ??_putUSBUSART 0069  
                        __CFG_WDTPS$32768 000000                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0044                _USBDeferINDataStagePackets 015F  
                      ?_I2c_InitI2cModule 0085                 ??_Uart_MdmWifiReadService 0005  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      Rtcm_MainTask@Options 0001  
            __end_of_OsTmr_GetTimerStatus B520                                  _UCONbits 000F65  
                                _SSP2STAT 000F73               MdmWifi_SendWifiMsg@TxBuffer 0066  
                    _USBConfigureEndpoint B772                           _NewWifiUartData 005C  
                       SendDataSm@IdAscii 00EA          __size_of_USBStdFeatureReqHandler 0294  
                   SetUartBaudRate@Module 007C            __end_of_OsAlrm_ProcessOsAlarms D1D2  
                   ??_OsAlrm_ClearOsAlarm 0017                         ___wmul@multiplier 0060  
                   ?_USBTransferOnePacket 0060                                  i1___wmul A240  
                     ??_I2c_InitI2cModule 0087                 __size_of_Rtcc_AlarmConfig 006C  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 006C  
                            _RemoteWakeup 0162                            _StartCondition 9E8C  
                      SetAckStatus@AckSts 0060                             _Tmr_TmrBPrSet C63A  
                            _isspace$5860 0061                   __end_of_USBStallHandler A7BA  
                   __size_of_Rtcc_LockRtc 0010                         SendDataSm@SwTimer 01F6  
                       ___lmul@multiplier 0060                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 C838                                 copy_data1 C858  
                                _LenLocal 004F                    I2cSlv_SendI2cMsg@TxSts 0067  
             ??_USBCtrlEPAllowStatusStage 0060               __end_of_USBStdSetCfgHandler C63A  
                          ?i1_GenerateEvt 0017                  Tmr_TmrBConfig@TmrBConfig 0083  
                                _OsAlarms 0500                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0064                    _MdmWifi_ReceiveWifiMsg A8D6  
                                _ReadByte 9EAE              __size_of_MdmWifiCmd_MainTask 0022  
                           i2_GenerateEvt 9F92                           ??_UartSetConfig 0060  
                   __end_of_ReceiveDataSm A800                        __end_of_device_dsc EF0C  
               __end_of_I2c_InitI2cModule B072                                  _MsgReady EEE3  
                         ??_Term_MainTask 00CA                __end_of_MdmWifiGetUartData C2C0  
                 __end_of_InitializeTasks B15E                   ?_USBCtrlTrfSetupHandler 0001  
                                _RxBuffer 0C00                   USBStdGetStatusHandler@p 0061  
                                __Hrparam 0000                                  _TmrBInit B6DC  
                    __size_of_SetBaudRate 004E                            _LowPriorityIsr 2018  
                               memcpy@tmp 006A                      Tmr_TmrBPrSet@Divisor 007F  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                       ?_MdmWifiEvtParser 0001               __end_of_Uart_InitUartModule E4D6  
                         _WifiReceiveData 0055                           _SetUartBaudRate CB72  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001C                                  _Terminal E8C8  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0063  
                   SetBaudRate@McuClockHz 007D                        ??_MdmWifiEvtParser 0073  
                   ?_USBConfigureEndpoint 0060              OsAlrm_ClearOsAlarm@OsAlarmId 0017  
                           _I2c_WriteData D348                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 9F2C  
                        __size_of___lldiv 0084                __size_of_MdmWifi_DrvMainFn 0006  
                       Terminal@SlaveAddr 0158                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 007E                          __size_of___lwmod 0044  
               Rtcm_SetAlarmAction@Action 0062                         ?_MdmWifi_MainTask 0001  
                I2c_WriteData@WritePacket 0061                         Terminal@TermState 0159  
                           _UpdateSchFlag A050                       __end_of_putUSBUSART A1B2  
                             _line_coding 019F                            _StartWifiModem 005B  
                            _Rtcc_LockRtc 9F3C                    __end_of_StartCondition 9E90  
                          ??_CDCTxService 0067                  ??_Pm_DsReleasePinControl 0060  
               Rtcm_GetRtccDate@LocalDate 006D                        ??_MdmWifi_MainTask 0085  
                I2c_WriteData@WriteStatus 0174                              _isupper$5863 0061  
                              strcat@from 0062                   I2c_ReadData@DataCounter 0172  
                          ?_Tmr_TmrBPrSet 0079                          _GetOsTickCounter 9F6C  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0182                           ___lwdiv@divisor 0062  
                            Terminal@Addr 01B1                               ??_WriteByte 0060  
                        __size_of_isspace 002A                           ___lwdiv@counter 0066  
                                __ptext10 A922                                  __ptext11 A0E8  
                                __ptext20 A1D4                                  __ptext12 B6DC  
                                __ptext21 A45E                                  __ptext13 A06C  
                         ??_UartWriteByte 0061                                  __ptext30 CF28  
                                __ptext22 AAB2                                  __ptext14 CA46  
                                __ptext31 B648                                  __ptext23 9E94  
                                __ptext15 B0E4                                  __ptext40 DC78  
                                __ptext32 A846                                  __ptext24 A1F6  
                                __ptext16 A01A                                  __ptext41 ACC2  
                                __ptext33 B404                                  __ptext25 D4C8  
                                __ptext17 B80A                                  __ptext50 C398  
                                __ptext42 BBEC                                  __ptext34 C728  
                                __ptext26 A538                                  __ptext18 A572  
                                __ptext51 CDE4                                  __ptext43 AF24  
                                __ptext35 B946                                  __ptext27 A42C  
                                __ptext19 9EFE                                  __ptext60 A190  
                                __ptext52 E4D6                                  __ptext44 A732  
                                __ptext36 C470                                  __ptext28 A776  
                                __ptext61 A6EE                                  __ptext53 A39A  
                                __ptext45 B772                                  __ptext37 C554  
                                __ptext29 A0C8                                  __ptext70 9F4C  
                                __ptext62 B5B4                                  __ptext54 E8C8  
                                __ptext46 AD20                                  __ptext38 BC9C  
                                __ptext71 DA4A                                  __ptext63 BD4E  
                                __ptext55 D64A                                  __ptext47 C922  
                                __ptext39 CCAA                                  __ptext80 B8A6  
                                __ptext72 B072                                  __ptext64 C2C0  
                                __ptext56 A002                                  __ptext48 C124  
                                __ptext81 9FBE                                  __ptext73 B268  
                                __ptext65 A16E                                  __ptext57 A28E  
                                __ptext49 BE0C                                  __ptext90 DF0C  
                                __ptext82 AEB8                                  __ptext74 9F3C  
                                __ptext66 A5E6                                  __ptext58 A36A  
                                __ptext91 A492                                  __ptext83 E1E2  
                                __ptext75 9EF0                                  __ptext67 A6AA  
                                __ptext59 A1B2                                  __ptext92 D820  
                                __ptext84 CB72                                  __ptext76 9EC2  
                                __ptext68 A14C                                  __ptext93 B9E6  
                                __ptext85 AC0C                                  __ptext77 ADE6  
                                __ptext69 AA5E                                  __ptext94 A666  
                                __ptext86 ABB4                                  __ptext78 B520  
                                __ptext95 AA0A                                  __ptext87 C1EE  
                                __ptext79 9FD4                                  __ptext96 B2EE  
                                __ptext88 AF90                                  __ptext97 B378  
                                __ptext89 B1E2                                  __ptext98 AB06  
                                __ptext99 A500                          __size_of_isupper 0022  
                              _I2cDummyTx A034                    Tmr_TmrBIrqSet@Priority 0060  
                            _SSP2CON2bits 000F71                            SendDataSm@Data 007E  
                   __size_of_Tmr_StartTmr 0020                          __size_of_strncmp 008C  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 0062  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0017  
                            _WifiSendData 0056               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 0061  
          __end_of_USBCtrlTrfSetupHandler B490                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                  ??_I2cSlv_I2cReadMsgSts 0064                                strncmp@len 006A  
                  __end_of_LowPriorityIsr 20CC                              _WifiRxPacket 0700  
                   __end_of_CheckTxStatus 9EAE                        ??_USBCtrlEPService 007A  
                            _WifiTxPacket 0900                       _USBCtrlTrfInHandler BE0C  
                I2c_ReadData@I2cReadState 0173                     __end_of_ScheduleTasks CB72  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 0112                      _USBCtrlTrfOutHandler AD20  
                                int$flags 005D                                strtol@base 0070  
                          ?_I2c_WriteData 0061                                  atoi@sign 006A  
                       ??_I2cSlv_MainTask 0089                           StringCopy@Index 0066  
               _USBCtrlEPAllowStatusStage C124                      __size_of_Term_MainSm 03F2  
            ScheduleTasks@ActiveTaskIndex 00EF                                strtol@sign 0076  
                         Term_MainSm@Data 0080                      __size_of_RtccIrqInit 0016  
            __end_of_MdmWifiHttp_MainTask 9F0C                 __size_of_Uart_WriteString 006C  
                  ??_USBTransferOnePacket 0064                            ?_UpdateSchFlag 0001  
       __size_of_MdmWifi_StartWifiModemSm 0086                    __size_of_StopCondition 0004  
               ?_MdmWifi_StartWifiModemSm 0001                      __size_of_Rtcc_RtcIsr 0022  
                     i1_I2cSlv_SendI2cMsg A4C8                  __end_of_Mcu_ConfigExtInt 9F6C  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00FC  
                CDCTxService@byte_to_send 0068             I2c_WriteData@TentativeCounter 0175  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 0060                              _Tmr_StartTmr A0E8  
             Term_MainSm@FwkBuildMonthStr 00C2                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 0060                                  memcpy@s1 0062  
              I2cSlv_I2cReadMsgSts@Result 0064             USBCtrlTrfTxService@byteToSend 0060  
                           ?_I2cSetConfig 0001                                  itoa@base 0074  
             i1I2cSlv_SendI2cMsg@TxBuffer 001A                             ?_I2c_ReadData 0063  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0065  
                                isdigit@c 0062                                  memset@p1 0060  
                           _ProtocolLocal 016A                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 0019                          _Rtcm_SetRtccDate AA5E  
                USBStdFeatureReqHandler@p 0078                          ??_Tmr_TmrBConfig 0085  
                           ??_ClearBuffer 0064                           _HighPriorityIsr 2008  
                         ??_Rtcm_MainTask 0075                          ??_Tmr_TmrBIrqSet 0062  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus B490                         TmrBInit@Prescaler 0060  
                    __size_of_Tmr_Tmr2Isr 0022                    __size_of_USBDeviceInit 014E  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER AD20  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0072          ?_USER_USB_CALLBACK_EVENT_HANDLER 006C  
         _USER_USB_CALLBACK_EVENT_HANDLER ACC2                                 strchr@chr 0062  
                 Rtcc_SetRtcStatus@Status 0060                          ___lwmod@dividend 0060  
                               strchr@ptr 0060                   __end_of_SetUartBaudRate CCAA  
                                isspace@c 0062                          ___lldiv@dividend 006C  
                    ?i1_I2cSlv_SendI2cMsg 001A                __size_of_I2c_InitI2cModule 0072  
                        ??_CheckAckStatus 0060                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 0062  
                               strncmp@s1 0066                                 strncmp@s2 0068  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0067  
                          ??_Led_MainTask 006A                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 0061                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                  __end_of_Rtcm_GetRtccDate AE4C  
                             _putUSBUSART A190                       _USBCtrlTrfRxService C922  
                  Rtcc_SetRtccValue@Value 0068                        _USBWakeFromSuspend A538  
                     _Rtcm_SetAlarmAction 9EF0                   _USBStdFeatureReqHandler DC78  
                __end_of_OsTmr_StartTimer ACC2                        _USBCheckCDCRequest BBEC  
                     _USBCtrlTrfTxService C398                       RtccIrqInit@Priority 0060  
                                utoa@base 006B                                _RTCCFGbits 000F3F  
                        _Rtcc_AlarmConfig AEB8                           ??_Tmr_TmrBPrSet 007D  
                                strcat@cp 0065                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0074                           ___lwmod@divisor 0062  
                   ??_USBCtrlTrfInHandler 0061                                  strcpy@cp 0064  
                                strlen@cp 0064                                  strcpy@to 0060  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 01C1  
                         ___lwmod@counter 0064                            ??_I2cSetConfig 0060  
          __size_of_Irq_InitIntController 002A                                  toupper@c 0060  
         SetUartBaudRate@BaudRateRegister 007D                       ?_USBCheckCDCRequest 0001  
                          ??_I2c_ReadData 0065                            ??_I2cSendMsgSm 0067  
           __end_of_Irq_InitIntController A2E2                     ReceiveEvt@EventStatus 0063  
            ?_Tmr_RegisterTmr2IsrCallback 0060                       USBEnableEndpoint@ep 006B  
                                strstr@s1 006F                                  strstr@s2 0071  
                         _endpoint_number 004B                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 0001                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003                             ?_getsUSBUSART 0067  
                UartTxBufferStatus@Module 0061                     ?_OsTmr_GetTimerStatus 0078  
           SetUartBaudRate@DivisionFactor 007F            I2cSlv_ReceiveI2cMsg@DataLenght 0066  
                           ??_GenerateEvt 0062                      ?_Rtcm_SetAlarmAction 0062  
       ReceiveDataSm@WifiReceiveDataState 0165      __size_of_Rtcc_RegisterRtcIsrCallback 000A  
                         TmrBInit@TmrNumb 0063                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001                             _StopCondition 9E90  
                   ??i1_I2cSlv_SendI2cMsg 001E              _USBStatusStageTimeoutCounter 004A  
                  WifiTerminal@UartBuffer 0800                      ??_USBWakeFromSuspend 0074  
              USBTransferOnePacket@handle 0065                       __end_of_ClearBuffer A4C8  
                    __end_of_CDCTxService CF28                      ??_USBCheckCDCRequest 0060  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr ECE3  
                   WifiTerminal@UsbBuffer 0A00                           ??_I2c_WriteData 0063  
