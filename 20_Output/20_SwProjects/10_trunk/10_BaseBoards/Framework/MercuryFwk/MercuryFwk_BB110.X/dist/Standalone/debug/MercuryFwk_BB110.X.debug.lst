

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Nov 12 20:29:21 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK12,global,class=BANK12,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK13,global,class=BANK13,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	text0,global,reloc=2,class=CODE,delta=1
    29                           	psect	text1,global,reloc=2,class=CODE,delta=1
    30                           	psect	text2,global,reloc=2,class=CODE,delta=1
    31                           	psect	text3,global,reloc=2,class=CODE,delta=1
    32                           	psect	text4,global,reloc=2,class=CODE,delta=1
    33                           	psect	text5,global,reloc=2,class=CODE,delta=1
    34                           	psect	text6,global,reloc=2,class=CODE,delta=1
    35                           	psect	text7,global,reloc=2,class=CODE,delta=1
    36                           	psect	text8,global,reloc=2,class=CODE,delta=1
    37                           	psect	text9,global,reloc=2,class=CODE,delta=1
    38                           	psect	text10,global,reloc=2,class=CODE,delta=1
    39                           	psect	text11,global,reloc=2,class=CODE,delta=1
    40                           	psect	text12,global,reloc=2,class=CODE,delta=1
    41                           	psect	text13,global,reloc=2,class=CODE,delta=1
    42                           	psect	text14,global,reloc=2,class=CODE,delta=1
    43                           	psect	text15,global,reloc=2,class=CODE,delta=1
    44                           	psect	text16,global,reloc=2,class=CODE,delta=1
    45                           	psect	text17,global,reloc=2,class=CODE,delta=1
    46                           	psect	text18,global,reloc=2,class=CODE,delta=1
    47                           	psect	text19,global,reloc=2,class=CODE,delta=1
    48                           	psect	text20,global,reloc=2,class=CODE,delta=1
    49                           	psect	text21,global,reloc=2,class=CODE,delta=1
    50                           	psect	text22,global,reloc=2,class=CODE,delta=1
    51                           	psect	text23,global,reloc=2,class=CODE,delta=1
    52                           	psect	text24,global,reloc=2,class=CODE,delta=1
    53                           	psect	text25,global,reloc=2,class=CODE,delta=1
    54                           	psect	text26,global,reloc=2,class=CODE,delta=1
    55                           	psect	text27,global,reloc=2,class=CODE,delta=1
    56                           	psect	text28,global,reloc=2,class=CODE,delta=1
    57                           	psect	text29,global,reloc=2,class=CODE,delta=1
    58                           	psect	text30,global,reloc=2,class=CODE,delta=1
    59                           	psect	text31,global,reloc=2,class=CODE,delta=1
    60                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text33,global,reloc=2,class=CODE,delta=1
    62                           	psect	text34,global,reloc=2,class=CODE,delta=1
    63                           	psect	text35,global,reloc=2,class=CODE,delta=1
    64                           	psect	text36,global,reloc=2,class=CODE,delta=1
    65                           	psect	text37,global,reloc=2,class=CODE,delta=1
    66                           	psect	text38,global,reloc=2,class=CODE,delta=1
    67                           	psect	text39,global,reloc=2,class=CODE,delta=1
    68                           	psect	text40,global,reloc=2,class=CODE,delta=1
    69                           	psect	text41,global,reloc=2,class=CODE,delta=1
    70                           	psect	text42,global,reloc=2,class=CODE,delta=1
    71                           	psect	text43,global,reloc=2,class=CODE,delta=1
    72                           	psect	text44,global,reloc=2,class=CODE,delta=1
    73                           	psect	text45,global,reloc=2,class=CODE,delta=1
    74                           	psect	text46,global,reloc=2,class=CODE,delta=1
    75                           	psect	text47,global,reloc=2,class=CODE,delta=1
    76                           	psect	text48,global,reloc=2,class=CODE,delta=1
    77                           	psect	text49,global,reloc=2,class=CODE,delta=1
    78                           	psect	text50,global,reloc=2,class=CODE,delta=1
    79                           	psect	text51,global,reloc=2,class=CODE,delta=1
    80                           	psect	text52,global,reloc=2,class=CODE,delta=1
    81                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text54,global,reloc=2,class=CODE,delta=1
    83                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text60,global,reloc=2,class=CODE,delta=1
    89                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text62,global,reloc=2,class=CODE,delta=1
    91                           	psect	text63,global,reloc=2,class=CODE,delta=1
    92                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text66,global,reloc=2,class=CODE,delta=1
    95                           	psect	text67,global,reloc=2,class=CODE,delta=1
    96                           	psect	text68,global,reloc=2,class=CODE,delta=1
    97                           	psect	text69,global,reloc=2,class=CODE,delta=1
    98                           	psect	text70,global,reloc=2,class=CODE,delta=1
    99                           	psect	text71,global,reloc=2,class=CODE,delta=1
   100                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text74,global,reloc=2,class=CODE,delta=1
   103                           	psect	text75,global,reloc=2,class=CODE,delta=1
   104                           	psect	text76,global,reloc=2,class=CODE,delta=1
   105                           	psect	text77,global,reloc=2,class=CODE,delta=1
   106                           	psect	text78,global,reloc=2,class=CODE,delta=1
   107                           	psect	text79,global,reloc=2,class=CODE,delta=1
   108                           	psect	text80,global,reloc=2,class=CODE,delta=1
   109                           	psect	text81,global,reloc=2,class=CODE,delta=1
   110                           	psect	text82,global,reloc=2,class=CODE,delta=1
   111                           	psect	text83,global,reloc=2,class=CODE,delta=1
   112                           	psect	text84,global,reloc=2,class=CODE,delta=1
   113                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text86,global,reloc=2,class=CODE,delta=1
   115                           	psect	text87,global,reloc=2,class=CODE,delta=1
   116                           	psect	text88,global,reloc=2,class=CODE,delta=1
   117                           	psect	text89,global,reloc=2,class=CODE,delta=1
   118                           	psect	text90,global,reloc=2,class=CODE,delta=1
   119                           	psect	text91,global,reloc=2,class=CODE,delta=1
   120                           	psect	text92,global,reloc=2,class=CODE,delta=1
   121                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text102,global,reloc=2,class=CODE,delta=1
   131                           	psect	text103,global,reloc=2,class=CODE,delta=1
   132                           	psect	text104,global,reloc=2,class=CODE,delta=1
   133                           	psect	text105,global,reloc=2,class=CODE,delta=1
   134                           	psect	text106,global,reloc=2,class=CODE,delta=1
   135                           	psect	text107,global,reloc=2,class=CODE,delta=1
   136                           	psect	text108,global,reloc=2,class=CODE,delta=1
   137                           	psect	text109,global,reloc=2,class=CODE,delta=1
   138                           	psect	text110,global,reloc=2,class=CODE,delta=1
   139                           	psect	text111,global,reloc=2,class=CODE,delta=1
   140                           	psect	text112,global,reloc=2,class=CODE,delta=1
   141                           	psect	text113,global,reloc=2,class=CODE,delta=1
   142                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text115,global,reloc=2,class=CODE,delta=1
   144                           	psect	text116,global,reloc=2,class=CODE,delta=1
   145                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text118,global,reloc=2,class=CODE,delta=1
   147                           	psect	text119,global,reloc=2,class=CODE,delta=1
   148                           	psect	text120,global,reloc=2,class=CODE,delta=1
   149                           	psect	text121,global,reloc=2,class=CODE,delta=1
   150                           	psect	text122,global,reloc=2,class=CODE,delta=1
   151                           	psect	text123,global,reloc=2,class=CODE,delta=1
   152                           	psect	text124,global,reloc=2,class=CODE,delta=1
   153                           	psect	text125,global,reloc=2,class=CODE,delta=1
   154                           	psect	text126,global,reloc=2,class=CODE,delta=1
   155                           	psect	text127,global,reloc=2,class=CODE,delta=1
   156                           	psect	text128,global,reloc=2,class=CODE,delta=1
   157                           	psect	text129,global,reloc=2,class=CODE,delta=1
   158                           	psect	text130,global,reloc=2,class=CODE,delta=1
   159                           	psect	text131,global,reloc=2,class=CODE,delta=1
   160                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   161                           	psect	text133,global,reloc=2,class=CODE,delta=1
   162                           	psect	text134,global,reloc=2,class=CODE,delta=1
   163                           	psect	text135,global,reloc=2,class=CODE,delta=1
   164                           	psect	text136,global,reloc=2,class=CODE,delta=1
   165                           	psect	text137,global,reloc=2,class=CODE,delta=1
   166                           	psect	text138,global,reloc=2,class=CODE,delta=1
   167                           	psect	text139,global,reloc=2,class=CODE,delta=1
   168                           	psect	text140,global,reloc=2,class=CODE,delta=1
   169                           	psect	text141,global,reloc=2,class=CODE,delta=1
   170                           	psect	text142,global,reloc=2,class=CODE,delta=1
   171                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   172                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   173                           	psect	text144,global,reloc=2,class=CODE,delta=1
   174                           	psect	text145,global,reloc=2,class=CODE,delta=1
   175                           	psect	text146,global,reloc=2,class=CODE,delta=1
   176                           	psect	text147,global,reloc=2,class=CODE,delta=1
   177                           	psect	text148,global,reloc=2,class=CODE,delta=1
   178                           	psect	text149,global,reloc=2,class=CODE,delta=1
   179                           	psect	text150,global,reloc=2,class=CODE,delta=1
   180                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   181                           	psect	text151,global,reloc=2,class=CODE,delta=1
   182                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   183                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   184                           	dabs	1,0x400,48,_BDT
   185                           	dabs	1,0x438,8,_CtrlTrfData
   186                           	dabs	1,0x430,8,_SetupPkt
   187  0000                     
   188                           ; Version 1.45
   189                           ; Generated 16/11/2017 GMT
   190                           ; 
   191                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   192                           ; All rights reserved.
   193                           ; 
   194                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   195                           ; 
   196                           ; Redistribution and use in source and binary forms, with or without modification, are
   197                           ; permitted provided that the following conditions are met:
   198                           ; 
   199                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   200                           ;        conditions and the following disclaimer.
   201                           ; 
   202                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   203                           ;        of conditions and the following disclaimer in the documentation and/or other
   204                           ;        materials provided with the distribution.
   205                           ; 
   206                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   207                           ;        software without specific prior written permission.
   208                           ; 
   209                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   210                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   211                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   212                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   213                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   214                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   215                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   216                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   217                           ; 
   218                           ; 
   219                           ; Code-generator required, PIC18F46J50 Definitions
   220                           ; 
   221                           ; SFR Addresses
   222  0000                     
   223                           	psect	idataBANK1
   224  004852                     __pidataBANK1:
   225                           	opt stack 0
   226                           
   227                           ;initializer for Led_MainTask@LedTimer2
   228  004852  01                 	db	1
   229  004853  01                 	db	1
   230  004854  0000               	dw	0
   231  004856  0000               	dw	0
   232  004858  0000               	dw	0
   233  00485A  0000               	dw	0
   234                           
   235                           ;initializer for _Led2
   236  00485C  00                 	db	0
   237  00485D  00                 	db	0
   238  00485E  0000               	dw	0
   239  004860  0014               	dw	20
   240  004862  0014               	dw	20
   241                           
   242                           ;initializer for _Led1
   243  004864  00                 	db	0
   244  004865  00                 	db	0
   245  004866  0000               	dw	0
   246  004868  0001               	dw	1
   247  00486A  0013               	dw	19
   248                           
   249                           ;initializer for Terminal@EchoOption
   250  00486C  01                 	db	1
   251                           
   252                           ;initializer for _MainSystemTimebaseFlag
   253  00486D  01                 	db	1
   254                           
   255                           ;initializer for Term_MainSm@TermDelay
   256  00486E  01                 	db	1
   257  00486F  01                 	db	1
   258  004870  0000               	dw	0
   259  004872  0000               	dw	0
   260  004874  0000               	dw	0
   261  004876  0000               	dw	0
   262                           
   263                           ;initializer for Led_MainTask@LedTimer1
   264  004878  01                 	db	1
   265  004879  01                 	db	1
   266  00487A  0000               	dw	0
   267  00487C  0000               	dw	0
   268  00487E  0000               	dw	0
   269  004880  0000               	dw	0
   270                           
   271                           ;initializer for SendDataSm@SwTimer
   272  004882  01                 	db	1
   273  004883  01                 	db	1
   274  004884  0000               	dw	0
   275  004886  0000               	dw	0
   276  004888  0000               	dw	0
   277  00488A  0000               	dw	0
   278                           
   279                           	psect	idataBANK2
   280  004562                     __pidataBANK2:
   281                           	opt stack 0
   282                           
   283                           ;initializer for _TaskTable
   284  004562  6E                 	db	low _MdmWifi_DrvMainFn
   285  004563  4F                 	db	high _MdmWifi_DrvMainFn
   286  004564  00                 	db	0
   287  004565  0000               	dw	0
   288  004567  000A               	dw	10
   289  004569  00                 	db	0
   290  00456A  32                 	db	low _I2cSlv_MainTask
   291  00456B  43                 	db	high _I2cSlv_MainTask
   292  00456C  00                 	db	0
   293  00456D  0000               	dw	0
   294  00456F  0005               	dw	5
   295  004571  00                 	db	0
   296  004572  6C                 	db	low _MdmWifi_MainTask
   297  004573  49                 	db	high _MdmWifi_MainTask
   298  004574  00                 	db	0
   299  004575  0000               	dw	0
   300  004577  0001               	dw	1
   301  004579  00                 	db	0
   302  00457A  0C                 	db	low _MdmWifiCmd_MainTask
   303  00457B  4C                 	db	high _MdmWifiCmd_MainTask
   304  00457C  00                 	db	0
   305  00457D  0000               	dw	0
   306  00457F  000A               	dw	10
   307  004581  00                 	db	0
   308  004582  F6                 	db	low _MdmWifiHttp_MainTask
   309  004583  4E                 	db	high _MdmWifiHttp_MainTask
   310  004584  00                 	db	0
   311  004585  0000               	dw	0
   312  004587  000A               	dw	10
   313  004589  00                 	db	0
   314  00458A  E8                 	db	low _UsbDevice_MainTask
   315  00458B  4B                 	db	high _UsbDevice_MainTask
   316  00458C  00                 	db	0
   317  00458D  0000               	dw	0
   318  00458F  0001               	dw	1
   319  004591  00                 	db	0
   320  004592  1C                 	db	low _Led_MainTask
   321  004593  39                 	db	high _Led_MainTask
   322  004594  00                 	db	0
   323  004595  0000               	dw	0
   324  004597  0032               	dw	50
   325  004599  00                 	db	0
   326  00459A  06                 	db	low _Rtcm_MainTask
   327  00459B  35                 	db	high _Rtcm_MainTask
   328  00459C  00                 	db	0
   329  00459D  0000               	dw	0
   330  00459F  03E8               	dw	1000
   331  0045A1  00                 	db	0
   332  0045A2  CE                 	db	low _Term_MainTask
   333  0045A3  4D                 	db	high _Term_MainTask
   334  0045A4  00                 	db	0
   335  0045A5  0000               	dw	0
   336  0045A7  0064               	dw	100
   337  0045A9  00                 	db	0
   338                           
   339                           	psect	mediumconst
   340  00FCD6                     __pmediumconst:
   341                           	opt stack 0
   342  00FCD6  00                 	db	0
   343  00FCD7                     _USB_SD_Ptr:
   344                           	opt stack 0
   345  00FCD7  06                 	db	low _sd000
   346  00FCD8  FF                 	db	high _sd000
   347  00FCD9  BF                 	db	low _sd001
   348  00FCDA  FE                 	db	high _sd001
   349  00FCDB  99                 	db	low _sd002
   350  00FCDC  FE                 	db	high _sd002
   351  00FCDD                     __end_of_USB_SD_Ptr:
   352                           	opt stack 0
   353  00FCDD                     _USB_CD_Ptr:
   354                           	opt stack 0
   355  00FCDD  56                 	db	low _configDescriptor1
   356  00FCDE  FE                 	db	high _configDescriptor1
   357  00FCDF                     __end_of_USB_CD_Ptr:
   358                           	opt stack 0
   359  00FCDF                     _TaskNumber:
   360                           	opt stack 0
   361  00FCDF  0009               	dw	9
   362  00FCE1                     __end_of_TaskNumber:
   363                           	opt stack 0
   364  00FCE1                     _MsgFormat:
   365                           	opt stack 0
   366  00FCE1  48                 	db	72
   367  00FCE2  6F                 	db	111
   368  00FCE3  73                 	db	115
   369  00FCE4  74                 	db	116
   370  00FCE5  20                 	db	32
   371  00FCE6  6D                 	db	109
   372  00FCE7  65                 	db	101
   373  00FCE8  73                 	db	115
   374  00FCE9  73                 	db	115
   375  00FCEA  61                 	db	97
   376  00FCEB  67                 	db	103
   377  00FCEC  65                 	db	101
   378  00FCED  20                 	db	32
   379  00FCEE  66                 	db	102
   380  00FCEF  6F                 	db	111
   381  00FCF0  72                 	db	114
   382  00FCF1  6D                 	db	109
   383  00FCF2  61                 	db	97
   384  00FCF3  74                 	db	116
   385  00FCF4  3A                 	db	58
   386  00FCF5  20                 	db	32
   387  00FCF6  0D                 	db	13
   388  00FCF7  0A                 	db	10
   389  00FCF8  5B                 	db	91
   390  00FCF9  6F                 	db	111
   391  00FCFA  70                 	db	112
   392  00FCFB  5F                 	db	95
   393  00FCFC  74                 	db	116
   394  00FCFD  79                 	db	121
   395  00FCFE  70                 	db	112
   396  00FCFF  65                 	db	101
   397  00FD00  5D                 	db	93
   398  00FD01  3A                 	db	58
   399  00FD02  5B                 	db	91
   400  00FD03  6F                 	db	111
   401  00FD04  70                 	db	112
   402  00FD05  5D                 	db	93
   403  00FD06  3A                 	db	58
   404  00FD07  5B                 	db	91
   405  00FD08  6C                 	db	108
   406  00FD09  65                 	db	101
   407  00FD0A  6E                 	db	110
   408  00FD0B  5D                 	db	93
   409  00FD0C  3A                 	db	58
   410  00FD0D  5B                 	db	91
   411  00FD0E  61                 	db	97
   412  00FD0F  64                 	db	100
   413  00FD10  64                 	db	100
   414  00FD11  72                 	db	114
   415  00FD12  5D                 	db	93
   416  00FD13  3A                 	db	58
   417  00FD14  5B                 	db	91
   418  00FD15  70                 	db	112
   419  00FD16  61                 	db	97
   420  00FD17  79                 	db	121
   421  00FD18  6C                 	db	108
   422  00FD19  6F                 	db	111
   423  00FD1A  61                 	db	97
   424  00FD1B  64                 	db	100
   425  00FD1C  5D                 	db	93
   426  00FD1D  0D                 	db	13
   427  00FD1E  0A                 	db	10
   428  00FD1F  0D                 	db	13
   429  00FD20  0A                 	db	10
   430  00FD21  5B                 	db	91
   431  00FD22  6F                 	db	111
   432  00FD23  70                 	db	112
   433  00FD24  5F                 	db	95
   434  00FD25  74                 	db	116
   435  00FD26  79                 	db	121
   436  00FD27  70                 	db	112
   437  00FD28  65                 	db	101
   438  00FD29  5D                 	db	93
   439  00FD2A  20                 	db	32
   440  00FD2B  3D                 	db	61
   441  00FD2C  20                 	db	32
   442  00FD2D  53                 	db	83
   443  00FD2E  4F                 	db	79
   444  00FD2F  2C                 	db	44
   445  00FD30  53                 	db	83
   446  00FD31  42                 	db	66
   447  00FD32  0D                 	db	13
   448  00FD33  0A                 	db	10
   449  00FD34  5B                 	db	91
   450  00FD35  6F                 	db	111
   451  00FD36  70                 	db	112
   452  00FD37  5D                 	db	93
   453  00FD38  20                 	db	32
   454  00FD39  3D                 	db	61
   455  00FD3A  20                 	db	32
   456  00FD3B  52                 	db	82
   457  00FD3C  3A                 	db	58
   458  00FD3D  20                 	db	32
   459  00FD3E  72                 	db	114
   460  00FD3F  65                 	db	101
   461  00FD40  61                 	db	97
   462  00FD41  64                 	db	100
   463  00FD42  2C                 	db	44
   464  00FD43  57                 	db	87
   465  00FD44  3A                 	db	58
   466  00FD45  20                 	db	32
   467  00FD46  77                 	db	119
   468  00FD47  72                 	db	114
   469  00FD48  69                 	db	105
   470  00FD49  74                 	db	116
   471  00FD4A  65                 	db	101
   472  00FD4B  0D                 	db	13
   473  00FD4C  0A                 	db	10
   474  00FD4D  5B                 	db	91
   475  00FD4E  6C                 	db	108
   476  00FD4F  65                 	db	101
   477  00FD50  6E                 	db	110
   478  00FD51  5D                 	db	93
   479  00FD52  20                 	db	32
   480  00FD53  3D                 	db	61
   481  00FD54  20                 	db	32
   482  00FD55  32                 	db	50
   483  00FD56  20                 	db	32
   484  00FD57  62                 	db	98
   485  00FD58  79                 	db	121
   486  00FD59  74                 	db	116
   487  00FD5A  65                 	db	101
   488  00FD5B  20                 	db	32
   489  00FD5C  41                 	db	65
   490  00FD5D  53                 	db	83
   491  00FD5E  43                 	db	67
   492  00FD5F  49                 	db	73
   493  00FD60  49                 	db	73
   494  00FD61  0D                 	db	13
   495  00FD62  0A                 	db	10
   496  00FD63  5B                 	db	91
   497  00FD64  61                 	db	97
   498  00FD65  64                 	db	100
   499  00FD66  64                 	db	100
   500  00FD67  72                 	db	114
   501  00FD68  5D                 	db	93
   502  00FD69  20                 	db	32
   503  00FD6A  3D                 	db	61
   504  00FD6B  20                 	db	32
   505  00FD6C  32                 	db	50
   506  00FD6D  20                 	db	32
   507  00FD6E  62                 	db	98
   508  00FD6F  79                 	db	121
   509  00FD70  74                 	db	116
   510  00FD71  65                 	db	101
   511  00FD72  20                 	db	32
   512  00FD73  41                 	db	65
   513  00FD74  53                 	db	83
   514  00FD75  43                 	db	67
   515  00FD76  49                 	db	73
   516  00FD77  49                 	db	73
   517  00FD78  0D                 	db	13
   518  00FD79  0A                 	db	10
   519  00FD7A  5B                 	db	91
   520  00FD7B  70                 	db	112
   521  00FD7C  61                 	db	97
   522  00FD7D  79                 	db	121
   523  00FD7E  6C                 	db	108
   524  00FD7F  6F                 	db	111
   525  00FD80  61                 	db	97
   526  00FD81  64                 	db	100
   527  00FD82  5D                 	db	93
   528  00FD83  20                 	db	32
   529  00FD84  3D                 	db	61
   530  00FD85  20                 	db	32
   531  00FD86  6D                 	db	109
   532  00FD87  61                 	db	97
   533  00FD88  78                 	db	120
   534  00FD89  20                 	db	32
   535  00FD8A  32                 	db	50
   536  00FD8B  30                 	db	48
   537  00FD8C  20                 	db	32
   538  00FD8D  62                 	db	98
   539  00FD8E  79                 	db	121
   540  00FD8F  74                 	db	116
   541  00FD90  65                 	db	101
   542  00FD91  20                 	db	32
   543  00FD92  41                 	db	65
   544  00FD93  53                 	db	83
   545  00FD94  43                 	db	67
   546  00FD95  49                 	db	73
   547  00FD96  49                 	db	73
   548  00FD97  0D                 	db	13
   549  00FD98  0A                 	db	10
   550  00FD99  0D                 	db	13
   551  00FD9A  0A                 	db	10
   552  00FD9B  54                 	db	84
   553  00FD9C  65                 	db	101
   554  00FD9D  72                 	db	114
   555  00FD9E  6D                 	db	109
   556  00FD9F  69                 	db	105
   557  00FDA0  6E                 	db	110
   558  00FDA1  61                 	db	97
   559  00FDA2  6C                 	db	108
   560  00FDA3  20                 	db	32
   561  00FDA4  4D                 	db	77
   562  00FDA5  6F                 	db	111
   563  00FDA6  64                 	db	100
   564  00FDA7  65                 	db	101
   565  00FDA8  3A                 	db	58
   566  00FDA9  20                 	db	32
   567  00FDAA  43                 	db	67
   568  00FDAB  4F                 	db	79
   569  00FDAC  4D                 	db	77
   570  00FDAD  4D                 	db	77
   571  00FDAE  41                 	db	65
   572  00FDAF  4E                 	db	78
   573  00FDB0  44                 	db	68
   574  00FDB1  20                 	db	32
   575  00FDB2  4D                 	db	77
   576  00FDB3  4F                 	db	79
   577  00FDB4  44                 	db	68
   578  00FDB5  45                 	db	69
   579  00FDB6  0D                 	db	13
   580  00FDB7  0A                 	db	10
   581  00FDB8  4D                 	db	77
   582  00FDB9  6F                 	db	111
   583  00FDBA  64                 	db	100
   584  00FDBB  65                 	db	101
   585  00FDBC  6D                 	db	109
   586  00FDBD  20                 	db	32
   587  00FDBE  54                 	db	84
   588  00FDBF  79                 	db	121
   589  00FDC0  70                 	db	112
   590  00FDC1  65                 	db	101
   591  00FDC2  3A                 	db	58
   592  00FDC3  20                 	db	32
   593  00FDC4  57                 	db	87
   594  00FDC5  69                 	db	105
   595  00FDC6  46                 	db	70
   596  00FDC7  69                 	db	105
   597  00FDC8  0D                 	db	13
   598  00FDC9  0A                 	db	10
   599  00FDCA  0D                 	db	13
   600  00FDCB  0A                 	db	10
   601  00FDCC  00                 	db	0
   602  00FDCD                     __end_of_MsgFormat:
   603                           	opt stack 0
   604  00FDCD                     _Welcome:
   605                           	opt stack 0
   606  00FDCD  2A                 	db	42
   607  00FDCE  2A                 	db	42
   608  00FDCF  2A                 	db	42
   609  00FDD0  2A                 	db	42
   610  00FDD1  2A                 	db	42
   611  00FDD2  2A                 	db	42
   612  00FDD3  2A                 	db	42
   613  00FDD4  2A                 	db	42
   614  00FDD5  2A                 	db	42
   615  00FDD6  2A                 	db	42
   616  00FDD7  2A                 	db	42
   617  00FDD8  2A                 	db	42
   618  00FDD9  2A                 	db	42
   619  00FDDA  2A                 	db	42
   620  00FDDB  2A                 	db	42
   621  00FDDC  2A                 	db	42
   622  00FDDD  2A                 	db	42
   623  00FDDE  2A                 	db	42
   624  00FDDF  2A                 	db	42
   625  00FDE0  2A                 	db	42
   626  00FDE1  2A                 	db	42
   627  00FDE2  2A                 	db	42
   628  00FDE3  2A                 	db	42
   629  00FDE4  2A                 	db	42
   630  00FDE5  2A                 	db	42
   631  00FDE6  2A                 	db	42
   632  00FDE7  2A                 	db	42
   633  00FDE8  2A                 	db	42
   634  00FDE9  2A                 	db	42
   635  00FDEA  2A                 	db	42
   636  00FDEB  2A                 	db	42
   637  00FDEC  2A                 	db	42
   638  00FDED  2A                 	db	42
   639  00FDEE  2A                 	db	42
   640  00FDEF  2A                 	db	42
   641  00FDF0  2A                 	db	42
   642  00FDF1  2A                 	db	42
   643  00FDF2  2A                 	db	42
   644  00FDF3  2A                 	db	42
   645  00FDF4  2A                 	db	42
   646  00FDF5  2A                 	db	42
   647  00FDF6  2A                 	db	42
   648  00FDF7  2A                 	db	42
   649  00FDF8  2A                 	db	42
   650  00FDF9  2A                 	db	42
   651  00FDFA  2A                 	db	42
   652  00FDFB  2A                 	db	42
   653  00FDFC  2A                 	db	42
   654  00FDFD  2A                 	db	42
   655  00FDFE  0D                 	db	13
   656  00FDFF  0A                 	db	10
   657  00FE00  20                 	db	32
   658  00FE01  20                 	db	32
   659  00FE02  20                 	db	32
   660  00FE03  20                 	db	32
   661  00FE04  20                 	db	32
   662  00FE05  20                 	db	32
   663  00FE06  20                 	db	32
   664  00FE07  20                 	db	32
   665  00FE08  20                 	db	32
   666  00FE09  20                 	db	32
   667  00FE0A  20                 	db	32
   668  00FE0B  20                 	db	32
   669  00FE0C  20                 	db	32
   670  00FE0D  20                 	db	32
   671  00FE0E  20                 	db	32
   672  00FE0F  20                 	db	32
   673  00FE10  20                 	db	32
   674  00FE11  20                 	db	32
   675  00FE12  4D                 	db	77
   676  00FE13  45                 	db	69
   677  00FE14  52                 	db	82
   678  00FE15  43                 	db	67
   679  00FE16  55                 	db	85
   680  00FE17  52                 	db	82
   681  00FE18  59                 	db	89
   682  00FE19  20                 	db	32
   683  00FE1A  53                 	db	83
   684  00FE1B  59                 	db	89
   685  00FE1C  53                 	db	83
   686  00FE1D  54                 	db	84
   687  00FE1E  45                 	db	69
   688  00FE1F  4D                 	db	77
   689  00FE20  0D                 	db	13
   690  00FE21  0A                 	db	10
   691  00FE22  2A                 	db	42
   692  00FE23  2A                 	db	42
   693  00FE24  2A                 	db	42
   694  00FE25  2A                 	db	42
   695  00FE26  2A                 	db	42
   696  00FE27  2A                 	db	42
   697  00FE28  2A                 	db	42
   698  00FE29  2A                 	db	42
   699  00FE2A  2A                 	db	42
   700  00FE2B  2A                 	db	42
   701  00FE2C  2A                 	db	42
   702  00FE2D  2A                 	db	42
   703  00FE2E  2A                 	db	42
   704  00FE2F  2A                 	db	42
   705  00FE30  2A                 	db	42
   706  00FE31  2A                 	db	42
   707  00FE32  2A                 	db	42
   708  00FE33  2A                 	db	42
   709  00FE34  2A                 	db	42
   710  00FE35  2A                 	db	42
   711  00FE36  2A                 	db	42
   712  00FE37  2A                 	db	42
   713  00FE38  2A                 	db	42
   714  00FE39  2A                 	db	42
   715  00FE3A  2A                 	db	42
   716  00FE3B  2A                 	db	42
   717  00FE3C  2A                 	db	42
   718  00FE3D  2A                 	db	42
   719  00FE3E  2A                 	db	42
   720  00FE3F  2A                 	db	42
   721  00FE40  2A                 	db	42
   722  00FE41  2A                 	db	42
   723  00FE42  2A                 	db	42
   724  00FE43  2A                 	db	42
   725  00FE44  2A                 	db	42
   726  00FE45  2A                 	db	42
   727  00FE46  2A                 	db	42
   728  00FE47  2A                 	db	42
   729  00FE48  2A                 	db	42
   730  00FE49  2A                 	db	42
   731  00FE4A  2A                 	db	42
   732  00FE4B  2A                 	db	42
   733  00FE4C  2A                 	db	42
   734  00FE4D  2A                 	db	42
   735  00FE4E  2A                 	db	42
   736  00FE4F  2A                 	db	42
   737  00FE50  2A                 	db	42
   738  00FE51  2A                 	db	42
   739  00FE52  2A                 	db	42
   740  00FE53  0D                 	db	13
   741  00FE54  0A                 	db	10
   742  00FE55  00                 	db	0
   743  00FE56                     __end_of_Welcome:
   744                           	opt stack 0
   745  00FE56                     _configDescriptor1:
   746                           	opt stack 0
   747  00FE56  09                 	db	9
   748  00FE57  02                 	db	2
   749  00FE58  43                 	db	67
   750  00FE59  00                 	db	0
   751  00FE5A  02                 	db	2
   752  00FE5B  01                 	db	1
   753  00FE5C  00                 	db	0
   754  00FE5D  C0                 	db	192
   755  00FE5E  32                 	db	50
   756  00FE5F  09                 	db	9
   757  00FE60  04                 	db	4
   758  00FE61  00                 	db	0
   759  00FE62  00                 	db	0
   760  00FE63  01                 	db	1
   761  00FE64  02                 	db	2
   762  00FE65  02                 	db	2
   763  00FE66  01                 	db	1
   764  00FE67  00                 	db	0
   765  00FE68  05                 	db	5
   766  00FE69  24                 	db	36
   767  00FE6A  00                 	db	0
   768  00FE6B  10                 	db	16
   769  00FE6C  01                 	db	1
   770  00FE6D  04                 	db	4
   771  00FE6E  24                 	db	36
   772  00FE6F  02                 	db	2
   773  00FE70  02                 	db	2
   774  00FE71  05                 	db	5
   775  00FE72  24                 	db	36
   776  00FE73  06                 	db	6
   777  00FE74  00                 	db	0
   778  00FE75  01                 	db	1
   779  00FE76  05                 	db	5
   780  00FE77  24                 	db	36
   781  00FE78  01                 	db	1
   782  00FE79  00                 	db	0
   783  00FE7A  01                 	db	1
   784  00FE7B  07                 	db	7
   785  00FE7C  05                 	db	5
   786  00FE7D  81                 	db	129
   787  00FE7E  03                 	db	3
   788  00FE7F  08                 	db	8
   789  00FE80  00                 	db	0
   790  00FE81  02                 	db	2
   791  00FE82  09                 	db	9
   792  00FE83  04                 	db	4
   793  00FE84  01                 	db	1
   794  00FE85  00                 	db	0
   795  00FE86  02                 	db	2
   796  00FE87  0A                 	db	10
   797  00FE88  00                 	db	0
   798  00FE89  00                 	db	0
   799  00FE8A  00                 	db	0
   800  00FE8B  07                 	db	7
   801  00FE8C  05                 	db	5
   802  00FE8D  02                 	db	2
   803  00FE8E  02                 	db	2
   804  00FE8F  40                 	db	64
   805  00FE90  00                 	db	0
   806  00FE91  00                 	db	0
   807  00FE92  07                 	db	7
   808  00FE93  05                 	db	5
   809  00FE94  82                 	db	130
   810  00FE95  02                 	db	2
   811  00FE96  40                 	db	64
   812  00FE97  00                 	db	0
   813  00FE98  00                 	db	0
   814  00FE99                     __end_of_configDescriptor1:
   815                           	opt stack 0
   816  00FE99                     _sd002:
   817                           	opt stack 0
   818  00FE99  26                 	db	38
   819  00FE9A  03                 	db	3
   820  00FE9B  0054               	dw	84
   821  00FE9D  0065               	dw	101
   822  00FE9F  0072               	dw	114
   823  00FEA1  006D               	dw	109
   824  00FEA3  0069               	dw	105
   825  00FEA5  006E               	dw	110
   826  00FEA7  0061               	dw	97
   827  00FEA9  006C               	dw	108
   828  00FEAB  0020               	dw	32
   829  00FEAD  0049               	dw	73
   830  00FEAF  006E               	dw	110
   831  00FEB1  0074               	dw	116
   832  00FEB3  0065               	dw	101
   833  00FEB5  0072               	dw	114
   834  00FEB7  0066               	dw	102
   835  00FEB9  0061               	dw	97
   836  00FEBB  0063               	dw	99
   837  00FEBD  0065               	dw	101
   838  00FEBF                     __end_of_sd002:
   839                           	opt stack 0
   840  00FEBF                     _sd001:
   841                           	opt stack 0
   842  00FEBF  1E                 	db	30
   843  00FEC0  03                 	db	3
   844  00FEC1  004D               	dw	77
   845  00FEC3  0065               	dw	101
   846  00FEC5  0072               	dw	114
   847  00FEC7  0063               	dw	99
   848  00FEC9  0075               	dw	117
   849  00FECB  0072               	dw	114
   850  00FECD  0079               	dw	121
   851  00FECF  0020               	dw	32
   852  00FED1  0053               	dw	83
   853  00FED3  0079               	dw	121
   854  00FED5  0073               	dw	115
   855  00FED7  0074               	dw	116
   856  00FED9  0065               	dw	101
   857  00FEDB  006D               	dw	109
   858  00FEDD                     __end_of_sd001:
   859                           	opt stack 0
   860  00FEDD                     _MsgReady:
   861                           	opt stack 0
   862  00FEDD  0D                 	db	13
   863  00FEDE  0A                 	db	10
   864  00FEDF  53                 	db	83
   865  00FEE0  79                 	db	121
   866  00FEE1  73                 	db	115
   867  00FEE2  74                 	db	116
   868  00FEE3  65                 	db	101
   869  00FEE4  6D                 	db	109
   870  00FEE5  20                 	db	32
   871  00FEE6  52                 	db	82
   872  00FEE7  65                 	db	101
   873  00FEE8  61                 	db	97
   874  00FEE9  64                 	db	100
   875  00FEEA  79                 	db	121
   876  00FEEB  2E                 	db	46
   877  00FEEC  2E                 	db	46
   878  00FEED  2E                 	db	46
   879  00FEEE  20                 	db	32
   880  00FEEF  0D                 	db	13
   881  00FEF0  0A                 	db	10
   882  00FEF1  0D                 	db	13
   883  00FEF2  0A                 	db	10
   884  00FEF3  00                 	db	0
   885  00FEF4                     __end_of_MsgReady:
   886                           	opt stack 0
   887  00FEF4                     _device_dsc:
   888                           	opt stack 0
   889  00FEF4  12                 	db	18
   890  00FEF5  01                 	db	1
   891  00FEF6  0200               	dw	512
   892  00FEF8  02                 	db	2
   893  00FEF9  00                 	db	0
   894  00FEFA  00                 	db	0
   895  00FEFB  08                 	db	8
   896  00FEFC  04D8               	dw	1240
   897  00FEFE  000A               	dw	10
   898  00FF00  0100               	dw	256
   899  00FF02  01                 	db	1
   900  00FF03  02                 	db	2
   901  00FF04  00                 	db	0
   902  00FF05  01                 	db	1
   903  00FF06                     __end_of_device_dsc:
   904                           	opt stack 0
   905  00FF06                     _sd000:
   906                           	opt stack 0
   907  00FF06  04                 	db	4
   908  00FF07  03                 	db	3
   909  00FF08  0409               	dw	1033
   910  00FF0A                     __end_of_sd000:
   911                           	opt stack 0
   912  0000                     _UEP0bits	set	3878
   913  0000                     _UIEbits	set	3894
   914  0000                     _UADDR	set	3896
   915  0000                     _UIE	set	3894
   916  0000                     _UEIE	set	3895
   917  0000                     _UCFG	set	3897
   918  0000                     _DSCONLbits	set	3916
   919  0000                     _DSGPR1	set	3919
   920  0000                     _DSGPR0	set	3918
   921  0000                     _DSCONHbits	set	3917
   922  0000                     _RTCCAL	set	3902
   923  0000                     _PADCFG1bits	set	3900
   924  0000                     _RTCCFGbits	set	3903
   925  0000                     _UEP1	set	3879
   926  0000                     _UEP0	set	3878
   927  0000                     _T1CONbits	set	4045
   928  0000                     _PORTDbits	set	3971
   929  0000                     _USTAT	set	3940
   930  0000                     _PIR2bits	set	4001
   931  0000                     _UCON	set	3941
   932  0000                     _UIRbits	set	3938
   933  0000                     _UCONbits	set	3941
   934  0000                     _UIR	set	3938
   935  0000                     _UEIR	set	3939
   936  0000                     _PIE2bits	set	4000
   937  0000                     _LATEbits	set	3981
   938  0000                     _TRISEbits	set	3990
   939  0000                     _WDTCONbits	set	4032
   940  0000                     _OSCCONbits	set	4051
   941  0000                     _BAUDCON2	set	3964
   942  0000                     _RCSTA2	set	3996
   943  0000                     _BAUDCON1	set	3966
   944  0000                     _RCSTA1	set	4012
   945  0000                     _TRISCbits	set	3988
   946  0000                     _TXSTA2	set	4008
   947  0000                     _TXSTA1	set	4013
   948  0000                     _RCREG2	set	4010
   949  0000                     _RCREG1	set	4015
   950  0000                     _TXREG2	set	4009
   951  0000                     _TXREG1	set	4014
   952  0000                     _SPBRG2	set	4011
   953  0000                     _SPBRGH2	set	3965
   954  0000                     _SPBRG1	set	4016
   955  0000                     _SPBRGH1	set	3967
   956  0000                     _PR4	set	3959
   957  0000                     _PR2	set	4043
   958  0000                     _PIE1bits	set	3997
   959  0000                     _IPR1bits	set	3999
   960  0000                     _T4CONbits	set	3958
   961  0000                     _T2CONbits	set	4042
   962  0000                     _ALRMVALL	set	3982
   963  0000                     _ALRMVALH	set	3983
   964  0000                     _RTCVALH	set	3993
   965  0000                     _RTCVALL	set	3992
   966  0000                     _ALRMRPTbits	set	3984
   967  0000                     _ALRMCFGbits	set	3985
   968  0000                     _PIE3bits	set	4003
   969  0000                     _IPR3bits	set	4005
   970  0000                     _INTCON2bits	set	4081
   971  0000                     _TRISBbits	set	3987
   972  0000                     _OSCTUNEbits	set	3995
   973  0000                     _SSP2CON1	set	3954
   974  0000                     _TRISDbits	set	3989
   975  0000                     _SSP2BUF	set	3957
   976  0000                     _SSP2CON2bits	set	3953
   977  0000                     _SSP2STAT	set	3955
   978  0000                     _SSP2CON2	set	3953
   979  0000                     _SSP2ADD	set	3956
   980  0000                     _PIR1bits	set	3998
   981  0000                     _PIR3bits	set	4004
   982  0000                     _INTCON3bits	set	4080
   983  0000                     _INTCONbits	set	4082
   984  0000                     _RCONbits	set	4048
   985  00FF0A                     STR_62:
   986  00FF0A  42                 	db	66	;'B'
   987  00FF0B  75                 	db	117	;'u'
   988  00FF0C  69                 	db	105	;'i'
   989  00FF0D  6C                 	db	108	;'l'
   990  00FF0E  64                 	db	100	;'d'
   991  00FF0F  20                 	db	32
   992  00FF10  44                 	db	68	;'D'
   993  00FF11  61                 	db	97	;'a'
   994  00FF12  74                 	db	116	;'t'
   995  00FF13  65                 	db	101	;'e'
   996  00FF14  20                 	db	32
   997  00FF15  28                 	db	40
   998  00FF16  64                 	db	100	;'d'
   999  00FF17  2D                 	db	45
  1000  00FF18  6D                 	db	109	;'m'
  1001  00FF19  2D                 	db	45
  1002  00FF1A  79                 	db	121	;'y'
  1003  00FF1B  29                 	db	41
  1004  00FF1C  3A                 	db	58	;':'
  1005  00FF1D  20                 	db	32
  1006  00FF1E  00                 	db	0
  1007  00FF1F                     STR_58:
  1008  00FF1F  46                 	db	70	;'F'
  1009  00FF20  72                 	db	114	;'r'
  1010  00FF21  61                 	db	97	;'a'
  1011  00FF22  6D                 	db	109	;'m'
  1012  00FF23  65                 	db	101	;'e'
  1013  00FF24  77                 	db	119	;'w'
  1014  00FF25  6F                 	db	111	;'o'
  1015  00FF26  72                 	db	114	;'r'
  1016  00FF27  6B                 	db	107	;'k'
  1017  00FF28  20                 	db	32
  1018  00FF29  56                 	db	86	;'V'
  1019  00FF2A  65                 	db	101	;'e'
  1020  00FF2B  72                 	db	114	;'r'
  1021  00FF2C  73                 	db	115	;'s'
  1022  00FF2D  69                 	db	105	;'i'
  1023  00FF2E  6F                 	db	111	;'o'
  1024  00FF2F  6E                 	db	110	;'n'
  1025  00FF30  3A                 	db	58	;':'
  1026  00FF31  20                 	db	32
  1027  00FF32  00                 	db	0
  1028  00FF33  41                 	db	65	;'A'
  1029  00FF34  54                 	db	84	;'T'
  1030  00FF35  2B                 	db	43
  1031  00FF36  43                 	db	67	;'C'
  1032  00FF37  49                 	db	73	;'I'
  1033  00FF38  50                 	db	80	;'P'
  1034  00FF39  53                 	db	83	;'S'
  1035  00FF3A  45                 	db	69	;'E'
  1036  00FF3B  52                 	db	82	;'R'
  1037  00FF3C  56                 	db	86	;'V'
  1038  00FF3D  45                 	db	69	;'E'
  1039  00FF3E  52                 	db	82	;'R'
  1040  00FF3F  3D                 	db	61	;'='
  1041  00FF40  00                 	db	0
  1042  00FF41  41                 	db	65	;'A'
  1043  00FF42  54                 	db	84	;'T'
  1044  00FF43  2B                 	db	43
  1045  00FF44  43                 	db	67	;'C'
  1046  00FF45  49                 	db	73	;'I'
  1047  00FF46  50                 	db	80	;'P'
  1048  00FF47  43                 	db	67	;'C'
  1049  00FF48  4C                 	db	76	;'L'
  1050  00FF49  4F                 	db	79	;'O'
  1051  00FF4A  53                 	db	83	;'S'
  1052  00FF4B  45                 	db	69	;'E'
  1053  00FF4C  3D                 	db	61	;'='
  1054  00FF4D  00                 	db	0
  1055  00FF4E                     STR_3:
  1056  00FF4E  41                 	db	65	;'A'
  1057  00FF4F  54                 	db	84	;'T'
  1058  00FF50  2B                 	db	43
  1059  00FF51  43                 	db	67	;'C'
  1060  00FF52  49                 	db	73	;'I'
  1061  00FF53  50                 	db	80	;'P'
  1062  00FF54  53                 	db	83	;'S'
  1063  00FF55  54                 	db	84	;'T'
  1064  00FF56  41                 	db	65	;'A'
  1065  00FF57  52                 	db	82	;'R'
  1066  00FF58  54                 	db	84	;'T'
  1067  00FF59  3D                 	db	61	;'='
  1068  00FF5A  00                 	db	0
  1069  00FF5B                     STR_15:
  1070  00FF5B  41                 	db	65	;'A'
  1071  00FF5C  54                 	db	84	;'T'
  1072  00FF5D  2B                 	db	43
  1073  00FF5E  43                 	db	67	;'C'
  1074  00FF5F  49                 	db	73	;'I'
  1075  00FF60  50                 	db	80	;'P'
  1076  00FF61  53                 	db	83	;'S'
  1077  00FF62  45                 	db	69	;'E'
  1078  00FF63  4E                 	db	78	;'N'
  1079  00FF64  44                 	db	68	;'D'
  1080  00FF65  3D                 	db	61	;'='
  1081  00FF66  00                 	db	0
  1082  00FF67  41                 	db	65	;'A'
  1083  00FF68  54                 	db	84	;'T'
  1084  00FF69  2B                 	db	43
  1085  00FF6A  43                 	db	67	;'C'
  1086  00FF6B  49                 	db	73	;'I'
  1087  00FF6C  50                 	db	80	;'P'
  1088  00FF6D  4D                 	db	77	;'M'
  1089  00FF6E  4F                 	db	79	;'O'
  1090  00FF6F  44                 	db	68	;'D'
  1091  00FF70  45                 	db	69	;'E'
  1092  00FF71  3D                 	db	61	;'='
  1093  00FF72  00                 	db	0
  1094  00FF73  41                 	db	65	;'A'
  1095  00FF74  54                 	db	84	;'T'
  1096  00FF75  2B                 	db	43
  1097  00FF76  43                 	db	67	;'C'
  1098  00FF77  49                 	db	73	;'I'
  1099  00FF78  50                 	db	80	;'P'
  1100  00FF79  43                 	db	67	;'C'
  1101  00FF7A  4C                 	db	76	;'L'
  1102  00FF7B  4F                 	db	79	;'O'
  1103  00FF7C  53                 	db	83	;'S'
  1104  00FF7D  45                 	db	69	;'E'
  1105  00FF7E  00                 	db	0
  1106  00FF7F                     STR_31:
  1107  00FF7F  41                 	db	65	;'A'
  1108  00FF80  54                 	db	84	;'T'
  1109  00FF81  2B                 	db	43
  1110  00FF82  43                 	db	67	;'C'
  1111  00FF83  57                 	db	87	;'W'
  1112  00FF84  51                 	db	81	;'Q'
  1113  00FF85  41                 	db	65	;'A'
  1114  00FF86  50                 	db	80	;'P'
  1115  00FF87  0D                 	db	13
  1116  00FF88  0A                 	db	10
  1117  00FF89  00                 	db	0
  1118  00FF8A  41                 	db	65	;'A'
  1119  00FF8B  54                 	db	84	;'T'
  1120  00FF8C  2B                 	db	43
  1121  00FF8D  43                 	db	67	;'C'
  1122  00FF8E  57                 	db	87	;'W'
  1123  00FF8F  4D                 	db	77	;'M'
  1124  00FF90  4F                 	db	79	;'O'
  1125  00FF91  44                 	db	68	;'D'
  1126  00FF92  45                 	db	69	;'E'
  1127  00FF93  3D                 	db	61	;'='
  1128  00FF94  00                 	db	0
  1129  00FF95  41                 	db	65	;'A'
  1130  00FF96  54                 	db	84	;'T'
  1131  00FF97  2B                 	db	43
  1132  00FF98  43                 	db	67	;'C'
  1133  00FF99  49                 	db	73	;'I'
  1134  00FF9A  50                 	db	80	;'P'
  1135  00FF9B  4D                 	db	77	;'M'
  1136  00FF9C  55                 	db	85	;'U'
  1137  00FF9D  58                 	db	88	;'X'
  1138  00FF9E  3D                 	db	61	;'='
  1139  00FF9F  00                 	db	0
  1140  00FFA0  41                 	db	65	;'A'
  1141  00FFA1  54                 	db	84	;'T'
  1142  00FFA2  2B                 	db	43
  1143  00FFA3  43                 	db	67	;'C'
  1144  00FFA4  57                 	db	87	;'W'
  1145  00FFA5  4A                 	db	74	;'J'
  1146  00FFA6  41                 	db	65	;'A'
  1147  00FFA7  50                 	db	80	;'P'
  1148  00FFA8  3D                 	db	61	;'='
  1149  00FFA9  00                 	db	0
  1150  00FFAA  41                 	db	65	;'A'
  1151  00FFAB  54                 	db	84	;'T'
  1152  00FFAC  2B                 	db	43
  1153  00FFAD  43                 	db	67	;'C'
  1154  00FFAE  49                 	db	73	;'I'
  1155  00FFAF  50                 	db	80	;'P'
  1156  00FFB0  41                 	db	65	;'A'
  1157  00FFB1  50                 	db	80	;'P'
  1158  00FFB2  3D                 	db	61	;'='
  1159  00FFB3  00                 	db	0
  1160  00FFB4  41                 	db	65	;'A'
  1161  00FFB5  54                 	db	84	;'T'
  1162  00FFB6  2B                 	db	43
  1163  00FFB7  43                 	db	67	;'C'
  1164  00FFB8  57                 	db	87	;'W'
  1165  00FFB9  53                 	db	83	;'S'
  1166  00FFBA  41                 	db	65	;'A'
  1167  00FFBB  50                 	db	80	;'P'
  1168  00FFBC  3D                 	db	61	;'='
  1169  00FFBD  00                 	db	0
  1170  00FFBE  41                 	db	65	;'A'
  1171  00FFBF  54                 	db	84	;'T'
  1172  00FFC0  2B                 	db	43
  1173  00FFC1  52                 	db	82	;'R'
  1174  00FFC2  53                 	db	83	;'S'
  1175  00FFC3  54                 	db	84	;'T'
  1176  00FFC4  0D                 	db	13
  1177  00FFC5  0A                 	db	10
  1178  00FFC6  00                 	db	0
  1179  00FFC7                     STR_14:
  1180  00FFC7  43                 	db	67	;'C'
  1181  00FFC8  4F                 	db	79	;'O'
  1182  00FFC9  4E                 	db	78	;'N'
  1183  00FFCA  4E                 	db	78	;'N'
  1184  00FFCB  45                 	db	69	;'E'
  1185  00FFCC  43                 	db	67	;'C'
  1186  00FFCD  54                 	db	84	;'T'
  1187  00FFCE  00                 	db	0
  1188  00FFCF                     STR_1:
  1189  00FFCF  45                 	db	69	;'E'
  1190  00FFD0  52                 	db	82	;'R'
  1191  00FFD1  52                 	db	82	;'R'
  1192  00FFD2  4F                 	db	79	;'O'
  1193  00FFD3  52                 	db	82	;'R'
  1194  00FFD4  00                 	db	0
  1195  00FFD5                     STR_2:
  1196  00FFD5  2B                 	db	43
  1197  00FFD6  49                 	db	73	;'I'
  1198  00FFD7  50                 	db	80	;'P'
  1199  00FFD8  44                 	db	68	;'D'
  1200  00FFD9  00                 	db	0
  1201  00FFDA                     STR_28:
  1202  00FFDA  22                 	db	34
  1203  00FFDB  2C                 	db	44
  1204  00FFDC  22                 	db	34
  1205  00FFDD  00                 	db	0
  1206  00FFDE                     STR_7:
  1207  00FFDE  54                 	db	84	;'T'
  1208  00FFDF  43                 	db	67	;'C'
  1209  00FFE0  50                 	db	80	;'P'
  1210  00FFE1  00                 	db	0
  1211  00FFE2                     STR_6:
  1212  00FFE2  55                 	db	85	;'U'
  1213  00FFE3  44                 	db	68	;'D'
  1214  00FFE4  50                 	db	80	;'P'
  1215  00FFE5  00                 	db	0
  1216  00FFE6                     STR_46:
  1217  00FFE6  22                 	db	34
  1218  00FFE7  2C                 	db	44
  1219  00FFE8  00                 	db	0
  1220  00FFE9                     STR_63:
  1221  00FFE9  2D                 	db	45
  1222  00FFEA  00                 	db	0
  1223  00FFEB                     STR_59:
  1224  00FFEB  2E                 	db	46
  1225  00FFEC  00                 	db	0
  1226  00FFED                     STR_33:
  1227  00FFED  30                 	db	48	;'0'
  1228  00FFEE  00                 	db	0
  1229  00FFEF                     STR_22:
  1230  00FFEF  31                 	db	49	;'1'
  1231  00FFF0  00                 	db	0
  1232  00FFF1  32                 	db	50	;'2'
  1233  00FFF2  00                 	db	0
  1234  00FFF3  33                 	db	51	;'3'
  1235  00FFF4  00                 	db	0
  1236  00FFF5                     STR_18:
  1237  00FFF5  3E                 	db	62	;'>'
  1238  00FFF6  00                 	db	0
  1239  0000                     
  1240                           ; #config settings
  1241  00FFF7  00                 	db	0	; dummy byte at the end
  1242  0000                     
  1243                           	psect	cinit
  1244  00248A                     __pcinit:
  1245                           	opt stack 0
  1246  00248A                     start_initialization:
  1247                           	opt stack 0
  1248  00248A                     __initialization:
  1249                           	opt stack 0
  1250                           
  1251                           ; Initialize objects allocated to BANK2 (72 bytes)
  1252                           ; load TBLPTR registers with __pidataBANK2
  1253  00248A  0E62               	movlw	low __pidataBANK2
  1254  00248C  6EF6               	movwf	tblptrl,c
  1255  00248E  0E45               	movlw	high __pidataBANK2
  1256  002490  6EF7               	movwf	tblptrh,c
  1257  002492  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1258  002494  6EF8               	movwf	tblptru,c
  1259  002496  EE02  F08B         	lfsr	0,__pdataBANK2
  1260  00249A  EE10 F048          	lfsr	1,72
  1261  00249E                     copy_data0:
  1262  00249E  0009               	tblrd		*+
  1263  0024A0  CFF5 FFEE          	movff	tablat,postinc0
  1264  0024A4  50E5               	movf	postdec1,w,c
  1265  0024A6  50E1               	movf	fsr1l,w,c
  1266  0024A8  E1FA               	bnz	copy_data0
  1267                           
  1268                           ; Initialize objects allocated to BANK1 (58 bytes)
  1269                           ; load TBLPTR registers with __pidataBANK1
  1270  0024AA  0E52               	movlw	low __pidataBANK1
  1271  0024AC  6EF6               	movwf	tblptrl,c
  1272  0024AE  0E48               	movlw	high __pidataBANK1
  1273  0024B0  6EF7               	movwf	tblptrh,c
  1274  0024B2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1275  0024B4  6EF8               	movwf	tblptru,c
  1276  0024B6  EE01  F0C6         	lfsr	0,__pdataBANK1
  1277  0024BA  EE10 F03A          	lfsr	1,58
  1278  0024BE                     copy_data1:
  1279  0024BE  0009               	tblrd		*+
  1280  0024C0  CFF5 FFEE          	movff	tablat,postinc0
  1281  0024C4  50E5               	movf	postdec1,w,c
  1282  0024C6  50E1               	movf	fsr1l,w,c
  1283  0024C8  E1FA               	bnz	copy_data1
  1284                           
  1285                           ; Clear objects allocated to BANK13 (200 bytes)
  1286  0024CA  EE0D  F000         	lfsr	0,__pbssBANK13
  1287  0024CE  0EC8               	movlw	200
  1288  0024D0                     clear_0:
  1289  0024D0  6AEE               	clrf	postinc0,c
  1290  0024D2  06E8               	decf	wreg,f,c
  1291  0024D4  E1FD               	bnz	clear_0
  1292                           
  1293                           ; Clear objects allocated to BANK12 (250 bytes)
  1294  0024D6  EE0C  F000         	lfsr	0,__pbssBANK12
  1295  0024DA  0EFA               	movlw	250
  1296  0024DC                     clear_1:
  1297  0024DC  6AEE               	clrf	postinc0,c
  1298  0024DE  06E8               	decf	wreg,f,c
  1299  0024E0  E1FD               	bnz	clear_1
  1300                           
  1301                           ; Clear objects allocated to BANK11 (250 bytes)
  1302  0024E2  EE0B  F000         	lfsr	0,__pbssBANK11
  1303  0024E6  0EFA               	movlw	250
  1304  0024E8                     clear_2:
  1305  0024E8  6AEE               	clrf	postinc0,c
  1306  0024EA  06E8               	decf	wreg,f,c
  1307  0024EC  E1FD               	bnz	clear_2
  1308                           
  1309                           ; Clear objects allocated to BANK10 (200 bytes)
  1310  0024EE  EE0A  F000         	lfsr	0,__pbssBANK10
  1311  0024F2  0EC8               	movlw	200
  1312  0024F4                     clear_3:
  1313  0024F4  6AEE               	clrf	postinc0,c
  1314  0024F6  06E8               	decf	wreg,f,c
  1315  0024F8  E1FD               	bnz	clear_3
  1316                           
  1317                           ; Clear objects allocated to BANK9 (103 bytes)
  1318  0024FA  EE09  F000         	lfsr	0,__pbssBANK9
  1319  0024FE  0E67               	movlw	103
  1320  002500                     clear_4:
  1321  002500  6AEE               	clrf	postinc0,c
  1322  002502  06E8               	decf	wreg,f,c
  1323  002504  E1FD               	bnz	clear_4
  1324                           
  1325                           ; Clear objects allocated to BANK8 (200 bytes)
  1326  002506  EE08  F000         	lfsr	0,__pbssBANK8
  1327  00250A  0EC8               	movlw	200
  1328  00250C                     clear_5:
  1329  00250C  6AEE               	clrf	postinc0,c
  1330  00250E  06E8               	decf	wreg,f,c
  1331  002510  E1FD               	bnz	clear_5
  1332                           
  1333                           ; Clear objects allocated to BANK7 (253 bytes)
  1334  002512  EE07  F000         	lfsr	0,__pbssBANK7
  1335  002516  0EFD               	movlw	253
  1336  002518                     clear_6:
  1337  002518  6AEE               	clrf	postinc0,c
  1338  00251A  06E8               	decf	wreg,f,c
  1339  00251C  E1FD               	bnz	clear_6
  1340                           
  1341                           ; Clear objects allocated to BANK6 (200 bytes)
  1342  00251E  EE06  F000         	lfsr	0,__pbssBANK6
  1343  002522  0EC8               	movlw	200
  1344  002524                     clear_7:
  1345  002524  6AEE               	clrf	postinc0,c
  1346  002526  06E8               	decf	wreg,f,c
  1347  002528  E1FD               	bnz	clear_7
  1348                           
  1349                           ; Clear objects allocated to BANK5 (220 bytes)
  1350  00252A  EE05  F000         	lfsr	0,__pbssBANK5
  1351  00252E  0EDC               	movlw	220
  1352  002530                     clear_8:
  1353  002530  6AEE               	clrf	postinc0,c
  1354  002532  06E8               	decf	wreg,f,c
  1355  002534  E1FD               	bnz	clear_8
  1356                           
  1357                           ; Clear objects allocated to BANK3 (250 bytes)
  1358  002536  EE03  F000         	lfsr	0,__pbssBANK3
  1359  00253A  0EFA               	movlw	250
  1360  00253C                     clear_9:
  1361  00253C  6AEE               	clrf	postinc0,c
  1362  00253E  06E8               	decf	wreg,f,c
  1363  002540  E1FD               	bnz	clear_9
  1364                           
  1365                           ; Clear objects allocated to BANK2 (139 bytes)
  1366  002542  EE02  F000         	lfsr	0,__pbssBANK2
  1367  002546  0E8B               	movlw	139
  1368  002548                     clear_10:
  1369  002548  6AEE               	clrf	postinc0,c
  1370  00254A  06E8               	decf	wreg,f,c
  1371  00254C  E1FD               	bnz	clear_10
  1372                           
  1373                           ; Clear objects allocated to BANK1 (198 bytes)
  1374  00254E  EE01  F000         	lfsr	0,__pbssBANK1
  1375  002552  0EC6               	movlw	198
  1376  002554                     clear_11:
  1377  002554  6AEE               	clrf	postinc0,c
  1378  002556  06E8               	decf	wreg,f,c
  1379  002558  E1FD               	bnz	clear_11
  1380                           
  1381                           ; Clear objects allocated to BANK4 (164 bytes)
  1382  00255A  EE04  F040         	lfsr	0,__pbssBANK4
  1383  00255E  0EA4               	movlw	164
  1384  002560                     clear_12:
  1385  002560  6AEE               	clrf	postinc0,c
  1386  002562  06E8               	decf	wreg,f,c
  1387  002564  E1FD               	bnz	clear_12
  1388                           
  1389                           ; Clear objects allocated to BANK0 (16 bytes)
  1390  002566  EE00  F0F0         	lfsr	0,__pbssBANK0
  1391  00256A  0E10               	movlw	16
  1392  00256C                     clear_13:
  1393  00256C  6AEE               	clrf	postinc0,c
  1394  00256E  06E8               	decf	wreg,f,c
  1395  002570  E1FD               	bnz	clear_13
  1396                           
  1397                           ; Clear objects allocated to COMRAM (31 bytes)
  1398  002572  EE00  F03E         	lfsr	0,__pbssCOMRAM
  1399  002576  0E1F               	movlw	31
  1400  002578                     clear_14:
  1401  002578  6AEE               	clrf	postinc0,c
  1402  00257A  06E8               	decf	wreg,f,c
  1403  00257C  E1FD               	bnz	clear_14
  1404  00257E                     end_of_initialization:
  1405                           	opt stack 0
  1406  00257E                     __end_of__initialization:
  1407                           	opt stack 0
  1408  00257E  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1409  002580  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1410  002582  0100               	movlb	0
  1411  002584  EF90  F027         	goto	_main	;jump to C main() function
  1412                           tblptru	equ	0xFF8
  1413                           tblptrh	equ	0xFF7
  1414                           tblptrl	equ	0xFF6
  1415                           tablat	equ	0xFF5
  1416                           postinc0	equ	0xFEE
  1417                           wreg	equ	0xFE8
  1418                           postdec1	equ	0xFE5
  1419                           fsr1l	equ	0xFE1
  1420                           
  1421                           	psect	bssCOMRAM
  1422  00003E                     __pbssCOMRAM:
  1423                           	opt stack 0
  1424  00003E                     _pBDTEntryIn:
  1425                           	opt stack 0
  1426  00003E                     	ds	6
  1427  000044                     _CDCDataOutHandle:
  1428                           	opt stack 0
  1429  000044                     	ds	2
  1430  000046                     _cdc_tx_len:
  1431                           	opt stack 0
  1432  000046                     	ds	1
  1433  000047                     _cdc_rx_len:
  1434                           	opt stack 0
  1435  000047                     	ds	1
  1436  000048                     _USBStatusStageEnabledFlag2:
  1437                           	opt stack 0
  1438  000048                     	ds	1
  1439  000049                     _USBStatusStageEnabledFlag1:
  1440                           	opt stack 0
  1441  000049                     	ds	1
  1442  00004A                     _USBStatusStageTimeoutCounter:
  1443                           	opt stack 0
  1444  00004A                     	ds	1
  1445  00004B                     _endpoint_number:
  1446                           	opt stack 0
  1447  00004B                     	ds	1
  1448  00004C                     _controlTransferState:
  1449                           	opt stack 0
  1450  00004C                     	ds	1
  1451  00004D                     _shortPacketStatus:
  1452                           	opt stack 0
  1453  00004D                     	ds	1
  1454  00004E                     _I2cComSts:
  1455                           	opt stack 0
  1456  00004E                     	ds	1
  1457  00004F                     _LenLocal:
  1458                           	opt stack 0
  1459  00004F                     	ds	1
  1460  000050                     _IdLocal:
  1461                           	opt stack 0
  1462  000050                     	ds	1
  1463  000051                     _ModeLocal:
  1464                           	opt stack 0
  1465  000051                     	ds	1
  1466  000052                     _USBActiveConfiguration:
  1467                           	opt stack 0
  1468  000052                     	ds	1
  1469  000053                     _I2cReadDataEvt:
  1470                           	opt stack 0
  1471  000053                     	ds	1
  1472  000054                     _I2cWriteDataEvt:
  1473                           	opt stack 0
  1474  000054                     	ds	1
  1475  000055                     _WifiReceiveData:
  1476                           	opt stack 0
  1477  000055                     	ds	1
  1478  000056                     _WifiSendData:
  1479                           	opt stack 0
  1480  000056                     	ds	1
  1481  000057                     _StartConnection:
  1482                           	opt stack 0
  1483  000057                     	ds	1
  1484  000058                     _WifiReceiveNetData:
  1485                           	opt stack 0
  1486  000058                     	ds	1
  1487  000059                     _NewWifiPacketParser:
  1488                           	opt stack 0
  1489  000059                     	ds	1
  1490  00005A                     _NewWifiPacket:
  1491                           	opt stack 0
  1492  00005A                     	ds	1
  1493  00005B                     _StartWifiModem:
  1494                           	opt stack 0
  1495  00005B                     	ds	1
  1496  00005C                     _NewWifiUartData:
  1497                           	opt stack 0
  1498  00005C                     	ds	1
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           postinc0	equ	0xFEE
  1504                           wreg	equ	0xFE8
  1505                           postdec1	equ	0xFE5
  1506                           fsr1l	equ	0xFE1
  1507                           
  1508                           	psect	bssBANK0
  1509  0000F0                     __pbssBANK0:
  1510                           	opt stack 0
  1511  0000F0                     _inPipes:
  1512                           	opt stack 0
  1513  0000F0                     	ds	6
  1514  0000F6                     _pBDTEntryEP0OutNext:
  1515                           	opt stack 0
  1516  0000F6                     	ds	2
  1517  0000F8                     _pBDTEntryEP0OutCurrent:
  1518                           	opt stack 0
  1519  0000F8                     	ds	2
  1520  0000FA                     Terminal@PackageLen:
  1521                           	opt stack 0
  1522  0000FA                     	ds	1
  1523  0000FB                     _cdc_trf_state:
  1524                           	opt stack 0
  1525  0000FB                     	ds	1
  1526  0000FC                     _USBDeferStatusStagePacket:
  1527                           	opt stack 0
  1528  0000FC                     	ds	1
  1529  0000FD                     _USBDeviceState:
  1530                           	opt stack 0
  1531  0000FD                     	ds	1
  1532  0000FE                     _SystemState:
  1533                           	opt stack 0
  1534  0000FE                     	ds	1
  1535  0000FF                     _USTATcopy:
  1536                           	opt stack 0
  1537  0000FF                     	ds	1
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           postdec1	equ	0xFE5
  1545                           fsr1l	equ	0xFE1
  1546                           
  1547                           	psect	bssBANK1
  1548  000100                     __pbssBANK1:
  1549                           	opt stack 0
  1550  000100                     _cdc_notice:
  1551                           	opt stack 0
  1552  000100                     	ds	10
  1553  00010A                     _Rtcm_SystemDate:
  1554                           	opt stack 0
  1555  00010A                     	ds	8
  1556  000112                     _outPipes:
  1557                           	opt stack 0
  1558  000112                     	ds	8
  1559  00011A                     _Rtcm_RtccAlarm:
  1560                           	opt stack 0
  1561  00011A                     	ds	6
  1562  000120                     _pBDTEntryOut:
  1563                           	opt stack 0
  1564  000120                     	ds	6
  1565  000126                     _BaudRateGen:
  1566                           	opt stack 0
  1567  000126                     	ds	4
  1568  00012A                     _USB1msTickCount:
  1569                           	opt stack 0
  1570  00012A                     	ds	4
  1571  00012E                     _OsTmr_OsTickCounter:
  1572                           	opt stack 0
  1573  00012E                     	ds	4
  1574  000132                     _pCDCDst:
  1575                           	opt stack 0
  1576  000132                     	ds	3
  1577  000135                     _pCDCSrc:
  1578                           	opt stack 0
  1579  000135                     	ds	3
  1580  000138                     _ep_data_out:
  1581                           	opt stack 0
  1582  000138                     	ds	3
  1583  00013B                     _ep_data_in:
  1584                           	opt stack 0
  1585  00013B                     	ds	3
  1586  00013E                     	ds	2
  1587  000140                     _CDCDataInHandle:
  1588                           	opt stack 0
  1589  000140                     	ds	2
  1590  000142                     _pDst:
  1591                           	opt stack 0
  1592  000142                     	ds	2
  1593  000144                     UpdateSchFlag@InterruptCounter:
  1594                           	opt stack 0
  1595  000144                     	ds	2
  1596  000146                     MdmWifi_StartWifiModemSm@Counter:
  1597                           	opt stack 0
  1598  000146                     	ds	2
  1599  000148                     _RxLen:
  1600                           	opt stack 0
  1601  000148                     	ds	2
  1602  00014A                     _MdmWifi_UartRxCounter:
  1603                           	opt stack 0
  1604  00014A                     	ds	2
  1605  00014C                     _ExtInt1IsrCallback:
  1606                           	opt stack 0
  1607  00014C                     	ds	2
  1608  00014E                     _ExtInt0IsrCallback:
  1609                           	opt stack 0
  1610  00014E                     	ds	2
  1611  000150                     _RtccIsrCallback:
  1612                           	opt stack 0
  1613  000150                     	ds	2
  1614  000152                     _Tmr4IsrCallback:
  1615                           	opt stack 0
  1616  000152                     	ds	2
  1617  000154                     _Tmr2IsrCallback:
  1618                           	opt stack 0
  1619  000154                     	ds	2
  1620  000156                     Term_MainSm@TermMainSmState:
  1621                           	opt stack 0
  1622  000156                     	ds	1
  1623  000157                     Terminal@FormatOption:
  1624                           	opt stack 0
  1625  000157                     	ds	1
  1626  000158                     Terminal@SlaveAddr:
  1627                           	opt stack 0
  1628  000158                     	ds	1
  1629  000159                     Terminal@TermState:
  1630                           	opt stack 0
  1631  000159                     	ds	1
  1632  00015A                     WifiTerminal@FirstRecFlag:
  1633                           	opt stack 0
  1634  00015A                     	ds	1
  1635  00015B                     _control_signal_bitmap:
  1636                           	opt stack 0
  1637  00015B                     	ds	1
  1638  00015C                     _cdc_mem_type:
  1639                           	opt stack 0
  1640  00015C                     	ds	1
  1641  00015D                     _USBTicksSinceSuspendEnd:
  1642                           	opt stack 0
  1643  00015D                     	ds	1
  1644  00015E                     _USBDeferOUTDataStagePackets:
  1645                           	opt stack 0
  1646  00015E                     	ds	1
  1647  00015F                     _USBDeferINDataStagePackets:
  1648                           	opt stack 0
  1649  00015F                     	ds	1
  1650  000160                     _BothEP0OutUOWNsSet:
  1651                           	opt stack 0
  1652  000160                     	ds	1
  1653  000161                     _USBBusIsSuspended:
  1654                           	opt stack 0
  1655  000161                     	ds	1
  1656  000162                     _RemoteWakeup:
  1657                           	opt stack 0
  1658  000162                     	ds	1
  1659  000163                     I2cSendMsgSm@I2cComState:
  1660                           	opt stack 0
  1661  000163                     	ds	1
  1662  000164                     _I2cBusStatus:
  1663                           	opt stack 0
  1664  000164                     	ds	1
  1665  000165                     ReceiveDataSm@WifiReceiveDataState:
  1666                           	opt stack 0
  1667  000165                     	ds	1
  1668  000166                     SendDataSm@WifiSendDataState:
  1669                           	opt stack 0
  1670  000166                     	ds	1
  1671  000167                     StartConnectionSm@StartConnState:
  1672                           	opt stack 0
  1673  000167                     	ds	1
  1674  000168                     _ConnStatus:
  1675                           	opt stack 0
  1676  000168                     	ds	1
  1677  000169                     _PortLocal:
  1678                           	opt stack 0
  1679  000169                     	ds	1
  1680  00016A                     _ProtocolLocal:
  1681                           	opt stack 0
  1682  00016A                     	ds	1
  1683  00016B                     MdmWifiGetUartData@Counter:
  1684                           	opt stack 0
  1685  00016B                     	ds	1
  1686  00016C                     MdmWifiGetUartData@WifiUartGetDataState:
  1687                           	opt stack 0
  1688  00016C                     	ds	1
  1689  00016D                     MdmWifi_StartWifiModemSm@WifiModeSmState:
  1690                           	opt stack 0
  1691  00016D                     	ds	1
  1692  00016E                     _WifiMdmStatus:
  1693                           	opt stack 0
  1694  00016E                     	ds	1
  1695  00016F                     Uart_Uart1RxIsr@UartRxData:
  1696                           	opt stack 0
  1697  00016F                     	ds	1
  1698  000170                     I2c_ReadData@ReadStatus:
  1699                           	opt stack 0
  1700  000170                     	ds	1
  1701  000171                     I2c_ReadData@TentativeCounter:
  1702                           	opt stack 0
  1703  000171                     	ds	1
  1704  000172                     I2c_ReadData@DataCounter:
  1705                           	opt stack 0
  1706  000172                     	ds	1
  1707  000173                     I2c_ReadData@I2cReadState:
  1708                           	opt stack 0
  1709  000173                     	ds	1
  1710  000174                     I2c_WriteData@WriteStatus:
  1711                           	opt stack 0
  1712  000174                     	ds	1
  1713  000175                     I2c_WriteData@TentativeCounter:
  1714                           	opt stack 0
  1715  000175                     	ds	1
  1716  000176                     I2c_WriteData@I2cNextState:
  1717                           	opt stack 0
  1718  000176                     	ds	1
  1719  000177                     I2c_WriteData@I2cWriteState:
  1720                           	opt stack 0
  1721  000177                     	ds	1
  1722  000178                     _UartConfig:
  1723                           	opt stack 0
  1724  000178                     	ds	21
  1725  00018D                     _I2cConfig:
  1726                           	opt stack 0
  1727  00018D                     	ds	10
  1728  000197                     _dummy_encapsulated_cmd_response:
  1729                           	opt stack 0
  1730  000197                     	ds	8
  1731  00019F                     _line_coding:
  1732                           	opt stack 0
  1733  00019F                     	ds	7
  1734  0001A6                     _I2cRxPacket:
  1735                           	opt stack 0
  1736  0001A6                     	ds	6
  1737  0001AC                     _I2cTxPacket:
  1738                           	opt stack 0
  1739  0001AC                     	ds	5
  1740  0001B1                     Terminal@Addr:
  1741                           	opt stack 0
  1742  0001B1                     	ds	4
  1743  0001B5                     Terminal@Len:
  1744                           	opt stack 0
  1745  0001B5                     	ds	4
  1746  0001B9                     _AlCfg:
  1747                           	opt stack 0
  1748  0001B9                     	ds	4
  1749  0001BD                     _RtcConfig:
  1750                           	opt stack 0
  1751  0001BD                     	ds	4
  1752  0001C1                     _USBAlternateInterface:
  1753                           	opt stack 0
  1754  0001C1                     	ds	2
  1755  0001C3                     _AlarmEvent:
  1756                           	opt stack 0
  1757  0001C3                     	ds	1
  1758  0001C4                     I2cDummyTx@DummyBuffer:
  1759                           	opt stack 0
  1760  0001C4                     	ds	1
  1761  0001C5                     _WifiGenericError:
  1762                           	opt stack 0
  1763  0001C5                     	ds	1
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           postinc0	equ	0xFEE
  1769                           wreg	equ	0xFE8
  1770                           postdec1	equ	0xFE5
  1771                           fsr1l	equ	0xFE1
  1772                           
  1773                           	psect	dataBANK1
  1774  0001C6                     __pdataBANK1:
  1775                           	opt stack 0
  1776  0001C6                     	ds	10
  1777  0001D0                     	ds	8
  1778  0001D8                     	ds	8
  1779  0001E0                     Terminal@EchoOption:
  1780                           	opt stack 0
  1781  0001E0                     	ds	1
  1782  0001E1                     _MainSystemTimebaseFlag:
  1783                           	opt stack 0
  1784  0001E1                     	ds	1
  1785  0001E2                     Term_MainSm@TermDelay:
  1786                           	opt stack 0
  1787  0001E2                     	ds	10
  1788  0001EC                     Led_MainTask@LedTimer1:
  1789                           	opt stack 0
  1790  0001EC                     	ds	10
  1791  0001F6                     SendDataSm@SwTimer:
  1792                           	opt stack 0
  1793  0001F6                     	ds	10
  1794                           tblptru	equ	0xFF8
  1795                           tblptrh	equ	0xFF7
  1796                           tblptrl	equ	0xFF6
  1797                           tablat	equ	0xFF5
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           postdec1	equ	0xFE5
  1801                           fsr1l	equ	0xFE1
  1802                           
  1803                           	psect	bssBANK2
  1804  000200                     __pbssBANK2:
  1805                           	opt stack 0
  1806  000200                     _cdc_data_rx:
  1807                           	opt stack 0
  1808  000200                     	ds	64
  1809  000240                     Terminal@TermRxBuffer:
  1810                           	opt stack 0
  1811  000240                     	ds	50
  1812  000272                     _AddressLocal:
  1813                           	opt stack 0
  1814  000272                     	ds	25
  1815                           tblptru	equ	0xFF8
  1816                           tblptrh	equ	0xFF7
  1817                           tblptrl	equ	0xFF6
  1818                           tablat	equ	0xFF5
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           postdec1	equ	0xFE5
  1822                           fsr1l	equ	0xFE1
  1823                           
  1824                           	psect	dataBANK2
  1825  00028B                     __pdataBANK2:
  1826                           	opt stack 0
  1827  00028B                     _TaskTable:
  1828                           	opt stack 0
  1829  00028B                     	ds	72
  1830                           tblptru	equ	0xFF8
  1831                           tblptrh	equ	0xFF7
  1832                           tblptrl	equ	0xFF6
  1833                           tablat	equ	0xFF5
  1834                           postinc0	equ	0xFEE
  1835                           wreg	equ	0xFE8
  1836                           postdec1	equ	0xFE5
  1837                           fsr1l	equ	0xFE1
  1838                           
  1839                           	psect	bssBANK3
  1840  000300                     __pbssBANK3:
  1841                           	opt stack 0
  1842  000300                     Terminal@UsbRxBuffer:
  1843                           	opt stack 0
  1844  000300                     	ds	200
  1845  0003C8                     Terminal@TermTxBuffer:
  1846                           	opt stack 0
  1847  0003C8                     	ds	50
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           postinc0	equ	0xFEE
  1853                           wreg	equ	0xFE8
  1854                           postdec1	equ	0xFE5
  1855                           fsr1l	equ	0xFE1
  1856                           
  1857                           	psect	bssBANK4
  1858  000440                     __pbssBANK4:
  1859                           	opt stack 0
  1860  000440                     Terminal@Payload:
  1861                           	opt stack 0
  1862  000440                     	ds	100
  1863  0004A4                     _cdc_data_tx:
  1864                           	opt stack 0
  1865  0004A4                     	ds	64
  1866                           tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           postinc0	equ	0xFEE
  1871                           wreg	equ	0xFE8
  1872                           postdec1	equ	0xFE5
  1873                           fsr1l	equ	0xFE1
  1874                           
  1875                           	psect	bssBANK5
  1876  000500                     __pbssBANK5:
  1877                           	opt stack 0
  1878  000500                     _OsAlarms:
  1879                           	opt stack 0
  1880  000500                     	ds	220
  1881                           tblptru	equ	0xFF8
  1882                           tblptrh	equ	0xFF7
  1883                           tblptrl	equ	0xFF6
  1884                           tablat	equ	0xFF5
  1885                           postinc0	equ	0xFEE
  1886                           wreg	equ	0xFE8
  1887                           postdec1	equ	0xFE5
  1888                           fsr1l	equ	0xFE1
  1889                           
  1890                           	psect	bssBANK6
  1891  000600                     __pbssBANK6:
  1892                           	opt stack 0
  1893  000600                     _MdmWifi_UartTxBuffer:
  1894                           	opt stack 0
  1895  000600                     	ds	100
  1896  000664                     _BufferLocal:
  1897                           	opt stack 0
  1898  000664                     	ds	100
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           postinc0	equ	0xFEE
  1904                           wreg	equ	0xFE8
  1905                           postdec1	equ	0xFE5
  1906                           fsr1l	equ	0xFE1
  1907                           
  1908                           	psect	bssBANK7
  1909  000700                     __pbssBANK7:
  1910                           	opt stack 0
  1911  000700                     _WifiRxPacket:
  1912                           	opt stack 0
  1913  000700                     	ds	253
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           postdec1	equ	0xFE5
  1921                           fsr1l	equ	0xFE1
  1922                           
  1923                           	psect	bssBANK8
  1924  000800                     __pbssBANK8:
  1925                           	opt stack 0
  1926  000800                     WifiTerminal@UartBuffer:
  1927                           	opt stack 0
  1928  000800                     	ds	200
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           postdec1	equ	0xFE5
  1936                           fsr1l	equ	0xFE1
  1937                           
  1938                           	psect	bssBANK9
  1939  000900                     __pbssBANK9:
  1940                           	opt stack 0
  1941  000900                     _WifiTxPacket:
  1942                           	opt stack 0
  1943  000900                     	ds	103
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1l	equ	0xFE1
  1952                           
  1953                           	psect	bssBANK10
  1954  000A00                     __pbssBANK10:
  1955                           	opt stack 0
  1956  000A00                     WifiTerminal@UsbBuffer:
  1957                           	opt stack 0
  1958  000A00                     	ds	200
  1959                           tblptru	equ	0xFF8
  1960                           tblptrh	equ	0xFF7
  1961                           tblptrl	equ	0xFF6
  1962                           tablat	equ	0xFF5
  1963                           postinc0	equ	0xFEE
  1964                           wreg	equ	0xFE8
  1965                           postdec1	equ	0xFE5
  1966                           fsr1l	equ	0xFE1
  1967                           
  1968                           	psect	bssBANK11
  1969  000B00                     __pbssBANK11:
  1970                           	opt stack 0
  1971  000B00                     _MdmWifi_UartRxBuffer:
  1972                           	opt stack 0
  1973  000B00                     	ds	250
  1974                           tblptru	equ	0xFF8
  1975                           tblptrh	equ	0xFF7
  1976                           tblptrl	equ	0xFF6
  1977                           tablat	equ	0xFF5
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           postdec1	equ	0xFE5
  1981                           fsr1l	equ	0xFE1
  1982                           
  1983                           	psect	bssBANK12
  1984  000C00                     __pbssBANK12:
  1985                           	opt stack 0
  1986  000C00                     _RxBuffer:
  1987                           	opt stack 0
  1988  000C00                     	ds	250
  1989                           tblptru	equ	0xFF8
  1990                           tblptrh	equ	0xFF7
  1991                           tblptrl	equ	0xFF6
  1992                           tablat	equ	0xFF5
  1993                           postinc0	equ	0xFEE
  1994                           wreg	equ	0xFE8
  1995                           postdec1	equ	0xFE5
  1996                           fsr1l	equ	0xFE1
  1997                           
  1998                           	psect	bssBANK13
  1999  000D00                     __pbssBANK13:
  2000                           	opt stack 0
  2001  000D00                     	ds	200
  2002                           tblptru	equ	0xFF8
  2003                           tblptrh	equ	0xFF7
  2004                           tblptrl	equ	0xFF6
  2005                           tablat	equ	0xFF5
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           postdec1	equ	0xFE5
  2009                           fsr1l	equ	0xFE1
  2010                           
  2011                           	psect	cstackBANK0
  2012  000060                     __pcstackBANK0:
  2013                           	opt stack 0
  2014  000060                     ??_isdigit:
  2015  000060                     ??_isspace:
  2016  000060                     ??_isupper:
  2017  000060                     ??_Rtcc_GetRtccValue:
  2018  000060                     ??_UartTxBufferStatus:
  2019  000060                     ??_USBStdGetDscHandler:
  2020  000060                     ??_USBStdGetStatusHandler:
  2021  000060                     ?_USBTransferOnePacket:
  2022                           	opt stack 0
  2023  000060                     ?_strlen:
  2024                           	opt stack 0
  2025  000060                     ?_strchr:
  2026                           	opt stack 0
  2027  000060                     ?___wmul:
  2028                           	opt stack 0
  2029  000060                     ?___awdiv:
  2030                           	opt stack 0
  2031  000060                     ?___awmod:
  2032                           	opt stack 0
  2033  000060                     ?___lwdiv:
  2034                           	opt stack 0
  2035  000060                     ?___lwmod:
  2036                           	opt stack 0
  2037  000060                     ?_GetOsTickCounter:
  2038                           	opt stack 0
  2039  000060                     ?___lmul:
  2040                           	opt stack 0
  2041  000060                     Irq_InitIntController@GlobalInt_HighPInt:
  2042                           	opt stack 0
  2043  000060                     SetAckStatus@AckSts:
  2044                           	opt stack 0
  2045  000060                     WriteByte@Byte:
  2046                           	opt stack 0
  2047  000060                     ReadByte@Byte:
  2048                           	opt stack 0
  2049  000060                     RtccIrqInit@Priority:
  2050                           	opt stack 0
  2051  000060                     Rtcc_SetRtcStatus@Status:
  2052                           	opt stack 0
  2053  000060                     TmrBInit@Prescaler:
  2054                           	opt stack 0
  2055  000060                     Tmr_TmrBIrqSet@Priority:
  2056                           	opt stack 0
  2057  000060                     Tmr_StartTmr@TmrNumb:
  2058                           	opt stack 0
  2059  000060                     UartWriteByte@ByteToWrite:
  2060                           	opt stack 0
  2061  000060                     USBTransferOnePacket@dir:
  2062                           	opt stack 0
  2063  000060                     USBConfigureEndpoint@direction:
  2064                           	opt stack 0
  2065  000060                     USBCtrlTrfTxService@byteToSend:
  2066                           	opt stack 0
  2067  000060                     USBCtrlTrfRxService@i:
  2068                           	opt stack 0
  2069  000060                     toupper@c:
  2070                           	opt stack 0
  2071  000060                     Mcu_StartSystemPll@PllStartupCounter:
  2072                           	opt stack 0
  2073  000060                     Rtcc_AlarmConfig@AlarmConfig:
  2074                           	opt stack 0
  2075  000060                     Rtcc_RegisterRtcIsrCallback@IsrCallback:
  2076                           	opt stack 0
  2077  000060                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2078                           	opt stack 0
  2079  000060                     GenerateEvt@Event:
  2080                           	opt stack 0
  2081  000060                     ReceiveEvt@Event:
  2082                           	opt stack 0
  2083  000060                     StringCopy@SourceStr:
  2084                           	opt stack 0
  2085  000060                     ClearBuffer@Buffer:
  2086                           	opt stack 0
  2087  000060                     ___wmul@multiplier:
  2088                           	opt stack 0
  2089  000060                     ___awdiv@dividend:
  2090                           	opt stack 0
  2091  000060                     ___awmod@dividend:
  2092                           	opt stack 0
  2093  000060                     ___lwdiv@dividend:
  2094                           	opt stack 0
  2095  000060                     ___lwmod@dividend:
  2096                           	opt stack 0
  2097  000060                     memcpy@d1:
  2098                           	opt stack 0
  2099  000060                     memset@p1:
  2100                           	opt stack 0
  2101  000060                     strcat@to:
  2102                           	opt stack 0
  2103  000060                     strcpy@to:
  2104                           	opt stack 0
  2105  000060                     strlen@s:
  2106                           	opt stack 0
  2107  000060                     strchr@ptr:
  2108                           	opt stack 0
  2109  000060                     ___lmul@multiplier:
  2110                           	opt stack 0
  2111                           
  2112                           ; 4 bytes @ 0x0
  2113  000060                     	ds	1
  2114  000061                     ??_USBConfigureEndpoint:
  2115  000061                     Irq_InitIntController@PerInt_LowPInt:
  2116                           	opt stack 0
  2117  000061                     Rtcc_GetRtccValue@RtccPtrVal:
  2118                           	opt stack 0
  2119  000061                     TmrBInit@Postscaler:
  2120                           	opt stack 0
  2121  000061                     Tmr_TmrBIrqSet@TmrIrqSts:
  2122                           	opt stack 0
  2123  000061                     UartWriteByte@Module:
  2124                           	opt stack 0
  2125  000061                     UartTxBufferStatus@Module:
  2126                           	opt stack 0
  2127  000061                     USBCtrlTrfRxService@byteToRead:
  2128                           	opt stack 0
  2129  000061                     USBCtrlTrfInHandler@lastDTS:
  2130                           	opt stack 0
  2131  000061                     _isdigit$5593:
  2132                           	opt stack 0
  2133  000061                     _isspace$5861:
  2134                           	opt stack 0
  2135  000061                     _isupper$5864:
  2136                           	opt stack 0
  2137  000061                     I2c_WriteData@WritePacket:
  2138                           	opt stack 0
  2139  000061                     Rtcc_RtcConfig@RtcConfig:
  2140                           	opt stack 0
  2141  000061                     USBTransferOnePacket@data:
  2142                           	opt stack 0
  2143  000061                     USBStdGetStatusHandler@p:
  2144                           	opt stack 0
  2145                           
  2146                           ; 2 bytes @ 0x1
  2147  000061                     	ds	1
  2148  000062                     ??_strlen:
  2149  000062                     ??_Rtcc_AlarmConfig:
  2150  000062                     ??_TmrBInit:
  2151  000062                     Irq_InitIntController@IntPriorityEn:
  2152                           	opt stack 0
  2153  000062                     Rtcc_GetRtccValue@RetValue:
  2154                           	opt stack 0
  2155  000062                     Tmr_TmrBIrqSet@TmrNumb:
  2156                           	opt stack 0
  2157  000062                     UartTxBufferStatus@TxBufferStatus:
  2158                           	opt stack 0
  2159  000062                     GenerateEvt@EventStatus:
  2160                           	opt stack 0
  2161  000062                     isdigit@c:
  2162                           	opt stack 0
  2163  000062                     isspace@c:
  2164                           	opt stack 0
  2165  000062                     isupper@c:
  2166                           	opt stack 0
  2167  000062                     Rtcm_SetAlarmAction@Action:
  2168                           	opt stack 0
  2169  000062                     StringCopy@DestStr:
  2170                           	opt stack 0
  2171  000062                     ClearBuffer@Len:
  2172                           	opt stack 0
  2173  000062                     ___wmul@multiplicand:
  2174                           	opt stack 0
  2175  000062                     ___awdiv@divisor:
  2176                           	opt stack 0
  2177  000062                     ___awmod@divisor:
  2178                           	opt stack 0
  2179  000062                     ___lwdiv@divisor:
  2180                           	opt stack 0
  2181  000062                     ___lwmod@divisor:
  2182                           	opt stack 0
  2183  000062                     memcpy@s1:
  2184                           	opt stack 0
  2185  000062                     memset@c:
  2186                           	opt stack 0
  2187  000062                     strcpy@from:
  2188                           	opt stack 0
  2189  000062                     strchr@chr:
  2190                           	opt stack 0
  2191  000062                     strcat@from:
  2192                           	opt stack 0
  2193                           
  2194                           ; 3 bytes @ 0x2
  2195  000062                     	ds	1
  2196  000063                     ??_isalpha:
  2197  000063                     ??_I2c_WriteData:
  2198  000063                     ??_Rtcc_RtcConfig:
  2199  000063                     Rtcc_GetRtccValue@RegValue:
  2200                           	opt stack 0
  2201  000063                     TmrBInit@TmrNumb:
  2202                           	opt stack 0
  2203  000063                     ReceiveEvt@EventStatus:
  2204                           	opt stack 0
  2205  000063                     USBTransferOnePacket@len:
  2206                           	opt stack 0
  2207  000063                     I2c_ReadData@ReadPacket:
  2208                           	opt stack 0
  2209  000063                     Uart_WriteString@StringToWrite:
  2210                           	opt stack 0
  2211  000063                     I2cSlv_SendI2cMsg@TxBuffer:
  2212                           	opt stack 0
  2213  000063                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2214                           	opt stack 0
  2215                           
  2216                           ; 2 bytes @ 0x3
  2217  000063                     	ds	1
  2218  000064                     ?_GetElapsedTime:
  2219                           	opt stack 0
  2220  000064                     ?_Rtcm_GetRtccDate:
  2221                           	opt stack 0
  2222  000064                     I2cSlv_I2cReadMsgSts@Result:
  2223                           	opt stack 0
  2224  000064                     USBTransferOnePacket@ep:
  2225                           	opt stack 0
  2226  000064                     ___awdiv@counter:
  2227                           	opt stack 0
  2228  000064                     ___awmod@counter:
  2229                           	opt stack 0
  2230  000064                     ___lwmod@counter:
  2231                           	opt stack 0
  2232  000064                     _isalpha$5858:
  2233                           	opt stack 0
  2234  000064                     OsTmr_StartTimer@Timer:
  2235                           	opt stack 0
  2236  000064                     StringCopy@Len:
  2237                           	opt stack 0
  2238  000064                     ClearBuffer@Index:
  2239                           	opt stack 0
  2240  000064                     ___wmul@product:
  2241                           	opt stack 0
  2242  000064                     ___lwdiv@quotient:
  2243                           	opt stack 0
  2244  000064                     memcpy@n:
  2245                           	opt stack 0
  2246  000064                     memset@n:
  2247                           	opt stack 0
  2248  000064                     strcpy@cp:
  2249                           	opt stack 0
  2250  000064                     strlen@cp:
  2251                           	opt stack 0
  2252  000064                     GetElapsedTime@StartTime:
  2253                           	opt stack 0
  2254  000064                     ___lmul@multiplicand:
  2255                           	opt stack 0
  2256                           
  2257                           ; 4 bytes @ 0x4
  2258  000064                     	ds	1
  2259  000065                     ??_I2c_ReadData:
  2260  000065                     Uart_WriteString@Module:
  2261                           	opt stack 0
  2262  000065                     I2cSlv_SendI2cMsg@SlaveAddr:
  2263                           	opt stack 0
  2264  000065                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2265                           	opt stack 0
  2266  000065                     USBConfigureEndpoint@EPNum:
  2267                           	opt stack 0
  2268  000065                     ___awdiv@sign:
  2269                           	opt stack 0
  2270  000065                     ___awmod@sign:
  2271                           	opt stack 0
  2272  000065                     isalpha@c:
  2273                           	opt stack 0
  2274  000065                     USBTransferOnePacket@handle:
  2275                           	opt stack 0
  2276  000065                     strcat@cp:
  2277                           	opt stack 0
  2278                           
  2279                           ; 2 bytes @ 0x5
  2280  000065                     	ds	1
  2281  000066                     ?_atoi:
  2282                           	opt stack 0
  2283  000066                     ?_strncmp:
  2284                           	opt stack 0
  2285  000066                     I2cSlv_SendI2cMsg@DataLenght:
  2286                           	opt stack 0
  2287  000066                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2288                           	opt stack 0
  2289  000066                     ___lwdiv@counter:
  2290                           	opt stack 0
  2291  000066                     OsAlrm_SetOsAlarm@OsAlarmId:
  2292                           	opt stack 0
  2293  000066                     MdmWifi_SendWifiMsg@TxBuffer:
  2294                           	opt stack 0
  2295  000066                     USBConfigureEndpoint@handle:
  2296                           	opt stack 0
  2297  000066                     putUSBUSART@data:
  2298                           	opt stack 0
  2299  000066                     StringCopy@Index:
  2300                           	opt stack 0
  2301  000066                     atoi@s:
  2302                           	opt stack 0
  2303  000066                     ___awdiv@quotient:
  2304                           	opt stack 0
  2305  000066                     memcpy@d:
  2306                           	opt stack 0
  2307  000066                     memset@p:
  2308                           	opt stack 0
  2309  000066                     strncmp@s1:
  2310                           	opt stack 0
  2311  000066                     OsTmr_StartTimer@Timeout:
  2312                           	opt stack 0
  2313                           
  2314                           ; 4 bytes @ 0x6
  2315  000066                     	ds	1
  2316  000067                     I2cSlv_SendI2cMsg@TxSts:
  2317                           	opt stack 0
  2318  000067                     I2cSlv_ReceiveI2cMsg@RxSts:
  2319                           	opt stack 0
  2320  000067                     CDCTxService@i:
  2321                           	opt stack 0
  2322  000067                     getsUSBUSART@buffer:
  2323                           	opt stack 0
  2324  000067                     utoa@buf:
  2325                           	opt stack 0
  2326                           
  2327                           ; 2 bytes @ 0x7
  2328  000067                     	ds	1
  2329  000068                     ??_atoi:
  2330  000068                     ??_GetElapsedTime:
  2331  000068                     Rtcc_SetRtccValue@Value:
  2332                           	opt stack 0
  2333  000068                     USBDeviceInit@i:
  2334                           	opt stack 0
  2335  000068                     USBEnableEndpoint@options:
  2336                           	opt stack 0
  2337  000068                     putUSBUSART@length:
  2338                           	opt stack 0
  2339  000068                     CDCTxService@byte_to_send:
  2340                           	opt stack 0
  2341  000068                     MdmWifi_ReceiveWifiMsg@RxBuffer:
  2342                           	opt stack 0
  2343  000068                     memcpy@s:
  2344                           	opt stack 0
  2345  000068                     strncmp@s2:
  2346                           	opt stack 0
  2347  000068                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  2348                           	opt stack 0
  2349  000068                     ___lmul@product:
  2350                           	opt stack 0
  2351                           
  2352                           ; 4 bytes @ 0x8
  2353  000068                     	ds	1
  2354  000069                     ??_Rtcc_SetRtccValue:
  2355  000069                     getsUSBUSART@len:
  2356                           	opt stack 0
  2357  000069                     USBEnableEndpoint@p:
  2358                           	opt stack 0
  2359  000069                     utoa@val:
  2360                           	opt stack 0
  2361                           
  2362                           ; 2 bytes @ 0x9
  2363  000069                     	ds	1
  2364  00006A                     atoi@sign:
  2365                           	opt stack 0
  2366  00006A                     memcpy@tmp:
  2367                           	opt stack 0
  2368  00006A                     MdmWifi_ReceiveWifiMsg@DataLenght:
  2369                           	opt stack 0
  2370  00006A                     strncmp@len:
  2371                           	opt stack 0
  2372                           
  2373                           ; 2 bytes @ 0xA
  2374  00006A                     	ds	1
  2375  00006B                     Rtcc_SetRtccValue@RtccPtrVal:
  2376                           	opt stack 0
  2377  00006B                     USBEnableEndpoint@ep:
  2378                           	opt stack 0
  2379  00006B                     atoi@a:
  2380                           	opt stack 0
  2381  00006B                     utoa@base:
  2382                           	opt stack 0
  2383                           
  2384                           ; 2 bytes @ 0xB
  2385  00006B                     	ds	1
  2386  00006C                     ??_Rtcm_GetRtccDate:
  2387  00006C                     ??_strncmp:
  2388  00006C                     ?_strtol:
  2389                           	opt stack 0
  2390  00006C                     ?___lldiv:
  2391                           	opt stack 0
  2392  00006C                     MdmWifi_ReceiveWifiMsg@Ret:
  2393                           	opt stack 0
  2394  00006C                     OsAlrm_SetOsAlarm@AlarmCallback:
  2395                           	opt stack 0
  2396  00006C                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2397                           	opt stack 0
  2398  00006C                     strtol@s:
  2399                           	opt stack 0
  2400  00006C                     ___lldiv@dividend:
  2401                           	opt stack 0
  2402  00006C                     Rtcm_SetRtccDate@Date:
  2403                           	opt stack 0
  2404                           
  2405                           ; 8 bytes @ 0xC
  2406  00006C                     	ds	1
  2407  00006D                     utoa@v:
  2408                           	opt stack 0
  2409  00006D                     Rtcm_GetRtccDate@LocalDate:
  2410                           	opt stack 0
  2411                           
  2412                           ; 8 bytes @ 0xD
  2413  00006D                     	ds	1
  2414  00006E                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2415                           	opt stack 0
  2416  00006E                     strtol@endptr:
  2417                           	opt stack 0
  2418                           
  2419                           ; 2 bytes @ 0xE
  2420  00006E                     	ds	1
  2421  00006F                     ?_strstr:
  2422                           	opt stack 0
  2423  00006F                     utoa@c:
  2424                           	opt stack 0
  2425  00006F                     strstr@s1:
  2426                           	opt stack 0
  2427                           
  2428                           ; 2 bytes @ 0xF
  2429  00006F                     	ds	1
  2430  000070                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2431                           	opt stack 0
  2432  000070                     itoa@buf:
  2433                           	opt stack 0
  2434  000070                     strtol@base:
  2435                           	opt stack 0
  2436  000070                     GetElapsedTime@TimeValue:
  2437                           	opt stack 0
  2438  000070                     ___lldiv@divisor:
  2439                           	opt stack 0
  2440                           
  2441                           ; 4 bytes @ 0x10
  2442  000070                     	ds	1
  2443  000071                     strstr@s2:
  2444                           	opt stack 0
  2445                           
  2446                           ; 2 bytes @ 0x11
  2447  000071                     	ds	1
  2448  000072                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2449  000072                     ??_strtol:
  2450  000072                     itoa@val:
  2451                           	opt stack 0
  2452                           
  2453                           ; 2 bytes @ 0x12
  2454  000072                     	ds	1
  2455  000073                     StartConnectionSm@Data:
  2456                           	opt stack 0
  2457                           
  2458                           ; 100 bytes @ 0x13
  2459  000073                     	ds	1
  2460  000074                     ??_USBStdFeatureReqHandler:
  2461  000074                     USBStdSetCfgHandler@i:
  2462                           	opt stack 0
  2463  000074                     itoa@base:
  2464                           	opt stack 0
  2465  000074                     GetElapsedTime@CurrentTimestamp:
  2466                           	opt stack 0
  2467  000074                     ___lldiv@quotient:
  2468                           	opt stack 0
  2469                           
  2470                           ; 4 bytes @ 0x14
  2471  000074                     	ds	1
  2472  000075                     USBStdFeatureReqHandler@pUEP:
  2473                           	opt stack 0
  2474                           
  2475                           ; 2 bytes @ 0x15
  2476  000075                     	ds	1
  2477  000076                     strtol@sign:
  2478                           	opt stack 0
  2479  000076                     itoa@cp:
  2480                           	opt stack 0
  2481                           
  2482                           ; 2 bytes @ 0x16
  2483  000076                     	ds	1
  2484  000077                     USBStdFeatureReqHandler@current_ep_data:
  2485                           	opt stack 0
  2486  000077                     strtol@a:
  2487                           	opt stack 0
  2488                           
  2489                           ; 4 bytes @ 0x17
  2490  000077                     	ds	1
  2491  000078                     ___lldiv@counter:
  2492                           	opt stack 0
  2493  000078                     OsTmr_GetTimerStatus@Timer:
  2494                           	opt stack 0
  2495  000078                     USBStdFeatureReqHandler@p:
  2496                           	opt stack 0
  2497                           
  2498                           ; 2 bytes @ 0x18
  2499  000078                     	ds	1
  2500  000079                     Tmr_TmrBPrSet@IntFreqHz:
  2501                           	opt stack 0
  2502  000079                     SetUartBaudRate@UartConfig:
  2503                           	opt stack 0
  2504  000079                     SetBaudRate@DesiredI2cBusClockHz:
  2505                           	opt stack 0
  2506                           
  2507                           ; 4 bytes @ 0x19
  2508  000079                     	ds	1
  2509  00007A                     ??_USBCtrlEPService:
  2510  00007A                     
  2511                           ; 1 bytes @ 0x1A
  2512  00007A                     	ds	1
  2513  00007B                     Tmr_TmrBPrSet@Prescaler:
  2514                           	opt stack 0
  2515  00007B                     USBDeviceTasks@i:
  2516                           	opt stack 0
  2517  00007B                     strtol@c:
  2518                           	opt stack 0
  2519                           
  2520                           ; 1 bytes @ 0x1B
  2521  00007B                     	ds	1
  2522  00007C                     ??_Terminal:
  2523  00007C                     Tmr_TmrBPrSet@Postscaler:
  2524                           	opt stack 0
  2525  00007C                     SetUartBaudRate@Module:
  2526                           	opt stack 0
  2527                           
  2528                           ; 1 bytes @ 0x1C
  2529  00007C                     	ds	1
  2530  00007D                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  2531                           	opt stack 0
  2532  00007D                     SetUartBaudRate@BaudRateRegister:
  2533                           	opt stack 0
  2534  00007D                     SetBaudRate@McuClockHz:
  2535                           	opt stack 0
  2536                           
  2537                           ; 4 bytes @ 0x1D
  2538  00007D                     	ds	1
  2539  00007E                     ??_Led_MainTask:
  2540  00007E                     Tmr_TmrBPrSet@TmrNumb:
  2541                           	opt stack 0
  2542  00007E                     Terminal@ReceivedBytes:
  2543                           	opt stack 0
  2544  00007E                     SendDataSm@Data:
  2545                           	opt stack 0
  2546                           
  2547                           ; 103 bytes @ 0x1E
  2548  00007E                     	ds	1
  2549  00007F                     SetUartBaudRate@DivisionFactor:
  2550                           	opt stack 0
  2551  00007F                     Terminal@Index:
  2552                           	opt stack 0
  2553  00007F                     Tmr_TmrBPrSet@Divisor:
  2554                           	opt stack 0
  2555                           
  2556                           ; 4 bytes @ 0x1F
  2557  00007F                     	ds	1
  2558  000080                     Uart_InitUartModule@UartConfig:
  2559                           	opt stack 0
  2560  000080                     Term_MainSm@Data:
  2561                           	opt stack 0
  2562                           
  2563                           ; 50 bytes @ 0x20
  2564  000080                     	ds	1
  2565  000081                     ??_SetBaudRate:
  2566                           
  2567                           ; 1 bytes @ 0x21
  2568  000081                     	ds	1
  2569  000082                     ??_Uart_InitUartModule:
  2570                           
  2571                           ; 1 bytes @ 0x22
  2572  000082                     	ds	1
  2573  000083                     Tmr_TmrBConfig@TmrBConfig:
  2574                           	opt stack 0
  2575                           
  2576                           ; 2 bytes @ 0x23
  2577  000083                     	ds	1
  2578  000084                     Uart_InitUartModule@Module:
  2579                           	opt stack 0
  2580                           
  2581                           ; 1 bytes @ 0x24
  2582  000084                     	ds	1
  2583  000085                     I2c_InitI2cModule@I2cConfig:
  2584                           	opt stack 0
  2585                           
  2586                           ; 2 bytes @ 0x25
  2587  000085                     	ds	1
  2588  000086                     Tmr_TmrBConfig@TmrNumb:
  2589                           	opt stack 0
  2590                           
  2591                           ; 1 bytes @ 0x26
  2592  000086                     	ds	1
  2593  000087                     ??_I2c_InitI2cModule:
  2594  000087                     InitSchedTimer@TmrBConfig:
  2595                           	opt stack 0
  2596                           
  2597                           ; 7 bytes @ 0x27
  2598  000087                     	ds	2
  2599  000089                     
  2600                           ; 1 bytes @ 0x29
  2601  000089                     	ds	5
  2602  00008E                     
  2603                           ; 1 bytes @ 0x2E
  2604  00008E                     	ds	36
  2605  0000B2                     Term_MainSm@FwkMajorStr:
  2606                           	opt stack 0
  2607                           
  2608                           ; 4 bytes @ 0x52
  2609  0000B2                     	ds	4
  2610  0000B6                     Term_MainSm@FwkMinorStr:
  2611                           	opt stack 0
  2612                           
  2613                           ; 4 bytes @ 0x56
  2614  0000B6                     	ds	4
  2615  0000BA                     Term_MainSm@FwkBuildStr:
  2616                           	opt stack 0
  2617                           
  2618                           ; 4 bytes @ 0x5A
  2619  0000BA                     	ds	4
  2620  0000BE                     Term_MainSm@FwkBuildDayStr:
  2621                           	opt stack 0
  2622                           
  2623                           ; 4 bytes @ 0x5E
  2624  0000BE                     	ds	4
  2625  0000C2                     Term_MainSm@FwkBuildMonthStr:
  2626                           	opt stack 0
  2627                           
  2628                           ; 4 bytes @ 0x62
  2629  0000C2                     	ds	4
  2630  0000C6                     Term_MainSm@FwkBuildYearStr:
  2631                           	opt stack 0
  2632                           
  2633                           ; 4 bytes @ 0x66
  2634  0000C6                     	ds	4
  2635  0000CA                     
  2636                           ; 1 bytes @ 0x6A
  2637  0000CA                     	ds	13
  2638  0000D7                     StartConnectionSm@PortAscii:
  2639                           	opt stack 0
  2640                           
  2641                           ; 4 bytes @ 0x77
  2642  0000D7                     	ds	4
  2643  0000DB                     StartConnectionSm@DataIndex:
  2644                           	opt stack 0
  2645                           
  2646                           ; 1 bytes @ 0x7B
  2647  0000DB                     	ds	1
  2648  0000DC                     StartConnectionSm@IdAscii:
  2649                           	opt stack 0
  2650                           
  2651                           ; 1 bytes @ 0x7C
  2652  0000DC                     	ds	9
  2653  0000E5                     SendDataSm@LenAscii:
  2654                           	opt stack 0
  2655                           
  2656                           ; 4 bytes @ 0x85
  2657  0000E5                     	ds	4
  2658  0000E9                     SendDataSm@DataIndex:
  2659                           	opt stack 0
  2660                           
  2661                           ; 1 bytes @ 0x89
  2662  0000E9                     	ds	1
  2663  0000EA                     SendDataSm@IdAscii:
  2664                           	opt stack 0
  2665                           
  2666                           ; 1 bytes @ 0x8A
  2667  0000EA                     	ds	1
  2668  0000EB                     ??_InitializeTasks:
  2669  0000EB                     ??_ScheduleTasks:
  2670                           
  2671                           ; 1 bytes @ 0x8B
  2672  0000EB                     	ds	2
  2673  0000ED                     InitializeTasks@ActiveTaskIndex:
  2674                           	opt stack 0
  2675                           
  2676                           ; 1 bytes @ 0x8D
  2677  0000ED                     	ds	2
  2678  0000EF                     ScheduleTasks@ActiveTaskIndex:
  2679                           	opt stack 0
  2680                           
  2681                           ; 1 bytes @ 0x8F
  2682  0000EF                     	ds	1
  2683  0000F0                     tblptru	equ	0xFF8
  2684                           tblptrh	equ	0xFF7
  2685                           tblptrl	equ	0xFF6
  2686                           tablat	equ	0xFF5
  2687                           postinc0	equ	0xFEE
  2688                           wreg	equ	0xFE8
  2689                           postdec1	equ	0xFE5
  2690                           fsr1l	equ	0xFE1
  2691                           
  2692                           ; 1 bytes @ 0x90
  2693                           
  2694                           	psect	cstackCOMRAM
  2695  000001                     __pcstackCOMRAM:
  2696                           	opt stack 0
  2697  000001                     i2GenerateEvt@Event:
  2698                           	opt stack 0
  2699                           
  2700                           ; 2 bytes @ 0x0
  2701  000001                     	ds	2
  2702  000003                     i2GenerateEvt@EventStatus:
  2703                           	opt stack 0
  2704                           
  2705                           ; 1 bytes @ 0x2
  2706  000003                     	ds	1
  2707  000004                     ??_Alarm:
  2708  000004                     Uart_MdmWifiReadService@UartData:
  2709                           	opt stack 0
  2710                           
  2711                           ; 1 bytes @ 0x3
  2712  000004                     	ds	1
  2713  000005                     ??_HighPriorityIsr:
  2714  000005                     
  2715                           ; 1 bytes @ 0x4
  2716  000005                     	ds	18
  2717  000017                     ?i1___wmul:
  2718                           	opt stack 0
  2719  000017                     OsAlrm_ClearOsAlarm@OsAlarmId:
  2720                           	opt stack 0
  2721  000017                     i1GenerateEvt@Event:
  2722                           	opt stack 0
  2723  000017                     i1___wmul@multiplier:
  2724                           	opt stack 0
  2725                           
  2726                           ; 2 bytes @ 0x16
  2727  000017                     	ds	2
  2728  000019                     i1GenerateEvt@EventStatus:
  2729                           	opt stack 0
  2730  000019                     i1___wmul@multiplicand:
  2731                           	opt stack 0
  2732                           
  2733                           ; 2 bytes @ 0x18
  2734  000019                     	ds	1
  2735  00001A                     i1I2cSlv_SendI2cMsg@TxBuffer:
  2736                           	opt stack 0
  2737                           
  2738                           ; 2 bytes @ 0x19
  2739  00001A                     	ds	1
  2740  00001B                     i1___wmul@product:
  2741                           	opt stack 0
  2742                           
  2743                           ; 2 bytes @ 0x1A
  2744  00001B                     	ds	1
  2745  00001C                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  2746                           	opt stack 0
  2747                           
  2748                           ; 1 bytes @ 0x1B
  2749  00001C                     	ds	1
  2750  00001D                     i1I2cSlv_SendI2cMsg@DataLenght:
  2751                           	opt stack 0
  2752                           
  2753                           ; 1 bytes @ 0x1C
  2754  00001D                     	ds	1
  2755  00001E                     i1I2cSlv_SendI2cMsg@TxSts:
  2756                           	opt stack 0
  2757                           
  2758                           ; 1 bytes @ 0x1D
  2759  00001E                     	ds	1
  2760  00001F                     ??_OsAlrm_ProcessOsAlarms:
  2761  00001F                     
  2762                           ; 1 bytes @ 0x1E
  2763  00001F                     	ds	8
  2764  000027                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  2765                           	opt stack 0
  2766                           
  2767                           ; 2 bytes @ 0x26
  2768  000027                     	ds	2
  2769  000029                     ??_LowPriorityIsr:
  2770                           
  2771                           ; 1 bytes @ 0x28
  2772  000029                     	ds	21
  2773                           tblptru	equ	0xFF8
  2774                           tblptrh	equ	0xFF7
  2775                           tblptrl	equ	0xFF6
  2776                           tablat	equ	0xFF5
  2777                           postinc0	equ	0xFEE
  2778                           wreg	equ	0xFE8
  2779                           postdec1	equ	0xFE5
  2780                           fsr1l	equ	0xFE1
  2781                           
  2782 ;;
  2783 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2784 ;;
  2785 ;; *************** function _main *****************
  2786 ;; Defined at:
  2787 ;;		line 58 in file "../Source/c/00_Main/main.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  2   14[None  ] short 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2805 ;;Total ram usage:        0 bytes
  2806 ;; Hardware stack levels required when called:   23
  2807 ;; This function calls:
  2808 ;;		_Sch_MainScheduler
  2809 ;;		_SystemInit
  2810 ;; This function is called by:
  2811 ;;		Startup code after reset
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text0
  2816  004F20                     __ptext0:
  2817                           	opt stack 0
  2818  004F20                     _main:
  2819                           	opt stack 8
  2820                           
  2821                           ;main.c: 61: SystemInit();
  2822                           
  2823                           ;incstack = 0
  2824  004F20  EC02  F025         	call	_SystemInit	;wreg free
  2825                           
  2826                           ;main.c: 64: Sch_MainScheduler();
  2827  004F24  ECBC  F026         	call	_Sch_MainScheduler	;wreg free
  2828                           
  2829                           ;main.c: 67: return 0;
  2830                           ;	Return value of _main is never used
  2831  004F28  EF66  F000         	goto	start
  2832  004F2C                     __end_of_main:
  2833                           	opt stack 0
  2834                           tblptru	equ	0xFF8
  2835                           tblptrh	equ	0xFF7
  2836                           tblptrl	equ	0xFF6
  2837                           tablat	equ	0xFF5
  2838                           postinc0	equ	0xFEE
  2839                           wreg	equ	0xFE8
  2840                           postdec1	equ	0xFE5
  2841                           fsr1l	equ	0xFE1
  2842                           
  2843 ;; *************** function _SystemInit *****************
  2844 ;; Defined at:
  2845 ;;		line 121 in file "../Source/c/01_Hal/01_Sys/sys_init.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:   15
  2866 ;; This function calls:
  2867 ;;		_InitSchedTimer
  2868 ;;		_Irq_InitIntController
  2869 ;;		_Mcu_ConfigExtInt
  2870 ;;		_Mcu_StartSystemPll
  2871 ;;		_Pm_DsReleasePinControl
  2872 ;;		_Tmr_RegisterTmr2IsrCallback
  2873 ;; This function is called by:
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           
  2878                           	psect	text1
  2879  004A04                     __ptext1:
  2880                           	opt stack 0
  2881  004A04                     _SystemInit:
  2882                           	opt stack 15
  2883                           
  2884                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  2885                           
  2886                           ;incstack = 0
  2887  004A04  ECB4  F027         	call	_Pm_DsReleasePinControl	;wreg free
  2888                           
  2889                           ;sys_init.c: 126: Mcu_StartSystemPll();
  2890  004A08  ECAD  F026         	call	_Mcu_StartSystemPll	;wreg free
  2891                           
  2892                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  2893  004A0C  0E01               	movlw	1
  2894  004A0E  0100               	movlb	0	; () banked
  2895  004A10  6F60               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  2896  004A12  0E01               	movlw	1
  2897  004A14  6F61               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  2898  004A16  0E01               	movlw	1
  2899  004A18  EC8E  F025         	call	_Irq_InitIntController
  2900                           
  2901                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  2902  004A1C  0E12               	movlw	low _Sch_SchmIntService
  2903  004A1E  0100               	movlb	0	; () banked
  2904  004A20  6F60               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  2905  004A22  0E4F               	movlw	high _Sch_SchmIntService
  2906  004A24  6F61               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  2907  004A26  EC96  F027         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  2908                           
  2909                           ;sys_init.c: 132: InitSchedTimer();
  2910  004A2A  EC4A  F025         	call	_InitSchedTimer	;wreg free
  2911                           
  2912                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  2913  004A2E  EC4B  F027         	call	_Mcu_ConfigExtInt	;wreg free
  2914  004A32  0012               	return		;funcret
  2915  004A34                     __end_of_SystemInit:
  2916                           	opt stack 0
  2917                           tblptru	equ	0xFF8
  2918                           tblptrh	equ	0xFF7
  2919                           tblptrl	equ	0xFF6
  2920                           tablat	equ	0xFF5
  2921                           postinc0	equ	0xFEE
  2922                           wreg	equ	0xFE8
  2923                           postdec1	equ	0xFE5
  2924                           fsr1l	equ	0xFE1
  2925                           
  2926 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  2927 ;; Defined at:
  2928 ;;		line 329 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  IsrCallback     2    0[BANK0 ] PTR FTN()void 
  2931 ;;		 -> Sch_SchmIntService(1), 
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2943 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2947 ;;Total ram usage:        2 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:   11
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_SystemInit
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text2
  2958  004F2C                     __ptext2:
  2959                           	opt stack 0
  2960  004F2C                     _Tmr_RegisterTmr2IsrCallback:
  2961                           	opt stack 18
  2962                           
  2963                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  2964                           
  2965                           ;incstack = 0
  2966  004F2C  C060  F154         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  2967  004F30  C061  F155         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  2968  004F34  0012               	return		;funcret
  2969  004F36                     __end_of_Tmr_RegisterTmr2IsrCallback:
  2970                           	opt stack 0
  2971                           tblptru	equ	0xFF8
  2972                           tblptrh	equ	0xFF7
  2973                           tblptrl	equ	0xFF6
  2974                           tablat	equ	0xFF5
  2975                           postinc0	equ	0xFEE
  2976                           wreg	equ	0xFE8
  2977                           postdec1	equ	0xFE5
  2978                           fsr1l	equ	0xFE1
  2979                           
  2980 ;; *************** function _Pm_DsReleasePinControl *****************
  2981 ;; Defined at:
  2982 ;;		line 166 in file "../Source/c/01_Hal/02_Drv/pm_drv.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;		None
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      void 
  2989 ;; Registers used:
  2990 ;;		None
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3000 ;;Total ram usage:        0 bytes
  3001 ;; Hardware stack levels used:    1
  3002 ;; Hardware stack levels required when called:   11
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_SystemInit
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text3
  3011  004F68                     __ptext3:
  3012                           	opt stack 0
  3013  004F68                     _Pm_DsReleasePinControl:
  3014                           	opt stack 18
  3015                           
  3016                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3017                           
  3018                           ;incstack = 0
  3019  004F68  010F               	movlb	15	; () banked
  3020  004F6A  914C               	bcf	76,0,b	;volatile
  3021                           
  3022                           ; BSR set to: 15
  3023  004F6C  0012               	return		;funcret
  3024  004F6E                     __end_of_Pm_DsReleasePinControl:
  3025                           	opt stack 0
  3026                           tblptru	equ	0xFF8
  3027                           tblptrh	equ	0xFF7
  3028                           tblptrl	equ	0xFF6
  3029                           tablat	equ	0xFF5
  3030                           postinc0	equ	0xFEE
  3031                           wreg	equ	0xFE8
  3032                           postdec1	equ	0xFE5
  3033                           fsr1l	equ	0xFE1
  3034                           
  3035 ;; *************** function _Mcu_StartSystemPll *****************
  3036 ;; Defined at:
  3037 ;;		line 80 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;		None
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  PllStartupCo    2    0[BANK0 ] volatile unsigned short 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, status,2, status,0
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3052 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3055 ;;Total ram usage:        2 bytes
  3056 ;; Hardware stack levels used:    1
  3057 ;; Hardware stack levels required when called:   11
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_SystemInit
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text4
  3066  004D5A                     __ptext4:
  3067                           	opt stack 0
  3068  004D5A                     _Mcu_StartSystemPll:
  3069                           	opt stack 18
  3070                           
  3071                           ;mcu_drv.c: 82: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3072                           
  3073                           ; BSR set to: 15
  3074                           ;incstack = 0
  3075  004D5A  0E03               	movlw	3
  3076  004D5C  0100               	movlb	0	; () banked
  3077  004D5E  6F61               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3078  004D60  0EE8               	movlw	232
  3079  004D62  6F60               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3080                           
  3081                           ; BSR set to: 0
  3082                           ;mcu_drv.c: 85: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3083  004D64  8C9B               	bsf	3995,6,c	;volatile
  3084  004D66                     l9081:
  3085                           
  3086                           ; BSR set to: 0
  3087  004D66  0760               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3088  004D68  A0D8               	btfss	status,0,c
  3089  004D6A  0761               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3090  004D6C  2960               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3091  004D6E  E1FB               	bnz	l9081
  3092  004D70  2961               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3093  004D72  B4D8               	btfsc	status,2,c
  3094  004D74  0012               	return	
  3095  004D76  D7F7               	goto	l231
  3096  004D78                     __end_of_Mcu_StartSystemPll:
  3097                           	opt stack 0
  3098                           tblptru	equ	0xFF8
  3099                           tblptrh	equ	0xFF7
  3100                           tblptrl	equ	0xFF6
  3101                           tablat	equ	0xFF5
  3102                           postinc0	equ	0xFEE
  3103                           wreg	equ	0xFE8
  3104                           postdec1	equ	0xFE5
  3105                           fsr1l	equ	0xFE1
  3106                           status	equ	0xFD8
  3107                           
  3108 ;; *************** function _Mcu_ConfigExtInt *****************
  3109 ;; Defined at:
  3110 ;;		line 98 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
  3111 ;; Parameters:    Size  Location     Type
  3112 ;;		None
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;		None
  3115 ;; Return value:  Size  Location     Type
  3116 ;;                  1    wreg      void 
  3117 ;; Registers used:
  3118 ;;		None
  3119 ;; Tracked objects:
  3120 ;;		On entry : 0/0
  3121 ;;		On exit  : 0/0
  3122 ;;		Unchanged: 0/0
  3123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;Total ram usage:        0 bytes
  3129 ;; Hardware stack levels used:    1
  3130 ;; Hardware stack levels required when called:   11
  3131 ;; This function calls:
  3132 ;;		Nothing
  3133 ;; This function is called by:
  3134 ;;		_SystemInit
  3135 ;; This function uses a non-reentrant model
  3136 ;;
  3137                           
  3138                           	psect	text5
  3139  004E96                     __ptext5:
  3140                           	opt stack 0
  3141  004E96                     _Mcu_ConfigExtInt:
  3142                           	opt stack 18
  3143                           
  3144                           ;mcu_drv.c: 101: TRISBbits.TRISB0 = ((UINT8)(1));
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;incstack = 0
  3148  004E96  8093               	bsf	3987,0,c	;volatile
  3149                           
  3150                           ;mcu_drv.c: 102: TRISDbits.TRISD3 = ((UINT8)(1));
  3151  004E98  8695               	bsf	3989,3,c	;volatile
  3152                           
  3153                           ;mcu_drv.c: 105: INTCONbits.INT0IE = 1u;
  3154  004E9A  88F2               	bsf	intcon,4,c	;volatile
  3155                           
  3156                           ;mcu_drv.c: 106: INTCON3bits.INT1IE = 1u;
  3157  004E9C  86F0               	bsf	intcon3,3,c	;volatile
  3158                           
  3159                           ;mcu_drv.c: 107: INTCON3bits.INT1IP = 1u;
  3160  004E9E  8CF0               	bsf	intcon3,6,c	;volatile
  3161                           
  3162                           ;mcu_drv.c: 108: INTCON2bits.INTEDG0 = 0u;
  3163  004EA0  9CF1               	bcf	intcon2,6,c	;volatile
  3164                           
  3165                           ;mcu_drv.c: 109: INTCON2bits.INTEDG1 = 0u;
  3166  004EA2  9AF1               	bcf	intcon2,5,c	;volatile
  3167  004EA4  0012               	return		;funcret
  3168  004EA6                     __end_of_Mcu_ConfigExtInt:
  3169                           	opt stack 0
  3170                           tblptru	equ	0xFF8
  3171                           tblptrh	equ	0xFF7
  3172                           tblptrl	equ	0xFF6
  3173                           tablat	equ	0xFF5
  3174                           intcon	equ	0xFF2
  3175                           intcon2	equ	0xFF1
  3176                           intcon3	equ	0xFF0
  3177                           postinc0	equ	0xFEE
  3178                           wreg	equ	0xFE8
  3179                           postdec1	equ	0xFE5
  3180                           fsr1l	equ	0xFE1
  3181                           status	equ	0xFD8
  3182                           
  3183 ;; *************** function _Irq_InitIntController *****************
  3184 ;; Defined at:
  3185 ;;		line 75 in file "../Source/c/01_Hal/01_Sys/irq.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;  IntPriorityE    1    wreg     enum E7714
  3188 ;;  GlobalInt_Hi    1    0[BANK0 ] unsigned char 
  3189 ;;  PerInt_LowPI    1    1[BANK0 ] unsigned char 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  IntPriorityE    1    2[BANK0 ] enum E7714
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3201 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3204 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3205 ;;Total ram usage:        3 bytes
  3206 ;; Hardware stack levels used:    1
  3207 ;; Hardware stack levels required when called:   11
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_SystemInit
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           	psect	text6
  3216  004B1C                     __ptext6:
  3217                           	opt stack 0
  3218  004B1C                     _Irq_InitIntController:
  3219                           	opt stack 18
  3220                           
  3221                           ;incstack = 0
  3222                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3223  004B1C  0100               	movlb	0	; () banked
  3224  004B1E  6F62               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3225                           
  3226                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3227  004B20  0100               	movlb	0	; () banked
  3228  004B22  B162               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3229  004B24  D002               	bra	u7865
  3230  004B26  9ED0               	bcf	4048,7,c	;volatile
  3231  004B28  D001               	bra	u7866
  3232  004B2A                     u7865:
  3233  004B2A  8ED0               	bsf	4048,7,c	;volatile
  3234  004B2C                     u7866:
  3235                           
  3236                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3237  004B2C  0100               	movlb	0	; () banked
  3238  004B2E  B160               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3239  004B30  D002               	bra	u7875
  3240  004B32  9EF2               	bcf	intcon,7,c	;volatile
  3241  004B34  D001               	bra	u7876
  3242  004B36                     u7875:
  3243  004B36  8EF2               	bsf	intcon,7,c	;volatile
  3244  004B38                     u7876:
  3245                           
  3246                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3247  004B38  0100               	movlb	0	; () banked
  3248  004B3A  B161               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3249  004B3C  D002               	bra	u7885
  3250  004B3E  9CF2               	bcf	intcon,6,c	;volatile
  3251  004B40  D001               	bra	u7886
  3252  004B42                     u7885:
  3253  004B42  8CF2               	bsf	intcon,6,c	;volatile
  3254  004B44                     u7886:
  3255  004B44  0012               	return		;funcret
  3256  004B46                     __end_of_Irq_InitIntController:
  3257                           	opt stack 0
  3258                           tblptru	equ	0xFF8
  3259                           tblptrh	equ	0xFF7
  3260                           tblptrl	equ	0xFF6
  3261                           tablat	equ	0xFF5
  3262                           intcon	equ	0xFF2
  3263                           intcon2	equ	0xFF1
  3264                           intcon3	equ	0xFF0
  3265                           postinc0	equ	0xFEE
  3266                           wreg	equ	0xFE8
  3267                           postdec1	equ	0xFE5
  3268                           fsr1l	equ	0xFE1
  3269                           status	equ	0xFD8
  3270                           
  3271 ;; *************** function _InitSchedTimer *****************
  3272 ;; Defined at:
  3273 ;;		line 69 in file "../Source/c/01_Hal/01_Sys/sys_init.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;		None
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  TmrBConfig      7   39[BANK0 ] struct _TmrBConfigType
  3278 ;; Return value:  Size  Location     Type
  3279 ;;                  1    wreg      void 
  3280 ;; Registers used:
  3281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3282 ;; Tracked objects:
  3283 ;;		On entry : 0/0
  3284 ;;		On exit  : 0/0
  3285 ;;		Unchanged: 0/0
  3286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3288 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3290 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3291 ;;Total ram usage:        7 bytes
  3292 ;; Hardware stack levels used:    1
  3293 ;; Hardware stack levels required when called:   14
  3294 ;; This function calls:
  3295 ;;		_Tmr_TmrBConfig
  3296 ;; This function is called by:
  3297 ;;		_SystemInit
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text7
  3302  004A94                     __ptext7:
  3303                           	opt stack 0
  3304  004A94                     _InitSchedTimer:
  3305                           	opt stack 15
  3306                           
  3307                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  3308                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  3309                           
  3310                           ;incstack = 0
  3311  004A94  0E04               	movlw	4
  3312  004A96  0100               	movlb	0	; () banked
  3313  004A98  6F87               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  3314                           
  3315                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  3316  004A9A  0E0C               	movlw	12
  3317  004A9C  6F88               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  3318                           
  3319                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  3320  004A9E  0E00               	movlw	0
  3321  004AA0  6F8A               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  3322                           
  3323                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  3324  004AA2  0E01               	movlw	1
  3325  004AA4  6F89               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  3326                           
  3327                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  3328  004AA6  0E03               	movlw	3
  3329  004AA8  6F8C               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  3330  004AAA  0EE8               	movlw	232
  3331  004AAC  6F8B               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  3332                           
  3333                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  3334  004AAE  0E01               	movlw	1
  3335  004AB0  6F8D               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  3339  004AB2  0E87               	movlw	low InitSchedTimer@TmrBConfig
  3340  004AB4  6F83               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  3341  004AB6  0E00               	movlw	high InitSchedTimer@TmrBConfig
  3342  004AB8  6F84               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  3343  004ABA  0E02               	movlw	2
  3344  004ABC  EC44  F016         	call	_Tmr_TmrBConfig
  3345  004AC0  0012               	return		;funcret
  3346  004AC2                     __end_of_InitSchedTimer:
  3347                           	opt stack 0
  3348                           tblptru	equ	0xFF8
  3349                           tblptrh	equ	0xFF7
  3350                           tblptrl	equ	0xFF6
  3351                           tablat	equ	0xFF5
  3352                           intcon	equ	0xFF2
  3353                           intcon2	equ	0xFF1
  3354                           intcon3	equ	0xFF0
  3355                           postinc0	equ	0xFEE
  3356                           wreg	equ	0xFE8
  3357                           postdec1	equ	0xFE5
  3358                           fsr1l	equ	0xFE1
  3359                           status	equ	0xFD8
  3360                           
  3361 ;; *************** function _Tmr_TmrBConfig *****************
  3362 ;; Defined at:
  3363 ;;		line 271 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  TmrNumb         1    wreg     unsigned char 
  3366 ;;  TmrBConfig      2   35[BANK0 ] PTR struct _TmrBConfigTy
  3367 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;  TmrNumb         1   38[BANK0 ] unsigned char 
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3379 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3380 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3381 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3382 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3383 ;;Total ram usage:        4 bytes
  3384 ;; Hardware stack levels used:    1
  3385 ;; Hardware stack levels required when called:   13
  3386 ;; This function calls:
  3387 ;;		_TmrBInit
  3388 ;;		_Tmr_StartTmr
  3389 ;;		_Tmr_TmrBIrqSet
  3390 ;;		_Tmr_TmrBPrSet
  3391 ;; This function is called by:
  3392 ;;		_InitSchedTimer
  3393 ;;		_InitAuxTimer
  3394 ;; This function uses a non-reentrant model
  3395 ;;
  3396                           
  3397                           	psect	text8
  3398  002C88                     __ptext8:
  3399                           	opt stack 0
  3400  002C88                     _Tmr_TmrBConfig:
  3401                           	opt stack 15
  3402                           
  3403                           ;incstack = 0
  3404                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  3405  002C88  0100               	movlb	0	; () banked
  3406  002C8A  6F86               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  3407                           
  3408                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  3409  002C8C  C083  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3410  002C90  C084  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3411  002C94  50DF               	movf	indf2,w,c
  3412  002C96  0100               	movlb	0	; () banked
  3413  002C98  6F60               	movwf	TmrBInit@Prescaler& (0+255),b
  3414  002C9A  EE20 F001          	lfsr	2,1
  3415  002C9E  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3416  002CA0  26D9               	addwf	fsr2l,f,c
  3417  002CA2  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3418  002CA4  22DA               	addwfc	fsr2h,f,c
  3419  002CA6  50DF               	movf	indf2,w,c
  3420  002CA8  6F61               	movwf	TmrBInit@Postscaler& (0+255),b
  3421  002CAA  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3422  002CAC  EC1D  F01B         	call	_TmrBInit
  3423                           
  3424                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  3425  002CB0  0100               	movlb	0	; () banked
  3426  002CB2  EE20 F002          	lfsr	2,2
  3427  002CB6  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3428  002CB8  26D9               	addwf	fsr2l,f,c
  3429  002CBA  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3430  002CBC  22DA               	addwfc	fsr2h,f,c
  3431  002CBE  04DE               	decf	postinc2,w,c
  3432  002CC0  A4D8               	btfss	status,2,c
  3433  002CC2  D00E               	goto	l428
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;tmr_drv.c: 277: {
  3437                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  3438  002CC4  EE20 F003          	lfsr	2,3
  3439  002CC8  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3440  002CCA  26D9               	addwf	fsr2l,f,c
  3441  002CCC  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3442  002CCE  22DA               	addwfc	fsr2h,f,c
  3443  002CD0  50DF               	movf	indf2,w,c
  3444  002CD2  6F60               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3445  002CD4  0E01               	movlw	1
  3446  002CD6  6F61               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3447  002CD8  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3448  002CDA  EC65  F022         	call	_Tmr_TmrBIrqSet
  3449                           
  3450                           ;tmr_drv.c: 280: }
  3451  002CDE  D00E               	goto	l429
  3452  002CE0                     l428:
  3453                           
  3454                           ;tmr_drv.c: 281: else
  3455                           ;tmr_drv.c: 282: {
  3456                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  3457  002CE0  0100               	movlb	0	; () banked
  3458  002CE2  EE20 F003          	lfsr	2,3
  3459  002CE6  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3460  002CE8  26D9               	addwf	fsr2l,f,c
  3461  002CEA  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3462  002CEC  22DA               	addwfc	fsr2h,f,c
  3463  002CEE  50DF               	movf	indf2,w,c
  3464  002CF0  6F60               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3465  002CF2  0E00               	movlw	0
  3466  002CF4  6F61               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3467  002CF6  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3468  002CF8  EC65  F022         	call	_Tmr_TmrBIrqSet
  3469  002CFC                     l429:
  3470                           
  3471                           ;tmr_drv.c: 285: }
  3472                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  3473  002CFC  0100               	movlb	0	; () banked
  3474  002CFE  EE20 F004          	lfsr	2,4
  3475  002D02  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3476  002D04  26D9               	addwf	fsr2l,f,c
  3477  002D06  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3478  002D08  22DA               	addwfc	fsr2h,f,c
  3479  002D0A  CFDE F079          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  3480  002D0E  CFDD F07A          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  3481  002D12  C083  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3482  002D16  C084  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3483  002D1A  50DF               	movf	indf2,w,c
  3484  002D1C  6F7B               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  3485  002D1E  EE20 F001          	lfsr	2,1
  3486  002D22  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3487  002D24  26D9               	addwf	fsr2l,f,c
  3488  002D26  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3489  002D28  22DA               	addwfc	fsr2h,f,c
  3490  002D2A  50DF               	movf	indf2,w,c
  3491  002D2C  6F7C               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3492  002D2E  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3493  002D30  EC42  F013         	call	_Tmr_TmrBPrSet
  3494                           
  3495                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  3496  002D34  0100               	movlb	0	; () banked
  3497  002D36  EE20 F006          	lfsr	2,6
  3498  002D3A  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3499  002D3C  26D9               	addwf	fsr2l,f,c
  3500  002D3E  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3501  002D40  22DA               	addwfc	fsr2h,f,c
  3502  002D42  04DE               	decf	postinc2,w,c
  3503  002D44  A4D8               	btfss	status,2,c
  3504  002D46  0012               	return	
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;tmr_drv.c: 290: {
  3508                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  3509  002D48  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3510  002D4A  EC7D  F026         	call	_Tmr_StartTmr
  3511                           
  3512                           ;tmr_drv.c: 293: }
  3513  002D4E  0012               	return	
  3514  002D50                     __end_of_Tmr_TmrBConfig:
  3515                           	opt stack 0
  3516                           tblptru	equ	0xFF8
  3517                           tblptrh	equ	0xFF7
  3518                           tblptrl	equ	0xFF6
  3519                           tablat	equ	0xFF5
  3520                           intcon	equ	0xFF2
  3521                           intcon2	equ	0xFF1
  3522                           intcon3	equ	0xFF0
  3523                           postinc0	equ	0xFEE
  3524                           wreg	equ	0xFE8
  3525                           postdec1	equ	0xFE5
  3526                           fsr1l	equ	0xFE1
  3527                           indf2	equ	0xFDF
  3528                           postinc2	equ	0xFDE
  3529                           postdec2	equ	0xFDD
  3530                           fsr2h	equ	0xFDA
  3531                           fsr2l	equ	0xFD9
  3532                           status	equ	0xFD8
  3533                           
  3534 ;; *************** function _Tmr_TmrBPrSet *****************
  3535 ;; Defined at:
  3536 ;;		line 193 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;  TmrNumb         1    wreg     unsigned char 
  3539 ;;  IntFreqHz       2   25[BANK0 ] unsigned short 
  3540 ;;  Prescaler       1   27[BANK0 ] unsigned char 
  3541 ;;  Postscaler      1   28[BANK0 ] unsigned char 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  TmrNumb         1   30[BANK0 ] unsigned char 
  3544 ;;  Divisor         4   31[BANK0 ] unsigned long 
  3545 ;;  TmrBPrCfgSts    1   29[BANK0 ] enum E7730
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      enum E7730
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3555 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3559 ;;Total ram usage:       10 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:   12
  3562 ;; This function calls:
  3563 ;;		___lldiv
  3564 ;;		___lmul
  3565 ;; This function is called by:
  3566 ;;		_Tmr_TmrBConfig
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           
  3570                           	psect	text9
  3571  002684                     __ptext9:
  3572                           	opt stack 0
  3573  002684                     _Tmr_TmrBPrSet:
  3574                           	opt stack 15
  3575                           
  3576                           ;incstack = 0
  3577                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  3578  002684  0100               	movlb	0	; () banked
  3579  002686  6F7E               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  3580                           
  3581                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  3582                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  3583  002688  0E00               	movlw	0
  3584  00268A  0100               	movlb	0	; () banked
  3585  00268C  6F7F               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  3586  00268E  0E00               	movlw	0
  3587  002690  6F80               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  3588  002692  0E00               	movlw	0
  3589  002694  6F81               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  3590  002696  0E00               	movlw	0
  3591  002698  6F82               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  3595  00269A  517B               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  3596  00269C  037C               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3597  00269E  CFF3 F060          	movff	prodl,___lmul@multiplier
  3598  0026A2  CFF4 F061          	movff	prodh,___lmul@multiplier+1
  3599  0026A6  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
  3600  0026A8  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
  3601  0026AA  C079  F064         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  3602  0026AE  C07A  F065         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  3603  0026B2  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
  3604  0026B4  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
  3605  0026B6  ECEA  F020         	call	___lmul	;wreg free
  3606  0026BA  C060  F07F         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  3607  0026BE  C061  F080         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  3608  0026C2  C062  F081         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  3609  0026C6  C063  F082         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  3610                           
  3611                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  3612  0026CA  0E00               	movlw	0
  3613  0026CC  0100               	movlb	0	; () banked
  3614  0026CE  6F6C               	movwf	___lldiv@dividend& (0+255),b
  3615  0026D0  0E1B               	movlw	27
  3616  0026D2  6F6D               	movwf	(___lldiv@dividend+1)& (0+255),b
  3617  0026D4  0EB7               	movlw	183
  3618  0026D6  6F6E               	movwf	(___lldiv@dividend+2)& (0+255),b
  3619  0026D8  0E00               	movlw	0
  3620  0026DA  6F6F               	movwf	(___lldiv@dividend+3)& (0+255),b
  3621  0026DC  C07F  F070         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3622  0026E0  C080  F071         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3623  0026E4  C081  F072         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3624  0026E8  C082  F073         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3625  0026EC  EC2B  F01E         	call	___lldiv	;wreg free
  3626  0026F0  0100               	movlb	0	; () banked
  3627  0026F2  516F               	movf	(?___lldiv+3)& (0+255),w,b
  3628  0026F4  116E               	iorwf	(?___lldiv+2)& (0+255),w,b
  3629  0026F6  E13A               	bnz	l8313
  3630  0026F8  056D               	decf	(?___lldiv+1)& (0+255),w,b
  3631  0026FA  A0D8               	btfss	status,0,c
  3632  0026FC  D02D               	goto	l411
  3633  0026FE  D036               	goto	l410
  3634  002700                     
  3635                           ; BSR set to: 0
  3636                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3637                           
  3638                           ; BSR set to: 0
  3639  002700  0E00               	movlw	0
  3640  002702  6F6C               	movwf	___lldiv@dividend& (0+255),b
  3641  002704  0E1B               	movlw	27
  3642  002706  6F6D               	movwf	(___lldiv@dividend+1)& (0+255),b
  3643  002708  0EB7               	movlw	183
  3644  00270A  6F6E               	movwf	(___lldiv@dividend+2)& (0+255),b
  3645  00270C  0E00               	movlw	0
  3646  00270E  6F6F               	movwf	(___lldiv@dividend+3)& (0+255),b
  3647  002710  C07F  F070         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3648  002714  C080  F071         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3649  002718  C081  F072         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3650  00271C  C082  F073         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3651  002720  EC2B  F01E         	call	___lldiv	;wreg free
  3652  002724  0100               	movlb	0	; () banked
  3653  002726  516C               	movf	?___lldiv& (0+255),w,b
  3654  002728  6ECB               	movwf	4043,c	;volatile
  3655                           
  3656                           ;tmr_drv.c: 210: break;
  3657  00272A  D01D               	goto	l413
  3658  00272C                     
  3659                           ; BSR set to: 0
  3660                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3661                           
  3662                           ; BSR set to: 0
  3663  00272C  0E00               	movlw	0
  3664  00272E  6F6C               	movwf	___lldiv@dividend& (0+255),b
  3665  002730  0E1B               	movlw	27
  3666  002732  6F6D               	movwf	(___lldiv@dividend+1)& (0+255),b
  3667  002734  0EB7               	movlw	183
  3668  002736  6F6E               	movwf	(___lldiv@dividend+2)& (0+255),b
  3669  002738  0E00               	movlw	0
  3670  00273A  6F6F               	movwf	(___lldiv@dividend+3)& (0+255),b
  3671  00273C  C07F  F070         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3672  002740  C080  F071         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3673  002744  C081  F072         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3674  002748  C082  F073         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3675  00274C  EC2B  F01E         	call	___lldiv	;wreg free
  3676  002750  0100               	movlb	0	; () banked
  3677  002752  516C               	movf	?___lldiv& (0+255),w,b
  3678  002754  6E77               	movwf	3959,c	;volatile
  3679                           
  3680                           ; BSR set to: 0
  3681                           ;tmr_drv.c: 219: }
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;tmr_drv.c: 218: break;
  3685                           
  3686                           ;tmr_drv.c: 217: default:
  3687                           
  3688                           ;tmr_drv.c: 215: break;
  3689  002756  D007               	goto	l413
  3690  002758                     l411:
  3691                           
  3692                           ; BSR set to: 0
  3693                           
  3694                           ; BSR set to: 0
  3695  002758  517E               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  3696                           
  3697                           ; Switch size 1, requested type "space"
  3698                           ; Number of cases is 2, Range of values is 2 to 4
  3699                           ; switch strategies available:
  3700                           ; Name         Instructions Cycles
  3701                           ; simple_byte            7     4 (average)
  3702                           ;	Chosen strategy is simple_byte
  3703  00275A  0A02               	xorlw	2	; case 2
  3704  00275C  B4D8               	btfsc	status,2,c
  3705  00275E  D7D0               	goto	l412
  3706  002760  0A06               	xorlw	6	; case 4
  3707  002762  B4D8               	btfsc	status,2,c
  3708  002764  D7E3               	goto	l414
  3709  002766                     l413:
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  3713                           
  3714                           ; BSR set to: 0
  3715  002766  0E00               	movlw	0
  3716  002768  6F7D               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3717                           
  3718                           ;tmr_drv.c: 223: }
  3719  00276A  0012               	return	
  3720  00276C                     l410:
  3721  00276C                     l8313:
  3722                           
  3723                           ; BSR set to: 0
  3724                           ;tmr_drv.c: 224: else
  3725                           ;tmr_drv.c: 225: {
  3726                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  3727  00276C  0E01               	movlw	1
  3728  00276E  6F7D               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3729                           
  3730                           ; BSR set to: 0
  3731  002770  0012               	return	
  3732  002772                     __end_of_Tmr_TmrBPrSet:
  3733                           	opt stack 0
  3734                           tblptru	equ	0xFF8
  3735                           tblptrh	equ	0xFF7
  3736                           tblptrl	equ	0xFF6
  3737                           tablat	equ	0xFF5
  3738                           prodh	equ	0xFF4
  3739                           prodl	equ	0xFF3
  3740                           intcon	equ	0xFF2
  3741                           intcon2	equ	0xFF1
  3742                           intcon3	equ	0xFF0
  3743                           postinc0	equ	0xFEE
  3744                           wreg	equ	0xFE8
  3745                           postdec1	equ	0xFE5
  3746                           fsr1l	equ	0xFE1
  3747                           indf2	equ	0xFDF
  3748                           postinc2	equ	0xFDE
  3749                           postdec2	equ	0xFDD
  3750                           fsr2h	equ	0xFDA
  3751                           fsr2l	equ	0xFD9
  3752                           status	equ	0xFD8
  3753                           
  3754 ;; *************** function _Tmr_TmrBIrqSet *****************
  3755 ;; Defined at:
  3756 ;;		line 153 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  TmrNumb         1    wreg     unsigned char 
  3759 ;;  Priority        1    0[BANK0 ] enum E7710
  3760 ;;  TmrIrqSts       1    1[BANK0 ] unsigned char 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  TmrNumb         1    2[BANK0 ] unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3772 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3775 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3776 ;;Total ram usage:        3 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:   11
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_Tmr_TmrBConfig
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text10
  3787  0044CA                     __ptext10:
  3788                           	opt stack 0
  3789  0044CA                     _Tmr_TmrBIrqSet:
  3790                           	opt stack 16
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;incstack = 0
  3794                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  3795  0044CA  0100               	movlb	0	; () banked
  3796  0044CC  6F62               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  3797                           
  3798                           ;tmr_drv.c: 156: switch (TmrNumb)
  3799  0044CE  D01A               	goto	l402
  3800  0044D0                     l403:
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  3804  0044D0  929E               	bcf	3998,1,c	;volatile
  3805                           
  3806                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  3807  0044D2  B160               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3808  0044D4  D002               	bra	u6855
  3809  0044D6  929F               	bcf	3999,1,c	;volatile
  3810  0044D8  D001               	bra	u6856
  3811  0044DA                     u6855:
  3812  0044DA  829F               	bsf	3999,1,c	;volatile
  3813  0044DC                     u6856:
  3814                           
  3815                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  3816  0044DC  0100               	movlb	0	; () banked
  3817  0044DE  B161               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3818  0044E0  D002               	bra	u6865
  3819  0044E2  929D               	bcf	3997,1,c	;volatile
  3820  0044E4  D001               	bra	u6866
  3821  0044E6                     u6865:
  3822  0044E6  829D               	bsf	3997,1,c	;volatile
  3823  0044E8                     u6866:
  3824                           
  3825                           ;tmr_drv.c: 165: break;
  3826  0044E8  0012               	return	
  3827  0044EA                     l405:
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  3831  0044EA  96A4               	bcf	4004,3,c	;volatile
  3832                           
  3833                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  3834  0044EC  B160               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3835  0044EE  D002               	bra	u6875
  3836  0044F0  96A5               	bcf	4005,3,c	;volatile
  3837  0044F2  D001               	bra	u6876
  3838  0044F4                     u6875:
  3839  0044F4  86A5               	bsf	4005,3,c	;volatile
  3840  0044F6                     u6876:
  3841                           
  3842                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  3843  0044F6  0100               	movlb	0	; () banked
  3844  0044F8  B161               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3845  0044FA  D002               	bra	u6885
  3846  0044FC  96A3               	bcf	4003,3,c	;volatile
  3847  0044FE  D001               	bra	u6886
  3848  004500                     u6885:
  3849  004500  86A3               	bsf	4003,3,c	;volatile
  3850  004502                     u6886:
  3851                           
  3852                           ;tmr_drv.c: 178: }
  3853                           
  3854                           ;tmr_drv.c: 177: break;
  3855                           
  3856                           ;tmr_drv.c: 176: default:
  3857                           
  3858                           ;tmr_drv.c: 174: break;
  3859  004502  0012               	return	
  3860  004504                     l402:
  3861  004504  0100               	movlb	0	; () banked
  3862  004506  5162               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  3863                           
  3864                           ; Switch size 1, requested type "space"
  3865                           ; Number of cases is 2, Range of values is 2 to 4
  3866                           ; switch strategies available:
  3867                           ; Name         Instructions Cycles
  3868                           ; simple_byte            7     4 (average)
  3869                           ;	Chosen strategy is simple_byte
  3870  004508  0A02               	xorlw	2	; case 2
  3871  00450A  B4D8               	btfsc	status,2,c
  3872  00450C  D7E1               	goto	l403
  3873  00450E  0A06               	xorlw	6	; case 4
  3874  004510  A4D8               	btfss	status,2,c
  3875  004512  0012               	return	
  3876  004514  D7EA               	goto	l405
  3877  004516                     __end_of_Tmr_TmrBIrqSet:
  3878                           	opt stack 0
  3879                           tblptru	equ	0xFF8
  3880                           tblptrh	equ	0xFF7
  3881                           tblptrl	equ	0xFF6
  3882                           tablat	equ	0xFF5
  3883                           prodh	equ	0xFF4
  3884                           prodl	equ	0xFF3
  3885                           intcon	equ	0xFF2
  3886                           intcon2	equ	0xFF1
  3887                           intcon3	equ	0xFF0
  3888                           postinc0	equ	0xFEE
  3889                           wreg	equ	0xFE8
  3890                           postdec1	equ	0xFE5
  3891                           fsr1l	equ	0xFE1
  3892                           indf2	equ	0xFDF
  3893                           postinc2	equ	0xFDE
  3894                           postdec2	equ	0xFDD
  3895                           fsr2h	equ	0xFDA
  3896                           fsr2l	equ	0xFD9
  3897                           status	equ	0xFD8
  3898                           
  3899 ;; *************** function _Tmr_StartTmr *****************
  3900 ;; Defined at:
  3901 ;;		line 242 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  TmrNumb         1    wreg     unsigned char 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;  TmrNumb         1    0[BANK0 ] unsigned char 
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, status,0
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3919 ;;Total ram usage:        1 bytes
  3920 ;; Hardware stack levels used:    1
  3921 ;; Hardware stack levels required when called:   11
  3922 ;; This function calls:
  3923 ;;		Nothing
  3924 ;; This function is called by:
  3925 ;;		_Tmr_TmrBConfig
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text11
  3930  004CFA                     __ptext11:
  3931                           	opt stack 0
  3932  004CFA                     _Tmr_StartTmr:
  3933                           	opt stack 16
  3934                           
  3935                           ;incstack = 0
  3936                           ;Tmr_StartTmr@TmrNumb stored from wreg
  3937  004CFA  0100               	movlb	0	; () banked
  3938  004CFC  6F60               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  3939                           
  3940                           ;tmr_drv.c: 245: switch (TmrNumb)
  3941  004CFE  D004               	goto	l420
  3942  004D00                     l421:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  3946  004D00  84CA               	bsf	4042,2,c	;volatile
  3947                           
  3948                           ;tmr_drv.c: 250: break;
  3949  004D02  0012               	return	
  3950  004D04                     l423:
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  3954  004D04  8476               	bsf	3958,2,c	;volatile
  3955                           
  3956                           ; BSR set to: 0
  3957                           ;tmr_drv.c: 259: }
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;tmr_drv.c: 258: break;
  3961                           
  3962                           ;tmr_drv.c: 257: default:
  3963                           
  3964                           ;tmr_drv.c: 255: break;
  3965  004D06  0012               	return	
  3966  004D08                     l420:
  3967                           
  3968                           ; BSR set to: 0
  3969  004D08  0100               	movlb	0	; () banked
  3970  004D0A  5160               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  3971                           
  3972                           ; Switch size 1, requested type "space"
  3973                           ; Number of cases is 2, Range of values is 2 to 4
  3974                           ; switch strategies available:
  3975                           ; Name         Instructions Cycles
  3976                           ; simple_byte            7     4 (average)
  3977                           ;	Chosen strategy is simple_byte
  3978  004D0C  0A02               	xorlw	2	; case 2
  3979  004D0E  B4D8               	btfsc	status,2,c
  3980  004D10  D7F7               	goto	l421
  3981  004D12  0A06               	xorlw	6	; case 4
  3982  004D14  A4D8               	btfss	status,2,c
  3983  004D16  0012               	return	
  3984  004D18  D7F5               	goto	l423
  3985  004D1A                     __end_of_Tmr_StartTmr:
  3986                           	opt stack 0
  3987                           tblptru	equ	0xFF8
  3988                           tblptrh	equ	0xFF7
  3989                           tblptrl	equ	0xFF6
  3990                           tablat	equ	0xFF5
  3991                           prodh	equ	0xFF4
  3992                           prodl	equ	0xFF3
  3993                           intcon	equ	0xFF2
  3994                           intcon2	equ	0xFF1
  3995                           intcon3	equ	0xFF0
  3996                           postinc0	equ	0xFEE
  3997                           wreg	equ	0xFE8
  3998                           postdec1	equ	0xFE5
  3999                           fsr1l	equ	0xFE1
  4000                           indf2	equ	0xFDF
  4001                           postinc2	equ	0xFDE
  4002                           postdec2	equ	0xFDD
  4003                           fsr2h	equ	0xFDA
  4004                           fsr2l	equ	0xFD9
  4005                           status	equ	0xFD8
  4006                           
  4007 ;; *************** function _TmrBInit *****************
  4008 ;; Defined at:
  4009 ;;		line 72 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  4010 ;; Parameters:    Size  Location     Type
  4011 ;;  TmrNumb         1    wreg     unsigned char 
  4012 ;;  Prescaler       1    0[BANK0 ] unsigned char 
  4013 ;;  Postscaler      1    1[BANK0 ] unsigned char 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  TmrNumb         1    3[BANK0 ] unsigned char 
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2, status,0
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4029 ;;Total ram usage:        4 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:   11
  4032 ;; This function calls:
  4033 ;;		Nothing
  4034 ;; This function is called by:
  4035 ;;		_Tmr_TmrBConfig
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           
  4039                           	psect	text12
  4040  00363A                     __ptext12:
  4041                           	opt stack 0
  4042  00363A                     _TmrBInit:
  4043                           	opt stack 16
  4044                           
  4045                           ; BSR set to: 0
  4046                           ;incstack = 0
  4047                           ;TmrBInit@TmrNumb stored from wreg
  4048  00363A  0100               	movlb	0	; () banked
  4049  00363C  6F63               	movwf	TmrBInit@TmrNumb& (0+255),b
  4050                           
  4051                           ;tmr_drv.c: 75: switch (TmrNumb)
  4052  00363E  D03F               	goto	l382
  4053  003640                     l385:
  4054                           
  4055                           ; BSR set to: 0
  4056                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4057  003640  90CA               	bcf	4042,0,c	;volatile
  4058  003642  D001               	goto	L1
  4059  003644                     l387:
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4063  003644  80CA               	bsf	4042,0,c	;volatile
  4064  003646                     L1:
  4065                           
  4066                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4067  003646  92CA               	bcf	4042,1,c	;volatile
  4068                           
  4069                           ;tmr_drv.c: 91: break;
  4070  003648  D00E               	goto	l386
  4071  00364A                     l388:
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4075  00364A  80CA               	bsf	4042,0,c	;volatile
  4076                           
  4077                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4078  00364C  82CA               	bsf	4042,1,c	;volatile
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;tmr_drv.c: 100: }
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;tmr_drv.c: 99: break;
  4085                           
  4086                           ;tmr_drv.c: 98: default:
  4087                           
  4088                           ;tmr_drv.c: 96: break;
  4089  00364E  D00B               	goto	l386
  4090  003650                     
  4091                           ; BSR set to: 0
  4092  003650  0100               	movlb	0	; () banked
  4093  003652  5160               	movf	TmrBInit@Prescaler& (0+255),w,b
  4094                           
  4095                           ; Switch size 1, requested type "space"
  4096                           ; Number of cases is 3, Range of values is 1 to 16
  4097                           ; switch strategies available:
  4098                           ; Name         Instructions Cycles
  4099                           ; simple_byte           10     6 (average)
  4100                           ;	Chosen strategy is simple_byte
  4101  003654  0A01               	xorlw	1	; case 1
  4102  003656  B4D8               	btfsc	status,2,c
  4103  003658  D7F3               	goto	l385
  4104  00365A  0A05               	xorlw	5	; case 4
  4105  00365C  B4D8               	btfsc	status,2,c
  4106  00365E  D7F2               	goto	l387
  4107  003660  0A14               	xorlw	20	; case 16
  4108  003662  B4D8               	btfsc	status,2,c
  4109  003664  D7F2               	goto	l388
  4110  003666                     l386:
  4111                           
  4112                           ; BSR set to: 0
  4113                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4114                           
  4115                           ; BSR set to: 0
  4116  003666  C061  F062         	movff	TmrBInit@Postscaler,??_TmrBInit
  4117  00366A  0EFF               	movlw	255
  4118  00366C  2762               	addwf	??_TmrBInit& (0+255),f,b
  4119  00366E  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4120  003670  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4121  003672  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4122  003674  50CA               	movf	4042,w,c	;volatile
  4123  003676  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4124  003678  0B87               	andlw	-121
  4125  00367A  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4126  00367C  6ECA               	movwf	4042,c	;volatile
  4127                           
  4128                           ;tmr_drv.c: 104: break;
  4129  00367E  0012               	return	
  4130  003680                     l393:
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4134  003680  9076               	bcf	3958,0,c	;volatile
  4135  003682  D001               	goto	L2
  4136  003684                     l395:
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4140  003684  8076               	bsf	3958,0,c	;volatile
  4141  003686                     L2:
  4142                           
  4143                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4144  003686  9276               	bcf	3958,1,c	;volatile
  4145                           
  4146                           ;tmr_drv.c: 120: break;
  4147  003688  D00D               	goto	l394
  4148  00368A                     l396:
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4152  00368A  8076               	bsf	3958,0,c	;volatile
  4153                           
  4154                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4155  00368C  8276               	bsf	3958,1,c	;volatile
  4156                           
  4157                           ; BSR set to: 0
  4158                           ;tmr_drv.c: 129: }
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;tmr_drv.c: 128: break;
  4162                           
  4163                           ;tmr_drv.c: 127: default:
  4164                           
  4165                           ;tmr_drv.c: 125: break;
  4166  00368E  D00A               	goto	l394
  4167  003690                     
  4168                           ; BSR set to: 0
  4169                           
  4170                           ; BSR set to: 0
  4171  003690  5160               	movf	TmrBInit@Prescaler& (0+255),w,b
  4172                           
  4173                           ; Switch size 1, requested type "space"
  4174                           ; Number of cases is 3, Range of values is 1 to 16
  4175                           ; switch strategies available:
  4176                           ; Name         Instructions Cycles
  4177                           ; simple_byte           10     6 (average)
  4178                           ;	Chosen strategy is simple_byte
  4179  003692  0A01               	xorlw	1	; case 1
  4180  003694  B4D8               	btfsc	status,2,c
  4181  003696  D7F4               	goto	l393
  4182  003698  0A05               	xorlw	5	; case 4
  4183  00369A  B4D8               	btfsc	status,2,c
  4184  00369C  D7F3               	goto	l395
  4185  00369E  0A14               	xorlw	20	; case 16
  4186  0036A0  B4D8               	btfsc	status,2,c
  4187  0036A2  D7F3               	goto	l396
  4188  0036A4                     l394:
  4189                           
  4190                           ; BSR set to: 0
  4191                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4192                           
  4193                           ; BSR set to: 0
  4194  0036A4  C061  F062         	movff	TmrBInit@Postscaler,??_TmrBInit
  4195  0036A8  0EFF               	movlw	255
  4196  0036AA  2762               	addwf	??_TmrBInit& (0+255),f,b
  4197  0036AC  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4198  0036AE  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4199  0036B0  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4200  0036B2  5076               	movf	3958,w,c	;volatile
  4201  0036B4  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4202  0036B6  0B87               	andlw	-121
  4203  0036B8  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4204  0036BA  6E76               	movwf	3958,c	;volatile
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;tmr_drv.c: 137: }
  4208                           
  4209                           ; BSR set to: 0
  4210                           ;tmr_drv.c: 136: break;
  4211                           
  4212                           ;tmr_drv.c: 135: default:
  4213                           
  4214                           ;tmr_drv.c: 133: break;
  4215  0036BC  0012               	return	
  4216  0036BE                     l382:
  4217                           
  4218                           ; BSR set to: 0
  4219  0036BE  0100               	movlb	0	; () banked
  4220  0036C0  5163               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4221                           
  4222                           ; Switch size 1, requested type "space"
  4223                           ; Number of cases is 2, Range of values is 2 to 4
  4224                           ; switch strategies available:
  4225                           ; Name         Instructions Cycles
  4226                           ; simple_byte            7     4 (average)
  4227                           ;	Chosen strategy is simple_byte
  4228  0036C2  0A02               	xorlw	2	; case 2
  4229  0036C4  B4D8               	btfsc	status,2,c
  4230  0036C6  D7C4               	goto	l384
  4231  0036C8  0A06               	xorlw	6	; case 4
  4232  0036CA  A4D8               	btfss	status,2,c
  4233  0036CC  0012               	return	
  4234  0036CE  D7E0               	goto	l392
  4235  0036D0                     __end_of_TmrBInit:
  4236                           	opt stack 0
  4237                           tblptru	equ	0xFF8
  4238                           tblptrh	equ	0xFF7
  4239                           tblptrl	equ	0xFF6
  4240                           tablat	equ	0xFF5
  4241                           prodh	equ	0xFF4
  4242                           prodl	equ	0xFF3
  4243                           intcon	equ	0xFF2
  4244                           intcon2	equ	0xFF1
  4245                           intcon3	equ	0xFF0
  4246                           postinc0	equ	0xFEE
  4247                           wreg	equ	0xFE8
  4248                           postdec1	equ	0xFE5
  4249                           fsr1l	equ	0xFE1
  4250                           indf2	equ	0xFDF
  4251                           postinc2	equ	0xFDE
  4252                           postdec2	equ	0xFDD
  4253                           fsr2h	equ	0xFDA
  4254                           fsr2l	equ	0xFD9
  4255                           status	equ	0xFD8
  4256                           
  4257 ;; *************** function _Sch_MainScheduler *****************
  4258 ;; Defined at:
  4259 ;;		line 175 in file "../Source/c/02_Osl/os_sched.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;		None
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4277 ;;Total ram usage:        0 bytes
  4278 ;; Hardware stack levels used:    1
  4279 ;; Hardware stack levels required when called:   22
  4280 ;; This function calls:
  4281 ;;		_InitializeTasks
  4282 ;;		_ScheduleTasks
  4283 ;; This function is called by:
  4284 ;;		_main
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text13
  4289  004D78                     __ptext13:
  4290                           	opt stack 0
  4291  004D78                     _Sch_MainScheduler:
  4292                           	opt stack 8
  4293                           
  4294                           ;os_sched.c: 178: InitializeTasks();
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;incstack = 0
  4298  004D78  EC6D  F01E         	call	_InitializeTasks	;wreg free
  4299                           
  4300                           ;os_sched.c: 180: SystemState = RunningState;
  4301  004D7C  0E01               	movlw	1
  4302  004D7E  0100               	movlb	0	; () banked
  4303  004D80  6FFE               	movwf	_SystemState& (0+255),b
  4304  004D82                     
  4305                           ;os_sched.c: 188: {
  4306                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  4307                           
  4308                           ; BSR set to: 0
  4309  004D82  0101               	movlb	1	; () banked
  4310  004D84  51E1               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  4311  004D86  A4D8               	btfss	status,2,c
  4312  004D88  D7FC               	goto	l721
  4313                           
  4314                           ; BSR set to: 1
  4315                           ;os_sched.c: 191: {
  4316                           ;os_sched.c: 196: ScheduleTasks();
  4317  004D8A  EC1D  F011         	call	_ScheduleTasks	;wreg free
  4318                           
  4319                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  4320  004D8E  0E01               	movlw	1
  4321  004D90  0101               	movlb	1	; () banked
  4322  004D92  6FE1               	movwf	_MainSystemTimebaseFlag& (0+255),b
  4323                           
  4324                           ; BSR set to: 1
  4325                           
  4326                           ; BSR set to: 1
  4327  004D94  D7F6               	goto	l721
  4328  004D96                     __end_of_Sch_MainScheduler:
  4329                           	opt stack 0
  4330                           tblptru	equ	0xFF8
  4331                           tblptrh	equ	0xFF7
  4332                           tblptrl	equ	0xFF6
  4333                           tablat	equ	0xFF5
  4334                           prodh	equ	0xFF4
  4335                           prodl	equ	0xFF3
  4336                           intcon	equ	0xFF2
  4337                           intcon2	equ	0xFF1
  4338                           intcon3	equ	0xFF0
  4339                           postinc0	equ	0xFEE
  4340                           wreg	equ	0xFE8
  4341                           postdec1	equ	0xFE5
  4342                           fsr1l	equ	0xFE1
  4343                           indf2	equ	0xFDF
  4344                           postinc2	equ	0xFDE
  4345                           postdec2	equ	0xFDD
  4346                           fsr2h	equ	0xFDA
  4347                           fsr2l	equ	0xFD9
  4348                           status	equ	0xFD8
  4349                           
  4350 ;; *************** function _ScheduleTasks *****************
  4351 ;; Defined at:
  4352 ;;		line 99 in file "../Source/c/02_Osl/os_sched.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  ActiveTaskIn    1  143[BANK0 ] unsigned char 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      void 
  4359 ;; Registers used:
  4360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4369 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4370 ;;Total ram usage:        5 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:   21
  4373 ;; This function calls:
  4374 ;;		_I2cSlv_MainTask
  4375 ;;		_Led_MainTask
  4376 ;;		_MdmWifiCmd_MainTask
  4377 ;;		_MdmWifiHttp_MainTask
  4378 ;;		_MdmWifi_DrvMainFn
  4379 ;;		_MdmWifi_MainTask
  4380 ;;		_Rtcm_MainTask
  4381 ;;		_Term_MainTask
  4382 ;;		_UsbDevice_MainTask
  4383 ;; This function is called by:
  4384 ;;		_Sch_MainScheduler
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text14
  4389  00223A                     __ptext14:
  4390                           	opt stack 0
  4391  00223A                     _ScheduleTasks:
  4392                           	opt stack 8
  4393                           
  4394                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  4395                           
  4396                           ; BSR set to: 1
  4397                           ;incstack = 0
  4398  00223A  0E00               	movlw	0
  4399  00223C  0100               	movlb	0	; () banked
  4400  00223E  6FEF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4401                           
  4402                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  4403  002240  0E00               	movlw	0
  4404  002242  6FEF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4405  002244                     l9121:
  4406                           
  4407                           ; BSR set to: 0
  4408  002244  0EDF               	movlw	low _TaskNumber
  4409  002246  6EF6               	movwf	tblptrl,c
  4410  002248                     	if	1	;There is more than 1 active tblptr byte
  4411  002248  0EFC               	movlw	high _TaskNumber
  4412  00224A  6EF7               	movwf	tblptrh,c
  4413  00224C                     	endif
  4414  00224C                     	if	1	;There are 3 active tblptr bytes
  4415  00224C  0E00               	movlw	low (_TaskNumber shr (0+16))
  4416  00224E  6EF8               	movwf	tblptru,c
  4417  002250                     	endif
  4418  002250  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4419  002252  6FEB               	movwf	??_ScheduleTasks& (0+255),b
  4420  002254  6BEC               	clrf	(??_ScheduleTasks+1)& (0+255),b
  4421  002256  0009               	tblrd		*+
  4422  002258  50F5               	movf	tablat,w,c
  4423  00225A  5DEB               	subwf	??_ScheduleTasks& (0+255),w,b
  4424  00225C  0009               	tblrd		*+
  4425  00225E  50F5               	movf	tablat,w,c
  4426  002260  59EC               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  4427  002262  B0D8               	btfsc	status,0,c
  4428  002264  0012               	return	
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;os_sched.c: 106: {
  4432                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  4433                           
  4434                           ; BSR set to: 0
  4435                           
  4436                           ; BSR set to: 0
  4437  002266  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4438  002268  0D08               	mullw	8
  4439  00226A  0E03               	movlw	3
  4440  00226C  26F3               	addwf	prodl,f,c
  4441  00226E  0E00               	movlw	0
  4442  002270  22F4               	addwfc	prodh,f,c
  4443  002272  0E8B               	movlw	low _TaskTable
  4444  002274  24F3               	addwf	prodl,w,c
  4445  002276  6ED9               	movwf	fsr2l,c
  4446  002278  0E02               	movlw	high _TaskTable
  4447  00227A  20F4               	addwfc	prodh,w,c
  4448  00227C  6EDA               	movwf	fsr2h,c
  4449  00227E  2ADE               	incf	postinc2,f,c
  4450  002280  0E00               	movlw	0
  4451  002282  22DD               	addwfc	postdec2,f,c
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  4455  002284  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4456  002286  0D08               	mullw	8
  4457  002288  0E05               	movlw	5
  4458  00228A  26F3               	addwf	prodl,f,c
  4459  00228C  0E00               	movlw	0
  4460  00228E  22F4               	addwfc	prodh,f,c
  4461  002290  0E8B               	movlw	low _TaskTable
  4462  002292  24F3               	addwf	prodl,w,c
  4463  002294  6ED9               	movwf	fsr2l,c
  4464  002296  0E02               	movlw	high _TaskTable
  4465  002298  20F4               	addwfc	prodh,w,c
  4466  00229A  6EDA               	movwf	fsr2h,c
  4467  00229C  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4468  00229E  0D08               	mullw	8
  4469  0022A0  0E03               	movlw	3
  4470  0022A2  26F3               	addwf	prodl,f,c
  4471  0022A4  0E00               	movlw	0
  4472  0022A6  22F4               	addwfc	prodh,f,c
  4473  0022A8  0E8B               	movlw	low _TaskTable
  4474  0022AA  24F3               	addwf	prodl,w,c
  4475  0022AC  6EE1               	movwf	fsr1l,c
  4476  0022AE  0E02               	movlw	high _TaskTable
  4477  0022B0  20F4               	addwfc	prodh,w,c
  4478  0022B2  6EE2               	movwf	fsr1h,c
  4479  0022B4  50DE               	movf	postinc2,w,c
  4480  0022B6  5CE6               	subwf	postinc1,w,c
  4481  0022B8  50DE               	movf	postinc2,w,c
  4482  0022BA  58E6               	subwfb	postinc1,w,c
  4483  0022BC  A0D8               	btfss	status,0,c
  4484  0022BE  D051               	goto	l706
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;os_sched.c: 111: {
  4488                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  4489  0022C0  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4490  0022C2  0D08               	mullw	8
  4491  0022C4  0E03               	movlw	3
  4492  0022C6  26F3               	addwf	prodl,f,c
  4493  0022C8  0E00               	movlw	0
  4494  0022CA  22F4               	addwfc	prodh,f,c
  4495  0022CC  0E8B               	movlw	low _TaskTable
  4496  0022CE  24F3               	addwf	prodl,w,c
  4497  0022D0  6ED9               	movwf	fsr2l,c
  4498  0022D2  0E02               	movlw	high _TaskTable
  4499  0022D4  20F4               	addwfc	prodh,w,c
  4500  0022D6  6EDA               	movwf	fsr2h,c
  4501  0022D8  0E00               	movlw	0
  4502  0022DA  6EDE               	movwf	postinc2,c
  4503  0022DC  0E00               	movlw	0
  4504  0022DE  6EDD               	movwf	postdec2,c
  4505                           
  4506                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  4507  0022E0  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4508  0022E2  0D08               	mullw	8
  4509  0022E4  0E02               	movlw	2
  4510  0022E6  26F3               	addwf	prodl,f,c
  4511  0022E8  0E00               	movlw	0
  4512  0022EA  22F4               	addwfc	prodh,f,c
  4513  0022EC  0E8B               	movlw	low _TaskTable
  4514  0022EE  24F3               	addwf	prodl,w,c
  4515  0022F0  6ED9               	movwf	fsr2l,c
  4516  0022F2  0E02               	movlw	high _TaskTable
  4517  0022F4  20F4               	addwfc	prodh,w,c
  4518  0022F6  6EDA               	movwf	fsr2h,c
  4519  0022F8  0E01               	movlw	1
  4520  0022FA  6EDF               	movwf	indf2,c
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4524  0022FC  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4525  0022FE  0D08               	mullw	8
  4526  002300  0E8B               	movlw	low _TaskTable
  4527  002302  24F3               	addwf	prodl,w,c
  4528  002304  6ED9               	movwf	fsr2l,c
  4529  002306  0E02               	movlw	high _TaskTable
  4530  002308  20F4               	addwfc	prodh,w,c
  4531  00230A  6EDA               	movwf	fsr2h,c
  4532  00230C  CFDE F0EB          	movff	postinc2,??_ScheduleTasks
  4533  002310  CFDD F0EC          	movff	postdec2,??_ScheduleTasks+1
  4534  002314  D801               	call	u7988
  4535  002316  D016               	goto	u7989
  4536  002318                     u7988:
  4537  002318  0005               	push	
  4538  00231A  6EFA               	movwf	pclath,c
  4539  00231C  51EB               	movf	??_ScheduleTasks& (0+255),w,b
  4540  00231E  6EFD               	movwf	tosl,c
  4541  002320  51EC               	movf	(??_ScheduleTasks+1)& (0+255),w,b
  4542  002322  6EFE               	movwf	tosh,c
  4543  002324  6AFF               	clrf	tosu,c
  4544  002326  50FA               	movf	pclath,w,c
  4545  002328  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4546  00232A  0D08               	mullw	8
  4547  00232C  0E07               	movlw	7
  4548  00232E  26F3               	addwf	prodl,f,c
  4549  002330  0E00               	movlw	0
  4550  002332  22F4               	addwfc	prodh,f,c
  4551  002334  0E8B               	movlw	low _TaskTable
  4552  002336  24F3               	addwf	prodl,w,c
  4553  002338  6ED9               	movwf	fsr2l,c
  4554  00233A  0E02               	movlw	high _TaskTable
  4555  00233C  20F4               	addwfc	prodh,w,c
  4556  00233E  6EDA               	movwf	fsr2h,c
  4557  002340  50DF               	movf	indf2,w,c
  4558  002342  0012               	return		;indir
  4559  002344                     u7989:
  4560                           
  4561                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  4562  002344  0100               	movlb	0	; () banked
  4563  002346  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4564  002348  0D08               	mullw	8
  4565  00234A  0E02               	movlw	2
  4566  00234C  26F3               	addwf	prodl,f,c
  4567  00234E  0E00               	movlw	0
  4568  002350  22F4               	addwfc	prodh,f,c
  4569  002352  0E8B               	movlw	low _TaskTable
  4570  002354  24F3               	addwf	prodl,w,c
  4571  002356  6ED9               	movwf	fsr2l,c
  4572  002358  0E02               	movlw	high _TaskTable
  4573  00235A  20F4               	addwfc	prodh,w,c
  4574  00235C  6EDA               	movwf	fsr2h,c
  4575  00235E  0E00               	movlw	0
  4576  002360  6EDF               	movwf	indf2,c
  4577  002362                     l706:
  4578                           
  4579                           ; BSR set to: 0
  4580                           
  4581                           ; BSR set to: 0
  4582                           
  4583                           ;os_sched.c: 117: else
  4584                           ;os_sched.c: 118: {
  4585                           
  4586                           ; BSR set to: 0
  4587  002362  2BEF               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  4588  002364  D76F               	goto	l9121
  4589  002366                     __end_of_ScheduleTasks:
  4590                           	opt stack 0
  4591                           tosu	equ	0xFFF
  4592                           tosh	equ	0xFFE
  4593                           tosl	equ	0xFFD
  4594                           pclath	equ	0xFFA
  4595                           tblptru	equ	0xFF8
  4596                           tblptrh	equ	0xFF7
  4597                           tblptrl	equ	0xFF6
  4598                           tablat	equ	0xFF5
  4599                           prodh	equ	0xFF4
  4600                           prodl	equ	0xFF3
  4601                           intcon	equ	0xFF2
  4602                           intcon2	equ	0xFF1
  4603                           intcon3	equ	0xFF0
  4604                           postinc0	equ	0xFEE
  4605                           wreg	equ	0xFE8
  4606                           postinc1	equ	0xFE6
  4607                           postdec1	equ	0xFE5
  4608                           fsr1h	equ	0xFE2
  4609                           fsr1l	equ	0xFE1
  4610                           indf2	equ	0xFDF
  4611                           postinc2	equ	0xFDE
  4612                           postdec2	equ	0xFDD
  4613                           fsr2h	equ	0xFDA
  4614                           fsr2l	equ	0xFD9
  4615                           status	equ	0xFD8
  4616                           
  4617 ;; *************** function _InitializeTasks *****************
  4618 ;; Defined at:
  4619 ;;		line 79 in file "../Source/c/02_Osl/os_sched.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  ActiveTaskIn    1  141[BANK0 ] unsigned char 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4634 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4635 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4637 ;;Total ram usage:        3 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:   21
  4640 ;; This function calls:
  4641 ;;		_I2cSlv_MainTask
  4642 ;;		_Led_MainTask
  4643 ;;		_MdmWifiCmd_MainTask
  4644 ;;		_MdmWifiHttp_MainTask
  4645 ;;		_MdmWifi_DrvMainFn
  4646 ;;		_MdmWifi_MainTask
  4647 ;;		_Rtcm_MainTask
  4648 ;;		_Term_MainTask
  4649 ;;		_UsbDevice_MainTask
  4650 ;; This function is called by:
  4651 ;;		_Sch_MainScheduler
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text15
  4656  003CDA                     __ptext15:
  4657                           	opt stack 0
  4658  003CDA                     _InitializeTasks:
  4659                           	opt stack 8
  4660                           
  4661                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  4662                           
  4663                           ; BSR set to: 0
  4664                           ;incstack = 0
  4665  003CDA  0E00               	movlw	0
  4666  003CDC  0100               	movlb	0	; () banked
  4667  003CDE  6FED               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4668                           
  4669                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  4670  003CE0  0E00               	movlw	0
  4671  003CE2  6FED               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4672  003CE4                     l9109:
  4673                           
  4674                           ; BSR set to: 0
  4675  003CE4  0EDF               	movlw	low _TaskNumber
  4676  003CE6  6EF6               	movwf	tblptrl,c
  4677  003CE8                     	if	1	;There is more than 1 active tblptr byte
  4678  003CE8  0EFC               	movlw	high _TaskNumber
  4679  003CEA  6EF7               	movwf	tblptrh,c
  4680  003CEC                     	endif
  4681  003CEC                     	if	1	;There are 3 active tblptr bytes
  4682  003CEC  0E00               	movlw	low (_TaskNumber shr (0+16))
  4683  003CEE  6EF8               	movwf	tblptru,c
  4684  003CF0                     	endif
  4685  003CF0  51ED               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4686  003CF2  6FEB               	movwf	??_InitializeTasks& (0+255),b
  4687  003CF4  6BEC               	clrf	(??_InitializeTasks+1)& (0+255),b
  4688  003CF6  0009               	tblrd		*+
  4689  003CF8  50F5               	movf	tablat,w,c
  4690  003CFA  5DEB               	subwf	??_InitializeTasks& (0+255),w,b
  4691  003CFC  0009               	tblrd		*+
  4692  003CFE  50F5               	movf	tablat,w,c
  4693  003D00  59EC               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  4694  003D02  B0D8               	btfsc	status,0,c
  4695  003D04  0012               	return	
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;os_sched.c: 86: {
  4699                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4700                           
  4701                           ; BSR set to: 0
  4702                           
  4703                           ; BSR set to: 0
  4704  003D06  51ED               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4705  003D08  0D08               	mullw	8
  4706  003D0A  0E8B               	movlw	low _TaskTable
  4707  003D0C  24F3               	addwf	prodl,w,c
  4708  003D0E  6ED9               	movwf	fsr2l,c
  4709  003D10  0E02               	movlw	high _TaskTable
  4710  003D12  20F4               	addwfc	prodh,w,c
  4711  003D14  6EDA               	movwf	fsr2h,c
  4712  003D16  CFDE F0EB          	movff	postinc2,??_InitializeTasks
  4713  003D1A  CFDD F0EC          	movff	postdec2,??_InitializeTasks+1
  4714  003D1E  D801               	call	u7948
  4715  003D20  D016               	goto	u7949
  4716  003D22                     u7948:
  4717  003D22  0005               	push	
  4718  003D24  6EFA               	movwf	pclath,c
  4719  003D26  51EB               	movf	??_InitializeTasks& (0+255),w,b
  4720  003D28  6EFD               	movwf	tosl,c
  4721  003D2A  51EC               	movf	(??_InitializeTasks+1)& (0+255),w,b
  4722  003D2C  6EFE               	movwf	tosh,c
  4723  003D2E  6AFF               	clrf	tosu,c
  4724  003D30  50FA               	movf	pclath,w,c
  4725  003D32  51ED               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4726  003D34  0D08               	mullw	8
  4727  003D36  0E07               	movlw	7
  4728  003D38  26F3               	addwf	prodl,f,c
  4729  003D3A  0E00               	movlw	0
  4730  003D3C  22F4               	addwfc	prodh,f,c
  4731  003D3E  0E8B               	movlw	low _TaskTable
  4732  003D40  24F3               	addwf	prodl,w,c
  4733  003D42  6ED9               	movwf	fsr2l,c
  4734  003D44  0E02               	movlw	high _TaskTable
  4735  003D46  20F4               	addwfc	prodh,w,c
  4736  003D48  6EDA               	movwf	fsr2h,c
  4737  003D4A  50DF               	movf	indf2,w,c
  4738  003D4C  0012               	return		;indir
  4739  003D4E                     u7949:
  4740  003D4E  0100               	movlb	0	; () banked
  4741  003D50  2BED               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  4742  003D52  D7C8               	goto	l9109
  4743  003D54                     __end_of_InitializeTasks:
  4744                           	opt stack 0
  4745                           tosu	equ	0xFFF
  4746                           tosh	equ	0xFFE
  4747                           tosl	equ	0xFFD
  4748                           pclath	equ	0xFFA
  4749                           tblptru	equ	0xFF8
  4750                           tblptrh	equ	0xFF7
  4751                           tblptrl	equ	0xFF6
  4752                           tablat	equ	0xFF5
  4753                           prodh	equ	0xFF4
  4754                           prodl	equ	0xFF3
  4755                           intcon	equ	0xFF2
  4756                           intcon2	equ	0xFF1
  4757                           intcon3	equ	0xFF0
  4758                           postinc0	equ	0xFEE
  4759                           wreg	equ	0xFE8
  4760                           postinc1	equ	0xFE6
  4761                           postdec1	equ	0xFE5
  4762                           fsr1h	equ	0xFE2
  4763                           fsr1l	equ	0xFE1
  4764                           indf2	equ	0xFDF
  4765                           postinc2	equ	0xFDE
  4766                           postdec2	equ	0xFDD
  4767                           fsr2h	equ	0xFDA
  4768                           fsr2l	equ	0xFD9
  4769                           status	equ	0xFD8
  4770                           
  4771 ;; *************** function _Term_MainTask *****************
  4772 ;; Defined at:
  4773 ;;		line 816 in file "../Source/c/03_Sml/02_Ssl/term.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;  Options         1    wreg     unsigned char 
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;  Options         1    0[COMRAM] unsigned char 
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4791 ;;Total ram usage:        0 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:   16
  4794 ;; This function calls:
  4795 ;;		_Term_MainSm
  4796 ;; This function is called by:
  4797 ;;		_InitializeTasks
  4798 ;;		_ScheduleTasks
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text16
  4803  004DCE                     __ptext16:
  4804                           	opt stack 0
  4805  004DCE                     _Term_MainTask:
  4806                           	opt stack 12
  4807                           
  4808                           ;term.c: 818: switch (SystemState)
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;incstack = 0
  4812  004DCE  D003               	goto	l2116
  4813  004DD0                     
  4814                           ;term.c: 829: Term_MainSm();
  4815  004DD0  EC72  F002         	call	_Term_MainSm
  4816                           
  4817                           ;term.c: 836: }
  4818                           
  4819                           ;term.c: 835: break;
  4820                           
  4821                           ;term.c: 834: default:
  4822                           
  4823                           ;term.c: 831: break;
  4824  004DD4  0012               	return	
  4825  004DD6                     l2116:
  4826  004DD6  0100               	movlb	0	; () banked
  4827  004DD8  51FE               	movf	_SystemState& (0+255),w,b
  4828                           
  4829                           ; Switch size 1, requested type "space"
  4830                           ; Number of cases is 2, Range of values is 0 to 1
  4831                           ; switch strategies available:
  4832                           ; Name         Instructions Cycles
  4833                           ; simple_byte            7     4 (average)
  4834                           ;	Chosen strategy is simple_byte
  4835  004DDA  0A00               	xorlw	0	; case 0
  4836  004DDC  B4D8               	btfsc	status,2,c
  4837  004DDE  0012               	return	
  4838  004DE0  0A01               	xorlw	1	; case 1
  4839  004DE2  A4D8               	btfss	status,2,c
  4840  004DE4  0012               	return	
  4841  004DE6  D7F4               	goto	l2119
  4842  004DE8                     __end_of_Term_MainTask:
  4843                           	opt stack 0
  4844                           tosu	equ	0xFFF
  4845                           tosh	equ	0xFFE
  4846                           tosl	equ	0xFFD
  4847                           pclath	equ	0xFFA
  4848                           tblptru	equ	0xFF8
  4849                           tblptrh	equ	0xFF7
  4850                           tblptrl	equ	0xFF6
  4851                           tablat	equ	0xFF5
  4852                           prodh	equ	0xFF4
  4853                           prodl	equ	0xFF3
  4854                           intcon	equ	0xFF2
  4855                           intcon2	equ	0xFF1
  4856                           intcon3	equ	0xFF0
  4857                           postinc0	equ	0xFEE
  4858                           wreg	equ	0xFE8
  4859                           postinc1	equ	0xFE6
  4860                           postdec1	equ	0xFE5
  4861                           fsr1h	equ	0xFE2
  4862                           fsr1l	equ	0xFE1
  4863                           indf2	equ	0xFDF
  4864                           postinc2	equ	0xFDE
  4865                           postdec2	equ	0xFDD
  4866                           fsr2h	equ	0xFDA
  4867                           fsr2l	equ	0xFD9
  4868                           status	equ	0xFD8
  4869                           
  4870 ;; *************** function _Rtcm_MainTask *****************
  4871 ;; Defined at:
  4872 ;;		line 99 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  Options         1    wreg     unsigned char 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  Options         1    0[COMRAM] unsigned char 
  4877 ;; Return value:  Size  Location     Type
  4878 ;;                  1    wreg      void 
  4879 ;; Registers used:
  4880 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4881 ;; Tracked objects:
  4882 ;;		On entry : 0/0
  4883 ;;		On exit  : 0/0
  4884 ;;		Unchanged: 0/0
  4885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4890 ;;Total ram usage:        0 bytes
  4891 ;; Hardware stack levels used:    1
  4892 ;; Hardware stack levels required when called:   14
  4893 ;; This function calls:
  4894 ;;		_Rtcc_AlarmConfig
  4895 ;;		_Rtcc_LockRtc
  4896 ;;		_Rtcc_RtcConfig
  4897 ;;		_Rtcc_SetRtcStatus
  4898 ;;		_Rtcc_UnlockRtc
  4899 ;;		_Rtcm_GetRtccDate
  4900 ;;		_Rtcm_SetAlarmAction
  4901 ;;		_Rtcm_SetRtccDate
  4902 ;; This function is called by:
  4903 ;;		_InitializeTasks
  4904 ;;		_ScheduleTasks
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908                           	psect	text17
  4909  003506                     __ptext17:
  4910                           	opt stack 0
  4911  003506                     _Rtcm_MainTask:
  4912                           	opt stack 14
  4913                           
  4914                           ;rtcm.c: 101: switch (SystemState)
  4915                           
  4916                           ;incstack = 0
  4917  003506  D044               	goto	l1859
  4918  003508                     l1860:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  4922  003508  86CD               	bsf	4045,3,c	;volatile
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  4926  00350A  0E00               	movlw	0
  4927  00350C  0101               	movlb	1	; () banked
  4928  00350E  6FBD               	movwf	_RtcConfig& (0+255),b
  4929                           
  4930                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  4931  003510  0E00               	movlw	0
  4932  003512  6FBE               	movwf	(_RtcConfig+1)& (0+255),b
  4933                           
  4934                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  4935  003514  0E01               	movlw	1
  4936  003516  6FBF               	movwf	(_RtcConfig+2)& (0+255),b
  4937                           
  4938                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  4939  003518  0E01               	movlw	1
  4940  00351A  6FC0               	movwf	(_RtcConfig+3)& (0+255),b
  4941                           
  4942                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  4943  00351C  0E01               	movlw	1
  4944  00351E  6FB9               	movwf	_AlCfg& (0+255),b
  4945                           
  4946                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  4947  003520  0E01               	movlw	1
  4948  003522  6FBA               	movwf	(_AlCfg+1)& (0+255),b
  4949                           
  4950                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  4951  003524  0E01               	movlw	1
  4952  003526  6FBB               	movwf	(_AlCfg+2)& (0+255),b
  4953                           
  4954                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  4955  003528  0E00               	movlw	0
  4956  00352A  6FBC               	movwf	(_AlCfg+3)& (0+255),b
  4957                           
  4958                           ; BSR set to: 1
  4959                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  4960  00352C  EC53  F027         	call	_Rtcc_UnlockRtc	;wreg free
  4961                           
  4962                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  4963  003530  0EBD               	movlw	low _RtcConfig
  4964  003532  0100               	movlb	0	; () banked
  4965  003534  6F61               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  4966  003536  0E01               	movlw	high _RtcConfig
  4967  003538  6F62               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  4968  00353A  EC33  F01A         	call	_Rtcc_RtcConfig	;wreg free
  4969                           
  4970                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  4971  00353E  0EB9               	movlw	low _AlCfg
  4972  003540  0100               	movlb	0	; () banked
  4973  003542  6F60               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  4974  003544  0E01               	movlw	high _AlCfg
  4975  003546  6F61               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  4976  003548  EC8A  F01F         	call	_Rtcc_AlarmConfig	;wreg free
  4977                           
  4978                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  4979  00354C  0E01               	movlw	1
  4980  00354E  EC0C  F027         	call	_Rtcc_SetRtcStatus
  4981                           
  4982                           ;rtcm.c: 127: Rtcc_LockRtc();
  4983  003552  EC5B  F027         	call	_Rtcc_LockRtc	;wreg free
  4984                           
  4985                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  4986  003556  EE21  F00A         	lfsr	2,_Rtcm_SystemDate
  4987  00355A  EE00  F06C         	lfsr	0,Rtcm_SetRtccDate@Date
  4988  00355E  0E07               	movlw	7
  4989  003560                     u7841:
  4990  003560  CFDB FFEB          	movff	plusw2,plusw0
  4991  003564  06E8               	decf	wreg,f,c
  4992  003566  E2FC               	bc	u7841
  4993  003568  ECC3  F021         	call	_Rtcm_SetRtccDate	;wreg free
  4994                           
  4995                           ;rtcm.c: 131: Rtcm_SetAlarmAction(&Alarm);
  4996  00356C  0E70               	movlw	low _Alarm
  4997  00356E  0100               	movlb	0	; () banked
  4998  003570  6F62               	movwf	Rtcm_SetAlarmAction@Action& (0+255),b
  4999  003572  0E4B               	movlw	high _Alarm
  5000  003574  6F63               	movwf	(Rtcm_SetAlarmAction@Action+1)& (0+255),b
  5001  003576  EC82  F027         	call	_Rtcm_SetAlarmAction	;wreg free
  5002                           
  5003                           ;rtcm.c: 156: break;
  5004  00357A  0012               	return	
  5005  00357C                     
  5006                           ;rtcm.c: 161: Rtcm_SystemDate = Rtcm_GetRtccDate();
  5007  00357C  ECF6  F01F         	call	_Rtcm_GetRtccDate	;wreg free
  5008  003580  EE21  F00A         	lfsr	2,_Rtcm_SystemDate
  5009  003584  0E07               	movlw	7
  5010  003586                     u7851:
  5011  003586  CFEB FFDB          	movff	plusw0,plusw2
  5012  00358A  06E8               	decf	wreg,f,c
  5013  00358C  E2FC               	bc	u7851
  5014                           
  5015                           ;rtcm.c: 167: }
  5016                           
  5017                           ;rtcm.c: 166: break;
  5018                           
  5019                           ;rtcm.c: 165: default:
  5020                           
  5021                           ;rtcm.c: 162: break;
  5022  00358E  0012               	return	
  5023  003590                     l1859:
  5024  003590  0100               	movlb	0	; () banked
  5025  003592  51FE               	movf	_SystemState& (0+255),w,b
  5026                           
  5027                           ; Switch size 1, requested type "space"
  5028                           ; Number of cases is 2, Range of values is 0 to 1
  5029                           ; switch strategies available:
  5030                           ; Name         Instructions Cycles
  5031                           ; simple_byte            7     4 (average)
  5032                           ;	Chosen strategy is simple_byte
  5033  003594  0A00               	xorlw	0	; case 0
  5034  003596  B4D8               	btfsc	status,2,c
  5035  003598  D7B7               	goto	l1860
  5036  00359A  0A01               	xorlw	1	; case 1
  5037  00359C  A4D8               	btfss	status,2,c
  5038  00359E  0012               	return	
  5039  0035A0  D7ED               	goto	l1862
  5040  0035A2                     __end_of_Rtcm_MainTask:
  5041                           	opt stack 0
  5042                           tosu	equ	0xFFF
  5043                           tosh	equ	0xFFE
  5044                           tosl	equ	0xFFD
  5045                           pclath	equ	0xFFA
  5046                           tblptru	equ	0xFF8
  5047                           tblptrh	equ	0xFF7
  5048                           tblptrl	equ	0xFF6
  5049                           tablat	equ	0xFF5
  5050                           prodh	equ	0xFF4
  5051                           prodl	equ	0xFF3
  5052                           intcon	equ	0xFF2
  5053                           intcon2	equ	0xFF1
  5054                           intcon3	equ	0xFF0
  5055                           postinc0	equ	0xFEE
  5056                           plusw0	equ	0xFEB
  5057                           wreg	equ	0xFE8
  5058                           postinc1	equ	0xFE6
  5059                           postdec1	equ	0xFE5
  5060                           fsr1h	equ	0xFE2
  5061                           fsr1l	equ	0xFE1
  5062                           indf2	equ	0xFDF
  5063                           postinc2	equ	0xFDE
  5064                           postdec2	equ	0xFDD
  5065                           plusw2	equ	0xFDB
  5066                           fsr2h	equ	0xFDA
  5067                           fsr2l	equ	0xFD9
  5068                           status	equ	0xFD8
  5069                           
  5070 ;; *************** function _Led_MainTask *****************
  5071 ;; Defined at:
  5072 ;;		line 169 in file "../Source/c/03_Sml/02_Ssl/led.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  Options         1    wreg     unsigned char 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  Options         1    0[COMRAM] unsigned char 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5088 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5090 ;;Total ram usage:        1 bytes
  5091 ;; Hardware stack levels used:    1
  5092 ;; Hardware stack levels required when called:   14
  5093 ;; This function calls:
  5094 ;;		_OsTmr_GetTimerStatus
  5095 ;;		_OsTmr_StartTimer
  5096 ;; This function is called by:
  5097 ;;		_InitializeTasks
  5098 ;;		_ScheduleTasks
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text18
  5103  00391C                     __ptext18:
  5104                           	opt stack 0
  5105  00391C                     _Led_MainTask:
  5106                           	opt stack 14
  5107                           
  5108                           ;led.c: 171: static SwTimerType LedTimer1 = { 1u, SwTimerExpired, 0, 0, };
  5109                           ;led.c: 172: static SwTimerType LedTimer2 = { 1u, SwTimerExpired, 0, 0, };
  5110                           ;led.c: 174: switch (SystemState)
  5111                           
  5112                           ;incstack = 0
  5113  00391C  D03C               	goto	l1797
  5114  00391E                     l1798:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;led.c: 179: TRISDbits.TRISD4 = ((UINT8)(0));
  5118  00391E  9895               	bcf	3989,4,c	;volatile
  5119                           
  5120                           ;led.c: 180: TRISDbits.TRISD5 = ((UINT8)(0));
  5121  003920  9A95               	bcf	3989,5,c	;volatile
  5122                           
  5123                           ;led.c: 181: TRISDbits.TRISD6 = ((UINT8)(0));
  5124  003922  9C95               	bcf	3989,6,c	;volatile
  5125                           
  5126                           ;led.c: 182: PORTDbits.RD4 = ((UINT8)(0));
  5127  003924  9883               	bcf	3971,4,c	;volatile
  5128                           
  5129                           ;led.c: 183: PORTDbits.RD5 = ((UINT8)(0));
  5130  003926  9A83               	bcf	3971,5,c	;volatile
  5131                           
  5132                           ;led.c: 184: PORTDbits.RD6 = ((UINT8)(0));
  5133  003928  9C83               	bcf	3971,6,c	;volatile
  5134                           
  5135                           ; BSR set to: 0
  5136                           ;led.c: 186: OsTmr_StartTimer(&LedTimer1,((UINT16)(1000)));
  5137  00392A  0EEC               	movlw	low Led_MainTask@LedTimer1
  5138  00392C  6F64               	movwf	OsTmr_StartTimer@Timer& (0+255),b
  5139  00392E  0E01               	movlw	high Led_MainTask@LedTimer1
  5140  003930  6F65               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
  5141  003932  0EE8               	movlw	232
  5142  003934  6F66               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
  5143  003936  0E03               	movlw	3
  5144  003938  6F67               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
  5145  00393A  0E00               	movlw	0
  5146  00393C  6F68               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
  5147  00393E  0E00               	movlw	0
  5148  003940  6F69               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
  5149  003942  ECBB  F020         	call	_OsTmr_StartTimer	;wreg free
  5150                           
  5151                           ;led.c: 187: break;
  5152  003946  0012               	return	
  5153  003948                     
  5154                           ;led.c: 192: if (OsTmr_GetTimerStatus(&LedTimer1) == SwTimerExpired)
  5155  003948  0EEC               	movlw	low Led_MainTask@LedTimer1
  5156  00394A  0100               	movlb	0	; () banked
  5157  00394C  6F78               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
  5158  00394E  0E01               	movlw	high Led_MainTask@LedTimer1
  5159  003950  6F79               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
  5160  003952  EC46  F01C         	call	_OsTmr_GetTimerStatus	;wreg free
  5161  003956  06E8               	decf	wreg,f,c
  5162  003958  A4D8               	btfss	status,2,c
  5163  00395A  0012               	return	
  5164                           
  5165                           ;led.c: 193: {
  5166                           ;led.c: 195: PORTDbits.RD4 = !PORTDbits.RD4;
  5167  00395C  B883               	btfsc	3971,4,c	;volatile
  5168  00395E  D004               	goto	u7820
  5169  003960  0100               	movlb	0	; () banked
  5170  003962  6B7E               	clrf	??_Led_MainTask& (0+255),b
  5171  003964  2B7E               	incf	??_Led_MainTask& (0+255),f,b
  5172  003966  D002               	goto	u7838
  5173  003968                     u7820:
  5174  003968  0100               	movlb	0	; () banked
  5175  00396A  6B7E               	clrf	??_Led_MainTask& (0+255),b
  5176  00396C                     u7838:
  5177  00396C  3B7E               	swapf	??_Led_MainTask& (0+255),f,b
  5178  00396E  5083               	movf	3971,w,c	;volatile
  5179  003970  197E               	xorwf	??_Led_MainTask& (0+255),w,b
  5180  003972  0BEF               	andlw	-17
  5181  003974  197E               	xorwf	??_Led_MainTask& (0+255),w,b
  5182  003976  6E83               	movwf	3971,c	;volatile
  5183                           
  5184                           ; BSR set to: 0
  5185                           ;led.c: 197: OsTmr_StartTimer(&LedTimer1,((UINT16)(1000)));
  5186  003978  0EEC               	movlw	low Led_MainTask@LedTimer1
  5187  00397A  6F64               	movwf	OsTmr_StartTimer@Timer& (0+255),b
  5188  00397C  0E01               	movlw	high Led_MainTask@LedTimer1
  5189  00397E  6F65               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
  5190  003980  0EE8               	movlw	232
  5191  003982  6F66               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
  5192  003984  0E03               	movlw	3
  5193  003986  6F67               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
  5194  003988  0E00               	movlw	0
  5195  00398A  6F68               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
  5196  00398C  0E00               	movlw	0
  5197  00398E  6F69               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
  5198  003990  ECBB  F020         	call	_OsTmr_StartTimer	;wreg free
  5199                           
  5200                           ;led.c: 204: }
  5201                           
  5202                           ;led.c: 203: break;
  5203                           
  5204                           ;led.c: 202: default:
  5205                           
  5206                           ;led.c: 198: }
  5207                           ;led.c: 199: break;
  5208  003994  0012               	return	
  5209  003996                     l1797:
  5210  003996  0100               	movlb	0	; () banked
  5211  003998  51FE               	movf	_SystemState& (0+255),w,b
  5212                           
  5213                           ; Switch size 1, requested type "space"
  5214                           ; Number of cases is 2, Range of values is 0 to 1
  5215                           ; switch strategies available:
  5216                           ; Name         Instructions Cycles
  5217                           ; simple_byte            7     4 (average)
  5218                           ;	Chosen strategy is simple_byte
  5219  00399A  0A00               	xorlw	0	; case 0
  5220  00399C  B4D8               	btfsc	status,2,c
  5221  00399E  D7BF               	goto	l1798
  5222  0039A0  0A01               	xorlw	1	; case 1
  5223  0039A2  A4D8               	btfss	status,2,c
  5224  0039A4  0012               	return	
  5225  0039A6  D7D0               	goto	l1800
  5226  0039A8                     __end_of_Led_MainTask:
  5227                           	opt stack 0
  5228                           tosu	equ	0xFFF
  5229                           tosh	equ	0xFFE
  5230                           tosl	equ	0xFFD
  5231                           pclath	equ	0xFFA
  5232                           tblptru	equ	0xFF8
  5233                           tblptrh	equ	0xFF7
  5234                           tblptrl	equ	0xFF6
  5235                           tablat	equ	0xFF5
  5236                           prodh	equ	0xFF4
  5237                           prodl	equ	0xFF3
  5238                           intcon	equ	0xFF2
  5239                           intcon2	equ	0xFF1
  5240                           intcon3	equ	0xFF0
  5241                           postinc0	equ	0xFEE
  5242                           plusw0	equ	0xFEB
  5243                           wreg	equ	0xFE8
  5244                           postinc1	equ	0xFE6
  5245                           postdec1	equ	0xFE5
  5246                           fsr1h	equ	0xFE2
  5247                           fsr1l	equ	0xFE1
  5248                           indf2	equ	0xFDF
  5249                           postinc2	equ	0xFDE
  5250                           postdec2	equ	0xFDD
  5251                           plusw2	equ	0xFDB
  5252                           fsr2h	equ	0xFDA
  5253                           fsr2l	equ	0xFD9
  5254                           status	equ	0xFD8
  5255                           
  5256 ;; *************** function _MdmWifiHttp_MainTask *****************
  5257 ;; Defined at:
  5258 ;;		line 74 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_http.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  Options         1    wreg     unsigned char 
  5261 ;; Auto vars:     Size  Location     Type
  5262 ;;  Options         1    0[COMRAM] unsigned char 
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1    wreg      void 
  5265 ;; Registers used:
  5266 ;;		wreg, status,2, status,0
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5276 ;;Total ram usage:        0 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:   11
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_InitializeTasks
  5283 ;;		_ScheduleTasks
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text19
  5288  004EF6                     __ptext19:
  5289                           	opt stack 0
  5290  004EF6                     _MdmWifiHttp_MainTask:
  5291                           	opt stack 17
  5292                           
  5293                           ;mdm_wifi_http.c: 91: }
  5294                           
  5295                           ;mdm_wifi_http.c: 90: break;
  5296                           
  5297                           ;mdm_wifi_http.c: 89: default:
  5298                           
  5299                           ;mdm_wifi_http.c: 86: break;
  5300                           
  5301                           ;mdm_wifi_http.c: 84: case RunningState:
  5302                           
  5303                           ;mdm_wifi_http.c: 81: break;
  5304                           
  5305                           ;mdm_wifi_http.c: 77: {
  5306                           ;mdm_wifi_http.c: 79: case InitializationState:
  5307                           
  5308                           ;mdm_wifi_http.c: 76: switch (SystemState)
  5309                           
  5310                           ;incstack = 0
  5311  004EF6  0100               	movlb	0	; () banked
  5312  004EF8  51FE               	movf	_SystemState& (0+255),w,b
  5313                           
  5314                           ; Switch size 1, requested type "space"
  5315                           ; Number of cases is 2, Range of values is 0 to 1
  5316                           ; switch strategies available:
  5317                           ; Name         Instructions Cycles
  5318                           ; simple_byte            7     4 (average)
  5319                           ;	Chosen strategy is simple_byte
  5320  004EFA  0A00               	xorlw	0	; case 0
  5321  004EFC  B4D8               	btfsc	status,2,c
  5322  004EFE  0012               	return	
  5323  004F00  0A01               	xorlw	1	; case 1
  5324  004F02  0012               	return	
  5325  004F04                     __end_of_MdmWifiHttp_MainTask:
  5326                           	opt stack 0
  5327                           tosu	equ	0xFFF
  5328                           tosh	equ	0xFFE
  5329                           tosl	equ	0xFFD
  5330                           pclath	equ	0xFFA
  5331                           tblptru	equ	0xFF8
  5332                           tblptrh	equ	0xFF7
  5333                           tblptrl	equ	0xFF6
  5334                           tablat	equ	0xFF5
  5335                           prodh	equ	0xFF4
  5336                           prodl	equ	0xFF3
  5337                           intcon	equ	0xFF2
  5338                           intcon2	equ	0xFF1
  5339                           intcon3	equ	0xFF0
  5340                           postinc0	equ	0xFEE
  5341                           plusw0	equ	0xFEB
  5342                           wreg	equ	0xFE8
  5343                           postinc1	equ	0xFE6
  5344                           postdec1	equ	0xFE5
  5345                           fsr1h	equ	0xFE2
  5346                           fsr1l	equ	0xFE1
  5347                           indf2	equ	0xFDF
  5348                           postinc2	equ	0xFDE
  5349                           postdec2	equ	0xFDD
  5350                           plusw2	equ	0xFDB
  5351                           fsr2h	equ	0xFDA
  5352                           fsr2l	equ	0xFD9
  5353                           status	equ	0xFD8
  5354                           
  5355 ;; *************** function _MdmWifiCmd_MainTask *****************
  5356 ;; Defined at:
  5357 ;;		line 330 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;  Options         1    wreg     unsigned char 
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;  Options         1    0[COMRAM] unsigned char 
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      void 
  5364 ;; Registers used:
  5365 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5375 ;;Total ram usage:        0 bytes
  5376 ;; Hardware stack levels used:    1
  5377 ;; Hardware stack levels required when called:   15
  5378 ;; This function calls:
  5379 ;;		_ReceiveDataSm
  5380 ;;		_SendDataSm
  5381 ;;		_StartConnectionSm
  5382 ;; This function is called by:
  5383 ;;		_InitializeTasks
  5384 ;;		_ScheduleTasks
  5385 ;; This function uses a non-reentrant model
  5386 ;;
  5387                           
  5388                           	psect	text20
  5389  004C0C                     __ptext20:
  5390                           	opt stack 0
  5391  004C0C                     _MdmWifiCmd_MainTask:
  5392                           	opt stack 13
  5393                           
  5394                           ;mdm_wifi_cmd.c: 332: switch (SystemState)
  5395                           
  5396                           ;incstack = 0
  5397  004C0C  D007               	goto	l1022
  5398  004C0E                     
  5399                           ;mdm_wifi_cmd.c: 342: StartConnectionSm();
  5400  004C0E  ECE5  F005         	call	_StartConnectionSm	;wreg free
  5401                           
  5402                           ;mdm_wifi_cmd.c: 344: SendDataSm();
  5403  004C12  ECB1  F009         	call	_SendDataSm	;wreg free
  5404                           
  5405                           ;mdm_wifi_cmd.c: 346: ReceiveDataSm();
  5406  004C16  EC1C  F023         	call	_ReceiveDataSm	;wreg free
  5407                           
  5408                           ;mdm_wifi_cmd.c: 352: }
  5409                           
  5410                           ;mdm_wifi_cmd.c: 351: break;
  5411                           
  5412                           ;mdm_wifi_cmd.c: 350: default:
  5413                           
  5414                           ;mdm_wifi_cmd.c: 347: break;
  5415  004C1A  0012               	return	
  5416  004C1C                     l1022:
  5417  004C1C  0100               	movlb	0	; () banked
  5418  004C1E  51FE               	movf	_SystemState& (0+255),w,b
  5419                           
  5420                           ; Switch size 1, requested type "space"
  5421                           ; Number of cases is 2, Range of values is 0 to 1
  5422                           ; switch strategies available:
  5423                           ; Name         Instructions Cycles
  5424                           ; simple_byte            7     4 (average)
  5425                           ;	Chosen strategy is simple_byte
  5426  004C20  0A00               	xorlw	0	; case 0
  5427  004C22  B4D8               	btfsc	status,2,c
  5428  004C24  0012               	return	
  5429  004C26  0A01               	xorlw	1	; case 1
  5430  004C28  A4D8               	btfss	status,2,c
  5431  004C2A  0012               	return	
  5432  004C2C  D7F0               	goto	l1025
  5433  004C2E                     __end_of_MdmWifiCmd_MainTask:
  5434                           	opt stack 0
  5435                           tosu	equ	0xFFF
  5436                           tosh	equ	0xFFE
  5437                           tosl	equ	0xFFD
  5438                           pclath	equ	0xFFA
  5439                           tblptru	equ	0xFF8
  5440                           tblptrh	equ	0xFF7
  5441                           tblptrl	equ	0xFF6
  5442                           tablat	equ	0xFF5
  5443                           prodh	equ	0xFF4
  5444                           prodl	equ	0xFF3
  5445                           intcon	equ	0xFF2
  5446                           intcon2	equ	0xFF1
  5447                           intcon3	equ	0xFF0
  5448                           postinc0	equ	0xFEE
  5449                           plusw0	equ	0xFEB
  5450                           wreg	equ	0xFE8
  5451                           postinc1	equ	0xFE6
  5452                           postdec1	equ	0xFE5
  5453                           fsr1h	equ	0xFE2
  5454                           fsr1l	equ	0xFE1
  5455                           indf2	equ	0xFDF
  5456                           postinc2	equ	0xFDE
  5457                           postdec2	equ	0xFDD
  5458                           plusw2	equ	0xFDB
  5459                           fsr2h	equ	0xFDA
  5460                           fsr2l	equ	0xFD9
  5461                           status	equ	0xFD8
  5462                           
  5463 ;; *************** function _MdmWifi_MainTask *****************
  5464 ;; Defined at:
  5465 ;;		line 283 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  Options         1    wreg     unsigned char 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  Options         1    0[COMRAM] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5483 ;;Total ram usage:        0 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:   14
  5486 ;; This function calls:
  5487 ;;		_MdmWifiEvtParser
  5488 ;;		_MdmWifiGetUartData
  5489 ;;		_UartSetConfig
  5490 ;;		_Uart_InitUartModule
  5491 ;; This function is called by:
  5492 ;;		_InitializeTasks
  5493 ;;		_ScheduleTasks
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text21
  5498  00496C                     __ptext21:
  5499                           	opt stack 0
  5500  00496C                     _MdmWifi_MainTask:
  5501                           	opt stack 14
  5502                           
  5503                           ;mdm_wifi.c: 285: switch (SystemState)
  5504                           
  5505                           ;incstack = 0
  5506  00496C  D010               	goto	l884
  5507  00496E                     
  5508                           ;mdm_wifi.c: 290: UartSetConfig();
  5509  00496E  EC16  F021         	call	_UartSetConfig	;wreg free
  5510                           
  5511                           ;mdm_wifi.c: 292: Uart_InitUartModule(((UINT8)(1)),&UartConfig);
  5512  004972  0E78               	movlw	low _UartConfig
  5513  004974  0100               	movlb	0	; () banked
  5514  004976  6F80               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  5515  004978  0E01               	movlw	high _UartConfig
  5516  00497A  6F81               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  5517  00497C  0E01               	movlw	1
  5518  00497E  EC6B  F004         	call	_Uart_InitUartModule
  5519                           
  5520                           ;mdm_wifi.c: 293: break;
  5521  004982  0012               	return	
  5522  004984                     
  5523                           ;mdm_wifi.c: 298: MdmWifiGetUartData();
  5524  004984  EC76  F015         	call	_MdmWifiGetUartData	;wreg free
  5525                           
  5526                           ;mdm_wifi.c: 300: MdmWifiEvtParser();
  5527  004988  EC1C  F01F         	call	_MdmWifiEvtParser	;wreg free
  5528                           
  5529                           ;mdm_wifi.c: 310: }
  5530                           
  5531                           ;mdm_wifi.c: 309: break;
  5532                           
  5533                           ;mdm_wifi.c: 308: default:
  5534                           
  5535                           ;mdm_wifi.c: 305: break;
  5536  00498C  0012               	return	
  5537  00498E                     l884:
  5538  00498E  0100               	movlb	0	; () banked
  5539  004990  51FE               	movf	_SystemState& (0+255),w,b
  5540                           
  5541                           ; Switch size 1, requested type "space"
  5542                           ; Number of cases is 2, Range of values is 0 to 1
  5543                           ; switch strategies available:
  5544                           ; Name         Instructions Cycles
  5545                           ; simple_byte            7     4 (average)
  5546                           ;	Chosen strategy is simple_byte
  5547  004992  0A00               	xorlw	0	; case 0
  5548  004994  B4D8               	btfsc	status,2,c
  5549  004996  D7EB               	goto	l885
  5550  004998  0A01               	xorlw	1	; case 1
  5551  00499A  A4D8               	btfss	status,2,c
  5552  00499C  0012               	return	
  5553  00499E  D7F2               	goto	l887
  5554  0049A0                     __end_of_MdmWifi_MainTask:
  5555                           	opt stack 0
  5556                           tosu	equ	0xFFF
  5557                           tosh	equ	0xFFE
  5558                           tosl	equ	0xFFD
  5559                           pclath	equ	0xFFA
  5560                           tblptru	equ	0xFF8
  5561                           tblptrh	equ	0xFF7
  5562                           tblptrl	equ	0xFF6
  5563                           tablat	equ	0xFF5
  5564                           prodh	equ	0xFF4
  5565                           prodl	equ	0xFF3
  5566                           intcon	equ	0xFF2
  5567                           intcon2	equ	0xFF1
  5568                           intcon3	equ	0xFF0
  5569                           postinc0	equ	0xFEE
  5570                           plusw0	equ	0xFEB
  5571                           wreg	equ	0xFE8
  5572                           postinc1	equ	0xFE6
  5573                           postdec1	equ	0xFE5
  5574                           fsr1h	equ	0xFE2
  5575                           fsr1l	equ	0xFE1
  5576                           indf2	equ	0xFDF
  5577                           postinc2	equ	0xFDE
  5578                           postdec2	equ	0xFDD
  5579                           plusw2	equ	0xFDB
  5580                           fsr2h	equ	0xFDA
  5581                           fsr2l	equ	0xFD9
  5582                           status	equ	0xFD8
  5583                           
  5584 ;; *************** function _I2cSlv_MainTask *****************
  5585 ;; Defined at:
  5586 ;;		line 199 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  5587 ;; Parameters:    Size  Location     Type
  5588 ;;  Options         1    wreg     unsigned char 
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;  Options         1    0[COMRAM] unsigned char 
  5591 ;; Return value:  Size  Location     Type
  5592 ;;                  1    wreg      void 
  5593 ;; Registers used:
  5594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5595 ;; Tracked objects:
  5596 ;;		On entry : 0/0
  5597 ;;		On exit  : 0/0
  5598 ;;		Unchanged: 0/0
  5599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5604 ;;Total ram usage:        0 bytes
  5605 ;; Hardware stack levels used:    1
  5606 ;; Hardware stack levels required when called:   14
  5607 ;; This function calls:
  5608 ;;		_I2cSendMsgSm
  5609 ;;		_I2cSetConfig
  5610 ;;		_I2c_InitI2cModule
  5611 ;;		_OsAlrm_SetOsAlarm
  5612 ;; This function is called by:
  5613 ;;		_InitializeTasks
  5614 ;;		_ScheduleTasks
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           	psect	text22
  5619  004332                     __ptext22:
  5620                           	opt stack 0
  5621  004332                     _I2cSlv_MainTask:
  5622                           	opt stack 14
  5623                           
  5624                           ;i2c_slv.c: 201: switch (SystemState)
  5625                           
  5626                           ;incstack = 0
  5627  004332  D020               	goto	l1174
  5628  004334                     
  5629                           ;i2c_slv.c: 206: I2cSetConfig();
  5630  004334  EC78  F025         	call	_I2cSetConfig	;wreg free
  5631                           
  5632                           ;i2c_slv.c: 208: I2c_InitI2cModule(&I2cConfig);
  5633  004338  0E8D               	movlw	low _I2cConfig
  5634  00433A  0100               	movlb	0	; () banked
  5635  00433C  6F85               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  5636  00433E  0E01               	movlw	high _I2cConfig
  5637  004340  6F86               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  5638  004342  ECE3  F01E         	call	_I2c_InitI2cModule	;wreg free
  5639                           
  5640                           ;i2c_slv.c: 210: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  5641  004346  0E00               	movlw	0
  5642  004348  0100               	movlb	0	; () banked
  5643  00434A  6F67               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  5644  00434C  0E00               	movlw	0
  5645  00434E  6F66               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  5646  004350  0E32               	movlw	50
  5647  004352  6F68               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  5648  004354  0E00               	movlw	0
  5649  004356  6F69               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  5650  004358  0E00               	movlw	0
  5651  00435A  6F6A               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  5652  00435C  0E00               	movlw	0
  5653  00435E  6F6B               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  5654  004360  0EB2               	movlw	low _I2cDummyTx
  5655  004362  6F6C               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  5656  004364  0E4D               	movlw	high _I2cDummyTx
  5657  004366  6F6D               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  5658  004368  EC0C  F017         	call	_OsAlrm_SetOsAlarm	;wreg free
  5659                           
  5660                           ;i2c_slv.c: 211: break;
  5661  00436C  0012               	return	
  5662  00436E                     
  5663                           ;i2c_slv.c: 216: I2cSendMsgSm();
  5664  00436E  ECE0  F018         	call	_I2cSendMsgSm	;wreg free
  5665                           
  5666                           ;i2c_slv.c: 222: }
  5667                           
  5668                           ;i2c_slv.c: 221: break;
  5669                           
  5670                           ;i2c_slv.c: 220: default:
  5671                           
  5672                           ;i2c_slv.c: 217: break;
  5673  004372  0012               	return	
  5674  004374                     l1174:
  5675  004374  0100               	movlb	0	; () banked
  5676  004376  51FE               	movf	_SystemState& (0+255),w,b
  5677                           
  5678                           ; Switch size 1, requested type "space"
  5679                           ; Number of cases is 2, Range of values is 0 to 1
  5680                           ; switch strategies available:
  5681                           ; Name         Instructions Cycles
  5682                           ; simple_byte            7     4 (average)
  5683                           ;	Chosen strategy is simple_byte
  5684  004378  0A00               	xorlw	0	; case 0
  5685  00437A  B4D8               	btfsc	status,2,c
  5686  00437C  D7DB               	goto	l1175
  5687  00437E  0A01               	xorlw	1	; case 1
  5688  004380  A4D8               	btfss	status,2,c
  5689  004382  0012               	return	
  5690  004384  D7F4               	goto	l1177
  5691  004386                     __end_of_I2cSlv_MainTask:
  5692                           	opt stack 0
  5693                           tosu	equ	0xFFF
  5694                           tosh	equ	0xFFE
  5695                           tosl	equ	0xFFD
  5696                           pclath	equ	0xFFA
  5697                           tblptru	equ	0xFF8
  5698                           tblptrh	equ	0xFF7
  5699                           tblptrl	equ	0xFF6
  5700                           tablat	equ	0xFF5
  5701                           prodh	equ	0xFF4
  5702                           prodl	equ	0xFF3
  5703                           intcon	equ	0xFF2
  5704                           intcon2	equ	0xFF1
  5705                           intcon3	equ	0xFF0
  5706                           postinc0	equ	0xFEE
  5707                           plusw0	equ	0xFEB
  5708                           wreg	equ	0xFE8
  5709                           postinc1	equ	0xFE6
  5710                           postdec1	equ	0xFE5
  5711                           fsr1h	equ	0xFE2
  5712                           fsr1l	equ	0xFE1
  5713                           indf2	equ	0xFDF
  5714                           postinc2	equ	0xFDE
  5715                           postdec2	equ	0xFDD
  5716                           plusw2	equ	0xFDB
  5717                           fsr2h	equ	0xFDA
  5718                           fsr2l	equ	0xFD9
  5719                           status	equ	0xFD8
  5720                           
  5721 ;; *************** function _MdmWifi_DrvMainFn *****************
  5722 ;; Defined at:
  5723 ;;		line 154 in file "../Source/c/01_Hal/02_Drv/mdm_wifi_drv.c"
  5724 ;; Parameters:    Size  Location     Type
  5725 ;;  Options         1    wreg     unsigned char 
  5726 ;; Auto vars:     Size  Location     Type
  5727 ;;  Options         1    0[COMRAM] unsigned char 
  5728 ;; Return value:  Size  Location     Type
  5729 ;;                  1    wreg      void 
  5730 ;; Registers used:
  5731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5732 ;; Tracked objects:
  5733 ;;		On entry : 0/0
  5734 ;;		On exit  : 0/0
  5735 ;;		Unchanged: 0/0
  5736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5741 ;;Total ram usage:        0 bytes
  5742 ;; Hardware stack levels used:    1
  5743 ;; Hardware stack levels required when called:   13
  5744 ;; This function calls:
  5745 ;;		_MdmWifi_StartWifiModemSm
  5746 ;; This function is called by:
  5747 ;;		_InitializeTasks
  5748 ;;		_ScheduleTasks
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text23
  5753  004F6E                     __ptext23:
  5754                           	opt stack 0
  5755  004F6E                     _MdmWifi_DrvMainFn:
  5756                           	opt stack 15
  5757                           
  5758                           ;mdm_wifi_drv.c: 157: MdmWifi_StartWifiModemSm();
  5759                           
  5760                           ;incstack = 0
  5761  004F6E  ECE8  F01D         	call	_MdmWifi_StartWifiModemSm	;wreg free
  5762  004F72  0012               	return		;funcret
  5763  004F74                     __end_of_MdmWifi_DrvMainFn:
  5764                           	opt stack 0
  5765                           tosu	equ	0xFFF
  5766                           tosh	equ	0xFFE
  5767                           tosl	equ	0xFFD
  5768                           pclath	equ	0xFFA
  5769                           tblptru	equ	0xFF8
  5770                           tblptrh	equ	0xFF7
  5771                           tblptrl	equ	0xFF6
  5772                           tablat	equ	0xFF5
  5773                           prodh	equ	0xFF4
  5774                           prodl	equ	0xFF3
  5775                           intcon	equ	0xFF2
  5776                           intcon2	equ	0xFF1
  5777                           intcon3	equ	0xFF0
  5778                           postinc0	equ	0xFEE
  5779                           plusw0	equ	0xFEB
  5780                           wreg	equ	0xFE8
  5781                           postinc1	equ	0xFE6
  5782                           postdec1	equ	0xFE5
  5783                           fsr1h	equ	0xFE2
  5784                           fsr1l	equ	0xFE1
  5785                           indf2	equ	0xFDF
  5786                           postinc2	equ	0xFDE
  5787                           postdec2	equ	0xFDD
  5788                           plusw2	equ	0xFDB
  5789                           fsr2h	equ	0xFDA
  5790                           fsr2l	equ	0xFD9
  5791                           status	equ	0xFD8
  5792                           
  5793 ;; *************** function _UsbDevice_MainTask *****************
  5794 ;; Defined at:
  5795 ;;		line 72 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  Options         1    wreg     unsigned char 
  5798 ;; Auto vars:     Size  Location     Type
  5799 ;;  Options         1    0[COMRAM] unsigned char 
  5800 ;; Return value:  Size  Location     Type
  5801 ;;                  1    wreg      void 
  5802 ;; Registers used:
  5803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5804 ;; Tracked objects:
  5805 ;;		On entry : 0/0
  5806 ;;		On exit  : 0/0
  5807 ;;		Unchanged: 0/0
  5808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5809 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5812 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5813 ;;Total ram usage:        0 bytes
  5814 ;; Hardware stack levels used:    1
  5815 ;; Hardware stack levels required when called:   20
  5816 ;; This function calls:
  5817 ;;		_CDCTxService
  5818 ;;		_USBDeviceInit
  5819 ;;		_USBDeviceTasks
  5820 ;; This function is called by:
  5821 ;;		_InitializeTasks
  5822 ;;		_ScheduleTasks
  5823 ;; This function uses a non-reentrant model
  5824 ;;
  5825                           
  5826                           	psect	text24
  5827  004BE8                     __ptext24:
  5828                           	opt stack 0
  5829  004BE8                     _UsbDevice_MainTask:
  5830                           	opt stack 8
  5831                           
  5832                           ;usb_device_mgr.c: 74: switch (SystemState)
  5833                           
  5834                           ;incstack = 0
  5835  004BE8  D008               	goto	l1729
  5836  004BEA                     
  5837                           ;usb_device_mgr.c: 79: USBDeviceInit();
  5838  004BEA  EC9B  F00E         	call	_USBDeviceInit	;wreg free
  5839                           
  5840                           ;usb_device_mgr.c: 80: ;
  5841                           ;usb_device_mgr.c: 81: break;
  5842  004BEE  0012               	return	
  5843  004BF0                     
  5844                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  5845  004BF0  ECB1  F00B         	call	_USBDeviceTasks	;wreg free
  5846                           
  5847                           ;usb_device_mgr.c: 90: CDCTxService();
  5848  004BF4  EC42  F00F         	call	_CDCTxService	;wreg free
  5849                           
  5850                           ;usb_device_mgr.c: 101: }
  5851                           
  5852                           ;usb_device_mgr.c: 100: break;
  5853                           
  5854                           ;usb_device_mgr.c: 99: default:
  5855                           
  5856                           ;usb_device_mgr.c: 96: break;
  5857  004BF8  0012               	return	
  5858  004BFA                     l1729:
  5859  004BFA  0100               	movlb	0	; () banked
  5860  004BFC  51FE               	movf	_SystemState& (0+255),w,b
  5861                           
  5862                           ; Switch size 1, requested type "space"
  5863                           ; Number of cases is 2, Range of values is 0 to 1
  5864                           ; switch strategies available:
  5865                           ; Name         Instructions Cycles
  5866                           ; simple_byte            7     4 (average)
  5867                           ;	Chosen strategy is simple_byte
  5868  004BFE  0A00               	xorlw	0	; case 0
  5869  004C00  B4D8               	btfsc	status,2,c
  5870  004C02  D7F3               	goto	l1730
  5871  004C04  0A01               	xorlw	1	; case 1
  5872  004C06  A4D8               	btfss	status,2,c
  5873  004C08  0012               	return	
  5874  004C0A  D7F2               	goto	l1732
  5875  004C0C                     __end_of_UsbDevice_MainTask:
  5876                           	opt stack 0
  5877                           tosu	equ	0xFFF
  5878                           tosh	equ	0xFFE
  5879                           tosl	equ	0xFFD
  5880                           pclath	equ	0xFFA
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           prodh	equ	0xFF4
  5886                           prodl	equ	0xFF3
  5887                           intcon	equ	0xFF2
  5888                           intcon2	equ	0xFF1
  5889                           intcon3	equ	0xFF0
  5890                           postinc0	equ	0xFEE
  5891                           plusw0	equ	0xFEB
  5892                           wreg	equ	0xFE8
  5893                           postinc1	equ	0xFE6
  5894                           postdec1	equ	0xFE5
  5895                           fsr1h	equ	0xFE2
  5896                           fsr1l	equ	0xFE1
  5897                           indf2	equ	0xFDF
  5898                           postinc2	equ	0xFDE
  5899                           postdec2	equ	0xFDD
  5900                           plusw2	equ	0xFDB
  5901                           fsr2h	equ	0xFDA
  5902                           fsr2l	equ	0xFD9
  5903                           status	equ	0xFD8
  5904                           
  5905 ;; *************** function _USBDeviceTasks *****************
  5906 ;; Defined at:
  5907 ;;		line 495 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;		None
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;  i               1   27[BANK0 ] unsigned char 
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1    wreg      void 
  5914 ;; Registers used:
  5915 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5922 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5924 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5925 ;;Total ram usage:        1 bytes
  5926 ;; Hardware stack levels used:    1
  5927 ;; Hardware stack levels required when called:   19
  5928 ;; This function calls:
  5929 ;;		_USBCtrlEPAllowStatusStage
  5930 ;;		_USBCtrlEPService
  5931 ;;		_USBDeviceInit
  5932 ;;		_USBIncrement1msInternalTimers
  5933 ;;		_USBStallHandler
  5934 ;;		_USBSuspend
  5935 ;;		_USBWakeFromSuspend
  5936 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5937 ;; This function is called by:
  5938 ;;		_UsbDevice_MainTask
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text25
  5943  001762                     __ptext25:
  5944                           	opt stack 0
  5945  001762                     _USBDeviceTasks:
  5946                           	opt stack 8
  5947                           
  5948                           ;usb_device.c: 562: }
  5949                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  5950                           
  5951                           ; BSR set to: 0
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;usb_device.c: 561: return;
  5955                           
  5956                           ; BSR set to: 0
  5957                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  5958                           
  5959                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  5960                           
  5961                           ;usb_device.c: 529: UIE = 0;
  5962                           
  5963                           ;usb_device.c: 524: {
  5964                           ;usb_device.c: 526: UCON = 0;
  5965                           
  5966                           ;usb_device.c: 497: uint8_t i;
  5967                           ;usb_device.c: 523: if (1 != 1)
  5968                           
  5969                           ;incstack = 0
  5970  001762  0100               	movlb	0	; () banked
  5971  001764  51FD               	movf	_USBDeviceState& (0+255),w,b
  5972  001766  A4D8               	btfss	status,2,c
  5973  001768  D012               	goto	l1352
  5974                           
  5975                           ; BSR set to: 0
  5976                           ;usb_device.c: 585: {
  5977                           ;usb_device.c: 587: UCON = 0;
  5978  00176A  0E00               	movlw	0
  5979  00176C  6E65               	movwf	3941,c	;volatile
  5980                           
  5981                           ;usb_device.c: 590: UIE = 0;
  5982  00176E  0E00               	movlw	0
  5983  001770  010F               	movlb	15	; () banked
  5984  001772  6F36               	movwf	54,b	;volatile
  5985                           
  5986                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5987  001774  0E16               	movlw	22
  5988  001776  6F39               	movwf	57,b	;volatile
  5989  001778  0E9F               	movlw	159
  5990  00177A  6F37               	movwf	55,b	;volatile
  5991  00177C  0E7B               	movlw	123
  5992  00177E  6F36               	movwf	54,b	;volatile
  5993                           
  5994                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  5995  001780  D001               	goto	l1353
  5996  001782                     l1354:
  5997  001782  8665               	bsf	3941,3,c	;volatile
  5998  001784                     l1353:
  5999  001784  A665               	btfss	3941,3,c	;volatile
  6000  001786  D7FD               	goto	l1354
  6001                           
  6002                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  6003  001788  0E01               	movlw	1
  6004  00178A  0100               	movlb	0	; () banked
  6005  00178C  6FFD               	movwf	_USBDeviceState& (0+255),b
  6006  00178E                     l1352:
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;usb_device.c: 605: }
  6010                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  6011                           
  6012                           ; BSR set to: 0
  6013  00178E  05FD               	decf	_USBDeviceState& (0+255),w,b
  6014  001790  B4D8               	btfsc	status,2,c
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;usb_device.c: 609: {
  6018                           ;usb_device.c: 619: if(!UCONbits.SE0)
  6019  001792  BA65               	btfsc	3941,5,c	;volatile
  6020  001794  D00A               	goto	l1357
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;usb_device.c: 620: {
  6024                           ;usb_device.c: 626: {UIR = 0;};
  6025  001796  0E00               	movlw	0
  6026  001798  6E62               	movwf	3938,c	;volatile
  6027                           
  6028                           ;usb_device.c: 630: UIE=0;
  6029  00179A  0E00               	movlw	0
  6030  00179C  010F               	movlb	15	; () banked
  6031  00179E  6F36               	movwf	54,b	;volatile
  6032                           
  6033                           ; BSR set to: 15
  6034                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  6035  0017A0  8136               	bsf	54,0,b	;volatile
  6036                           
  6037                           ; BSR set to: 15
  6038                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  6039  0017A2  8936               	bsf	54,4,b	;volatile
  6040                           
  6041                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  6042  0017A4  0E02               	movlw	2
  6043  0017A6  0100               	movlb	0	; () banked
  6044  0017A8  6FFD               	movwf	_USBDeviceState& (0+255),b
  6045  0017AA                     l1357:
  6046                           
  6047                           ; BSR set to: 0
  6048                           ;usb_device.c: 635: }
  6049                           ;usb_device.c: 636: }
  6050                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  6051                           
  6052                           ; BSR set to: 0
  6053                           
  6054                           ; BSR set to: 0
  6055  0017AA  A462               	btfss	3938,2,c	;volatile
  6056  0017AC  D006               	goto	l1358
  6057                           
  6058                           ; BSR set to: 0
  6059  0017AE  010F               	movlb	15	; () banked
  6060  0017B0  A536               	btfss	54,2,b	;volatile
  6061  0017B2  D003               	goto	l1358
  6062                           
  6063                           ; BSR set to: 15
  6064                           ;usb_device.c: 653: {
  6065                           ;usb_device.c: 654: (UIR &= 0xFB);
  6066  0017B4  9462               	bcf	3938,2,c	;volatile
  6067                           
  6068                           ; BSR set to: 15
  6069                           ;usb_device.c: 658: USBWakeFromSuspend();
  6070  0017B6  EC46  F024         	call	_USBWakeFromSuspend	;wreg free
  6071  0017BA                     l1358:
  6072                           
  6073                           ;usb_device.c: 660: }
  6074                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  6075  0017BA  A265               	btfss	3941,1,c	;volatile
  6076  0017BC  D002               	goto	l1359
  6077                           
  6078                           ;usb_device.c: 666: {
  6079                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  6080  0017BE  98A1               	bcf	4001,4,c	;volatile
  6081                           
  6082                           ;usb_device.c: 668: return;
  6083  0017C0  0012               	return	
  6084  0017C2                     l1359:
  6085                           
  6086                           ;usb_device.c: 669: }
  6087                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  6088  0017C2  A062               	btfss	3938,0,c	;volatile
  6089  0017C4  D009               	goto	l1360
  6090  0017C6  010F               	movlb	15	; () banked
  6091  0017C8  A136               	btfss	54,0,b	;volatile
  6092  0017CA  D006               	goto	l1360
  6093                           
  6094                           ; BSR set to: 15
  6095                           ;usb_device.c: 682: {
  6096                           ;usb_device.c: 683: USBDeviceInit();
  6097  0017CC  EC9B  F00E         	call	_USBDeviceInit	;wreg free
  6098                           
  6099                           ;usb_device.c: 687: ;
  6100                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  6101  0017D0  0E04               	movlw	4
  6102  0017D2  0100               	movlb	0	; () banked
  6103  0017D4  6FFD               	movwf	_USBDeviceState& (0+255),b
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;usb_device.c: 699: (UIR &= 0xFE);
  6107  0017D6  9062               	bcf	3938,0,c	;volatile
  6108  0017D8                     l1360:
  6109                           
  6110                           ;usb_device.c: 700: }
  6111                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  6112                           
  6113                           ; BSR set to: 0
  6114  0017D8  A862               	btfss	3938,4,c	;volatile
  6115  0017DA  D004               	goto	l1361
  6116  0017DC  010F               	movlb	15	; () banked
  6117  0017DE  B936               	btfsc	54,4,b	;volatile
  6118                           
  6119                           ; BSR set to: 15
  6120                           ;usb_device.c: 706: {
  6121                           ;usb_device.c: 712: USBSuspend();
  6122  0017E0  ECD0  F024         	call	_USBSuspend	;wreg free
  6123  0017E4                     l1361:
  6124                           
  6125                           ;usb_device.c: 714: }
  6126                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  6127  0017E4  AC62               	btfss	3938,6,c	;volatile
  6128  0017E6  D01C               	goto	l1365
  6129                           
  6130                           ;usb_device.c: 727: {
  6131                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  6132  0017E8  010F               	movlb	15	; () banked
  6133  0017EA  AD36               	btfss	54,6,b	;volatile
  6134  0017EC  D00F               	goto	l1363
  6135                           
  6136                           ; BSR set to: 15
  6137                           ;usb_device.c: 730: {
  6138                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  6139  0017EE  0E00               	movlw	0
  6140  0017F0  0100               	movlb	0	; () banked
  6141  0017F2  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6142  0017F4  0E73               	movlw	115
  6143  0017F6  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6144  0017F8  0E00               	movlw	0
  6145  0017FA  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6146  0017FC  0E00               	movlw	0
  6147  0017FE  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6148  001800  0E00               	movlw	0
  6149  001802  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6150  001804  0E01               	movlw	1
  6151  001806  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6152  001808  EC8C  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6153  00180C                     l1363:
  6154                           
  6155                           ;usb_device.c: 732: }
  6156                           ;usb_device.c: 733: (UIR &= 0xBF);
  6157  00180C  9C62               	bcf	3938,6,c	;volatile
  6158                           
  6159                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  6160  00180E  EC8D  F026         	call	_USBIncrement1msInternalTimers	;wreg free
  6161                           
  6162                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  6163  001812  504A               	movf	_USBStatusStageTimeoutCounter,w,c
  6164  001814  A4D8               	btfss	status,2,c
  6165                           
  6166                           ;usb_device.c: 754: {
  6167                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  6168  001816  064A               	decf	_USBStatusStageTimeoutCounter,f,c
  6169                           
  6170                           ;usb_device.c: 756: }
  6171                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  6172  001818  504A               	movf	_USBStatusStageTimeoutCounter,w,c
  6173  00181A  B4D8               	btfsc	status,2,c
  6174                           
  6175                           ;usb_device.c: 763: {
  6176                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  6177  00181C  ECDF  F015         	call	_USBCtrlEPAllowStatusStage	;wreg free
  6178  001820                     l1365:
  6179                           
  6180                           ;usb_device.c: 765: }
  6181                           ;usb_device.c: 767: }
  6182                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  6183  001820  AA62               	btfss	3938,5,c	;volatile
  6184  001822  D004               	goto	l1366
  6185  001824  010F               	movlb	15	; () banked
  6186  001826  BB36               	btfsc	54,5,b	;volatile
  6187                           
  6188                           ; BSR set to: 15
  6189                           ;usb_device.c: 770: {
  6190                           ;usb_device.c: 771: USBStallHandler();
  6191  001828  EC3F  F023         	call	_USBStallHandler	;wreg free
  6192  00182C                     l1366:
  6193                           
  6194                           ;usb_device.c: 772: }
  6195                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  6196  00182C  A262               	btfss	3938,1,c	;volatile
  6197  00182E  D013               	goto	l1367
  6198  001830  010F               	movlb	15	; () banked
  6199  001832  A336               	btfss	54,1,b	;volatile
  6200  001834  D010               	goto	l1367
  6201                           
  6202                           ; BSR set to: 15
  6203                           ;usb_device.c: 775: {
  6204                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  6205  001836  0E7F               	movlw	127
  6206  001838  0100               	movlb	0	; () banked
  6207  00183A  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6208  00183C  696C               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6209  00183E  0E00               	movlw	0
  6210  001840  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6211  001842  0E00               	movlw	0
  6212  001844  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6213  001846  0E00               	movlw	0
  6214  001848  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6215  00184A  0E01               	movlw	1
  6216  00184C  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6217  00184E  EC8C  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6218                           
  6219                           ;usb_device.c: 777: {UEIR = 0;};
  6220  001852  0E00               	movlw	0
  6221  001854  6E63               	movwf	3939,c	;volatile
  6222  001856                     l1367:
  6223                           
  6224                           ;usb_device.c: 785: }
  6225                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  6226  001856  0E04               	movlw	4
  6227  001858  0100               	movlb	0	; () banked
  6228  00185A  61FD               	cpfslt	_USBDeviceState& (0+255),b
  6229  00185C  D002               	goto	l1368
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;usb_device.c: 793: {
  6233                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  6234  00185E  98A1               	bcf	4001,4,c	;volatile
  6235                           
  6236                           ;usb_device.c: 795: return;
  6237  001860  0012               	return	
  6238  001862                     l1368:
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;usb_device.c: 796: }
  6242                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  6243  001862  010F               	movlb	15	; () banked
  6244  001864  A736               	btfss	54,3,b	;volatile
  6245  001866  D03C               	goto	u7480
  6246                           
  6247                           ; BSR set to: 15
  6248                           ;usb_device.c: 802: {
  6249                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  6250  001868  0E00               	movlw	0
  6251  00186A  0100               	movlb	0	; () banked
  6252  00186C  6F7B               	movwf	USBDeviceTasks@i& (0+255),b
  6253  00186E                     l8707:
  6254                           
  6255                           ; BSR set to: 0
  6256  00186E  0E03               	movlw	3
  6257  001870  657B               	cpfsgt	USBDeviceTasks@i& (0+255),b
  6258  001872  D001               	goto	l1370
  6259  001874  D035               	goto	u7480
  6260  001876                     l1370:
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;usb_device.c: 804: {
  6264                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  6265  001876  A662               	btfss	3938,3,c	;volatile
  6266  001878  D033               	goto	u7480
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;usb_device.c: 806: {
  6270                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  6271  00187A  CF64 F0FF          	movff	3940,_USTATcopy	;volatile
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  6275  00187E  31FF               	rrcf	_USTATcopy& (0+255),w,b
  6276  001880  32E8               	rrcf	wreg,f,c
  6277  001882  32E8               	rrcf	wreg,f,c
  6278  001884  0B0F               	andlw	15
  6279  001886  6E4B               	movwf	_endpoint_number,c
  6280                           
  6281                           ; BSR set to: 0
  6282                           ;usb_device.c: 811: (UIR &= 0xF7);
  6283  001888  9662               	bcf	3938,3,c	;volatile
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  6287  00188A  B5FF               	btfsc	_USTATcopy& (0+255),2,b
  6288  00188C  D007               	goto	l1373
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;usb_device.c: 817: {
  6292                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  6293  00188E  504B               	movf	_endpoint_number,w,c
  6294  001890  0D01               	mullw	1
  6295  001892  0E38               	movlw	low _ep_data_out
  6296  001894  24F3               	addwf	prodl,w,c
  6297  001896  6ED9               	movwf	fsr2l,c
  6298  001898  0E01               	movlw	high _ep_data_out
  6299  00189A  D006               	goto	L3
  6300  00189C                     l1373:
  6301                           
  6302                           ;usb_device.c: 820: else
  6303                           ;usb_device.c: 821: {
  6304                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  6305                           
  6306                           ; BSR set to: 1
  6307  00189C  504B               	movf	_endpoint_number,w,c
  6308  00189E  0D01               	mullw	1
  6309  0018A0  0E3B               	movlw	low _ep_data_in
  6310  0018A2  24F3               	addwf	prodl,w,c
  6311  0018A4  6ED9               	movwf	fsr2l,c
  6312  0018A6  0E01               	movlw	high _ep_data_in
  6313  0018A8                     L3:
  6314  0018A8  20F4               	addwfc	prodh,w,c
  6315  0018AA  6EDA               	movwf	fsr2h,c
  6316  0018AC  0101               	movlb	1	; () banked
  6317  0018AE  70DF               	btg	indf2,0,c
  6318                           
  6319                           ; BSR set to: 1
  6320                           ;usb_device.c: 823: }
  6321                           ;usb_device.c: 828: if(endpoint_number == 0)
  6322                           
  6323                           ; BSR set to: 1
  6324  0018B0  504B               	movf	_endpoint_number,w,c
  6325  0018B2  A4D8               	btfss	status,2,c
  6326  0018B4  D003               	goto	l1375
  6327                           
  6328                           ; BSR set to: 1
  6329                           ;usb_device.c: 829: {
  6330                           ;usb_device.c: 830: USBCtrlEPService();
  6331  0018B6  EC68  F01B         	call	_USBCtrlEPService	;wreg free
  6332                           
  6333                           ;usb_device.c: 831: }
  6334  0018BA  D00F               	goto	l1377
  6335  0018BC                     l1375:
  6336                           
  6337                           ;usb_device.c: 832: else
  6338                           ;usb_device.c: 833: {
  6339                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  6340  0018BC  0E00               	movlw	0
  6341  0018BE  0100               	movlb	0	; () banked
  6342  0018C0  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6343  0018C2  0E72               	movlw	114
  6344  0018C4  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6345  0018C6  0EFF               	movlw	low _USTATcopy
  6346  0018C8  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6347  0018CA  0E00               	movlw	high _USTATcopy
  6348  0018CC  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6349  0018CE  0E00               	movlw	0
  6350  0018D0  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6351  0018D2  0E00               	movlw	0
  6352  0018D4  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6353  0018D6  EC8C  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6354  0018DA                     l1377:
  6355  0018DA  0100               	movlb	0	; () banked
  6356  0018DC  2B7B               	incf	USBDeviceTasks@i& (0+255),f,b
  6357  0018DE  D7C7               	goto	l8707
  6358  0018E0                     u7480:
  6359                           
  6360                           ;usb_device.c: 840: }
  6361                           ;usb_device.c: 841: }
  6362                           ;usb_device.c: 842: }
  6363                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  6364                           
  6365                           ; BSR set to: 0
  6366  0018E0  98A1               	bcf	4001,4,c	;volatile
  6367  0018E2  0012               	return		;funcret
  6368  0018E4                     __end_of_USBDeviceTasks:
  6369                           	opt stack 0
  6370                           tosu	equ	0xFFF
  6371                           tosh	equ	0xFFE
  6372                           tosl	equ	0xFFD
  6373                           pclath	equ	0xFFA
  6374                           tblptru	equ	0xFF8
  6375                           tblptrh	equ	0xFF7
  6376                           tblptrl	equ	0xFF6
  6377                           tablat	equ	0xFF5
  6378                           prodh	equ	0xFF4
  6379                           prodl	equ	0xFF3
  6380                           intcon	equ	0xFF2
  6381                           intcon2	equ	0xFF1
  6382                           intcon3	equ	0xFF0
  6383                           postinc0	equ	0xFEE
  6384                           plusw0	equ	0xFEB
  6385                           wreg	equ	0xFE8
  6386                           postinc1	equ	0xFE6
  6387                           postdec1	equ	0xFE5
  6388                           fsr1h	equ	0xFE2
  6389                           fsr1l	equ	0xFE1
  6390                           indf2	equ	0xFDF
  6391                           postinc2	equ	0xFDE
  6392                           postdec2	equ	0xFDD
  6393                           plusw2	equ	0xFDB
  6394                           fsr2h	equ	0xFDA
  6395                           fsr2l	equ	0xFD9
  6396                           status	equ	0xFD8
  6397                           
  6398 ;; *************** function _USBWakeFromSuspend *****************
  6399 ;; Defined at:
  6400 ;;		line 2321 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;		None
  6403 ;; Auto vars:     Size  Location     Type
  6404 ;;		None
  6405 ;; Return value:  Size  Location     Type
  6406 ;;                  1    wreg      void 
  6407 ;; Registers used:
  6408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6409 ;; Tracked objects:
  6410 ;;		On entry : 0/0
  6411 ;;		On exit  : 0/0
  6412 ;;		Unchanged: 0/0
  6413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6418 ;;Total ram usage:        0 bytes
  6419 ;; Hardware stack levels used:    1
  6420 ;; Hardware stack levels required when called:   15
  6421 ;; This function calls:
  6422 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6423 ;; This function is called by:
  6424 ;;		_USBDeviceTasks
  6425 ;; This function uses a non-reentrant model
  6426 ;;
  6427                           
  6428                           	psect	text26
  6429  00488C                     __ptext26:
  6430                           	opt stack 0
  6431  00488C                     _USBWakeFromSuspend:
  6432                           	opt stack 11
  6433                           
  6434                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  6435                           
  6436                           ;incstack = 0
  6437  00488C  0E00               	movlw	0
  6438  00488E  0101               	movlb	1	; () banked
  6439  004890  6F61               	movwf	_USBBusIsSuspended& (0+255),b
  6440                           
  6441                           ; BSR set to: 1
  6442                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  6443  004892  0E00               	movlw	0
  6444  004894  0100               	movlb	0	; () banked
  6445  004896  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6446  004898  0E74               	movlw	116
  6447  00489A  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6448  00489C  0E00               	movlw	0
  6449  00489E  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6450  0048A0  0E00               	movlw	0
  6451  0048A2  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6452  0048A4  0E00               	movlw	0
  6453  0048A6  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6454  0048A8  0E00               	movlw	0
  6455  0048AA  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6456  0048AC  EC8C  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6457                           
  6458                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  6459  0048B0  9265               	bcf	3941,1,c	;volatile
  6460                           
  6461                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  6462  0048B2  010F               	movlb	15	; () banked
  6463  0048B4  9536               	bcf	54,2,b	;volatile
  6464                           
  6465                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  6466  0048B6  D001               	goto	l1505
  6467  0048B8                     
  6468                           ;usb_device.c: 2361: {
  6469                           ;usb_device.c: 2362: (UIR &= 0xFB);
  6470                           
  6471                           ; BSR set to: 15
  6472  0048B8  9462               	bcf	3938,2,c	;volatile
  6473  0048BA                     l1505:
  6474  0048BA  B462               	btfsc	3938,2,c	;volatile
  6475  0048BC  D7FD               	goto	l1506
  6476                           
  6477                           ;usb_device.c: 2363: }
  6478                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  6479  0048BE  0E00               	movlw	0
  6480  0048C0  0101               	movlb	1	; () banked
  6481  0048C2  6F5D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6482                           
  6483                           ; BSR set to: 1
  6484  0048C4  0012               	return		;funcret
  6485  0048C6                     __end_of_USBWakeFromSuspend:
  6486                           	opt stack 0
  6487                           tosu	equ	0xFFF
  6488                           tosh	equ	0xFFE
  6489                           tosl	equ	0xFFD
  6490                           pclath	equ	0xFFA
  6491                           tblptru	equ	0xFF8
  6492                           tblptrh	equ	0xFF7
  6493                           tblptrl	equ	0xFF6
  6494                           tablat	equ	0xFF5
  6495                           prodh	equ	0xFF4
  6496                           prodl	equ	0xFF3
  6497                           intcon	equ	0xFF2
  6498                           intcon2	equ	0xFF1
  6499                           intcon3	equ	0xFF0
  6500                           postinc0	equ	0xFEE
  6501                           plusw0	equ	0xFEB
  6502                           wreg	equ	0xFE8
  6503                           postinc1	equ	0xFE6
  6504                           postdec1	equ	0xFE5
  6505                           fsr1h	equ	0xFE2
  6506                           fsr1l	equ	0xFE1
  6507                           indf2	equ	0xFDF
  6508                           postinc2	equ	0xFDE
  6509                           postdec2	equ	0xFDD
  6510                           plusw2	equ	0xFDB
  6511                           fsr2h	equ	0xFDA
  6512                           fsr2l	equ	0xFD9
  6513                           status	equ	0xFD8
  6514                           
  6515 ;; *************** function _USBSuspend *****************
  6516 ;; Defined at:
  6517 ;;		line 2263 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;		None
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;		None
  6522 ;; Return value:  Size  Location     Type
  6523 ;;                  1    wreg      void 
  6524 ;; Registers used:
  6525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6526 ;; Tracked objects:
  6527 ;;		On entry : 0/0
  6528 ;;		On exit  : 0/0
  6529 ;;		Unchanged: 0/0
  6530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6535 ;;Total ram usage:        0 bytes
  6536 ;; Hardware stack levels used:    1
  6537 ;; Hardware stack levels required when called:   15
  6538 ;; This function calls:
  6539 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6540 ;; This function is called by:
  6541 ;;		_USBDeviceTasks
  6542 ;; This function uses a non-reentrant model
  6543 ;;
  6544                           
  6545                           	psect	text27
  6546  0049A0                     __ptext27:
  6547                           	opt stack 0
  6548  0049A0                     _USBSuspend:
  6549                           	opt stack 11
  6550                           
  6551                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  6552                           
  6553                           ; BSR set to: 1
  6554                           ;incstack = 0
  6555  0049A0  010F               	movlb	15	; () banked
  6556  0049A2  8536               	bsf	54,2,b	;volatile
  6557                           
  6558                           ; BSR set to: 15
  6559                           ;usb_device.c: 2289: (UIR &= 0xEF);
  6560  0049A4  9862               	bcf	3938,4,c	;volatile
  6561                           
  6562                           ; BSR set to: 15
  6563                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  6564  0049A6  8265               	bsf	3941,1,c	;volatile
  6565                           
  6566                           ; BSR set to: 15
  6567                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  6568  0049A8  0E01               	movlw	1
  6569  0049AA  0101               	movlb	1	; () banked
  6570  0049AC  6F61               	movwf	_USBBusIsSuspended& (0+255),b
  6571                           
  6572                           ; BSR set to: 1
  6573                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  6574  0049AE  0E00               	movlw	0
  6575  0049B0  6F5D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6576                           
  6577                           ; BSR set to: 1
  6578                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  6579  0049B2  0E00               	movlw	0
  6580  0049B4  0100               	movlb	0	; () banked
  6581  0049B6  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6582  0049B8  0E75               	movlw	117
  6583  0049BA  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6584  0049BC  0E00               	movlw	0
  6585  0049BE  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6586  0049C0  0E00               	movlw	0
  6587  0049C2  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6588  0049C4  0E00               	movlw	0
  6589  0049C6  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6590  0049C8  0E00               	movlw	0
  6591  0049CA  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6592  0049CC  EC8C  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6593  0049D0  0012               	return		;funcret
  6594  0049D2                     __end_of_USBSuspend:
  6595                           	opt stack 0
  6596                           tosu	equ	0xFFF
  6597                           tosh	equ	0xFFE
  6598                           tosl	equ	0xFFD
  6599                           pclath	equ	0xFFA
  6600                           tblptru	equ	0xFF8
  6601                           tblptrh	equ	0xFF7
  6602                           tblptrl	equ	0xFF6
  6603                           tablat	equ	0xFF5
  6604                           prodh	equ	0xFF4
  6605                           prodl	equ	0xFF3
  6606                           intcon	equ	0xFF2
  6607                           intcon2	equ	0xFF1
  6608                           intcon3	equ	0xFF0
  6609                           postinc0	equ	0xFEE
  6610                           plusw0	equ	0xFEB
  6611                           wreg	equ	0xFE8
  6612                           postinc1	equ	0xFE6
  6613                           postdec1	equ	0xFE5
  6614                           fsr1h	equ	0xFE2
  6615                           fsr1l	equ	0xFE1
  6616                           indf2	equ	0xFDF
  6617                           postinc2	equ	0xFDE
  6618                           postdec2	equ	0xFDD
  6619                           plusw2	equ	0xFDB
  6620                           fsr2h	equ	0xFDA
  6621                           fsr2l	equ	0xFD9
  6622                           status	equ	0xFD8
  6623                           
  6624 ;; *************** function _USBStallHandler *****************
  6625 ;; Defined at:
  6626 ;;		line 2220 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6627 ;; Parameters:    Size  Location     Type
  6628 ;;		None
  6629 ;; Auto vars:     Size  Location     Type
  6630 ;;		None
  6631 ;; Return value:  Size  Location     Type
  6632 ;;                  1    wreg      void 
  6633 ;; Registers used:
  6634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6635 ;; Tracked objects:
  6636 ;;		On entry : 0/0
  6637 ;;		On exit  : 0/0
  6638 ;;		Unchanged: 0/0
  6639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6642 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6643 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6644 ;;Total ram usage:        1 bytes
  6645 ;; Hardware stack levels used:    1
  6646 ;; Hardware stack levels required when called:   11
  6647 ;; This function calls:
  6648 ;;		Nothing
  6649 ;; This function is called by:
  6650 ;;		_USBDeviceTasks
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           	psect	text28
  6655  00467E                     __ptext28:
  6656                           	opt stack 0
  6657  00467E                     _USBStallHandler:
  6658                           	opt stack 15
  6659                           
  6660                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  6661                           
  6662                           ;incstack = 0
  6663  00467E  010F               	movlb	15	; () banked
  6664  004680  A126               	btfss	38,0,b	;volatile
  6665  004682  D01D               	goto	l1497
  6666                           
  6667                           ; BSR set to: 15
  6668                           ;usb_device.c: 2233: {
  6669                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  6670  004684  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6671  004688  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6672  00468C  0E80               	movlw	128
  6673  00468E  18DE               	xorwf	postinc2,w,c
  6674  004690  A4D8               	btfss	status,2,c
  6675  004692  D014               	goto	l1498
  6676                           
  6677                           ; BSR set to: 15
  6678  004694  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  6679  004698  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6680  00469C  0E84               	movlw	132
  6681  00469E  18DE               	xorwf	postinc2,w,c
  6682  0046A0  A4D8               	btfss	status,2,c
  6683  0046A2  D00C               	goto	l1498
  6684                           
  6685                           ; BSR set to: 15
  6686                           ;usb_device.c: 2236: {
  6687                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6688  0046A4  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6689  0046A8  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6690  0046AC  0E0C               	movlw	12
  6691  0046AE  6EDF               	movwf	indf2,c
  6692                           
  6693                           ; BSR set to: 15
  6694                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6695  0046B0  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6696  0046B4  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6697  0046B8  0E00               	movlw	0
  6698  0046BA  8EDB               	bsf	plusw2,7,c
  6699  0046BC                     l1498:
  6700                           
  6701                           ; BSR set to: 15
  6702                           ;usb_device.c: 2240: }
  6703                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  6704                           
  6705                           ; BSR set to: 15
  6706  0046BC  9126               	bcf	38,0,b	;volatile
  6707  0046BE                     l1497:
  6708                           
  6709                           ; BSR set to: 15
  6710                           ;usb_device.c: 2242: }
  6711                           ;usb_device.c: 2244: (UIR &= 0xDF);
  6712  0046BE  9A62               	bcf	3938,5,c	;volatile
  6713                           
  6714                           ; BSR set to: 15
  6715  0046C0  0012               	return		;funcret
  6716  0046C2                     __end_of_USBStallHandler:
  6717                           	opt stack 0
  6718                           tosu	equ	0xFFF
  6719                           tosh	equ	0xFFE
  6720                           tosl	equ	0xFFD
  6721                           pclath	equ	0xFFA
  6722                           tblptru	equ	0xFF8
  6723                           tblptrh	equ	0xFF7
  6724                           tblptrl	equ	0xFF6
  6725                           tablat	equ	0xFF5
  6726                           prodh	equ	0xFF4
  6727                           prodl	equ	0xFF3
  6728                           intcon	equ	0xFF2
  6729                           intcon2	equ	0xFF1
  6730                           intcon3	equ	0xFF0
  6731                           postinc0	equ	0xFEE
  6732                           plusw0	equ	0xFEB
  6733                           wreg	equ	0xFE8
  6734                           postinc1	equ	0xFE6
  6735                           postdec1	equ	0xFE5
  6736                           fsr1h	equ	0xFE2
  6737                           fsr1l	equ	0xFE1
  6738                           indf2	equ	0xFDF
  6739                           postinc2	equ	0xFDE
  6740                           postdec2	equ	0xFDD
  6741                           plusw2	equ	0xFDB
  6742                           fsr2h	equ	0xFDA
  6743                           fsr2l	equ	0xFD9
  6744                           status	equ	0xFD8
  6745                           
  6746 ;; *************** function _USBIncrement1msInternalTimers *****************
  6747 ;; Defined at:
  6748 ;;		line 3042 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6766 ;;Total ram usage:        0 bytes
  6767 ;; Hardware stack levels used:    1
  6768 ;; Hardware stack levels required when called:   11
  6769 ;; This function calls:
  6770 ;;		Nothing
  6771 ;; This function is called by:
  6772 ;;		_USBDeviceTasks
  6773 ;; This function uses a non-reentrant model
  6774 ;;
  6775                           
  6776                           	psect	text29
  6777  004D1A                     __ptext29:
  6778                           	opt stack 0
  6779  004D1A                     _USBIncrement1msInternalTimers:
  6780                           	opt stack 15
  6781                           
  6782                           ;usb_device.c: 3050: USB1msTickCount++;
  6783                           
  6784                           ; BSR set to: 15
  6785                           ;incstack = 0
  6786  004D1A  0E01               	movlw	1
  6787  004D1C  0101               	movlb	1	; () banked
  6788  004D1E  272A               	addwf	_USB1msTickCount& (0+255),f,b
  6789  004D20  0E00               	movlw	0
  6790  004D22  232B               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  6791  004D24  232C               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  6792  004D26  232D               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  6793                           
  6794                           ; BSR set to: 1
  6795                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  6796  004D28  5161               	movf	_USBBusIsSuspended& (0+255),w,b
  6797  004D2A  A4D8               	btfss	status,2,c
  6798  004D2C  0012               	return	
  6799                           
  6800                           ; BSR set to: 1
  6801                           ;usb_device.c: 3052: {
  6802                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  6803  004D2E  2B5D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  6804                           
  6805                           ; BSR set to: 1
  6806                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  6807  004D30  515D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  6808  004D32  A4D8               	btfss	status,2,c
  6809  004D34  0012               	return	
  6810                           
  6811                           ; BSR set to: 1
  6812                           ;usb_device.c: 3056: {
  6813                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  6814  004D36  695D               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  6815                           
  6816                           ; BSR set to: 1
  6817  004D38  0012               	return	
  6818  004D3A                     __end_of_USBIncrement1msInternalTimers:
  6819                           	opt stack 0
  6820                           tosu	equ	0xFFF
  6821                           tosh	equ	0xFFE
  6822                           tosl	equ	0xFFD
  6823                           pclath	equ	0xFFA
  6824                           tblptru	equ	0xFF8
  6825                           tblptrh	equ	0xFF7
  6826                           tblptrl	equ	0xFF6
  6827                           tablat	equ	0xFF5
  6828                           prodh	equ	0xFF4
  6829                           prodl	equ	0xFF3
  6830                           intcon	equ	0xFF2
  6831                           intcon2	equ	0xFF1
  6832                           intcon3	equ	0xFF0
  6833                           postinc0	equ	0xFEE
  6834                           plusw0	equ	0xFEB
  6835                           wreg	equ	0xFE8
  6836                           postinc1	equ	0xFE6
  6837                           postdec1	equ	0xFE5
  6838                           fsr1h	equ	0xFE2
  6839                           fsr1l	equ	0xFE1
  6840                           indf2	equ	0xFDF
  6841                           postinc2	equ	0xFDE
  6842                           postdec2	equ	0xFDD
  6843                           plusw2	equ	0xFDB
  6844                           fsr2h	equ	0xFDA
  6845                           fsr2l	equ	0xFD9
  6846                           status	equ	0xFD8
  6847                           
  6848 ;; *************** function _USBDeviceInit *****************
  6849 ;; Defined at:
  6850 ;;		line 295 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;		None
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;  i               1    8[BANK0 ] unsigned char 
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  1    wreg      void 
  6857 ;; Registers used:
  6858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6865 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6867 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6868 ;;Total ram usage:        1 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; Hardware stack levels required when called:   12
  6871 ;; This function calls:
  6872 ;;		_memset
  6873 ;; This function is called by:
  6874 ;;		_USBDeviceTasks
  6875 ;;		_UsbDevice_MainTask
  6876 ;; This function uses a non-reentrant model
  6877 ;;
  6878                           
  6879                           	psect	text30
  6880  001D36                     __ptext30:
  6881                           	opt stack 0
  6882  001D36                     _USBDeviceInit:
  6883                           	opt stack 14
  6884                           
  6885                           ;usb_device.c: 297: uint8_t i;
  6886                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  6887                           
  6888                           ; BSR set to: 1
  6889                           ;incstack = 0
  6890  001D36  98A0               	bcf	4000,4,c	;volatile
  6891                           
  6892                           ;usb_device.c: 303: ;
  6893                           ;usb_device.c: 306: {UEIR = 0;};
  6894  001D38  0E00               	movlw	0
  6895  001D3A  6E63               	movwf	3939,c	;volatile
  6896                           
  6897                           ;usb_device.c: 309: {UIR = 0;};
  6898  001D3C  0E00               	movlw	0
  6899  001D3E  6E62               	movwf	3938,c	;volatile
  6900                           
  6901                           ;usb_device.c: 312: UEP0 = 0;
  6902  001D40  0E00               	movlw	0
  6903  001D42  010F               	movlb	15	; () banked
  6904  001D44  6F26               	movwf	38,b	;volatile
  6905                           
  6906                           ; BSR set to: 15
  6907                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  6908  001D46  0E27               	movlw	39
  6909  001D48  0100               	movlb	0	; () banked
  6910  001D4A  6F60               	movwf	memset@p1& (0+255),b
  6911  001D4C  0E0F               	movlw	15
  6912  001D4E  6F61               	movwf	(memset@p1+1)& (0+255),b
  6913  001D50  0E00               	movlw	0
  6914  001D52  6F63               	movwf	(memset@c+1)& (0+255),b
  6915  001D54  0E00               	movlw	0
  6916  001D56  6F62               	movwf	memset@c& (0+255),b
  6917  001D58  0E00               	movlw	0
  6918  001D5A  6F65               	movwf	(memset@n+1)& (0+255),b
  6919  001D5C  0E02               	movlw	2
  6920  001D5E  6F64               	movwf	memset@n& (0+255),b
  6921  001D60  EC1A  F025         	call	_memset	;wreg free
  6922                           
  6923                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6924  001D64  0E16               	movlw	22
  6925  001D66  010F               	movlb	15	; () banked
  6926  001D68  6F39               	movwf	57,b	;volatile
  6927                           
  6928                           ; BSR set to: 15
  6929  001D6A  0E9F               	movlw	159
  6930  001D6C  6F37               	movwf	55,b	;volatile
  6931                           
  6932                           ; BSR set to: 15
  6933  001D6E  0E7B               	movlw	123
  6934  001D70  6F36               	movwf	54,b	;volatile
  6935                           
  6936                           ; BSR set to: 15
  6937                           ;usb_device.c: 319: ;
  6938                           ;usb_device.c: 322: ;
  6939                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  6940  001D72  0E00               	movlw	0
  6941  001D74  0100               	movlb	0	; () banked
  6942  001D76  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6943  001D78                     l7959:
  6944                           
  6945                           ; BSR set to: 0
  6946  001D78  0E0B               	movlw	11
  6947  001D7A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6948  001D7C  D001               	goto	l1341
  6949  001D7E  D00E               	goto	u6350
  6950  001D80                     l1341:
  6951                           
  6952                           ; BSR set to: 0
  6953                           ;usb_device.c: 326: {
  6954                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  6955                           
  6956                           ; BSR set to: 0
  6957  001D80  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6958  001D82  0D04               	mullw	4
  6959  001D84  0E00               	movlw	0
  6960  001D86  24F3               	addwf	prodl,w,c
  6961  001D88  6ED9               	movwf	fsr2l,c
  6962  001D8A  0E04               	movlw	4
  6963  001D8C  20F4               	addwfc	prodh,w,c
  6964  001D8E  6EDA               	movwf	fsr2h,c
  6965  001D90  6ADE               	clrf	postinc2,c
  6966  001D92  6ADE               	clrf	postinc2,c
  6967  001D94  6ADE               	clrf	postinc2,c
  6968  001D96  6ADD               	clrf	postdec2,c
  6969                           
  6970                           ; BSR set to: 0
  6971  001D98  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6972  001D9A  D7EE               	goto	l7959
  6973  001D9C                     u6350:
  6974                           
  6975                           ; BSR set to: 0
  6976                           ;usb_device.c: 328: }
  6977                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  6978  001D9C  8C65               	bsf	3941,6,c	;volatile
  6979                           
  6980                           ; BSR set to: 0
  6981                           ;usb_device.c: 334: UADDR = 0x00;
  6982  001D9E  0E00               	movlw	0
  6983  001DA0  010F               	movlb	15	; () banked
  6984  001DA2  6F38               	movwf	56,b	;volatile
  6985                           
  6986                           ; BSR set to: 15
  6987                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  6988  001DA4  9865               	bcf	3941,4,c	;volatile
  6989                           
  6990                           ; BSR set to: 15
  6991                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  6992  001DA6  9C65               	bcf	3941,6,c	;volatile
  6993  001DA8                     
  6994                           ;usb_device.c: 344: {
  6995                           ;usb_device.c: 345: (UIR &= 0xF7);
  6996                           
  6997                           ; BSR set to: 15
  6998  001DA8  9662               	bcf	3938,3,c	;volatile
  6999                           
  7000                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  7001  001DAA  0E00               	movlw	0
  7002  001DAC  0100               	movlb	0	; () banked
  7003  001DAE  6FF3               	movwf	(_inPipes+3)& (0+255),b
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  7007  001DB0  0E00               	movlw	0
  7008  001DB2  0101               	movlb	1	; () banked
  7009  001DB4  6F15               	movwf	(_outPipes+3)& (0+255),b
  7010                           
  7011                           ; BSR set to: 1
  7012                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  7013  001DB6  0E00               	movlw	0
  7014  001DB8  6F17               	movwf	(_outPipes+5)& (0+255),b
  7015  001DBA  0E00               	movlw	0
  7016  001DBC  6F16               	movwf	(_outPipes+4)& (0+255),b
  7017                           
  7018                           ; BSR set to: 1
  7019                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  7020  001DBE  B662               	btfsc	3938,3,c	;volatile
  7021  001DC0  D7F3               	goto	l1343
  7022                           
  7023                           ; BSR set to: 1
  7024                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  7025                           
  7026                           ; BSR set to: 1
  7027  001DC2  0E01               	movlw	1
  7028  001DC4  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7029                           
  7030                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  7031  001DC6  0E01               	movlw	1
  7032  001DC8  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7033                           
  7034                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  7035  001DCA  0E00               	movlw	0
  7036  001DCC  6F5F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7037                           
  7038                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  7039  001DCE  0E00               	movlw	0
  7040  001DD0  6F5E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7041                           
  7042                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  7043  001DD2  0E00               	movlw	0
  7044  001DD4  6F61               	movwf	_USBBusIsSuspended& (0+255),b
  7045                           
  7046                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  7047  001DD6  0E00               	movlw	0
  7048  001DD8  0100               	movlb	0	; () banked
  7049  001DDA  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7050  001DDC                     l7987:
  7051                           
  7052                           ; BSR set to: 0
  7053  001DDC  0E02               	movlw	2
  7054  001DDE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7055  001DE0  D001               	goto	l1345
  7056  001DE2  D02E               	goto	u6380
  7057  001DE4                     l1345:
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;usb_device.c: 364: {
  7061                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  7062                           
  7063                           ; BSR set to: 0
  7064  001DE4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7065  001DE6  0D02               	mullw	2
  7066  001DE8  0E3E               	movlw	low _pBDTEntryIn
  7067  001DEA  24F3               	addwf	prodl,w,c
  7068  001DEC  6ED9               	movwf	fsr2l,c
  7069  001DEE  0E00               	movlw	high _pBDTEntryIn
  7070  001DF0  20F4               	addwfc	prodh,w,c
  7071  001DF2  6EDA               	movwf	fsr2h,c
  7072  001DF4  0E00               	movlw	0
  7073  001DF6  6EDE               	movwf	postinc2,c
  7074  001DF8  0E00               	movlw	0
  7075  001DFA  6EDD               	movwf	postdec2,c
  7076                           
  7077                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  7078  001DFC  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7079  001DFE  0D02               	mullw	2
  7080  001E00  0E20               	movlw	low _pBDTEntryOut
  7081  001E02  24F3               	addwf	prodl,w,c
  7082  001E04  6ED9               	movwf	fsr2l,c
  7083  001E06  0E01               	movlw	high _pBDTEntryOut
  7084  001E08  20F4               	addwfc	prodh,w,c
  7085  001E0A  6EDA               	movwf	fsr2h,c
  7086  001E0C  0E00               	movlw	0
  7087  001E0E  6EDE               	movwf	postinc2,c
  7088  001E10  0E00               	movlw	0
  7089  001E12  6EDD               	movwf	postdec2,c
  7090                           
  7091                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  7092  001E14  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7093  001E16  0D01               	mullw	1
  7094  001E18  0E3B               	movlw	low _ep_data_in
  7095  001E1A  24F3               	addwf	prodl,w,c
  7096  001E1C  6ED9               	movwf	fsr2l,c
  7097  001E1E  0E01               	movlw	high _ep_data_in
  7098  001E20  20F4               	addwfc	prodh,w,c
  7099  001E22  6EDA               	movwf	fsr2h,c
  7100  001E24  0E00               	movlw	0
  7101  001E26  6EDF               	movwf	indf2,c
  7102                           
  7103                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  7104  001E28  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7105  001E2A  0D01               	mullw	1
  7106  001E2C  0E38               	movlw	low _ep_data_out
  7107  001E2E  24F3               	addwf	prodl,w,c
  7108  001E30  6ED9               	movwf	fsr2l,c
  7109  001E32  0E01               	movlw	high _ep_data_out
  7110  001E34  20F4               	addwfc	prodh,w,c
  7111  001E36  6EDA               	movwf	fsr2h,c
  7112  001E38  0E00               	movlw	0
  7113  001E3A  6EDF               	movwf	indf2,c
  7114                           
  7115                           ; BSR set to: 0
  7116  001E3C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7117  001E3E  D7CE               	goto	l7987
  7118  001E40                     u6380:
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;usb_device.c: 369: }
  7122                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7123                           
  7124                           ; BSR set to: 0
  7125  001E40  0E08               	movlw	8
  7126  001E42  6E3E               	movwf	_pBDTEntryIn,c
  7127  001E44  0E04               	movlw	4
  7128  001E46  6E3F               	movwf	_pBDTEntryIn+1,c
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  7132  001E48  0E16               	movlw	22
  7133  001E4A  010F               	movlb	15	; () banked
  7134  001E4C  6F26               	movwf	38,b	;volatile
  7135                           
  7136                           ; BSR set to: 15
  7137                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7138  001E4E  0E04               	movlw	4
  7139  001E50  0104               	movlb	4	; () banked
  7140  001E52  6F03               	movwf	3,b	;volatile
  7141  001E54  0E30               	movlw	48
  7142  001E56  6F02               	movwf	2,b	;volatile
  7143                           
  7144                           ; BSR set to: 4
  7145                           ;usb_device.c: 377: BDT[0].CNT = 8;
  7146  001E58  0E08               	movlw	8
  7147  001E5A  6F01               	movwf	1,b	;volatile
  7148                           
  7149                           ; BSR set to: 4
  7150                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  7151  001E5C  0E04               	movlw	4
  7152  001E5E  6F00               	movwf	0,b	;volatile
  7153                           
  7154                           ; BSR set to: 4
  7155                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  7156  001E60  8F00               	bsf	0,7,b	;volatile
  7157                           
  7158                           ; BSR set to: 4
  7159                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  7160  001E62  0E00               	movlw	0
  7161  001E64  6E52               	movwf	_USBActiveConfiguration,c
  7162                           
  7163                           ; BSR set to: 4
  7164                           ;usb_device.c: 384: USB1msTickCount = 0;
  7165  001E66  0E00               	movlw	0
  7166  001E68  0101               	movlb	1	; () banked
  7167  001E6A  6F2A               	movwf	_USB1msTickCount& (0+255),b
  7168  001E6C  0E00               	movlw	0
  7169  001E6E  6F2B               	movwf	(_USB1msTickCount+1)& (0+255),b
  7170  001E70  0E00               	movlw	0
  7171  001E72  6F2C               	movwf	(_USB1msTickCount+2)& (0+255),b
  7172  001E74  0E00               	movlw	0
  7173  001E76  6F2D               	movwf	(_USB1msTickCount+3)& (0+255),b
  7174                           
  7175                           ; BSR set to: 1
  7176                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  7177  001E78  0E00               	movlw	0
  7178  001E7A  6F5D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7179                           
  7180                           ; BSR set to: 1
  7181                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  7182  001E7C  0E00               	movlw	0
  7183  001E7E  0100               	movlb	0	; () banked
  7184  001E80  6FFD               	movwf	_USBDeviceState& (0+255),b
  7185                           
  7186                           ; BSR set to: 0
  7187  001E82  0012               	return		;funcret
  7188  001E84                     __end_of_USBDeviceInit:
  7189                           	opt stack 0
  7190                           tosu	equ	0xFFF
  7191                           tosh	equ	0xFFE
  7192                           tosl	equ	0xFFD
  7193                           pclath	equ	0xFFA
  7194                           tblptru	equ	0xFF8
  7195                           tblptrh	equ	0xFF7
  7196                           tblptrl	equ	0xFF6
  7197                           tablat	equ	0xFF5
  7198                           prodh	equ	0xFF4
  7199                           prodl	equ	0xFF3
  7200                           intcon	equ	0xFF2
  7201                           intcon2	equ	0xFF1
  7202                           intcon3	equ	0xFF0
  7203                           postinc0	equ	0xFEE
  7204                           plusw0	equ	0xFEB
  7205                           wreg	equ	0xFE8
  7206                           postinc1	equ	0xFE6
  7207                           postdec1	equ	0xFE5
  7208                           fsr1h	equ	0xFE2
  7209                           fsr1l	equ	0xFE1
  7210                           indf2	equ	0xFDF
  7211                           postinc2	equ	0xFDE
  7212                           postdec2	equ	0xFDD
  7213                           plusw2	equ	0xFDB
  7214                           fsr2h	equ	0xFDA
  7215                           fsr2l	equ	0xFD9
  7216                           status	equ	0xFD8
  7217                           
  7218 ;; *************** function _USBCtrlEPService *****************
  7219 ;; Defined at:
  7220 ;;		line 2390 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7221 ;; Parameters:    Size  Location     Type
  7222 ;;		None
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;		None
  7225 ;; Return value:  Size  Location     Type
  7226 ;;                  1    wreg      void 
  7227 ;; Registers used:
  7228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7229 ;; Tracked objects:
  7230 ;;		On entry : 0/0
  7231 ;;		On exit  : 0/0
  7232 ;;		Unchanged: 0/0
  7233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7236 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7237 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7238 ;;Total ram usage:        1 bytes
  7239 ;; Hardware stack levels used:    1
  7240 ;; Hardware stack levels required when called:   18
  7241 ;; This function calls:
  7242 ;;		_USBCtrlTrfInHandler
  7243 ;;		_USBCtrlTrfOutHandler
  7244 ;;		_USBCtrlTrfSetupHandler
  7245 ;;		_memcpy
  7246 ;; This function is called by:
  7247 ;;		_USBDeviceTasks
  7248 ;; This function uses a non-reentrant model
  7249 ;;
  7250                           
  7251                           	psect	text31
  7252  0036D0                     __ptext31:
  7253                           	opt stack 0
  7254  0036D0                     _USBCtrlEPService:
  7255                           	opt stack 8
  7256                           
  7257                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  7258                           
  7259                           ; BSR set to: 0
  7260                           ;incstack = 0
  7261  0036D0  0E2D               	movlw	45
  7262  0036D2  6E4A               	movwf	_USBStatusStageTimeoutCounter,c
  7263                           
  7264                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  7265  0036D4  C0FF  F07A         	movff	_USTATcopy,??_USBCtrlEPService
  7266  0036D8  0EFD               	movlw	253
  7267  0036DA  0100               	movlb	0	; () banked
  7268  0036DC  177A               	andwf	??_USBCtrlEPService& (0+255),f,b
  7269  0036DE  A4D8               	btfss	status,2,c
  7270  0036E0  D038               	goto	l1511
  7271                           
  7272                           ; BSR set to: 0
  7273                           ;usb_device.c: 2401: {
  7274                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  7275  0036E2  C0FF  F07A         	movff	_USTATcopy,??_USBCtrlEPService
  7276  0036E6  90D8               	bcf	status,0,c
  7277  0036E8  337A               	rrcf	??_USBCtrlEPService& (0+255),f,b
  7278  0036EA  0E3F               	movlw	63
  7279  0036EC  177A               	andwf	??_USBCtrlEPService& (0+255),f,b
  7280  0036EE  517A               	movf	??_USBCtrlEPService& (0+255),w,b
  7281  0036F0  0D04               	mullw	4
  7282  0036F2  0E00               	movlw	0
  7283  0036F4  24F3               	addwf	prodl,w,c
  7284  0036F6  6FF8               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  7285  0036F8  0E04               	movlw	4
  7286  0036FA  20F4               	addwfc	prodh,w,c
  7287  0036FC  6FF9               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  7288                           
  7289                           ; BSR set to: 0
  7290                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7291  0036FE  C0F8  F0F6         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  7292  003702  C0F9  F0F7         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  7293                           
  7294                           ; BSR set to: 0
  7295                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  7296  003706  0E04               	movlw	4
  7297  003708  1BF6               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  7298                           
  7299                           ; BSR set to: 0
  7300                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  7301  00370A  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7302  00370E  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7303  003712  30DF               	rrcf	223,w,c
  7304  003714  32E8               	rrcf	wreg,f,c
  7305  003716  0B0F               	andlw	15
  7306  003718  0A0D               	xorlw	13
  7307  00371A  A4D8               	btfss	status,2,c
  7308  00371C  D017               	goto	l1512
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;usb_device.c: 2418: {
  7312                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  7313  00371E  0E30               	movlw	48
  7314  003720  6F60               	movwf	memcpy@d1& (0+255),b
  7315  003722  0E04               	movlw	4
  7316  003724  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7317  003726  EE20 F002          	lfsr	2,2
  7318  00372A  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  7319  00372C  26D9               	addwf	fsr2l,f,c
  7320  00372E  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  7321  003730  22DA               	addwfc	fsr2h,f,c
  7322  003732  CFDE F062          	movff	postinc2,memcpy@s1
  7323  003736  CFDD F063          	movff	postdec2,memcpy@s1+1
  7324  00373A  0E00               	movlw	0
  7325  00373C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7326  00373E  0E08               	movlw	8
  7327  003740  6F64               	movwf	memcpy@n& (0+255),b
  7328  003742  ECD5  F022         	call	_memcpy	;wreg free
  7329                           
  7330                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  7331  003746  ECD4  F01C         	call	_USBCtrlTrfSetupHandler	;wreg free
  7332                           
  7333                           ;usb_device.c: 2427: }
  7334  00374A  0012               	return	
  7335  00374C                     l1512:
  7336                           
  7337                           ;usb_device.c: 2428: else
  7338                           ;usb_device.c: 2429: {
  7339                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  7340  00374C  EC5B  F020         	call	_USBCtrlTrfOutHandler	;wreg free
  7341                           
  7342                           ;usb_device.c: 2432: }
  7343                           ;usb_device.c: 2433: }
  7344  003750  0012               	return	
  7345  003752                     l1511:
  7346                           
  7347                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  7348  003752  0100               	movlb	0	; () banked
  7349  003754  51FF               	movf	_USTATcopy& (0+255),w,b
  7350  003756  0BFD               	andlw	253
  7351  003758  0A04               	xorlw	4
  7352  00375A  A4D8               	btfss	status,2,c
  7353  00375C  0012               	return	
  7354                           
  7355                           ; BSR set to: 0
  7356                           ;usb_device.c: 2435: {
  7357                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  7358  00375E  EC70  F017         	call	_USBCtrlTrfInHandler	;wreg free
  7359  003762  0012               	return	
  7360  003764                     __end_of_USBCtrlEPService:
  7361                           	opt stack 0
  7362                           tosu	equ	0xFFF
  7363                           tosh	equ	0xFFE
  7364                           tosl	equ	0xFFD
  7365                           pclath	equ	0xFFA
  7366                           tblptru	equ	0xFF8
  7367                           tblptrh	equ	0xFF7
  7368                           tblptrl	equ	0xFF6
  7369                           tablat	equ	0xFF5
  7370                           prodh	equ	0xFF4
  7371                           prodl	equ	0xFF3
  7372                           intcon	equ	0xFF2
  7373                           intcon2	equ	0xFF1
  7374                           intcon3	equ	0xFF0
  7375                           postinc0	equ	0xFEE
  7376                           plusw0	equ	0xFEB
  7377                           wreg	equ	0xFE8
  7378                           postinc1	equ	0xFE6
  7379                           postdec1	equ	0xFE5
  7380                           fsr1h	equ	0xFE2
  7381                           fsr1l	equ	0xFE1
  7382                           indf2	equ	0xFDF
  7383                           postinc2	equ	0xFDE
  7384                           postdec2	equ	0xFDD
  7385                           plusw2	equ	0xFDB
  7386                           fsr2h	equ	0xFDA
  7387                           fsr2l	equ	0xFD9
  7388                           status	equ	0xFD8
  7389                           
  7390 ;; *************** function _memcpy *****************
  7391 ;; Defined at:
  7392 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  d1              2    0[BANK0 ] PTR void 
  7395 ;;		 -> SetupPkt(8), 
  7396 ;;  s1              2    2[BANK0 ] PTR const void 
  7397 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  7398 ;;  n               2    4[BANK0 ] unsigned int 
  7399 ;; Auto vars:     Size  Location     Type
  7400 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  7401 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  7402 ;;  d               2    6[BANK0 ] PTR unsigned char 
  7403 ;;		 -> SetupPkt(8), 
  7404 ;;  tmp             1   10[BANK0 ] unsigned char 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  2    0[BANK0 ] PTR void 
  7407 ;; Registers used:
  7408 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7414 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7415 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7417 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7418 ;;Total ram usage:       11 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:   11
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_USBCtrlEPService
  7425 ;; This function uses a non-reentrant model
  7426 ;;
  7427                           
  7428                           	psect	text32
  7429  0045AA                     __ptext32:
  7430                           	opt stack 0
  7431  0045AA                     _memcpy:
  7432                           	opt stack 14
  7433                           
  7434                           ;incstack = 0
  7435  0045AA  C062  F068         	movff	memcpy@s1,memcpy@s
  7436  0045AE  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
  7437  0045B2  C060  F066         	movff	memcpy@d1,memcpy@d
  7438  0045B6  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
  7439  0045BA  D011               	goto	l2583
  7440  0045BC                     l7245:
  7441  0045BC  C068  FFD9         	movff	memcpy@s,fsr2l
  7442  0045C0  C069  FFDA         	movff	memcpy@s+1,fsr2h
  7443  0045C4  50DF               	movf	indf2,w,c
  7444  0045C6  0100               	movlb	0	; () banked
  7445  0045C8  6F6A               	movwf	memcpy@tmp& (0+255),b
  7446                           
  7447                           ; BSR set to: 0
  7448  0045CA  4B68               	infsnz	memcpy@s& (0+255),f,b
  7449  0045CC  2B69               	incf	(memcpy@s+1)& (0+255),f,b
  7450                           
  7451                           ; BSR set to: 0
  7452  0045CE  C066  FFD9         	movff	memcpy@d,fsr2l
  7453  0045D2  C067  FFDA         	movff	memcpy@d+1,fsr2h
  7454  0045D6  C06A  FFDF         	movff	memcpy@tmp,indf2
  7455                           
  7456                           ; BSR set to: 0
  7457  0045DA  4B66               	infsnz	memcpy@d& (0+255),f,b
  7458  0045DC  2B67               	incf	(memcpy@d+1)& (0+255),f,b
  7459  0045DE                     l2583:
  7460                           
  7461                           ; BSR set to: 0
  7462  0045DE  0100               	movlb	0	; () banked
  7463  0045E0  0764               	decf	memcpy@n& (0+255),f,b
  7464  0045E2  A0D8               	btfss	status,0,c
  7465  0045E4  0765               	decf	(memcpy@n+1)& (0+255),f,b
  7466  0045E6  2964               	incf	memcpy@n& (0+255),w,b
  7467  0045E8  E1E9               	bnz	l7245
  7468  0045EA  2965               	incf	(memcpy@n+1)& (0+255),w,b
  7469  0045EC  B4D8               	btfsc	status,2,c
  7470  0045EE  0012               	return	
  7471  0045F0  D7E5               	goto	l2584
  7472  0045F2                     __end_of_memcpy:
  7473                           	opt stack 0
  7474                           tosu	equ	0xFFF
  7475                           tosh	equ	0xFFE
  7476                           tosl	equ	0xFFD
  7477                           pclath	equ	0xFFA
  7478                           tblptru	equ	0xFF8
  7479                           tblptrh	equ	0xFF7
  7480                           tblptrl	equ	0xFF6
  7481                           tablat	equ	0xFF5
  7482                           prodh	equ	0xFF4
  7483                           prodl	equ	0xFF3
  7484                           intcon	equ	0xFF2
  7485                           intcon2	equ	0xFF1
  7486                           intcon3	equ	0xFF0
  7487                           postinc0	equ	0xFEE
  7488                           plusw0	equ	0xFEB
  7489                           wreg	equ	0xFE8
  7490                           postinc1	equ	0xFE6
  7491                           postdec1	equ	0xFE5
  7492                           fsr1h	equ	0xFE2
  7493                           fsr1l	equ	0xFE1
  7494                           indf2	equ	0xFDF
  7495                           postinc2	equ	0xFDE
  7496                           postdec2	equ	0xFDD
  7497                           plusw2	equ	0xFDB
  7498                           fsr2h	equ	0xFDA
  7499                           fsr2l	equ	0xFD9
  7500                           status	equ	0xFD8
  7501                           
  7502 ;; *************** function _USBCtrlTrfSetupHandler *****************
  7503 ;; Defined at:
  7504 ;;		line 2483 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7505 ;; Parameters:    Size  Location     Type
  7506 ;;		None
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;		None
  7509 ;; Return value:  Size  Location     Type
  7510 ;;                  1    wreg      void 
  7511 ;; Registers used:
  7512 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7513 ;; Tracked objects:
  7514 ;;		On entry : 0/0
  7515 ;;		On exit  : 0/0
  7516 ;;		Unchanged: 0/0
  7517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7522 ;;Total ram usage:        0 bytes
  7523 ;; Hardware stack levels used:    1
  7524 ;; Hardware stack levels required when called:   17
  7525 ;; This function calls:
  7526 ;;		_USBCheckStdRequest
  7527 ;;		_USBCtrlEPServiceComplete
  7528 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7529 ;; This function is called by:
  7530 ;;		_USBCtrlEPService
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text33
  7535  0039A8                     __ptext33:
  7536                           	opt stack 0
  7537  0039A8                     _USBCtrlTrfSetupHandler:
  7538                           	opt stack 8
  7539                           
  7540                           ;usb_device.c: 2488: shortPacketStatus = 0;
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;incstack = 0
  7544  0039A8  0E00               	movlw	0
  7545  0039AA  6E4D               	movwf	_shortPacketStatus,c
  7546                           
  7547                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  7548  0039AC  0E00               	movlw	0
  7549  0039AE  0100               	movlb	0	; () banked
  7550  0039B0  6FFC               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  7551                           
  7552                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  7553  0039B2  0E00               	movlw	0
  7554  0039B4  0101               	movlb	1	; () banked
  7555  0039B6  6F5F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7556                           
  7557                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  7558  0039B8  0E00               	movlw	0
  7559  0039BA  6F5E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7560                           
  7561                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  7562  0039BC  0E00               	movlw	0
  7563  0039BE  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  7564                           
  7565                           ;usb_device.c: 2493: controlTransferState = 0;
  7566  0039C0  0E00               	movlw	0
  7567  0039C2  6E4C               	movwf	_controlTransferState,c
  7568                           
  7569                           ; BSR set to: 1
  7570                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7571  0039C4  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7572  0039C8  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7573  0039CC  0E7F               	movlw	127
  7574  0039CE  16DF               	andwf	indf2,f,c
  7575                           
  7576                           ; BSR set to: 1
  7577                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7578  0039D0  0E04               	movlw	4
  7579  0039D2  1A3E               	xorwf	_pBDTEntryIn,f,c
  7580                           
  7581                           ; BSR set to: 1
  7582                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7583  0039D4  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7584  0039D8  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7585  0039DC  0E7F               	movlw	127
  7586  0039DE  16DF               	andwf	indf2,f,c
  7587                           
  7588                           ; BSR set to: 1
  7589                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7590  0039E0  0E04               	movlw	4
  7591  0039E2  1A3E               	xorwf	_pBDTEntryIn,f,c
  7592                           
  7593                           ; BSR set to: 1
  7594                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  7595  0039E4  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7596  0039E8  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7597  0039EC  0E7F               	movlw	127
  7598  0039EE  16DF               	andwf	indf2,f,c
  7599                           
  7600                           ; BSR set to: 1
  7601                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  7602  0039F0  0E00               	movlw	0
  7603  0039F2  0100               	movlb	0	; () banked
  7604  0039F4  6FF3               	movwf	(_inPipes+3)& (0+255),b
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  7608  0039F6  0E00               	movlw	0
  7609  0039F8  6FF5               	movwf	(_inPipes+5)& (0+255),b
  7610  0039FA  0E00               	movlw	0
  7611  0039FC  6FF4               	movwf	(_inPipes+4)& (0+255),b
  7612                           
  7613                           ; BSR set to: 0
  7614                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  7615  0039FE  0E00               	movlw	0
  7616  003A00  0101               	movlb	1	; () banked
  7617  003A02  6F15               	movwf	(_outPipes+3)& (0+255),b
  7618                           
  7619                           ; BSR set to: 1
  7620                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  7621  003A04  0E00               	movlw	0
  7622  003A06  6F17               	movwf	(_outPipes+5)& (0+255),b
  7623  003A08  0E00               	movlw	0
  7624  003A0A  6F16               	movwf	(_outPipes+4)& (0+255),b
  7625                           
  7626                           ; BSR set to: 1
  7627                           ;usb_device.c: 2517: USBCheckStdRequest();
  7628  003A0C  EC2C  F014         	call	_USBCheckStdRequest	;wreg free
  7629                           
  7630                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  7631  003A10  0E00               	movlw	0
  7632  003A12  0100               	movlb	0	; () banked
  7633  003A14  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7634  003A16  0E03               	movlw	3
  7635  003A18  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7636  003A1A  0E00               	movlw	0
  7637  003A1C  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7638  003A1E  0E00               	movlw	0
  7639  003A20  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7640  003A22  0E00               	movlw	0
  7641  003A24  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7642  003A26  0E00               	movlw	0
  7643  003A28  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7644  003A2A  EC8C  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7645                           
  7646                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  7647  003A2E  ECC4  F012         	call	_USBCtrlEPServiceComplete	;wreg free
  7648  003A32  0012               	return		;funcret
  7649  003A34                     __end_of_USBCtrlTrfSetupHandler:
  7650                           	opt stack 0
  7651                           tosu	equ	0xFFF
  7652                           tosh	equ	0xFFE
  7653                           tosl	equ	0xFFD
  7654                           pclath	equ	0xFFA
  7655                           tblptru	equ	0xFF8
  7656                           tblptrh	equ	0xFF7
  7657                           tblptrl	equ	0xFF6
  7658                           tablat	equ	0xFF5
  7659                           prodh	equ	0xFF4
  7660                           prodl	equ	0xFF3
  7661                           intcon	equ	0xFF2
  7662                           intcon2	equ	0xFF1
  7663                           intcon3	equ	0xFF0
  7664                           postinc0	equ	0xFEE
  7665                           plusw0	equ	0xFEB
  7666                           wreg	equ	0xFE8
  7667                           postinc1	equ	0xFE6
  7668                           postdec1	equ	0xFE5
  7669                           fsr1h	equ	0xFE2
  7670                           fsr1l	equ	0xFE1
  7671                           indf2	equ	0xFDF
  7672                           postinc2	equ	0xFDE
  7673                           postdec2	equ	0xFDD
  7674                           plusw2	equ	0xFDB
  7675                           fsr2h	equ	0xFDA
  7676                           fsr2l	equ	0xFD9
  7677                           status	equ	0xFD8
  7678                           
  7679 ;; *************** function _USBCtrlEPServiceComplete *****************
  7680 ;; Defined at:
  7681 ;;		line 1634 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7682 ;; Parameters:    Size  Location     Type
  7683 ;;		None
  7684 ;; Auto vars:     Size  Location     Type
  7685 ;;		None
  7686 ;; Return value:  Size  Location     Type
  7687 ;;                  1    wreg      void 
  7688 ;; Registers used:
  7689 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7690 ;; Tracked objects:
  7691 ;;		On entry : 0/0
  7692 ;;		On exit  : 0/0
  7693 ;;		Unchanged: 0/0
  7694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7699 ;;Total ram usage:        0 bytes
  7700 ;; Hardware stack levels used:    1
  7701 ;; Hardware stack levels required when called:   13
  7702 ;; This function calls:
  7703 ;;		_USBCtrlEPAllowDataStage
  7704 ;;		_USBCtrlEPAllowStatusStage
  7705 ;; This function is called by:
  7706 ;;		_USBCtrlTrfSetupHandler
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	text34
  7711  002588                     __ptext34:
  7712                           	opt stack 0
  7713  002588                     _USBCtrlEPServiceComplete:
  7714                           	opt stack 11
  7715                           
  7716                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  7717                           
  7718                           ;incstack = 0
  7719  002588  9865               	bcf	3941,4,c	;volatile
  7720                           
  7721                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  7722  00258A  0100               	movlb	0	; () banked
  7723  00258C  BFF3               	btfsc	(_inPipes+3)& (0+255),7,b
  7724  00258E  D03A               	goto	l1421
  7725                           
  7726                           ; BSR set to: 0
  7727                           ;usb_device.c: 1647: {
  7728                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  7729  002590  0101               	movlb	1	; () banked
  7730  002592  AF15               	btfss	(_outPipes+3)& (0+255),7,b
  7731  002594  D00B               	goto	l1422
  7732                           
  7733                           ; BSR set to: 1
  7734                           ;usb_device.c: 1649: {
  7735                           ;usb_device.c: 1650: controlTransferState = 2;
  7736  002596  0E02               	movlw	2
  7737  002598  6E4C               	movwf	_controlTransferState,c
  7738                           
  7739                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  7740  00259A  515E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  7741  00259C  B4D8               	btfsc	status,2,c
  7742                           
  7743                           ; BSR set to: 1
  7744                           ;usb_device.c: 1662: {
  7745                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  7746  00259E  ECE3  F019         	call	_USBCtrlEPAllowDataStage	;wreg free
  7747                           
  7748                           ;usb_device.c: 1664: }
  7749                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  7750  0025A2  0E00               	movlw	0
  7751  0025A4  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7752                           
  7753                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  7754  0025A6  0E00               	movlw	0
  7755  0025A8  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7756                           
  7757                           ;usb_device.c: 1670: }
  7758  0025AA  0012               	return	
  7759  0025AC                     l1422:
  7760                           
  7761                           ;usb_device.c: 1671: else
  7762                           ;usb_device.c: 1672: {
  7763                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  7764  0025AC  0100               	movlb	0	; () banked
  7765  0025AE  EE20 F001          	lfsr	2,1
  7766  0025B2  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7767  0025B4  26D9               	addwf	fsr2l,f,c
  7768  0025B6  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7769  0025B8  22DA               	addwfc	fsr2h,f,c
  7770  0025BA  0E08               	movlw	8
  7771  0025BC  6EDF               	movwf	indf2,c
  7772                           
  7773                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7774  0025BE  EE20 F002          	lfsr	2,2
  7775  0025C2  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7776  0025C4  26D9               	addwf	fsr2l,f,c
  7777  0025C6  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7778  0025C8  22DA               	addwfc	fsr2h,f,c
  7779  0025CA  0E30               	movlw	48
  7780  0025CC  6EDE               	movwf	postinc2,c
  7781  0025CE  0E04               	movlw	4
  7782  0025D0  6EDD               	movwf	postdec2,c
  7783                           
  7784                           ; BSR set to: 0
  7785                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7786  0025D2  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7787  0025D6  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7788  0025DA  0E0C               	movlw	12
  7789  0025DC  6EDF               	movwf	indf2,c
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7793  0025DE  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7794  0025E2  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7795  0025E6  0E00               	movlw	0
  7796  0025E8  8EDB               	bsf	plusw2,7,c
  7797                           
  7798                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  7799  0025EA  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7800  0025EE  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7801  0025F2  0E04               	movlw	4
  7802  0025F4  6EDF               	movwf	indf2,c
  7803                           
  7804                           ; BSR set to: 0
  7805                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7806  0025F6  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7807  0025FA  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7808  0025FE  0E00               	movlw	0
  7809  002600  8EDB               	bsf	plusw2,7,c
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;usb_device.c: 1683: }
  7813                           ;usb_device.c: 1684: }
  7814  002602  0012               	return	
  7815  002604                     l1421:
  7816                           
  7817                           ; BSR set to: 0
  7818                           ;usb_device.c: 1685: else
  7819                           ;usb_device.c: 1686: {
  7820                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  7821  002604  0104               	movlb	4	; () banked
  7822  002606  AF30               	btfss	48,7,b	;volatile
  7823  002608  D012               	goto	l1426
  7824                           
  7825                           ; BSR set to: 4
  7826                           ;usb_device.c: 1688: {
  7827                           ;usb_device.c: 1689: controlTransferState = 1;
  7828  00260A  0E01               	movlw	1
  7829  00260C  6E4C               	movwf	_controlTransferState,c
  7830                           
  7831                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  7832  00260E  0101               	movlb	1	; () banked
  7833  002610  515F               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  7834  002612  B4D8               	btfsc	status,2,c
  7835                           
  7836                           ; BSR set to: 1
  7837                           ;usb_device.c: 1704: {
  7838                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  7839  002614  ECE3  F019         	call	_USBCtrlEPAllowDataStage	;wreg free
  7840                           
  7841                           ;usb_device.c: 1706: }
  7842                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  7843  002618  0E00               	movlw	0
  7844  00261A  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7845                           
  7846                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  7847  00261C  0E00               	movlw	0
  7848  00261E  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7849                           
  7850                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  7851  002620  0100               	movlb	0	; () banked
  7852  002622  51FC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  7853  002624  A4D8               	btfss	status,2,c
  7854  002626  0012               	return	
  7855                           
  7856                           ; BSR set to: 0
  7857                           ;usb_device.c: 1731: {
  7858                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  7859  002628  ECDF  F015         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7860                           
  7861                           ;usb_device.c: 1733: }
  7862                           ;usb_device.c: 1734: }
  7863  00262C  0012               	return	
  7864  00262E                     l1426:
  7865                           
  7866                           ;usb_device.c: 1735: else
  7867                           ;usb_device.c: 1736: {
  7868                           ;usb_device.c: 1747: controlTransferState = 2;
  7869  00262E  0E02               	movlw	2
  7870  002630  6E4C               	movwf	_controlTransferState,c
  7871                           
  7872                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  7873  002632  0100               	movlb	0	; () banked
  7874  002634  EE20 F001          	lfsr	2,1
  7875  002638  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7876  00263A  26D9               	addwf	fsr2l,f,c
  7877  00263C  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7878  00263E  22DA               	addwfc	fsr2h,f,c
  7879  002640  0E08               	movlw	8
  7880  002642  6EDF               	movwf	indf2,c
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7884  002644  EE20 F002          	lfsr	2,2
  7885  002648  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7886  00264A  26D9               	addwf	fsr2l,f,c
  7887  00264C  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7888  00264E  22DA               	addwfc	fsr2h,f,c
  7889  002650  0E30               	movlw	48
  7890  002652  6EDE               	movwf	postinc2,c
  7891  002654  0E04               	movlw	4
  7892  002656  6EDD               	movwf	postdec2,c
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7896  002658  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7897  00265C  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7898  002660  0E04               	movlw	4
  7899  002662  6EDF               	movwf	indf2,c
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7903  002664  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7904  002668  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7905  00266C  0E00               	movlw	0
  7906  00266E  8EDB               	bsf	plusw2,7,c
  7907                           
  7908                           ; BSR set to: 0
  7909                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  7910  002670  0E00               	movlw	0
  7911  002672  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  7915  002674  0E00               	movlw	0
  7916  002676  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7917                           
  7918                           ; BSR set to: 0
  7919                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  7920  002678  51FC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  7921  00267A  A4D8               	btfss	status,2,c
  7922  00267C  0012               	return	
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;usb_device.c: 1759: {
  7926                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  7927  00267E  ECDF  F015         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7928  002682  0012               	return	
  7929  002684                     __end_of_USBCtrlEPServiceComplete:
  7930                           	opt stack 0
  7931                           tosu	equ	0xFFF
  7932                           tosh	equ	0xFFE
  7933                           tosl	equ	0xFFD
  7934                           pclath	equ	0xFFA
  7935                           tblptru	equ	0xFF8
  7936                           tblptrh	equ	0xFF7
  7937                           tblptrl	equ	0xFF6
  7938                           tablat	equ	0xFF5
  7939                           prodh	equ	0xFF4
  7940                           prodl	equ	0xFF3
  7941                           intcon	equ	0xFF2
  7942                           intcon2	equ	0xFF1
  7943                           intcon3	equ	0xFF0
  7944                           postinc0	equ	0xFEE
  7945                           plusw0	equ	0xFEB
  7946                           wreg	equ	0xFE8
  7947                           postinc1	equ	0xFE6
  7948                           postdec1	equ	0xFE5
  7949                           fsr1h	equ	0xFE2
  7950                           fsr1l	equ	0xFE1
  7951                           indf2	equ	0xFDF
  7952                           postinc2	equ	0xFDE
  7953                           postdec2	equ	0xFDD
  7954                           plusw2	equ	0xFDB
  7955                           fsr2h	equ	0xFDA
  7956                           fsr2l	equ	0xFD9
  7957                           status	equ	0xFD8
  7958                           
  7959 ;; *************** function _USBCtrlEPAllowDataStage *****************
  7960 ;; Defined at:
  7961 ;;		line 1506 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;		None
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7979 ;;Total ram usage:        0 bytes
  7980 ;; Hardware stack levels used:    1
  7981 ;; Hardware stack levels required when called:   12
  7982 ;; This function calls:
  7983 ;;		_USBCtrlTrfTxService
  7984 ;; This function is called by:
  7985 ;;		_USBCtrlEPServiceComplete
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           	psect	text35
  7990  0033C6                     __ptext35:
  7991                           	opt stack 0
  7992  0033C6                     _USBCtrlEPAllowDataStage:
  7993                           	opt stack 11
  7994                           
  7995                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  7996                           
  7997                           ;incstack = 0
  7998  0033C6  0E00               	movlw	0
  7999  0033C8  0101               	movlb	1	; () banked
  8000  0033CA  6F5F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8001                           
  8002                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  8003  0033CC  0E00               	movlw	0
  8004  0033CE  6F5E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  8005                           
  8006                           ; BSR set to: 1
  8007                           ;usb_device.c: 1511: if(controlTransferState == 2)
  8008  0033D0  0E02               	movlw	2
  8009  0033D2  184C               	xorwf	_controlTransferState,w,c
  8010  0033D4  A4D8               	btfss	status,2,c
  8011  0033D6  D020               	goto	l1410
  8012                           
  8013                           ; BSR set to: 1
  8014                           ;usb_device.c: 1512: {
  8015                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  8016  0033D8  0100               	movlb	0	; () banked
  8017  0033DA  EE20 F001          	lfsr	2,1
  8018  0033DE  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8019  0033E0  26D9               	addwf	fsr2l,f,c
  8020  0033E2  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8021  0033E4  22DA               	addwfc	fsr2h,f,c
  8022  0033E6  0E08               	movlw	8
  8023  0033E8  6EDF               	movwf	indf2,c
  8024                           
  8025                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  8026  0033EA  EE20 F002          	lfsr	2,2
  8027  0033EE  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  8028  0033F0  26D9               	addwf	fsr2l,f,c
  8029  0033F2  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  8030  0033F4  22DA               	addwfc	fsr2h,f,c
  8031  0033F6  0E38               	movlw	56
  8032  0033F8  6EDE               	movwf	postinc2,c
  8033  0033FA  0E04               	movlw	4
  8034  0033FC  6EDD               	movwf	postdec2,c
  8035                           
  8036                           ; BSR set to: 0
  8037                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8038  0033FE  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8039  003402  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8040  003406  0E48               	movlw	72
  8041  003408  6EDF               	movwf	indf2,c
  8042                           
  8043                           ; BSR set to: 0
  8044                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8045  00340A  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8046  00340E  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8047  003412  0E00               	movlw	0
  8048  003414  8EDB               	bsf	plusw2,7,c
  8049                           
  8050                           ;usb_device.c: 1518: }
  8051  003416  0012               	return	
  8052  003418                     l1410:
  8053                           
  8054                           ;usb_device.c: 1519: else
  8055                           ;usb_device.c: 1520: {
  8056                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  8057                           
  8058                           ; BSR set to: 0
  8059  003418  0100               	movlb	0	; () banked
  8060  00341A  51F4               	movf	(_inPipes+4)& (0+255),w,b
  8061  00341C  0104               	movlb	4	; () banked
  8062  00341E  5D36               	subwf	54,w,b	;volatile
  8063  003420  0100               	movlb	0	; () banked
  8064  003422  51F5               	movf	(_inPipes+5)& (0+255),w,b
  8065  003424  0104               	movlb	4	; () banked
  8066  003426  5937               	subwfb	55,w,b	;volatile
  8067  003428  B0D8               	btfsc	status,0,c
  8068  00342A  D004               	goto	l1412
  8069                           
  8070                           ; BSR set to: 4
  8071                           ;usb_device.c: 1524: {
  8072                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  8073  00342C  C436 F0F4          	movff	1078,_inPipes+4	;volatile
  8074  003430  C437 F0F5          	movff	1079,_inPipes+5	;volatile
  8075  003434                     l1412:
  8076                           
  8077                           ; BSR set to: 4
  8078                           ;usb_device.c: 1526: }
  8079                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  8080                           
  8081                           ; BSR set to: 4
  8082  003434  EC9E  F014         	call	_USBCtrlTrfTxService	;wreg free
  8083                           
  8084                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  8085  003438  EE20 F002          	lfsr	2,2
  8086  00343C  503E               	movf	_pBDTEntryIn,w,c
  8087  00343E  26D9               	addwf	fsr2l,f,c
  8088  003440  503F               	movf	_pBDTEntryIn+1,w,c
  8089  003442  22DA               	addwfc	fsr2h,f,c
  8090  003444  0E38               	movlw	56
  8091  003446  6EDE               	movwf	postinc2,c
  8092  003448  0E04               	movlw	4
  8093  00344A  6EDD               	movwf	postdec2,c
  8094                           
  8095                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8096  00344C  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8097  003450  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8098  003454  0E48               	movlw	72
  8099  003456  6EDF               	movwf	indf2,c
  8100                           
  8101                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8102  003458  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8103  00345C  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8104  003460  0E00               	movlw	0
  8105  003462  8EDB               	bsf	plusw2,7,c
  8106  003464  0012               	return	
  8107  003466                     __end_of_USBCtrlEPAllowDataStage:
  8108                           	opt stack 0
  8109                           tosu	equ	0xFFF
  8110                           tosh	equ	0xFFE
  8111                           tosl	equ	0xFFD
  8112                           pclath	equ	0xFFA
  8113                           tblptru	equ	0xFF8
  8114                           tblptrh	equ	0xFF7
  8115                           tblptrl	equ	0xFF6
  8116                           tablat	equ	0xFF5
  8117                           prodh	equ	0xFF4
  8118                           prodl	equ	0xFF3
  8119                           intcon	equ	0xFF2
  8120                           intcon2	equ	0xFF1
  8121                           intcon3	equ	0xFF0
  8122                           postinc0	equ	0xFEE
  8123                           plusw0	equ	0xFEB
  8124                           wreg	equ	0xFE8
  8125                           postinc1	equ	0xFE6
  8126                           postdec1	equ	0xFE5
  8127                           fsr1h	equ	0xFE2
  8128                           fsr1l	equ	0xFE1
  8129                           indf2	equ	0xFDF
  8130                           postinc2	equ	0xFDE
  8131                           postdec2	equ	0xFDD
  8132                           plusw2	equ	0xFDB
  8133                           fsr2h	equ	0xFDA
  8134                           fsr2l	equ	0xFD9
  8135                           status	equ	0xFD8
  8136                           
  8137 ;; *************** function _USBCheckStdRequest *****************
  8138 ;; Defined at:
  8139 ;;		line 2703 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;		None
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;		None
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  1    wreg      void 
  8146 ;; Registers used:
  8147 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;Total ram usage:        0 bytes
  8158 ;; Hardware stack levels used:    1
  8159 ;; Hardware stack levels required when called:   16
  8160 ;; This function calls:
  8161 ;;		_USBStdFeatureReqHandler
  8162 ;;		_USBStdGetDscHandler
  8163 ;;		_USBStdGetStatusHandler
  8164 ;;		_USBStdSetCfgHandler
  8165 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8166 ;; This function is called by:
  8167 ;;		_USBCtrlTrfSetupHandler
  8168 ;; This function uses a non-reentrant model
  8169 ;;
  8170                           
  8171                           	psect	text36
  8172  002858                     __ptext36:
  8173                           	opt stack 0
  8174  002858                     _USBCheckStdRequest:
  8175                           	opt stack 8
  8176                           
  8177                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  8178                           
  8179                           ;incstack = 0
  8180  002858  0104               	movlb	4	; () banked
  8181  00285A  3930               	swapf	48,w,b	;volatile
  8182  00285C  32E8               	rrcf	wreg,f,c
  8183  00285E  0B03               	andlw	3
  8184  002860  0900               	iorlw	0
  8185  002862  A4D8               	btfss	status,2,c
  8186  002864  0012               	return	
  8187  002866  D048               	goto	l1545
  8188  002868                     l1546:
  8189                           
  8190                           ; BSR set to: 4
  8191                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  8192  002868  0100               	movlb	0	; () banked
  8193  00286A  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8194                           
  8195                           ; BSR set to: 0
  8196                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  8197  00286C  0E08               	movlw	8
  8198  00286E  6FFD               	movwf	_USBDeviceState& (0+255),b
  8199                           
  8200                           ;usb_device.c: 2713: break;
  8201  002870  0012               	return	
  8202  002872                     
  8203                           ;usb_device.c: 2715: USBStdGetDscHandler();
  8204                           
  8205                           ; BSR set to: 0
  8206  002872  ECE4  F00F         	call	_USBStdGetDscHandler	;wreg free
  8207                           
  8208                           ;usb_device.c: 2716: break;
  8209  002876  0012               	return	
  8210  002878                     
  8211                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  8212  002878  ECB9  F013         	call	_USBStdSetCfgHandler	;wreg free
  8213                           
  8214                           ;usb_device.c: 2719: break;
  8215  00287C  0012               	return	
  8216  00287E                     
  8217                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  8218  00287E  0E52               	movlw	low _USBActiveConfiguration
  8219  002880  0100               	movlb	0	; () banked
  8220  002882  6FF0               	movwf	_inPipes& (0+255),b
  8221  002884  0E00               	movlw	high _USBActiveConfiguration
  8222  002886  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8223                           
  8224                           ; BSR set to: 0
  8225                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8226  002888  81F3               	bsf	(_inPipes+3)& (0+255),0,b
  8227                           
  8228                           ; BSR set to: 0
  8229                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  8230  00288A  0E01               	movlw	1
  8231  00288C  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8232                           
  8233                           ; BSR set to: 0
  8234                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  8235  00288E  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8236                           
  8237                           ;usb_device.c: 2725: break;
  8238  002890  0012               	return	
  8239  002892                     
  8240                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  8241                           
  8242                           ; BSR set to: 0
  8243  002892  EC2F  F018         	call	_USBStdGetStatusHandler	;wreg free
  8244                           
  8245                           ;usb_device.c: 2728: break;
  8246  002896  0012               	return	
  8247  002898                     
  8248                           ;usb_device.c: 2730: case 3:
  8249                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  8250  002898  EC50  F007         	call	_USBStdFeatureReqHandler	;wreg free
  8251                           
  8252                           ;usb_device.c: 2732: break;
  8253  00289C  0012               	return	
  8254  00289E                     
  8255                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  8256  00289E  0104               	movlb	4	; () banked
  8257  0028A0  5134               	movf	52,w,b	;volatile
  8258  0028A2  0D01               	mullw	1
  8259  0028A4  0EC1               	movlw	low _USBAlternateInterface
  8260  0028A6  24F3               	addwf	prodl,w,c
  8261  0028A8  0100               	movlb	0	; () banked
  8262  0028AA  6FF0               	movwf	_inPipes& (0+255),b
  8263  0028AC  0E01               	movlw	high _USBAlternateInterface
  8264  0028AE  20F4               	addwfc	prodh,w,c
  8265  0028B0  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8269  0028B2  81F3               	bsf	(_inPipes+3)& (0+255),0,b
  8270                           
  8271                           ; BSR set to: 0
  8272                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  8273  0028B4  0E01               	movlw	1
  8274  0028B6  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8275                           
  8276                           ; BSR set to: 0
  8277                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  8278  0028B8  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8279                           
  8280                           ;usb_device.c: 2738: break;
  8281  0028BA  0012               	return	
  8282  0028BC                     l1555:
  8283                           
  8284                           ; BSR set to: 4
  8285                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  8286  0028BC  0100               	movlb	0	; () banked
  8287  0028BE  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  8291  0028C0  0104               	movlb	4	; () banked
  8292  0028C2  5134               	movf	52,w,b	;volatile
  8293  0028C4  0D01               	mullw	1
  8294  0028C6  0EC1               	movlw	low _USBAlternateInterface
  8295  0028C8  24F3               	addwf	prodl,w,c
  8296  0028CA  6ED9               	movwf	fsr2l,c
  8297  0028CC  0E01               	movlw	high _USBAlternateInterface
  8298  0028CE  20F4               	addwfc	prodh,w,c
  8299  0028D0  6EDA               	movwf	fsr2h,c
  8300  0028D2  C432 FFDF          	movff	1074,indf2	;volatile
  8301                           
  8302                           ;usb_device.c: 2742: break;
  8303  0028D6  0012               	return	
  8304  0028D8                     
  8305                           ; BSR set to: 4
  8306                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  8307                           
  8308                           ; BSR set to: 4
  8309  0028D8  0E00               	movlw	0
  8310  0028DA  0100               	movlb	0	; () banked
  8311  0028DC  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8312  0028DE  0E02               	movlw	2
  8313  0028E0  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8314  0028E2  0E00               	movlw	0
  8315  0028E4  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8316  0028E6  0E00               	movlw	0
  8317  0028E8  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8318  0028EA  0E00               	movlw	0
  8319  0028EC  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8320  0028EE  0E00               	movlw	0
  8321  0028F0  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8322  0028F2  EC8C  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8323                           
  8324                           ;usb_device.c: 2749: }
  8325                           
  8326                           ;usb_device.c: 2748: break;
  8327                           
  8328                           ;usb_device.c: 2747: default:
  8329                           
  8330                           ;usb_device.c: 2746: case 12:
  8331                           
  8332                           ;usb_device.c: 2745: break;
  8333  0028F6  0012               	return	
  8334  0028F8                     l1545:
  8335  0028F8  0104               	movlb	4	; () banked
  8336  0028FA  5131               	movf	49,w,b	;volatile
  8337                           
  8338                           ; Switch size 1, requested type "space"
  8339                           ; Number of cases is 11, Range of values is 0 to 12
  8340                           ; switch strategies available:
  8341                           ; Name         Instructions Cycles
  8342                           ; simple_byte           34    18 (average)
  8343                           ;	Chosen strategy is simple_byte
  8344  0028FC  0A00               	xorlw	0	; case 0
  8345  0028FE  B4D8               	btfsc	status,2,c
  8346  002900  D7C8               	goto	l1551
  8347  002902  0A01               	xorlw	1	; case 1
  8348  002904  B4D8               	btfsc	status,2,c
  8349  002906  D7C8               	goto	l1552
  8350  002908  0A02               	xorlw	2	; case 3
  8351  00290A  B4D8               	btfsc	status,2,c
  8352  00290C  D7C5               	goto	l1552
  8353  00290E  0A06               	xorlw	6	; case 5
  8354  002910  B4D8               	btfsc	status,2,c
  8355  002912  D7AA               	goto	l1546
  8356  002914  0A03               	xorlw	3	; case 6
  8357  002916  B4D8               	btfsc	status,2,c
  8358  002918  D7AC               	goto	l1548
  8359  00291A  0A01               	xorlw	1	; case 7
  8360  00291C  B4D8               	btfsc	status,2,c
  8361  00291E  D7DC               	goto	l1556
  8362  002920  0A0F               	xorlw	15	; case 8
  8363  002922  B4D8               	btfsc	status,2,c
  8364  002924  D7AC               	goto	l1550
  8365  002926  0A01               	xorlw	1	; case 9
  8366  002928  B4D8               	btfsc	status,2,c
  8367  00292A  D7A6               	goto	l1549
  8368  00292C  0A03               	xorlw	3	; case 10
  8369  00292E  B4D8               	btfsc	status,2,c
  8370  002930  D7B6               	goto	l1554
  8371  002932  0A01               	xorlw	1	; case 11
  8372  002934  B4D8               	btfsc	status,2,c
  8373  002936  D7C2               	goto	l1555
  8374  002938  0A07               	xorlw	7	; case 12
  8375  00293A  0012               	return	
  8376  00293C                     __end_of_USBCheckStdRequest:
  8377                           	opt stack 0
  8378                           tosu	equ	0xFFF
  8379                           tosh	equ	0xFFE
  8380                           tosl	equ	0xFFD
  8381                           pclath	equ	0xFFA
  8382                           tblptru	equ	0xFF8
  8383                           tblptrh	equ	0xFF7
  8384                           tblptrl	equ	0xFF6
  8385                           tablat	equ	0xFF5
  8386                           prodh	equ	0xFF4
  8387                           prodl	equ	0xFF3
  8388                           intcon	equ	0xFF2
  8389                           intcon2	equ	0xFF1
  8390                           intcon3	equ	0xFF0
  8391                           postinc0	equ	0xFEE
  8392                           plusw0	equ	0xFEB
  8393                           wreg	equ	0xFE8
  8394                           postinc1	equ	0xFE6
  8395                           postdec1	equ	0xFE5
  8396                           fsr1h	equ	0xFE2
  8397                           fsr1l	equ	0xFE1
  8398                           indf2	equ	0xFDF
  8399                           postinc2	equ	0xFDE
  8400                           postdec2	equ	0xFDD
  8401                           plusw2	equ	0xFDB
  8402                           fsr2h	equ	0xFDA
  8403                           fsr2l	equ	0xFD9
  8404                           status	equ	0xFD8
  8405                           
  8406 ;; *************** function _USBStdSetCfgHandler *****************
  8407 ;; Defined at:
  8408 ;;		line 1986 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8409 ;; Parameters:    Size  Location     Type
  8410 ;;		None
  8411 ;; Auto vars:     Size  Location     Type
  8412 ;;  i               1   20[BANK0 ] unsigned char 
  8413 ;; Return value:  Size  Location     Type
  8414 ;;                  1    wreg      void 
  8415 ;; Registers used:
  8416 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8417 ;; Tracked objects:
  8418 ;;		On entry : 0/0
  8419 ;;		On exit  : 0/0
  8420 ;;		Unchanged: 0/0
  8421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8423 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8425 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8426 ;;Total ram usage:        1 bytes
  8427 ;; Hardware stack levels used:    1
  8428 ;; Hardware stack levels required when called:   15
  8429 ;; This function calls:
  8430 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8431 ;;		_memset
  8432 ;; This function is called by:
  8433 ;;		_USBCheckStdRequest
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437                           	psect	text37
  8438  002772                     __ptext37:
  8439                           	opt stack 0
  8440  002772                     _USBStdSetCfgHandler:
  8441                           	opt stack 8
  8442                           
  8443                           ;usb_device.c: 1988: uint8_t i;
  8444                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  8445                           
  8446                           ;incstack = 0
  8447  002772  0100               	movlb	0	; () banked
  8448  002774  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8449                           
  8450                           ; BSR set to: 0
  8451                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  8452  002776  0E27               	movlw	39
  8453  002778  6F60               	movwf	memset@p1& (0+255),b
  8454  00277A  0E0F               	movlw	15
  8455  00277C  6F61               	movwf	(memset@p1+1)& (0+255),b
  8456  00277E  0E00               	movlw	0
  8457  002780  6F63               	movwf	(memset@c+1)& (0+255),b
  8458  002782  0E00               	movlw	0
  8459  002784  6F62               	movwf	memset@c& (0+255),b
  8460  002786  0E00               	movlw	0
  8461  002788  6F65               	movwf	(memset@n+1)& (0+255),b
  8462  00278A  0E02               	movlw	2
  8463  00278C  6F64               	movwf	memset@n& (0+255),b
  8464  00278E  EC1A  F025         	call	_memset	;wreg free
  8465                           
  8466                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  8467  002792  0E00               	movlw	0
  8468  002794  0100               	movlb	0	; () banked
  8469  002796  6F60               	movwf	memset@p1& (0+255),b
  8470  002798  0E04               	movlw	4
  8471  00279A  6F61               	movwf	(memset@p1+1)& (0+255),b
  8472  00279C  0E00               	movlw	0
  8473  00279E  6F63               	movwf	(memset@c+1)& (0+255),b
  8474  0027A0  0E00               	movlw	0
  8475  0027A2  6F62               	movwf	memset@c& (0+255),b
  8476  0027A4  0E00               	movlw	0
  8477  0027A6  6F65               	movwf	(memset@n+1)& (0+255),b
  8478  0027A8  0E30               	movlw	48
  8479  0027AA  6F64               	movwf	memset@n& (0+255),b
  8480  0027AC  EC1A  F025         	call	_memset	;wreg free
  8481                           
  8482                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  8483  0027B0  8C65               	bsf	3941,6,c	;volatile
  8484                           
  8485                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  8486  0027B2  0E00               	movlw	0
  8487  0027B4  0100               	movlb	0	; () banked
  8488  0027B6  6F74               	movwf	USBStdSetCfgHandler@i& (0+255),b
  8489  0027B8                     l6631:
  8490                           
  8491                           ; BSR set to: 0
  8492  0027B8  0E02               	movlw	2
  8493  0027BA  6574               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  8494  0027BC  D001               	goto	l1462
  8495  0027BE  D016               	goto	u4550
  8496  0027C0                     l1462:
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;usb_device.c: 2006: {
  8500                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  8501                           
  8502                           ; BSR set to: 0
  8503  0027C0  5174               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8504  0027C2  0D01               	mullw	1
  8505  0027C4  0E3B               	movlw	low _ep_data_in
  8506  0027C6  24F3               	addwf	prodl,w,c
  8507  0027C8  6ED9               	movwf	fsr2l,c
  8508  0027CA  0E01               	movlw	high _ep_data_in
  8509  0027CC  20F4               	addwfc	prodh,w,c
  8510  0027CE  6EDA               	movwf	fsr2h,c
  8511  0027D0  0E00               	movlw	0
  8512  0027D2  6EDF               	movwf	indf2,c
  8513                           
  8514                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  8515  0027D4  5174               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8516  0027D6  0D01               	mullw	1
  8517  0027D8  0E38               	movlw	low _ep_data_out
  8518  0027DA  24F3               	addwf	prodl,w,c
  8519  0027DC  6ED9               	movwf	fsr2l,c
  8520  0027DE  0E01               	movlw	high _ep_data_out
  8521  0027E0  20F4               	addwfc	prodh,w,c
  8522  0027E2  6EDA               	movwf	fsr2h,c
  8523  0027E4  0E00               	movlw	0
  8524  0027E6  6EDF               	movwf	indf2,c
  8525                           
  8526                           ; BSR set to: 0
  8527  0027E8  2B74               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  8528  0027EA  D7E6               	goto	l6631
  8529  0027EC                     u4550:
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;usb_device.c: 2009: }
  8533                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  8534                           
  8535                           ; BSR set to: 0
  8536  0027EC  0EC1               	movlw	low _USBAlternateInterface
  8537  0027EE  6F60               	movwf	memset@p1& (0+255),b
  8538  0027F0  0E01               	movlw	high _USBAlternateInterface
  8539  0027F2  6F61               	movwf	(memset@p1+1)& (0+255),b
  8540  0027F4  0E00               	movlw	0
  8541  0027F6  6F63               	movwf	(memset@c+1)& (0+255),b
  8542  0027F8  0E00               	movlw	0
  8543  0027FA  6F62               	movwf	memset@c& (0+255),b
  8544  0027FC  0E00               	movlw	0
  8545  0027FE  6F65               	movwf	(memset@n+1)& (0+255),b
  8546  002800  0E02               	movlw	2
  8547  002802  6F64               	movwf	memset@n& (0+255),b
  8548  002804  EC1A  F025         	call	_memset	;wreg free
  8549                           
  8550                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  8551  002808  9C65               	bcf	3941,6,c	;volatile
  8552                           
  8553                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8554  00280A  0E08               	movlw	8
  8555  00280C  6E3E               	movwf	_pBDTEntryIn,c
  8556  00280E  0E04               	movlw	4
  8557  002810  6E3F               	movwf	_pBDTEntryIn+1,c
  8558                           
  8559                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  8560  002812  0E00               	movlw	0
  8561  002814  0100               	movlb	0	; () banked
  8562  002816  6FF8               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8563  002818  0E04               	movlw	4
  8564  00281A  6FF9               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8565                           
  8566                           ; BSR set to: 0
  8567                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8568  00281C  C0F8  F0F6         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8569  002820  C0F9  F0F7         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  8573  002824  C432 F052          	movff	1074,_USBActiveConfiguration	;volatile
  8574                           
  8575                           ; BSR set to: 0
  8576                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  8577  002828  5052               	movf	_USBActiveConfiguration,w,c
  8578  00282A  A4D8               	btfss	status,2,c
  8579  00282C  D003               	goto	l1464
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;usb_device.c: 2028: {
  8583                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  8584  00282E  0E10               	movlw	16
  8585  002830  6FFD               	movwf	_USBDeviceState& (0+255),b
  8586                           
  8587                           ;usb_device.c: 2031: }
  8588  002832  0012               	return	
  8589  002834                     l1464:
  8590                           
  8591                           ; BSR set to: 0
  8592                           ;usb_device.c: 2032: else
  8593                           ;usb_device.c: 2033: {
  8594                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  8595                           
  8596                           ; BSR set to: 0
  8597  002834  0E00               	movlw	0
  8598  002836  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8599  002838  0E01               	movlw	1
  8600  00283A  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8601  00283C  0E52               	movlw	low _USBActiveConfiguration
  8602  00283E  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8603  002840  0E00               	movlw	high _USBActiveConfiguration
  8604  002842  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8605  002844  0E00               	movlw	0
  8606  002846  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8607  002848  0E01               	movlw	1
  8608  00284A  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8609  00284C  EC8C  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8610                           
  8611                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  8612  002850  0E20               	movlw	32
  8613  002852  0100               	movlb	0	; () banked
  8614  002854  6FFD               	movwf	_USBDeviceState& (0+255),b
  8615  002856  0012               	return	
  8616  002858                     __end_of_USBStdSetCfgHandler:
  8617                           	opt stack 0
  8618                           tosu	equ	0xFFF
  8619                           tosh	equ	0xFFE
  8620                           tosl	equ	0xFFD
  8621                           pclath	equ	0xFFA
  8622                           tblptru	equ	0xFF8
  8623                           tblptrh	equ	0xFF7
  8624                           tblptrl	equ	0xFF6
  8625                           tablat	equ	0xFF5
  8626                           prodh	equ	0xFF4
  8627                           prodl	equ	0xFF3
  8628                           intcon	equ	0xFF2
  8629                           intcon2	equ	0xFF1
  8630                           intcon3	equ	0xFF0
  8631                           postinc0	equ	0xFEE
  8632                           plusw0	equ	0xFEB
  8633                           wreg	equ	0xFE8
  8634                           postinc1	equ	0xFE6
  8635                           postdec1	equ	0xFE5
  8636                           fsr1h	equ	0xFE2
  8637                           fsr1l	equ	0xFE1
  8638                           indf2	equ	0xFDF
  8639                           postinc2	equ	0xFDE
  8640                           postdec2	equ	0xFDD
  8641                           plusw2	equ	0xFDB
  8642                           fsr2h	equ	0xFDA
  8643                           fsr2l	equ	0xFD9
  8644                           status	equ	0xFD8
  8645                           
  8646 ;; *************** function _USBStdGetStatusHandler *****************
  8647 ;; Defined at:
  8648 ;;		line 2147 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;		None
  8651 ;; Auto vars:     Size  Location     Type
  8652 ;;  p               2    1[BANK0 ] PTR struct __BDT
  8653 ;;		 -> BDT(48), NULL(0), 
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  1    wreg      void 
  8656 ;; Registers used:
  8657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/0
  8660 ;;		On exit  : 0/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8664 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8665 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8666 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8667 ;;Total ram usage:        3 bytes
  8668 ;; Hardware stack levels used:    1
  8669 ;; Hardware stack levels required when called:   11
  8670 ;; This function calls:
  8671 ;;		Nothing
  8672 ;; This function is called by:
  8673 ;;		_USBCheckStdRequest
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text38
  8678  00305E                     __ptext38:
  8679                           	opt stack 0
  8680  00305E                     _USBStdGetStatusHandler:
  8681                           	opt stack 12
  8682                           
  8683                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  8684                           
  8685                           ; BSR set to: 0
  8686                           ;incstack = 0
  8687  00305E  0E00               	movlw	0
  8688  003060  0104               	movlb	4	; () banked
  8689  003062  6F38               	movwf	56,b	;volatile
  8690                           
  8691                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  8692  003064  0E00               	movlw	0
  8693  003066  6F39               	movwf	57,b	;volatile
  8694                           
  8695                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  8696  003068  D03D               	goto	l1483
  8697  00306A                     l1484:
  8698                           
  8699                           ; BSR set to: 4
  8700                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  8701  00306A  0100               	movlb	0	; () banked
  8702  00306C  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8703                           
  8704                           ;usb_device.c: 2163: }
  8705                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  8706                           
  8707                           ; BSR set to: 4
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;usb_device.c: 2161: {
  8711                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  8712                           
  8713                           ;usb_device.c: 2160: if(0 == 1)
  8714  00306E  0101               	movlb	1	; () banked
  8715  003070  0562               	decf	_RemoteWakeup& (0+255),w,b
  8716  003072  A4D8               	btfss	status,2,c
  8717  003074  D042               	goto	l1487
  8718                           
  8719                           ; BSR set to: 1
  8720                           ;usb_device.c: 2166: {
  8721                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  8722  003076  0104               	movlb	4	; () banked
  8723  003078  8338               	bsf	56,1,b	;volatile
  8724                           
  8725                           ; BSR set to: 4
  8726                           ;usb_device.c: 2168: }
  8727                           ;usb_device.c: 2169: break;
  8728  00307A  D03F               	goto	l1487
  8729  00307C                     l1488:
  8730                           
  8731                           ; BSR set to: 4
  8732                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  8733  00307C  0100               	movlb	0	; () banked
  8734  00307E  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8735                           
  8736                           ;usb_device.c: 2172: break;
  8737  003080  D03C               	goto	l1487
  8738  003082                     l1489:
  8739                           
  8740                           ; BSR set to: 4
  8741                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  8742  003082  0100               	movlb	0	; () banked
  8743  003084  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8744                           
  8745                           ;usb_device.c: 2178: {
  8746                           ;usb_device.c: 2179: BDT_ENTRY *p;
  8747                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  8748  003086  0104               	movlb	4	; () banked
  8749  003088  BF34               	btfsc	52,7,b	;volatile
  8750  00308A  D00B               	goto	l1490
  8751                           
  8752                           ; BSR set to: 4
  8753                           ;usb_device.c: 2182: {
  8754                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8755  00308C  5134               	movf	52,w,b	;volatile
  8756  00308E  0B0F               	andlw	15
  8757  003090  0100               	movlb	0	; () banked
  8758  003092  6F60               	movwf	??_USBStdGetStatusHandler& (0+255),b
  8759  003094  5160               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8760  003096  0D02               	mullw	2
  8761  003098  0E20               	movlw	low _pBDTEntryOut
  8762  00309A  24F3               	addwf	prodl,w,c
  8763  00309C  6ED9               	movwf	fsr2l,c
  8764  00309E  0E01               	movlw	high _pBDTEntryOut
  8765  0030A0  D00B               	goto	L4
  8766  0030A2                     l1490:
  8767                           
  8768                           ;usb_device.c: 2185: else
  8769                           ;usb_device.c: 2186: {
  8770                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  8771                           
  8772                           ; BSR set to: 0
  8773  0030A2  0104               	movlb	4	; () banked
  8774  0030A4  5134               	movf	52,w,b	;volatile
  8775  0030A6  0B0F               	andlw	15
  8776  0030A8  0100               	movlb	0	; () banked
  8777  0030AA  6F60               	movwf	??_USBStdGetStatusHandler& (0+255),b
  8778  0030AC  5160               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8779  0030AE  0D02               	mullw	2
  8780  0030B0  0E3E               	movlw	low _pBDTEntryIn
  8781  0030B2  24F3               	addwf	prodl,w,c
  8782  0030B4  6ED9               	movwf	fsr2l,c
  8783  0030B6  0E00               	movlw	high _pBDTEntryIn
  8784  0030B8                     L4:
  8785  0030B8  20F4               	addwfc	prodh,w,c
  8786  0030BA  6EDA               	movwf	fsr2h,c
  8787  0030BC  CFDE F061          	movff	postinc2,USBStdGetStatusHandler@p
  8788  0030C0  CFDD F062          	movff	postdec2,USBStdGetStatusHandler@p+1
  8789                           
  8790                           ; BSR set to: 0
  8791                           ;usb_device.c: 2188: }
  8792                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  8793                           
  8794                           ; BSR set to: 0
  8795  0030C4  C061  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8796  0030C8  C062  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8797  0030CC  AEDF               	btfss	indf2,7,c
  8798  0030CE  D015               	goto	l1487
  8799                           
  8800                           ; BSR set to: 0
  8801  0030D0  C061  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8802  0030D4  C062  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8803  0030D8  A4DF               	btfss	indf2,2,c
  8804  0030DA  D00F               	goto	l1487
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  8808  0030DC  0E01               	movlw	1
  8809  0030DE  0104               	movlb	4	; () banked
  8810  0030E0  6F38               	movwf	56,b	;volatile
  8811                           
  8812                           ; BSR set to: 4
  8813                           ;usb_device.c: 2193: }
  8814                           ;usb_device.c: 2194: }
  8815                           
  8816                           ; BSR set to: 4
  8817                           ;usb_device.c: 2192: break;
  8818  0030E2  D00B               	goto	l1487
  8819  0030E4                     l1483:
  8820                           
  8821                           ; BSR set to: 4
  8822                           
  8823                           ; BSR set to: 4
  8824  0030E4  5130               	movf	48,w,b	;volatile
  8825  0030E6  0B1F               	andlw	31
  8826                           
  8827                           ; Switch size 1, requested type "space"
  8828                           ; Number of cases is 3, Range of values is 0 to 2
  8829                           ; switch strategies available:
  8830                           ; Name         Instructions Cycles
  8831                           ; simple_byte           10     6 (average)
  8832                           ;	Chosen strategy is simple_byte
  8833  0030E8  0A00               	xorlw	0	; case 0
  8834  0030EA  B4D8               	btfsc	status,2,c
  8835  0030EC  D7BE               	goto	l1484
  8836  0030EE  0A01               	xorlw	1	; case 1
  8837  0030F0  B4D8               	btfsc	status,2,c
  8838  0030F2  D7C4               	goto	l1488
  8839  0030F4  0A03               	xorlw	3	; case 2
  8840  0030F6  B4D8               	btfsc	status,2,c
  8841  0030F8  D7C4               	goto	l1489
  8842  0030FA                     l1487:
  8843                           
  8844                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  8845  0030FA  0100               	movlb	0	; () banked
  8846  0030FC  AFF3               	btfss	(_inPipes+3)& (0+255),7,b
  8847  0030FE  0012               	return	
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;usb_device.c: 2197: {
  8851                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  8852  003100  0E38               	movlw	56
  8853  003102  6FF0               	movwf	_inPipes& (0+255),b
  8854  003104  0E04               	movlw	4
  8855  003106  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8859  003108  81F3               	bsf	(_inPipes+3)& (0+255),0,b
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
  8863  00310A  0E02               	movlw	2
  8864  00310C  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8865  00310E  0012               	return	
  8866  003110                     __end_of_USBStdGetStatusHandler:
  8867                           	opt stack 0
  8868                           tosu	equ	0xFFF
  8869                           tosh	equ	0xFFE
  8870                           tosl	equ	0xFFD
  8871                           pclath	equ	0xFFA
  8872                           tblptru	equ	0xFF8
  8873                           tblptrh	equ	0xFF7
  8874                           tblptrl	equ	0xFF6
  8875                           tablat	equ	0xFF5
  8876                           prodh	equ	0xFF4
  8877                           prodl	equ	0xFF3
  8878                           intcon	equ	0xFF2
  8879                           intcon2	equ	0xFF1
  8880                           intcon3	equ	0xFF0
  8881                           postinc0	equ	0xFEE
  8882                           plusw0	equ	0xFEB
  8883                           wreg	equ	0xFE8
  8884                           postinc1	equ	0xFE6
  8885                           postdec1	equ	0xFE5
  8886                           fsr1h	equ	0xFE2
  8887                           fsr1l	equ	0xFE1
  8888                           indf2	equ	0xFDF
  8889                           postinc2	equ	0xFDE
  8890                           postdec2	equ	0xFDD
  8891                           plusw2	equ	0xFDB
  8892                           fsr2h	equ	0xFDA
  8893                           fsr2l	equ	0xFD9
  8894                           status	equ	0xFD8
  8895                           
  8896 ;; *************** function _USBStdGetDscHandler *****************
  8897 ;; Defined at:
  8898 ;;		line 2061 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8899 ;; Parameters:    Size  Location     Type
  8900 ;;		None
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;		None
  8903 ;; Return value:  Size  Location     Type
  8904 ;;                  1    wreg      void 
  8905 ;; Registers used:
  8906 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8907 ;; Tracked objects:
  8908 ;;		On entry : 0/0
  8909 ;;		On exit  : 0/0
  8910 ;;		Unchanged: 0/0
  8911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8914 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8915 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8916 ;;Total ram usage:        2 bytes
  8917 ;; Hardware stack levels used:    1
  8918 ;; Hardware stack levels required when called:   11
  8919 ;; This function calls:
  8920 ;;		Nothing
  8921 ;; This function is called by:
  8922 ;;		_USBCheckStdRequest
  8923 ;; This function uses a non-reentrant model
  8924 ;;
  8925                           
  8926                           	psect	text39
  8927  001FC8                     __ptext39:
  8928                           	opt stack 0
  8929  001FC8                     _USBStdGetDscHandler:
  8930                           	opt stack 12
  8931                           
  8932                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;incstack = 0
  8936  001FC8  0E80               	movlw	128
  8937  001FCA  0104               	movlb	4	; () banked
  8938  001FCC  1930               	xorwf	48,w,b	;volatile
  8939  001FCE  A4D8               	btfss	status,2,c
  8940  001FD0  0012               	return	
  8941                           
  8942                           ; BSR set to: 4
  8943                           ;usb_device.c: 2064: {
  8944                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  8945  001FD2  0EC0               	movlw	192
  8946  001FD4  0100               	movlb	0	; () banked
  8947  001FD6  6FF3               	movwf	(_inPipes+3)& (0+255),b
  8948                           
  8949                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
  8950  001FD8  D088               	goto	l1470
  8951  001FDA                     
  8952                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  8953                           
  8954                           ; BSR set to: 0
  8955  001FDA  0EF4               	movlw	low _device_dsc
  8956  001FDC  0100               	movlb	0	; () banked
  8957  001FDE  6FF0               	movwf	_inPipes& (0+255),b
  8958  001FE0  0EFE               	movlw	high _device_dsc
  8959  001FE2  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
  8963  001FE4  0E00               	movlw	0
  8964  001FE6  6FF5               	movwf	(_inPipes+5)& (0+255),b
  8965  001FE8  0E12               	movlw	18
  8966  001FEA  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8967                           
  8968                           ;usb_device.c: 2076: break;
  8969  001FEC  0012               	return	
  8970  001FEE                     
  8971                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
  8972                           
  8973                           ; BSR set to: 0
  8974  001FEE  0104               	movlb	4	; () banked
  8975  001FF0  5132               	movf	50,w,b	;volatile
  8976  001FF2  A4D8               	btfss	status,2,c
  8977  001FF4  D043               	goto	l1474
  8978                           
  8979                           ; BSR set to: 4
  8980                           ;usb_device.c: 2082: {
  8981                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  8982  001FF6  5132               	movf	50,w,b	;volatile
  8983  001FF8  0D02               	mullw	2
  8984  001FFA  0EDD               	movlw	low _USB_CD_Ptr
  8985  001FFC  24F3               	addwf	prodl,w,c
  8986  001FFE  6EF6               	movwf	tblptrl,c
  8987  002000  0EFC               	movlw	high _USB_CD_Ptr
  8988  002002  20F4               	addwfc	prodh,w,c
  8989  002004  6EF7               	movwf	tblptrh,c
  8990  002006                     	if	1	;There are 3 active tblptr bytes
  8991  002006  6AF8               	clrf	tblptru,c
  8992  002008  0E00               	movlw	low (__mediumconst shr (0+16))
  8993  00200A  22F8               	addwfc	tblptru,f,c
  8994  00200C                     	endif
  8995  00200C  0009               	tblrd		*+
  8996  00200E  CFF5 F0F0          	movff	tablat,_inPipes
  8997  002012  000A               	tblrd		*-
  8998  002014  CFF5 F0F1          	movff	tablat,_inPipes+1
  8999                           
  9000                           ; BSR set to: 4
  9001                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  9002  002018  0E02               	movlw	2
  9003  00201A  0100               	movlb	0	; () banked
  9004  00201C  25F0               	addwf	_inPipes& (0+255),w,b
  9005  00201E  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  9006  002020  0E00               	movlw	0
  9007  002022  21F1               	addwfc	(_inPipes+1)& (0+255),w,b
  9008  002024  6F61               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  9009  002026  C060  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  9010  00202A  C061  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  9011  00202E  6AF8               	clrf	tblptru,c
  9012  002030  0E0E               	movlw	(high __ramtop+-1)
  9013  002032  64F7               	cpfsgt	tblptrh,c
  9014  002034  D003               	bra	u4597
  9015  002036  0008               	tblrd		*
  9016  002038  50F5               	movf	tablat,w,c
  9017  00203A  D005               	bra	u4590
  9018  00203C                     u4597:
  9019  00203C  CFF6 FFE9          	movff	tblptrl,fsr0l
  9020  002040  CFF7 FFEA          	movff	tblptrh,fsr0h
  9021  002044  50EF               	movf	indf0,w,c
  9022  002046                     u4590:
  9023  002046  0100               	movlb	0	; () banked
  9024  002048  6FF4               	movwf	(_inPipes+4)& (0+255),b
  9025                           
  9026                           ; BSR set to: 0
  9027                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  9028  00204A  0E03               	movlw	3
  9029  00204C  25F0               	addwf	_inPipes& (0+255),w,b
  9030  00204E  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  9031  002050  0E00               	movlw	0
  9032  002052  21F1               	addwfc	(_inPipes+1)& (0+255),w,b
  9033  002054  6F61               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  9034  002056  C060  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  9035  00205A  C061  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  9036  00205E  6AF8               	clrf	tblptru,c
  9037  002060  0E0E               	movlw	(high __ramtop+-1)
  9038  002062  64F7               	cpfsgt	tblptrh,c
  9039  002064  D003               	bra	u4607
  9040  002066  0008               	tblrd		*
  9041  002068  50F5               	movf	tablat,w,c
  9042  00206A  D005               	bra	u4600
  9043  00206C                     u4607:
  9044  00206C  CFF6 FFE9          	movff	tblptrl,fsr0l
  9045  002070  CFF7 FFEA          	movff	tblptrh,fsr0h
  9046  002074  50EF               	movf	indf0,w,c
  9047  002076                     u4600:
  9048  002076  0100               	movlb	0	; () banked
  9049  002078  6FF5               	movwf	(_inPipes+5)& (0+255),b
  9050                           
  9051                           ;usb_device.c: 2094: }
  9052  00207A  0012               	return	
  9053  00207C                     l1474:
  9054                           
  9055                           ;usb_device.c: 2095: else
  9056                           ;usb_device.c: 2096: {
  9057                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
  9058                           
  9059                           ; BSR set to: 0
  9060  00207C  0E00               	movlw	0
  9061  00207E  0100               	movlb	0	; () banked
  9062  002080  6FF3               	movwf	(_inPipes+3)& (0+255),b
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;usb_device.c: 2098: }
  9066                           ;usb_device.c: 2099: break;
  9067  002082  0012               	return	
  9068  002084                     
  9069                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
  9070                           
  9071                           ; BSR set to: 0
  9072  002084  0E03               	movlw	3
  9073  002086  0104               	movlb	4	; () banked
  9074  002088  6132               	cpfslt	50,b	;volatile
  9075  00208A  D027               	goto	l1477
  9076                           
  9077                           ; BSR set to: 4
  9078                           ;usb_device.c: 2105: {
  9079                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  9080  00208C  5132               	movf	50,w,b	;volatile
  9081  00208E  0D02               	mullw	2
  9082  002090  0ED7               	movlw	low _USB_SD_Ptr
  9083  002092  24F3               	addwf	prodl,w,c
  9084  002094  6EF6               	movwf	tblptrl,c
  9085  002096  0EFC               	movlw	high _USB_SD_Ptr
  9086  002098  20F4               	addwfc	prodh,w,c
  9087  00209A  6EF7               	movwf	tblptrh,c
  9088  00209C                     	if	1	;There are 3 active tblptr bytes
  9089  00209C  6AF8               	clrf	tblptru,c
  9090  00209E  0E00               	movlw	low (__mediumconst shr (0+16))
  9091  0020A0  22F8               	addwfc	tblptru,f,c
  9092  0020A2                     	endif
  9093  0020A2  0009               	tblrd		*+
  9094  0020A4  CFF5 F0F0          	movff	tablat,_inPipes
  9095  0020A8  000A               	tblrd		*-
  9096  0020AA  CFF5 F0F1          	movff	tablat,_inPipes+1
  9097                           
  9098                           ; BSR set to: 4
  9099                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  9100  0020AE  C0F0  FFF6         	movff	_inPipes,tblptrl
  9101  0020B2  C0F1  FFF7         	movff	_inPipes+1,tblptrh
  9102  0020B6  6AF8               	clrf	tblptru,c
  9103  0020B8  0E0E               	movlw	(high __ramtop+-1)
  9104  0020BA  64F7               	cpfsgt	tblptrh,c
  9105  0020BC  D003               	bra	u4627
  9106  0020BE  0008               	tblrd		*
  9107  0020C0  50F5               	movf	tablat,w,c
  9108  0020C2  D005               	bra	u4620
  9109  0020C4                     u4627:
  9110  0020C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  9111  0020C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  9112  0020CC  50EF               	movf	indf0,w,c
  9113  0020CE                     u4620:
  9114  0020CE  0100               	movlb	0	; () banked
  9115  0020D0  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  9116  0020D2  5160               	movf	??_USBStdGetDscHandler& (0+255),w,b
  9117  0020D4  6FF4               	movwf	(_inPipes+4)& (0+255),b
  9118  0020D6  6BF5               	clrf	(_inPipes+5)& (0+255),b
  9119                           
  9120                           ;usb_device.c: 2110: }
  9121  0020D8  0012               	return	
  9122  0020DA                     l1477:
  9123                           
  9124                           ;usb_device.c: 2120: else
  9125                           ;usb_device.c: 2121: {
  9126                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
  9127                           
  9128                           ; BSR set to: 0
  9129  0020DA  0E00               	movlw	0
  9130  0020DC  0100               	movlb	0	; () banked
  9131  0020DE  6FF3               	movwf	(_inPipes+3)& (0+255),b
  9132                           
  9133                           ; BSR set to: 0
  9134                           ;usb_device.c: 2123: }
  9135                           ;usb_device.c: 2124: break;
  9136  0020E0  0012               	return	
  9137  0020E2                     
  9138                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
  9139                           
  9140                           ; BSR set to: 0
  9141  0020E2  0E00               	movlw	0
  9142  0020E4  0100               	movlb	0	; () banked
  9143  0020E6  6FF3               	movwf	(_inPipes+3)& (0+255),b
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;usb_device.c: 2128: }
  9147                           
  9148                           ;usb_device.c: 2127: break;
  9149  0020E8  0012               	return	
  9150  0020EA                     l1470:
  9151                           
  9152                           ; BSR set to: 0
  9153                           
  9154                           ; BSR set to: 0
  9155  0020EA  0104               	movlb	4	; () banked
  9156  0020EC  5133               	movf	51,w,b	;volatile
  9157                           
  9158                           ; Switch size 1, requested type "space"
  9159                           ; Number of cases is 3, Range of values is 1 to 3
  9160                           ; switch strategies available:
  9161                           ; Name         Instructions Cycles
  9162                           ; simple_byte           10     6 (average)
  9163                           ;	Chosen strategy is simple_byte
  9164  0020EE  0A01               	xorlw	1	; case 1
  9165  0020F0  B4D8               	btfsc	status,2,c
  9166  0020F2  D773               	goto	l1471
  9167  0020F4  0A03               	xorlw	3	; case 2
  9168  0020F6  B4D8               	btfsc	status,2,c
  9169  0020F8  D77A               	goto	l1473
  9170  0020FA  0A01               	xorlw	1	; case 3
  9171  0020FC  B4D8               	btfsc	status,2,c
  9172  0020FE  D7C2               	goto	l1476
  9173  002100  D7F0               	goto	l1479
  9174  002102                     __end_of_USBStdGetDscHandler:
  9175                           	opt stack 0
  9176                           tosu	equ	0xFFF
  9177                           tosh	equ	0xFFE
  9178                           tosl	equ	0xFFD
  9179                           pclath	equ	0xFFA
  9180                           tblptru	equ	0xFF8
  9181                           tblptrh	equ	0xFF7
  9182                           tblptrl	equ	0xFF6
  9183                           tablat	equ	0xFF5
  9184                           prodh	equ	0xFF4
  9185                           prodl	equ	0xFF3
  9186                           intcon	equ	0xFF2
  9187                           intcon2	equ	0xFF1
  9188                           intcon3	equ	0xFF0
  9189                           indf0	equ	0xFEF
  9190                           postinc0	equ	0xFEE
  9191                           plusw0	equ	0xFEB
  9192                           fsr0h	equ	0xFEA
  9193                           fsr0l	equ	0xFE9
  9194                           wreg	equ	0xFE8
  9195                           postinc1	equ	0xFE6
  9196                           postdec1	equ	0xFE5
  9197                           fsr1h	equ	0xFE2
  9198                           fsr1l	equ	0xFE1
  9199                           indf2	equ	0xFDF
  9200                           postinc2	equ	0xFDE
  9201                           postdec2	equ	0xFDD
  9202                           plusw2	equ	0xFDB
  9203                           fsr2h	equ	0xFDA
  9204                           fsr2l	equ	0xFD9
  9205                           status	equ	0xFD8
  9206                           
  9207 ;; *************** function _USBStdFeatureReqHandler *****************
  9208 ;; Defined at:
  9209 ;;		line 2771 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;		None
  9212 ;; Auto vars:     Size  Location     Type
  9213 ;;  p               2   24[BANK0 ] PTR struct __BDT
  9214 ;;		 -> BDT(48), NULL(0), 
  9215 ;;  pUEP            2   21[BANK0 ] PTR unsigned char 
  9216 ;;		 -> UEP0(1), 
  9217 ;;  current_ep_d    1   23[BANK0 ] struct .
  9218 ;; Return value:  Size  Location     Type
  9219 ;;                  1    wreg      void 
  9220 ;; Registers used:
  9221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9222 ;; Tracked objects:
  9223 ;;		On entry : 0/0
  9224 ;;		On exit  : 0/0
  9225 ;;		Unchanged: 0/0
  9226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9228 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9230 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9231 ;;Total ram usage:        6 bytes
  9232 ;; Hardware stack levels used:    1
  9233 ;; Hardware stack levels required when called:   15
  9234 ;; This function calls:
  9235 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9236 ;; This function is called by:
  9237 ;;		_USBCheckStdRequest
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           	psect	text40
  9242  000EA0                     __ptext40:
  9243                           	opt stack 0
  9244  000EA0                     _USBStdFeatureReqHandler:
  9245                           	opt stack 8
  9246                           
  9247                           ;usb_device.c: 2773: BDT_ENTRY *p;
  9248                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
  9249                           ;usb_device.c: 2778: unsigned char* pUEP;
  9250                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
  9251                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
  9252                           
  9253                           ;incstack = 0
  9254  000EA0  0104               	movlb	4	; () banked
  9255  000EA2  0532               	decf	50,w,b	;volatile
  9256  000EA4  A4D8               	btfss	status,2,c
  9257  000EA6  D011               	goto	l1563
  9258                           
  9259                           ; BSR set to: 4
  9260  000EA8  5130               	movf	48,w,b	;volatile
  9261  000EAA  0B1F               	andlw	31
  9262  000EAC  0900               	iorlw	0
  9263  000EAE  A4D8               	btfss	status,2,c
  9264  000EB0  D00C               	goto	l1563
  9265                           
  9266                           ; BSR set to: 4
  9267                           ;usb_device.c: 2818: {
  9268                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
  9269  000EB2  0100               	movlb	0	; () banked
  9270  000EB4  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
  9274  000EB6  0E03               	movlw	3
  9275  000EB8  0104               	movlb	4	; () banked
  9276  000EBA  1931               	xorwf	49,w,b	;volatile
  9277  000EBC  A4D8               	btfss	status,2,c
  9278  000EBE  D002               	goto	l1562
  9279                           
  9280                           ; BSR set to: 4
  9281                           ;usb_device.c: 2821: RemoteWakeup = 1;
  9282  000EC0  0E01               	movlw	1
  9283  000EC2  D001               	goto	L5
  9284  000EC4                     l1562:
  9285                           
  9286                           ;usb_device.c: 2822: else
  9287                           ;usb_device.c: 2823: RemoteWakeup = 0;
  9288                           
  9289                           ; BSR set to: 1
  9290  000EC4  0E00               	movlw	0
  9291  000EC6                     L5:
  9292  000EC6  0101               	movlb	1	; () banked
  9293  000EC8  6F62               	movwf	_RemoteWakeup& (0+255),b
  9294  000ECA                     l1563:
  9295                           
  9296                           ;usb_device.c: 2824: }
  9297                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
  9298                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
  9299                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  9300                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
  9301                           
  9302                           ; BSR set to: 1
  9303  000ECA  0104               	movlb	4	; () banked
  9304  000ECC  5132               	movf	50,w,b	;volatile
  9305  000ECE  A4D8               	btfss	status,2,c
  9306  000ED0  0012               	return	
  9307                           
  9308                           ; BSR set to: 4
  9309  000ED2  5130               	movf	48,w,b	;volatile
  9310  000ED4  0B1F               	andlw	31
  9311  000ED6  0A02               	xorlw	2
  9312  000ED8  A4D8               	btfss	status,2,c
  9313  000EDA  0012               	return	
  9314                           
  9315                           ; BSR set to: 4
  9316  000EDC  5134               	movf	52,w,b	;volatile
  9317  000EDE  0B0F               	andlw	15
  9318  000EE0  0900               	iorlw	0
  9319  000EE2  B4D8               	btfsc	status,2,c
  9320  000EE4  0012               	return	
  9321                           
  9322                           ; BSR set to: 4
  9323  000EE6  5134               	movf	52,w,b	;volatile
  9324  000EE8  0B0F               	andlw	15
  9325  000EEA  0100               	movlb	0	; () banked
  9326  000EEC  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9327  000EEE  0E03               	movlw	3
  9328  000EF0  6174               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
  9329  000EF2  0012               	return	
  9330                           
  9331                           ; BSR set to: 0
  9332  000EF4  0E20               	movlw	32
  9333  000EF6  19FD               	xorwf	_USBDeviceState& (0+255),w,b
  9334  000EF8  A4D8               	btfss	status,2,c
  9335  000EFA  0012               	return	
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;usb_device.c: 2831: {
  9339                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
  9340  000EFC  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  9341                           
  9342                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
  9343  000EFE  0104               	movlb	4	; () banked
  9344  000F00  BF34               	btfsc	52,7,b	;volatile
  9345  000F02  D01C               	goto	l1565
  9346                           
  9347                           ; BSR set to: 4
  9348                           ;usb_device.c: 2838: {
  9349                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9350  000F04  5134               	movf	52,w,b	;volatile
  9351  000F06  0B0F               	andlw	15
  9352  000F08  0100               	movlb	0	; () banked
  9353  000F0A  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9354  000F0C  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9355  000F0E  0D02               	mullw	2
  9356  000F10  0E20               	movlw	low _pBDTEntryOut
  9357  000F12  24F3               	addwf	prodl,w,c
  9358  000F14  6ED9               	movwf	fsr2l,c
  9359  000F16  0E01               	movlw	high _pBDTEntryOut
  9360  000F18  20F4               	addwfc	prodh,w,c
  9361  000F1A  6EDA               	movwf	fsr2h,c
  9362  000F1C  CFDE F078          	movff	postinc2,USBStdFeatureReqHandler@p
  9363  000F20  CFDD F079          	movff	postdec2,USBStdFeatureReqHandler@p+1
  9364                           
  9365                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  9366  000F24  0104               	movlb	4	; () banked
  9367  000F26  5134               	movf	52,w,b	;volatile
  9368  000F28  0B0F               	andlw	15
  9369  000F2A  0100               	movlb	0	; () banked
  9370  000F2C  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9371  000F2E  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9372  000F30  0D01               	mullw	1
  9373  000F32  0E38               	movlw	low _ep_data_out
  9374  000F34  24F3               	addwf	prodl,w,c
  9375  000F36  6ED9               	movwf	fsr2l,c
  9376  000F38  0E01               	movlw	high _ep_data_out
  9377  000F3A  D01C               	goto	L6
  9378  000F3C                     l1565:
  9379                           
  9380                           ;usb_device.c: 2842: else
  9381                           ;usb_device.c: 2843: {
  9382                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9383                           
  9384                           ; BSR set to: 0
  9385  000F3C  0104               	movlb	4	; () banked
  9386  000F3E  5134               	movf	52,w,b	;volatile
  9387  000F40  0B0F               	andlw	15
  9388  000F42  0100               	movlb	0	; () banked
  9389  000F44  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9390  000F46  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9391  000F48  0D02               	mullw	2
  9392  000F4A  0E3E               	movlw	low _pBDTEntryIn
  9393  000F4C  24F3               	addwf	prodl,w,c
  9394  000F4E  6ED9               	movwf	fsr2l,c
  9395  000F50  0E00               	movlw	high _pBDTEntryIn
  9396  000F52  20F4               	addwfc	prodh,w,c
  9397  000F54  6EDA               	movwf	fsr2h,c
  9398  000F56  CFDE F078          	movff	postinc2,USBStdFeatureReqHandler@p
  9399  000F5A  CFDD F079          	movff	postdec2,USBStdFeatureReqHandler@p+1
  9400                           
  9401                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  9402  000F5E  0104               	movlb	4	; () banked
  9403  000F60  5134               	movf	52,w,b	;volatile
  9404  000F62  0B0F               	andlw	15
  9405  000F64  0100               	movlb	0	; () banked
  9406  000F66  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9407  000F68  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9408  000F6A  0D01               	mullw	1
  9409  000F6C  0E3B               	movlw	low _ep_data_in
  9410  000F6E  24F3               	addwf	prodl,w,c
  9411  000F70  6ED9               	movwf	fsr2l,c
  9412  000F72  0E01               	movlw	high _ep_data_in
  9413  000F74                     L6:
  9414  000F74  20F4               	addwfc	prodh,w,c
  9415  000F76  6EDA               	movwf	fsr2h,c
  9416  000F78  50DF               	movf	indf2,w,c
  9417  000F7A  6F77               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
  9418                           
  9419                           ; BSR set to: 0
  9420                           ;usb_device.c: 2846: }
  9421                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
  9422                           
  9423                           ; BSR set to: 0
  9424  000F7C  B177               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
  9425  000F7E  D002               	goto	l1567
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;usb_device.c: 2853: {
  9429                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  9430  000F80  9578               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
  9431                           
  9432                           ;usb_device.c: 2855: }
  9433  000F82  D001               	goto	l1568
  9434  000F84                     l1567:
  9435                           
  9436                           ; BSR set to: 0
  9437                           ;usb_device.c: 2856: else
  9438                           ;usb_device.c: 2857: {
  9439                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  9440                           
  9441                           ; BSR set to: 0
  9442  000F84  8578               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
  9443  000F86                     l1568:
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;usb_device.c: 2859: }
  9447                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
  9448                           
  9449                           ; BSR set to: 0
  9450  000F86  0104               	movlb	4	; () banked
  9451  000F88  BF34               	btfsc	52,7,b	;volatile
  9452  000F8A  D00B               	goto	l1569
  9453                           
  9454                           ; BSR set to: 4
  9455                           ;usb_device.c: 2865: {
  9456                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9457  000F8C  5134               	movf	52,w,b	;volatile
  9458  000F8E  0B0F               	andlw	15
  9459  000F90  0100               	movlb	0	; () banked
  9460  000F92  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9461  000F94  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9462  000F96  0D02               	mullw	2
  9463  000F98  0E20               	movlw	low _pBDTEntryOut
  9464  000F9A  24F3               	addwf	prodl,w,c
  9465  000F9C  6ED9               	movwf	fsr2l,c
  9466  000F9E  0E01               	movlw	high _pBDTEntryOut
  9467  000FA0  D00B               	goto	L7
  9468  000FA2                     l1569:
  9469                           
  9470                           ;usb_device.c: 2868: else
  9471                           ;usb_device.c: 2869: {
  9472                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9473                           
  9474                           ; BSR set to: 0
  9475  000FA2  0104               	movlb	4	; () banked
  9476  000FA4  5134               	movf	52,w,b	;volatile
  9477  000FA6  0B0F               	andlw	15
  9478  000FA8  0100               	movlb	0	; () banked
  9479  000FAA  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9480  000FAC  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9481  000FAE  0D02               	mullw	2
  9482  000FB0  0E3E               	movlw	low _pBDTEntryIn
  9483  000FB2  24F3               	addwf	prodl,w,c
  9484  000FB4  6ED9               	movwf	fsr2l,c
  9485  000FB6  0E00               	movlw	high _pBDTEntryIn
  9486  000FB8                     L7:
  9487  000FB8  20F4               	addwfc	prodh,w,c
  9488  000FBA  6EDA               	movwf	fsr2h,c
  9489  000FBC  C078  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  9490  000FC0  C079  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;usb_device.c: 2871: }
  9494                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
  9495                           
  9496                           ; BSR set to: 0
  9497  000FC4  0E03               	movlw	3
  9498  000FC6  0104               	movlb	4	; () banked
  9499  000FC8  1931               	xorwf	49,w,b	;volatile
  9500  000FCA  A4D8               	btfss	status,2,c
  9501  000FCC  D031               	goto	l1571
  9502                           
  9503                           ; BSR set to: 4
  9504                           ;usb_device.c: 2875: {
  9505                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
  9506  000FCE  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9507  000FD2  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9508  000FD6  0100               	movlb	0	; () banked
  9509  000FD8  AEDF               	btfss	indf2,7,c
  9510  000FDA  D01D               	goto	l1574
  9511                           
  9512                           ; BSR set to: 0
  9513                           ;usb_device.c: 2877: {
  9514                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
  9515  000FDC  0104               	movlb	4	; () banked
  9516  000FDE  BF34               	btfsc	52,7,b	;volatile
  9517  000FE0  D00B               	goto	l1573
  9518                           
  9519                           ; BSR set to: 4
  9520                           ;usb_device.c: 2881: {
  9521                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9522  000FE2  5134               	movf	52,w,b	;volatile
  9523  000FE4  0B0F               	andlw	15
  9524  000FE6  0100               	movlb	0	; () banked
  9525  000FE8  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9526  000FEA  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9527  000FEC  0D01               	mullw	1
  9528  000FEE  0E38               	movlw	low _ep_data_out
  9529  000FF0  24F3               	addwf	prodl,w,c
  9530  000FF2  6ED9               	movwf	fsr2l,c
  9531  000FF4  0E01               	movlw	high _ep_data_out
  9532  000FF6  D00B               	goto	L8
  9533  000FF8                     l1573:
  9534                           
  9535                           ;usb_device.c: 2884: else
  9536                           ;usb_device.c: 2885: {
  9537                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9538                           
  9539                           ; BSR set to: 1
  9540  000FF8  0104               	movlb	4	; () banked
  9541  000FFA  5134               	movf	52,w,b	;volatile
  9542  000FFC  0B0F               	andlw	15
  9543  000FFE  0100               	movlb	0	; () banked
  9544  001000  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9545  001002  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9546  001004  0D01               	mullw	1
  9547  001006  0E3B               	movlw	low _ep_data_in
  9548  001008  24F3               	addwf	prodl,w,c
  9549  00100A  6ED9               	movwf	fsr2l,c
  9550  00100C  0E01               	movlw	high _ep_data_in
  9551  00100E                     L8:
  9552  00100E  20F4               	addwfc	prodh,w,c
  9553  001010  6EDA               	movwf	fsr2h,c
  9554  001012  0101               	movlb	1	; () banked
  9555  001014  82DF               	bsf	indf2,1,c
  9556  001016                     l1574:
  9557                           
  9558                           ;usb_device.c: 2887: }
  9559                           ;usb_device.c: 2888: }
  9560                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
  9561                           
  9562                           ; BSR set to: 1
  9563                           
  9564                           ; BSR set to: 1
  9565  001016  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9566  00101A  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9567  00101E  0E00               	movlw	0
  9568  001020  84DB               	bsf	plusw2,2,c
  9569                           
  9570                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
  9571  001022  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9572  001026  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9573  00102A  0E00               	movlw	0
  9574  00102C  8EDB               	bsf	plusw2,7,c
  9575                           
  9576                           ;usb_device.c: 2893: }
  9577  00102E  0012               	return	
  9578  001030                     l1571:
  9579                           
  9580                           ;usb_device.c: 2894: else
  9581                           ;usb_device.c: 2895: {
  9582                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9583  001030  0E04               	movlw	4
  9584  001032  0100               	movlb	0	; () banked
  9585  001034  1B78               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
  9589  001036  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9590  00103A  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9591  00103E  AEDF               	btfss	indf2,7,c
  9592  001040  D01B               	goto	l1576
  9593                           
  9594                           ; BSR set to: 0
  9595                           ;usb_device.c: 2902: {
  9596                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
  9597  001042  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9598  001046  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9599  00104A  0E7F               	movlw	127
  9600  00104C  16DF               	andwf	indf2,f,c
  9601                           
  9602                           ; BSR set to: 0
  9603                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
  9604  00104E  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9605  001052  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9606  001056  0E00               	movlw	0
  9607  001058  8CDB               	bsf	plusw2,6,c
  9608                           
  9609                           ; BSR set to: 0
  9610                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9611  00105A  0E00               	movlw	0
  9612  00105C  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9613  00105E  0E05               	movlw	5
  9614  001060  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9615  001062  C078  F06E         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9616  001066  C079  F06F         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9617  00106A  0E00               	movlw	0
  9618  00106C  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9619  00106E  0E02               	movlw	2
  9620  001070  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9621  001072  EC8C  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9622                           
  9623                           ;usb_device.c: 2908: }
  9624  001076  D006               	goto	l1577
  9625  001078                     l1576:
  9626                           
  9627                           ;usb_device.c: 2909: else
  9628                           ;usb_device.c: 2910: {
  9629                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
  9630  001078  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9631  00107C  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9632  001080  0E00               	movlw	0
  9633  001082  8CDB               	bsf	plusw2,6,c
  9634  001084                     l1577:
  9635                           
  9636                           ;usb_device.c: 2913: }
  9637                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9638  001084  0E04               	movlw	4
  9639  001086  0100               	movlb	0	; () banked
  9640  001088  1B78               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9641                           
  9642                           ; BSR set to: 0
  9643                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  9644  00108A  B377               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
  9645  00108C  D006               	goto	u4840
  9646                           
  9647                           ; BSR set to: 0
  9648  00108E  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9649  001092  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9650  001096  AEDF               	btfss	indf2,7,c
  9651  001098  D033               	goto	l1578
  9652  00109A                     u4840:
  9653                           
  9654                           ; BSR set to: 0
  9655                           ;usb_device.c: 2924: {
  9656                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
  9657  00109A  0104               	movlb	4	; () banked
  9658  00109C  BF34               	btfsc	52,7,b	;volatile
  9659  00109E  D00B               	goto	l1581
  9660                           
  9661                           ; BSR set to: 4
  9662                           ;usb_device.c: 2926: {
  9663                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9664  0010A0  5134               	movf	52,w,b	;volatile
  9665  0010A2  0B0F               	andlw	15
  9666  0010A4  0100               	movlb	0	; () banked
  9667  0010A6  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9668  0010A8  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9669  0010AA  0D01               	mullw	1
  9670  0010AC  0E38               	movlw	low _ep_data_out
  9671  0010AE  24F3               	addwf	prodl,w,c
  9672  0010B0  6ED9               	movwf	fsr2l,c
  9673  0010B2  0E01               	movlw	high _ep_data_out
  9674  0010B4  D00B               	goto	L9
  9675  0010B6                     l1581:
  9676                           
  9677                           ;usb_device.c: 2929: else
  9678                           ;usb_device.c: 2930: {
  9679                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9680                           
  9681                           ; BSR set to: 1
  9682  0010B6  0104               	movlb	4	; () banked
  9683  0010B8  5134               	movf	52,w,b	;volatile
  9684  0010BA  0B0F               	andlw	15
  9685  0010BC  0100               	movlb	0	; () banked
  9686  0010BE  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9687  0010C0  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9688  0010C2  0D01               	mullw	1
  9689  0010C4  0E3B               	movlw	low _ep_data_in
  9690  0010C6  24F3               	addwf	prodl,w,c
  9691  0010C8  6ED9               	movwf	fsr2l,c
  9692  0010CA  0E01               	movlw	high _ep_data_in
  9693  0010CC                     L9:
  9694  0010CC  20F4               	addwfc	prodh,w,c
  9695  0010CE  6EDA               	movwf	fsr2h,c
  9696  0010D0  0101               	movlb	1	; () banked
  9697  0010D2  92DF               	bcf	indf2,1,c
  9698                           
  9699                           ; BSR set to: 1
  9700                           ;usb_device.c: 2932: }
  9701                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9702                           
  9703                           ; BSR set to: 1
  9704  0010D4  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9705  0010D8  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9706  0010DC  0E3B               	movlw	59
  9707  0010DE  16DF               	andwf	indf2,f,c
  9708                           
  9709                           ; BSR set to: 1
  9710                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9711  0010E0  0E00               	movlw	0
  9712  0010E2  0100               	movlb	0	; () banked
  9713  0010E4  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9714  0010E6  0E05               	movlw	5
  9715  0010E8  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9716  0010EA  C078  F06E         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9717  0010EE  C079  F06F         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9718  0010F2  0E00               	movlw	0
  9719  0010F4  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9720  0010F6  0E02               	movlw	2
  9721  0010F8  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9722  0010FA  EC8C  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9723                           
  9724                           ;usb_device.c: 2938: }
  9725  0010FE  D006               	goto	l1583
  9726  001100                     l1578:
  9727                           
  9728                           ;usb_device.c: 2939: else
  9729                           ;usb_device.c: 2940: {
  9730                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9731  001100  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9732  001104  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9733  001108  0E3B               	movlw	59
  9734  00110A  16DF               	andwf	indf2,f,c
  9735  00110C                     l1583:
  9736                           
  9737                           ;usb_device.c: 2943: }
  9738                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  9739  00110C  0104               	movlb	4	; () banked
  9740  00110E  5134               	movf	52,w,b	;volatile
  9741  001110  0B0F               	andlw	15
  9742  001112  0100               	movlb	0	; () banked
  9743  001114  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9744  001116  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9745  001118  0D01               	mullw	1
  9746  00111A  0E26               	movlw	38
  9747  00111C  24F3               	addwf	prodl,w,c
  9748  00111E  6F75               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
  9749  001120  0E0F               	movlw	15
  9750  001122  20F4               	addwfc	prodh,w,c
  9751  001124  6F76               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
  9755  001126  C075  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  9756  00112A  C076  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  9757  00112E  0EFE               	movlw	254
  9758  001130  16DF               	andwf	indf2,f,c
  9759                           
  9760                           ; BSR set to: 0
  9761  001132  0012               	return	
  9762  001134                     __end_of_USBStdFeatureReqHandler:
  9763                           	opt stack 0
  9764                           tosu	equ	0xFFF
  9765                           tosh	equ	0xFFE
  9766                           tosl	equ	0xFFD
  9767                           pclath	equ	0xFFA
  9768                           tblptru	equ	0xFF8
  9769                           tblptrh	equ	0xFF7
  9770                           tblptrl	equ	0xFF6
  9771                           tablat	equ	0xFF5
  9772                           prodh	equ	0xFF4
  9773                           prodl	equ	0xFF3
  9774                           intcon	equ	0xFF2
  9775                           intcon2	equ	0xFF1
  9776                           intcon3	equ	0xFF0
  9777                           indf0	equ	0xFEF
  9778                           postinc0	equ	0xFEE
  9779                           plusw0	equ	0xFEB
  9780                           fsr0h	equ	0xFEA
  9781                           fsr0l	equ	0xFE9
  9782                           wreg	equ	0xFE8
  9783                           postinc1	equ	0xFE6
  9784                           postdec1	equ	0xFE5
  9785                           fsr1h	equ	0xFE2
  9786                           fsr1l	equ	0xFE1
  9787                           indf2	equ	0xFDF
  9788                           postinc2	equ	0xFDE
  9789                           postdec2	equ	0xFDD
  9790                           plusw2	equ	0xFDB
  9791                           fsr2h	equ	0xFDA
  9792                           fsr2l	equ	0xFD9
  9793                           status	equ	0xFD8
  9794                           
  9795 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  9796 ;; Defined at:
  9797 ;;		line 104 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  9798 ;; Parameters:    Size  Location     Type
  9799 ;;  event           2   12[BANK0 ] enum E8257
  9800 ;;  pdata           2   14[BANK0 ] PTR void 
  9801 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
  9802 ;;  size            2   16[BANK0 ] unsigned int 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;		None
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  1    wreg      unsigned char 
  9807 ;; Registers used:
  9808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9814 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9816 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9817 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9818 ;;Total ram usage:        8 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; Hardware stack levels required when called:   14
  9821 ;; This function calls:
  9822 ;;		_CDCInitEP
  9823 ;;		_USBCheckCDCRequest
  9824 ;; This function is called by:
  9825 ;;		_USBDeviceTasks
  9826 ;;		_USBStdSetCfgHandler
  9827 ;;		_USBSuspend
  9828 ;;		_USBWakeFromSuspend
  9829 ;;		_USBCtrlTrfSetupHandler
  9830 ;;		_USBCheckStdRequest
  9831 ;;		_USBStdFeatureReqHandler
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text41
  9836  004118                     __ptext41:
  9837                           	opt stack 0
  9838  004118                     _USER_USB_CALLBACK_EVENT_HANDLER:
  9839                           	opt stack 12
  9840                           
  9841                           ;usb_device_mgr.c: 106: switch( (int) event )
  9842                           
  9843                           ;incstack = 0
  9844  004118  D006               	goto	l1737
  9845  00411A                     
  9846                           ;usb_device_mgr.c: 134: CDCInitEP();
  9847  00411A  EC54  F01F         	call	_CDCInitEP	;wreg free
  9848                           
  9849                           ;usb_device_mgr.c: 142: break;
  9850                           
  9851                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
  9852                           
  9853                           ;usb_device_mgr.c: 139: break;
  9854  00411E  0012               	return	
  9855  004120                     
  9856                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
  9857  004120  EC88  F018         	call	_USBCheckCDCRequest	;wreg free
  9858                           
  9859                           ;usb_device_mgr.c: 163: }
  9860                           
  9861                           ;usb_device_mgr.c: 162: break;
  9862                           
  9863                           ;usb_device_mgr.c: 161: default:
  9864                           
  9865                           ;usb_device_mgr.c: 159: break;
  9866                           
  9867                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
  9868                           
  9869                           ;usb_device_mgr.c: 156: break;
  9870                           
  9871                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
  9872                           
  9873                           ;usb_device_mgr.c: 153: break;
  9874  004124  0012               	return	
  9875  004126                     l1737:
  9876  004126  C06C  F072         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  9877  00412A  C06D  F073         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  9878                           
  9879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9880                           ; Switch size 1, requested type "space"
  9881                           ; Number of cases is 2, Range of values is 0 to 127
  9882                           ; switch strategies available:
  9883                           ; Name         Instructions Cycles
  9884                           ; simple_byte            7     4 (average)
  9885                           ;	Chosen strategy is simple_byte
  9886  00412E  0100               	movlb	0	; () banked
  9887  004130  5173               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
  9888  004132  0A00               	xorlw	0	; case 0
  9889  004134  B4D8               	btfsc	status,2,c
  9890  004136  D004               	goto	l9721
  9891  004138  0A7F               	xorlw	127	; case 127
  9892  00413A  A4D8               	btfss	status,2,c
  9893  00413C  0012               	return	
  9894  00413E  D018               	goto	l9723
  9895  004140                     l9721:
  9896                           
  9897                           ; BSR set to: 0
  9898                           ; Switch size 1, requested type "space"
  9899                           ; Number of cases is 8, Range of values is 1 to 117
  9900                           ; switch strategies available:
  9901                           ; Name         Instructions Cycles
  9902                           ; simple_byte           25    13 (average)
  9903                           ;	Chosen strategy is simple_byte
  9904  004140  5172               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9905  004142  0A01               	xorlw	1	; case 1
  9906  004144  B4D8               	btfsc	status,2,c
  9907  004146  D7E9               	goto	l1743
  9908  004148  0A03               	xorlw	3	; case 2
  9909  00414A  B4D8               	btfsc	status,2,c
  9910  00414C  0012               	return	
  9911  00414E  0A01               	xorlw	1	; case 3
  9912  004150  B4D8               	btfsc	status,2,c
  9913  004152  D7E6               	goto	l1745
  9914  004154  0A06               	xorlw	6	; case 5
  9915  004156  B4D8               	btfsc	status,2,c
  9916  004158  0012               	return	
  9917  00415A  0A77               	xorlw	119	; case 114
  9918  00415C  B4D8               	btfsc	status,2,c
  9919  00415E  0012               	return	
  9920  004160  0A01               	xorlw	1	; case 115
  9921  004162  B4D8               	btfsc	status,2,c
  9922  004164  0012               	return	
  9923  004166  0A07               	xorlw	7	; case 116
  9924  004168  B4D8               	btfsc	status,2,c
  9925  00416A  0012               	return	
  9926  00416C  0A01               	xorlw	1	; case 117
  9927  00416E  0012               	return	
  9928  004170                     l9723:
  9929                           
  9930                           ; BSR set to: 0
  9931                           ; Switch size 1, requested type "space"
  9932                           ; Number of cases is 1, Range of values is 255 to 255
  9933                           ; switch strategies available:
  9934                           ; Name         Instructions Cycles
  9935                           ; simple_byte            4     3 (average)
  9936                           ;	Chosen strategy is simple_byte
  9937  004170  5172               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9938  004172  0AFF               	xorlw	255	; case 255
  9939  004174  0012               	return	
  9940  004176                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  9941                           	opt stack 0
  9942                           tosu	equ	0xFFF
  9943                           tosh	equ	0xFFE
  9944                           tosl	equ	0xFFD
  9945                           pclath	equ	0xFFA
  9946                           tblptru	equ	0xFF8
  9947                           tblptrh	equ	0xFF7
  9948                           tblptrl	equ	0xFF6
  9949                           tablat	equ	0xFF5
  9950                           prodh	equ	0xFF4
  9951                           prodl	equ	0xFF3
  9952                           intcon	equ	0xFF2
  9953                           intcon2	equ	0xFF1
  9954                           intcon3	equ	0xFF0
  9955                           indf0	equ	0xFEF
  9956                           postinc0	equ	0xFEE
  9957                           plusw0	equ	0xFEB
  9958                           fsr0h	equ	0xFEA
  9959                           fsr0l	equ	0xFE9
  9960                           wreg	equ	0xFE8
  9961                           postinc1	equ	0xFE6
  9962                           postdec1	equ	0xFE5
  9963                           fsr1h	equ	0xFE2
  9964                           fsr1l	equ	0xFE1
  9965                           indf2	equ	0xFDF
  9966                           postinc2	equ	0xFDE
  9967                           postdec2	equ	0xFDD
  9968                           plusw2	equ	0xFDB
  9969                           fsr2h	equ	0xFDA
  9970                           fsr2l	equ	0xFD9
  9971                           status	equ	0xFD8
  9972                           
  9973 ;; *************** function _USBCheckCDCRequest *****************
  9974 ;; Defined at:
  9975 ;;		line 150 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
  9976 ;; Parameters:    Size  Location     Type
  9977 ;;		None
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;		None
  9980 ;; Return value:  Size  Location     Type
  9981 ;;                  1    wreg      void 
  9982 ;; Registers used:
  9983 ;;		wreg, status,2, status,0
  9984 ;; Tracked objects:
  9985 ;;		On entry : 0/0
  9986 ;;		On exit  : 0/0
  9987 ;;		Unchanged: 0/0
  9988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9993 ;;Total ram usage:        0 bytes
  9994 ;; Hardware stack levels used:    1
  9995 ;; Hardware stack levels required when called:   11
  9996 ;; This function calls:
  9997 ;;		Nothing
  9998 ;; This function is called by:
  9999 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10000 ;; This function uses a non-reentrant model
 10001 ;;
 10002                           
 10003                           	psect	text42
 10004  003110                     __ptext42:
 10005                           	opt stack 0
 10006  003110                     _USBCheckCDCRequest:
 10007                           	opt stack 14
 10008                           
 10009                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 10010                           
 10011                           ;incstack = 0
 10012  003110  0104               	movlb	4	; () banked
 10013  003112  5130               	movf	48,w,b	;volatile
 10014  003114  0B1F               	andlw	31
 10015  003116  06E8               	decf	wreg,f,c
 10016  003118  A4D8               	btfss	status,2,c
 10017  00311A  0012               	return	
 10018                           
 10019                           ; BSR set to: 4
 10020                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 10021                           
 10022                           ; BSR set to: 4
 10023                           
 10024                           ; BSR set to: 4
 10025  00311C  3930               	swapf	48,w,b	;volatile
 10026  00311E  32E8               	rrcf	wreg,f,c
 10027  003120  0B03               	andlw	3
 10028  003122  06E8               	decf	wreg,f,c
 10029  003124  A4D8               	btfss	status,2,c
 10030  003126  0012               	return	
 10031                           
 10032                           ; BSR set to: 4
 10033                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 10034                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 10035                           
 10036                           ; BSR set to: 4
 10037                           
 10038                           ; BSR set to: 4
 10039  003128  5134               	movf	52,w,b	;volatile
 10040  00312A  B4D8               	btfsc	status,2,c
 10041  00312C  D037               	goto	l1639
 10042                           
 10043                           ; BSR set to: 4
 10044  00312E  0534               	decf	52,w,b	;volatile
 10045  003130  A4D8               	btfss	status,2,c
 10046  003132  0012               	return	
 10047  003134  D033               	goto	l1639
 10048  003136                     
 10049                           ; BSR set to: 4
 10050                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 10051                           
 10052                           ; BSR set to: 4
 10053  003136  0E97               	movlw	low _dummy_encapsulated_cmd_response
 10054  003138  0100               	movlb	0	; () banked
 10055  00313A  6FF0               	movwf	_inPipes& (0+255),b
 10056  00313C  0E01               	movlw	high _dummy_encapsulated_cmd_response
 10057  00313E  6FF1               	movwf	(_inPipes+1)& (0+255),b
 10058                           
 10059                           ; BSR set to: 0
 10060                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 10061  003140  0E00               	movlw	0
 10062  003142  6FF5               	movwf	(_inPipes+5)& (0+255),b
 10063  003144  0E08               	movlw	8
 10064  003146  6FF4               	movwf	(_inPipes+4)& (0+255),b
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10068  003148  81F3               	bsf	(_inPipes+3)& (0+255),0,b
 10069                           
 10070                           ; BSR set to: 0
 10071                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 10072  00314A  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
 10073                           
 10074                           ;usb_device_cdc.c: 178: break;
 10075  00314C  0012               	return	
 10076  00314E                     
 10077                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 10078                           
 10079                           ; BSR set to: 0
 10080  00314E  0E97               	movlw	low _dummy_encapsulated_cmd_response
 10081  003150  0100               	movlb	0	; () banked
 10082  003152  6FF0               	movwf	_inPipes& (0+255),b
 10083  003154  0E01               	movlw	high _dummy_encapsulated_cmd_response
 10084  003156  6FF1               	movwf	(_inPipes+1)& (0+255),b
 10085                           
 10086                           ; BSR set to: 0
 10087                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 10088  003158  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
 10089                           
 10090                           ;usb_device_cdc.c: 183: break;
 10091  00315A  0012               	return	
 10092  00315C                     l1643:
 10093                           
 10094                           ; BSR set to: 4
 10095                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 10096  00315C  C436 F116          	movff	1078,_outPipes+4	;volatile
 10097  003160  C437 F117          	movff	1079,_outPipes+5	;volatile
 10098                           
 10099                           ; BSR set to: 4
 10100                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 10101  003164  0E9F               	movlw	low _line_coding
 10102  003166  0101               	movlb	1	; () banked
 10103  003168  6F12               	movwf	_outPipes& (0+255),b
 10104  00316A  0E01               	movlw	high _line_coding
 10105  00316C  6F13               	movwf	(_outPipes+1)& (0+255),b
 10106                           
 10107                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 10108  00316E  0E00               	movlw	0
 10109  003170  6F18               	movwf	(_outPipes+6)& (0+255),b
 10110  003172  0E00               	movlw	0
 10111  003174  6F19               	movwf	(_outPipes+7)& (0+255),b
 10112                           
 10113                           ; BSR set to: 1
 10114                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 10115  003176  8F15               	bsf	(_outPipes+3)& (0+255),7,b
 10116                           
 10117                           ;usb_device_cdc.c: 192: break;
 10118  003178  0012               	return	
 10119  00317A                     
 10120                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 10121                           
 10122                           ; BSR set to: 1
 10123  00317A  0E9F               	movlw	low _line_coding
 10124  00317C  0100               	movlb	0	; () banked
 10125  00317E  6FF0               	movwf	_inPipes& (0+255),b
 10126  003180  0E01               	movlw	high _line_coding
 10127  003182  6FF1               	movwf	(_inPipes+1)& (0+255),b
 10128                           
 10129                           ; BSR set to: 0
 10130  003184  0E00               	movlw	0
 10131  003186  6FF5               	movwf	(_inPipes+5)& (0+255),b
 10132  003188  0E07               	movlw	7
 10133  00318A  6FF4               	movwf	(_inPipes+4)& (0+255),b
 10134                           
 10135                           ; BSR set to: 0
 10136  00318C  0EC1               	movlw	193
 10137  00318E  6FF3               	movwf	(_inPipes+3)& (0+255),b
 10138                           
 10139                           ;usb_device_cdc.c: 199: break;
 10140  003190  0012               	return	
 10141  003192                     l1645:
 10142                           
 10143                           ; BSR set to: 4
 10144                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 10145  003192  C432 F15B          	movff	1074,_control_signal_bitmap	;volatile
 10146                           
 10147                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 10148  003196  0100               	movlb	0	; () banked
 10149  003198  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
 10150                           
 10151                           ; BSR set to: 0
 10152                           ;usb_device_cdc.c: 261: }
 10153                           
 10154                           ; BSR set to: 0
 10155                           ;usb_device_cdc.c: 260: break;
 10156                           
 10157                           ;usb_device_cdc.c: 259: default:
 10158                           
 10159                           ;usb_device_cdc.c: 235: break;
 10160  00319A  0012               	return	
 10161  00319C                     l1639:
 10162                           
 10163                           ; BSR set to: 0
 10164  00319C  0104               	movlb	4	; () banked
 10165  00319E  5131               	movf	49,w,b	;volatile
 10166                           
 10167                           ; Switch size 1, requested type "space"
 10168                           ; Number of cases is 5, Range of values is 0 to 34
 10169                           ; switch strategies available:
 10170                           ; Name         Instructions Cycles
 10171                           ; simple_byte           16     9 (average)
 10172                           ;	Chosen strategy is simple_byte
 10173  0031A0  0A00               	xorlw	0	; case 0
 10174  0031A2  B4D8               	btfsc	status,2,c
 10175  0031A4  D7C8               	goto	l1640
 10176  0031A6  0A01               	xorlw	1	; case 1
 10177  0031A8  B4D8               	btfsc	status,2,c
 10178  0031AA  D7D1               	goto	l1642
 10179  0031AC  0A21               	xorlw	33	; case 32
 10180  0031AE  B4D8               	btfsc	status,2,c
 10181  0031B0  D7D5               	goto	l1643
 10182  0031B2  0A01               	xorlw	1	; case 33
 10183  0031B4  B4D8               	btfsc	status,2,c
 10184  0031B6  D7E1               	goto	l1644
 10185  0031B8  0A03               	xorlw	3	; case 34
 10186  0031BA  A4D8               	btfss	status,2,c
 10187  0031BC  0012               	return	
 10188  0031BE  D7E9               	goto	l1645
 10189  0031C0                     __end_of_USBCheckCDCRequest:
 10190                           	opt stack 0
 10191                           tosu	equ	0xFFF
 10192                           tosh	equ	0xFFE
 10193                           tosl	equ	0xFFD
 10194                           pclath	equ	0xFFA
 10195                           tblptru	equ	0xFF8
 10196                           tblptrh	equ	0xFF7
 10197                           tblptrl	equ	0xFF6
 10198                           tablat	equ	0xFF5
 10199                           prodh	equ	0xFF4
 10200                           prodl	equ	0xFF3
 10201                           intcon	equ	0xFF2
 10202                           intcon2	equ	0xFF1
 10203                           intcon3	equ	0xFF0
 10204                           indf0	equ	0xFEF
 10205                           postinc0	equ	0xFEE
 10206                           plusw0	equ	0xFEB
 10207                           fsr0h	equ	0xFEA
 10208                           fsr0l	equ	0xFE9
 10209                           wreg	equ	0xFE8
 10210                           postinc1	equ	0xFE6
 10211                           postdec1	equ	0xFE5
 10212                           fsr1h	equ	0xFE2
 10213                           fsr1l	equ	0xFE1
 10214                           indf2	equ	0xFDF
 10215                           postinc2	equ	0xFDE
 10216                           postdec2	equ	0xFDD
 10217                           plusw2	equ	0xFDB
 10218                           fsr2h	equ	0xFDA
 10219                           fsr2l	equ	0xFD9
 10220                           status	equ	0xFD8
 10221                           
 10222 ;; *************** function _CDCInitEP *****************
 10223 ;; Defined at:
 10224 ;;		line 297 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 10225 ;; Parameters:    Size  Location     Type
 10226 ;;		None
 10227 ;; Auto vars:     Size  Location     Type
 10228 ;;		None
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  1    wreg      void 
 10231 ;; Registers used:
 10232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10233 ;; Tracked objects:
 10234 ;;		On entry : 0/0
 10235 ;;		On exit  : 0/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10242 ;;Total ram usage:        0 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:   13
 10245 ;; This function calls:
 10246 ;;		_USBEnableEndpoint
 10247 ;;		_USBTransferOnePacket
 10248 ;; This function is called by:
 10249 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253                           	psect	text43
 10254  003EA8                     __ptext43:
 10255                           	opt stack 0
 10256  003EA8                     _CDCInitEP:
 10257                           	opt stack 12
 10258                           
 10259                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 10260                           
 10261                           ;incstack = 0
 10262  003EA8  0E80               	movlw	128
 10263  003EAA  0101               	movlb	1	; () banked
 10264  003EAC  6F9F               	movwf	_line_coding& (0+255),b
 10265  003EAE  0E25               	movlw	37
 10266  003EB0  6FA0               	movwf	(_line_coding+1)& (0+255),b
 10267  003EB2  0E00               	movlw	0
 10268  003EB4  6FA1               	movwf	(_line_coding+2)& (0+255),b
 10269  003EB6  0E00               	movlw	0
 10270  003EB8  6FA2               	movwf	(_line_coding+3)& (0+255),b
 10271                           
 10272                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 10273  003EBA  0E00               	movlw	0
 10274  003EBC  6FA3               	movwf	(_line_coding+4)& (0+255),b
 10275                           
 10276                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 10277  003EBE  0E00               	movlw	0
 10278  003EC0  6FA4               	movwf	(_line_coding+5)& (0+255),b
 10279                           
 10280                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 10281  003EC2  0E08               	movlw	8
 10282  003EC4  6FA5               	movwf	(_line_coding+6)& (0+255),b
 10283                           
 10284                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 10285  003EC6  0E00               	movlw	0
 10286  003EC8  6E47               	movwf	_cdc_rx_len,c
 10287                           
 10288                           ; BSR set to: 1
 10289                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 10290  003ECA  0E1A               	movlw	26
 10291  003ECC  0100               	movlb	0	; () banked
 10292  003ECE  6F68               	movwf	USBEnableEndpoint@options& (0+255),b
 10293  003ED0  0E01               	movlw	1
 10294  003ED2  EC61  F023         	call	_USBEnableEndpoint
 10295                           
 10296                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 10297  003ED6  0E1E               	movlw	30
 10298  003ED8  0100               	movlb	0	; () banked
 10299  003EDA  6F68               	movwf	USBEnableEndpoint@options& (0+255),b
 10300  003EDC  0E02               	movlw	2
 10301  003EDE  EC61  F023         	call	_USBEnableEndpoint
 10302                           
 10303                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 10304  003EE2  0E00               	movlw	0
 10305  003EE4  0100               	movlb	0	; () banked
 10306  003EE6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10307  003EE8  0E00               	movlw	low _cdc_data_rx
 10308  003EEA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10309  003EEC  0E02               	movlw	high _cdc_data_rx
 10310  003EEE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10311  003EF0  0E40               	movlw	64
 10312  003EF2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10313  003EF4  0E02               	movlw	2
 10314  003EF6  ECD0  F017         	call	_USBTransferOnePacket
 10315  003EFA  C060  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 10316  003EFE  C061  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 10317                           
 10318                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 10319  003F02  0E00               	movlw	0
 10320  003F04  0101               	movlb	1	; () banked
 10321  003F06  6F40               	movwf	_CDCDataInHandle& (0+255),b
 10322  003F08  0E00               	movlw	0
 10323  003F0A  6F41               	movwf	(_CDCDataInHandle+1)& (0+255),b
 10324                           
 10325                           ; BSR set to: 1
 10326                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 10327  003F0C  0E00               	movlw	0
 10328  003F0E  0100               	movlb	0	; () banked
 10329  003F10  6FFB               	movwf	_cdc_trf_state& (0+255),b
 10330                           
 10331                           ; BSR set to: 0
 10332  003F12  0012               	return		;funcret
 10333  003F14                     __end_of_CDCInitEP:
 10334                           	opt stack 0
 10335                           tosu	equ	0xFFF
 10336                           tosh	equ	0xFFE
 10337                           tosl	equ	0xFFD
 10338                           pclath	equ	0xFFA
 10339                           tblptru	equ	0xFF8
 10340                           tblptrh	equ	0xFF7
 10341                           tblptrl	equ	0xFF6
 10342                           tablat	equ	0xFF5
 10343                           prodh	equ	0xFF4
 10344                           prodl	equ	0xFF3
 10345                           intcon	equ	0xFF2
 10346                           intcon2	equ	0xFF1
 10347                           intcon3	equ	0xFF0
 10348                           indf0	equ	0xFEF
 10349                           postinc0	equ	0xFEE
 10350                           plusw0	equ	0xFEB
 10351                           fsr0h	equ	0xFEA
 10352                           fsr0l	equ	0xFE9
 10353                           wreg	equ	0xFE8
 10354                           postinc1	equ	0xFE6
 10355                           postdec1	equ	0xFE5
 10356                           fsr1h	equ	0xFE2
 10357                           fsr1l	equ	0xFE1
 10358                           indf2	equ	0xFDF
 10359                           postinc2	equ	0xFDE
 10360                           postdec2	equ	0xFDD
 10361                           plusw2	equ	0xFDB
 10362                           fsr2h	equ	0xFDA
 10363                           fsr2l	equ	0xFD9
 10364                           status	equ	0xFD8
 10365                           
 10366 ;; *************** function _USBEnableEndpoint *****************
 10367 ;; Defined at:
 10368 ;;		line 896 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  ep              1    wreg     unsigned char 
 10371 ;;  options         1    8[BANK0 ] unsigned char 
 10372 ;; Auto vars:     Size  Location     Type
 10373 ;;  ep              1   11[BANK0 ] unsigned char 
 10374 ;;  p               2    9[BANK0 ] PTR unsigned char 
 10375 ;;		 -> UEP0(1), 
 10376 ;; Return value:  Size  Location     Type
 10377 ;;                  1    wreg      void 
 10378 ;; Registers used:
 10379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10380 ;; Tracked objects:
 10381 ;;		On entry : 0/0
 10382 ;;		On exit  : 0/0
 10383 ;;		Unchanged: 0/0
 10384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10385 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10386 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10388 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10389 ;;Total ram usage:        4 bytes
 10390 ;; Hardware stack levels used:    1
 10391 ;; Hardware stack levels required when called:   12
 10392 ;; This function calls:
 10393 ;;		_USBConfigureEndpoint
 10394 ;; This function is called by:
 10395 ;;		_CDCInitEP
 10396 ;; This function uses a non-reentrant model
 10397 ;;
 10398                           
 10399                           	psect	text44
 10400  0046C2                     __ptext44:
 10401                           	opt stack 0
 10402  0046C2                     _USBEnableEndpoint:
 10403                           	opt stack 12
 10404                           
 10405                           ; BSR set to: 0
 10406                           ;incstack = 0
 10407                           ;USBEnableEndpoint@ep stored from wreg
 10408  0046C2  0100               	movlb	0	; () banked
 10409  0046C4  6F6B               	movwf	USBEnableEndpoint@ep& (0+255),b
 10410                           
 10411                           ;usb_device.c: 898: unsigned char* p;
 10412                           ;usb_device.c: 902: if(options & 0x04)
 10413  0046C6  0100               	movlb	0	; () banked
 10414  0046C8  A568               	btfss	USBEnableEndpoint@options& (0+255),2,b
 10415  0046CA  D005               	goto	l1380
 10416                           
 10417                           ; BSR set to: 0
 10418                           ;usb_device.c: 903: {
 10419                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 10420  0046CC  0E00               	movlw	0
 10421  0046CE  6F60               	movwf	USBConfigureEndpoint@direction& (0+255),b
 10422  0046D0  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10423  0046D2  ECD1  F01A         	call	_USBConfigureEndpoint
 10424  0046D6                     l1380:
 10425                           
 10426                           ;usb_device.c: 905: }
 10427                           ;usb_device.c: 906: if(options & 0x02)
 10428  0046D6  0100               	movlb	0	; () banked
 10429  0046D8  A368               	btfss	USBEnableEndpoint@options& (0+255),1,b
 10430  0046DA  D005               	goto	l1381
 10431                           
 10432                           ; BSR set to: 0
 10433                           ;usb_device.c: 907: {
 10434                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 10435  0046DC  0E01               	movlw	1
 10436  0046DE  6F60               	movwf	USBConfigureEndpoint@direction& (0+255),b
 10437  0046E0  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10438  0046E2  ECD1  F01A         	call	_USBConfigureEndpoint
 10439  0046E6                     l1381:
 10440                           
 10441                           ;usb_device.c: 909: }
 10442                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 10443  0046E6  0100               	movlb	0	; () banked
 10444  0046E8  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10445  0046EA  0D01               	mullw	1
 10446  0046EC  0E26               	movlw	38
 10447  0046EE  24F3               	addwf	prodl,w,c
 10448  0046F0  6F69               	movwf	USBEnableEndpoint@p& (0+255),b
 10449  0046F2  0E0F               	movlw	15
 10450  0046F4  20F4               	addwfc	prodh,w,c
 10451  0046F6  6F6A               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 10452                           
 10453                           ; BSR set to: 0
 10454                           ;usb_device.c: 919: *p = options;
 10455  0046F8  C069  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 10456  0046FC  C06A  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 10457  004700  C068  FFDF         	movff	USBEnableEndpoint@options,indf2
 10458                           
 10459                           ; BSR set to: 0
 10460  004704  0012               	return		;funcret
 10461  004706                     __end_of_USBEnableEndpoint:
 10462                           	opt stack 0
 10463                           tosu	equ	0xFFF
 10464                           tosh	equ	0xFFE
 10465                           tosl	equ	0xFFD
 10466                           pclath	equ	0xFFA
 10467                           tblptru	equ	0xFF8
 10468                           tblptrh	equ	0xFF7
 10469                           tblptrl	equ	0xFF6
 10470                           tablat	equ	0xFF5
 10471                           prodh	equ	0xFF4
 10472                           prodl	equ	0xFF3
 10473                           intcon	equ	0xFF2
 10474                           intcon2	equ	0xFF1
 10475                           intcon3	equ	0xFF0
 10476                           indf0	equ	0xFEF
 10477                           postinc0	equ	0xFEE
 10478                           plusw0	equ	0xFEB
 10479                           fsr0h	equ	0xFEA
 10480                           fsr0l	equ	0xFE9
 10481                           wreg	equ	0xFE8
 10482                           postinc1	equ	0xFE6
 10483                           postdec1	equ	0xFE5
 10484                           fsr1h	equ	0xFE2
 10485                           fsr1l	equ	0xFE1
 10486                           indf2	equ	0xFDF
 10487                           postinc2	equ	0xFDE
 10488                           postdec2	equ	0xFDD
 10489                           plusw2	equ	0xFDB
 10490                           fsr2h	equ	0xFDA
 10491                           fsr2l	equ	0xFD9
 10492                           status	equ	0xFD8
 10493                           
 10494 ;; *************** function _USBConfigureEndpoint *****************
 10495 ;; Defined at:
 10496 ;;		line 1561 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10497 ;; Parameters:    Size  Location     Type
 10498 ;;  EPNum           1    wreg     unsigned char 
 10499 ;;  direction       1    0[BANK0 ] unsigned char 
 10500 ;; Auto vars:     Size  Location     Type
 10501 ;;  EPNum           1    5[BANK0 ] unsigned char 
 10502 ;;  handle          2    6[BANK0 ] PTR volatile struct __BD
 10503 ;;		 -> BDT(48), 
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      void 
 10506 ;; Registers used:
 10507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/0
 10510 ;;		On exit  : 0/0
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10513 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10514 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10515 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10516 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10517 ;;Total ram usage:        8 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:   11
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_USBEnableEndpoint
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           	psect	text45
 10528  0035A2                     __ptext45:
 10529                           	opt stack 0
 10530  0035A2                     _USBConfigureEndpoint:
 10531                           	opt stack 12
 10532                           
 10533                           ; BSR set to: 0
 10534                           ;incstack = 0
 10535                           ;USBConfigureEndpoint@EPNum stored from wreg
 10536  0035A2  0100               	movlb	0	; () banked
 10537  0035A4  6F65               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 10538                           
 10539                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 10540                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 10541  0035A6  0E00               	movlw	0
 10542  0035A8  0100               	movlb	0	; () banked
 10543  0035AA  6F66               	movwf	USBConfigureEndpoint@handle& (0+255),b
 10544  0035AC  0E04               	movlw	4
 10545  0035AE  6F67               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 10546                           
 10547                           ; BSR set to: 0
 10548                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 10549  0035B0  5160               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10550  0035B2  6F61               	movwf	??_USBConfigureEndpoint& (0+255),b
 10551  0035B4  6B62               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 10552  0035B6  90D8               	bcf	status,0,c
 10553  0035B8  3761               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 10554  0035BA  3762               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 10555  0035BC  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10556  0035BE  6F63               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 10557  0035C0  6B64               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 10558  0035C2  90D8               	bcf	status,0,c
 10559  0035C4  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10560  0035C6  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10561  0035C8  90D8               	bcf	status,0,c
 10562  0035CA  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10563  0035CC  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10564  0035CE  5161               	movf	??_USBConfigureEndpoint& (0+255),w,b
 10565  0035D0  2763               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10566  0035D2  5162               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 10567  0035D4  2364               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10568  0035D6  90D8               	bcf	status,0,c
 10569  0035D8  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10570  0035DA  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10571  0035DC  90D8               	bcf	status,0,c
 10572  0035DE  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10573  0035E0  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10574  0035E2  5163               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 10575  0035E4  2766               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 10576  0035E6  5164               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 10577  0035E8  2367               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 10578                           
 10579                           ; BSR set to: 0
 10580                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 10581  0035EA  C066  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10582  0035EE  C067  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10583  0035F2  9EDF               	bcf	indf2,7,c
 10584                           
 10585                           ; BSR set to: 0
 10586                           ;usb_device.c: 1575: if(direction == 0)
 10587  0035F4  5160               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10588  0035F6  A4D8               	btfss	status,2,c
 10589  0035F8  D007               	goto	l1416
 10590                           
 10591                           ; BSR set to: 0
 10592                           ;usb_device.c: 1576: {
 10593                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 10594  0035FA  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10595  0035FC  0D02               	mullw	2
 10596  0035FE  0E20               	movlw	low _pBDTEntryOut
 10597  003600  24F3               	addwf	prodl,w,c
 10598  003602  6ED9               	movwf	fsr2l,c
 10599  003604  0E01               	movlw	high _pBDTEntryOut
 10600  003606  D006               	goto	L10
 10601  003608                     l1416:
 10602                           
 10603                           ; BSR set to: 0
 10604                           ;usb_device.c: 1579: else
 10605                           ;usb_device.c: 1580: {
 10606                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 10607                           
 10608                           ; BSR set to: 0
 10609  003608  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10610  00360A  0D02               	mullw	2
 10611  00360C  0E3E               	movlw	low _pBDTEntryIn
 10612  00360E  24F3               	addwf	prodl,w,c
 10613  003610  6ED9               	movwf	fsr2l,c
 10614  003612  0E00               	movlw	high _pBDTEntryIn
 10615  003614                     L10:
 10616  003614  20F4               	addwfc	prodh,w,c
 10617  003616  6EDA               	movwf	fsr2h,c
 10618  003618  C066  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 10619  00361C  C067  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 10620                           
 10621                           ; BSR set to: 0
 10622                           ;usb_device.c: 1582: }
 10623                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 10624                           
 10625                           ; BSR set to: 0
 10626  003620  C066  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10627  003624  C067  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10628  003628  9CDF               	bcf	indf2,6,c
 10629                           
 10630                           ; BSR set to: 0
 10631                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 10632  00362A  EE20 F004          	lfsr	2,4
 10633  00362E  5166               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 10634  003630  26D9               	addwf	fsr2l,f,c
 10635  003632  5167               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 10636  003634  22DA               	addwfc	fsr2h,f,c
 10637  003636  8CDF               	bsf	indf2,6,c
 10638                           
 10639                           ; BSR set to: 0
 10640  003638  0012               	return		;funcret
 10641  00363A                     __end_of_USBConfigureEndpoint:
 10642                           	opt stack 0
 10643                           tosu	equ	0xFFF
 10644                           tosh	equ	0xFFE
 10645                           tosl	equ	0xFFD
 10646                           pclath	equ	0xFFA
 10647                           tblptru	equ	0xFF8
 10648                           tblptrh	equ	0xFF7
 10649                           tblptrl	equ	0xFF6
 10650                           tablat	equ	0xFF5
 10651                           prodh	equ	0xFF4
 10652                           prodl	equ	0xFF3
 10653                           intcon	equ	0xFF2
 10654                           intcon2	equ	0xFF1
 10655                           intcon3	equ	0xFF0
 10656                           indf0	equ	0xFEF
 10657                           postinc0	equ	0xFEE
 10658                           plusw0	equ	0xFEB
 10659                           fsr0h	equ	0xFEA
 10660                           fsr0l	equ	0xFE9
 10661                           wreg	equ	0xFE8
 10662                           postinc1	equ	0xFE6
 10663                           postdec1	equ	0xFE5
 10664                           fsr1h	equ	0xFE2
 10665                           fsr1l	equ	0xFE1
 10666                           indf2	equ	0xFDF
 10667                           postinc2	equ	0xFDE
 10668                           postdec2	equ	0xFDD
 10669                           plusw2	equ	0xFDB
 10670                           fsr2h	equ	0xFDA
 10671                           fsr2l	equ	0xFD9
 10672                           status	equ	0xFD8
 10673                           
 10674 ;; *************** function _USBCtrlTrfOutHandler *****************
 10675 ;; Defined at:
 10676 ;;		line 2555 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;		None
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;		None
 10681 ;; Return value:  Size  Location     Type
 10682 ;;                  1    wreg      void 
 10683 ;; Registers used:
 10684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/0
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10694 ;;Total ram usage:        0 bytes
 10695 ;; Hardware stack levels used:    1
 10696 ;; Hardware stack levels required when called:   13
 10697 ;; This function calls:
 10698 ;;		_USBCtrlTrfRxService
 10699 ;; This function is called by:
 10700 ;;		_USBCtrlEPService
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           	psect	text46
 10705  0040B6                     __ptext46:
 10706                           	opt stack 0
 10707  0040B6                     _USBCtrlTrfOutHandler:
 10708                           	opt stack 12
 10709                           
 10710                           ;usb_device.c: 2557: if(controlTransferState == 2)
 10711                           
 10712                           ; BSR set to: 0
 10713                           ;incstack = 0
 10714  0040B6  0E02               	movlw	2
 10715  0040B8  184C               	xorwf	_controlTransferState,w,c
 10716  0040BA  A4D8               	btfss	status,2,c
 10717  0040BC  D003               	goto	l1522
 10718                           
 10719                           ;usb_device.c: 2558: {
 10720                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 10721  0040BE  ECB3  F011         	call	_USBCtrlTrfRxService	;wreg free
 10722                           
 10723                           ;usb_device.c: 2560: }
 10724  0040C2  0012               	return	
 10725  0040C4                     l1522:
 10726                           
 10727                           ;usb_device.c: 2561: else
 10728                           ;usb_device.c: 2562: {
 10729                           ;usb_device.c: 2565: controlTransferState = 0;
 10730  0040C4  0E00               	movlw	0
 10731  0040C6  6E4C               	movwf	_controlTransferState,c
 10732                           
 10733                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 10734  0040C8  0101               	movlb	1	; () banked
 10735  0040CA  5160               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 10736  0040CC  A4D8               	btfss	status,2,c
 10737  0040CE  D020               	goto	l1524
 10738                           
 10739                           ; BSR set to: 1
 10740                           ;usb_device.c: 2573: {
 10741                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 10742  0040D0  0100               	movlb	0	; () banked
 10743  0040D2  EE20 F001          	lfsr	2,1
 10744  0040D6  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10745  0040D8  26D9               	addwf	fsr2l,f,c
 10746  0040DA  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10747  0040DC  22DA               	addwfc	fsr2h,f,c
 10748  0040DE  0E08               	movlw	8
 10749  0040E0  6EDF               	movwf	indf2,c
 10750                           
 10751                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10752  0040E2  EE20 F002          	lfsr	2,2
 10753  0040E6  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10754  0040E8  26D9               	addwf	fsr2l,f,c
 10755  0040EA  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10756  0040EC  22DA               	addwfc	fsr2h,f,c
 10757  0040EE  0E30               	movlw	48
 10758  0040F0  6EDE               	movwf	postinc2,c
 10759  0040F2  0E04               	movlw	4
 10760  0040F4  6EDD               	movwf	postdec2,c
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10764  0040F6  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10765  0040FA  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10766  0040FE  0E0C               	movlw	12
 10767  004100  6EDF               	movwf	indf2,c
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10771  004102  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10772  004106  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10773  00410A  0E00               	movlw	0
 10774  00410C  8EDB               	bsf	plusw2,7,c
 10775                           
 10776                           ;usb_device.c: 2578: }
 10777  00410E  0012               	return	
 10778  004110                     l1524:
 10779                           
 10780                           ;usb_device.c: 2579: else
 10781                           ;usb_device.c: 2580: {
 10782                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 10783                           
 10784                           ; BSR set to: 0
 10785  004110  0E00               	movlw	0
 10786  004112  0101               	movlb	1	; () banked
 10787  004114  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 10788                           
 10789                           ; BSR set to: 1
 10790  004116  0012               	return	
 10791  004118                     __end_of_USBCtrlTrfOutHandler:
 10792                           	opt stack 0
 10793                           tosu	equ	0xFFF
 10794                           tosh	equ	0xFFE
 10795                           tosl	equ	0xFFD
 10796                           pclath	equ	0xFFA
 10797                           tblptru	equ	0xFF8
 10798                           tblptrh	equ	0xFF7
 10799                           tblptrl	equ	0xFF6
 10800                           tablat	equ	0xFF5
 10801                           prodh	equ	0xFF4
 10802                           prodl	equ	0xFF3
 10803                           intcon	equ	0xFF2
 10804                           intcon2	equ	0xFF1
 10805                           intcon3	equ	0xFF0
 10806                           indf0	equ	0xFEF
 10807                           postinc0	equ	0xFEE
 10808                           plusw0	equ	0xFEB
 10809                           fsr0h	equ	0xFEA
 10810                           fsr0l	equ	0xFE9
 10811                           wreg	equ	0xFE8
 10812                           postinc1	equ	0xFE6
 10813                           postdec1	equ	0xFE5
 10814                           fsr1h	equ	0xFE2
 10815                           fsr1l	equ	0xFE1
 10816                           indf2	equ	0xFDF
 10817                           postinc2	equ	0xFDE
 10818                           postdec2	equ	0xFDD
 10819                           plusw2	equ	0xFDB
 10820                           fsr2h	equ	0xFDA
 10821                           fsr2l	equ	0xFD9
 10822                           status	equ	0xFD8
 10823                           
 10824 ;; *************** function _USBCtrlTrfRxService *****************
 10825 ;; Defined at:
 10826 ;;		line 1870 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10827 ;; Parameters:    Size  Location     Type
 10828 ;;		None
 10829 ;; Auto vars:     Size  Location     Type
 10830 ;;  byteToRead      1    1[BANK0 ] unsigned char 
 10831 ;;  i               1    0[BANK0 ] unsigned char 
 10832 ;; Return value:  Size  Location     Type
 10833 ;;                  1    wreg      void 
 10834 ;; Registers used:
 10835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10836 ;; Tracked objects:
 10837 ;;		On entry : 0/0
 10838 ;;		On exit  : 0/0
 10839 ;;		Unchanged: 0/0
 10840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10842 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10844 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10845 ;;Total ram usage:        2 bytes
 10846 ;; Hardware stack levels used:    1
 10847 ;; Hardware stack levels required when called:   12
 10848 ;; This function calls:
 10849 ;;		_USBCtrlEPAllowStatusStage
 10850 ;; This function is called by:
 10851 ;;		_USBCtrlTrfOutHandler
 10852 ;; This function uses a non-reentrant model
 10853 ;;
 10854                           
 10855                           	psect	text47
 10856  002366                     __ptext47:
 10857                           	opt stack 0
 10858  002366                     _USBCtrlTrfRxService:
 10859                           	opt stack 12
 10860                           
 10861                           ;usb_device.c: 1872: uint8_t byteToRead;
 10862                           ;usb_device.c: 1873: uint8_t i;
 10863                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 10864                           
 10865                           ;incstack = 0
 10866  002366  0100               	movlb	0	; () banked
 10867  002368  EE20 F001          	lfsr	2,1
 10868  00236C  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 10869  00236E  26D9               	addwf	fsr2l,f,c
 10870  002370  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 10871  002372  22DA               	addwfc	fsr2h,f,c
 10872  002374  50DF               	movf	indf2,w,c
 10873  002376  6F61               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 10874                           
 10875                           ; BSR set to: 0
 10876                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 10877  002378  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10878  00237A  0101               	movlb	1	; () banked
 10879  00237C  5D16               	subwf	(_outPipes+4)& (0+255),w,b
 10880  00237E  0E00               	movlw	0
 10881  002380  5917               	subwfb	(_outPipes+5)& (0+255),w,b
 10882  002382  A0D8               	btfss	status,0,c
 10883                           
 10884                           ; BSR set to: 1
 10885                           ;usb_device.c: 1884: {
 10886                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 10887  002384  C116  F061         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 10888                           
 10889                           ; BSR set to: 1
 10890                           ;usb_device.c: 1886: }
 10891                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 10892                           
 10893                           ; BSR set to: 1
 10894  002388  0100               	movlb	0	; () banked
 10895  00238A  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10896  00238C  0101               	movlb	1	; () banked
 10897  00238E  5F16               	subwf	(_outPipes+4)& (0+255),f,b
 10898  002390  0E00               	movlw	0
 10899  002392  5B17               	subwfb	(_outPipes+5)& (0+255),f,b
 10900                           
 10901                           ; BSR set to: 1
 10902                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 10903  002394  0E00               	movlw	0
 10904  002396  0100               	movlb	0	; () banked
 10905  002398  6F60               	movwf	USBCtrlTrfRxService@i& (0+255),b
 10906  00239A  D013               	goto	l1450
 10907  00239C                     
 10908                           ; BSR set to: 0
 10909                           ;usb_device.c: 1893: {
 10910                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 10911                           
 10912                           ; BSR set to: 0
 10913  00239C  5160               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 10914  00239E  0D01               	mullw	1
 10915  0023A0  0E38               	movlw	56
 10916  0023A2  24F3               	addwf	prodl,w,c
 10917  0023A4  6ED9               	movwf	fsr2l,c
 10918  0023A6  0E04               	movlw	4
 10919  0023A8  20F4               	addwfc	prodh,w,c
 10920  0023AA  6EDA               	movwf	fsr2h,c
 10921  0023AC  C112  FFE1         	movff	_outPipes,fsr1l
 10922  0023B0  C113  FFE2         	movff	_outPipes+1,fsr1h
 10923  0023B4  CFDF FFE7          	movff	indf2,indf1
 10924                           
 10925                           ; BSR set to: 0
 10926  0023B8  0101               	movlb	1	; () banked
 10927  0023BA  4B12               	infsnz	_outPipes& (0+255),f,b
 10928  0023BC  2B13               	incf	(_outPipes+1)& (0+255),f,b
 10929                           
 10930                           ; BSR set to: 1
 10931  0023BE  0100               	movlb	0	; () banked
 10932  0023C0  2B60               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 10933  0023C2                     l1450:
 10934                           
 10935                           ; BSR set to: 0
 10936                           
 10937                           ; BSR set to: 0
 10938  0023C2  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10939  0023C4  5D60               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 10940  0023C6  A0D8               	btfss	status,0,c
 10941  0023C8  D7E9               	goto	l1451
 10942                           
 10943                           ; BSR set to: 0
 10944                           ;usb_device.c: 1895: }
 10945                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 10946                           
 10947                           ; BSR set to: 0
 10948  0023CA  0101               	movlb	1	; () banked
 10949  0023CC  5116               	movf	(_outPipes+4)& (0+255),w,b
 10950  0023CE  1117               	iorwf	(_outPipes+5)& (0+255),w,b
 10951  0023D0  B4D8               	btfsc	status,2,c
 10952  0023D2  D033               	goto	l1453
 10953                           
 10954                           ; BSR set to: 1
 10955                           ;usb_device.c: 1900: {
 10956                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 10957  0023D4  0100               	movlb	0	; () banked
 10958  0023D6  EE20 F001          	lfsr	2,1
 10959  0023DA  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10960  0023DC  26D9               	addwf	fsr2l,f,c
 10961  0023DE  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10962  0023E0  22DA               	addwfc	fsr2h,f,c
 10963  0023E2  0E08               	movlw	8
 10964  0023E4  6EDF               	movwf	indf2,c
 10965                           
 10966                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 10967  0023E6  EE20 F002          	lfsr	2,2
 10968  0023EA  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10969  0023EC  26D9               	addwf	fsr2l,f,c
 10970  0023EE  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10971  0023F0  22DA               	addwfc	fsr2h,f,c
 10972  0023F2  0E38               	movlw	56
 10973  0023F4  6EDE               	movwf	postinc2,c
 10974  0023F6  0E04               	movlw	4
 10975  0023F8  6EDD               	movwf	postdec2,c
 10976                           
 10977                           ; BSR set to: 0
 10978                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 10979  0023FA  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10980  0023FE  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10981  002402  BCDF               	btfsc	indf2,6,c
 10982  002404  D00D               	goto	l1454
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;usb_device.c: 1904: {
 10986                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10987  002406  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10988  00240A  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10989  00240E  0E48               	movlw	72
 10990  002410  6EDF               	movwf	indf2,c
 10991                           
 10992                           ; BSR set to: 0
 10993                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10994  002412  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10995  002416  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10996  00241A  0E00               	movlw	0
 10997  00241C  8EDB               	bsf	plusw2,7,c
 10998                           
 10999                           ;usb_device.c: 1907: }
 11000  00241E  0012               	return	
 11001  002420                     l1454:
 11002                           
 11003                           ; BSR set to: 0
 11004                           ;usb_device.c: 1908: else
 11005                           ;usb_device.c: 1909: {
 11006                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 11007                           
 11008                           ; BSR set to: 0
 11009  002420  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11010  002424  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11011  002428  0E08               	movlw	8
 11012  00242A  6EDF               	movwf	indf2,c
 11013                           
 11014                           ; BSR set to: 0
 11015                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11016  00242C  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11017  002430  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11018  002434  0E00               	movlw	0
 11019  002436  8EDB               	bsf	plusw2,7,c
 11020                           
 11021                           ; BSR set to: 0
 11022                           ;usb_device.c: 1912: }
 11023                           ;usb_device.c: 1913: }
 11024  002438  0012               	return	
 11025  00243A                     l1453:
 11026                           
 11027                           ;usb_device.c: 1914: else
 11028                           ;usb_device.c: 1915: {
 11029                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 11030                           
 11031                           ; BSR set to: 0
 11032  00243A  0100               	movlb	0	; () banked
 11033  00243C  EE20 F001          	lfsr	2,1
 11034  002440  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11035  002442  26D9               	addwf	fsr2l,f,c
 11036  002444  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11037  002446  22DA               	addwfc	fsr2h,f,c
 11038  002448  0E08               	movlw	8
 11039  00244A  6EDF               	movwf	indf2,c
 11040                           
 11041                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 11042  00244C  EE20 F002          	lfsr	2,2
 11043  002450  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11044  002452  26D9               	addwf	fsr2l,f,c
 11045  002454  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11046  002456  22DA               	addwfc	fsr2h,f,c
 11047  002458  0E30               	movlw	48
 11048  00245A  6EDE               	movwf	postinc2,c
 11049  00245C  0E04               	movlw	4
 11050  00245E  6EDD               	movwf	postdec2,c
 11051                           
 11052                           ; BSR set to: 0
 11053                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 11054  002460  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11055  002464  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11056  002468  0E04               	movlw	4
 11057  00246A  6EDF               	movwf	indf2,c
 11058                           
 11059                           ; BSR set to: 0
 11060                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11061  00246C  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11062  002470  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11063  002474  0E00               	movlw	0
 11064  002476  8EDB               	bsf	plusw2,7,c
 11065                           
 11066                           ; BSR set to: 0
 11067                           ;usb_device.c: 1944: }
 11068                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 11069                           
 11070                           ; BSR set to: 0
 11071  002478  0101               	movlb	1	; () banked
 11072  00247A  9F15               	bcf	(_outPipes+3)& (0+255),7,b
 11073                           
 11074                           ; BSR set to: 1
 11075                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 11076  00247C  0100               	movlb	0	; () banked
 11077  00247E  51FC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 11078  002480  A4D8               	btfss	status,2,c
 11079  002482  0012               	return	
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;usb_device.c: 1960: {
 11083                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 11084  002484  ECDF  F015         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11085  002488  0012               	return	
 11086  00248A                     __end_of_USBCtrlTrfRxService:
 11087                           	opt stack 0
 11088                           tosu	equ	0xFFF
 11089                           tosh	equ	0xFFE
 11090                           tosl	equ	0xFFD
 11091                           pclath	equ	0xFFA
 11092                           tblptru	equ	0xFF8
 11093                           tblptrh	equ	0xFF7
 11094                           tblptrl	equ	0xFF6
 11095                           tablat	equ	0xFF5
 11096                           prodh	equ	0xFF4
 11097                           prodl	equ	0xFF3
 11098                           intcon	equ	0xFF2
 11099                           intcon2	equ	0xFF1
 11100                           intcon3	equ	0xFF0
 11101                           indf0	equ	0xFEF
 11102                           postinc0	equ	0xFEE
 11103                           plusw0	equ	0xFEB
 11104                           fsr0h	equ	0xFEA
 11105                           fsr0l	equ	0xFE9
 11106                           wreg	equ	0xFE8
 11107                           indf1	equ	0xFE7
 11108                           postinc1	equ	0xFE6
 11109                           postdec1	equ	0xFE5
 11110                           fsr1h	equ	0xFE2
 11111                           fsr1l	equ	0xFE1
 11112                           indf2	equ	0xFDF
 11113                           postinc2	equ	0xFDE
 11114                           postdec2	equ	0xFDD
 11115                           plusw2	equ	0xFDB
 11116                           fsr2h	equ	0xFDA
 11117                           fsr2l	equ	0xFD9
 11118                           status	equ	0xFD8
 11119                           
 11120 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 11121 ;; Defined at:
 11122 ;;		line 1434 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;		None
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;		None
 11127 ;; Return value:  Size  Location     Type
 11128 ;;                  1    wreg      void 
 11129 ;; Registers used:
 11130 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/0
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11140 ;;Total ram usage:        0 bytes
 11141 ;; Hardware stack levels used:    1
 11142 ;; Hardware stack levels required when called:   11
 11143 ;; This function calls:
 11144 ;;		Nothing
 11145 ;; This function is called by:
 11146 ;;		_USBDeviceTasks
 11147 ;;		_USBCtrlEPServiceComplete
 11148 ;;		_USBCtrlTrfRxService
 11149 ;; This function uses a non-reentrant model
 11150 ;;
 11151                           
 11152                           	psect	text48
 11153  002BBE                     __ptext48:
 11154                           	opt stack 0
 11155  002BBE                     _USBCtrlEPAllowStatusStage:
 11156                           	opt stack 12
 11157                           
 11158                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 11159                           
 11160                           ;incstack = 0
 11161  002BBE  5049               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 11162  002BC0  A4D8               	btfss	status,2,c
 11163  002BC2  0012               	return	
 11164                           
 11165                           ;usb_device.c: 1442: {
 11166                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 11167  002BC4  0E01               	movlw	1
 11168  002BC6  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 11169                           
 11170                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 11171  002BC8  5048               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 11172  002BCA  A4D8               	btfss	status,2,c
 11173  002BCC  0012               	return	
 11174                           
 11175                           ;usb_device.c: 1445: {
 11176                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 11177  002BCE  0E01               	movlw	1
 11178  002BD0  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 11179                           
 11180                           ;usb_device.c: 1450: if(controlTransferState == 2)
 11181  002BD2  0E02               	movlw	2
 11182  002BD4  184C               	xorwf	_controlTransferState,w,c
 11183  002BD6  A4D8               	btfss	status,2,c
 11184  002BD8  D015               	goto	l1404
 11185                           
 11186                           ;usb_device.c: 1451: {
 11187                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 11188  002BDA  EE20 F001          	lfsr	2,1
 11189  002BDE  503E               	movf	_pBDTEntryIn,w,c
 11190  002BE0  26D9               	addwf	fsr2l,f,c
 11191  002BE2  503F               	movf	_pBDTEntryIn+1,w,c
 11192  002BE4  22DA               	addwfc	fsr2h,f,c
 11193  002BE6  0E00               	movlw	0
 11194  002BE8  6EDF               	movwf	indf2,c
 11195                           
 11196                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11197  002BEA  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11198  002BEE  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11199  002BF2  0E48               	movlw	72
 11200  002BF4  6EDF               	movwf	indf2,c
 11201                           
 11202                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11203  002BF6  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11204  002BFA  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11205  002BFE  0E00               	movlw	0
 11206  002C00  8EDB               	bsf	plusw2,7,c
 11207                           
 11208                           ;usb_device.c: 1455: }
 11209  002C02  0012               	return	
 11210  002C04                     l1404:
 11211                           
 11212                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 11213  002C04  044C               	decf	_controlTransferState,w,c
 11214  002C06  A4D8               	btfss	status,2,c
 11215  002C08  0012               	return	
 11216                           
 11217                           ;usb_device.c: 1457: {
 11218                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 11219  002C0A  0E00               	movlw	0
 11220  002C0C  0101               	movlb	1	; () banked
 11221  002C0E  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11222                           
 11223                           ; BSR set to: 1
 11224                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 11225  002C10  0100               	movlb	0	; () banked
 11226  002C12  EE20 F001          	lfsr	2,1
 11227  002C16  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 11228  002C18  26D9               	addwf	fsr2l,f,c
 11229  002C1A  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 11230  002C1C  22DA               	addwfc	fsr2h,f,c
 11231  002C1E  0E08               	movlw	8
 11232  002C20  6EDF               	movwf	indf2,c
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 11236  002C22  EE20 F002          	lfsr	2,2
 11237  002C26  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 11238  002C28  26D9               	addwf	fsr2l,f,c
 11239  002C2A  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 11240  002C2C  22DA               	addwfc	fsr2h,f,c
 11241  002C2E  0E30               	movlw	48
 11242  002C30  6EDE               	movwf	postinc2,c
 11243  002C32  0E04               	movlw	4
 11244  002C34  6EDD               	movwf	postdec2,c
 11245                           
 11246                           ; BSR set to: 0
 11247                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 11248  002C36  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11249  002C3A  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11250  002C3E  0E04               	movlw	4
 11251  002C40  6EDF               	movwf	indf2,c
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11255  002C42  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11256  002C46  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11257  002C4A  0E00               	movlw	0
 11258  002C4C  8EDB               	bsf	plusw2,7,c
 11259                           
 11260                           ; BSR set to: 0
 11261                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 11262  002C4E  0E01               	movlw	1
 11263  002C50  0101               	movlb	1	; () banked
 11264  002C52  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11265                           
 11266                           ; BSR set to: 1
 11267                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 11268  002C54  0100               	movlb	0	; () banked
 11269  002C56  EE20 F001          	lfsr	2,1
 11270  002C5A  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11271  002C5C  26D9               	addwf	fsr2l,f,c
 11272  002C5E  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11273  002C60  22DA               	addwfc	fsr2h,f,c
 11274  002C62  0E08               	movlw	8
 11275  002C64  6EDF               	movwf	indf2,c
 11276                           
 11277                           ; BSR set to: 0
 11278                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 11279  002C66  EE20 F002          	lfsr	2,2
 11280  002C6A  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11281  002C6C  26D9               	addwf	fsr2l,f,c
 11282  002C6E  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11283  002C70  22DA               	addwfc	fsr2h,f,c
 11284  002C72  0E30               	movlw	48
 11285  002C74  6EDE               	movwf	postinc2,c
 11286  002C76  0E04               	movlw	4
 11287  002C78  6EDD               	movwf	postdec2,c
 11288                           
 11289                           ; BSR set to: 0
 11290                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 11291  002C7A  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11292  002C7E  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11293  002C82  0E80               	movlw	128
 11294  002C84  6EDF               	movwf	indf2,c
 11295                           
 11296                           ; BSR set to: 0
 11297                           
 11298                           ; BSR set to: 0
 11299                           
 11300                           ; BSR set to: 0
 11301  002C86  0012               	return	
 11302  002C88                     __end_of_USBCtrlEPAllowStatusStage:
 11303                           	opt stack 0
 11304                           tosu	equ	0xFFF
 11305                           tosh	equ	0xFFE
 11306                           tosl	equ	0xFFD
 11307                           pclath	equ	0xFFA
 11308                           tblptru	equ	0xFF8
 11309                           tblptrh	equ	0xFF7
 11310                           tblptrl	equ	0xFF6
 11311                           tablat	equ	0xFF5
 11312                           prodh	equ	0xFF4
 11313                           prodl	equ	0xFF3
 11314                           intcon	equ	0xFF2
 11315                           intcon2	equ	0xFF1
 11316                           intcon3	equ	0xFF0
 11317                           indf0	equ	0xFEF
 11318                           postinc0	equ	0xFEE
 11319                           plusw0	equ	0xFEB
 11320                           fsr0h	equ	0xFEA
 11321                           fsr0l	equ	0xFE9
 11322                           wreg	equ	0xFE8
 11323                           indf1	equ	0xFE7
 11324                           postinc1	equ	0xFE6
 11325                           postdec1	equ	0xFE5
 11326                           fsr1h	equ	0xFE2
 11327                           fsr1l	equ	0xFE1
 11328                           indf2	equ	0xFDF
 11329                           postinc2	equ	0xFDE
 11330                           postdec2	equ	0xFDD
 11331                           plusw2	equ	0xFDB
 11332                           fsr2h	equ	0xFDA
 11333                           fsr2l	equ	0xFD9
 11334                           status	equ	0xFD8
 11335                           
 11336 ;; *************** function _USBCtrlTrfInHandler *****************
 11337 ;; Defined at:
 11338 ;;		line 2609 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11339 ;; Parameters:    Size  Location     Type
 11340 ;;		None
 11341 ;; Auto vars:     Size  Location     Type
 11342 ;;  lastDTS         1    1[BANK0 ] unsigned char 
 11343 ;; Return value:  Size  Location     Type
 11344 ;;                  1    wreg      void 
 11345 ;; Registers used:
 11346 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11347 ;; Tracked objects:
 11348 ;;		On entry : 0/0
 11349 ;;		On exit  : 0/0
 11350 ;;		Unchanged: 0/0
 11351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11353 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11355 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11356 ;;Total ram usage:        1 bytes
 11357 ;; Hardware stack levels used:    1
 11358 ;; Hardware stack levels required when called:   12
 11359 ;; This function calls:
 11360 ;;		_USBCtrlTrfTxService
 11361 ;; This function is called by:
 11362 ;;		_USBCtrlEPService
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           
 11366                           	psect	text49
 11367  002EE0                     __ptext49:
 11368                           	opt stack 0
 11369  002EE0                     _USBCtrlTrfInHandler:
 11370                           	opt stack 13
 11371                           
 11372                           ;usb_device.c: 2611: uint8_t lastDTS;
 11373                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 11374                           
 11375                           ;incstack = 0
 11376  002EE0  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11377  002EE4  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11378  002EE8  0E00               	movlw	0
 11379  002EEA  BCDF               	btfsc	indf2,6,c
 11380  002EEC  0E01               	movlw	1
 11381  002EEE  0100               	movlb	0	; () banked
 11382  002EF0  6F61               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 11386  002EF2  0E04               	movlw	4
 11387  002EF4  1A3E               	xorwf	_pBDTEntryIn,f,c
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 11391  002EF6  0E08               	movlw	8
 11392  002EF8  19FD               	xorwf	_USBDeviceState& (0+255),w,b
 11393  002EFA  A4D8               	btfss	status,2,c
 11394  002EFC  D00D               	goto	l1531
 11395                           
 11396                           ; BSR set to: 0
 11397                           ;usb_device.c: 2622: {
 11398                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 11399  002EFE  0104               	movlb	4	; () banked
 11400  002F00  5132               	movf	50,w,b	;volatile
 11401  002F02  0B7F               	andlw	127
 11402  002F04  010F               	movlb	15	; () banked
 11403  002F06  6F38               	movwf	56,b	;volatile
 11404                           
 11405                           ; BSR set to: 15
 11406                           ;usb_device.c: 2624: if(UADDR != 0u)
 11407  002F08  5138               	movf	56,w,b	;volatile
 11408  002F0A  B4D8               	btfsc	status,2,c
 11409  002F0C  D002               	goto	l1530
 11410                           
 11411                           ; BSR set to: 15
 11412                           ;usb_device.c: 2625: {
 11413                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 11414  002F0E  0E10               	movlw	16
 11415  002F10  D001               	goto	L11
 11416  002F12                     l1530:
 11417                           
 11418                           ;usb_device.c: 2628: else
 11419                           ;usb_device.c: 2629: {
 11420                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 11421                           
 11422                           ; BSR set to: 0
 11423  002F12  0E04               	movlw	4
 11424  002F14                     L11:
 11425  002F14  0100               	movlb	0	; () banked
 11426  002F16  6FFD               	movwf	_USBDeviceState& (0+255),b
 11427  002F18                     l1531:
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;usb_device.c: 2631: }
 11431                           ;usb_device.c: 2632: }
 11432                           ;usb_device.c: 2635: if(controlTransferState == 1)
 11433                           
 11434                           ; BSR set to: 0
 11435                           
 11436                           ; BSR set to: 0
 11437  002F18  044C               	decf	_controlTransferState,w,c
 11438  002F1A  A4D8               	btfss	status,2,c
 11439  002F1C  D03B               	goto	l1532
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;usb_device.c: 2636: {
 11443                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 11444  002F1E  EE20 F002          	lfsr	2,2
 11445  002F22  503E               	movf	_pBDTEntryIn,w,c
 11446  002F24  26D9               	addwf	fsr2l,f,c
 11447  002F26  503F               	movf	_pBDTEntryIn+1,w,c
 11448  002F28  22DA               	addwfc	fsr2h,f,c
 11449  002F2A  0E38               	movlw	56
 11450  002F2C  6EDE               	movwf	postinc2,c
 11451  002F2E  0E04               	movlw	4
 11452  002F30  6EDD               	movwf	postdec2,c
 11453                           
 11454                           ; BSR set to: 0
 11455                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 11456  002F32  EC9E  F014         	call	_USBCtrlTrfTxService	;wreg free
 11457                           
 11458                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 11459  002F36  0E02               	movlw	2
 11460  002F38  184D               	xorwf	_shortPacketStatus,w,c
 11461  002F3A  A4D8               	btfss	status,2,c
 11462  002F3C  D00D               	goto	l1533
 11463                           
 11464                           ;usb_device.c: 2645: {
 11465                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 11466  002F3E  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11467  002F42  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11468  002F46  0E04               	movlw	4
 11469  002F48  6EDF               	movwf	indf2,c
 11470                           
 11471                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11472  002F4A  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11473  002F4E  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11474  002F52  0E00               	movlw	0
 11475  002F54  8EDB               	bsf	plusw2,7,c
 11476                           
 11477                           ;usb_device.c: 2650: }
 11478  002F56  0012               	return	
 11479  002F58                     l1533:
 11480                           
 11481                           ;usb_device.c: 2651: else
 11482                           ;usb_device.c: 2652: {
 11483                           ;usb_device.c: 2653: if(lastDTS == 0)
 11484  002F58  0100               	movlb	0	; () banked
 11485  002F5A  5161               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 11486  002F5C  A4D8               	btfss	status,2,c
 11487  002F5E  D00D               	goto	l1535
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;usb_device.c: 2654: {
 11491                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11492  002F60  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11493  002F64  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11494  002F68  0E48               	movlw	72
 11495  002F6A  6EDF               	movwf	indf2,c
 11496                           
 11497                           ; BSR set to: 0
 11498                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11499  002F6C  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11500  002F70  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11501  002F74  0E00               	movlw	0
 11502  002F76  8EDB               	bsf	plusw2,7,c
 11503                           
 11504                           ;usb_device.c: 2657: }
 11505  002F78  0012               	return	
 11506  002F7A                     l1535:
 11507                           
 11508                           ; BSR set to: 0
 11509                           ;usb_device.c: 2658: else
 11510                           ;usb_device.c: 2659: {
 11511                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 11512                           
 11513                           ; BSR set to: 0
 11514  002F7A  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11515  002F7E  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11516  002F82  0E08               	movlw	8
 11517  002F84  6EDF               	movwf	indf2,c
 11518                           
 11519                           ; BSR set to: 0
 11520                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11521  002F86  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11522  002F8A  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11523  002F8E  0E00               	movlw	0
 11524  002F90  8EDB               	bsf	plusw2,7,c
 11525                           
 11526                           ; BSR set to: 0
 11527                           ;usb_device.c: 2662: }
 11528                           ;usb_device.c: 2663: }
 11529                           ;usb_device.c: 2664: }
 11530                           
 11531                           ; BSR set to: 0
 11532  002F92  0012               	return	
 11533  002F94                     l1532:
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;usb_device.c: 2665: else
 11537                           ;usb_device.c: 2666: {
 11538                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 11539  002F94  0101               	movlb	1	; () banked
 11540  002F96  BF15               	btfsc	(_outPipes+3)& (0+255),7,b
 11541                           
 11542                           ; BSR set to: 1
 11543                           ;usb_device.c: 2675: }
 11544                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 11545                           
 11546                           ; BSR set to: 1
 11547  002F98  9F15               	bcf	(_outPipes+3)& (0+255),7,b
 11548                           
 11549                           ; BSR set to: 1
 11550                           ;usb_device.c: 2677: }
 11551                           ;usb_device.c: 2679: controlTransferState = 0;
 11552                           
 11553                           ; BSR set to: 1
 11554  002F9A  0E00               	movlw	0
 11555  002F9C  6E4C               	movwf	_controlTransferState,c
 11556  002F9E  0012               	return	
 11557  002FA0                     __end_of_USBCtrlTrfInHandler:
 11558                           	opt stack 0
 11559                           tosu	equ	0xFFF
 11560                           tosh	equ	0xFFE
 11561                           tosl	equ	0xFFD
 11562                           pclath	equ	0xFFA
 11563                           tblptru	equ	0xFF8
 11564                           tblptrh	equ	0xFF7
 11565                           tblptrl	equ	0xFF6
 11566                           tablat	equ	0xFF5
 11567                           prodh	equ	0xFF4
 11568                           prodl	equ	0xFF3
 11569                           intcon	equ	0xFF2
 11570                           intcon2	equ	0xFF1
 11571                           intcon3	equ	0xFF0
 11572                           indf0	equ	0xFEF
 11573                           postinc0	equ	0xFEE
 11574                           plusw0	equ	0xFEB
 11575                           fsr0h	equ	0xFEA
 11576                           fsr0l	equ	0xFE9
 11577                           wreg	equ	0xFE8
 11578                           indf1	equ	0xFE7
 11579                           postinc1	equ	0xFE6
 11580                           postdec1	equ	0xFE5
 11581                           fsr1h	equ	0xFE2
 11582                           fsr1l	equ	0xFE1
 11583                           indf2	equ	0xFDF
 11584                           postinc2	equ	0xFDE
 11585                           postdec2	equ	0xFDD
 11586                           plusw2	equ	0xFDB
 11587                           fsr2h	equ	0xFDA
 11588                           fsr2l	equ	0xFD9
 11589                           status	equ	0xFD8
 11590                           
 11591 ;; *************** function _USBCtrlTrfTxService *****************
 11592 ;; Defined at:
 11593 ;;		line 1789 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;		None
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;  byteToSend      1    0[BANK0 ] unsigned char 
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1    wreg      void 
 11600 ;; Registers used:
 11601 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11602 ;; Tracked objects:
 11603 ;;		On entry : 0/0
 11604 ;;		On exit  : 0/0
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11610 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11611 ;;Total ram usage:        1 bytes
 11612 ;; Hardware stack levels used:    1
 11613 ;; Hardware stack levels required when called:   11
 11614 ;; This function calls:
 11615 ;;		Nothing
 11616 ;; This function is called by:
 11617 ;;		_USBCtrlEPAllowDataStage
 11618 ;;		_USBCtrlTrfInHandler
 11619 ;; This function uses a non-reentrant model
 11620 ;;
 11621                           
 11622                           	psect	text50
 11623  00293C                     __ptext50:
 11624                           	opt stack 0
 11625  00293C                     _USBCtrlTrfTxService:
 11626                           	opt stack 11
 11627                           
 11628                           ;usb_device.c: 1791: uint8_t byteToSend;
 11629                           ;usb_device.c: 1795: byteToSend = 8;
 11630                           
 11631                           ;incstack = 0
 11632  00293C  0E08               	movlw	8
 11633  00293E  0100               	movlb	0	; () banked
 11634  002940  6F60               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 11638  002942  51F5               	movf	(_inPipes+5)& (0+255),w,b
 11639  002944  E110               	bnz	l6537
 11640  002946  0E08               	movlw	8
 11641  002948  5DF4               	subwf	(_inPipes+4)& (0+255),w,b
 11642  00294A  B0D8               	btfsc	status,0,c
 11643  00294C  D00C               	goto	l1437
 11644                           
 11645                           ; BSR set to: 0
 11646                           ;usb_device.c: 1797: {
 11647                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 11648  00294E  C0F4  F060         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 11649                           
 11650                           ; BSR set to: 0
 11651                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 11652  002952  504D               	movf	_shortPacketStatus,w,c
 11653  002954  A4D8               	btfss	status,2,c
 11654  002956  D002               	goto	l1435
 11655                           
 11656                           ; BSR set to: 0
 11657                           ;usb_device.c: 1806: {
 11658                           ;usb_device.c: 1807: shortPacketStatus = 1;
 11659  002958  0E01               	movlw	1
 11660  00295A  D004               	goto	L12
 11661  00295C                     l1435:
 11662                           
 11663                           ; BSR set to: 0
 11664                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 11665                           
 11666                           ; BSR set to: 0
 11667  00295C  044D               	decf	_shortPacketStatus,w,c
 11668  00295E  A4D8               	btfss	status,2,c
 11669  002960  D002               	goto	l1437
 11670                           
 11671                           ; BSR set to: 0
 11672                           ;usb_device.c: 1810: {
 11673                           ;usb_device.c: 1811: shortPacketStatus = 2;
 11674  002962  0E02               	movlw	2
 11675  002964                     L12:
 11676  002964  6E4D               	movwf	_shortPacketStatus,c
 11677  002966                     l1437:
 11678  002966                     l6537:
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;usb_device.c: 1812: }
 11682                           ;usb_device.c: 1813: }
 11683                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 11684  002966  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11685  002968  5FF4               	subwf	(_inPipes+4)& (0+255),f,b
 11686  00296A  0E00               	movlw	0
 11687  00296C  5BF5               	subwfb	(_inPipes+5)& (0+255),f,b
 11688                           
 11689                           ; BSR set to: 0
 11690                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 11691  00296E  EE20 F001          	lfsr	2,1
 11692  002972  503E               	movf	_pBDTEntryIn,w,c
 11693  002974  26D9               	addwf	fsr2l,f,c
 11694  002976  503F               	movf	_pBDTEntryIn+1,w,c
 11695  002978  22DA               	addwfc	fsr2h,f,c
 11696  00297A  C060  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 11697                           
 11698                           ; BSR set to: 0
 11699                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 11700  00297E  0E38               	movlw	56
 11701  002980  0101               	movlb	1	; () banked
 11702  002982  6F42               	movwf	_pDst& (0+255),b
 11703  002984  0E04               	movlw	4
 11704  002986  6F43               	movwf	(_pDst+1)& (0+255),b
 11705                           
 11706                           ; BSR set to: 1
 11707                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 11708  002988  0100               	movlb	0	; () banked
 11709  00298A  A1F3               	btfss	(_inPipes+3)& (0+255),0,b
 11710  00298C  D01E               	goto	l1439
 11711  00298E  D03E               	goto	l1443
 11712  002990                     
 11713                           ; BSR set to: 0
 11714                           ;usb_device.c: 1830: {
 11715                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 11716                           
 11717                           ; BSR set to: 0
 11718  002990  C0F0  FFF6         	movff	_inPipes,tblptrl
 11719  002994  C0F1  FFF7         	movff	_inPipes+1,tblptrh
 11720  002998  6AF8               	clrf	tblptru,c
 11721  00299A  C142  FFD9         	movff	_pDst,fsr2l
 11722  00299E  C143  FFDA         	movff	_pDst+1,fsr2h
 11723  0029A2  0E0E               	movlw	(high __ramtop+-1)
 11724  0029A4  64F7               	cpfsgt	tblptrh,c
 11725  0029A6  D003               	bra	u4447
 11726  0029A8  0008               	tblrd		*
 11727  0029AA  50F5               	movf	tablat,w,c
 11728  0029AC  D005               	bra	u4440
 11729  0029AE                     u4447:
 11730  0029AE  CFF6 FFE9          	movff	tblptrl,fsr0l
 11731  0029B2  CFF7 FFEA          	movff	tblptrh,fsr0h
 11732  0029B6  50EF               	movf	indf0,w,c
 11733  0029B8                     u4440:
 11734  0029B8  6EDF               	movwf	indf2,c
 11735  0029BA  0100               	movlb	0	; () banked
 11736  0029BC  4BF0               	infsnz	_inPipes& (0+255),f,b
 11737  0029BE  2BF1               	incf	(_inPipes+1)& (0+255),f,b
 11738                           
 11739                           ; BSR set to: 0
 11740  0029C0  0101               	movlb	1	; () banked
 11741  0029C2  4B42               	infsnz	_pDst& (0+255),f,b
 11742  0029C4  2B43               	incf	(_pDst+1)& (0+255),f,b
 11743                           
 11744                           ; BSR set to: 1
 11745                           ;usb_device.c: 1832: byteToSend--;
 11746  0029C6  0100               	movlb	0	; () banked
 11747  0029C8  0760               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11748  0029CA                     l1439:
 11749                           
 11750                           ; BSR set to: 0
 11751                           
 11752                           ; BSR set to: 0
 11753  0029CA  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11754  0029CC  B4D8               	btfsc	status,2,c
 11755  0029CE  0012               	return	
 11756  0029D0  D7DF               	goto	l1440
 11757  0029D2                     
 11758                           ; BSR set to: 0
 11759                           ;usb_device.c: 1838: {
 11760                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 11761                           
 11762                           ; BSR set to: 0
 11763  0029D2  C0F0  FFF6         	movff	_inPipes,tblptrl
 11764  0029D6  C0F1  FFF7         	movff	_inPipes+1,tblptrh
 11765  0029DA  6AF8               	clrf	tblptru,c
 11766  0029DC  C142  FFD9         	movff	_pDst,fsr2l
 11767  0029E0  C143  FFDA         	movff	_pDst+1,fsr2h
 11768  0029E4  0E0E               	movlw	(high __ramtop+-1)
 11769  0029E6  64F7               	cpfsgt	tblptrh,c
 11770  0029E8  D003               	bra	u4467
 11771  0029EA  0008               	tblrd		*
 11772  0029EC  50F5               	movf	tablat,w,c
 11773  0029EE  D005               	bra	u4460
 11774  0029F0                     u4467:
 11775  0029F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 11776  0029F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 11777  0029F8  50EF               	movf	indf0,w,c
 11778  0029FA                     u4460:
 11779  0029FA  6EDF               	movwf	indf2,c
 11780  0029FC  0100               	movlb	0	; () banked
 11781  0029FE  4BF0               	infsnz	_inPipes& (0+255),f,b
 11782  002A00  2BF1               	incf	(_inPipes+1)& (0+255),f,b
 11783                           
 11784                           ; BSR set to: 0
 11785  002A02  0101               	movlb	1	; () banked
 11786  002A04  4B42               	infsnz	_pDst& (0+255),f,b
 11787  002A06  2B43               	incf	(_pDst+1)& (0+255),f,b
 11788                           
 11789                           ; BSR set to: 1
 11790                           ;usb_device.c: 1840: byteToSend--;
 11791  002A08  0100               	movlb	0	; () banked
 11792  002A0A  0760               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11793  002A0C                     l1443:
 11794                           
 11795                           ; BSR set to: 0
 11796                           
 11797                           ; BSR set to: 0
 11798  002A0C  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11799  002A0E  B4D8               	btfsc	status,2,c
 11800  002A10  0012               	return	
 11801  002A12  D7DF               	goto	l1444
 11802  002A14                     __end_of_USBCtrlTrfTxService:
 11803                           	opt stack 0
 11804                           tosu	equ	0xFFF
 11805                           tosh	equ	0xFFE
 11806                           tosl	equ	0xFFD
 11807                           pclath	equ	0xFFA
 11808                           tblptru	equ	0xFF8
 11809                           tblptrh	equ	0xFF7
 11810                           tblptrl	equ	0xFF6
 11811                           tablat	equ	0xFF5
 11812                           prodh	equ	0xFF4
 11813                           prodl	equ	0xFF3
 11814                           intcon	equ	0xFF2
 11815                           intcon2	equ	0xFF1
 11816                           intcon3	equ	0xFF0
 11817                           indf0	equ	0xFEF
 11818                           postinc0	equ	0xFEE
 11819                           plusw0	equ	0xFEB
 11820                           fsr0h	equ	0xFEA
 11821                           fsr0l	equ	0xFE9
 11822                           wreg	equ	0xFE8
 11823                           indf1	equ	0xFE7
 11824                           postinc1	equ	0xFE6
 11825                           postdec1	equ	0xFE5
 11826                           fsr1h	equ	0xFE2
 11827                           fsr1l	equ	0xFE1
 11828                           indf2	equ	0xFDF
 11829                           postinc2	equ	0xFDE
 11830                           postdec2	equ	0xFDD
 11831                           plusw2	equ	0xFDB
 11832                           fsr2h	equ	0xFDA
 11833                           fsr2l	equ	0xFD9
 11834                           status	equ	0xFD8
 11835                           
 11836 ;; *************** function _CDCTxService *****************
 11837 ;; Defined at:
 11838 ;;		line 839 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;		None
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;  byte_to_send    1    8[BANK0 ] unsigned char 
 11843 ;;  i               1    7[BANK0 ] unsigned char 
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  1    wreg      void 
 11846 ;; Registers used:
 11847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11854 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11856 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11857 ;;Total ram usage:        2 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; Hardware stack levels required when called:   12
 11860 ;; This function calls:
 11861 ;;		_USBTransferOnePacket
 11862 ;; This function is called by:
 11863 ;;		_UsbDevice_MainTask
 11864 ;; This function uses a non-reentrant model
 11865 ;;
 11866                           
 11867                           	psect	text51
 11868  001E84                     __ptext51:
 11869                           	opt stack 0
 11870  001E84                     _CDCTxService:
 11871                           	opt stack 15
 11872                           
 11873                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 11874                           ;usb_device_cdc.c: 842: uint8_t i;
 11875                           ;usb_device_cdc.c: 844: ;
 11876                           ;usb_device_cdc.c: 846: {};
 11877                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 11878                           
 11879                           ; BSR set to: 0
 11880                           ;incstack = 0
 11881  001E84  0101               	movlb	1	; () banked
 11882  001E86  5140               	movf	_CDCDataInHandle& (0+255),w,b
 11883  001E88  1141               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 11884  001E8A  B4D8               	btfsc	status,2,c
 11885  001E8C  D006               	goto	l1689
 11886                           
 11887                           ; BSR set to: 1
 11888  001E8E  C140  FFD9         	movff	_CDCDataInHandle,fsr2l
 11889  001E92  C141  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 11890  001E96  BEDF               	btfsc	indf2,7,c
 11891  001E98  0012               	return	
 11892  001E9A                     l1689:
 11893                           
 11894                           ; BSR set to: 1
 11895                           ;usb_device_cdc.c: 852: }
 11896                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 11897                           
 11898                           ; BSR set to: 1
 11899  001E9A  0E03               	movlw	3
 11900  001E9C  0100               	movlb	0	; () banked
 11901  001E9E  19FB               	xorwf	_cdc_trf_state& (0+255),w,b
 11902  001EA0  A4D8               	btfss	status,2,c
 11903  001EA2  D002               	goto	l1691
 11904                           
 11905                           ; BSR set to: 0
 11906                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 11907  001EA4  0E00               	movlw	0
 11908  001EA6  6FFB               	movwf	_cdc_trf_state& (0+255),b
 11909  001EA8                     l1691:
 11910                           
 11911                           ; BSR set to: 0
 11912                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 11913  001EA8  51FB               	movf	_cdc_trf_state& (0+255),w,b
 11914  001EAA  B4D8               	btfsc	status,2,c
 11915  001EAC  0012               	return	
 11916                           
 11917                           ; BSR set to: 0
 11918                           ;usb_device_cdc.c: 869: }
 11919                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 11920                           
 11921                           ; BSR set to: 0
 11922                           
 11923                           ; BSR set to: 0
 11924                           ;usb_device_cdc.c: 866: {
 11925                           ;usb_device_cdc.c: 867: ;
 11926                           ;usb_device_cdc.c: 868: return;
 11927  001EAE  0E02               	movlw	2
 11928  001EB0  19FB               	xorwf	_cdc_trf_state& (0+255),w,b
 11929  001EB2  A4D8               	btfss	status,2,c
 11930  001EB4  D013               	goto	l1693
 11931                           
 11932                           ; BSR set to: 0
 11933                           ;usb_device_cdc.c: 875: {
 11934                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 11935  001EB6  0E01               	movlw	1
 11936  001EB8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11937  001EBA  0E00               	movlw	0
 11938  001EBC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11939  001EBE  0E00               	movlw	0
 11940  001EC0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11941  001EC2  0E00               	movlw	0
 11942  001EC4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 11943  001EC6  0E02               	movlw	2
 11944  001EC8  ECD0  F017         	call	_USBTransferOnePacket
 11945  001ECC  C060  F140         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11946  001ED0  C061  F141         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11947                           
 11948                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 11949  001ED4  0E03               	movlw	3
 11950  001ED6  0100               	movlb	0	; () banked
 11951  001ED8  6FFB               	movwf	_cdc_trf_state& (0+255),b
 11952                           
 11953                           ;usb_device_cdc.c: 879: }
 11954  001EDA  0012               	return	
 11955  001EDC                     l1693:
 11956                           
 11957                           ; BSR set to: 0
 11958                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 11959                           
 11960                           ; BSR set to: 0
 11961  001EDC  05FB               	decf	_cdc_trf_state& (0+255),w,b
 11962  001EDE  A4D8               	btfss	status,2,c
 11963  001EE0  0012               	return	
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;usb_device_cdc.c: 881: {
 11967                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 11968  001EE2  0E40               	movlw	64
 11969  001EE4  6446               	cpfsgt	_cdc_tx_len,c
 11970  001EE6  D003               	goto	l1696
 11971                           
 11972                           ; BSR set to: 0
 11973                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 11974  001EE8  0E40               	movlw	64
 11975  001EEA  6F68               	movwf	CDCTxService@byte_to_send& (0+255),b
 11976  001EEC  D002               	goto	l1697
 11977  001EEE                     l1696:
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;usb_device_cdc.c: 887: else
 11981                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 11982  001EEE  C046  F068         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 11983  001EF2                     l1697:
 11984                           
 11985                           ; BSR set to: 0
 11986                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 11987                           
 11988                           ; BSR set to: 0
 11989  001EF2  5168               	movf	CDCTxService@byte_to_send& (0+255),w,b
 11990  001EF4  0800               	sublw	0
 11991  001EF6  2446               	addwf	_cdc_tx_len,w,c
 11992  001EF8  6E46               	movwf	_cdc_tx_len,c
 11993                           
 11994                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 11995  001EFA  0EA4               	movlw	low _cdc_data_tx
 11996  001EFC  0101               	movlb	1	; () banked
 11997  001EFE  6F32               	movwf	_pCDCDst& (0+255),b
 11998  001F00  0E04               	movlw	high _cdc_data_tx
 11999  001F02  6F33               	movwf	(_pCDCDst+1)& (0+255),b
 12000                           
 12001                           ; BSR set to: 1
 12002                           ;usb_device_cdc.c: 897: i = byte_to_send;
 12003  001F04  C068  F067         	movff	CDCTxService@byte_to_send,CDCTxService@i
 12004                           
 12005                           ; BSR set to: 1
 12006                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 12007  001F08  515C               	movf	_cdc_mem_type& (0+255),w,b
 12008  001F0A  B4D8               	btfsc	status,2,c
 12009  001F0C  D01D               	goto	l1699
 12010  001F0E  D03D               	goto	l1703
 12011  001F10                     
 12012                           ;usb_device_cdc.c: 901: {
 12013                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 12014                           
 12015                           ; BSR set to: 1
 12016  001F10  C135  FFF6         	movff	_pCDCSrc,tblptrl
 12017  001F14  C136  FFF7         	movff	_pCDCSrc+1,tblptrh
 12018  001F18  6AF8               	clrf	tblptru,c
 12019  001F1A  C132  FFD9         	movff	_pCDCDst,fsr2l
 12020  001F1E  C133  FFDA         	movff	_pCDCDst+1,fsr2h
 12021  001F22  0E0E               	movlw	(high __ramtop+-1)
 12022  001F24  64F7               	cpfsgt	tblptrh,c
 12023  001F26  D003               	bra	u7577
 12024  001F28  0008               	tblrd		*
 12025  001F2A  50F5               	movf	tablat,w,c
 12026  001F2C  D005               	bra	u7570
 12027  001F2E                     u7577:
 12028  001F2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 12029  001F32  CFF7 FFEA          	movff	tblptrh,fsr0h
 12030  001F36  50EF               	movf	indf0,w,c
 12031  001F38                     u7570:
 12032  001F38  6EDF               	movwf	indf2,c
 12033                           
 12034                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 12035  001F3A  0101               	movlb	1	; () banked
 12036  001F3C  4B32               	infsnz	_pCDCDst& (0+255),f,b
 12037  001F3E  2B33               	incf	(_pCDCDst+1)& (0+255),f,b
 12038                           
 12039                           ; BSR set to: 1
 12040                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 12041  001F40  4B35               	infsnz	_pCDCSrc& (0+255),f,b
 12042  001F42  2B36               	incf	(_pCDCSrc+1)& (0+255),f,b
 12043                           
 12044                           ; BSR set to: 1
 12045                           ;usb_device_cdc.c: 905: i--;
 12046  001F44  0100               	movlb	0	; () banked
 12047  001F46  0767               	decf	CDCTxService@i& (0+255),f,b
 12048  001F48                     l1699:
 12049                           
 12050                           ; BSR set to: 0
 12051  001F48  0100               	movlb	0	; () banked
 12052  001F4A  5167               	movf	CDCTxService@i& (0+255),w,b
 12053  001F4C  B4D8               	btfsc	status,2,c
 12054  001F4E  D021               	goto	u7600
 12055  001F50  D7DF               	goto	l1700
 12056  001F52                     
 12057                           ; BSR set to: 0
 12058                           ;usb_device_cdc.c: 911: {
 12059                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 12060                           
 12061                           ; BSR set to: 0
 12062  001F52  C135  FFF6         	movff	_pCDCSrc,tblptrl
 12063  001F56  C136  FFF7         	movff	_pCDCSrc+1,tblptrh
 12064  001F5A  6AF8               	clrf	tblptru,c
 12065  001F5C  C132  FFD9         	movff	_pCDCDst,fsr2l
 12066  001F60  C133  FFDA         	movff	_pCDCDst+1,fsr2h
 12067  001F64  0E0E               	movlw	(high __ramtop+-1)
 12068  001F66  64F7               	cpfsgt	tblptrh,c
 12069  001F68  D003               	bra	u7597
 12070  001F6A  0008               	tblrd		*
 12071  001F6C  50F5               	movf	tablat,w,c
 12072  001F6E  D005               	bra	u7590
 12073  001F70                     u7597:
 12074  001F70  CFF6 FFE9          	movff	tblptrl,fsr0l
 12075  001F74  CFF7 FFEA          	movff	tblptrh,fsr0h
 12076  001F78  50EF               	movf	indf0,w,c
 12077  001F7A                     u7590:
 12078  001F7A  6EDF               	movwf	indf2,c
 12079                           
 12080                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 12081  001F7C  0101               	movlb	1	; () banked
 12082  001F7E  4B32               	infsnz	_pCDCDst& (0+255),f,b
 12083  001F80  2B33               	incf	(_pCDCDst+1)& (0+255),f,b
 12084                           
 12085                           ; BSR set to: 1
 12086                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 12087  001F82  4B35               	infsnz	_pCDCSrc& (0+255),f,b
 12088  001F84  2B36               	incf	(_pCDCSrc+1)& (0+255),f,b
 12089                           
 12090                           ; BSR set to: 1
 12091                           ;usb_device_cdc.c: 915: i--;
 12092  001F86  0100               	movlb	0	; () banked
 12093  001F88  0767               	decf	CDCTxService@i& (0+255),f,b
 12094  001F8A                     l1703:
 12095                           
 12096                           ; BSR set to: 0
 12097  001F8A  0100               	movlb	0	; () banked
 12098  001F8C  5167               	movf	CDCTxService@i& (0+255),w,b
 12099  001F8E  A4D8               	btfss	status,2,c
 12100  001F90  D7E0               	goto	l1704
 12101  001F92                     u7600:
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;usb_device_cdc.c: 916: }
 12105                           ;usb_device_cdc.c: 917: }
 12106                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 12107                           
 12108                           ; BSR set to: 0
 12109                           
 12110                           ; BSR set to: 0
 12111  001F92  5046               	movf	_cdc_tx_len,w,c
 12112  001F94  A4D8               	btfss	status,2,c
 12113  001F96  D008               	goto	l1708
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;usb_device_cdc.c: 924: {
 12117                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 12118  001F98  0E40               	movlw	64
 12119  001F9A  1968               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 12120  001F9C  A4D8               	btfss	status,2,c
 12121  001F9E  D002               	goto	l1707
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 12125  001FA0  0E02               	movlw	2
 12126  001FA2  D001               	goto	L13
 12127  001FA4                     l1707:
 12128                           
 12129                           ; BSR set to: 0
 12130                           ;usb_device_cdc.c: 927: else
 12131                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 12132                           
 12133                           ; BSR set to: 0
 12134  001FA4  0E03               	movlw	3
 12135  001FA6                     L13:
 12136  001FA6  6FFB               	movwf	_cdc_trf_state& (0+255),b
 12137  001FA8                     l1708:
 12138                           
 12139                           ; BSR set to: 0
 12140                           ;usb_device_cdc.c: 929: }
 12141                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 12142                           
 12143                           ; BSR set to: 0
 12144                           
 12145                           ; BSR set to: 0
 12146  001FA8  0E01               	movlw	1
 12147  001FAA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12148  001FAC  0EA4               	movlw	low _cdc_data_tx
 12149  001FAE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12150  001FB0  0E04               	movlw	high _cdc_data_tx
 12151  001FB2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12152  001FB4  C068  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 12153  001FB8  0E02               	movlw	2
 12154  001FBA  ECD0  F017         	call	_USBTransferOnePacket
 12155  001FBE  C060  F140         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12156  001FC2  C061  F141         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12157  001FC6  0012               	return	
 12158  001FC8                     __end_of_CDCTxService:
 12159                           	opt stack 0
 12160                           tosu	equ	0xFFF
 12161                           tosh	equ	0xFFE
 12162                           tosl	equ	0xFFD
 12163                           pclath	equ	0xFFA
 12164                           tblptru	equ	0xFF8
 12165                           tblptrh	equ	0xFF7
 12166                           tblptrl	equ	0xFF6
 12167                           tablat	equ	0xFF5
 12168                           prodh	equ	0xFF4
 12169                           prodl	equ	0xFF3
 12170                           intcon	equ	0xFF2
 12171                           intcon2	equ	0xFF1
 12172                           intcon3	equ	0xFF0
 12173                           indf0	equ	0xFEF
 12174                           postinc0	equ	0xFEE
 12175                           plusw0	equ	0xFEB
 12176                           fsr0h	equ	0xFEA
 12177                           fsr0l	equ	0xFE9
 12178                           wreg	equ	0xFE8
 12179                           indf1	equ	0xFE7
 12180                           postinc1	equ	0xFE6
 12181                           postdec1	equ	0xFE5
 12182                           fsr1h	equ	0xFE2
 12183                           fsr1l	equ	0xFE1
 12184                           indf2	equ	0xFDF
 12185                           postinc2	equ	0xFDE
 12186                           postdec2	equ	0xFDD
 12187                           plusw2	equ	0xFDB
 12188                           fsr2h	equ	0xFDA
 12189                           fsr2l	equ	0xFD9
 12190                           status	equ	0xFD8
 12191                           
 12192 ;; *************** function _Term_MainSm *****************
 12193 ;; Defined at:
 12194 ;;		line 669 in file "../Source/c/03_Sml/02_Ssl/term.c"
 12195 ;; Parameters:    Size  Location     Type
 12196 ;;		None
 12197 ;; Auto vars:     Size  Location     Type
 12198 ;;  Data           50   32[BANK0 ] unsigned char [50]
 12199 ;;  FwkBuildYear    4  102[BANK0 ] unsigned char [4]
 12200 ;;  FwkBuildMont    4   98[BANK0 ] unsigned char [4]
 12201 ;;  FwkBuildDayS    4   94[BANK0 ] unsigned char [4]
 12202 ;;  FwkBuildStr     4   90[BANK0 ] unsigned char [4]
 12203 ;;  FwkMinorStr     4   86[BANK0 ] unsigned char [4]
 12204 ;;  FwkMajorStr     4   82[BANK0 ] unsigned char [4]
 12205 ;; Return value:  Size  Location     Type
 12206 ;;                  1    wreg      void 
 12207 ;; Registers used:
 12208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12209 ;; Tracked objects:
 12210 ;;		On entry : 0/0
 12211 ;;		On exit  : 0/0
 12212 ;;		Unchanged: 0/0
 12213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12215 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12217 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12218 ;;Total ram usage:       74 bytes
 12219 ;; Hardware stack levels used:    1
 12220 ;; Hardware stack levels required when called:   15
 12221 ;; This function calls:
 12222 ;;		_OsTmr_GetTimerStatus
 12223 ;;		_OsTmr_StartTimer
 12224 ;;		_Terminal
 12225 ;;		_memset
 12226 ;;		_putUSBUSART
 12227 ;;		_strcat
 12228 ;;		_strcpy
 12229 ;;		_strlen
 12230 ;;		_utoa
 12231 ;; This function is called by:
 12232 ;;		_Term_MainTask
 12233 ;; This function uses a non-reentrant model
 12234 ;;
 12235                           
 12236                           	psect	text52
 12237  0004E4                     __ptext52:
 12238                           	opt stack 0
 12239  0004E4                     _Term_MainSm:
 12240                           	opt stack 12
 12241                           
 12242                           ;term.c: 671: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 12243                           ;term.c: 672: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, };
 12244                           ;term.c: 673: UINT8 Data[50];
 12245                           ;term.c: 674: UINT8 FwkMajorStr[4];
 12246                           ;term.c: 675: UINT8 FwkMinorStr[4];
 12247                           ;term.c: 676: UINT8 FwkBuildStr[4];
 12248                           ;term.c: 677: UINT8 FwkBuildDayStr[4];
 12249                           ;term.c: 678: UINT8 FwkBuildMonthStr[4];
 12250                           ;term.c: 679: UINT8 FwkBuildYearStr[4];
 12251                           ;term.c: 681: switch (TermMainSmState)
 12252                           
 12253                           ;incstack = 0
 12254  0004E4  D1DA               	goto	l2091
 12255  0004E6                     
 12256                           ;term.c: 685: OsTmr_StartTimer(&TermDelay,2000);
 12257  0004E6  0EE2               	movlw	low Term_MainSm@TermDelay
 12258  0004E8  0100               	movlb	0	; () banked
 12259  0004EA  6F64               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 12260  0004EC  0E01               	movlw	high Term_MainSm@TermDelay
 12261  0004EE  6F65               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 12262  0004F0  0ED0               	movlw	208
 12263  0004F2  6F66               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 12264  0004F4  0E07               	movlw	7
 12265  0004F6  6F67               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 12266  0004F8  0E00               	movlw	0
 12267  0004FA  6F68               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 12268  0004FC  0E00               	movlw	0
 12269  0004FE  6F69               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 12270  000500  ECBB  F020         	call	_OsTmr_StartTimer	;wreg free
 12271                           
 12272                           ;term.c: 687: TermMainSmState = Term_InitDelay;
 12273  000504  0E01               	movlw	1
 12274  000506  0101               	movlb	1	; () banked
 12275  000508  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12276                           
 12277                           ;term.c: 688: break;
 12278  00050A  0012               	return	
 12279  00050C                     
 12280                           ; BSR set to: 1
 12281                           ;term.c: 692: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 12282                           
 12283                           ; BSR set to: 1
 12284  00050C  0EE2               	movlw	low Term_MainSm@TermDelay
 12285  00050E  0100               	movlb	0	; () banked
 12286  000510  6F78               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 12287  000512  0E01               	movlw	high Term_MainSm@TermDelay
 12288  000514  6F79               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 12289  000516  EC46  F01C         	call	_OsTmr_GetTimerStatus	;wreg free
 12290  00051A  06E8               	decf	wreg,f,c
 12291  00051C  A4D8               	btfss	status,2,c
 12292  00051E  0012               	return	
 12293                           
 12294                           ;term.c: 693: {
 12295                           ;term.c: 695: TermMainSmState = Term_InitState;
 12296  000520  0E02               	movlw	2
 12297  000522  0101               	movlb	1	; () banked
 12298  000524  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12299                           
 12300                           ; BSR set to: 1
 12301                           ;term.c: 696: }
 12302                           ;term.c: 697: break;
 12303  000526  0012               	return	
 12304  000528                     
 12305                           ; BSR set to: 1
 12306                           ;term.c: 701: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 12307                           
 12308                           ; BSR set to: 1
 12309  000528  0E1F               	movlw	31
 12310  00052A  0100               	movlb	0	; () banked
 12311  00052C  65FD               	cpfsgt	_USBDeviceState& (0+255),b
 12312  00052E  0012               	return	
 12313                           
 12314                           ; BSR set to: 0
 12315  000530  B265               	btfsc	3941,1,c	;volatile
 12316  000532  0012               	return	
 12317                           
 12318                           ; BSR set to: 0
 12319                           ;term.c: 705: else
 12320                           ;term.c: 706: {
 12321                           ;term.c: 708: TermMainSmState = Term_WelcomeState;
 12322                           
 12323                           ; BSR set to: 0
 12324                           
 12325                           ; BSR set to: 0
 12326                           ;term.c: 702: {
 12327                           ;term.c: 704: }
 12328  000534  0E03               	movlw	3
 12329  000536  0101               	movlb	1	; () banked
 12330  000538  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12331                           
 12332                           ; BSR set to: 1
 12333                           ;term.c: 709: }
 12334                           ;term.c: 710: break;
 12335  00053A  0012               	return	
 12336  00053C                     
 12337                           ; BSR set to: 1
 12338                           ;term.c: 714: if((cdc_trf_state == 0))
 12339                           
 12340                           ; BSR set to: 1
 12341  00053C  0100               	movlb	0	; () banked
 12342  00053E  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12343  000540  A4D8               	btfss	status,2,c
 12344  000542  0012               	return	
 12345                           
 12346                           ; BSR set to: 0
 12347                           ;term.c: 715: {
 12348                           ;term.c: 717: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 12349  000544  0ECD               	movlw	low _Welcome
 12350  000546  6F66               	movwf	putUSBUSART@data& (0+255),b
 12351  000548  0EFD               	movlw	high _Welcome
 12352  00054A  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12353  00054C  0E88               	movlw	136
 12354  00054E  6F68               	movwf	putUSBUSART@length& (0+255),b
 12355  000550  EC28  F026         	call	_putUSBUSART	;wreg free
 12356                           
 12357                           ;term.c: 719: TermMainSmState = Term_InstDescState;
 12358  000554  0E04               	movlw	4
 12359  000556  0101               	movlb	1	; () banked
 12360  000558  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12361                           
 12362                           ; BSR set to: 1
 12363                           ;term.c: 720: }
 12364                           ;term.c: 721: break;
 12365  00055A  0012               	return	
 12366  00055C                     
 12367                           ; BSR set to: 1
 12368                           ;term.c: 725: if((cdc_trf_state == 0))
 12369                           
 12370                           ; BSR set to: 1
 12371  00055C  0100               	movlb	0	; () banked
 12372  00055E  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12373  000560  A4D8               	btfss	status,2,c
 12374  000562  0012               	return	
 12375                           
 12376                           ; BSR set to: 0
 12377                           ;term.c: 726: {
 12378                           ;term.c: 728: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 12379  000564  0EE1               	movlw	low _MsgFormat
 12380  000566  6F66               	movwf	putUSBUSART@data& (0+255),b
 12381  000568  0EFC               	movlw	high _MsgFormat
 12382  00056A  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12383  00056C  0EEB               	movlw	235
 12384  00056E  6F68               	movwf	putUSBUSART@length& (0+255),b
 12385  000570  EC28  F026         	call	_putUSBUSART	;wreg free
 12386                           
 12387                           ;term.c: 730: TermMainSmState = Term_FwkVerState;
 12388  000574  0E05               	movlw	5
 12389  000576  0101               	movlb	1	; () banked
 12390  000578  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12391                           
 12392                           ; BSR set to: 1
 12393                           ;term.c: 731: }
 12394                           ;term.c: 732: break;
 12395  00057A  0012               	return	
 12396  00057C                     
 12397                           ; BSR set to: 1
 12398                           ;term.c: 736: if((cdc_trf_state == 0))
 12399                           
 12400                           ; BSR set to: 1
 12401  00057C  0100               	movlb	0	; () banked
 12402  00057E  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12403  000580  A4D8               	btfss	status,2,c
 12404  000582  0012               	return	
 12405                           
 12406                           ; BSR set to: 0
 12407                           ;term.c: 737: {
 12408                           ;term.c: 739: memset(Data,0,50);
 12409  000584  0E80               	movlw	low Term_MainSm@Data
 12410  000586  6F60               	movwf	memset@p1& (0+255),b
 12411  000588  0E00               	movlw	high Term_MainSm@Data
 12412  00058A  6F61               	movwf	(memset@p1+1)& (0+255),b
 12413  00058C  0E00               	movlw	0
 12414  00058E  6F63               	movwf	(memset@c+1)& (0+255),b
 12415  000590  0E00               	movlw	0
 12416  000592  6F62               	movwf	memset@c& (0+255),b
 12417  000594  0E00               	movlw	0
 12418  000596  6F65               	movwf	(memset@n+1)& (0+255),b
 12419  000598  0E32               	movlw	50
 12420  00059A  6F64               	movwf	memset@n& (0+255),b
 12421  00059C  EC1A  F025         	call	_memset	;wreg free
 12422                           
 12423                           ;term.c: 741: utoa(FwkMajorStr,1,10);
 12424  0005A0  0EB2               	movlw	low Term_MainSm@FwkMajorStr
 12425  0005A2  0100               	movlb	0	; () banked
 12426  0005A4  6F67               	movwf	utoa@buf& (0+255),b
 12427  0005A6  0E00               	movlw	high Term_MainSm@FwkMajorStr
 12428  0005A8  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12429  0005AA  0E00               	movlw	0
 12430  0005AC  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12431  0005AE  0E01               	movlw	1
 12432  0005B0  6F69               	movwf	utoa@val& (0+255),b
 12433  0005B2  0E00               	movlw	0
 12434  0005B4  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12435  0005B6  0E0A               	movlw	10
 12436  0005B8  6F6B               	movwf	utoa@base& (0+255),b
 12437  0005BA  EC8E  F019         	call	_utoa	;wreg free
 12438                           
 12439                           ;term.c: 742: utoa(FwkMinorStr,0,10);
 12440  0005BE  0EB6               	movlw	low Term_MainSm@FwkMinorStr
 12441  0005C0  0100               	movlb	0	; () banked
 12442  0005C2  6F67               	movwf	utoa@buf& (0+255),b
 12443  0005C4  0E00               	movlw	high Term_MainSm@FwkMinorStr
 12444  0005C6  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12445  0005C8  0E00               	movlw	0
 12446  0005CA  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12447  0005CC  0E00               	movlw	0
 12448  0005CE  6F69               	movwf	utoa@val& (0+255),b
 12449  0005D0  0E00               	movlw	0
 12450  0005D2  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12451  0005D4  0E0A               	movlw	10
 12452  0005D6  6F6B               	movwf	utoa@base& (0+255),b
 12453  0005D8  EC8E  F019         	call	_utoa	;wreg free
 12454                           
 12455                           ;term.c: 743: utoa(FwkBuildStr,0,10);
 12456  0005DC  0EBA               	movlw	low Term_MainSm@FwkBuildStr
 12457  0005DE  0100               	movlb	0	; () banked
 12458  0005E0  6F67               	movwf	utoa@buf& (0+255),b
 12459  0005E2  0E00               	movlw	high Term_MainSm@FwkBuildStr
 12460  0005E4  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12461  0005E6  0E00               	movlw	0
 12462  0005E8  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12463  0005EA  0E00               	movlw	0
 12464  0005EC  6F69               	movwf	utoa@val& (0+255),b
 12465  0005EE  0E00               	movlw	0
 12466  0005F0  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12467  0005F2  0E0A               	movlw	10
 12468  0005F4  6F6B               	movwf	utoa@base& (0+255),b
 12469  0005F6  EC8E  F019         	call	_utoa	;wreg free
 12470                           
 12471                           ;term.c: 744: strcpy(Data,"Framework Version: ");
 12472  0005FA  0E80               	movlw	low Term_MainSm@Data
 12473  0005FC  0100               	movlb	0	; () banked
 12474  0005FE  6F60               	movwf	strcpy@to& (0+255),b
 12475  000600  0E00               	movlw	high Term_MainSm@Data
 12476  000602  6F61               	movwf	(strcpy@to+1)& (0+255),b
 12477  000604  0E1F               	movlw	low STR_58
 12478  000606  6F62               	movwf	strcpy@from& (0+255),b
 12479  000608  0EFF               	movlw	high STR_58
 12480  00060A  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12481  00060C  ECF9  F022         	call	_strcpy	;wreg free
 12482                           
 12483                           ;term.c: 745: strcat(Data,FwkMajorStr);
 12484  000610  0E80               	movlw	low Term_MainSm@Data
 12485  000612  0100               	movlb	0	; () banked
 12486  000614  6F60               	movwf	strcat@to& (0+255),b
 12487  000616  0E00               	movlw	high Term_MainSm@Data
 12488  000618  6F61               	movwf	(strcat@to+1)& (0+255),b
 12489  00061A  0EB2               	movlw	low Term_MainSm@FwkMajorStr
 12490  00061C  6F62               	movwf	strcat@from& (0+255),b
 12491  00061E  0E00               	movlw	high Term_MainSm@FwkMajorStr
 12492  000620  6F63               	movwf	(strcat@from+1)& (0+255),b
 12493  000622  5162               	movf	strcat@from& (0+255),w,b
 12494  000624  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12495  000626  A4D8               	btfss	status,2,c
 12496  000628  0E20               	movlw	32
 12497  00062A  6F64               	movwf	(strcat@from+2)& (0+255),b
 12498  00062C  EC29  F020         	call	_strcat	;wreg free
 12499                           
 12500                           ;term.c: 746: strcat(Data,".");
 12501  000630  0E80               	movlw	low Term_MainSm@Data
 12502  000632  0100               	movlb	0	; () banked
 12503  000634  6F60               	movwf	strcat@to& (0+255),b
 12504  000636  0E00               	movlw	high Term_MainSm@Data
 12505  000638  6F61               	movwf	(strcat@to+1)& (0+255),b
 12506  00063A  0EEB               	movlw	low STR_59
 12507  00063C  6F62               	movwf	strcat@from& (0+255),b
 12508  00063E  0EFF               	movlw	high STR_59
 12509  000640  6F63               	movwf	(strcat@from+1)& (0+255),b
 12510  000642  5162               	movf	strcat@from& (0+255),w,b
 12511  000644  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12512  000646  A4D8               	btfss	status,2,c
 12513  000648  0E00               	movlw	low (__mediumconst shr (0+16))
 12514  00064A  6F64               	movwf	(strcat@from+2)& (0+255),b
 12515  00064C  EC29  F020         	call	_strcat	;wreg free
 12516                           
 12517                           ;term.c: 747: strcat(Data,FwkMinorStr);
 12518  000650  0E80               	movlw	low Term_MainSm@Data
 12519  000652  0100               	movlb	0	; () banked
 12520  000654  6F60               	movwf	strcat@to& (0+255),b
 12521  000656  0E00               	movlw	high Term_MainSm@Data
 12522  000658  6F61               	movwf	(strcat@to+1)& (0+255),b
 12523  00065A  0EB6               	movlw	low Term_MainSm@FwkMinorStr
 12524  00065C  6F62               	movwf	strcat@from& (0+255),b
 12525  00065E  0E00               	movlw	high Term_MainSm@FwkMinorStr
 12526  000660  6F63               	movwf	(strcat@from+1)& (0+255),b
 12527  000662  5162               	movf	strcat@from& (0+255),w,b
 12528  000664  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12529  000666  A4D8               	btfss	status,2,c
 12530  000668  0E20               	movlw	32
 12531  00066A  6F64               	movwf	(strcat@from+2)& (0+255),b
 12532  00066C  EC29  F020         	call	_strcat	;wreg free
 12533                           
 12534                           ;term.c: 748: strcat(Data,".");
 12535  000670  0E80               	movlw	low Term_MainSm@Data
 12536  000672  0100               	movlb	0	; () banked
 12537  000674  6F60               	movwf	strcat@to& (0+255),b
 12538  000676  0E00               	movlw	high Term_MainSm@Data
 12539  000678  6F61               	movwf	(strcat@to+1)& (0+255),b
 12540  00067A  0EEB               	movlw	low STR_59
 12541  00067C  6F62               	movwf	strcat@from& (0+255),b
 12542  00067E  0EFF               	movlw	high STR_59
 12543  000680  6F63               	movwf	(strcat@from+1)& (0+255),b
 12544  000682  5162               	movf	strcat@from& (0+255),w,b
 12545  000684  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12546  000686  A4D8               	btfss	status,2,c
 12547  000688  0E00               	movlw	low (__mediumconst shr (0+16))
 12548  00068A  6F64               	movwf	(strcat@from+2)& (0+255),b
 12549  00068C  EC29  F020         	call	_strcat	;wreg free
 12550                           
 12551                           ;term.c: 749: strcat(Data,FwkBuildStr);
 12552  000690  0E80               	movlw	low Term_MainSm@Data
 12553  000692  0100               	movlb	0	; () banked
 12554  000694  6F60               	movwf	strcat@to& (0+255),b
 12555  000696  0E00               	movlw	high Term_MainSm@Data
 12556  000698  6F61               	movwf	(strcat@to+1)& (0+255),b
 12557  00069A  0EBA               	movlw	low Term_MainSm@FwkBuildStr
 12558  00069C  6F62               	movwf	strcat@from& (0+255),b
 12559  00069E  0E00               	movlw	high Term_MainSm@FwkBuildStr
 12560  0006A0  6F63               	movwf	(strcat@from+1)& (0+255),b
 12561  0006A2  5162               	movf	strcat@from& (0+255),w,b
 12562  0006A4  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12563  0006A6  A4D8               	btfss	status,2,c
 12564  0006A8  0E20               	movlw	32
 12565  0006AA  6F64               	movwf	(strcat@from+2)& (0+255),b
 12566  0006AC  EC29  F020         	call	_strcat	;wreg free
 12567                           
 12568                           ;term.c: 750: strcat(Data,"\r\n");
 12569  0006B0  0E80               	movlw	low Term_MainSm@Data
 12570  0006B2  0100               	movlb	0	; () banked
 12571  0006B4  6F60               	movwf	strcat@to& (0+255),b
 12572  0006B6  0E00               	movlw	high Term_MainSm@Data
 12573  0006B8  6F61               	movwf	(strcat@to+1)& (0+255),b
 12574  0006BA  0E87               	movlw	low (STR_31+8)
 12575  0006BC  6F62               	movwf	strcat@from& (0+255),b
 12576  0006BE  0EFF               	movlw	high (STR_31+8)
 12577  0006C0  6F63               	movwf	(strcat@from+1)& (0+255),b
 12578  0006C2  5162               	movf	strcat@from& (0+255),w,b
 12579  0006C4  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12580  0006C6  A4D8               	btfss	status,2,c
 12581  0006C8  0E00               	movlw	low (__mediumconst shr (0+16))
 12582  0006CA  6F64               	movwf	(strcat@from+2)& (0+255),b
 12583  0006CC  EC29  F020         	call	_strcat	;wreg free
 12584                           
 12585                           ;term.c: 752: putUSBUSART((void*)Data,strlen(Data));
 12586  0006D0  0E80               	movlw	low Term_MainSm@Data
 12587  0006D2  0100               	movlb	0	; () banked
 12588  0006D4  6F66               	movwf	putUSBUSART@data& (0+255),b
 12589  0006D6  0E00               	movlw	high Term_MainSm@Data
 12590  0006D8  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12591  0006DA  0E80               	movlw	low Term_MainSm@Data
 12592  0006DC  6F60               	movwf	strlen@s& (0+255),b
 12593  0006DE  0E00               	movlw	high Term_MainSm@Data
 12594  0006E0  6F61               	movwf	(strlen@s+1)& (0+255),b
 12595  0006E2  EC6E  F021         	call	_strlen	;wreg free
 12596  0006E6  0100               	movlb	0	; () banked
 12597  0006E8  5160               	movf	?_strlen& (0+255),w,b
 12598  0006EA  6F68               	movwf	putUSBUSART@length& (0+255),b
 12599  0006EC  EC28  F026         	call	_putUSBUSART	;wreg free
 12600                           
 12601                           ;term.c: 754: TermMainSmState = Term_FwkBuildDateState;
 12602  0006F0  0E06               	movlw	6
 12603  0006F2  0101               	movlb	1	; () banked
 12604  0006F4  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12605                           
 12606                           ; BSR set to: 1
 12607                           ;term.c: 755: }
 12608                           ;term.c: 756: break;
 12609  0006F6  0012               	return	
 12610  0006F8                     
 12611                           ; BSR set to: 1
 12612                           ;term.c: 760: if((cdc_trf_state == 0))
 12613                           
 12614                           ; BSR set to: 1
 12615  0006F8  0100               	movlb	0	; () banked
 12616  0006FA  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12617  0006FC  A4D8               	btfss	status,2,c
 12618  0006FE  0012               	return	
 12619                           
 12620                           ; BSR set to: 0
 12621                           ;term.c: 761: {
 12622                           ;term.c: 763: memset(Data,0,50);
 12623  000700  0E80               	movlw	low Term_MainSm@Data
 12624  000702  6F60               	movwf	memset@p1& (0+255),b
 12625  000704  0E00               	movlw	high Term_MainSm@Data
 12626  000706  6F61               	movwf	(memset@p1+1)& (0+255),b
 12627  000708  0E00               	movlw	0
 12628  00070A  6F63               	movwf	(memset@c+1)& (0+255),b
 12629  00070C  0E00               	movlw	0
 12630  00070E  6F62               	movwf	memset@c& (0+255),b
 12631  000710  0E00               	movlw	0
 12632  000712  6F65               	movwf	(memset@n+1)& (0+255),b
 12633  000714  0E32               	movlw	50
 12634  000716  6F64               	movwf	memset@n& (0+255),b
 12635  000718  EC1A  F025         	call	_memset	;wreg free
 12636                           
 12637                           ;term.c: 765: utoa(FwkBuildDayStr,07,10);
 12638  00071C  0EBE               	movlw	low Term_MainSm@FwkBuildDayStr
 12639  00071E  0100               	movlb	0	; () banked
 12640  000720  6F67               	movwf	utoa@buf& (0+255),b
 12641  000722  0E00               	movlw	high Term_MainSm@FwkBuildDayStr
 12642  000724  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12643  000726  0E00               	movlw	0
 12644  000728  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12645  00072A  0E07               	movlw	7
 12646  00072C  6F69               	movwf	utoa@val& (0+255),b
 12647  00072E  0E00               	movlw	0
 12648  000730  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12649  000732  0E0A               	movlw	10
 12650  000734  6F6B               	movwf	utoa@base& (0+255),b
 12651  000736  EC8E  F019         	call	_utoa	;wreg free
 12652                           
 12653                           ;term.c: 766: utoa(FwkBuildMonthStr,10,10);
 12654  00073A  0EC2               	movlw	low Term_MainSm@FwkBuildMonthStr
 12655  00073C  0100               	movlb	0	; () banked
 12656  00073E  6F67               	movwf	utoa@buf& (0+255),b
 12657  000740  0E00               	movlw	high Term_MainSm@FwkBuildMonthStr
 12658  000742  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12659  000744  0E00               	movlw	0
 12660  000746  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12661  000748  0E0A               	movlw	10
 12662  00074A  6F69               	movwf	utoa@val& (0+255),b
 12663  00074C  0E00               	movlw	0
 12664  00074E  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12665  000750  0E0A               	movlw	10
 12666  000752  6F6B               	movwf	utoa@base& (0+255),b
 12667  000754  EC8E  F019         	call	_utoa	;wreg free
 12668                           
 12669                           ;term.c: 767: utoa(FwkBuildYearStr,18,10);
 12670  000758  0EC6               	movlw	low Term_MainSm@FwkBuildYearStr
 12671  00075A  0100               	movlb	0	; () banked
 12672  00075C  6F67               	movwf	utoa@buf& (0+255),b
 12673  00075E  0E00               	movlw	high Term_MainSm@FwkBuildYearStr
 12674  000760  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12675  000762  0E00               	movlw	0
 12676  000764  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12677  000766  0E12               	movlw	18
 12678  000768  6F69               	movwf	utoa@val& (0+255),b
 12679  00076A  0E00               	movlw	0
 12680  00076C  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12681  00076E  0E0A               	movlw	10
 12682  000770  6F6B               	movwf	utoa@base& (0+255),b
 12683  000772  EC8E  F019         	call	_utoa	;wreg free
 12684                           
 12685                           ;term.c: 768: strcpy(Data,"Build Date (d-m-y): ");
 12686  000776  0E80               	movlw	low Term_MainSm@Data
 12687  000778  0100               	movlb	0	; () banked
 12688  00077A  6F60               	movwf	strcpy@to& (0+255),b
 12689  00077C  0E00               	movlw	high Term_MainSm@Data
 12690  00077E  6F61               	movwf	(strcpy@to+1)& (0+255),b
 12691  000780  0E0A               	movlw	low STR_62
 12692  000782  6F62               	movwf	strcpy@from& (0+255),b
 12693  000784  0EFF               	movlw	high STR_62
 12694  000786  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12695  000788  ECF9  F022         	call	_strcpy	;wreg free
 12696                           
 12697                           ;term.c: 769: strcat(Data,FwkBuildDayStr);
 12698  00078C  0E80               	movlw	low Term_MainSm@Data
 12699  00078E  0100               	movlb	0	; () banked
 12700  000790  6F60               	movwf	strcat@to& (0+255),b
 12701  000792  0E00               	movlw	high Term_MainSm@Data
 12702  000794  6F61               	movwf	(strcat@to+1)& (0+255),b
 12703  000796  0EBE               	movlw	low Term_MainSm@FwkBuildDayStr
 12704  000798  6F62               	movwf	strcat@from& (0+255),b
 12705  00079A  0E00               	movlw	high Term_MainSm@FwkBuildDayStr
 12706  00079C  6F63               	movwf	(strcat@from+1)& (0+255),b
 12707  00079E  5162               	movf	strcat@from& (0+255),w,b
 12708  0007A0  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12709  0007A2  A4D8               	btfss	status,2,c
 12710  0007A4  0E20               	movlw	32
 12711  0007A6  6F64               	movwf	(strcat@from+2)& (0+255),b
 12712  0007A8  EC29  F020         	call	_strcat	;wreg free
 12713                           
 12714                           ;term.c: 770: strcat(Data,"-");
 12715  0007AC  0E80               	movlw	low Term_MainSm@Data
 12716  0007AE  0100               	movlb	0	; () banked
 12717  0007B0  6F60               	movwf	strcat@to& (0+255),b
 12718  0007B2  0E00               	movlw	high Term_MainSm@Data
 12719  0007B4  6F61               	movwf	(strcat@to+1)& (0+255),b
 12720  0007B6  0EE9               	movlw	low STR_63
 12721  0007B8  6F62               	movwf	strcat@from& (0+255),b
 12722  0007BA  0EFF               	movlw	high STR_63
 12723  0007BC  6F63               	movwf	(strcat@from+1)& (0+255),b
 12724  0007BE  5162               	movf	strcat@from& (0+255),w,b
 12725  0007C0  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12726  0007C2  A4D8               	btfss	status,2,c
 12727  0007C4  0E00               	movlw	low (__mediumconst shr (0+16))
 12728  0007C6  6F64               	movwf	(strcat@from+2)& (0+255),b
 12729  0007C8  EC29  F020         	call	_strcat	;wreg free
 12730                           
 12731                           ;term.c: 771: strcat(Data,FwkBuildMonthStr);
 12732  0007CC  0E80               	movlw	low Term_MainSm@Data
 12733  0007CE  0100               	movlb	0	; () banked
 12734  0007D0  6F60               	movwf	strcat@to& (0+255),b
 12735  0007D2  0E00               	movlw	high Term_MainSm@Data
 12736  0007D4  6F61               	movwf	(strcat@to+1)& (0+255),b
 12737  0007D6  0EC2               	movlw	low Term_MainSm@FwkBuildMonthStr
 12738  0007D8  6F62               	movwf	strcat@from& (0+255),b
 12739  0007DA  0E00               	movlw	high Term_MainSm@FwkBuildMonthStr
 12740  0007DC  6F63               	movwf	(strcat@from+1)& (0+255),b
 12741  0007DE  5162               	movf	strcat@from& (0+255),w,b
 12742  0007E0  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12743  0007E2  A4D8               	btfss	status,2,c
 12744  0007E4  0E20               	movlw	32
 12745  0007E6  6F64               	movwf	(strcat@from+2)& (0+255),b
 12746  0007E8  EC29  F020         	call	_strcat	;wreg free
 12747                           
 12748                           ;term.c: 772: strcat(Data,"-");
 12749  0007EC  0E80               	movlw	low Term_MainSm@Data
 12750  0007EE  0100               	movlb	0	; () banked
 12751  0007F0  6F60               	movwf	strcat@to& (0+255),b
 12752  0007F2  0E00               	movlw	high Term_MainSm@Data
 12753  0007F4  6F61               	movwf	(strcat@to+1)& (0+255),b
 12754  0007F6  0EE9               	movlw	low STR_63
 12755  0007F8  6F62               	movwf	strcat@from& (0+255),b
 12756  0007FA  0EFF               	movlw	high STR_63
 12757  0007FC  6F63               	movwf	(strcat@from+1)& (0+255),b
 12758  0007FE  5162               	movf	strcat@from& (0+255),w,b
 12759  000800  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12760  000802  A4D8               	btfss	status,2,c
 12761  000804  0E00               	movlw	low (__mediumconst shr (0+16))
 12762  000806  6F64               	movwf	(strcat@from+2)& (0+255),b
 12763  000808  EC29  F020         	call	_strcat	;wreg free
 12764                           
 12765                           ;term.c: 773: strcat(Data,FwkBuildYearStr);
 12766  00080C  0E80               	movlw	low Term_MainSm@Data
 12767  00080E  0100               	movlb	0	; () banked
 12768  000810  6F60               	movwf	strcat@to& (0+255),b
 12769  000812  0E00               	movlw	high Term_MainSm@Data
 12770  000814  6F61               	movwf	(strcat@to+1)& (0+255),b
 12771  000816  0EC6               	movlw	low Term_MainSm@FwkBuildYearStr
 12772  000818  6F62               	movwf	strcat@from& (0+255),b
 12773  00081A  0E00               	movlw	high Term_MainSm@FwkBuildYearStr
 12774  00081C  6F63               	movwf	(strcat@from+1)& (0+255),b
 12775  00081E  5162               	movf	strcat@from& (0+255),w,b
 12776  000820  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12777  000822  A4D8               	btfss	status,2,c
 12778  000824  0E20               	movlw	32
 12779  000826  6F64               	movwf	(strcat@from+2)& (0+255),b
 12780  000828  EC29  F020         	call	_strcat	;wreg free
 12781                           
 12782                           ;term.c: 774: strcat(Data,"\r\n");
 12783  00082C  0E80               	movlw	low Term_MainSm@Data
 12784  00082E  0100               	movlb	0	; () banked
 12785  000830  6F60               	movwf	strcat@to& (0+255),b
 12786  000832  0E00               	movlw	high Term_MainSm@Data
 12787  000834  6F61               	movwf	(strcat@to+1)& (0+255),b
 12788  000836  0E87               	movlw	low (STR_31+8)
 12789  000838  6F62               	movwf	strcat@from& (0+255),b
 12790  00083A  0EFF               	movlw	high (STR_31+8)
 12791  00083C  6F63               	movwf	(strcat@from+1)& (0+255),b
 12792  00083E  5162               	movf	strcat@from& (0+255),w,b
 12793  000840  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12794  000842  A4D8               	btfss	status,2,c
 12795  000844  0E00               	movlw	low (__mediumconst shr (0+16))
 12796  000846  6F64               	movwf	(strcat@from+2)& (0+255),b
 12797  000848  EC29  F020         	call	_strcat	;wreg free
 12798                           
 12799                           ;term.c: 776: putUSBUSART((void*)Data,strlen(Data));
 12800  00084C  0E80               	movlw	low Term_MainSm@Data
 12801  00084E  0100               	movlb	0	; () banked
 12802  000850  6F66               	movwf	putUSBUSART@data& (0+255),b
 12803  000852  0E00               	movlw	high Term_MainSm@Data
 12804  000854  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12805  000856  0E80               	movlw	low Term_MainSm@Data
 12806  000858  6F60               	movwf	strlen@s& (0+255),b
 12807  00085A  0E00               	movlw	high Term_MainSm@Data
 12808  00085C  6F61               	movwf	(strlen@s+1)& (0+255),b
 12809  00085E  EC6E  F021         	call	_strlen	;wreg free
 12810  000862  0100               	movlb	0	; () banked
 12811  000864  5160               	movf	?_strlen& (0+255),w,b
 12812  000866  6F68               	movwf	putUSBUSART@length& (0+255),b
 12813  000868  EC28  F026         	call	_putUSBUSART	;wreg free
 12814                           
 12815                           ;term.c: 778: TermMainSmState = Term_SysInitState;
 12816  00086C  0E07               	movlw	7
 12817  00086E  0101               	movlb	1	; () banked
 12818  000870  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12819                           
 12820                           ; BSR set to: 1
 12821                           ;term.c: 779: }
 12822                           ;term.c: 780: break;
 12823  000872  0012               	return	
 12824  000874                     
 12825                           ; BSR set to: 1
 12826                           ;term.c: 784: if((cdc_trf_state == 0))
 12827                           
 12828                           ; BSR set to: 1
 12829  000874  0100               	movlb	0	; () banked
 12830  000876  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12831  000878  A4D8               	btfss	status,2,c
 12832  00087A  0012               	return	
 12833                           
 12834                           ; BSR set to: 0
 12835                           ;term.c: 785: {
 12836                           ;term.c: 787: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 12837  00087C  0EDD               	movlw	low _MsgReady
 12838  00087E  6F66               	movwf	putUSBUSART@data& (0+255),b
 12839  000880  0EFE               	movlw	high _MsgReady
 12840  000882  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12841  000884  0E16               	movlw	22
 12842  000886  6F68               	movwf	putUSBUSART@length& (0+255),b
 12843  000888  EC28  F026         	call	_putUSBUSART	;wreg free
 12844                           
 12845                           ;term.c: 789: TermMainSmState = Term_FinalState;
 12846  00088C  0E08               	movlw	8
 12847  00088E  0101               	movlb	1	; () banked
 12848  000890  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12849                           
 12850                           ; BSR set to: 1
 12851                           ;term.c: 790: }
 12852                           ;term.c: 791: break;
 12853  000892  0012               	return	
 12854  000894                     
 12855                           ; BSR set to: 1
 12856                           ;term.c: 795: Terminal();
 12857                           
 12858                           ; BSR set to: 1
 12859  000894  EC68  F000         	call	_Terminal	;wreg free
 12860                           
 12861                           ;term.c: 800: }
 12862                           
 12863                           ;term.c: 799: break;
 12864                           
 12865                           ;term.c: 798: default:
 12866                           
 12867                           ;term.c: 796: break;
 12868  000898  0012               	return	
 12869  00089A                     l2091:
 12870  00089A  0101               	movlb	1	; () banked
 12871  00089C  5156               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 12872                           
 12873                           ; Switch size 1, requested type "space"
 12874                           ; Number of cases is 9, Range of values is 0 to 8
 12875                           ; switch strategies available:
 12876                           ; Name         Instructions Cycles
 12877                           ; simple_byte           28    15 (average)
 12878                           ;	Chosen strategy is simple_byte
 12879  00089E  0A00               	xorlw	0	; case 0
 12880  0008A0  B4D8               	btfsc	status,2,c
 12881  0008A2  D621               	goto	l2092
 12882  0008A4  0A01               	xorlw	1	; case 1
 12883  0008A6  B4D8               	btfsc	status,2,c
 12884  0008A8  D631               	goto	l2094
 12885  0008AA  0A03               	xorlw	3	; case 2
 12886  0008AC  B4D8               	btfsc	status,2,c
 12887  0008AE  D63C               	goto	l2096
 12888  0008B0  0A01               	xorlw	1	; case 3
 12889  0008B2  B4D8               	btfsc	status,2,c
 12890  0008B4  D643               	goto	l2101
 12891  0008B6  0A07               	xorlw	7	; case 4
 12892  0008B8  B4D8               	btfsc	status,2,c
 12893  0008BA  D650               	goto	l2103
 12894  0008BC  0A01               	xorlw	1	; case 5
 12895  0008BE  B4D8               	btfsc	status,2,c
 12896  0008C0  D65D               	goto	l2105
 12897  0008C2  0A03               	xorlw	3	; case 6
 12898  0008C4  B4D8               	btfsc	status,2,c
 12899  0008C6  D718               	goto	l2107
 12900  0008C8  0A01               	xorlw	1	; case 7
 12901  0008CA  B4D8               	btfsc	status,2,c
 12902  0008CC  D7D3               	goto	l2109
 12903  0008CE  0A0F               	xorlw	15	; case 8
 12904  0008D0  A4D8               	btfss	status,2,c
 12905  0008D2  0012               	return	
 12906  0008D4  D7DF               	goto	l2111
 12907  0008D6                     __end_of_Term_MainSm:
 12908                           	opt stack 0
 12909                           tosu	equ	0xFFF
 12910                           tosh	equ	0xFFE
 12911                           tosl	equ	0xFFD
 12912                           pclath	equ	0xFFA
 12913                           tblptru	equ	0xFF8
 12914                           tblptrh	equ	0xFF7
 12915                           tblptrl	equ	0xFF6
 12916                           tablat	equ	0xFF5
 12917                           prodh	equ	0xFF4
 12918                           prodl	equ	0xFF3
 12919                           intcon	equ	0xFF2
 12920                           intcon2	equ	0xFF1
 12921                           intcon3	equ	0xFF0
 12922                           indf0	equ	0xFEF
 12923                           postinc0	equ	0xFEE
 12924                           plusw0	equ	0xFEB
 12925                           fsr0h	equ	0xFEA
 12926                           fsr0l	equ	0xFE9
 12927                           wreg	equ	0xFE8
 12928                           indf1	equ	0xFE7
 12929                           postinc1	equ	0xFE6
 12930                           postdec1	equ	0xFE5
 12931                           fsr1h	equ	0xFE2
 12932                           fsr1l	equ	0xFE1
 12933                           indf2	equ	0xFDF
 12934                           postinc2	equ	0xFDE
 12935                           postdec2	equ	0xFDD
 12936                           plusw2	equ	0xFDB
 12937                           fsr2h	equ	0xFDA
 12938                           fsr2l	equ	0xFD9
 12939                           status	equ	0xFD8
 12940                           
 12941 ;; *************** function _memset *****************
 12942 ;; Defined at:
 12943 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 12944 ;; Parameters:    Size  Location     Type
 12945 ;;  p1              2    0[BANK0 ] PTR void 
 12946 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12947 ;;  c               2    2[BANK0 ] int 
 12948 ;;  n               2    4[BANK0 ] unsigned int 
 12949 ;; Auto vars:     Size  Location     Type
 12950 ;;  p               2    6[BANK0 ] PTR unsigned char 
 12951 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12952 ;; Return value:  Size  Location     Type
 12953 ;;                  2    0[BANK0 ] PTR void 
 12954 ;; Registers used:
 12955 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12956 ;; Tracked objects:
 12957 ;;		On entry : 0/0
 12958 ;;		On exit  : 0/0
 12959 ;;		Unchanged: 0/0
 12960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12961 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12962 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12964 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12965 ;;Total ram usage:        8 bytes
 12966 ;; Hardware stack levels used:    1
 12967 ;; Hardware stack levels required when called:   11
 12968 ;; This function calls:
 12969 ;;		Nothing
 12970 ;; This function is called by:
 12971 ;;		_USBDeviceInit
 12972 ;;		_USBStdSetCfgHandler
 12973 ;;		_Term_MainSm
 12974 ;; This function uses a non-reentrant model
 12975 ;;
 12976                           
 12977                           	psect	text53
 12978  004A34                     __ptext53:
 12979                           	opt stack 0
 12980  004A34                     _memset:
 12981                           	opt stack 14
 12982                           
 12983                           ;incstack = 0
 12984  004A34  C060  F066         	movff	memset@p1,memset@p
 12985  004A38  C061  F067         	movff	memset@p1+1,memset@p+1
 12986  004A3C  D009               	goto	l2589
 12987  004A3E                     l6499:
 12988  004A3E  C066  FFD9         	movff	memset@p,fsr2l
 12989  004A42  C067  FFDA         	movff	memset@p+1,fsr2h
 12990  004A46  C062  FFDF         	movff	memset@c,indf2
 12991  004A4A  0100               	movlb	0	; () banked
 12992  004A4C  4B66               	infsnz	memset@p& (0+255),f,b
 12993  004A4E  2B67               	incf	(memset@p+1)& (0+255),f,b
 12994  004A50                     l2589:
 12995                           
 12996                           ; BSR set to: 0
 12997  004A50  0100               	movlb	0	; () banked
 12998  004A52  0764               	decf	memset@n& (0+255),f,b
 12999  004A54  A0D8               	btfss	status,0,c
 13000  004A56  0765               	decf	(memset@n+1)& (0+255),f,b
 13001  004A58  2964               	incf	memset@n& (0+255),w,b
 13002  004A5A  E1F1               	bnz	l6499
 13003  004A5C  2965               	incf	(memset@n+1)& (0+255),w,b
 13004  004A5E  B4D8               	btfsc	status,2,c
 13005  004A60  0012               	return	
 13006  004A62  D7ED               	goto	l2590
 13007  004A64                     __end_of_memset:
 13008                           	opt stack 0
 13009                           tosu	equ	0xFFF
 13010                           tosh	equ	0xFFE
 13011                           tosl	equ	0xFFD
 13012                           pclath	equ	0xFFA
 13013                           tblptru	equ	0xFF8
 13014                           tblptrh	equ	0xFF7
 13015                           tblptrl	equ	0xFF6
 13016                           tablat	equ	0xFF5
 13017                           prodh	equ	0xFF4
 13018                           prodl	equ	0xFF3
 13019                           intcon	equ	0xFF2
 13020                           intcon2	equ	0xFF1
 13021                           intcon3	equ	0xFF0
 13022                           indf0	equ	0xFEF
 13023                           postinc0	equ	0xFEE
 13024                           plusw0	equ	0xFEB
 13025                           fsr0h	equ	0xFEA
 13026                           fsr0l	equ	0xFE9
 13027                           wreg	equ	0xFE8
 13028                           indf1	equ	0xFE7
 13029                           postinc1	equ	0xFE6
 13030                           postdec1	equ	0xFE5
 13031                           fsr1h	equ	0xFE2
 13032                           fsr1l	equ	0xFE1
 13033                           indf2	equ	0xFDF
 13034                           postinc2	equ	0xFDE
 13035                           postdec2	equ	0xFDD
 13036                           plusw2	equ	0xFDB
 13037                           fsr2h	equ	0xFDA
 13038                           fsr2l	equ	0xFD9
 13039                           status	equ	0xFD8
 13040                           
 13041 ;; *************** function _Terminal *****************
 13042 ;; Defined at:
 13043 ;;		line 416 in file "../Source/c/03_Sml/02_Ssl/term.c"
 13044 ;; Parameters:    Size  Location     Type
 13045 ;;		None
 13046 ;; Auto vars:     Size  Location     Type
 13047 ;;  Index           1   31[BANK0 ] unsigned char 
 13048 ;;  ReceivedByte    1   30[BANK0 ] unsigned char 
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  1    wreg      void 
 13051 ;; Registers used:
 13052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/0
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13059 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13060 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13061 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13062 ;;Total ram usage:        4 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:   14
 13065 ;; This function calls:
 13066 ;;		_I2cSlv_I2cReadMsgSts
 13067 ;;		_I2cSlv_ReceiveI2cMsg
 13068 ;;		_I2cSlv_SendI2cMsg
 13069 ;;		_atoi
 13070 ;;		_getsUSBUSART
 13071 ;;		_itoa
 13072 ;;		_putUSBUSART
 13073 ;;		_strtol
 13074 ;; This function is called by:
 13075 ;;		_Term_MainSm
 13076 ;; This function uses a non-reentrant model
 13077 ;;
 13078                           
 13079                           	psect	text54
 13080  0000D0                     __ptext54:
 13081                           	opt stack 0
 13082  0000D0                     _Terminal:
 13083                           	opt stack 12
 13084                           
 13085                           ;term.c: 418: static TermStateType TermState = Term_GetData;
 13086                           ;term.c: 419: static UINT8 UsbRxBuffer[200u];
 13087                           ;term.c: 420: static UINT8 UsbTxBuffer[200u];
 13088                           ;term.c: 421: static UINT8 TermTxBuffer[50u];
 13089                           ;term.c: 422: static UINT8 TermRxBuffer[50u];
 13090                           ;term.c: 423: UINT8 Index;
 13091                           ;term.c: 424: static UINT8 Len[4];
 13092                           ;term.c: 425: static UINT8 PackageLen;
 13093                           ;term.c: 426: static UINT8 Addr[4];
 13094                           ;term.c: 427: static UINT8 SlaveAddr;
 13095                           ;term.c: 428: static PayloadType Payload[25];
 13096                           ;term.c: 429: UINT8 ReceivedBytes = 0;
 13097                           
 13098                           ; BSR set to: 0
 13099                           ;incstack = 0
 13100  0000D0  0E00               	movlw	0
 13101  0000D2  0100               	movlb	0	; () banked
 13102  0000D4  6F7E               	movwf	Terminal@ReceivedBytes& (0+255),b
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;term.c: 431: static UINT8 FormatOption = 0u;
 13106                           ;term.c: 432: static UINT8 EchoOption = 1u;
 13107                           ;term.c: 435: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 13108  0000D6  0E1F               	movlw	31
 13109  0000D8  65FD               	cpfsgt	_USBDeviceState& (0+255),b
 13110  0000DA  0012               	return	
 13111                           
 13112                           ; BSR set to: 0
 13113  0000DC  B265               	btfsc	3941,1,c	;volatile
 13114  0000DE  0012               	return	
 13115  0000E0  D1F4               	goto	l2041
 13116  0000E2                     
 13117                           ;term.c: 442: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 13118                           
 13119                           ; BSR set to: 0
 13120  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 13121  0000E4  0100               	movlb	0	; () banked
 13122  0000E6  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 13123  0000E8  0E03               	movlw	high Terminal@UsbRxBuffer
 13124  0000EA  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 13125  0000EC  0EC8               	movlw	200
 13126  0000EE  6F69               	movwf	getsUSBUSART@len& (0+255),b
 13127  0000F0  ECB2  F01B         	call	_getsUSBUSART	;wreg free
 13128  0000F4  0100               	movlb	0	; () banked
 13129  0000F6  6F7E               	movwf	Terminal@ReceivedBytes& (0+255),b
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;term.c: 445: if (ReceivedBytes > 0)
 13133  0000F8  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13134  0000FA  B4D8               	btfsc	status,2,c
 13135  0000FC  0012               	return	
 13136                           
 13137                           ; BSR set to: 0
 13138                           ;term.c: 446: {
 13139                           ;term.c: 448: if (EchoOption == 1u)
 13140  0000FE  0101               	movlb	1	; () banked
 13141  000100  05E0               	decf	Terminal@EchoOption& (0+255),w,b
 13142  000102  A4D8               	btfss	status,2,c
 13143  000104  D026               	goto	l2045
 13144                           
 13145                           ; BSR set to: 1
 13146                           ;term.c: 449: {
 13147                           ;term.c: 451: if((cdc_trf_state == 0))
 13148  000106  0100               	movlb	0	; () banked
 13149  000108  51FB               	movf	_cdc_trf_state& (0+255),w,b
 13150  00010A  A4D8               	btfss	status,2,c
 13151  00010C  D022               	goto	l2045
 13152                           
 13153                           ; BSR set to: 0
 13154                           ;term.c: 452: {
 13155                           ;term.c: 453: UsbRxBuffer[ReceivedBytes] = '\r';
 13156  00010E  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13157  000110  0D01               	mullw	1
 13158  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 13159  000114  24F3               	addwf	prodl,w,c
 13160  000116  6ED9               	movwf	fsr2l,c
 13161  000118  0E03               	movlw	high Terminal@UsbRxBuffer
 13162  00011A  20F4               	addwfc	prodh,w,c
 13163  00011C  6EDA               	movwf	fsr2h,c
 13164  00011E  0E0D               	movlw	13
 13165  000120  6EDF               	movwf	indf2,c
 13166                           
 13167                           ; BSR set to: 0
 13168                           ;term.c: 454: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 13169  000122  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13170  000124  6F7C               	movwf	??_Terminal& (0+255),b
 13171  000126  6B7D               	clrf	(??_Terminal+1)& (0+255),b
 13172  000128  0E01               	movlw	1
 13173  00012A  277C               	addwf	??_Terminal& (0+255),f,b
 13174  00012C  0E00               	movlw	0
 13175  00012E  237D               	addwfc	(??_Terminal+1)& (0+255),f,b
 13176  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 13177  000132  257C               	addwf	??_Terminal& (0+255),w,b
 13178  000134  6ED9               	movwf	fsr2l,c
 13179  000136  0E03               	movlw	high Terminal@UsbRxBuffer
 13180  000138  217D               	addwfc	(??_Terminal+1)& (0+255),w,b
 13181  00013A  6EDA               	movwf	fsr2h,c
 13182  00013C  0E0A               	movlw	10
 13183  00013E  6EDF               	movwf	indf2,c
 13184                           
 13185                           ; BSR set to: 0
 13186                           ;term.c: 455: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 13187  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 13188  000142  6F66               	movwf	putUSBUSART@data& (0+255),b
 13189  000144  0E03               	movlw	high Terminal@UsbRxBuffer
 13190  000146  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13191  000148  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13192  00014A  0F02               	addlw	2
 13193  00014C  6F68               	movwf	putUSBUSART@length& (0+255),b
 13194  00014E  EC28  F026         	call	_putUSBUSART	;wreg free
 13195  000152                     l2045:
 13196                           
 13197                           ;term.c: 456: }
 13198                           ;term.c: 457: }
 13199                           ;term.c: 460: if ((UsbRxBuffer[0u] == 'S') &&
 13200                           ;term.c: 461: (UsbRxBuffer[0u + 1u] == 'O') &&
 13201                           ;term.c: 462: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13202  000152  0E53               	movlw	83
 13203  000154  0103               	movlb	3	; () banked
 13204  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13205  000158  A4D8               	btfss	status,2,c
 13206  00015A  D043               	goto	l2046
 13207                           
 13208                           ; BSR set to: 3
 13209  00015C  0E4F               	movlw	79
 13210  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13211  000160  A4D8               	btfss	status,2,c
 13212  000162  D03F               	goto	l2046
 13213                           
 13214                           ; BSR set to: 3
 13215  000164  0E3A               	movlw	58
 13216  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13217  000168  A4D8               	btfss	status,2,c
 13218  00016A  D03B               	goto	l2046
 13219                           
 13220                           ; BSR set to: 3
 13221                           ;term.c: 463: {
 13222                           ;term.c: 465: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13223  00016C  0E47               	movlw	71
 13224  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13225  000170  A4D8               	btfss	status,2,c
 13226  000172  0012               	return	
 13227                           
 13228                           ; BSR set to: 3
 13229  000174  0E3A               	movlw	58
 13230  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13231  000178  A4D8               	btfss	status,2,c
 13232  00017A  0012               	return	
 13233                           
 13234                           ; BSR set to: 3
 13235                           ;term.c: 466: {
 13236                           ;term.c: 468: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 13237  00017C  0E44               	movlw	68
 13238  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13239  000180  A4D8               	btfss	status,2,c
 13240  000182  D015               	goto	l2048
 13241                           
 13242                           ; BSR set to: 3
 13243  000184  0E46               	movlw	70
 13244  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13245  000188  A4D8               	btfss	status,2,c
 13246  00018A  D011               	goto	l2048
 13247                           
 13248                           ; BSR set to: 3
 13249                           ;term.c: 469: {
 13250                           ;term.c: 470: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 13251  00018C  0E41               	movlw	65
 13252  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13253  000190  A4D8               	btfss	status,2,c
 13254  000192  D004               	goto	l2049
 13255                           
 13256                           ; BSR set to: 3
 13257                           ;term.c: 471: {
 13258                           ;term.c: 472: FormatOption = 1u;
 13259  000194  0E01               	movlw	1
 13260  000196  0101               	movlb	1	; () banked
 13261  000198  6F57               	movwf	Terminal@FormatOption& (0+255),b
 13262                           
 13263                           ;term.c: 473: }
 13264  00019A  0012               	return	
 13265  00019C                     l2049:
 13266                           
 13267                           ;term.c: 474: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 13268                           
 13269                           ; BSR set to: 1
 13270  00019C  0E42               	movlw	66
 13271  00019E  0103               	movlb	3	; () banked
 13272  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13273  0001A2  A4D8               	btfss	status,2,c
 13274  0001A4  0012               	return	
 13275                           
 13276                           ; BSR set to: 3
 13277                           ;term.c: 475: {
 13278                           ;term.c: 476: FormatOption = 0u;
 13279  0001A6  0E00               	movlw	0
 13280  0001A8  0101               	movlb	1	; () banked
 13281  0001AA  6F57               	movwf	Terminal@FormatOption& (0+255),b
 13282                           
 13283                           ; BSR set to: 1
 13284                           ;term.c: 477: }
 13285                           ;term.c: 478: }
 13286                           
 13287                           ; BSR set to: 1
 13288  0001AC  0012               	return	
 13289  0001AE                     l2048:
 13290                           
 13291                           ;term.c: 480: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 13292                           
 13293                           ; BSR set to: 1
 13294  0001AE  0E45               	movlw	69
 13295  0001B0  0103               	movlb	3	; () banked
 13296  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13297  0001B4  A4D8               	btfss	status,2,c
 13298  0001B6  0012               	return	
 13299                           
 13300                           ; BSR set to: 3
 13301  0001B8  0E4D               	movlw	77
 13302  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13303  0001BC  A4D8               	btfss	status,2,c
 13304  0001BE  0012               	return	
 13305                           
 13306                           ; BSR set to: 3
 13307                           ;term.c: 481: {
 13308                           ;term.c: 482: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 13309  0001C0  0E31               	movlw	49
 13310  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13311  0001C4  A4D8               	btfss	status,2,c
 13312  0001C6  D004               	goto	l2054
 13313                           
 13314                           ; BSR set to: 3
 13315                           ;term.c: 483: {
 13316                           ;term.c: 484: EchoOption = 1u;
 13317  0001C8  0E01               	movlw	1
 13318  0001CA  0101               	movlb	1	; () banked
 13319  0001CC  6FE0               	movwf	Terminal@EchoOption& (0+255),b
 13320                           
 13321                           ;term.c: 485: }
 13322  0001CE  0012               	return	
 13323  0001D0                     l2054:
 13324                           
 13325                           ;term.c: 486: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 13326                           
 13327                           ; BSR set to: 1
 13328  0001D0  0E30               	movlw	48
 13329  0001D2  0103               	movlb	3	; () banked
 13330  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13331  0001D6  A4D8               	btfss	status,2,c
 13332  0001D8  0012               	return	
 13333                           
 13334                           ; BSR set to: 3
 13335                           ;term.c: 487: {
 13336                           ;term.c: 488: EchoOption = 0u;
 13337  0001DA  0E00               	movlw	0
 13338  0001DC  0101               	movlb	1	; () banked
 13339  0001DE  6FE0               	movwf	Terminal@EchoOption& (0+255),b
 13340                           
 13341                           ; BSR set to: 1
 13342                           ;term.c: 494: }
 13343                           ;term.c: 495: }
 13344                           ;term.c: 496: }
 13345                           
 13346                           ; BSR set to: 1
 13347                           
 13348                           ; BSR set to: 1
 13349                           
 13350                           ;term.c: 491: else
 13351                           ;term.c: 492: {
 13352                           
 13353                           ; BSR set to: 1
 13354                           
 13355                           ; BSR set to: 1
 13356                           ;term.c: 489: }
 13357                           ;term.c: 490: }
 13358                           
 13359                           ; BSR set to: 1
 13360  0001E0  0012               	return	
 13361  0001E2                     l2046:
 13362                           
 13363                           ;term.c: 497: else if ((UsbRxBuffer[0u] == 'S') &&
 13364                           ;term.c: 498: (UsbRxBuffer[0u + 1u] == 'B') &&
 13365                           ;term.c: 499: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13366                           
 13367                           ; BSR set to: 1
 13368  0001E2  0E53               	movlw	83
 13369  0001E4  0103               	movlb	3	; () banked
 13370  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13371  0001E8  A4D8               	btfss	status,2,c
 13372  0001EA  0012               	return	
 13373                           
 13374                           ; BSR set to: 3
 13375  0001EC  0E42               	movlw	66
 13376  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13377  0001F0  A4D8               	btfss	status,2,c
 13378  0001F2  0012               	return	
 13379                           
 13380                           ; BSR set to: 3
 13381  0001F4  0E3A               	movlw	58
 13382  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13383  0001F8  A4D8               	btfss	status,2,c
 13384  0001FA  0012               	return	
 13385                           
 13386                           ; BSR set to: 3
 13387                           ;term.c: 500: {
 13388                           ;term.c: 501: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13389  0001FC  0E57               	movlw	87
 13390  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13391  000200  A4D8               	btfss	status,2,c
 13392  000202  D089               	goto	l2060
 13393                           
 13394                           ; BSR set to: 3
 13395  000204  0E3A               	movlw	58
 13396  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13397  000208  A4D8               	btfss	status,2,c
 13398  00020A  D085               	goto	l2060
 13399                           
 13400                           ; BSR set to: 3
 13401                           ;term.c: 502: {
 13402                           ;term.c: 504: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13403  00020C  C305  F1B5         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13404                           
 13405                           ;term.c: 505: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13406  000210  C306  F1B6         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13407                           
 13408                           ;term.c: 507: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13409  000214  C308  F1B1         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13410                           
 13411                           ;term.c: 508: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13412  000218  C309  F1B2         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13413                           
 13414                           ; BSR set to: 3
 13415                           ;term.c: 510: PackageLen = atoi((void*)Len);
 13416  00021C  0EB5               	movlw	low Terminal@Len
 13417  00021E  0100               	movlb	0	; () banked
 13418  000220  6F66               	movwf	atoi@s& (0+255),b
 13419  000222  0E01               	movlw	high Terminal@Len
 13420  000224  6F67               	movwf	(atoi@s+1)& (0+255),b
 13421  000226  EC0A  F015         	call	_atoi	;wreg free
 13422  00022A  0100               	movlb	0	; () banked
 13423  00022C  5166               	movf	?_atoi& (0+255),w,b
 13424  00022E  6FFA               	movwf	Terminal@PackageLen& (0+255),b
 13425                           
 13426                           ;term.c: 511: SlaveAddr = atoi((void*)Addr);
 13427  000230  0EB1               	movlw	low Terminal@Addr
 13428  000232  6F66               	movwf	atoi@s& (0+255),b
 13429  000234  0E01               	movlw	high Terminal@Addr
 13430  000236  6F67               	movwf	(atoi@s+1)& (0+255),b
 13431  000238  EC0A  F015         	call	_atoi	;wreg free
 13432  00023C  0100               	movlb	0	; () banked
 13433  00023E  5166               	movf	?_atoi& (0+255),w,b
 13434  000240  0101               	movlb	1	; () banked
 13435  000242  6F58               	movwf	Terminal@SlaveAddr& (0+255),b
 13436                           
 13437                           ; BSR set to: 1
 13438                           ;term.c: 513: for (Index = 0; Index <= PackageLen; Index++)
 13439  000244  0E00               	movlw	0
 13440  000246  0100               	movlb	0	; () banked
 13441  000248  6F7F               	movwf	Terminal@Index& (0+255),b
 13442  00024A  D031               	goto	l2061
 13443  00024C                     
 13444                           ; BSR set to: 0
 13445                           ;term.c: 514: {
 13446                           ;term.c: 515: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 13447                           
 13448                           ; BSR set to: 0
 13449  00024C  517F               	movf	Terminal@Index& (0+255),w,b
 13450  00024E  0D02               	mullw	2
 13451  000250  0E0B               	movlw	11
 13452  000252  26F3               	addwf	prodl,f,c
 13453  000254  0E00               	movlw	0
 13454  000256  22F4               	addwfc	prodh,f,c
 13455  000258  0E00               	movlw	low Terminal@UsbRxBuffer
 13456  00025A  24F3               	addwf	prodl,w,c
 13457  00025C  6ED9               	movwf	fsr2l,c
 13458  00025E  0E03               	movlw	high Terminal@UsbRxBuffer
 13459  000260  20F4               	addwfc	prodh,w,c
 13460  000262  6EDA               	movwf	fsr2h,c
 13461  000264  517F               	movf	Terminal@Index& (0+255),w,b
 13462  000266  0D04               	mullw	4
 13463  000268  0E40               	movlw	low Terminal@Payload
 13464  00026A  24F3               	addwf	prodl,w,c
 13465  00026C  6EE1               	movwf	fsr1l,c
 13466  00026E  0E04               	movlw	high Terminal@Payload
 13467  000270  20F4               	addwfc	prodh,w,c
 13468  000272  6EE2               	movwf	fsr1h,c
 13469  000274  CFDF FFE7          	movff	indf2,indf1
 13470                           
 13471                           ;term.c: 516: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 13472  000278  517F               	movf	Terminal@Index& (0+255),w,b
 13473  00027A  0D02               	mullw	2
 13474  00027C  0E0C               	movlw	12
 13475  00027E  26F3               	addwf	prodl,f,c
 13476  000280  0E00               	movlw	0
 13477  000282  22F4               	addwfc	prodh,f,c
 13478  000284  0E00               	movlw	low Terminal@UsbRxBuffer
 13479  000286  24F3               	addwf	prodl,w,c
 13480  000288  6ED9               	movwf	fsr2l,c
 13481  00028A  0E03               	movlw	high Terminal@UsbRxBuffer
 13482  00028C  20F4               	addwfc	prodh,w,c
 13483  00028E  6EDA               	movwf	fsr2h,c
 13484  000290  517F               	movf	Terminal@Index& (0+255),w,b
 13485  000292  0D04               	mullw	4
 13486  000294  0E01               	movlw	1
 13487  000296  26F3               	addwf	prodl,f,c
 13488  000298  0E00               	movlw	0
 13489  00029A  22F4               	addwfc	prodh,f,c
 13490  00029C  0E40               	movlw	low Terminal@Payload
 13491  00029E  24F3               	addwf	prodl,w,c
 13492  0002A0  6EE1               	movwf	fsr1l,c
 13493  0002A2  0E04               	movlw	high Terminal@Payload
 13494  0002A4  20F4               	addwfc	prodh,w,c
 13495  0002A6  6EE2               	movwf	fsr1h,c
 13496  0002A8  CFDF FFE7          	movff	indf2,indf1
 13497                           
 13498                           ; BSR set to: 0
 13499  0002AC  2B7F               	incf	Terminal@Index& (0+255),f,b
 13500  0002AE                     l2061:
 13501                           
 13502                           ; BSR set to: 0
 13503                           
 13504                           ; BSR set to: 0
 13505  0002AE  517F               	movf	Terminal@Index& (0+255),w,b
 13506  0002B0  5DFA               	subwf	Terminal@PackageLen& (0+255),w,b
 13507  0002B2  B0D8               	btfsc	status,0,c
 13508  0002B4  D7CB               	goto	l2062
 13509                           
 13510                           ; BSR set to: 0
 13511                           ;term.c: 517: }
 13512                           ;term.c: 519: for (Index = 0; Index <= PackageLen; Index++)
 13513                           
 13514                           ; BSR set to: 0
 13515  0002B6  0E00               	movlw	0
 13516  0002B8  6F7F               	movwf	Terminal@Index& (0+255),b
 13517  0002BA  D01E               	goto	l2064
 13518  0002BC                     
 13519                           ; BSR set to: 0
 13520                           ;term.c: 520: {
 13521                           ;term.c: 524: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 13522                           
 13523                           ; BSR set to: 0
 13524  0002BC  517F               	movf	Terminal@Index& (0+255),w,b
 13525  0002BE  0D04               	mullw	4
 13526  0002C0  0E40               	movlw	low Terminal@Payload
 13527  0002C2  24F3               	addwf	prodl,w,c
 13528  0002C4  6F6C               	movwf	strtol@s& (0+255),b
 13529  0002C6  0E04               	movlw	high Terminal@Payload
 13530  0002C8  20F4               	addwfc	prodh,w,c
 13531  0002CA  6F6D               	movwf	(strtol@s+1)& (0+255),b
 13532  0002CC  0E00               	movlw	0
 13533  0002CE  6F6E               	movwf	strtol@endptr& (0+255),b
 13534  0002D0  0E00               	movlw	0
 13535  0002D2  6F6F               	movwf	(strtol@endptr+1)& (0+255),b
 13536  0002D4  0E00               	movlw	0
 13537  0002D6  6F71               	movwf	(strtol@base+1)& (0+255),b
 13538  0002D8  0E10               	movlw	16
 13539  0002DA  6F70               	movwf	strtol@base& (0+255),b
 13540  0002DC  ECC6  F00A         	call	_strtol	;wreg free
 13541  0002E0  0100               	movlb	0	; () banked
 13542  0002E2  517F               	movf	Terminal@Index& (0+255),w,b
 13543  0002E4  0D01               	mullw	1
 13544  0002E6  0EC8               	movlw	low Terminal@TermTxBuffer
 13545  0002E8  24F3               	addwf	prodl,w,c
 13546  0002EA  6ED9               	movwf	fsr2l,c
 13547  0002EC  0E03               	movlw	high Terminal@TermTxBuffer
 13548  0002EE  20F4               	addwfc	prodh,w,c
 13549  0002F0  6EDA               	movwf	fsr2h,c
 13550  0002F2  C06C  FFDF         	movff	?_strtol,indf2
 13551                           
 13552                           ; BSR set to: 0
 13553  0002F6  2B7F               	incf	Terminal@Index& (0+255),f,b
 13554  0002F8                     l2064:
 13555                           
 13556                           ; BSR set to: 0
 13557                           
 13558                           ; BSR set to: 0
 13559  0002F8  517F               	movf	Terminal@Index& (0+255),w,b
 13560  0002FA  5DFA               	subwf	Terminal@PackageLen& (0+255),w,b
 13561  0002FC  B0D8               	btfsc	status,0,c
 13562  0002FE  D7DE               	goto	l2065
 13563                           
 13564                           ; BSR set to: 0
 13565                           ;term.c: 526: }
 13566                           ;term.c: 529: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 13567                           
 13568                           ; BSR set to: 0
 13569  000300  0EC8               	movlw	low Terminal@TermTxBuffer
 13570  000302  6F63               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 13571  000304  0E03               	movlw	high Terminal@TermTxBuffer
 13572  000306  6F64               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 13573  000308  C158  F065         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 13574  00030C  C0FA  F066         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 13575  000310  EC0A  F024         	call	_I2cSlv_SendI2cMsg	;wreg free
 13576                           
 13577                           ;term.c: 530: }
 13578  000314  0012               	return	
 13579  000316                     l2060:
 13580                           
 13581                           ;term.c: 531: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 13582  000316  0E52               	movlw	82
 13583  000318  0103               	movlb	3	; () banked
 13584  00031A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13585  00031C  A4D8               	btfss	status,2,c
 13586  00031E  0012               	return	
 13587                           
 13588                           ; BSR set to: 3
 13589  000320  0E3A               	movlw	58
 13590  000322  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13591  000324  A4D8               	btfss	status,2,c
 13592  000326  0012               	return	
 13593                           
 13594                           ; BSR set to: 3
 13595                           ;term.c: 532: {
 13596                           ;term.c: 534: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13597  000328  C305  F1B5         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13598                           
 13599                           ;term.c: 535: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13600  00032C  C306  F1B6         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13601                           
 13602                           ;term.c: 537: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13603  000330  C308  F1B1         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13604                           
 13605                           ;term.c: 538: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13606  000334  C309  F1B2         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13607                           
 13608                           ; BSR set to: 3
 13609                           ;term.c: 540: PackageLen = atoi((void*)Len);
 13610  000338  0EB5               	movlw	low Terminal@Len
 13611  00033A  0100               	movlb	0	; () banked
 13612  00033C  6F66               	movwf	atoi@s& (0+255),b
 13613  00033E  0E01               	movlw	high Terminal@Len
 13614  000340  6F67               	movwf	(atoi@s+1)& (0+255),b
 13615  000342  EC0A  F015         	call	_atoi	;wreg free
 13616  000346  0100               	movlb	0	; () banked
 13617  000348  5166               	movf	?_atoi& (0+255),w,b
 13618  00034A  6FFA               	movwf	Terminal@PackageLen& (0+255),b
 13619                           
 13620                           ;term.c: 541: SlaveAddr = atoi((void*)Addr);
 13621  00034C  0EB1               	movlw	low Terminal@Addr
 13622  00034E  6F66               	movwf	atoi@s& (0+255),b
 13623  000350  0E01               	movlw	high Terminal@Addr
 13624  000352  6F67               	movwf	(atoi@s+1)& (0+255),b
 13625  000354  EC0A  F015         	call	_atoi	;wreg free
 13626  000358  0100               	movlb	0	; () banked
 13627  00035A  5166               	movf	?_atoi& (0+255),w,b
 13628  00035C  0101               	movlb	1	; () banked
 13629  00035E  6F58               	movwf	Terminal@SlaveAddr& (0+255),b
 13630                           
 13631                           ; BSR set to: 1
 13632                           ;term.c: 544: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 13633  000360  0E40               	movlw	low Terminal@TermRxBuffer
 13634  000362  0100               	movlb	0	; () banked
 13635  000364  6F63               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 13636  000366  0E02               	movlw	high Terminal@TermRxBuffer
 13637  000368  6F64               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 13638  00036A  C158  F065         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 13639  00036E  C0FA  F066         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 13640  000372  ECA5  F023         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 13641                           
 13642                           ;term.c: 547: TermState = Term_PrepSlvI2cResp;
 13643  000376  0E01               	movlw	1
 13644  000378  0101               	movlb	1	; () banked
 13645  00037A  6F59               	movwf	Terminal@TermState& (0+255),b
 13646                           
 13647                           ; BSR set to: 1
 13648                           ;term.c: 555: }
 13649                           ;term.c: 587: }
 13650                           ;term.c: 588: break;
 13651                           
 13652                           ; BSR set to: 1
 13653                           
 13654                           ; BSR set to: 1
 13655                           
 13656                           ; BSR set to: 1
 13657                           
 13658                           ;term.c: 553: {
 13659                           
 13660                           ; BSR set to: 1
 13661                           
 13662                           ; BSR set to: 1
 13663                           
 13664                           ; BSR set to: 1
 13665                           
 13666                           ; BSR set to: 1
 13667                           
 13668                           ; BSR set to: 1
 13669                           ;term.c: 548: }
 13670                           ;term.c: 549: }
 13671                           
 13672                           ; BSR set to: 1
 13673  00037C  0012               	return	
 13674  00037E                     
 13675                           ; BSR set to: 1
 13676                           ;term.c: 592: if((cdc_trf_state == 0))
 13677                           
 13678                           ; BSR set to: 1
 13679  00037E  0100               	movlb	0	; () banked
 13680  000380  51FB               	movf	_cdc_trf_state& (0+255),w,b
 13681  000382  A4D8               	btfss	status,2,c
 13682  000384  0012               	return	
 13683                           
 13684                           ; BSR set to: 0
 13685                           ;term.c: 593: {
 13686                           ;term.c: 594: UsbRxBuffer[0] = 'S';
 13687  000386  0E53               	movlw	83
 13688  000388  0103               	movlb	3	; () banked
 13689  00038A  6F00               	movwf	Terminal@UsbRxBuffer& (0+255),b
 13690                           
 13691                           ;term.c: 595: UsbRxBuffer[1] = 'B';
 13692  00038C  0E42               	movlw	66
 13693  00038E  6F01               	movwf	(Terminal@UsbRxBuffer+1)& (0+255),b
 13694                           
 13695                           ;term.c: 596: UsbRxBuffer[2] = '[';
 13696  000390  0E5B               	movlw	91
 13697  000392  6F02               	movwf	(Terminal@UsbRxBuffer+2)& (0+255),b
 13698                           
 13699                           ; BSR set to: 3
 13700                           ;term.c: 597: UsbRxBuffer[3] = Addr[0];
 13701  000394  C1B1  F303         	movff	Terminal@Addr,Terminal@UsbRxBuffer+3
 13702                           
 13703                           ; BSR set to: 3
 13704                           ;term.c: 598: UsbRxBuffer[4] = Addr[1];
 13705  000398  C1B2  F304         	movff	Terminal@Addr+1,Terminal@UsbRxBuffer+4
 13706                           
 13707                           ;term.c: 599: UsbRxBuffer[5] = ']';
 13708  00039C  0E5D               	movlw	93
 13709  00039E  6F05               	movwf	(Terminal@UsbRxBuffer+5)& (0+255),b
 13710                           
 13711                           ;term.c: 600: UsbRxBuffer[6] = ':';
 13712  0003A0  0E3A               	movlw	58
 13713  0003A2  6F06               	movwf	(Terminal@UsbRxBuffer+6)& (0+255),b
 13714                           
 13715                           ; BSR set to: 3
 13716                           ;term.c: 601: putUSBUSART(UsbRxBuffer,7);
 13717  0003A4  0E00               	movlw	low Terminal@UsbRxBuffer
 13718  0003A6  0100               	movlb	0	; () banked
 13719  0003A8  6F66               	movwf	putUSBUSART@data& (0+255),b
 13720  0003AA  0E03               	movlw	high Terminal@UsbRxBuffer
 13721  0003AC  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13722  0003AE  0E07               	movlw	7
 13723  0003B0  6F68               	movwf	putUSBUSART@length& (0+255),b
 13724  0003B2  EC28  F026         	call	_putUSBUSART	;wreg free
 13725                           
 13726                           ;term.c: 604: TermState = Term_ReadSlvI2cData;
 13727  0003B6  0E02               	movlw	2
 13728  0003B8  0101               	movlb	1	; () banked
 13729  0003BA  6F59               	movwf	Terminal@TermState& (0+255),b
 13730                           
 13731                           ; BSR set to: 1
 13732                           ;term.c: 605: }
 13733                           ;term.c: 606: break;
 13734  0003BC  0012               	return	
 13735  0003BE                     
 13736                           ; BSR set to: 1
 13737                           ;term.c: 610: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 13738                           
 13739                           ; BSR set to: 1
 13740  0003BE  EC4A  F026         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 13741  0003C2  06E8               	decf	wreg,f,c
 13742  0003C4  A4D8               	btfss	status,2,c
 13743  0003C6  0012               	return	
 13744                           
 13745                           ;term.c: 611: {
 13746                           ;term.c: 613: if (FormatOption == 1u)
 13747  0003C8  0101               	movlb	1	; () banked
 13748  0003CA  0557               	decf	Terminal@FormatOption& (0+255),w,b
 13749  0003CC  A4D8               	btfss	status,2,c
 13750  0003CE  D025               	goto	u6780
 13751                           
 13752                           ; BSR set to: 1
 13753                           ;term.c: 614: {
 13754                           ;term.c: 616: for (Index = 0; Index <= PackageLen; Index++)
 13755  0003D0  0E00               	movlw	0
 13756  0003D2  0100               	movlb	0	; () banked
 13757  0003D4  6F7F               	movwf	Terminal@Index& (0+255),b
 13758  0003D6  D01D               	goto	l2077
 13759  0003D8                     
 13760                           ; BSR set to: 0
 13761                           ;term.c: 617: {
 13762                           ;term.c: 618: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 13763                           
 13764                           ; BSR set to: 0
 13765  0003D8  517F               	movf	Terminal@Index& (0+255),w,b
 13766  0003DA  0D04               	mullw	4
 13767  0003DC  0E40               	movlw	low Terminal@Payload
 13768  0003DE  24F3               	addwf	prodl,w,c
 13769  0003E0  6F70               	movwf	itoa@buf& (0+255),b
 13770  0003E2  0E04               	movlw	high Terminal@Payload
 13771  0003E4  20F4               	addwfc	prodh,w,c
 13772  0003E6  6F71               	movwf	(itoa@buf+1)& (0+255),b
 13773  0003E8  517F               	movf	Terminal@Index& (0+255),w,b
 13774  0003EA  0D01               	mullw	1
 13775  0003EC  0E40               	movlw	low Terminal@TermRxBuffer
 13776  0003EE  24F3               	addwf	prodl,w,c
 13777  0003F0  6ED9               	movwf	fsr2l,c
 13778  0003F2  0E02               	movlw	high Terminal@TermRxBuffer
 13779  0003F4  20F4               	addwfc	prodh,w,c
 13780  0003F6  6EDA               	movwf	fsr2h,c
 13781  0003F8  50DF               	movf	indf2,w,c
 13782  0003FA  6F7C               	movwf	??_Terminal& (0+255),b
 13783  0003FC  517C               	movf	??_Terminal& (0+255),w,b
 13784  0003FE  6F72               	movwf	itoa@val& (0+255),b
 13785  000400  6B73               	clrf	(itoa@val+1)& (0+255),b
 13786  000402  0E00               	movlw	0
 13787  000404  6F75               	movwf	(itoa@base+1)& (0+255),b
 13788  000406  0E0A               	movlw	10
 13789  000408  6F74               	movwf	itoa@base& (0+255),b
 13790  00040A  EC83  F023         	call	_itoa	;wreg free
 13791  00040E  0100               	movlb	0	; () banked
 13792  000410  2B7F               	incf	Terminal@Index& (0+255),f,b
 13793  000412                     l2077:
 13794                           
 13795                           ; BSR set to: 0
 13796                           
 13797                           ; BSR set to: 0
 13798  000412  517F               	movf	Terminal@Index& (0+255),w,b
 13799  000414  5DFA               	subwf	Terminal@PackageLen& (0+255),w,b
 13800  000416  B0D8               	btfsc	status,0,c
 13801  000418  D7DF               	goto	l2078
 13802  00041A                     u6780:
 13803                           
 13804                           ;term.c: 619: }
 13805                           ;term.c: 620: }
 13806                           ;term.c: 623: if((cdc_trf_state == 0))
 13807                           
 13808                           ; BSR set to: 0
 13809                           
 13810                           ; BSR set to: 0
 13811  00041A  0100               	movlb	0	; () banked
 13812  00041C  51FB               	movf	_cdc_trf_state& (0+255),w,b
 13813  00041E  A4D8               	btfss	status,2,c
 13814  000420  0012               	return	
 13815                           
 13816                           ; BSR set to: 0
 13817                           ;term.c: 624: {
 13818                           ;term.c: 626: if (FormatOption == 1u)
 13819  000422  0101               	movlb	1	; () banked
 13820  000424  0557               	decf	Terminal@FormatOption& (0+255),w,b
 13821  000426  A4D8               	btfss	status,2,c
 13822  000428  D029               	goto	l2081
 13823                           
 13824                           ; BSR set to: 1
 13825                           ;term.c: 627: {
 13826                           ;term.c: 628: Payload[(2*PackageLen)].Byte[3] = '\r';
 13827  00042A  0100               	movlb	0	; () banked
 13828  00042C  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13829  00042E  0D08               	mullw	8
 13830  000430  0E03               	movlw	3
 13831  000432  26F3               	addwf	prodl,f,c
 13832  000434  0E00               	movlw	0
 13833  000436  22F4               	addwfc	prodh,f,c
 13834  000438  0E40               	movlw	low Terminal@Payload
 13835  00043A  24F3               	addwf	prodl,w,c
 13836  00043C  6ED9               	movwf	fsr2l,c
 13837  00043E  0E04               	movlw	high Terminal@Payload
 13838  000440  20F4               	addwfc	prodh,w,c
 13839  000442  6EDA               	movwf	fsr2h,c
 13840  000444  0E0D               	movlw	13
 13841  000446  6EDF               	movwf	indf2,c
 13842                           
 13843                           ;term.c: 629: Payload[(2*PackageLen)].Byte[2] = '\n';
 13844  000448  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13845  00044A  0D08               	mullw	8
 13846  00044C  0E02               	movlw	2
 13847  00044E  26F3               	addwf	prodl,f,c
 13848  000450  0E00               	movlw	0
 13849  000452  22F4               	addwfc	prodh,f,c
 13850  000454  0E40               	movlw	low Terminal@Payload
 13851  000456  24F3               	addwf	prodl,w,c
 13852  000458  6ED9               	movwf	fsr2l,c
 13853  00045A  0E04               	movlw	high Terminal@Payload
 13854  00045C  20F4               	addwfc	prodh,w,c
 13855  00045E  6EDA               	movwf	fsr2h,c
 13856  000460  0E0A               	movlw	10
 13857  000462  6EDF               	movwf	indf2,c
 13858                           
 13859                           ; BSR set to: 0
 13860                           ;term.c: 631: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 13861  000464  0E40               	movlw	low Terminal@Payload
 13862  000466  6F66               	movwf	putUSBUSART@data& (0+255),b
 13863  000468  0E04               	movlw	high Terminal@Payload
 13864  00046A  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13865  00046C  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13866  00046E  0D02               	mullw	2
 13867  000470  50F3               	movf	prodl,w,c
 13868  000472  0F04               	addlw	4
 13869  000474  6F68               	movwf	putUSBUSART@length& (0+255),b
 13870  000476  EC28  F026         	call	_putUSBUSART	;wreg free
 13871                           
 13872                           ;term.c: 632: }
 13873  00047A  D023               	goto	l2082
 13874  00047C                     l2081:
 13875                           
 13876                           ;term.c: 633: else
 13877                           ;term.c: 634: {
 13878                           ;term.c: 635: TermRxBuffer[PackageLen] = '\r';
 13879  00047C  0100               	movlb	0	; () banked
 13880  00047E  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13881  000480  0D01               	mullw	1
 13882  000482  0E40               	movlw	low Terminal@TermRxBuffer
 13883  000484  24F3               	addwf	prodl,w,c
 13884  000486  6ED9               	movwf	fsr2l,c
 13885  000488  0E02               	movlw	high Terminal@TermRxBuffer
 13886  00048A  20F4               	addwfc	prodh,w,c
 13887  00048C  6EDA               	movwf	fsr2h,c
 13888  00048E  0E0D               	movlw	13
 13889  000490  6EDF               	movwf	indf2,c
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;term.c: 636: TermRxBuffer[PackageLen + 1] = '\n';
 13893  000492  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13894  000494  6F7C               	movwf	??_Terminal& (0+255),b
 13895  000496  6B7D               	clrf	(??_Terminal+1)& (0+255),b
 13896  000498  0E01               	movlw	1
 13897  00049A  277C               	addwf	??_Terminal& (0+255),f,b
 13898  00049C  0E00               	movlw	0
 13899  00049E  237D               	addwfc	(??_Terminal+1)& (0+255),f,b
 13900  0004A0  0E40               	movlw	low Terminal@TermRxBuffer
 13901  0004A2  257C               	addwf	??_Terminal& (0+255),w,b
 13902  0004A4  6ED9               	movwf	fsr2l,c
 13903  0004A6  0E02               	movlw	high Terminal@TermRxBuffer
 13904  0004A8  217D               	addwfc	(??_Terminal+1)& (0+255),w,b
 13905  0004AA  6EDA               	movwf	fsr2h,c
 13906  0004AC  0E0A               	movlw	10
 13907  0004AE  6EDF               	movwf	indf2,c
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;term.c: 638: putUSBUSART(TermRxBuffer,PackageLen + 2);
 13911  0004B0  0E40               	movlw	low Terminal@TermRxBuffer
 13912  0004B2  6F66               	movwf	putUSBUSART@data& (0+255),b
 13913  0004B4  0E02               	movlw	high Terminal@TermRxBuffer
 13914  0004B6  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13915  0004B8  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13916  0004BA  0F02               	addlw	2
 13917  0004BC  6F68               	movwf	putUSBUSART@length& (0+255),b
 13918  0004BE  EC28  F026         	call	_putUSBUSART	;wreg free
 13919  0004C2                     l2082:
 13920                           
 13921                           ;term.c: 639: }
 13922                           ;term.c: 643: TermState = Term_GetData;
 13923  0004C2  0E00               	movlw	0
 13924  0004C4  0101               	movlb	1	; () banked
 13925  0004C6  6F59               	movwf	Terminal@TermState& (0+255),b
 13926                           
 13927                           ; BSR set to: 1
 13928                           ;term.c: 653: }
 13929                           
 13930                           ; BSR set to: 1
 13931                           ;term.c: 652: break;
 13932                           
 13933                           ;term.c: 651: default:
 13934                           
 13935                           ; BSR set to: 1
 13936                           ;term.c: 649: break;
 13937                           
 13938                           ;term.c: 648: case Term_ReadSlvUartData:
 13939                           
 13940                           ; BSR set to: 1
 13941                           ;term.c: 644: }
 13942                           ;term.c: 645: }
 13943                           ;term.c: 646: break;
 13944                           
 13945                           ; BSR set to: 1
 13946  0004C8  0012               	return	
 13947  0004CA                     l2041:
 13948                           
 13949                           ; BSR set to: 1
 13950  0004CA  0101               	movlb	1	; () banked
 13951  0004CC  5159               	movf	Terminal@TermState& (0+255),w,b
 13952                           
 13953                           ; Switch size 1, requested type "space"
 13954                           ; Number of cases is 4, Range of values is 0 to 3
 13955                           ; switch strategies available:
 13956                           ; Name         Instructions Cycles
 13957                           ; simple_byte           13     7 (average)
 13958                           ;	Chosen strategy is simple_byte
 13959  0004CE  0A00               	xorlw	0	; case 0
 13960  0004D0  B4D8               	btfsc	status,2,c
 13961  0004D2  D607               	goto	l2042
 13962  0004D4  0A01               	xorlw	1	; case 1
 13963  0004D6  B4D8               	btfsc	status,2,c
 13964  0004D8  D752               	goto	l2072
 13965  0004DA  0A03               	xorlw	3	; case 2
 13966  0004DC  B4D8               	btfsc	status,2,c
 13967  0004DE  D76F               	goto	l2074
 13968  0004E0  0A01               	xorlw	1	; case 3
 13969  0004E2  0012               	return	
 13970  0004E4                     __end_of_Terminal:
 13971                           	opt stack 0
 13972                           tosu	equ	0xFFF
 13973                           tosh	equ	0xFFE
 13974                           tosl	equ	0xFFD
 13975                           pclath	equ	0xFFA
 13976                           tblptru	equ	0xFF8
 13977                           tblptrh	equ	0xFF7
 13978                           tblptrl	equ	0xFF6
 13979                           tablat	equ	0xFF5
 13980                           prodh	equ	0xFF4
 13981                           prodl	equ	0xFF3
 13982                           intcon	equ	0xFF2
 13983                           intcon2	equ	0xFF1
 13984                           intcon3	equ	0xFF0
 13985                           indf0	equ	0xFEF
 13986                           postinc0	equ	0xFEE
 13987                           plusw0	equ	0xFEB
 13988                           fsr0h	equ	0xFEA
 13989                           fsr0l	equ	0xFE9
 13990                           wreg	equ	0xFE8
 13991                           indf1	equ	0xFE7
 13992                           postinc1	equ	0xFE6
 13993                           postdec1	equ	0xFE5
 13994                           fsr1h	equ	0xFE2
 13995                           fsr1l	equ	0xFE1
 13996                           indf2	equ	0xFDF
 13997                           postinc2	equ	0xFDE
 13998                           postdec2	equ	0xFDD
 13999                           plusw2	equ	0xFDB
 14000                           fsr2h	equ	0xFDA
 14001                           fsr2l	equ	0xFD9
 14002                           status	equ	0xFD8
 14003                           
 14004 ;; *************** function _strtol *****************
 14005 ;; Defined at:
 14006 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtol.c"
 14007 ;; Parameters:    Size  Location     Type
 14008 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 14009 ;;		 -> Terminal@Payload(100), 
 14010 ;;  endptr          2   14[BANK0 ] PTR PTR unsigned char 
 14011 ;;		 -> NULL(0), 
 14012 ;;  base            2   16[BANK0 ] int 
 14013 ;; Auto vars:     Size  Location     Type
 14014 ;;  a               4   23[BANK0 ] long 
 14015 ;;  c               1   27[BANK0 ] unsigned char 
 14016 ;;  sign            1   22[BANK0 ] unsigned char 
 14017 ;; Return value:  Size  Location     Type
 14018 ;;                  4   12[BANK0 ] long 
 14019 ;; Registers used:
 14020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14021 ;; Tracked objects:
 14022 ;;		On entry : 0/0
 14023 ;;		On exit  : 0/0
 14024 ;;		Unchanged: 0/0
 14025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14026 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14027 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14028 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14029 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14030 ;;Total ram usage:       16 bytes
 14031 ;; Hardware stack levels used:    1
 14032 ;; Hardware stack levels required when called:   13
 14033 ;; This function calls:
 14034 ;;		___lmul
 14035 ;;		_isalpha
 14036 ;;		_isdigit
 14037 ;;		_isspace
 14038 ;;		_toupper
 14039 ;; This function is called by:
 14040 ;;		_Terminal
 14041 ;; This function uses a non-reentrant model
 14042 ;;
 14043                           
 14044                           	psect	text55
 14045  00158C                     __ptext55:
 14046                           	opt stack 0
 14047  00158C                     _strtol:
 14048                           	opt stack 12
 14049                           
 14050                           ;incstack = 0
 14051  00158C  C06C  FFD9         	movff	strtol@s,fsr2l
 14052  001590  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14053  001594  50DF               	movf	indf2,w,c
 14054  001596  0100               	movlb	0	; () banked
 14055  001598  6F7B               	movwf	strtol@c& (0+255),b
 14056                           
 14057                           ; BSR set to: 0
 14058  00159A  4B6C               	infsnz	strtol@s& (0+255),f,b
 14059  00159C  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14060                           
 14061                           ; BSR set to: 0
 14062  00159E  517B               	movf	strtol@c& (0+255),w,b
 14063  0015A0  ECA3  F025         	call	_isspace
 14064  0015A4  B0D8               	btfsc	status,0,c
 14065  0015A6  D7F2               	goto	_strtol
 14066  0015A8  0E00               	movlw	0
 14067  0015AA  0100               	movlb	0	; () banked
 14068  0015AC  6F77               	movwf	strtol@a& (0+255),b
 14069  0015AE  0E00               	movlw	0
 14070  0015B0  6F78               	movwf	(strtol@a+1)& (0+255),b
 14071  0015B2  0E00               	movlw	0
 14072  0015B4  6F79               	movwf	(strtol@a+2)& (0+255),b
 14073  0015B6  0E00               	movlw	0
 14074  0015B8  6F7A               	movwf	(strtol@a+3)& (0+255),b
 14075  0015BA  0E00               	movlw	0
 14076  0015BC  6F76               	movwf	strtol@sign& (0+255),b
 14077                           
 14078                           ; BSR set to: 0
 14079  0015BE  0E2D               	movlw	45
 14080  0015C0  197B               	xorwf	strtol@c& (0+255),w,b
 14081  0015C2  A4D8               	btfss	status,2,c
 14082  0015C4  D003               	goto	l2761
 14083                           
 14084                           ; BSR set to: 0
 14085  0015C6  0E01               	movlw	1
 14086  0015C8  6F76               	movwf	strtol@sign& (0+255),b
 14087  0015CA  D004               	goto	u5630
 14088  0015CC                     l2761:
 14089                           
 14090                           ; BSR set to: 0
 14091                           
 14092                           ; BSR set to: 0
 14093  0015CC  0E2B               	movlw	43
 14094  0015CE  197B               	xorwf	strtol@c& (0+255),w,b
 14095  0015D0  A4D8               	btfss	status,2,c
 14096  0015D2  D008               	goto	l2763
 14097  0015D4                     u5630:
 14098                           
 14099                           ; BSR set to: 0
 14100  0015D4  C06C  FFD9         	movff	strtol@s,fsr2l
 14101  0015D8  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14102  0015DC  50DF               	movf	indf2,w,c
 14103  0015DE  6F7B               	movwf	strtol@c& (0+255),b
 14104                           
 14105                           ; BSR set to: 0
 14106  0015E0  4B6C               	infsnz	strtol@s& (0+255),f,b
 14107  0015E2  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14108  0015E4                     l2763:
 14109                           
 14110                           ; BSR set to: 0
 14111                           
 14112                           ; BSR set to: 0
 14113                           
 14114                           ; BSR set to: 0
 14115  0015E4  0E30               	movlw	48
 14116  0015E6  197B               	xorwf	strtol@c& (0+255),w,b
 14117  0015E8  A4D8               	btfss	status,2,c
 14118  0015EA  D02E               	goto	l2771
 14119                           
 14120                           ; BSR set to: 0
 14121  0015EC  C06C  FFD9         	movff	strtol@s,fsr2l
 14122  0015F0  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14123  0015F4  50DF               	movf	indf2,w,c
 14124  0015F6  6F7B               	movwf	strtol@c& (0+255),b
 14125                           
 14126                           ; BSR set to: 0
 14127  0015F8  4B6C               	infsnz	strtol@s& (0+255),f,b
 14128  0015FA  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14129                           
 14130                           ; BSR set to: 0
 14131  0015FC  5170               	movf	strtol@base& (0+255),w,b
 14132  0015FE  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14133  001600  B4D8               	btfsc	status,2,c
 14134  001602  D005               	goto	u5660
 14135                           
 14136                           ; BSR set to: 0
 14137  001604  0E10               	movlw	16
 14138  001606  1970               	xorwf	strtol@base& (0+255),w,b
 14139  001608  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14140  00160A  A4D8               	btfss	status,2,c
 14141  00160C  D015               	goto	l2765
 14142  00160E                     u5660:
 14143                           
 14144                           ; BSR set to: 0
 14145                           
 14146                           ; BSR set to: 0
 14147  00160E  0E78               	movlw	120
 14148  001610  197B               	xorwf	strtol@c& (0+255),w,b
 14149  001612  B4D8               	btfsc	status,2,c
 14150  001614  D004               	goto	u5680
 14151                           
 14152                           ; BSR set to: 0
 14153  001616  0E58               	movlw	88
 14154  001618  197B               	xorwf	strtol@c& (0+255),w,b
 14155  00161A  A4D8               	btfss	status,2,c
 14156  00161C  D00D               	goto	l2765
 14157  00161E                     u5680:
 14158                           
 14159                           ; BSR set to: 0
 14160                           
 14161                           ; BSR set to: 0
 14162  00161E  0E00               	movlw	0
 14163  001620  6F71               	movwf	(strtol@base+1)& (0+255),b
 14164  001622  0E10               	movlw	16
 14165  001624  6F70               	movwf	strtol@base& (0+255),b
 14166                           
 14167                           ; BSR set to: 0
 14168  001626  C06C  FFD9         	movff	strtol@s,fsr2l
 14169  00162A  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14170  00162E  50DF               	movf	indf2,w,c
 14171  001630  6F7B               	movwf	strtol@c& (0+255),b
 14172                           
 14173                           ; BSR set to: 0
 14174  001632  4B6C               	infsnz	strtol@s& (0+255),f,b
 14175  001634  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14176  001636  D008               	goto	l2771
 14177  001638                     l2765:
 14178                           
 14179                           ; BSR set to: 0
 14180                           
 14181                           ; BSR set to: 0
 14182  001638  5170               	movf	strtol@base& (0+255),w,b
 14183  00163A  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14184  00163C  A4D8               	btfss	status,2,c
 14185  00163E  D004               	goto	l2771
 14186                           
 14187                           ; BSR set to: 0
 14188  001640  0E00               	movlw	0
 14189  001642  6F71               	movwf	(strtol@base+1)& (0+255),b
 14190  001644  0E08               	movlw	8
 14191  001646  6F70               	movwf	strtol@base& (0+255),b
 14192  001648                     l2771:
 14193                           
 14194                           ; BSR set to: 0
 14195                           
 14196                           ; BSR set to: 0
 14197                           
 14198                           ; BSR set to: 0
 14199                           
 14200                           ; BSR set to: 0
 14201  001648  5170               	movf	strtol@base& (0+255),w,b
 14202  00164A  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14203  00164C  A4D8               	btfss	status,2,c
 14204  00164E  D004               	goto	l2772
 14205                           
 14206                           ; BSR set to: 0
 14207  001650  0E00               	movlw	0
 14208  001652  6F71               	movwf	(strtol@base+1)& (0+255),b
 14209  001654  0E0A               	movlw	10
 14210  001656  6F70               	movwf	strtol@base& (0+255),b
 14211  001658                     l2772:
 14212                           
 14213                           ; BSR set to: 0
 14214                           
 14215                           ; BSR set to: 0
 14216                           
 14217                           ; BSR set to: 0
 14218  001658  517B               	movf	strtol@c& (0+255),w,b
 14219  00165A  EC32  F025         	call	_isalpha
 14220  00165E  A0D8               	btfss	status,0,c
 14221  001660  D008               	goto	l2774
 14222  001662  0100               	movlb	0	; () banked
 14223  001664  517B               	movf	strtol@c& (0+255),w,b
 14224  001666  ECF4  F026         	call	_toupper
 14225  00166A  0FC9               	addlw	201
 14226  00166C  0100               	movlb	0	; () banked
 14227  00166E  6F7B               	movwf	strtol@c& (0+255),b
 14228  001670  D009               	goto	l2777
 14229  001672                     l2774:
 14230                           
 14231                           ; BSR set to: 0
 14232  001672  0100               	movlb	0	; () banked
 14233  001674  517B               	movf	strtol@c& (0+255),w,b
 14234  001676  EC39  F026         	call	_isdigit
 14235  00167A  A0D8               	btfss	status,0,c
 14236  00167C  D039               	goto	l2778
 14237  00167E  0E30               	movlw	48
 14238  001680  0100               	movlb	0	; () banked
 14239  001682  5F7B               	subwf	strtol@c& (0+255),f,b
 14240  001684                     l2777:
 14241                           
 14242                           ; BSR set to: 0
 14243                           
 14244                           ; BSR set to: 0
 14245                           
 14246                           ; BSR set to: 0
 14247  001684  517B               	movf	strtol@c& (0+255),w,b
 14248  001686  6F72               	movwf	??_strtol& (0+255),b
 14249  001688  6B73               	clrf	(??_strtol+1)& (0+255),b
 14250  00168A  5170               	movf	strtol@base& (0+255),w,b
 14251  00168C  5D72               	subwf	??_strtol& (0+255),w,b
 14252  00168E  5173               	movf	(??_strtol+1)& (0+255),w,b
 14253  001690  0A80               	xorlw	128
 14254  001692  6F74               	movwf	(??_strtol+2)& (0+255),b
 14255  001694  5171               	movf	(strtol@base+1)& (0+255),w,b
 14256  001696  0A80               	xorlw	128
 14257  001698  5974               	subwfb	(??_strtol+2)& (0+255),w,b
 14258  00169A  B0D8               	btfsc	status,0,c
 14259  00169C  D029               	goto	l2778
 14260                           
 14261                           ; BSR set to: 0
 14262                           
 14263                           ; BSR set to: 0
 14264                           
 14265                           ; BSR set to: 0
 14266  00169E  C070  F060         	movff	strtol@base,___lmul@multiplier
 14267  0016A2  C071  F061         	movff	strtol@base+1,___lmul@multiplier+1
 14268  0016A6  0E00               	movlw	0
 14269  0016A8  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 14270  0016AA  0EFF               	movlw	-1
 14271  0016AC  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 14272  0016AE  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 14273  0016B0  C077  F064         	movff	strtol@a,___lmul@multiplicand
 14274  0016B4  C078  F065         	movff	strtol@a+1,___lmul@multiplicand+1
 14275  0016B8  C079  F066         	movff	strtol@a+2,___lmul@multiplicand+2
 14276  0016BC  C07A  F067         	movff	strtol@a+3,___lmul@multiplicand+3
 14277  0016C0  ECEA  F020         	call	___lmul	;wreg free
 14278  0016C4  0100               	movlb	0	; () banked
 14279  0016C6  517B               	movf	strtol@c& (0+255),w,b
 14280  0016C8  2560               	addwf	?___lmul& (0+255),w,b
 14281  0016CA  6F77               	movwf	strtol@a& (0+255),b
 14282  0016CC  0E00               	movlw	0
 14283  0016CE  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 14284  0016D0  6F78               	movwf	(strtol@a+1)& (0+255),b
 14285  0016D2  0E00               	movlw	0
 14286  0016D4  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 14287  0016D6  6F79               	movwf	(strtol@a+2)& (0+255),b
 14288  0016D8  0E00               	movlw	0
 14289  0016DA  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 14290  0016DC  6F7A               	movwf	(strtol@a+3)& (0+255),b
 14291                           
 14292                           ; BSR set to: 0
 14293  0016DE  C06C  FFD9         	movff	strtol@s,fsr2l
 14294  0016E2  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14295  0016E6  50DF               	movf	indf2,w,c
 14296  0016E8  6F7B               	movwf	strtol@c& (0+255),b
 14297                           
 14298                           ; BSR set to: 0
 14299  0016EA  4B6C               	infsnz	strtol@s& (0+255),f,b
 14300  0016EC  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14301  0016EE  D7B4               	goto	l2772
 14302  0016F0                     l2778:
 14303                           
 14304                           ; BSR set to: 0
 14305  0016F0  0100               	movlb	0	; () banked
 14306  0016F2  516E               	movf	strtol@endptr& (0+255),w,b
 14307  0016F4  116F               	iorwf	(strtol@endptr+1)& (0+255),w,b
 14308  0016F6  B4D8               	btfsc	status,2,c
 14309  0016F8  D00E               	goto	l2780
 14310                           
 14311                           ; BSR set to: 0
 14312  0016FA  0EFF               	movlw	255
 14313  0016FC  256C               	addwf	strtol@s& (0+255),w,b
 14314  0016FE  6F72               	movwf	??_strtol& (0+255),b
 14315  001700  0EFF               	movlw	255
 14316  001702  216D               	addwfc	(strtol@s+1)& (0+255),w,b
 14317  001704  6F73               	movwf	(??_strtol+1)& (0+255),b
 14318  001706  C06E  FFD9         	movff	strtol@endptr,fsr2l
 14319  00170A  C06F  FFDA         	movff	strtol@endptr+1,fsr2h
 14320  00170E  C072  FFDE         	movff	??_strtol,postinc2
 14321  001712  C073  FFDD         	movff	??_strtol+1,postdec2
 14322  001716                     l2780:
 14323                           
 14324                           ; BSR set to: 0
 14325                           
 14326                           ; BSR set to: 0
 14327  001716  5176               	movf	strtol@sign& (0+255),w,b
 14328  001718  B4D8               	btfsc	status,2,c
 14329  00171A  D01A               	goto	l2781
 14330                           
 14331                           ; BSR set to: 0
 14332  00171C  C077  F072         	movff	strtol@a,??_strtol
 14333  001720  C078  F073         	movff	strtol@a+1,??_strtol+1
 14334  001724  C079  F074         	movff	strtol@a+2,??_strtol+2
 14335  001728  C07A  F075         	movff	strtol@a+3,??_strtol+3
 14336  00172C  1F72               	comf	??_strtol& (0+255),f,b
 14337  00172E  1F73               	comf	(??_strtol+1)& (0+255),f,b
 14338  001730  1F74               	comf	(??_strtol+2)& (0+255),f,b
 14339  001732  1F75               	comf	(??_strtol+3)& (0+255),f,b
 14340  001734  2B72               	incf	??_strtol& (0+255),f,b
 14341  001736  0E00               	movlw	0
 14342  001738  2373               	addwfc	(??_strtol+1)& (0+255),f,b
 14343  00173A  2374               	addwfc	(??_strtol+2)& (0+255),f,b
 14344  00173C  2375               	addwfc	(??_strtol+3)& (0+255),f,b
 14345  00173E  C072  F06C         	movff	??_strtol,?_strtol
 14346  001742  C073  F06D         	movff	??_strtol+1,?_strtol+1
 14347  001746  C074  F06E         	movff	??_strtol+2,?_strtol+2
 14348  00174A  C075  F06F         	movff	??_strtol+3,?_strtol+3
 14349                           
 14350                           ; BSR set to: 0
 14351  00174E  0012               	return	
 14352  001750                     l2781:
 14353                           
 14354                           ; BSR set to: 0
 14355  001750  C077  F06C         	movff	strtol@a,?_strtol
 14356  001754  C078  F06D         	movff	strtol@a+1,?_strtol+1
 14357  001758  C079  F06E         	movff	strtol@a+2,?_strtol+2
 14358  00175C  C07A  F06F         	movff	strtol@a+3,?_strtol+3
 14359                           
 14360                           ; BSR set to: 0
 14361  001760  0012               	return		;funcret
 14362  001762                     __end_of_strtol:
 14363                           	opt stack 0
 14364                           tosu	equ	0xFFF
 14365                           tosh	equ	0xFFE
 14366                           tosl	equ	0xFFD
 14367                           pclath	equ	0xFFA
 14368                           tblptru	equ	0xFF8
 14369                           tblptrh	equ	0xFF7
 14370                           tblptrl	equ	0xFF6
 14371                           tablat	equ	0xFF5
 14372                           prodh	equ	0xFF4
 14373                           prodl	equ	0xFF3
 14374                           intcon	equ	0xFF2
 14375                           intcon2	equ	0xFF1
 14376                           intcon3	equ	0xFF0
 14377                           indf0	equ	0xFEF
 14378                           postinc0	equ	0xFEE
 14379                           plusw0	equ	0xFEB
 14380                           fsr0h	equ	0xFEA
 14381                           fsr0l	equ	0xFE9
 14382                           wreg	equ	0xFE8
 14383                           indf1	equ	0xFE7
 14384                           postinc1	equ	0xFE6
 14385                           postdec1	equ	0xFE5
 14386                           fsr1h	equ	0xFE2
 14387                           fsr1l	equ	0xFE1
 14388                           indf2	equ	0xFDF
 14389                           postinc2	equ	0xFDE
 14390                           postdec2	equ	0xFDD
 14391                           plusw2	equ	0xFDB
 14392                           fsr2h	equ	0xFDA
 14393                           fsr2l	equ	0xFD9
 14394                           status	equ	0xFD8
 14395                           
 14396 ;; *************** function _toupper *****************
 14397 ;; Defined at:
 14398 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
 14399 ;; Parameters:    Size  Location     Type
 14400 ;;  c               1    wreg     unsigned char 
 14401 ;; Auto vars:     Size  Location     Type
 14402 ;;  c               1    0[BANK0 ] unsigned char 
 14403 ;; Return value:  Size  Location     Type
 14404 ;;                  1    wreg      unsigned char 
 14405 ;; Registers used:
 14406 ;;		wreg, status,2, status,0
 14407 ;; Tracked objects:
 14408 ;;		On entry : 0/0
 14409 ;;		On exit  : 0/0
 14410 ;;		Unchanged: 0/0
 14411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14413 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14415 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14416 ;;Total ram usage:        1 bytes
 14417 ;; Hardware stack levels used:    1
 14418 ;; Hardware stack levels required when called:   11
 14419 ;; This function calls:
 14420 ;;		Nothing
 14421 ;; This function is called by:
 14422 ;;		_strtol
 14423 ;; This function uses a non-reentrant model
 14424 ;;
 14425                           
 14426                           	psect	text56
 14427  004DE8                     __ptext56:
 14428                           	opt stack 0
 14429  004DE8                     _toupper:
 14430                           	opt stack 13
 14431                           
 14432                           ; BSR set to: 0
 14433                           ;incstack = 0
 14434                           ;toupper@c stored from wreg
 14435  004DE8  0100               	movlb	0	; () banked
 14436  004DEA  6F60               	movwf	toupper@c& (0+255),b
 14437  004DEC  0E7B               	movlw	123
 14438  004DEE  0100               	movlb	0	; () banked
 14439  004DF0  6160               	cpfslt	toupper@c& (0+255),b
 14440  004DF2  D004               	goto	l2785
 14441                           
 14442                           ; BSR set to: 0
 14443  004DF4  0E60               	movlw	96
 14444  004DF6  6560               	cpfsgt	toupper@c& (0+255),b
 14445  004DF8  D001               	goto	l2785
 14446                           
 14447                           ; BSR set to: 0
 14448  004DFA  9B60               	bcf	toupper@c& (0+255),5,b
 14449  004DFC                     l2785:
 14450                           
 14451                           ; BSR set to: 0
 14452                           
 14453                           ; BSR set to: 0
 14454  004DFC  5160               	movf	toupper@c& (0+255),w,b
 14455  004DFE  0012               	return	
 14456  004E00                     __end_of_toupper:
 14457                           	opt stack 0
 14458                           tosu	equ	0xFFF
 14459                           tosh	equ	0xFFE
 14460                           tosl	equ	0xFFD
 14461                           pclath	equ	0xFFA
 14462                           tblptru	equ	0xFF8
 14463                           tblptrh	equ	0xFF7
 14464                           tblptrl	equ	0xFF6
 14465                           tablat	equ	0xFF5
 14466                           prodh	equ	0xFF4
 14467                           prodl	equ	0xFF3
 14468                           intcon	equ	0xFF2
 14469                           intcon2	equ	0xFF1
 14470                           intcon3	equ	0xFF0
 14471                           indf0	equ	0xFEF
 14472                           postinc0	equ	0xFEE
 14473                           plusw0	equ	0xFEB
 14474                           fsr0h	equ	0xFEA
 14475                           fsr0l	equ	0xFE9
 14476                           wreg	equ	0xFE8
 14477                           indf1	equ	0xFE7
 14478                           postinc1	equ	0xFE6
 14479                           postdec1	equ	0xFE5
 14480                           fsr1h	equ	0xFE2
 14481                           fsr1l	equ	0xFE1
 14482                           indf2	equ	0xFDF
 14483                           postinc2	equ	0xFDE
 14484                           postdec2	equ	0xFDD
 14485                           plusw2	equ	0xFDB
 14486                           fsr2h	equ	0xFDA
 14487                           fsr2l	equ	0xFD9
 14488                           status	equ	0xFD8
 14489                           
 14490 ;; *************** function _isspace *****************
 14491 ;; Defined at:
 14492 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isspace.c"
 14493 ;; Parameters:    Size  Location     Type
 14494 ;;  c               1    wreg     unsigned char 
 14495 ;; Auto vars:     Size  Location     Type
 14496 ;;  c               1    2[BANK0 ] unsigned char 
 14497 ;; Return value:  Size  Location     Type
 14498 ;;		None               void
 14499 ;; Registers used:
 14500 ;;		wreg, status,2, status,0
 14501 ;; Tracked objects:
 14502 ;;		On entry : 0/0
 14503 ;;		On exit  : 0/0
 14504 ;;		Unchanged: 0/0
 14505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14508 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14509 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14510 ;;Total ram usage:        3 bytes
 14511 ;; Hardware stack levels used:    1
 14512 ;; Hardware stack levels required when called:   11
 14513 ;; This function calls:
 14514 ;;		Nothing
 14515 ;; This function is called by:
 14516 ;;		_strtol
 14517 ;; This function uses a non-reentrant model
 14518 ;;
 14519                           
 14520                           	psect	text57
 14521  004B46                     __ptext57:
 14522                           	opt stack 0
 14523  004B46                     _isspace:
 14524                           	opt stack 13
 14525                           
 14526                           ; BSR set to: 0
 14527                           ;incstack = 0
 14528                           ;isspace@c stored from wreg
 14529  004B46  0100               	movlb	0	; () banked
 14530  004B48  6F62               	movwf	isspace@c& (0+255),b
 14531  004B4A  0E01               	movlw	1
 14532  004B4C  0100               	movlb	0	; () banked
 14533  004B4E  6F61               	movwf	_isspace$5861& (0+255),b
 14534                           
 14535                           ; BSR set to: 0
 14536  004B50  0E20               	movlw	32
 14537  004B52  1962               	xorwf	isspace@c& (0+255),w,b
 14538  004B54  B4D8               	btfsc	status,2,c
 14539  004B56  D008               	goto	l2816
 14540                           
 14541                           ; BSR set to: 0
 14542  004B58  0E0E               	movlw	14
 14543  004B5A  6162               	cpfslt	isspace@c& (0+255),b
 14544  004B5C  D003               	goto	u5250
 14545                           
 14546                           ; BSR set to: 0
 14547  004B5E  0E09               	movlw	9
 14548  004B60  6162               	cpfslt	isspace@c& (0+255),b
 14549  004B62  D002               	goto	l2816
 14550  004B64                     u5250:
 14551                           
 14552                           ; BSR set to: 0
 14553                           
 14554                           ; BSR set to: 0
 14555  004B64  0E00               	movlw	0
 14556  004B66  6F61               	movwf	_isspace$5861& (0+255),b
 14557  004B68                     l2816:
 14558                           
 14559                           ; BSR set to: 0
 14560                           
 14561                           ; BSR set to: 0
 14562  004B68  C061  F060         	movff	_isspace$5861,??_isspace
 14563  004B6C  3160               	rrcf	??_isspace& (0+255),w,b
 14564  004B6E  0012               	return	
 14565  004B70                     __end_of_isspace:
 14566                           	opt stack 0
 14567                           tosu	equ	0xFFF
 14568                           tosh	equ	0xFFE
 14569                           tosl	equ	0xFFD
 14570                           pclath	equ	0xFFA
 14571                           tblptru	equ	0xFF8
 14572                           tblptrh	equ	0xFF7
 14573                           tblptrl	equ	0xFF6
 14574                           tablat	equ	0xFF5
 14575                           prodh	equ	0xFF4
 14576                           prodl	equ	0xFF3
 14577                           intcon	equ	0xFF2
 14578                           intcon2	equ	0xFF1
 14579                           intcon3	equ	0xFF0
 14580                           indf0	equ	0xFEF
 14581                           postinc0	equ	0xFEE
 14582                           plusw0	equ	0xFEB
 14583                           fsr0h	equ	0xFEA
 14584                           fsr0l	equ	0xFE9
 14585                           wreg	equ	0xFE8
 14586                           indf1	equ	0xFE7
 14587                           postinc1	equ	0xFE6
 14588                           postdec1	equ	0xFE5
 14589                           fsr1h	equ	0xFE2
 14590                           fsr1l	equ	0xFE1
 14591                           indf2	equ	0xFDF
 14592                           postinc2	equ	0xFDE
 14593                           postdec2	equ	0xFDD
 14594                           plusw2	equ	0xFDB
 14595                           fsr2h	equ	0xFDA
 14596                           fsr2l	equ	0xFD9
 14597                           status	equ	0xFD8
 14598                           
 14599 ;; *************** function _isalpha *****************
 14600 ;; Defined at:
 14601 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isalpha.c"
 14602 ;; Parameters:    Size  Location     Type
 14603 ;;  c               1    wreg     unsigned char 
 14604 ;; Auto vars:     Size  Location     Type
 14605 ;;  c               1    5[BANK0 ] unsigned char 
 14606 ;; Return value:  Size  Location     Type
 14607 ;;		None               void
 14608 ;; Registers used:
 14609 ;;		wreg, status,2, status,0, cstack
 14610 ;; Tracked objects:
 14611 ;;		On entry : 0/0
 14612 ;;		On exit  : 0/0
 14613 ;;		Unchanged: 0/0
 14614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14616 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14617 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14618 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14619 ;;Total ram usage:        3 bytes
 14620 ;; Hardware stack levels used:    1
 14621 ;; Hardware stack levels required when called:   12
 14622 ;; This function calls:
 14623 ;;		_isupper
 14624 ;; This function is called by:
 14625 ;;		_strtol
 14626 ;; This function uses a non-reentrant model
 14627 ;;
 14628                           
 14629                           	psect	text58
 14630  004A64                     __ptext58:
 14631                           	opt stack 0
 14632  004A64                     _isalpha:
 14633                           	opt stack 12
 14634                           
 14635                           ; BSR set to: 0
 14636                           ;incstack = 0
 14637                           ;isalpha@c stored from wreg
 14638  004A64  0100               	movlb	0	; () banked
 14639  004A66  6F65               	movwf	isalpha@c& (0+255),b
 14640  004A68  0E01               	movlw	1
 14641  004A6A  0100               	movlb	0	; () banked
 14642  004A6C  6F64               	movwf	_isalpha$5858& (0+255),b
 14643                           
 14644                           ; BSR set to: 0
 14645  004A6E  0E7B               	movlw	123
 14646  004A70  6165               	cpfslt	isalpha@c& (0+255),b
 14647  004A72  D003               	goto	u5270
 14648                           
 14649                           ; BSR set to: 0
 14650  004A74  0E61               	movlw	97
 14651  004A76  6165               	cpfslt	isalpha@c& (0+255),b
 14652  004A78  D008               	goto	l2811
 14653  004A7A                     u5270:
 14654                           
 14655                           ; BSR set to: 0
 14656                           
 14657                           ; BSR set to: 0
 14658  004A7A  5165               	movf	isalpha@c& (0+255),w,b
 14659  004A7C  EC17  F026         	call	_isupper
 14660  004A80  B0D8               	btfsc	status,0,c
 14661  004A82  D003               	goto	l2811
 14662  004A84  0E00               	movlw	0
 14663  004A86  0100               	movlb	0	; () banked
 14664  004A88  6F64               	movwf	_isalpha$5858& (0+255),b
 14665  004A8A                     l2811:
 14666                           
 14667                           ; BSR set to: 0
 14668  004A8A  C064  F063         	movff	_isalpha$5858,??_isalpha
 14669  004A8E  0100               	movlb	0	; () banked
 14670  004A90  3163               	rrcf	??_isalpha& (0+255),w,b
 14671  004A92  0012               	return	
 14672  004A94                     __end_of_isalpha:
 14673                           	opt stack 0
 14674                           tosu	equ	0xFFF
 14675                           tosh	equ	0xFFE
 14676                           tosl	equ	0xFFD
 14677                           pclath	equ	0xFFA
 14678                           tblptru	equ	0xFF8
 14679                           tblptrh	equ	0xFF7
 14680                           tblptrl	equ	0xFF6
 14681                           tablat	equ	0xFF5
 14682                           prodh	equ	0xFF4
 14683                           prodl	equ	0xFF3
 14684                           intcon	equ	0xFF2
 14685                           intcon2	equ	0xFF1
 14686                           intcon3	equ	0xFF0
 14687                           indf0	equ	0xFEF
 14688                           postinc0	equ	0xFEE
 14689                           plusw0	equ	0xFEB
 14690                           fsr0h	equ	0xFEA
 14691                           fsr0l	equ	0xFE9
 14692                           wreg	equ	0xFE8
 14693                           indf1	equ	0xFE7
 14694                           postinc1	equ	0xFE6
 14695                           postdec1	equ	0xFE5
 14696                           fsr1h	equ	0xFE2
 14697                           fsr1l	equ	0xFE1
 14698                           indf2	equ	0xFDF
 14699                           postinc2	equ	0xFDE
 14700                           postdec2	equ	0xFDD
 14701                           plusw2	equ	0xFDB
 14702                           fsr2h	equ	0xFDA
 14703                           fsr2l	equ	0xFD9
 14704                           status	equ	0xFD8
 14705                           
 14706 ;; *************** function _isupper *****************
 14707 ;; Defined at:
 14708 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isupper.c"
 14709 ;; Parameters:    Size  Location     Type
 14710 ;;  c               1    wreg     unsigned char 
 14711 ;; Auto vars:     Size  Location     Type
 14712 ;;  c               1    2[BANK0 ] unsigned char 
 14713 ;; Return value:  Size  Location     Type
 14714 ;;		None               void
 14715 ;; Registers used:
 14716 ;;		wreg, status,2, status,0
 14717 ;; Tracked objects:
 14718 ;;		On entry : 0/0
 14719 ;;		On exit  : 0/0
 14720 ;;		Unchanged: 0/0
 14721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14725 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14726 ;;Total ram usage:        3 bytes
 14727 ;; Hardware stack levels used:    1
 14728 ;; Hardware stack levels required when called:   11
 14729 ;; This function calls:
 14730 ;;		Nothing
 14731 ;; This function is called by:
 14732 ;;		_isalpha
 14733 ;; This function uses a non-reentrant model
 14734 ;;
 14735                           
 14736                           	psect	text59
 14737  004C2E                     __ptext59:
 14738                           	opt stack 0
 14739  004C2E                     _isupper:
 14740                           	opt stack 12
 14741                           
 14742                           ; BSR set to: 0
 14743                           ;incstack = 0
 14744                           ;isupper@c stored from wreg
 14745  004C2E  0100               	movlb	0	; () banked
 14746  004C30  6F62               	movwf	isupper@c& (0+255),b
 14747  004C32  0E00               	movlw	0
 14748  004C34  0100               	movlb	0	; () banked
 14749  004C36  6F61               	movwf	_isupper$5864& (0+255),b
 14750                           
 14751                           ; BSR set to: 0
 14752  004C38  0E5B               	movlw	91
 14753  004C3A  6162               	cpfslt	isupper@c& (0+255),b
 14754  004C3C  D005               	goto	l2821
 14755                           
 14756                           ; BSR set to: 0
 14757  004C3E  0E40               	movlw	64
 14758  004C40  6562               	cpfsgt	isupper@c& (0+255),b
 14759  004C42  D002               	goto	l2821
 14760                           
 14761                           ; BSR set to: 0
 14762  004C44  0E01               	movlw	1
 14763  004C46  6F61               	movwf	_isupper$5864& (0+255),b
 14764  004C48                     l2821:
 14765                           
 14766                           ; BSR set to: 0
 14767                           
 14768                           ; BSR set to: 0
 14769  004C48  C061  F060         	movff	_isupper$5864,??_isupper
 14770  004C4C  3160               	rrcf	??_isupper& (0+255),w,b
 14771  004C4E  0012               	return	
 14772  004C50                     __end_of_isupper:
 14773                           	opt stack 0
 14774                           tosu	equ	0xFFF
 14775                           tosh	equ	0xFFE
 14776                           tosl	equ	0xFFD
 14777                           pclath	equ	0xFFA
 14778                           tblptru	equ	0xFF8
 14779                           tblptrh	equ	0xFF7
 14780                           tblptrl	equ	0xFF6
 14781                           tablat	equ	0xFF5
 14782                           prodh	equ	0xFF4
 14783                           prodl	equ	0xFF3
 14784                           intcon	equ	0xFF2
 14785                           intcon2	equ	0xFF1
 14786                           intcon3	equ	0xFF0
 14787                           indf0	equ	0xFEF
 14788                           postinc0	equ	0xFEE
 14789                           plusw0	equ	0xFEB
 14790                           fsr0h	equ	0xFEA
 14791                           fsr0l	equ	0xFE9
 14792                           wreg	equ	0xFE8
 14793                           indf1	equ	0xFE7
 14794                           postinc1	equ	0xFE6
 14795                           postdec1	equ	0xFE5
 14796                           fsr1h	equ	0xFE2
 14797                           fsr1l	equ	0xFE1
 14798                           indf2	equ	0xFDF
 14799                           postinc2	equ	0xFDE
 14800                           postdec2	equ	0xFDD
 14801                           plusw2	equ	0xFDB
 14802                           fsr2h	equ	0xFDA
 14803                           fsr2l	equ	0xFD9
 14804                           status	equ	0xFD8
 14805                           
 14806 ;; *************** function _putUSBUSART *****************
 14807 ;; Defined at:
 14808 ;;		line 559 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 14809 ;; Parameters:    Size  Location     Type
 14810 ;;  data            2    6[BANK0 ] PTR unsigned char 
 14811 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(236), Welcome(137), 
 14812 ;;		 -> Terminal@TermRxBuffer(50), Terminal@Payload(100), Terminal@UsbRxBuffer(200), WifiTerminal@UartBuffer(200), 
 14813 ;;  length          1    8[BANK0 ] unsigned char 
 14814 ;; Auto vars:     Size  Location     Type
 14815 ;;		None
 14816 ;; Return value:  Size  Location     Type
 14817 ;;                  1    wreg      void 
 14818 ;; Registers used:
 14819 ;;		wreg, status,2, status,0
 14820 ;; Tracked objects:
 14821 ;;		On entry : 0/0
 14822 ;;		On exit  : 0/0
 14823 ;;		Unchanged: 0/0
 14824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14825 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14828 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14829 ;;Total ram usage:        3 bytes
 14830 ;; Hardware stack levels used:    1
 14831 ;; Hardware stack levels required when called:   11
 14832 ;; This function calls:
 14833 ;;		Nothing
 14834 ;; This function is called by:
 14835 ;;		_Terminal
 14836 ;;		_Term_MainSm
 14837 ;;		_WifiTerminal
 14838 ;; This function uses a non-reentrant model
 14839 ;;
 14840                           
 14841                           	psect	text60
 14842  004C50                     __ptext60:
 14843                           	opt stack 0
 14844  004C50                     _putUSBUSART:
 14845                           	opt stack 15
 14846                           
 14847                           ;usb_device_cdc.c: 584: ;
 14848                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 14849                           
 14850                           ; BSR set to: 0
 14851                           ;incstack = 0
 14852  004C50  0100               	movlb	0	; () banked
 14853  004C52  51FB               	movf	_cdc_trf_state& (0+255),w,b
 14854  004C54  A4D8               	btfss	status,2,c
 14855  004C56  0012               	return	
 14856                           
 14857                           ; BSR set to: 0
 14858                           ;usb_device_cdc.c: 586: {
 14859                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 14860  004C58  C066  F135         	movff	putUSBUSART@data,_pCDCSrc
 14861  004C5C  C067  F136         	movff	putUSBUSART@data+1,_pCDCSrc+1
 14862                           
 14863                           ; BSR set to: 0
 14864  004C60  C068  F046         	movff	putUSBUSART@length,_cdc_tx_len
 14865                           
 14866                           ; BSR set to: 0
 14867  004C64  0E01               	movlw	1
 14868  004C66  0101               	movlb	1	; () banked
 14869  004C68  6F5C               	movwf	_cdc_mem_type& (0+255),b
 14870                           
 14871                           ; BSR set to: 1
 14872  004C6A  0E01               	movlw	1
 14873  004C6C  0100               	movlb	0	; () banked
 14874  004C6E  6FFB               	movwf	_cdc_trf_state& (0+255),b
 14875  004C70  0012               	return	
 14876  004C72                     __end_of_putUSBUSART:
 14877                           	opt stack 0
 14878                           tosu	equ	0xFFF
 14879                           tosh	equ	0xFFE
 14880                           tosl	equ	0xFFD
 14881                           pclath	equ	0xFFA
 14882                           tblptru	equ	0xFF8
 14883                           tblptrh	equ	0xFF7
 14884                           tblptrl	equ	0xFF6
 14885                           tablat	equ	0xFF5
 14886                           prodh	equ	0xFF4
 14887                           prodl	equ	0xFF3
 14888                           intcon	equ	0xFF2
 14889                           intcon2	equ	0xFF1
 14890                           intcon3	equ	0xFF0
 14891                           indf0	equ	0xFEF
 14892                           postinc0	equ	0xFEE
 14893                           plusw0	equ	0xFEB
 14894                           fsr0h	equ	0xFEA
 14895                           fsr0l	equ	0xFE9
 14896                           wreg	equ	0xFE8
 14897                           indf1	equ	0xFE7
 14898                           postinc1	equ	0xFE6
 14899                           postdec1	equ	0xFE5
 14900                           fsr1h	equ	0xFE2
 14901                           fsr1l	equ	0xFE1
 14902                           indf2	equ	0xFDF
 14903                           postinc2	equ	0xFDE
 14904                           postdec2	equ	0xFDD
 14905                           plusw2	equ	0xFDB
 14906                           fsr2h	equ	0xFDA
 14907                           fsr2l	equ	0xFD9
 14908                           status	equ	0xFD8
 14909                           
 14910 ;; *************** function _itoa *****************
 14911 ;; Defined at:
 14912 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 14913 ;; Parameters:    Size  Location     Type
 14914 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 14915 ;;		 -> Terminal@Payload(100), 
 14916 ;;  val             2   18[BANK0 ] int 
 14917 ;;  base            2   20[BANK0 ] int 
 14918 ;; Auto vars:     Size  Location     Type
 14919 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 14920 ;;		 -> Terminal@Payload(100), 
 14921 ;; Return value:  Size  Location     Type
 14922 ;;                  2   16[BANK0 ] PTR unsigned char 
 14923 ;; Registers used:
 14924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14925 ;; Tracked objects:
 14926 ;;		On entry : 0/0
 14927 ;;		On exit  : 0/0
 14928 ;;		Unchanged: 0/0
 14929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14930 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14931 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14933 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14934 ;;Total ram usage:        8 bytes
 14935 ;; Hardware stack levels used:    1
 14936 ;; Hardware stack levels required when called:   13
 14937 ;; This function calls:
 14938 ;;		_utoa
 14939 ;; This function is called by:
 14940 ;;		_Terminal
 14941 ;; This function uses a non-reentrant model
 14942 ;;
 14943                           
 14944                           	psect	text61
 14945  004706                     __ptext61:
 14946                           	opt stack 0
 14947  004706                     _itoa:
 14948                           	opt stack 12
 14949                           
 14950                           ; BSR set to: 0
 14951                           ;incstack = 0
 14952  004706  C070  F076         	movff	itoa@buf,itoa@cp
 14953  00470A  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 14954  00470E  0100               	movlb	0	; () banked
 14955  004710  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 14956  004712  D00C               	goto	l2472
 14957                           
 14958                           ; BSR set to: 0
 14959  004714  C070  FFD9         	movff	itoa@buf,fsr2l
 14960  004718  C071  FFDA         	movff	itoa@buf+1,fsr2h
 14961  00471C  0E2D               	movlw	45
 14962  00471E  6EDF               	movwf	indf2,c
 14963                           
 14964                           ; BSR set to: 0
 14965  004720  4B70               	infsnz	itoa@buf& (0+255),f,b
 14966  004722  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 14967                           
 14968                           ; BSR set to: 0
 14969  004724  6D72               	negf	itoa@val& (0+255),b
 14970  004726  1F73               	comf	(itoa@val+1)& (0+255),f,b
 14971  004728  B0D8               	btfsc	status,0,c
 14972  00472A  2B73               	incf	(itoa@val+1)& (0+255),f,b
 14973  00472C                     l2472:
 14974                           
 14975                           ; BSR set to: 0
 14976                           
 14977                           ; BSR set to: 0
 14978  00472C  C070  F067         	movff	itoa@buf,utoa@buf
 14979  004730  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 14980  004734  C072  F069         	movff	itoa@val,utoa@val
 14981  004738  C073  F06A         	movff	itoa@val+1,utoa@val+1
 14982  00473C  C074  F06B         	movff	itoa@base,utoa@base
 14983  004740  C075  F06C         	movff	itoa@base+1,utoa@base+1
 14984  004744  EC8E  F019         	call	_utoa	;wreg free
 14985  004748  0012               	return	
 14986  00474A                     __end_of_itoa:
 14987                           	opt stack 0
 14988                           tosu	equ	0xFFF
 14989                           tosh	equ	0xFFE
 14990                           tosl	equ	0xFFD
 14991                           pclath	equ	0xFFA
 14992                           tblptru	equ	0xFF8
 14993                           tblptrh	equ	0xFF7
 14994                           tblptrl	equ	0xFF6
 14995                           tablat	equ	0xFF5
 14996                           prodh	equ	0xFF4
 14997                           prodl	equ	0xFF3
 14998                           intcon	equ	0xFF2
 14999                           intcon2	equ	0xFF1
 15000                           intcon3	equ	0xFF0
 15001                           indf0	equ	0xFEF
 15002                           postinc0	equ	0xFEE
 15003                           plusw0	equ	0xFEB
 15004                           fsr0h	equ	0xFEA
 15005                           fsr0l	equ	0xFE9
 15006                           wreg	equ	0xFE8
 15007                           indf1	equ	0xFE7
 15008                           postinc1	equ	0xFE6
 15009                           postdec1	equ	0xFE5
 15010                           fsr1h	equ	0xFE2
 15011                           fsr1l	equ	0xFE1
 15012                           indf2	equ	0xFDF
 15013                           postinc2	equ	0xFDE
 15014                           postdec2	equ	0xFDD
 15015                           plusw2	equ	0xFDB
 15016                           fsr2h	equ	0xFDA
 15017                           fsr2l	equ	0xFD9
 15018                           status	equ	0xFD8
 15019                           
 15020 ;; *************** function _getsUSBUSART *****************
 15021 ;; Defined at:
 15022 ;;		line 488 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 15023 ;; Parameters:    Size  Location     Type
 15024 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 15025 ;;		 -> Terminal@UsbRxBuffer(200), WifiTerminal@UsbBuffer(200), 
 15026 ;;  len             1    9[BANK0 ] unsigned char 
 15027 ;; Auto vars:     Size  Location     Type
 15028 ;;		None
 15029 ;; Return value:  Size  Location     Type
 15030 ;;                  1    wreg      unsigned char 
 15031 ;; Registers used:
 15032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15033 ;; Tracked objects:
 15034 ;;		On entry : 0/0
 15035 ;;		On exit  : 0/0
 15036 ;;		Unchanged: 0/0
 15037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15038 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15040 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15041 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15042 ;;Total ram usage:        4 bytes
 15043 ;; Hardware stack levels used:    1
 15044 ;; Hardware stack levels required when called:   12
 15045 ;; This function calls:
 15046 ;;		_USBTransferOnePacket
 15047 ;; This function is called by:
 15048 ;;		_Terminal
 15049 ;;		_WifiTerminal
 15050 ;; This function uses a non-reentrant model
 15051 ;;
 15052                           
 15053                           	psect	text62
 15054  003764                     __ptext62:
 15055                           	opt stack 0
 15056  003764                     _getsUSBUSART:
 15057                           	opt stack 13
 15058                           
 15059                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 15060                           
 15061                           ;incstack = 0
 15062  003764  0E00               	movlw	0
 15063  003766  6E47               	movwf	_cdc_rx_len,c
 15064                           
 15065                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 15066  003768  5044               	movf	_CDCDataOutHandle,w,c
 15067  00376A  1045               	iorwf	_CDCDataOutHandle+1,w,c
 15068  00376C  B4D8               	btfsc	status,2,c
 15069  00376E  D006               	goto	u5510
 15070  003770  C044  FFD9         	movff	_CDCDataOutHandle,fsr2l
 15071  003774  C045  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 15072  003778  BEDF               	btfsc	indf2,7,c
 15073  00377A  D03C               	goto	l1661
 15074  00377C                     u5510:
 15075                           
 15076                           ;usb_device_cdc.c: 493: {
 15077                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 15078  00377C  EE20 F001          	lfsr	2,1
 15079  003780  5044               	movf	_CDCDataOutHandle,w,c
 15080  003782  26D9               	addwf	fsr2l,f,c
 15081  003784  5045               	movf	_CDCDataOutHandle+1,w,c
 15082  003786  22DA               	addwfc	fsr2h,f,c
 15083  003788  0100               	movlb	0	; () banked
 15084  00378A  5169               	movf	getsUSBUSART@len& (0+255),w,b
 15085  00378C  5CDE               	subwf	postinc2,w,c
 15086  00378E  B0D8               	btfsc	status,0,c
 15087  003790  D008               	goto	l1664
 15088                           
 15089                           ; BSR set to: 0
 15090                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 15091  003792  EE20 F001          	lfsr	2,1
 15092  003796  5044               	movf	_CDCDataOutHandle,w,c
 15093  003798  26D9               	addwf	fsr2l,f,c
 15094  00379A  5045               	movf	_CDCDataOutHandle+1,w,c
 15095  00379C  22DA               	addwfc	fsr2h,f,c
 15096  00379E  50DF               	movf	indf2,w,c
 15097  0037A0  6F69               	movwf	getsUSBUSART@len& (0+255),b
 15098  0037A2                     l1664:
 15099                           
 15100                           ; BSR set to: 0
 15101                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 15102                           
 15103                           ; BSR set to: 0
 15104  0037A2  0E00               	movlw	0
 15105  0037A4  6E47               	movwf	_cdc_rx_len,c
 15106  0037A6  D013               	goto	l1665
 15107  0037A8                     
 15108                           ; BSR set to: 0
 15109                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 15110                           
 15111                           ; BSR set to: 0
 15112  0037A8  5047               	movf	_cdc_rx_len,w,c
 15113  0037AA  0D01               	mullw	1
 15114  0037AC  0E00               	movlw	low _cdc_data_rx
 15115  0037AE  24F3               	addwf	prodl,w,c
 15116  0037B0  6ED9               	movwf	fsr2l,c
 15117  0037B2  0E02               	movlw	high _cdc_data_rx
 15118  0037B4  20F4               	addwfc	prodh,w,c
 15119  0037B6  6EDA               	movwf	fsr2h,c
 15120  0037B8  5047               	movf	_cdc_rx_len,w,c
 15121  0037BA  0D01               	mullw	1
 15122  0037BC  50F3               	movf	prodl,w,c
 15123  0037BE  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 15124  0037C0  6EE1               	movwf	fsr1l,c
 15125  0037C2  50F4               	movf	prodh,w,c
 15126  0037C4  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 15127  0037C6  6EE2               	movwf	fsr1h,c
 15128  0037C8  CFDF FFE7          	movff	indf2,indf1
 15129                           
 15130                           ; BSR set to: 0
 15131  0037CC  2A47               	incf	_cdc_rx_len,f,c
 15132  0037CE                     l1665:
 15133                           
 15134                           ; BSR set to: 0
 15135                           
 15136                           ; BSR set to: 0
 15137  0037CE  5169               	movf	getsUSBUSART@len& (0+255),w,b
 15138  0037D0  5C47               	subwf	_cdc_rx_len,w,c
 15139  0037D2  A0D8               	btfss	status,0,c
 15140  0037D4  D7E9               	goto	l1666
 15141                           
 15142                           ; BSR set to: 0
 15143                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15144                           
 15145                           ; BSR set to: 0
 15146  0037D6  0E00               	movlw	0
 15147  0037D8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 15148  0037DA  0E00               	movlw	low _cdc_data_rx
 15149  0037DC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 15150  0037DE  0E02               	movlw	high _cdc_data_rx
 15151  0037E0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 15152  0037E2  0E40               	movlw	64
 15153  0037E4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 15154  0037E6  0E02               	movlw	2
 15155  0037E8  ECD0  F017         	call	_USBTransferOnePacket
 15156  0037EC  C060  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 15157  0037F0  C061  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 15158  0037F4                     l1661:
 15159                           
 15160                           ;usb_device_cdc.c: 513: }
 15161                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 15162  0037F4  5047               	movf	_cdc_rx_len,w,c
 15163  0037F6  0012               	return	
 15164  0037F8                     __end_of_getsUSBUSART:
 15165                           	opt stack 0
 15166                           tosu	equ	0xFFF
 15167                           tosh	equ	0xFFE
 15168                           tosl	equ	0xFFD
 15169                           pclath	equ	0xFFA
 15170                           tblptru	equ	0xFF8
 15171                           tblptrh	equ	0xFF7
 15172                           tblptrl	equ	0xFF6
 15173                           tablat	equ	0xFF5
 15174                           prodh	equ	0xFF4
 15175                           prodl	equ	0xFF3
 15176                           intcon	equ	0xFF2
 15177                           intcon2	equ	0xFF1
 15178                           intcon3	equ	0xFF0
 15179                           indf0	equ	0xFEF
 15180                           postinc0	equ	0xFEE
 15181                           plusw0	equ	0xFEB
 15182                           fsr0h	equ	0xFEA
 15183                           fsr0l	equ	0xFE9
 15184                           wreg	equ	0xFE8
 15185                           indf1	equ	0xFE7
 15186                           postinc1	equ	0xFE6
 15187                           postdec1	equ	0xFE5
 15188                           fsr1h	equ	0xFE2
 15189                           fsr1l	equ	0xFE1
 15190                           indf2	equ	0xFDF
 15191                           postinc2	equ	0xFDE
 15192                           postdec2	equ	0xFDD
 15193                           plusw2	equ	0xFDB
 15194                           fsr2h	equ	0xFDA
 15195                           fsr2l	equ	0xFD9
 15196                           status	equ	0xFD8
 15197                           
 15198 ;; *************** function _USBTransferOnePacket *****************
 15199 ;; Defined at:
 15200 ;;		line 1013 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 15201 ;; Parameters:    Size  Location     Type
 15202 ;;  ep              1    wreg     unsigned char 
 15203 ;;  dir             1    0[BANK0 ] unsigned char 
 15204 ;;  data            2    1[BANK0 ] PTR unsigned char 
 15205 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 15206 ;;  len             1    3[BANK0 ] unsigned char 
 15207 ;; Auto vars:     Size  Location     Type
 15208 ;;  ep              1    4[BANK0 ] unsigned char 
 15209 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 15210 ;;		 -> BDT(48), NULL(0), 
 15211 ;; Return value:  Size  Location     Type
 15212 ;;                  2    0[BANK0 ] PTR void 
 15213 ;; Registers used:
 15214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15215 ;; Tracked objects:
 15216 ;;		On entry : 0/0
 15217 ;;		On exit  : 0/0
 15218 ;;		Unchanged: 0/0
 15219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15220 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15221 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15223 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15224 ;;Total ram usage:        7 bytes
 15225 ;; Hardware stack levels used:    1
 15226 ;; Hardware stack levels required when called:   11
 15227 ;; This function calls:
 15228 ;;		Nothing
 15229 ;; This function is called by:
 15230 ;;		_CDCInitEP
 15231 ;;		_getsUSBUSART
 15232 ;;		_CDCTxService
 15233 ;;		_USBCDCEventHandler
 15234 ;; This function uses a non-reentrant model
 15235 ;;
 15236                           
 15237                           	psect	text63
 15238  002FA0                     __ptext63:
 15239                           	opt stack 0
 15240  002FA0                     _USBTransferOnePacket:
 15241                           	opt stack 13
 15242                           
 15243                           ;incstack = 0
 15244                           ;USBTransferOnePacket@ep stored from wreg
 15245  002FA0  0100               	movlb	0	; () banked
 15246  002FA2  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 15247                           
 15248                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 15249                           ;usb_device.c: 1018: if(dir != 0)
 15250  002FA4  0100               	movlb	0	; () banked
 15251  002FA6  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 15252  002FA8  B4D8               	btfsc	status,2,c
 15253  002FAA  D007               	goto	l1385
 15254                           
 15255                           ; BSR set to: 0
 15256                           ;usb_device.c: 1019: {
 15257                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 15258  002FAC  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15259  002FAE  0D02               	mullw	2
 15260  002FB0  0E3E               	movlw	low _pBDTEntryIn
 15261  002FB2  24F3               	addwf	prodl,w,c
 15262  002FB4  6ED9               	movwf	fsr2l,c
 15263  002FB6  0E00               	movlw	high _pBDTEntryIn
 15264  002FB8  D006               	goto	L14
 15265  002FBA                     l1385:
 15266                           
 15267                           ; BSR set to: 0
 15268                           ;usb_device.c: 1023: else
 15269                           ;usb_device.c: 1024: {
 15270                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 15271                           
 15272                           ; BSR set to: 0
 15273  002FBA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15274  002FBC  0D02               	mullw	2
 15275  002FBE  0E20               	movlw	low _pBDTEntryOut
 15276  002FC0  24F3               	addwf	prodl,w,c
 15277  002FC2  6ED9               	movwf	fsr2l,c
 15278  002FC4  0E01               	movlw	high _pBDTEntryOut
 15279  002FC6                     L14:
 15280  002FC6  20F4               	addwfc	prodh,w,c
 15281  002FC8  6EDA               	movwf	fsr2h,c
 15282  002FCA  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 15283  002FCE  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 15284                           
 15285                           ; BSR set to: 0
 15286                           ;usb_device.c: 1027: }
 15287                           ;usb_device.c: 1031: if(handle == 0)
 15288                           
 15289                           ; BSR set to: 0
 15290  002FD2  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15291  002FD4  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15292  002FD6  A4D8               	btfss	status,2,c
 15293  002FD8  D005               	goto	l1387
 15294                           
 15295                           ; BSR set to: 0
 15296                           ;usb_device.c: 1032: {
 15297                           ;usb_device.c: 1033: return 0;
 15298  002FDA  0E00               	movlw	0
 15299  002FDC  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 15300  002FDE  0E00               	movlw	0
 15301  002FE0  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 15302                           
 15303                           ; BSR set to: 0
 15304  002FE2  0012               	return	
 15305  002FE4                     l1387:
 15306                           
 15307                           ; BSR set to: 0
 15308                           ;usb_device.c: 1034: }
 15309                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 15310                           
 15311                           ; BSR set to: 0
 15312  002FE4  EE20 F002          	lfsr	2,2
 15313  002FE8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15314  002FEA  26D9               	addwf	fsr2l,f,c
 15315  002FEC  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15316  002FEE  22DA               	addwfc	fsr2h,f,c
 15317  002FF0  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 15318  002FF4  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 15319                           
 15320                           ;usb_device.c: 1048: handle->CNT = len;
 15321  002FF8  EE20 F001          	lfsr	2,1
 15322  002FFC  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15323  002FFE  26D9               	addwf	fsr2l,f,c
 15324  003000  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15325  003002  22DA               	addwfc	fsr2h,f,c
 15326  003004  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 15327                           
 15328                           ; BSR set to: 0
 15329                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 15330  003008  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15331  00300C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15332  003010  0E40               	movlw	64
 15333  003012  16DF               	andwf	indf2,f,c
 15334                           
 15335                           ; BSR set to: 0
 15336                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 15337  003014  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15338  003018  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15339  00301C  0E00               	movlw	0
 15340  00301E  86DB               	bsf	plusw2,3,c
 15341                           
 15342                           ; BSR set to: 0
 15343                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 15344  003020  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15345  003024  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15346  003028  0E00               	movlw	0
 15347  00302A  8EDB               	bsf	plusw2,7,c
 15348                           
 15349                           ; BSR set to: 0
 15350                           ;usb_device.c: 1054: if(dir != 0)
 15351  00302C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 15352  00302E  B4D8               	btfsc	status,2,c
 15353  003030  D007               	goto	l1389
 15354                           
 15355                           ; BSR set to: 0
 15356                           ;usb_device.c: 1055: {
 15357                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 15358  003032  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15359  003034  0D02               	mullw	2
 15360  003036  0E3E               	movlw	low _pBDTEntryIn
 15361  003038  24F3               	addwf	prodl,w,c
 15362  00303A  6ED9               	movwf	fsr2l,c
 15363  00303C  0E00               	movlw	high _pBDTEntryIn
 15364  00303E  D006               	goto	L15
 15365  003040                     l1389:
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;usb_device.c: 1059: else
 15369                           ;usb_device.c: 1060: {
 15370                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 15371                           
 15372                           ; BSR set to: 0
 15373  003040  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15374  003042  0D02               	mullw	2
 15375  003044  0E20               	movlw	low _pBDTEntryOut
 15376  003046  24F3               	addwf	prodl,w,c
 15377  003048  6ED9               	movwf	fsr2l,c
 15378  00304A  0E01               	movlw	high _pBDTEntryOut
 15379  00304C                     L15:
 15380  00304C  20F4               	addwfc	prodh,w,c
 15381  00304E  6EDA               	movwf	fsr2h,c
 15382  003050  0E04               	movlw	4
 15383  003052  1ADF               	xorwf	indf2,f,c
 15384                           
 15385                           ; BSR set to: 0
 15386                           ;usb_device.c: 1063: }
 15387                           ;usb_device.c: 1064: return (void*)handle;
 15388                           
 15389                           ; BSR set to: 0
 15390  003054  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 15391  003058  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 15392  00305C  0012               	return	
 15393  00305E                     __end_of_USBTransferOnePacket:
 15394                           	opt stack 0
 15395                           tosu	equ	0xFFF
 15396                           tosh	equ	0xFFE
 15397                           tosl	equ	0xFFD
 15398                           pclath	equ	0xFFA
 15399                           tblptru	equ	0xFF8
 15400                           tblptrh	equ	0xFF7
 15401                           tblptrl	equ	0xFF6
 15402                           tablat	equ	0xFF5
 15403                           prodh	equ	0xFF4
 15404                           prodl	equ	0xFF3
 15405                           intcon	equ	0xFF2
 15406                           intcon2	equ	0xFF1
 15407                           intcon3	equ	0xFF0
 15408                           indf0	equ	0xFEF
 15409                           postinc0	equ	0xFEE
 15410                           plusw0	equ	0xFEB
 15411                           fsr0h	equ	0xFEA
 15412                           fsr0l	equ	0xFE9
 15413                           wreg	equ	0xFE8
 15414                           indf1	equ	0xFE7
 15415                           postinc1	equ	0xFE6
 15416                           postdec1	equ	0xFE5
 15417                           fsr1h	equ	0xFE2
 15418                           fsr1l	equ	0xFE1
 15419                           indf2	equ	0xFDF
 15420                           postinc2	equ	0xFDE
 15421                           postdec2	equ	0xFDD
 15422                           plusw2	equ	0xFDB
 15423                           fsr2h	equ	0xFDA
 15424                           fsr2l	equ	0xFD9
 15425                           status	equ	0xFD8
 15426                           
 15427 ;; *************** function _atoi *****************
 15428 ;; Defined at:
 15429 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 15430 ;; Parameters:    Size  Location     Type
 15431 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 15432 ;;		 -> Terminal@Addr(4), Terminal@Len(4), 
 15433 ;; Auto vars:     Size  Location     Type
 15434 ;;  a               2   11[BANK0 ] int 
 15435 ;;  sign            1   10[BANK0 ] unsigned char 
 15436 ;; Return value:  Size  Location     Type
 15437 ;;                  2    6[BANK0 ] int 
 15438 ;; Registers used:
 15439 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15440 ;; Tracked objects:
 15441 ;;		On entry : 0/0
 15442 ;;		On exit  : 0/0
 15443 ;;		Unchanged: 0/0
 15444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15445 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15446 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15447 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15448 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15449 ;;Total ram usage:        7 bytes
 15450 ;; Hardware stack levels used:    1
 15451 ;; Hardware stack levels required when called:   12
 15452 ;; This function calls:
 15453 ;;		___wmul
 15454 ;;		_isdigit
 15455 ;; This function is called by:
 15456 ;;		_Terminal
 15457 ;; This function uses a non-reentrant model
 15458 ;;
 15459                           
 15460                           	psect	text64
 15461  002A14                     __ptext64:
 15462                           	opt stack 0
 15463  002A14                     _atoi:
 15464                           	opt stack 13
 15465                           
 15466                           ; BSR set to: 0
 15467                           ;incstack = 0
 15468  002A14  D003               	goto	l2285
 15469  002A16  0100               	movlb	0	; () banked
 15470  002A18  4B66               	infsnz	atoi@s& (0+255),f,b
 15471  002A1A  2B67               	incf	(atoi@s+1)& (0+255),f,b
 15472  002A1C                     l2285:
 15473                           
 15474                           ; BSR set to: 0
 15475  002A1C  C066  FFD9         	movff	atoi@s,fsr2l
 15476  002A20  C067  FFDA         	movff	atoi@s+1,fsr2h
 15477  002A24  0E20               	movlw	32
 15478  002A26  18DE               	xorwf	postinc2,w,c
 15479  002A28  B4D8               	btfsc	status,2,c
 15480  002A2A  D7F5               	goto	l2286
 15481  002A2C  C066  FFD9         	movff	atoi@s,fsr2l
 15482  002A30  C067  FFDA         	movff	atoi@s+1,fsr2h
 15483  002A34  0E09               	movlw	9
 15484  002A36  18DE               	xorwf	postinc2,w,c
 15485  002A38  B4D8               	btfsc	status,2,c
 15486  002A3A  D7ED               	goto	l2286
 15487  002A3C  0E00               	movlw	0
 15488  002A3E  0100               	movlb	0	; () banked
 15489  002A40  6F6C               	movwf	(atoi@a+1)& (0+255),b
 15490  002A42  0E00               	movlw	0
 15491  002A44  6F6B               	movwf	atoi@a& (0+255),b
 15492  002A46  0E00               	movlw	0
 15493  002A48  6F6A               	movwf	atoi@sign& (0+255),b
 15494                           
 15495                           ; BSR set to: 0
 15496  002A4A  C066  FFD9         	movff	atoi@s,fsr2l
 15497  002A4E  C067  FFDA         	movff	atoi@s+1,fsr2h
 15498  002A52  0E2D               	movlw	45
 15499  002A54  18DE               	xorwf	postinc2,w,c
 15500  002A56  A4D8               	btfss	status,2,c
 15501  002A58  D002               	goto	l2288
 15502                           
 15503                           ; BSR set to: 0
 15504  002A5A  2B6A               	incf	atoi@sign& (0+255),f,b
 15505  002A5C  D026               	goto	l7389
 15506  002A5E                     l2288:
 15507                           
 15508                           ; BSR set to: 0
 15509                           
 15510                           ; BSR set to: 0
 15511  002A5E  C066  FFD9         	movff	atoi@s,fsr2l
 15512  002A62  C067  FFDA         	movff	atoi@s+1,fsr2h
 15513  002A66  0E2B               	movlw	43
 15514  002A68  18DE               	xorwf	postinc2,w,c
 15515  002A6A  A4D8               	btfss	status,2,c
 15516  002A6C  D020               	goto	l2291
 15517  002A6E  D01D               	goto	l7389
 15518  002A70                     
 15519                           ; BSR set to: 0
 15520  002A70  C06B  F060         	movff	atoi@a,___wmul@multiplier
 15521  002A74  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 15522  002A78  0E00               	movlw	0
 15523  002A7A  0100               	movlb	0	; () banked
 15524  002A7C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15525  002A7E  0E0A               	movlw	10
 15526  002A80  6F62               	movwf	___wmul@multiplicand& (0+255),b
 15527  002A82  ECCD  F025         	call	___wmul	;wreg free
 15528  002A86  C066  FFD9         	movff	atoi@s,fsr2l
 15529  002A8A  C067  FFDA         	movff	atoi@s+1,fsr2h
 15530  002A8E  50DF               	movf	indf2,w,c
 15531  002A90  0100               	movlb	0	; () banked
 15532  002A92  6F68               	movwf	??_atoi& (0+255),b
 15533  002A94  6B69               	clrf	(??_atoi+1)& (0+255),b
 15534  002A96  5160               	movf	?___wmul& (0+255),w,b
 15535  002A98  2768               	addwf	??_atoi& (0+255),f,b
 15536  002A9A  5161               	movf	(?___wmul+1)& (0+255),w,b
 15537  002A9C  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 15538  002A9E  0ED0               	movlw	208
 15539  002AA0  2568               	addwf	??_atoi& (0+255),w,b
 15540  002AA2  6F6B               	movwf	atoi@a& (0+255),b
 15541  002AA4  0EFF               	movlw	255
 15542  002AA6  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 15543  002AA8  6F6C               	movwf	(atoi@a+1)& (0+255),b
 15544  002AAA                     l7389:
 15545                           
 15546                           ; BSR set to: 0
 15547  002AAA  4B66               	infsnz	atoi@s& (0+255),f,b
 15548  002AAC  2B67               	incf	(atoi@s+1)& (0+255),f,b
 15549  002AAE                     l2291:
 15550                           
 15551                           ; BSR set to: 0
 15552                           
 15553                           ; BSR set to: 0
 15554  002AAE  C066  FFD9         	movff	atoi@s,fsr2l
 15555  002AB2  C067  FFDA         	movff	atoi@s+1,fsr2h
 15556  002AB6  50DF               	movf	indf2,w,c
 15557  002AB8  EC39  F026         	call	_isdigit
 15558  002ABC  B0D8               	btfsc	status,0,c
 15559  002ABE  D7D8               	goto	l2292
 15560  002AC0  0100               	movlb	0	; () banked
 15561  002AC2  516A               	movf	atoi@sign& (0+255),w,b
 15562  002AC4  B4D8               	btfsc	status,2,c
 15563  002AC6  D00D               	goto	l2294
 15564                           
 15565                           ; BSR set to: 0
 15566  002AC8  C06B  F068         	movff	atoi@a,??_atoi
 15567  002ACC  C06C  F069         	movff	atoi@a+1,??_atoi+1
 15568  002AD0  1F68               	comf	??_atoi& (0+255),f,b
 15569  002AD2  1F69               	comf	(??_atoi+1)& (0+255),f,b
 15570  002AD4  4B68               	infsnz	??_atoi& (0+255),f,b
 15571  002AD6  2B69               	incf	(??_atoi+1)& (0+255),f,b
 15572  002AD8  C068  F066         	movff	??_atoi,?_atoi
 15573  002ADC  C069  F067         	movff	??_atoi+1,?_atoi+1
 15574  002AE0  0012               	return	
 15575  002AE2                     l2294:
 15576                           
 15577                           ; BSR set to: 0
 15578  002AE2  C06B  F066         	movff	atoi@a,?_atoi
 15579  002AE6  C06C  F067         	movff	atoi@a+1,?_atoi+1
 15580                           
 15581                           ; BSR set to: 0
 15582  002AEA  0012               	return		;funcret
 15583  002AEC                     __end_of_atoi:
 15584                           	opt stack 0
 15585                           tosu	equ	0xFFF
 15586                           tosh	equ	0xFFE
 15587                           tosl	equ	0xFFD
 15588                           pclath	equ	0xFFA
 15589                           tblptru	equ	0xFF8
 15590                           tblptrh	equ	0xFF7
 15591                           tblptrl	equ	0xFF6
 15592                           tablat	equ	0xFF5
 15593                           prodh	equ	0xFF4
 15594                           prodl	equ	0xFF3
 15595                           intcon	equ	0xFF2
 15596                           intcon2	equ	0xFF1
 15597                           intcon3	equ	0xFF0
 15598                           indf0	equ	0xFEF
 15599                           postinc0	equ	0xFEE
 15600                           plusw0	equ	0xFEB
 15601                           fsr0h	equ	0xFEA
 15602                           fsr0l	equ	0xFE9
 15603                           wreg	equ	0xFE8
 15604                           indf1	equ	0xFE7
 15605                           postinc1	equ	0xFE6
 15606                           postdec1	equ	0xFE5
 15607                           fsr1h	equ	0xFE2
 15608                           fsr1l	equ	0xFE1
 15609                           indf2	equ	0xFDF
 15610                           postinc2	equ	0xFDE
 15611                           postdec2	equ	0xFDD
 15612                           plusw2	equ	0xFDB
 15613                           fsr2h	equ	0xFDA
 15614                           fsr2l	equ	0xFD9
 15615                           status	equ	0xFD8
 15616                           
 15617 ;; *************** function _isdigit *****************
 15618 ;; Defined at:
 15619 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 15620 ;; Parameters:    Size  Location     Type
 15621 ;;  c               1    wreg     unsigned char 
 15622 ;; Auto vars:     Size  Location     Type
 15623 ;;  c               1    2[BANK0 ] unsigned char 
 15624 ;; Return value:  Size  Location     Type
 15625 ;;		None               void
 15626 ;; Registers used:
 15627 ;;		wreg, status,2, status,0
 15628 ;; Tracked objects:
 15629 ;;		On entry : 0/0
 15630 ;;		On exit  : 0/0
 15631 ;;		Unchanged: 0/0
 15632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15634 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15635 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15636 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15637 ;;Total ram usage:        3 bytes
 15638 ;; Hardware stack levels used:    1
 15639 ;; Hardware stack levels required when called:   11
 15640 ;; This function calls:
 15641 ;;		Nothing
 15642 ;; This function is called by:
 15643 ;;		_atoi
 15644 ;;		_strtol
 15645 ;; This function uses a non-reentrant model
 15646 ;;
 15647                           
 15648                           	psect	text65
 15649  004C72                     __ptext65:
 15650                           	opt stack 0
 15651  004C72                     _isdigit:
 15652                           	opt stack 13
 15653                           
 15654                           ; BSR set to: 0
 15655                           ;incstack = 0
 15656                           ;isdigit@c stored from wreg
 15657  004C72  0100               	movlb	0	; () banked
 15658  004C74  6F62               	movwf	isdigit@c& (0+255),b
 15659  004C76  0E00               	movlw	0
 15660  004C78  0100               	movlb	0	; () banked
 15661  004C7A  6F61               	movwf	_isdigit$5593& (0+255),b
 15662                           
 15663                           ; BSR set to: 0
 15664  004C7C  0E3A               	movlw	58
 15665  004C7E  6162               	cpfslt	isdigit@c& (0+255),b
 15666  004C80  D005               	goto	l2466
 15667                           
 15668                           ; BSR set to: 0
 15669  004C82  0E2F               	movlw	47
 15670  004C84  6562               	cpfsgt	isdigit@c& (0+255),b
 15671  004C86  D002               	goto	l2466
 15672                           
 15673                           ; BSR set to: 0
 15674  004C88  0E01               	movlw	1
 15675  004C8A  6F61               	movwf	_isdigit$5593& (0+255),b
 15676  004C8C                     l2466:
 15677                           
 15678                           ; BSR set to: 0
 15679                           
 15680                           ; BSR set to: 0
 15681  004C8C  C061  F060         	movff	_isdigit$5593,??_isdigit
 15682  004C90  3160               	rrcf	??_isdigit& (0+255),w,b
 15683  004C92  0012               	return	
 15684  004C94                     __end_of_isdigit:
 15685                           	opt stack 0
 15686                           tosu	equ	0xFFF
 15687                           tosh	equ	0xFFE
 15688                           tosl	equ	0xFFD
 15689                           pclath	equ	0xFFA
 15690                           tblptru	equ	0xFF8
 15691                           tblptrh	equ	0xFF7
 15692                           tblptrl	equ	0xFF6
 15693                           tablat	equ	0xFF5
 15694                           prodh	equ	0xFF4
 15695                           prodl	equ	0xFF3
 15696                           intcon	equ	0xFF2
 15697                           intcon2	equ	0xFF1
 15698                           intcon3	equ	0xFF0
 15699                           indf0	equ	0xFEF
 15700                           postinc0	equ	0xFEE
 15701                           plusw0	equ	0xFEB
 15702                           fsr0h	equ	0xFEA
 15703                           fsr0l	equ	0xFE9
 15704                           wreg	equ	0xFE8
 15705                           indf1	equ	0xFE7
 15706                           postinc1	equ	0xFE6
 15707                           postdec1	equ	0xFE5
 15708                           fsr1h	equ	0xFE2
 15709                           fsr1l	equ	0xFE1
 15710                           indf2	equ	0xFDF
 15711                           postinc2	equ	0xFDE
 15712                           postdec2	equ	0xFDD
 15713                           plusw2	equ	0xFDB
 15714                           fsr2h	equ	0xFDA
 15715                           fsr2l	equ	0xFD9
 15716                           status	equ	0xFD8
 15717                           
 15718 ;; *************** function _I2cSlv_SendI2cMsg *****************
 15719 ;; Defined at:
 15720 ;;		line 236 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 15721 ;; Parameters:    Size  Location     Type
 15722 ;;  TxBuffer        2    3[BANK0 ] PTR unsigned char 
 15723 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 15724 ;;  SlaveAddr       1    5[BANK0 ] unsigned char 
 15725 ;;  DataLenght      1    6[BANK0 ] unsigned char 
 15726 ;; Auto vars:     Size  Location     Type
 15727 ;;  TxSts           1    7[BANK0 ] unsigned char 
 15728 ;; Return value:  Size  Location     Type
 15729 ;;                  1    wreg      unsigned char 
 15730 ;; Registers used:
 15731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15732 ;; Tracked objects:
 15733 ;;		On entry : 0/0
 15734 ;;		On exit  : 0/0
 15735 ;;		Unchanged: 0/0
 15736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15737 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15738 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15740 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15741 ;;Total ram usage:        5 bytes
 15742 ;; Hardware stack levels used:    1
 15743 ;; Hardware stack levels required when called:   12
 15744 ;; This function calls:
 15745 ;;		_GenerateEvt
 15746 ;; This function is called by:
 15747 ;;		_Terminal
 15748 ;; This function uses a non-reentrant model
 15749 ;;
 15750                           
 15751                           	psect	text66
 15752  004814                     __ptext66:
 15753                           	opt stack 0
 15754  004814                     _I2cSlv_SendI2cMsg:
 15755                           	opt stack 13
 15756                           
 15757                           ;i2c_slv.c: 238: UINT8 TxSts = 0u;
 15758                           
 15759                           ; BSR set to: 0
 15760                           ;incstack = 0
 15761  004814  0E00               	movlw	0
 15762  004816  0100               	movlb	0	; () banked
 15763  004818  6F67               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15764                           
 15765                           ; BSR set to: 0
 15766                           ;i2c_slv.c: 240: if (I2cComSts != TxInProgress)
 15767  00481A  044E               	decf	_I2cComSts,w,c
 15768  00481C  B4D8               	btfsc	status,2,c
 15769  00481E  D016               	goto	l1182
 15770                           
 15771                           ; BSR set to: 0
 15772                           ;i2c_slv.c: 241: {
 15773                           ;i2c_slv.c: 243: I2cTxPacket.SlaveAddress = SlaveAddr;
 15774  004820  C065  F1AC         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 15775                           
 15776                           ; BSR set to: 0
 15777                           ;i2c_slv.c: 244: I2cTxPacket.ReadWrite = ((UINT8)(0));
 15778  004824  0E00               	movlw	0
 15779  004826  0101               	movlb	1	; () banked
 15780  004828  6FAD               	movwf	(_I2cTxPacket+1)& (0+255),b
 15781                           
 15782                           ; BSR set to: 1
 15783                           ;i2c_slv.c: 245: I2cTxPacket.Lenght = DataLenght;
 15784  00482A  C066  F1B0         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 15785                           
 15786                           ; BSR set to: 1
 15787                           ;i2c_slv.c: 246: I2cTxPacket.Buffer = TxBuffer;
 15788  00482E  C063  F1AE         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 15789  004832  C064  F1AF         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 15790                           
 15791                           ; BSR set to: 1
 15792                           ;i2c_slv.c: 249: GenerateEvt(&I2cWriteDataEvt);
 15793  004836  0E54               	movlw	low _I2cWriteDataEvt
 15794  004838  0100               	movlb	0	; () banked
 15795  00483A  6F60               	movwf	GenerateEvt@Event& (0+255),b
 15796  00483C  0E00               	movlw	high _I2cWriteDataEvt
 15797  00483E  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 15798  004840  EC00  F027         	call	_GenerateEvt	;wreg free
 15799                           
 15800                           ;i2c_slv.c: 251: TxSts = 1u;
 15801  004844  0E01               	movlw	1
 15802  004846  0100               	movlb	0	; () banked
 15803  004848  6F67               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15804                           
 15805                           ;i2c_slv.c: 252: }
 15806  00484A  0012               	return	
 15807  00484C                     l1182:
 15808                           
 15809                           ; BSR set to: 0
 15810                           ;i2c_slv.c: 253: else
 15811                           ;i2c_slv.c: 254: {
 15812                           ;i2c_slv.c: 256: TxSts = 0u;
 15813                           
 15814                           ; BSR set to: 0
 15815  00484C  0E00               	movlw	0
 15816  00484E  6F67               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15817                           
 15818                           ; BSR set to: 0
 15819  004850  0012               	return	
 15820  004852                     __end_of_I2cSlv_SendI2cMsg:
 15821                           	opt stack 0
 15822                           tosu	equ	0xFFF
 15823                           tosh	equ	0xFFE
 15824                           tosl	equ	0xFFD
 15825                           pclath	equ	0xFFA
 15826                           tblptru	equ	0xFF8
 15827                           tblptrh	equ	0xFF7
 15828                           tblptrl	equ	0xFF6
 15829                           tablat	equ	0xFF5
 15830                           prodh	equ	0xFF4
 15831                           prodl	equ	0xFF3
 15832                           intcon	equ	0xFF2
 15833                           intcon2	equ	0xFF1
 15834                           intcon3	equ	0xFF0
 15835                           indf0	equ	0xFEF
 15836                           postinc0	equ	0xFEE
 15837                           plusw0	equ	0xFEB
 15838                           fsr0h	equ	0xFEA
 15839                           fsr0l	equ	0xFE9
 15840                           wreg	equ	0xFE8
 15841                           indf1	equ	0xFE7
 15842                           postinc1	equ	0xFE6
 15843                           postdec1	equ	0xFE5
 15844                           fsr1h	equ	0xFE2
 15845                           fsr1l	equ	0xFE1
 15846                           indf2	equ	0xFDF
 15847                           postinc2	equ	0xFDE
 15848                           postdec2	equ	0xFDD
 15849                           plusw2	equ	0xFDB
 15850                           fsr2h	equ	0xFDA
 15851                           fsr2l	equ	0xFD9
 15852                           status	equ	0xFD8
 15853                           
 15854 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 15855 ;; Defined at:
 15856 ;;		line 273 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 15857 ;; Parameters:    Size  Location     Type
 15858 ;;  RxBuffer        2    3[BANK0 ] PTR unsigned char 
 15859 ;;		 -> Terminal@TermRxBuffer(50), 
 15860 ;;  SlaveAddr       1    5[BANK0 ] unsigned char 
 15861 ;;  DataLenght      1    6[BANK0 ] unsigned char 
 15862 ;; Auto vars:     Size  Location     Type
 15863 ;;  RxSts           1    7[BANK0 ] unsigned char 
 15864 ;; Return value:  Size  Location     Type
 15865 ;;                  1    wreg      unsigned char 
 15866 ;; Registers used:
 15867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15868 ;; Tracked objects:
 15869 ;;		On entry : 0/0
 15870 ;;		On exit  : 0/0
 15871 ;;		Unchanged: 0/0
 15872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15873 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15876 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15877 ;;Total ram usage:        5 bytes
 15878 ;; Hardware stack levels used:    1
 15879 ;; Hardware stack levels required when called:   12
 15880 ;; This function calls:
 15881 ;;		_GenerateEvt
 15882 ;; This function is called by:
 15883 ;;		_Terminal
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           	psect	text67
 15888  00474A                     __ptext67:
 15889                           	opt stack 0
 15890  00474A                     _I2cSlv_ReceiveI2cMsg:
 15891                           	opt stack 13
 15892                           
 15893                           ;i2c_slv.c: 275: UINT8 RxSts = 0u;
 15894                           
 15895                           ; BSR set to: 0
 15896                           ;incstack = 0
 15897  00474A  0E00               	movlw	0
 15898  00474C  0100               	movlb	0	; () banked
 15899  00474E  6F67               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15900                           
 15901                           ; BSR set to: 0
 15902                           ;i2c_slv.c: 277: if (I2cComSts != RxInProgress)
 15903  004750  0E02               	movlw	2
 15904  004752  184E               	xorwf	_I2cComSts,w,c
 15905  004754  B4D8               	btfsc	status,2,c
 15906  004756  D018               	goto	l1187
 15907                           
 15908                           ; BSR set to: 0
 15909                           ;i2c_slv.c: 278: {
 15910                           ;i2c_slv.c: 280: I2cRxPacket.SlaveAddress = SlaveAddr;
 15911  004758  C065  F1A6         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 15912                           
 15913                           ; BSR set to: 0
 15914                           ;i2c_slv.c: 281: I2cRxPacket.ReadWrite = ((UINT8)(1));
 15915  00475C  0E01               	movlw	1
 15916  00475E  0101               	movlb	1	; () banked
 15917  004760  6FA7               	movwf	(_I2cRxPacket+1)& (0+255),b
 15918                           
 15919                           ; BSR set to: 1
 15920                           ;i2c_slv.c: 283: I2cRxPacket.Lenght = DataLenght + 1;
 15921  004762  0100               	movlb	0	; () banked
 15922  004764  2966               	incf	I2cSlv_ReceiveI2cMsg@DataLenght& (0+255),w,b
 15923  004766  0101               	movlb	1	; () banked
 15924  004768  6FAA               	movwf	(_I2cRxPacket+4)& (0+255),b
 15925                           
 15926                           ; BSR set to: 1
 15927                           ;i2c_slv.c: 284: I2cRxPacket.Buffer = RxBuffer;
 15928  00476A  C063  F1A8         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 15929  00476E  C064  F1A9         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 15930                           
 15931                           ; BSR set to: 1
 15932                           ;i2c_slv.c: 287: GenerateEvt(&I2cReadDataEvt);
 15933  004772  0E53               	movlw	low _I2cReadDataEvt
 15934  004774  0100               	movlb	0	; () banked
 15935  004776  6F60               	movwf	GenerateEvt@Event& (0+255),b
 15936  004778  0E00               	movlw	high _I2cReadDataEvt
 15937  00477A  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 15938  00477C  EC00  F027         	call	_GenerateEvt	;wreg free
 15939                           
 15940                           ;i2c_slv.c: 289: RxSts = 1u;
 15941  004780  0E01               	movlw	1
 15942  004782  0100               	movlb	0	; () banked
 15943  004784  6F67               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15944                           
 15945                           ;i2c_slv.c: 290: }
 15946  004786  0012               	return	
 15947  004788                     l1187:
 15948                           
 15949                           ; BSR set to: 0
 15950                           ;i2c_slv.c: 291: else
 15951                           ;i2c_slv.c: 292: {
 15952                           ;i2c_slv.c: 294: RxSts = 0u;
 15953                           
 15954                           ; BSR set to: 0
 15955  004788  0E00               	movlw	0
 15956  00478A  6F67               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15957                           
 15958                           ; BSR set to: 0
 15959  00478C  0012               	return	
 15960  00478E                     __end_of_I2cSlv_ReceiveI2cMsg:
 15961                           	opt stack 0
 15962                           tosu	equ	0xFFF
 15963                           tosh	equ	0xFFE
 15964                           tosl	equ	0xFFD
 15965                           pclath	equ	0xFFA
 15966                           tblptru	equ	0xFF8
 15967                           tblptrh	equ	0xFF7
 15968                           tblptrl	equ	0xFF6
 15969                           tablat	equ	0xFF5
 15970                           prodh	equ	0xFF4
 15971                           prodl	equ	0xFF3
 15972                           intcon	equ	0xFF2
 15973                           intcon2	equ	0xFF1
 15974                           intcon3	equ	0xFF0
 15975                           indf0	equ	0xFEF
 15976                           postinc0	equ	0xFEE
 15977                           plusw0	equ	0xFEB
 15978                           fsr0h	equ	0xFEA
 15979                           fsr0l	equ	0xFE9
 15980                           wreg	equ	0xFE8
 15981                           indf1	equ	0xFE7
 15982                           postinc1	equ	0xFE6
 15983                           postdec1	equ	0xFE5
 15984                           fsr1h	equ	0xFE2
 15985                           fsr1l	equ	0xFE1
 15986                           indf2	equ	0xFDF
 15987                           postinc2	equ	0xFDE
 15988                           postdec2	equ	0xFDD
 15989                           plusw2	equ	0xFDB
 15990                           fsr2h	equ	0xFDA
 15991                           fsr2l	equ	0xFD9
 15992                           status	equ	0xFD8
 15993                           
 15994 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 15995 ;; Defined at:
 15996 ;;		line 309 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 15997 ;; Parameters:    Size  Location     Type
 15998 ;;		None
 15999 ;; Auto vars:     Size  Location     Type
 16000 ;;  Result          1    4[BANK0 ] enum E8843
 16001 ;; Return value:  Size  Location     Type
 16002 ;;                  1    wreg      enum E8843
 16003 ;; Registers used:
 16004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16005 ;; Tracked objects:
 16006 ;;		On entry : 0/0
 16007 ;;		On exit  : 0/0
 16008 ;;		Unchanged: 0/0
 16009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16011 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16013 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16014 ;;Total ram usage:        1 bytes
 16015 ;; Hardware stack levels used:    1
 16016 ;; Hardware stack levels required when called:   12
 16017 ;; This function calls:
 16018 ;;		_ReceiveEvt
 16019 ;; This function is called by:
 16020 ;;		_Terminal
 16021 ;; This function uses a non-reentrant model
 16022 ;;
 16023                           
 16024                           	psect	text68
 16025  004C94                     __ptext68:
 16026                           	opt stack 0
 16027  004C94                     _I2cSlv_I2cReadMsgSts:
 16028                           	opt stack 13
 16029                           
 16030                           ;i2c_slv.c: 312: I2cReadMsgStsType Result;
 16031                           ;i2c_slv.c: 315: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 16032                           
 16033                           ; BSR set to: 0
 16034                           ;incstack = 0
 16035  004C94  0EAB               	movlw	low (_I2cRxPacket+5)
 16036  004C96  0100               	movlb	0	; () banked
 16037  004C98  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 16038  004C9A  0E01               	movlw	high (_I2cRxPacket+5)
 16039  004C9C  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 16040  004C9E  EC61  F025         	call	_ReceiveEvt	;wreg free
 16041  004CA2  0900               	iorlw	0
 16042  004CA4  B4D8               	btfsc	status,2,c
 16043  004CA6  D002               	goto	l1192
 16044                           
 16045                           ;i2c_slv.c: 316: {
 16046                           ;i2c_slv.c: 317: Result = MessageReceived;
 16047  004CA8  0E01               	movlw	1
 16048  004CAA  D001               	goto	L16
 16049  004CAC                     l1192:
 16050                           
 16051                           ;i2c_slv.c: 319: else
 16052                           ;i2c_slv.c: 320: {
 16053                           ;i2c_slv.c: 321: Result = MessageNotReceived;
 16054                           
 16055                           ; BSR set to: 0
 16056  004CAC  0E00               	movlw	0
 16057  004CAE                     L16:
 16058  004CAE  0100               	movlb	0	; () banked
 16059  004CB0  6F64               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 16060                           
 16061                           ; BSR set to: 0
 16062                           ;i2c_slv.c: 322: }
 16063                           ;i2c_slv.c: 324: return Result;
 16064  004CB2  5164               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 16065  004CB4  0012               	return	
 16066  004CB6                     __end_of_I2cSlv_I2cReadMsgSts:
 16067                           	opt stack 0
 16068                           tosu	equ	0xFFF
 16069                           tosh	equ	0xFFE
 16070                           tosl	equ	0xFFD
 16071                           pclath	equ	0xFFA
 16072                           tblptru	equ	0xFF8
 16073                           tblptrh	equ	0xFF7
 16074                           tblptrl	equ	0xFF6
 16075                           tablat	equ	0xFF5
 16076                           prodh	equ	0xFF4
 16077                           prodl	equ	0xFF3
 16078                           intcon	equ	0xFF2
 16079                           intcon2	equ	0xFF1
 16080                           intcon3	equ	0xFF0
 16081                           indf0	equ	0xFEF
 16082                           postinc0	equ	0xFEE
 16083                           plusw0	equ	0xFEB
 16084                           fsr0h	equ	0xFEA
 16085                           fsr0l	equ	0xFE9
 16086                           wreg	equ	0xFE8
 16087                           indf1	equ	0xFE7
 16088                           postinc1	equ	0xFE6
 16089                           postdec1	equ	0xFE5
 16090                           fsr1h	equ	0xFE2
 16091                           fsr1l	equ	0xFE1
 16092                           indf2	equ	0xFDF
 16093                           postinc2	equ	0xFDE
 16094                           postdec2	equ	0xFDD
 16095                           plusw2	equ	0xFDB
 16096                           fsr2h	equ	0xFDA
 16097                           fsr2l	equ	0xFD9
 16098                           status	equ	0xFD8
 16099                           
 16100 ;; *************** function _Rtcm_SetRtccDate *****************
 16101 ;; Defined at:
 16102 ;;		line 178 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 16103 ;; Parameters:    Size  Location     Type
 16104 ;;  Date            8   12[BANK0 ] struct _RtccDateType
 16105 ;; Auto vars:     Size  Location     Type
 16106 ;;		None
 16107 ;; Return value:  Size  Location     Type
 16108 ;;                  1    wreg      void 
 16109 ;; Registers used:
 16110 ;;		wreg, status,2, status,0, cstack
 16111 ;; Tracked objects:
 16112 ;;		On entry : 0/0
 16113 ;;		On exit  : 0/0
 16114 ;;		Unchanged: 0/0
 16115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16116 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16119 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16120 ;;Total ram usage:        8 bytes
 16121 ;; Hardware stack levels used:    1
 16122 ;; Hardware stack levels required when called:   13
 16123 ;; This function calls:
 16124 ;;		_Rtcc_LockRtc
 16125 ;;		_Rtcc_SetRtccValue
 16126 ;;		_Rtcc_UnlockRtc
 16127 ;; This function is called by:
 16128 ;;		_Rtcm_MainTask
 16129 ;; This function uses a non-reentrant model
 16130 ;;
 16131                           
 16132                           	psect	text69
 16133  004386                     __ptext69:
 16134                           	opt stack 0
 16135  004386                     _Rtcm_SetRtccDate:
 16136                           	opt stack 14
 16137                           
 16138                           ;rtcm.c: 181: Rtcc_UnlockRtc();
 16139                           
 16140                           ; BSR set to: 0
 16141                           ;incstack = 0
 16142  004386  EC53  F027         	call	_Rtcc_UnlockRtc	;wreg free
 16143                           
 16144                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 16145  00438A  0100               	movlb	0	; () banked
 16146  00438C  516C               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 16147  00438E  0F30               	addlw	48
 16148  004390  6F68               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 16149  004392  0E00               	movlw	0
 16150  004394  EC9A  F008         	call	_Rtcc_SetRtccValue
 16151                           
 16152                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 16153  004398  C06E  F068         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 16154  00439C  0E01               	movlw	1
 16155  00439E  EC9A  F008         	call	_Rtcc_SetRtccValue
 16156                           
 16157                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 16158  0043A2  C06F  F068         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 16159  0043A6  0E02               	movlw	2
 16160  0043A8  EC9A  F008         	call	_Rtcc_SetRtccValue
 16161                           
 16162                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 16163  0043AC  C070  F068         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 16164  0043B0  0E03               	movlw	3
 16165  0043B2  EC9A  F008         	call	_Rtcc_SetRtccValue
 16166                           
 16167                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 16168  0043B6  C071  F068         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 16169  0043BA  0E04               	movlw	4
 16170  0043BC  EC9A  F008         	call	_Rtcc_SetRtccValue
 16171                           
 16172                           ;rtcm.c: 189: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 16173  0043C0  C072  F068         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 16174  0043C4  0E05               	movlw	5
 16175  0043C6  EC9A  F008         	call	_Rtcc_SetRtccValue
 16176                           
 16177                           ;rtcm.c: 190: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 16178  0043CA  C073  F068         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 16179  0043CE  0E06               	movlw	6
 16180  0043D0  EC9A  F008         	call	_Rtcc_SetRtccValue
 16181                           
 16182                           ;rtcm.c: 193: Rtcc_LockRtc();
 16183  0043D4  EC5B  F027         	call	_Rtcc_LockRtc	;wreg free
 16184  0043D8  0012               	return		;funcret
 16185  0043DA                     __end_of_Rtcm_SetRtccDate:
 16186                           	opt stack 0
 16187                           tosu	equ	0xFFF
 16188                           tosh	equ	0xFFE
 16189                           tosl	equ	0xFFD
 16190                           pclath	equ	0xFFA
 16191                           tblptru	equ	0xFF8
 16192                           tblptrh	equ	0xFF7
 16193                           tblptrl	equ	0xFF6
 16194                           tablat	equ	0xFF5
 16195                           prodh	equ	0xFF4
 16196                           prodl	equ	0xFF3
 16197                           intcon	equ	0xFF2
 16198                           intcon2	equ	0xFF1
 16199                           intcon3	equ	0xFF0
 16200                           indf0	equ	0xFEF
 16201                           postinc0	equ	0xFEE
 16202                           plusw0	equ	0xFEB
 16203                           fsr0h	equ	0xFEA
 16204                           fsr0l	equ	0xFE9
 16205                           wreg	equ	0xFE8
 16206                           indf1	equ	0xFE7
 16207                           postinc1	equ	0xFE6
 16208                           postdec1	equ	0xFE5
 16209                           fsr1h	equ	0xFE2
 16210                           fsr1l	equ	0xFE1
 16211                           indf2	equ	0xFDF
 16212                           postinc2	equ	0xFDE
 16213                           postdec2	equ	0xFDD
 16214                           plusw2	equ	0xFDB
 16215                           fsr2h	equ	0xFDA
 16216                           fsr2l	equ	0xFD9
 16217                           status	equ	0xFD8
 16218                           
 16219 ;; *************** function _Rtcc_UnlockRtc *****************
 16220 ;; Defined at:
 16221 ;;		line 163 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 16222 ;; Parameters:    Size  Location     Type
 16223 ;;		None
 16224 ;; Auto vars:     Size  Location     Type
 16225 ;;		None
 16226 ;; Return value:  Size  Location     Type
 16227 ;;                  1    wreg      void 
 16228 ;; Registers used:
 16229 ;;		None
 16230 ;; Tracked objects:
 16231 ;;		On entry : 0/0
 16232 ;;		On exit  : 0/0
 16233 ;;		Unchanged: 0/0
 16234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16239 ;;Total ram usage:        0 bytes
 16240 ;; Hardware stack levels used:    1
 16241 ;; Hardware stack levels required when called:   11
 16242 ;; This function calls:
 16243 ;;		Nothing
 16244 ;; This function is called by:
 16245 ;;		_Rtcm_MainTask
 16246 ;;		_Rtcm_SetRtccDate
 16247 ;;		_Rtcm_SetRtccAlarm
 16248 ;; This function uses a non-reentrant model
 16249 ;;
 16250                           
 16251                           	psect	text70
 16252  004EA6                     __ptext70:
 16253                           	opt stack 0
 16254  004EA6                     _Rtcc_UnlockRtc:
 16255                           	opt stack 15
 16256                           
 16257                           ;incstack = 0
 16258  004EA6  010F               	movlb	15	;# 
 16259  004EA8  0E55               	movlw	85	;# 
 16260  004EAA  6EA7               	movwf	4007,c	;# 
 16261  004EAC  0EAA               	movlw	170	;# 
 16262  004EAE  6EA7               	movwf	4007,c	;# 
 16263                           
 16264                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1;
 16265  004EB0  010F               	movlb	15	; () banked
 16266  004EB2  8B3F               	bsf	63,5,b	;volatile
 16267                           
 16268                           ; BSR set to: 15
 16269  004EB4  0012               	return		;funcret
 16270  004EB6                     __end_of_Rtcc_UnlockRtc:
 16271                           	opt stack 0
 16272                           tosu	equ	0xFFF
 16273                           tosh	equ	0xFFE
 16274                           tosl	equ	0xFFD
 16275                           pclath	equ	0xFFA
 16276                           tblptru	equ	0xFF8
 16277                           tblptrh	equ	0xFF7
 16278                           tblptrl	equ	0xFF6
 16279                           tablat	equ	0xFF5
 16280                           prodh	equ	0xFF4
 16281                           prodl	equ	0xFF3
 16282                           intcon	equ	0xFF2
 16283                           intcon2	equ	0xFF1
 16284                           intcon3	equ	0xFF0
 16285                           indf0	equ	0xFEF
 16286                           postinc0	equ	0xFEE
 16287                           plusw0	equ	0xFEB
 16288                           fsr0h	equ	0xFEA
 16289                           fsr0l	equ	0xFE9
 16290                           wreg	equ	0xFE8
 16291                           indf1	equ	0xFE7
 16292                           postinc1	equ	0xFE6
 16293                           postdec1	equ	0xFE5
 16294                           fsr1h	equ	0xFE2
 16295                           fsr1l	equ	0xFE1
 16296                           indf2	equ	0xFDF
 16297                           postinc2	equ	0xFDE
 16298                           postdec2	equ	0xFDD
 16299                           plusw2	equ	0xFDB
 16300                           fsr2h	equ	0xFDA
 16301                           fsr2l	equ	0xFD9
 16302                           status	equ	0xFD8
 16303                           
 16304 ;; *************** function _Rtcc_SetRtccValue *****************
 16305 ;; Defined at:
 16306 ;;		line 383 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 16307 ;; Parameters:    Size  Location     Type
 16308 ;;  RtccPtrVal      1    wreg     enum E7751
 16309 ;;  Value           1    8[BANK0 ] unsigned char 
 16310 ;; Auto vars:     Size  Location     Type
 16311 ;;  RtccPtrVal      1   11[BANK0 ] enum E7751
 16312 ;; Return value:  Size  Location     Type
 16313 ;;                  1    wreg      void 
 16314 ;; Registers used:
 16315 ;;		wreg, status,2, status,0, cstack
 16316 ;; Tracked objects:
 16317 ;;		On entry : 0/0
 16318 ;;		On exit  : 0/0
 16319 ;;		Unchanged: 0/0
 16320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16321 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16323 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16324 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16325 ;;Total ram usage:        4 bytes
 16326 ;; Hardware stack levels used:    1
 16327 ;; Hardware stack levels required when called:   12
 16328 ;; This function calls:
 16329 ;;		___awdiv
 16330 ;;		___awmod
 16331 ;; This function is called by:
 16332 ;;		_Rtcm_SetRtccDate
 16333 ;; This function uses a non-reentrant model
 16334 ;;
 16335                           
 16336                           	psect	text71
 16337  001134                     __ptext71:
 16338                           	opt stack 0
 16339  001134                     _Rtcc_SetRtccValue:
 16340                           	opt stack 14
 16341                           
 16342                           ; BSR set to: 15
 16343                           ;incstack = 0
 16344                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 16345  001134  0100               	movlb	0	; () banked
 16346  001136  6F6B               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 16347                           
 16348                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 16349  001138  D0FC               	goto	l323
 16350  00113A                     l324:
 16351                           
 16352                           ; BSR set to: 0
 16353                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 16354  00113A  010F               	movlb	15	; () banked
 16355  00113C  833F               	bsf	63,1,b	;volatile
 16356                           
 16357                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 16358  00113E  813F               	bsf	63,0,b	;volatile
 16359                           
 16360                           ; BSR set to: 15
 16361                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16362  001140  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16363  001144  0100               	movlb	0	; () banked
 16364  001146  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16365  001148  0E00               	movlw	0
 16366  00114A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16367  00114C  0E0A               	movlw	10
 16368  00114E  6F62               	movwf	___awmod@divisor& (0+255),b
 16369  001150  ECAA  F01E         	call	___awmod	;wreg free
 16370  001154  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16371  001158  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16372  00115C  0E0F               	movlw	15
 16373  00115E  0100               	movlb	0	; () banked
 16374  001160  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16375  001162  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16376  001166  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16377  001168  0E00               	movlw	0
 16378  00116A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16379  00116C  0E0A               	movlw	10
 16380  00116E  6F62               	movwf	___awdiv@divisor& (0+255),b
 16381  001170  ECA5  F01D         	call	___awdiv	;wreg free
 16382  001174  0100               	movlb	0	; () banked
 16383  001176  3960               	swapf	?___awdiv& (0+255),w,b
 16384  001178  0BF0               	andlw	240
 16385  00117A  0BF0               	andlw	240
 16386  00117C  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16387  00117E  6E98               	movwf	3992,c	;volatile
 16388                           
 16389                           ;rtcc_drv.c: 393: break;
 16390  001180  0012               	return	
 16391  001182                     l326:
 16392                           
 16393                           ; BSR set to: 0
 16394                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 16395  001182  010F               	movlb	15	; () banked
 16396  001184  833F               	bsf	63,1,b	;volatile
 16397                           
 16398                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 16399  001186  913F               	bcf	63,0,b	;volatile
 16400                           
 16401                           ; BSR set to: 15
 16402                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16403  001188  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16404  00118C  0100               	movlb	0	; () banked
 16405  00118E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16406  001190  0E00               	movlw	0
 16407  001192  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16408  001194  0E0A               	movlw	10
 16409  001196  6F62               	movwf	___awmod@divisor& (0+255),b
 16410  001198  ECAA  F01E         	call	___awmod	;wreg free
 16411  00119C  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16412  0011A0  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16413  0011A4  0E0F               	movlw	15
 16414  0011A6  0100               	movlb	0	; () banked
 16415  0011A8  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16416  0011AA  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16417  0011AE  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16418  0011B0  0E00               	movlw	0
 16419  0011B2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16420  0011B4  0E0A               	movlw	10
 16421  0011B6  6F62               	movwf	___awdiv@divisor& (0+255),b
 16422  0011B8  ECA5  F01D         	call	___awdiv	;wreg free
 16423  0011BC  0100               	movlb	0	; () banked
 16424  0011BE  3960               	swapf	?___awdiv& (0+255),w,b
 16425  0011C0  0BF0               	andlw	240
 16426  0011C2  0BF0               	andlw	240
 16427  0011C4  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16428  0011C6  6E99               	movwf	3993,c	;volatile
 16429                           
 16430                           ;rtcc_drv.c: 401: break;
 16431  0011C8  0012               	return	
 16432  0011CA                     l327:
 16433                           
 16434                           ; BSR set to: 0
 16435                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 16436  0011CA  010F               	movlb	15	; () banked
 16437  0011CC  833F               	bsf	63,1,b	;volatile
 16438                           
 16439                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 16440  0011CE  913F               	bcf	63,0,b	;volatile
 16441                           
 16442                           ; BSR set to: 15
 16443                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16444  0011D0  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16445  0011D4  0100               	movlb	0	; () banked
 16446  0011D6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16447  0011D8  0E00               	movlw	0
 16448  0011DA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16449  0011DC  0E0A               	movlw	10
 16450  0011DE  6F62               	movwf	___awmod@divisor& (0+255),b
 16451  0011E0  ECAA  F01E         	call	___awmod	;wreg free
 16452  0011E4  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16453  0011E8  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16454  0011EC  0E0F               	movlw	15
 16455  0011EE  0100               	movlb	0	; () banked
 16456  0011F0  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16457  0011F2  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16458  0011F6  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16459  0011F8  0E00               	movlw	0
 16460  0011FA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16461  0011FC  0E0A               	movlw	10
 16462  0011FE  6F62               	movwf	___awdiv@divisor& (0+255),b
 16463  001200  ECA5  F01D         	call	___awdiv	;wreg free
 16464  001204  0100               	movlb	0	; () banked
 16465  001206  3960               	swapf	?___awdiv& (0+255),w,b
 16466  001208  0BF0               	andlw	240
 16467  00120A  0BF0               	andlw	240
 16468  00120C  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16469  00120E  6E98               	movwf	3992,c	;volatile
 16470                           
 16471                           ;rtcc_drv.c: 409: break;
 16472  001210  0012               	return	
 16473  001212                     l328:
 16474                           
 16475                           ; BSR set to: 0
 16476                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 16477  001212  010F               	movlb	15	; () banked
 16478  001214  933F               	bcf	63,1,b	;volatile
 16479                           
 16480                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 16481  001216  813F               	bsf	63,0,b	;volatile
 16482                           
 16483                           ; BSR set to: 15
 16484                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16485  001218  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16486  00121C  0100               	movlb	0	; () banked
 16487  00121E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16488  001220  0E00               	movlw	0
 16489  001222  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16490  001224  0E0A               	movlw	10
 16491  001226  6F62               	movwf	___awmod@divisor& (0+255),b
 16492  001228  ECAA  F01E         	call	___awmod	;wreg free
 16493  00122C  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16494  001230  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16495  001234  0E0F               	movlw	15
 16496  001236  0100               	movlb	0	; () banked
 16497  001238  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16498  00123A  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16499  00123E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16500  001240  0E00               	movlw	0
 16501  001242  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16502  001244  0E0A               	movlw	10
 16503  001246  6F62               	movwf	___awdiv@divisor& (0+255),b
 16504  001248  ECA5  F01D         	call	___awdiv	;wreg free
 16505  00124C  0100               	movlb	0	; () banked
 16506  00124E  3960               	swapf	?___awdiv& (0+255),w,b
 16507  001250  0BF0               	andlw	240
 16508  001252  0BF0               	andlw	240
 16509  001254  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16510  001256  6E99               	movwf	3993,c	;volatile
 16511                           
 16512                           ;rtcc_drv.c: 417: break;
 16513  001258  0012               	return	
 16514  00125A                     l329:
 16515                           
 16516                           ; BSR set to: 0
 16517                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 16518  00125A  010F               	movlb	15	; () banked
 16519  00125C  933F               	bcf	63,1,b	;volatile
 16520                           
 16521                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 16522  00125E  813F               	bsf	63,0,b	;volatile
 16523                           
 16524                           ; BSR set to: 15
 16525                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16526  001260  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16527  001264  0100               	movlb	0	; () banked
 16528  001266  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16529  001268  0E00               	movlw	0
 16530  00126A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16531  00126C  0E0A               	movlw	10
 16532  00126E  6F62               	movwf	___awmod@divisor& (0+255),b
 16533  001270  ECAA  F01E         	call	___awmod	;wreg free
 16534  001274  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16535  001278  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16536  00127C  0E0F               	movlw	15
 16537  00127E  0100               	movlb	0	; () banked
 16538  001280  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16539  001282  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16540  001286  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16541  001288  0E00               	movlw	0
 16542  00128A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16543  00128C  0E0A               	movlw	10
 16544  00128E  6F62               	movwf	___awdiv@divisor& (0+255),b
 16545  001290  ECA5  F01D         	call	___awdiv	;wreg free
 16546  001294  0100               	movlb	0	; () banked
 16547  001296  3960               	swapf	?___awdiv& (0+255),w,b
 16548  001298  0BF0               	andlw	240
 16549  00129A  0BF0               	andlw	240
 16550  00129C  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16551  00129E  6E98               	movwf	3992,c	;volatile
 16552                           
 16553                           ;rtcc_drv.c: 425: break;
 16554  0012A0  0012               	return	
 16555  0012A2                     l330:
 16556                           
 16557                           ; BSR set to: 0
 16558                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 16559  0012A2  010F               	movlb	15	; () banked
 16560  0012A4  933F               	bcf	63,1,b	;volatile
 16561                           
 16562                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 16563  0012A6  913F               	bcf	63,0,b	;volatile
 16564                           
 16565                           ; BSR set to: 15
 16566                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16567  0012A8  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16568  0012AC  0100               	movlb	0	; () banked
 16569  0012AE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16570  0012B0  0E00               	movlw	0
 16571  0012B2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16572  0012B4  0E0A               	movlw	10
 16573  0012B6  6F62               	movwf	___awmod@divisor& (0+255),b
 16574  0012B8  ECAA  F01E         	call	___awmod	;wreg free
 16575  0012BC  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16576  0012C0  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16577  0012C4  0E0F               	movlw	15
 16578  0012C6  0100               	movlb	0	; () banked
 16579  0012C8  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16580  0012CA  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16581  0012CE  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16582  0012D0  0E00               	movlw	0
 16583  0012D2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16584  0012D4  0E0A               	movlw	10
 16585  0012D6  6F62               	movwf	___awdiv@divisor& (0+255),b
 16586  0012D8  ECA5  F01D         	call	___awdiv	;wreg free
 16587  0012DC  0100               	movlb	0	; () banked
 16588  0012DE  3960               	swapf	?___awdiv& (0+255),w,b
 16589  0012E0  0BF0               	andlw	240
 16590  0012E2  0BF0               	andlw	240
 16591  0012E4  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16592  0012E6  6E99               	movwf	3993,c	;volatile
 16593                           
 16594                           ;rtcc_drv.c: 433: break;
 16595  0012E8  0012               	return	
 16596  0012EA                     l331:
 16597                           
 16598                           ; BSR set to: 0
 16599                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 16600  0012EA  010F               	movlb	15	; () banked
 16601  0012EC  933F               	bcf	63,1,b	;volatile
 16602                           
 16603                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 16604  0012EE  913F               	bcf	63,0,b	;volatile
 16605                           
 16606                           ; BSR set to: 15
 16607                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16608  0012F0  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16609  0012F4  0100               	movlb	0	; () banked
 16610  0012F6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16611  0012F8  0E00               	movlw	0
 16612  0012FA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16613  0012FC  0E0A               	movlw	10
 16614  0012FE  6F62               	movwf	___awmod@divisor& (0+255),b
 16615  001300  ECAA  F01E         	call	___awmod	;wreg free
 16616  001304  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16617  001308  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16618  00130C  0E0F               	movlw	15
 16619  00130E  0100               	movlb	0	; () banked
 16620  001310  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16621  001312  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16622  001316  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16623  001318  0E00               	movlw	0
 16624  00131A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16625  00131C  0E0A               	movlw	10
 16626  00131E  6F62               	movwf	___awdiv@divisor& (0+255),b
 16627  001320  ECA5  F01D         	call	___awdiv	;wreg free
 16628  001324  0100               	movlb	0	; () banked
 16629  001326  3960               	swapf	?___awdiv& (0+255),w,b
 16630  001328  0BF0               	andlw	240
 16631  00132A  0BF0               	andlw	240
 16632  00132C  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16633  00132E  6E98               	movwf	3992,c	;volatile
 16634                           
 16635                           ; BSR set to: 0
 16636                           ;rtcc_drv.c: 445: }
 16637                           
 16638                           ; BSR set to: 0
 16639                           ;rtcc_drv.c: 444: break;
 16640                           
 16641                           ;rtcc_drv.c: 443: default:
 16642                           
 16643                           ;rtcc_drv.c: 441: break;
 16644  001330  0012               	return	
 16645  001332                     l323:
 16646                           
 16647                           ; BSR set to: 0
 16648  001332  0100               	movlb	0	; () banked
 16649  001334  516B               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 16650                           
 16651                           ; Switch size 1, requested type "space"
 16652                           ; Number of cases is 7, Range of values is 0 to 6
 16653                           ; switch strategies available:
 16654                           ; Name         Instructions Cycles
 16655                           ; simple_byte           22    12 (average)
 16656                           ;	Chosen strategy is simple_byte
 16657  001336  0A00               	xorlw	0	; case 0
 16658  001338  B4D8               	btfsc	status,2,c
 16659  00133A  D6FF               	goto	l324
 16660  00133C  0A01               	xorlw	1	; case 1
 16661  00133E  B4D8               	btfsc	status,2,c
 16662  001340  D720               	goto	l326
 16663  001342  0A03               	xorlw	3	; case 2
 16664  001344  B4D8               	btfsc	status,2,c
 16665  001346  D741               	goto	l327
 16666  001348  0A01               	xorlw	1	; case 3
 16667  00134A  B4D8               	btfsc	status,2,c
 16668  00134C  D762               	goto	l328
 16669  00134E  0A07               	xorlw	7	; case 4
 16670  001350  B4D8               	btfsc	status,2,c
 16671  001352  D783               	goto	l329
 16672  001354  0A01               	xorlw	1	; case 5
 16673  001356  B4D8               	btfsc	status,2,c
 16674  001358  D7A4               	goto	l330
 16675  00135A  0A03               	xorlw	3	; case 6
 16676  00135C  A4D8               	btfss	status,2,c
 16677  00135E  0012               	return	
 16678  001360  D7C4               	goto	l331
 16679  001362                     __end_of_Rtcc_SetRtccValue:
 16680                           	opt stack 0
 16681                           tosu	equ	0xFFF
 16682                           tosh	equ	0xFFE
 16683                           tosl	equ	0xFFD
 16684                           pclath	equ	0xFFA
 16685                           tblptru	equ	0xFF8
 16686                           tblptrh	equ	0xFF7
 16687                           tblptrl	equ	0xFF6
 16688                           tablat	equ	0xFF5
 16689                           prodh	equ	0xFF4
 16690                           prodl	equ	0xFF3
 16691                           intcon	equ	0xFF2
 16692                           intcon2	equ	0xFF1
 16693                           intcon3	equ	0xFF0
 16694                           indf0	equ	0xFEF
 16695                           postinc0	equ	0xFEE
 16696                           plusw0	equ	0xFEB
 16697                           fsr0h	equ	0xFEA
 16698                           fsr0l	equ	0xFE9
 16699                           wreg	equ	0xFE8
 16700                           indf1	equ	0xFE7
 16701                           postinc1	equ	0xFE6
 16702                           postdec1	equ	0xFE5
 16703                           fsr1h	equ	0xFE2
 16704                           fsr1l	equ	0xFE1
 16705                           indf2	equ	0xFDF
 16706                           postinc2	equ	0xFDE
 16707                           postdec2	equ	0xFDD
 16708                           plusw2	equ	0xFDB
 16709                           fsr2h	equ	0xFDA
 16710                           fsr2l	equ	0xFD9
 16711                           status	equ	0xFD8
 16712                           
 16713 ;; *************** function ___awmod *****************
 16714 ;; Defined at:
 16715 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 16716 ;; Parameters:    Size  Location     Type
 16717 ;;  dividend        2    0[BANK0 ] int 
 16718 ;;  divisor         2    2[BANK0 ] int 
 16719 ;; Auto vars:     Size  Location     Type
 16720 ;;  sign            1    5[BANK0 ] unsigned char 
 16721 ;;  counter         1    4[BANK0 ] unsigned char 
 16722 ;; Return value:  Size  Location     Type
 16723 ;;                  2    0[BANK0 ] int 
 16724 ;; Registers used:
 16725 ;;		wreg, status,2, status,0
 16726 ;; Tracked objects:
 16727 ;;		On entry : 0/0
 16728 ;;		On exit  : 0/0
 16729 ;;		Unchanged: 0/0
 16730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16732 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16734 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16735 ;;Total ram usage:        6 bytes
 16736 ;; Hardware stack levels used:    1
 16737 ;; Hardware stack levels required when called:   11
 16738 ;; This function calls:
 16739 ;;		Nothing
 16740 ;; This function is called by:
 16741 ;;		_Rtcc_SetRtccValue
 16742 ;;		_Rtcc_SetRtccAlarm
 16743 ;; This function uses a non-reentrant model
 16744 ;;
 16745                           
 16746                           	psect	text72
 16747  003D54                     __ptext72:
 16748                           	opt stack 0
 16749  003D54                     ___awmod:
 16750                           	opt stack 14
 16751                           
 16752                           ; BSR set to: 0
 16753                           ;incstack = 0
 16754  003D54  0E00               	movlw	0
 16755  003D56  0100               	movlb	0	; () banked
 16756  003D58  6F65               	movwf	___awmod@sign& (0+255),b
 16757                           
 16758                           ; BSR set to: 0
 16759  003D5A  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 16760  003D5C  D006               	goto	l2317
 16761                           
 16762                           ; BSR set to: 0
 16763  003D5E  6D60               	negf	___awmod@dividend& (0+255),b
 16764  003D60  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 16765  003D62  B0D8               	btfsc	status,0,c
 16766  003D64  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 16767                           
 16768                           ; BSR set to: 0
 16769  003D66  0E01               	movlw	1
 16770  003D68  6F65               	movwf	___awmod@sign& (0+255),b
 16771  003D6A                     l2317:
 16772                           
 16773                           ; BSR set to: 0
 16774                           
 16775                           ; BSR set to: 0
 16776  003D6A  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16777  003D6C  D004               	goto	l2318
 16778                           
 16779                           ; BSR set to: 0
 16780  003D6E  6D62               	negf	___awmod@divisor& (0+255),b
 16781  003D70  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 16782  003D72  B0D8               	btfsc	status,0,c
 16783  003D74  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 16784  003D76                     l2318:
 16785                           
 16786                           ; BSR set to: 0
 16787                           
 16788                           ; BSR set to: 0
 16789  003D76  5162               	movf	___awmod@divisor& (0+255),w,b
 16790  003D78  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 16791  003D7A  B4D8               	btfsc	status,2,c
 16792  003D7C  D018               	goto	l2325
 16793                           
 16794                           ; BSR set to: 0
 16795  003D7E  0E01               	movlw	1
 16796  003D80  6F64               	movwf	___awmod@counter& (0+255),b
 16797  003D82  D004               	goto	l2320
 16798  003D84                     
 16799                           ; BSR set to: 0
 16800                           
 16801                           ; BSR set to: 0
 16802  003D84  90D8               	bcf	status,0,c
 16803  003D86  3762               	rlcf	___awmod@divisor& (0+255),f,b
 16804  003D88  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 16805  003D8A  2B64               	incf	___awmod@counter& (0+255),f,b
 16806  003D8C                     l2320:
 16807                           
 16808                           ; BSR set to: 0
 16809                           
 16810                           ; BSR set to: 0
 16811  003D8C  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16812  003D8E  D7FA               	goto	l2321
 16813  003D90                     u5880:
 16814                           
 16815                           ; BSR set to: 0
 16816                           
 16817                           ; BSR set to: 0
 16818                           
 16819                           ; BSR set to: 0
 16820  003D90  5162               	movf	___awmod@divisor& (0+255),w,b
 16821  003D92  5D60               	subwf	___awmod@dividend& (0+255),w,b
 16822  003D94  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 16823  003D96  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 16824  003D98  A0D8               	btfss	status,0,c
 16825  003D9A  D004               	goto	l2324
 16826                           
 16827                           ; BSR set to: 0
 16828  003D9C  5162               	movf	___awmod@divisor& (0+255),w,b
 16829  003D9E  5F60               	subwf	___awmod@dividend& (0+255),f,b
 16830  003DA0  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 16831  003DA2  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 16832  003DA4                     l2324:
 16833                           
 16834                           ; BSR set to: 0
 16835                           
 16836                           ; BSR set to: 0
 16837  003DA4  90D8               	bcf	status,0,c
 16838  003DA6  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 16839  003DA8  3362               	rrcf	___awmod@divisor& (0+255),f,b
 16840                           
 16841                           ; BSR set to: 0
 16842  003DAA  2F64               	decfsz	___awmod@counter& (0+255),f,b
 16843  003DAC  D7F1               	goto	u5880
 16844  003DAE                     l2325:
 16845                           
 16846                           ; BSR set to: 0
 16847                           
 16848                           ; BSR set to: 0
 16849                           
 16850                           ; BSR set to: 0
 16851  003DAE  5165               	movf	___awmod@sign& (0+255),w,b
 16852  003DB0  B4D8               	btfsc	status,2,c
 16853  003DB2  D004               	goto	l2326
 16854                           
 16855                           ; BSR set to: 0
 16856  003DB4  6D60               	negf	___awmod@dividend& (0+255),b
 16857  003DB6  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 16858  003DB8  B0D8               	btfsc	status,0,c
 16859  003DBA  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 16860  003DBC                     l2326:
 16861                           
 16862                           ; BSR set to: 0
 16863                           
 16864                           ; BSR set to: 0
 16865  003DBC  C060  F060         	movff	___awmod@dividend,?___awmod
 16866  003DC0  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 16867  003DC4  0012               	return	
 16868  003DC6                     __end_of___awmod:
 16869                           	opt stack 0
 16870                           tosu	equ	0xFFF
 16871                           tosh	equ	0xFFE
 16872                           tosl	equ	0xFFD
 16873                           pclath	equ	0xFFA
 16874                           tblptru	equ	0xFF8
 16875                           tblptrh	equ	0xFF7
 16876                           tblptrl	equ	0xFF6
 16877                           tablat	equ	0xFF5
 16878                           prodh	equ	0xFF4
 16879                           prodl	equ	0xFF3
 16880                           intcon	equ	0xFF2
 16881                           intcon2	equ	0xFF1
 16882                           intcon3	equ	0xFF0
 16883                           indf0	equ	0xFEF
 16884                           postinc0	equ	0xFEE
 16885                           plusw0	equ	0xFEB
 16886                           fsr0h	equ	0xFEA
 16887                           fsr0l	equ	0xFE9
 16888                           wreg	equ	0xFE8
 16889                           indf1	equ	0xFE7
 16890                           postinc1	equ	0xFE6
 16891                           postdec1	equ	0xFE5
 16892                           fsr1h	equ	0xFE2
 16893                           fsr1l	equ	0xFE1
 16894                           indf2	equ	0xFDF
 16895                           postinc2	equ	0xFDE
 16896                           postdec2	equ	0xFDD
 16897                           plusw2	equ	0xFDB
 16898                           fsr2h	equ	0xFDA
 16899                           fsr2l	equ	0xFD9
 16900                           status	equ	0xFD8
 16901                           
 16902 ;; *************** function ___awdiv *****************
 16903 ;; Defined at:
 16904 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 16905 ;; Parameters:    Size  Location     Type
 16906 ;;  dividend        2    0[BANK0 ] int 
 16907 ;;  divisor         2    2[BANK0 ] int 
 16908 ;; Auto vars:     Size  Location     Type
 16909 ;;  quotient        2    6[BANK0 ] int 
 16910 ;;  sign            1    5[BANK0 ] unsigned char 
 16911 ;;  counter         1    4[BANK0 ] unsigned char 
 16912 ;; Return value:  Size  Location     Type
 16913 ;;                  2    0[BANK0 ] int 
 16914 ;; Registers used:
 16915 ;;		wreg, status,2, status,0
 16916 ;; Tracked objects:
 16917 ;;		On entry : 0/0
 16918 ;;		On exit  : 0/0
 16919 ;;		Unchanged: 0/0
 16920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16921 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16922 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16924 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16925 ;;Total ram usage:        8 bytes
 16926 ;; Hardware stack levels used:    1
 16927 ;; Hardware stack levels required when called:   11
 16928 ;; This function calls:
 16929 ;;		Nothing
 16930 ;; This function is called by:
 16931 ;;		_Rtcc_SetRtccValue
 16932 ;;		_Rtcc_SetRtccAlarm
 16933 ;; This function uses a non-reentrant model
 16934 ;;
 16935                           
 16936                           	psect	text73
 16937  003B4A                     __ptext73:
 16938                           	opt stack 0
 16939  003B4A                     ___awdiv:
 16940                           	opt stack 14
 16941                           
 16942                           ; BSR set to: 0
 16943                           ;incstack = 0
 16944  003B4A  0E00               	movlw	0
 16945  003B4C  0100               	movlb	0	; () banked
 16946  003B4E  6F65               	movwf	___awdiv@sign& (0+255),b
 16947                           
 16948                           ; BSR set to: 0
 16949  003B50  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16950  003B52  D006               	goto	l2304
 16951                           
 16952                           ; BSR set to: 0
 16953  003B54  6D62               	negf	___awdiv@divisor& (0+255),b
 16954  003B56  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 16955  003B58  B0D8               	btfsc	status,0,c
 16956  003B5A  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 16957                           
 16958                           ; BSR set to: 0
 16959  003B5C  0E01               	movlw	1
 16960  003B5E  6F65               	movwf	___awdiv@sign& (0+255),b
 16961  003B60                     l2304:
 16962                           
 16963                           ; BSR set to: 0
 16964                           
 16965                           ; BSR set to: 0
 16966  003B60  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 16967  003B62  D006               	goto	l2305
 16968                           
 16969                           ; BSR set to: 0
 16970  003B64  6D60               	negf	___awdiv@dividend& (0+255),b
 16971  003B66  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 16972  003B68  B0D8               	btfsc	status,0,c
 16973  003B6A  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 16974                           
 16975                           ; BSR set to: 0
 16976  003B6C  0E01               	movlw	1
 16977  003B6E  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 16978  003B70                     l2305:
 16979                           
 16980                           ; BSR set to: 0
 16981                           
 16982                           ; BSR set to: 0
 16983  003B70  0E00               	movlw	0
 16984  003B72  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 16985  003B74  0E00               	movlw	0
 16986  003B76  6F66               	movwf	___awdiv@quotient& (0+255),b
 16987                           
 16988                           ; BSR set to: 0
 16989  003B78  5162               	movf	___awdiv@divisor& (0+255),w,b
 16990  003B7A  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 16991  003B7C  B4D8               	btfsc	status,2,c
 16992  003B7E  D01C               	goto	l2312
 16993                           
 16994                           ; BSR set to: 0
 16995  003B80  0E01               	movlw	1
 16996  003B82  6F64               	movwf	___awdiv@counter& (0+255),b
 16997  003B84  D004               	goto	l2307
 16998  003B86                     
 16999                           ; BSR set to: 0
 17000                           
 17001                           ; BSR set to: 0
 17002  003B86  90D8               	bcf	status,0,c
 17003  003B88  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 17004  003B8A  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 17005  003B8C  2B64               	incf	___awdiv@counter& (0+255),f,b
 17006  003B8E                     l2307:
 17007                           
 17008                           ; BSR set to: 0
 17009                           
 17010                           ; BSR set to: 0
 17011  003B8E  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17012  003B90  D7FA               	goto	l2308
 17013  003B92                     u5820:
 17014                           
 17015                           ; BSR set to: 0
 17016                           
 17017                           ; BSR set to: 0
 17018                           
 17019                           ; BSR set to: 0
 17020  003B92  90D8               	bcf	status,0,c
 17021  003B94  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 17022  003B96  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 17023                           
 17024                           ; BSR set to: 0
 17025  003B98  5162               	movf	___awdiv@divisor& (0+255),w,b
 17026  003B9A  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 17027  003B9C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17028  003B9E  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 17029  003BA0  A0D8               	btfss	status,0,c
 17030  003BA2  D005               	goto	l2311
 17031                           
 17032                           ; BSR set to: 0
 17033  003BA4  5162               	movf	___awdiv@divisor& (0+255),w,b
 17034  003BA6  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 17035  003BA8  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17036  003BAA  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 17037                           
 17038                           ; BSR set to: 0
 17039  003BAC  8166               	bsf	___awdiv@quotient& (0+255),0,b
 17040  003BAE                     l2311:
 17041                           
 17042                           ; BSR set to: 0
 17043                           
 17044                           ; BSR set to: 0
 17045  003BAE  90D8               	bcf	status,0,c
 17046  003BB0  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 17047  003BB2  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 17048                           
 17049                           ; BSR set to: 0
 17050  003BB4  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 17051  003BB6  D7ED               	goto	u5820
 17052  003BB8                     l2312:
 17053                           
 17054                           ; BSR set to: 0
 17055                           
 17056                           ; BSR set to: 0
 17057                           
 17058                           ; BSR set to: 0
 17059  003BB8  5165               	movf	___awdiv@sign& (0+255),w,b
 17060  003BBA  B4D8               	btfsc	status,2,c
 17061  003BBC  D004               	goto	l2313
 17062                           
 17063                           ; BSR set to: 0
 17064  003BBE  6D66               	negf	___awdiv@quotient& (0+255),b
 17065  003BC0  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 17066  003BC2  B0D8               	btfsc	status,0,c
 17067  003BC4  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 17068  003BC6                     l2313:
 17069                           
 17070                           ; BSR set to: 0
 17071                           
 17072                           ; BSR set to: 0
 17073  003BC6  C066  F060         	movff	___awdiv@quotient,?___awdiv
 17074  003BCA  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 17075  003BCE  0012               	return	
 17076  003BD0                     __end_of___awdiv:
 17077                           	opt stack 0
 17078                           tosu	equ	0xFFF
 17079                           tosh	equ	0xFFE
 17080                           tosl	equ	0xFFD
 17081                           pclath	equ	0xFFA
 17082                           tblptru	equ	0xFF8
 17083                           tblptrh	equ	0xFF7
 17084                           tblptrl	equ	0xFF6
 17085                           tablat	equ	0xFF5
 17086                           prodh	equ	0xFF4
 17087                           prodl	equ	0xFF3
 17088                           intcon	equ	0xFF2
 17089                           intcon2	equ	0xFF1
 17090                           intcon3	equ	0xFF0
 17091                           indf0	equ	0xFEF
 17092                           postinc0	equ	0xFEE
 17093                           plusw0	equ	0xFEB
 17094                           fsr0h	equ	0xFEA
 17095                           fsr0l	equ	0xFE9
 17096                           wreg	equ	0xFE8
 17097                           indf1	equ	0xFE7
 17098                           postinc1	equ	0xFE6
 17099                           postdec1	equ	0xFE5
 17100                           fsr1h	equ	0xFE2
 17101                           fsr1l	equ	0xFE1
 17102                           indf2	equ	0xFDF
 17103                           postinc2	equ	0xFDE
 17104                           postdec2	equ	0xFDD
 17105                           plusw2	equ	0xFDB
 17106                           fsr2h	equ	0xFDA
 17107                           fsr2l	equ	0xFD9
 17108                           status	equ	0xFD8
 17109                           
 17110 ;; *************** function _Rtcc_LockRtc *****************
 17111 ;; Defined at:
 17112 ;;		line 183 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17113 ;; Parameters:    Size  Location     Type
 17114 ;;		None
 17115 ;; Auto vars:     Size  Location     Type
 17116 ;;		None
 17117 ;; Return value:  Size  Location     Type
 17118 ;;                  1    wreg      void 
 17119 ;; Registers used:
 17120 ;;		None
 17121 ;; Tracked objects:
 17122 ;;		On entry : 0/0
 17123 ;;		On exit  : 0/0
 17124 ;;		Unchanged: 0/0
 17125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17130 ;;Total ram usage:        0 bytes
 17131 ;; Hardware stack levels used:    1
 17132 ;; Hardware stack levels required when called:   11
 17133 ;; This function calls:
 17134 ;;		Nothing
 17135 ;; This function is called by:
 17136 ;;		_Rtcm_MainTask
 17137 ;;		_Rtcm_SetRtccDate
 17138 ;;		_Rtcm_SetRtccAlarm
 17139 ;; This function uses a non-reentrant model
 17140 ;;
 17141                           
 17142                           	psect	text74
 17143  004EB6                     __ptext74:
 17144                           	opt stack 0
 17145  004EB6                     _Rtcc_LockRtc:
 17146                           	opt stack 15
 17147                           
 17148                           ; BSR set to: 0
 17149                           ;incstack = 0
 17150  004EB6  010F               	movlb	15	;# 
 17151  004EB8  0E55               	movlw	85	;# 
 17152  004EBA  6EA7               	movwf	4007,c	;# 
 17153  004EBC  0EAA               	movlw	170	;# 
 17154  004EBE  6EA7               	movwf	4007,c	;# 
 17155                           
 17156                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0;
 17157  004EC0  010F               	movlb	15	; () banked
 17158  004EC2  9B3F               	bcf	63,5,b	;volatile
 17159                           
 17160                           ; BSR set to: 15
 17161  004EC4  0012               	return		;funcret
 17162  004EC6                     __end_of_Rtcc_LockRtc:
 17163                           	opt stack 0
 17164                           tosu	equ	0xFFF
 17165                           tosh	equ	0xFFE
 17166                           tosl	equ	0xFFD
 17167                           pclath	equ	0xFFA
 17168                           tblptru	equ	0xFF8
 17169                           tblptrh	equ	0xFF7
 17170                           tblptrl	equ	0xFF6
 17171                           tablat	equ	0xFF5
 17172                           prodh	equ	0xFF4
 17173                           prodl	equ	0xFF3
 17174                           intcon	equ	0xFF2
 17175                           intcon2	equ	0xFF1
 17176                           intcon3	equ	0xFF0
 17177                           indf0	equ	0xFEF
 17178                           postinc0	equ	0xFEE
 17179                           plusw0	equ	0xFEB
 17180                           fsr0h	equ	0xFEA
 17181                           fsr0l	equ	0xFE9
 17182                           wreg	equ	0xFE8
 17183                           indf1	equ	0xFE7
 17184                           postinc1	equ	0xFE6
 17185                           postdec1	equ	0xFE5
 17186                           fsr1h	equ	0xFE2
 17187                           fsr1l	equ	0xFE1
 17188                           indf2	equ	0xFDF
 17189                           postinc2	equ	0xFDE
 17190                           postdec2	equ	0xFDD
 17191                           plusw2	equ	0xFDB
 17192                           fsr2h	equ	0xFDA
 17193                           fsr2l	equ	0xFD9
 17194                           status	equ	0xFD8
 17195                           
 17196 ;; *************** function _Rtcm_SetAlarmAction *****************
 17197 ;; Defined at:
 17198 ;;		line 278 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 17199 ;; Parameters:    Size  Location     Type
 17200 ;;  Action          2    2[BANK0 ] PTR FTN()void 
 17201 ;;		 -> Alarm(1), 
 17202 ;; Auto vars:     Size  Location     Type
 17203 ;;		None
 17204 ;; Return value:  Size  Location     Type
 17205 ;;                  1    wreg      void 
 17206 ;; Registers used:
 17207 ;;		wreg, status,2, status,0, cstack
 17208 ;; Tracked objects:
 17209 ;;		On entry : 0/0
 17210 ;;		On exit  : 0/0
 17211 ;;		Unchanged: 0/0
 17212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17213 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17216 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17217 ;;Total ram usage:        2 bytes
 17218 ;; Hardware stack levels used:    1
 17219 ;; Hardware stack levels required when called:   12
 17220 ;; This function calls:
 17221 ;;		_Rtcc_RegisterRtcIsrCallback
 17222 ;; This function is called by:
 17223 ;;		_Rtcm_MainTask
 17224 ;; This function uses a non-reentrant model
 17225 ;;
 17226                           
 17227                           	psect	text75
 17228  004F04                     __ptext75:
 17229                           	opt stack 0
 17230  004F04                     _Rtcm_SetAlarmAction:
 17231                           	opt stack 15
 17232                           
 17233                           ;rtcm.c: 281: Rtcc_RegisterRtcIsrCallback(Action);
 17234                           
 17235                           ; BSR set to: 15
 17236                           ;incstack = 0
 17237  004F04  C062  F060         	movff	Rtcm_SetAlarmAction@Action,Rtcc_RegisterRtcIsrCallback@IsrCallback
 17238  004F08  C063  F061         	movff	Rtcm_SetAlarmAction@Action+1,Rtcc_RegisterRtcIsrCallback@IsrCallback+1
 17239  004F0C  EC9B  F027         	call	_Rtcc_RegisterRtcIsrCallback	;wreg free
 17240  004F10  0012               	return		;funcret
 17241  004F12                     __end_of_Rtcm_SetAlarmAction:
 17242                           	opt stack 0
 17243                           tosu	equ	0xFFF
 17244                           tosh	equ	0xFFE
 17245                           tosl	equ	0xFFD
 17246                           pclath	equ	0xFFA
 17247                           tblptru	equ	0xFF8
 17248                           tblptrh	equ	0xFF7
 17249                           tblptrl	equ	0xFF6
 17250                           tablat	equ	0xFF5
 17251                           prodh	equ	0xFF4
 17252                           prodl	equ	0xFF3
 17253                           intcon	equ	0xFF2
 17254                           intcon2	equ	0xFF1
 17255                           intcon3	equ	0xFF0
 17256                           indf0	equ	0xFEF
 17257                           postinc0	equ	0xFEE
 17258                           plusw0	equ	0xFEB
 17259                           fsr0h	equ	0xFEA
 17260                           fsr0l	equ	0xFE9
 17261                           wreg	equ	0xFE8
 17262                           indf1	equ	0xFE7
 17263                           postinc1	equ	0xFE6
 17264                           postdec1	equ	0xFE5
 17265                           fsr1h	equ	0xFE2
 17266                           fsr1l	equ	0xFE1
 17267                           indf2	equ	0xFDF
 17268                           postinc2	equ	0xFDE
 17269                           postdec2	equ	0xFDD
 17270                           plusw2	equ	0xFDB
 17271                           fsr2h	equ	0xFDA
 17272                           fsr2l	equ	0xFD9
 17273                           status	equ	0xFD8
 17274                           
 17275 ;; *************** function _Rtcc_RegisterRtcIsrCallback *****************
 17276 ;; Defined at:
 17277 ;;		line 558 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;  IsrCallback     2    0[BANK0 ] PTR FTN()void 
 17280 ;;		 -> Alarm(1), 
 17281 ;; Auto vars:     Size  Location     Type
 17282 ;;		None
 17283 ;; Return value:  Size  Location     Type
 17284 ;;                  1    wreg      void 
 17285 ;; Registers used:
 17286 ;;		wreg, status,2, status,0
 17287 ;; Tracked objects:
 17288 ;;		On entry : 0/0
 17289 ;;		On exit  : 0/0
 17290 ;;		Unchanged: 0/0
 17291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17296 ;;Total ram usage:        2 bytes
 17297 ;; Hardware stack levels used:    1
 17298 ;; Hardware stack levels required when called:   11
 17299 ;; This function calls:
 17300 ;;		Nothing
 17301 ;; This function is called by:
 17302 ;;		_Rtcm_SetAlarmAction
 17303 ;; This function uses a non-reentrant model
 17304 ;;
 17305                           
 17306                           	psect	text76
 17307  004F36                     __ptext76:
 17308                           	opt stack 0
 17309  004F36                     _Rtcc_RegisterRtcIsrCallback:
 17310                           	opt stack 15
 17311                           
 17312                           ;rtcc_drv.c: 561: RtccIsrCallback = IsrCallback;
 17313                           
 17314                           ;incstack = 0
 17315  004F36  C060  F150         	movff	Rtcc_RegisterRtcIsrCallback@IsrCallback,_RtccIsrCallback
 17316  004F3A  C061  F151         	movff	Rtcc_RegisterRtcIsrCallback@IsrCallback+1,_RtccIsrCallback+1
 17317  004F3E  0012               	return		;funcret
 17318  004F40                     __end_of_Rtcc_RegisterRtcIsrCallback:
 17319                           	opt stack 0
 17320                           tosu	equ	0xFFF
 17321                           tosh	equ	0xFFE
 17322                           tosl	equ	0xFFD
 17323                           pclath	equ	0xFFA
 17324                           tblptru	equ	0xFF8
 17325                           tblptrh	equ	0xFF7
 17326                           tblptrl	equ	0xFF6
 17327                           tablat	equ	0xFF5
 17328                           prodh	equ	0xFF4
 17329                           prodl	equ	0xFF3
 17330                           intcon	equ	0xFF2
 17331                           intcon2	equ	0xFF1
 17332                           intcon3	equ	0xFF0
 17333                           indf0	equ	0xFEF
 17334                           postinc0	equ	0xFEE
 17335                           plusw0	equ	0xFEB
 17336                           fsr0h	equ	0xFEA
 17337                           fsr0l	equ	0xFE9
 17338                           wreg	equ	0xFE8
 17339                           indf1	equ	0xFE7
 17340                           postinc1	equ	0xFE6
 17341                           postdec1	equ	0xFE5
 17342                           fsr1h	equ	0xFE2
 17343                           fsr1l	equ	0xFE1
 17344                           indf2	equ	0xFDF
 17345                           postinc2	equ	0xFDE
 17346                           postdec2	equ	0xFDD
 17347                           plusw2	equ	0xFDB
 17348                           fsr2h	equ	0xFDA
 17349                           fsr2l	equ	0xFD9
 17350                           status	equ	0xFD8
 17351                           
 17352 ;; *************** function _Rtcm_GetRtccDate *****************
 17353 ;; Defined at:
 17354 ;;		line 204 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 17355 ;; Parameters:    Size  Location     Type
 17356 ;;		None
 17357 ;; Auto vars:     Size  Location     Type
 17358 ;;  LocalDate       8   13[BANK0 ] struct _RtccDateType
 17359 ;; Return value:  Size  Location     Type
 17360 ;;                  8    4[BANK0 ] struct _RtccDateType
 17361 ;; Registers used:
 17362 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17363 ;; Tracked objects:
 17364 ;;		On entry : 0/0
 17365 ;;		On exit  : 0/0
 17366 ;;		Unchanged: 0/0
 17367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17368 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17369 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17371 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17372 ;;Total ram usage:       17 bytes
 17373 ;; Hardware stack levels used:    1
 17374 ;; Hardware stack levels required when called:   12
 17375 ;; This function calls:
 17376 ;;		_Rtcc_GetRtccValue
 17377 ;; This function is called by:
 17378 ;;		_Rtcm_MainTask
 17379 ;; This function uses a non-reentrant model
 17380 ;;
 17381                           
 17382                           	psect	text77
 17383  003FEC                     __ptext77:
 17384                           	opt stack 0
 17385  003FEC                     _Rtcm_GetRtccDate:
 17386                           	opt stack 15
 17387                           
 17388                           ;rtcm.c: 206: RtccDateType LocalDate;
 17389                           ;rtcm.c: 209: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 17390                           
 17391                           ;incstack = 0
 17392  003FEC  0E00               	movlw	0
 17393  003FEE  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17394  003FF2  0100               	movlb	0	; () banked
 17395  003FF4  6F6C               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 17396  003FF6  0ED0               	movlw	208
 17397  003FF8  256C               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 17398  003FFA  6F6D               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 17399  003FFC  6B6E               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 17400  003FFE  0E07               	movlw	7
 17401  004000  236E               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 17402                           
 17403                           ;rtcm.c: 210: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 17404  004002  0E01               	movlw	1
 17405  004004  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17406  004008  0100               	movlb	0	; () banked
 17407  00400A  6F6F               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 17408                           
 17409                           ;rtcm.c: 211: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 17410  00400C  0E02               	movlw	2
 17411  00400E  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17412  004012  0100               	movlb	0	; () banked
 17413  004014  6F70               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 17414                           
 17415                           ;rtcm.c: 212: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 17416  004016  0E03               	movlw	3
 17417  004018  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17418  00401C  0100               	movlb	0	; () banked
 17419  00401E  6F71               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 17420                           
 17421                           ;rtcm.c: 213: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 17422  004020  0E04               	movlw	4
 17423  004022  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17424  004026  0100               	movlb	0	; () banked
 17425  004028  6F72               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 17426                           
 17427                           ;rtcm.c: 214: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 17428  00402A  0E05               	movlw	5
 17429  00402C  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17430  004030  0100               	movlb	0	; () banked
 17431  004032  6F73               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 17432                           
 17433                           ;rtcm.c: 215: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 17434  004034  0E06               	movlw	6
 17435  004036  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17436  00403A  0100               	movlb	0	; () banked
 17437  00403C  6F74               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 17438                           
 17439                           ; BSR set to: 0
 17440                           ;rtcm.c: 218: return LocalDate;
 17441  00403E  EE20  F06D         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 17442  004042  EE00  F064         	lfsr	0,?_Rtcm_GetRtccDate
 17443  004046  0E07               	movlw	7
 17444  004048                     u7631:
 17445  004048  CFDB FFEB          	movff	plusw2,plusw0
 17446  00404C  06E8               	decf	wreg,f,c
 17447  00404E  E2FC               	bc	u7631
 17448  004050  0012               	return	
 17449  004052                     __end_of_Rtcm_GetRtccDate:
 17450                           	opt stack 0
 17451                           tosu	equ	0xFFF
 17452                           tosh	equ	0xFFE
 17453                           tosl	equ	0xFFD
 17454                           pclath	equ	0xFFA
 17455                           tblptru	equ	0xFF8
 17456                           tblptrh	equ	0xFF7
 17457                           tblptrl	equ	0xFF6
 17458                           tablat	equ	0xFF5
 17459                           prodh	equ	0xFF4
 17460                           prodl	equ	0xFF3
 17461                           intcon	equ	0xFF2
 17462                           intcon2	equ	0xFF1
 17463                           intcon3	equ	0xFF0
 17464                           indf0	equ	0xFEF
 17465                           postinc0	equ	0xFEE
 17466                           plusw0	equ	0xFEB
 17467                           fsr0h	equ	0xFEA
 17468                           fsr0l	equ	0xFE9
 17469                           wreg	equ	0xFE8
 17470                           indf1	equ	0xFE7
 17471                           postinc1	equ	0xFE6
 17472                           postdec1	equ	0xFE5
 17473                           fsr1h	equ	0xFE2
 17474                           fsr1l	equ	0xFE1
 17475                           indf2	equ	0xFDF
 17476                           postinc2	equ	0xFDE
 17477                           postdec2	equ	0xFDD
 17478                           plusw2	equ	0xFDB
 17479                           fsr2h	equ	0xFDA
 17480                           fsr2l	equ	0xFD9
 17481                           status	equ	0xFD8
 17482                           
 17483 ;; *************** function _Rtcc_GetRtccValue *****************
 17484 ;; Defined at:
 17485 ;;		line 205 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17486 ;; Parameters:    Size  Location     Type
 17487 ;;  RtccPtrVal      1    wreg     enum E7751
 17488 ;; Auto vars:     Size  Location     Type
 17489 ;;  RtccPtrVal      1    1[BANK0 ] enum E7751
 17490 ;;  RegValue        1    3[BANK0 ] unsigned char 
 17491 ;;  RetValue        1    2[BANK0 ] unsigned char 
 17492 ;; Return value:  Size  Location     Type
 17493 ;;                  1    wreg      unsigned char 
 17494 ;; Registers used:
 17495 ;;		wreg, status,2, status,0, prodl, prodh
 17496 ;; Tracked objects:
 17497 ;;		On entry : 0/0
 17498 ;;		On exit  : 0/0
 17499 ;;		Unchanged: 0/0
 17500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17502 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17503 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17504 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17505 ;;Total ram usage:        4 bytes
 17506 ;; Hardware stack levels used:    1
 17507 ;; Hardware stack levels required when called:   11
 17508 ;; This function calls:
 17509 ;;		Nothing
 17510 ;; This function is called by:
 17511 ;;		_Rtcm_GetRtccDate
 17512 ;; This function uses a non-reentrant model
 17513 ;;
 17514                           
 17515                           	psect	text78
 17516  0037F8                     __ptext78:
 17517                           	opt stack 0
 17518  0037F8                     _Rtcc_GetRtccValue:
 17519                           	opt stack 15
 17520                           
 17521                           ; BSR set to: 0
 17522                           ;incstack = 0
 17523                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 17524  0037F8  0100               	movlb	0	; () banked
 17525  0037FA  6F61               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 17526                           
 17527                           ;rtcc_drv.c: 208: UINT8 RegValue;
 17528                           ;rtcc_drv.c: 209: UINT8 RetValue;
 17529                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 17530  0037FC  D02D               	goto	l298
 17531  0037FE                     l299:
 17532                           
 17533                           ; BSR set to: 0
 17534                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 17535  0037FE  010F               	movlb	15	; () banked
 17536  003800  833F               	bsf	63,1,b	;volatile
 17537  003802                     
 17538                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 17539  003802  813F               	bsf	63,0,b	;volatile
 17540  003804  D01C               	goto	L17
 17541  003806                     l301:
 17542                           
 17543                           ; BSR set to: 0
 17544                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 17545  003806  010F               	movlb	15	; () banked
 17546  003808  833F               	bsf	63,1,b	;volatile
 17547  00380A  D01E               	goto	L18
 17548  00380C                     l302:
 17549                           
 17550                           ; BSR set to: 0
 17551                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 17552  00380C  010F               	movlb	15	; () banked
 17553  00380E  833F               	bsf	63,1,b	;volatile
 17554  003810  D021               	goto	L21
 17555  003812                     l7789:
 17556                           
 17557                           ; BSR set to: 15
 17558                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 17559  003812  C063  F060         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 17560  003816  0E0F               	movlw	15
 17561  003818  0100               	movlb	0	; () banked
 17562  00381A  1760               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 17563  00381C  3963               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 17564  00381E  0B0F               	andlw	15
 17565  003820  0B0F               	andlw	15
 17566  003822  0D0A               	mullw	10
 17567  003824  50F3               	movf	prodl,w,c
 17568  003826  2560               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 17569  003828  6F62               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 17570                           
 17571                           ;rtcc_drv.c: 241: break;
 17572  00382A  D02D               	goto	l300
 17573  00382C                     l303:
 17574                           
 17575                           ; BSR set to: 0
 17576                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 17577  00382C  010F               	movlb	15	; () banked
 17578  00382E  933F               	bcf	63,1,b	;volatile
 17579                           
 17580                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 17581  003830  813F               	bsf	63,0,b	;volatile
 17582                           
 17583                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 17584  003832  CF99 F062          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 17585                           
 17586                           ;rtcc_drv.c: 249: break;
 17587  003836  D027               	goto	l300
 17588  003838                     l304:
 17589                           
 17590                           ; BSR set to: 0
 17591                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 17592  003838  010F               	movlb	15	; () banked
 17593  00383A  933F               	bcf	63,1,b	;volatile
 17594  00383C  D7E2               	goto	L19
 17595  00383E                     L17:
 17596                           
 17597                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 17598  00383E  CF98 F063          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 17599  003842  D7E7               	goto	l7789
 17600  003844                     l305:
 17601                           
 17602                           ; BSR set to: 0
 17603                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 17604  003844  010F               	movlb	15	; () banked
 17605  003846  933F               	bcf	63,1,b	;volatile
 17606  003848                     L18:
 17607                           
 17608                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 17609  003848  913F               	bcf	63,0,b	;volatile
 17610                           
 17611                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 17612  00384A  CF99 F063          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 17613  00384E  D7E1               	goto	l7789
 17614  003850                     l306:
 17615                           
 17616                           ; BSR set to: 0
 17617                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 17618  003850  010F               	movlb	15	; () banked
 17619  003852  933F               	bcf	63,1,b	;volatile
 17620  003854                     L21:
 17621                           
 17622                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 17623  003854  913F               	bcf	63,0,b	;volatile
 17624  003856  D7F3               	goto	L17
 17625  003858                     l298:
 17626                           
 17627                           ; BSR set to: 0
 17628  003858  0100               	movlb	0	; () banked
 17629  00385A  5161               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 17630                           
 17631                           ; Switch size 1, requested type "space"
 17632                           ; Number of cases is 7, Range of values is 0 to 6
 17633                           ; switch strategies available:
 17634                           ; Name         Instructions Cycles
 17635                           ; simple_byte           22    12 (average)
 17636                           ;	Chosen strategy is simple_byte
 17637  00385C  0A00               	xorlw	0	; case 0
 17638  00385E  B4D8               	btfsc	status,2,c
 17639  003860  D7CE               	goto	l299
 17640  003862  0A01               	xorlw	1	; case 1
 17641  003864  B4D8               	btfsc	status,2,c
 17642  003866  D7CF               	goto	l301
 17643  003868  0A03               	xorlw	3	; case 2
 17644  00386A  B4D8               	btfsc	status,2,c
 17645  00386C  D7CF               	goto	l302
 17646  00386E  0A01               	xorlw	1	; case 3
 17647  003870  B4D8               	btfsc	status,2,c
 17648  003872  D7DC               	goto	l303
 17649  003874  0A07               	xorlw	7	; case 4
 17650  003876  B4D8               	btfsc	status,2,c
 17651  003878  D7DF               	goto	l304
 17652  00387A  0A01               	xorlw	1	; case 5
 17653  00387C  B4D8               	btfsc	status,2,c
 17654  00387E  D7E2               	goto	l305
 17655  003880  0A03               	xorlw	3	; case 6
 17656  003882  B4D8               	btfsc	status,2,c
 17657  003884  D7E5               	goto	l306
 17658  003886                     l300:
 17659                           
 17660                           ;rtcc_drv.c: 286: return RetValue;
 17661                           
 17662                           ; BSR set to: 0
 17663  003886  0100               	movlb	0	; () banked
 17664  003888  5162               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 17665  00388A  0012               	return	
 17666  00388C                     __end_of_Rtcc_GetRtccValue:
 17667                           	opt stack 0
 17668                           tosu	equ	0xFFF
 17669                           tosh	equ	0xFFE
 17670                           tosl	equ	0xFFD
 17671                           pclath	equ	0xFFA
 17672                           tblptru	equ	0xFF8
 17673                           tblptrh	equ	0xFF7
 17674                           tblptrl	equ	0xFF6
 17675                           tablat	equ	0xFF5
 17676                           prodh	equ	0xFF4
 17677                           prodl	equ	0xFF3
 17678                           intcon	equ	0xFF2
 17679                           intcon2	equ	0xFF1
 17680                           intcon3	equ	0xFF0
 17681                           indf0	equ	0xFEF
 17682                           postinc0	equ	0xFEE
 17683                           plusw0	equ	0xFEB
 17684                           fsr0h	equ	0xFEA
 17685                           fsr0l	equ	0xFE9
 17686                           wreg	equ	0xFE8
 17687                           indf1	equ	0xFE7
 17688                           postinc1	equ	0xFE6
 17689                           postdec1	equ	0xFE5
 17690                           fsr1h	equ	0xFE2
 17691                           fsr1l	equ	0xFE1
 17692                           indf2	equ	0xFDF
 17693                           postinc2	equ	0xFDE
 17694                           postdec2	equ	0xFDD
 17695                           plusw2	equ	0xFDB
 17696                           fsr2h	equ	0xFDA
 17697                           fsr2l	equ	0xFD9
 17698                           status	equ	0xFD8
 17699                           
 17700 ;; *************** function _Rtcc_SetRtcStatus *****************
 17701 ;; Defined at:
 17702 ;;		line 149 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17703 ;; Parameters:    Size  Location     Type
 17704 ;;  Status          1    wreg     unsigned char 
 17705 ;; Auto vars:     Size  Location     Type
 17706 ;;  Status          1    0[BANK0 ] unsigned char 
 17707 ;; Return value:  Size  Location     Type
 17708 ;;                  1    wreg      void 
 17709 ;; Registers used:
 17710 ;;		wreg
 17711 ;; Tracked objects:
 17712 ;;		On entry : 0/0
 17713 ;;		On exit  : 0/0
 17714 ;;		Unchanged: 0/0
 17715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17717 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17719 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17720 ;;Total ram usage:        1 bytes
 17721 ;; Hardware stack levels used:    1
 17722 ;; Hardware stack levels required when called:   11
 17723 ;; This function calls:
 17724 ;;		Nothing
 17725 ;; This function is called by:
 17726 ;;		_Rtcm_MainTask
 17727 ;; This function uses a non-reentrant model
 17728 ;;
 17729                           
 17730                           	psect	text79
 17731  004E18                     __ptext79:
 17732                           	opt stack 0
 17733  004E18                     _Rtcc_SetRtcStatus:
 17734                           	opt stack 16
 17735                           
 17736                           ; BSR set to: 0
 17737                           ;incstack = 0
 17738                           ;Rtcc_SetRtcStatus@Status stored from wreg
 17739  004E18  0100               	movlb	0	; () banked
 17740  004E1A  6F60               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 17741                           
 17742                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 17743  004E1C  0100               	movlb	0	; () banked
 17744  004E1E  B160               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 17745  004E20  D003               	bra	u6845
 17746  004E22  010F               	movlb	15	; () banked
 17747  004E24  9F3F               	bcf	63,7,b	;volatile
 17748  004E26  D002               	bra	u6846
 17749  004E28                     u6845:
 17750  004E28  010F               	movlb	15	; () banked
 17751  004E2A  8F3F               	bsf	63,7,b	;volatile
 17752  004E2C                     u6846:
 17753                           
 17754                           ; BSR set to: 15
 17755  004E2C  0012               	return		;funcret
 17756  004E2E                     __end_of_Rtcc_SetRtcStatus:
 17757                           	opt stack 0
 17758                           tosu	equ	0xFFF
 17759                           tosh	equ	0xFFE
 17760                           tosl	equ	0xFFD
 17761                           pclath	equ	0xFFA
 17762                           tblptru	equ	0xFF8
 17763                           tblptrh	equ	0xFF7
 17764                           tblptrl	equ	0xFF6
 17765                           tablat	equ	0xFF5
 17766                           prodh	equ	0xFF4
 17767                           prodl	equ	0xFF3
 17768                           intcon	equ	0xFF2
 17769                           intcon2	equ	0xFF1
 17770                           intcon3	equ	0xFF0
 17771                           indf0	equ	0xFEF
 17772                           postinc0	equ	0xFEE
 17773                           plusw0	equ	0xFEB
 17774                           fsr0h	equ	0xFEA
 17775                           fsr0l	equ	0xFE9
 17776                           wreg	equ	0xFE8
 17777                           indf1	equ	0xFE7
 17778                           postinc1	equ	0xFE6
 17779                           postdec1	equ	0xFE5
 17780                           fsr1h	equ	0xFE2
 17781                           fsr1l	equ	0xFE1
 17782                           indf2	equ	0xFDF
 17783                           postinc2	equ	0xFDE
 17784                           postdec2	equ	0xFDD
 17785                           plusw2	equ	0xFDB
 17786                           fsr2h	equ	0xFDA
 17787                           fsr2l	equ	0xFD9
 17788                           status	equ	0xFD8
 17789                           
 17790 ;; *************** function _Rtcc_RtcConfig *****************
 17791 ;; Defined at:
 17792 ;;		line 106 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17793 ;; Parameters:    Size  Location     Type
 17794 ;;  RtcConfig       2    1[BANK0 ] PTR struct _RtccConfigTy
 17795 ;;		 -> RtcConfig(4), 
 17796 ;; Auto vars:     Size  Location     Type
 17797 ;;		None
 17798 ;; Return value:  Size  Location     Type
 17799 ;;                  1    wreg      void 
 17800 ;; Registers used:
 17801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17802 ;; Tracked objects:
 17803 ;;		On entry : 0/0
 17804 ;;		On exit  : 0/0
 17805 ;;		Unchanged: 0/0
 17806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17807 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17809 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17810 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17811 ;;Total ram usage:        3 bytes
 17812 ;; Hardware stack levels used:    1
 17813 ;; Hardware stack levels required when called:   12
 17814 ;; This function calls:
 17815 ;;		_RtccIrqInit
 17816 ;; This function is called by:
 17817 ;;		_Rtcm_MainTask
 17818 ;; This function uses a non-reentrant model
 17819 ;;
 17820                           
 17821                           	psect	text80
 17822  003466                     __ptext80:
 17823                           	opt stack 0
 17824  003466                     _Rtcc_RtcConfig:
 17825                           	opt stack 15
 17826                           
 17827                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 17828                           
 17829                           ; BSR set to: 15
 17830                           ;incstack = 0
 17831  003466  C061  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 17832  00346A  C062  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 17833  00346E  50DF               	movf	indf2,w,c
 17834  003470  0100               	movlb	0	; () banked
 17835  003472  6F63               	movwf	??_Rtcc_RtcConfig& (0+255),b
 17836  003474  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17837  003476  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17838  003478  010F               	movlb	15	; () banked
 17839  00347A  513F               	movf	63,w,b	;volatile
 17840  00347C  0100               	movlb	0	; () banked
 17841  00347E  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17842  003480  0BFB               	andlw	-5
 17843  003482  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17844  003484  010F               	movlb	15	; () banked
 17845  003486  6F3F               	movwf	63,b	;volatile
 17846                           
 17847                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 17848  003488  0100               	movlb	0	; () banked
 17849  00348A  EE20 F001          	lfsr	2,1
 17850  00348E  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17851  003490  26D9               	addwf	fsr2l,f,c
 17852  003492  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17853  003494  22DA               	addwfc	fsr2h,f,c
 17854  003496  50DF               	movf	indf2,w,c
 17855  003498  6F63               	movwf	??_Rtcc_RtcConfig& (0+255),b
 17856  00349A  0E01               	movlw	1
 17857  00349C  1763               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 17858  00349E  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17859  0034A0  010F               	movlb	15	; () banked
 17860  0034A2  513C               	movf	60,w,b	;volatile
 17861  0034A4  0100               	movlb	0	; () banked
 17862  0034A6  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17863  0034A8  0BFD               	andlw	-3
 17864  0034AA  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17865  0034AC  010F               	movlb	15	; () banked
 17866  0034AE  6F3C               	movwf	60,b	;volatile
 17867                           
 17868                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 17869  0034B0  0100               	movlb	0	; () banked
 17870  0034B2  EE20 F001          	lfsr	2,1
 17871  0034B6  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17872  0034B8  26D9               	addwf	fsr2l,f,c
 17873  0034BA  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17874  0034BC  22DA               	addwfc	fsr2h,f,c
 17875  0034BE  50DF               	movf	indf2,w,c
 17876  0034C0  6F63               	movwf	??_Rtcc_RtcConfig& (0+255),b
 17877  0034C2  90D8               	bcf	status,0,c
 17878  0034C4  3363               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 17879  0034C6  0E01               	movlw	1
 17880  0034C8  1763               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 17881  0034CA  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17882  0034CC  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17883  0034CE  010F               	movlb	15	; () banked
 17884  0034D0  513C               	movf	60,w,b	;volatile
 17885  0034D2  0100               	movlb	0	; () banked
 17886  0034D4  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17887  0034D6  0BFB               	andlw	-5
 17888  0034D8  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17889  0034DA  010F               	movlb	15	; () banked
 17890  0034DC  6F3C               	movwf	60,b	;volatile
 17891                           
 17892                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 17893  0034DE  0100               	movlb	0	; () banked
 17894  0034E0  EE20 F002          	lfsr	2,2
 17895  0034E4  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17896  0034E6  26D9               	addwf	fsr2l,f,c
 17897  0034E8  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17898  0034EA  22DA               	addwfc	fsr2h,f,c
 17899  0034EC  04DE               	decf	postinc2,w,c
 17900  0034EE  A4D8               	btfss	status,2,c
 17901  0034F0  0012               	return	
 17902                           
 17903                           ; BSR set to: 0
 17904                           ;rtcc_drv.c: 115: {
 17905                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 17906  0034F2  EE20 F003          	lfsr	2,3
 17907  0034F6  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17908  0034F8  26D9               	addwf	fsr2l,f,c
 17909  0034FA  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17910  0034FC  22DA               	addwfc	fsr2h,f,c
 17911  0034FE  50DF               	movf	indf2,w,c
 17912  003500  EC17  F027         	call	_RtccIrqInit
 17913  003504  0012               	return	
 17914  003506                     __end_of_Rtcc_RtcConfig:
 17915                           	opt stack 0
 17916                           tosu	equ	0xFFF
 17917                           tosh	equ	0xFFE
 17918                           tosl	equ	0xFFD
 17919                           pclath	equ	0xFFA
 17920                           tblptru	equ	0xFF8
 17921                           tblptrh	equ	0xFF7
 17922                           tblptrl	equ	0xFF6
 17923                           tablat	equ	0xFF5
 17924                           prodh	equ	0xFF4
 17925                           prodl	equ	0xFF3
 17926                           intcon	equ	0xFF2
 17927                           intcon2	equ	0xFF1
 17928                           intcon3	equ	0xFF0
 17929                           indf0	equ	0xFEF
 17930                           postinc0	equ	0xFEE
 17931                           plusw0	equ	0xFEB
 17932                           fsr0h	equ	0xFEA
 17933                           fsr0l	equ	0xFE9
 17934                           wreg	equ	0xFE8
 17935                           indf1	equ	0xFE7
 17936                           postinc1	equ	0xFE6
 17937                           postdec1	equ	0xFE5
 17938                           fsr1h	equ	0xFE2
 17939                           fsr1l	equ	0xFE1
 17940                           indf2	equ	0xFDF
 17941                           postinc2	equ	0xFDE
 17942                           postdec2	equ	0xFDD
 17943                           plusw2	equ	0xFDB
 17944                           fsr2h	equ	0xFDA
 17945                           fsr2l	equ	0xFD9
 17946                           status	equ	0xFD8
 17947                           
 17948 ;; *************** function _RtccIrqInit *****************
 17949 ;; Defined at:
 17950 ;;		line 84 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17951 ;; Parameters:    Size  Location     Type
 17952 ;;  Priority        1    wreg     enum E7710
 17953 ;; Auto vars:     Size  Location     Type
 17954 ;;  Priority        1    0[BANK0 ] enum E7710
 17955 ;; Return value:  Size  Location     Type
 17956 ;;                  1    wreg      void 
 17957 ;; Registers used:
 17958 ;;		wreg
 17959 ;; Tracked objects:
 17960 ;;		On entry : 0/0
 17961 ;;		On exit  : 0/0
 17962 ;;		Unchanged: 0/0
 17963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17965 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17967 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17968 ;;Total ram usage:        1 bytes
 17969 ;; Hardware stack levels used:    1
 17970 ;; Hardware stack levels required when called:   11
 17971 ;; This function calls:
 17972 ;;		Nothing
 17973 ;; This function is called by:
 17974 ;;		_Rtcc_RtcConfig
 17975 ;; This function uses a non-reentrant model
 17976 ;;
 17977                           
 17978                           	psect	text81
 17979  004E2E                     __ptext81:
 17980                           	opt stack 0
 17981  004E2E                     _RtccIrqInit:
 17982                           	opt stack 15
 17983                           
 17984                           ;incstack = 0
 17985                           ;RtccIrqInit@Priority stored from wreg
 17986  004E2E  0100               	movlb	0	; () banked
 17987  004E30  6F60               	movwf	RtccIrqInit@Priority& (0+255),b
 17988                           
 17989                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 17990  004E32  90A4               	bcf	4004,0,c	;volatile
 17991                           
 17992                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 17993  004E34  0100               	movlb	0	; () banked
 17994  004E36  B160               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 17995  004E38  D002               	bra	u6115
 17996  004E3A  90A5               	bcf	4005,0,c	;volatile
 17997  004E3C  D001               	bra	u6116
 17998  004E3E                     u6115:
 17999  004E3E  80A5               	bsf	4005,0,c	;volatile
 18000  004E40                     u6116:
 18001                           
 18002                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 18003  004E40  80A3               	bsf	4003,0,c	;volatile
 18004  004E42  0012               	return		;funcret
 18005  004E44                     __end_of_RtccIrqInit:
 18006                           	opt stack 0
 18007                           tosu	equ	0xFFF
 18008                           tosh	equ	0xFFE
 18009                           tosl	equ	0xFFD
 18010                           pclath	equ	0xFFA
 18011                           tblptru	equ	0xFF8
 18012                           tblptrh	equ	0xFF7
 18013                           tblptrl	equ	0xFF6
 18014                           tablat	equ	0xFF5
 18015                           prodh	equ	0xFF4
 18016                           prodl	equ	0xFF3
 18017                           intcon	equ	0xFF2
 18018                           intcon2	equ	0xFF1
 18019                           intcon3	equ	0xFF0
 18020                           indf0	equ	0xFEF
 18021                           postinc0	equ	0xFEE
 18022                           plusw0	equ	0xFEB
 18023                           fsr0h	equ	0xFEA
 18024                           fsr0l	equ	0xFE9
 18025                           wreg	equ	0xFE8
 18026                           indf1	equ	0xFE7
 18027                           postinc1	equ	0xFE6
 18028                           postdec1	equ	0xFE5
 18029                           fsr1h	equ	0xFE2
 18030                           fsr1l	equ	0xFE1
 18031                           indf2	equ	0xFDF
 18032                           postinc2	equ	0xFDE
 18033                           postdec2	equ	0xFDD
 18034                           plusw2	equ	0xFDB
 18035                           fsr2h	equ	0xFDA
 18036                           fsr2l	equ	0xFD9
 18037                           status	equ	0xFD8
 18038                           
 18039 ;; *************** function _Rtcc_AlarmConfig *****************
 18040 ;; Defined at:
 18041 ;;		line 129 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18042 ;; Parameters:    Size  Location     Type
 18043 ;;  AlarmConfig     2    0[BANK0 ] PTR struct _RtccAlarmCon
 18044 ;;		 -> AlCfg(4), 
 18045 ;; Auto vars:     Size  Location     Type
 18046 ;;		None
 18047 ;; Return value:  Size  Location     Type
 18048 ;;                  1    wreg      void 
 18049 ;; Registers used:
 18050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18051 ;; Tracked objects:
 18052 ;;		On entry : 0/0
 18053 ;;		On exit  : 0/0
 18054 ;;		Unchanged: 0/0
 18055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18058 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18059 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18060 ;;Total ram usage:        3 bytes
 18061 ;; Hardware stack levels used:    1
 18062 ;; Hardware stack levels required when called:   11
 18063 ;; This function calls:
 18064 ;;		Nothing
 18065 ;; This function is called by:
 18066 ;;		_Rtcm_MainTask
 18067 ;; This function uses a non-reentrant model
 18068 ;;
 18069                           
 18070                           	psect	text82
 18071  003F14                     __ptext82:
 18072                           	opt stack 0
 18073  003F14                     _Rtcc_AlarmConfig:
 18074                           	opt stack 16
 18075                           
 18076                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 18077                           
 18078                           ;incstack = 0
 18079  003F14  C060  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 18080  003F18  C061  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 18081  003F1C  50DF               	movf	indf2,w,c
 18082  003F1E  0100               	movlb	0	; () banked
 18083  003F20  6F62               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 18084  003F22  3362               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 18085  003F24  3362               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 18086  003F26  5091               	movf	3985,w,c	;volatile
 18087  003F28  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18088  003F2A  0B7F               	andlw	-129
 18089  003F2C  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18090  003F2E  6E91               	movwf	3985,c	;volatile
 18091                           
 18092                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 18093  003F30  EE20 F001          	lfsr	2,1
 18094  003F34  5160               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 18095  003F36  26D9               	addwf	fsr2l,f,c
 18096  003F38  5161               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 18097  003F3A  22DA               	addwfc	fsr2h,f,c
 18098  003F3C  50DF               	movf	indf2,w,c
 18099  003F3E  6F62               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 18100  003F40  3B62               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 18101  003F42  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18102  003F44  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18103  003F46  5091               	movf	3985,w,c	;volatile
 18104  003F48  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18105  003F4A  0BBF               	andlw	-65
 18106  003F4C  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18107  003F4E  6E91               	movwf	3985,c	;volatile
 18108                           
 18109                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 18110  003F50  EE20 F002          	lfsr	2,2
 18111  003F54  5160               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 18112  003F56  26D9               	addwf	fsr2l,f,c
 18113  003F58  5161               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 18114  003F5A  22DA               	addwfc	fsr2h,f,c
 18115  003F5C  50DF               	movf	indf2,w,c
 18116  003F5E  6F62               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 18117  003F60  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18118  003F62  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18119  003F64  5091               	movf	3985,w,c	;volatile
 18120  003F66  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18121  003F68  0BC3               	andlw	-61
 18122  003F6A  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18123  003F6C  6E91               	movwf	3985,c	;volatile
 18124                           
 18125                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 18126  003F6E  EE20 F003          	lfsr	2,3
 18127  003F72  5160               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 18128  003F74  26D9               	addwf	fsr2l,f,c
 18129  003F76  5161               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 18130  003F78  22DA               	addwfc	fsr2h,f,c
 18131  003F7A  50DF               	movf	indf2,w,c
 18132  003F7C  6E90               	movwf	3984,c	;volatile
 18133                           
 18134                           ; BSR set to: 0
 18135  003F7E  0012               	return		;funcret
 18136  003F80                     __end_of_Rtcc_AlarmConfig:
 18137                           	opt stack 0
 18138                           tosu	equ	0xFFF
 18139                           tosh	equ	0xFFE
 18140                           tosl	equ	0xFFD
 18141                           pclath	equ	0xFFA
 18142                           tblptru	equ	0xFF8
 18143                           tblptrh	equ	0xFF7
 18144                           tblptrl	equ	0xFF6
 18145                           tablat	equ	0xFF5
 18146                           prodh	equ	0xFF4
 18147                           prodl	equ	0xFF3
 18148                           intcon	equ	0xFF2
 18149                           intcon2	equ	0xFF1
 18150                           intcon3	equ	0xFF0
 18151                           indf0	equ	0xFEF
 18152                           postinc0	equ	0xFEE
 18153                           plusw0	equ	0xFEB
 18154                           fsr0h	equ	0xFEA
 18155                           fsr0l	equ	0xFE9
 18156                           wreg	equ	0xFE8
 18157                           indf1	equ	0xFE7
 18158                           postinc1	equ	0xFE6
 18159                           postdec1	equ	0xFE5
 18160                           fsr1h	equ	0xFE2
 18161                           fsr1l	equ	0xFE1
 18162                           indf2	equ	0xFDF
 18163                           postinc2	equ	0xFDE
 18164                           postdec2	equ	0xFDD
 18165                           plusw2	equ	0xFDB
 18166                           fsr2h	equ	0xFDA
 18167                           fsr2l	equ	0xFD9
 18168                           status	equ	0xFD8
 18169                           
 18170 ;; *************** function _Uart_InitUartModule *****************
 18171 ;; Defined at:
 18172 ;;		line 288 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 18173 ;; Parameters:    Size  Location     Type
 18174 ;;  Module          1    wreg     unsigned char 
 18175 ;;  UartConfig      2   32[BANK0 ] PTR struct _UartConfig
 18176 ;;		 -> UartConfig(21), 
 18177 ;; Auto vars:     Size  Location     Type
 18178 ;;  Module          1   36[BANK0 ] unsigned char 
 18179 ;; Return value:  Size  Location     Type
 18180 ;;                  1    wreg      void 
 18181 ;; Registers used:
 18182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18183 ;; Tracked objects:
 18184 ;;		On entry : 0/0
 18185 ;;		On exit  : 0/0
 18186 ;;		Unchanged: 0/0
 18187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18188 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18189 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18190 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18191 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18192 ;;Total ram usage:        5 bytes
 18193 ;; Hardware stack levels used:    1
 18194 ;; Hardware stack levels required when called:   13
 18195 ;; This function calls:
 18196 ;;		_SetUartBaudRate
 18197 ;; This function is called by:
 18198 ;;		_MdmWifi_MainTask
 18199 ;; This function uses a non-reentrant model
 18200 ;;
 18201                           
 18202                           	psect	text83
 18203  0008D6                     __ptext83:
 18204                           	opt stack 0
 18205  0008D6                     _Uart_InitUartModule:
 18206                           	opt stack 14
 18207                           
 18208                           ; BSR set to: 0
 18209                           ;incstack = 0
 18210                           ;Uart_InitUartModule@Module stored from wreg
 18211  0008D6  0100               	movlb	0	; () banked
 18212  0008D8  6F84               	movwf	Uart_InitUartModule@Module& (0+255),b
 18213                           
 18214                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 18215  0008DA  0100               	movlb	0	; () banked
 18216  0008DC  0584               	decf	Uart_InitUartModule@Module& (0+255),w,b
 18217  0008DE  A4D8               	btfss	status,2,c
 18218  0008E0  D0B8               	goto	l550
 18219                           
 18220                           ; BSR set to: 0
 18221                           ;uart_drv.c: 291: {
 18222                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 18223  0008E2  9C94               	bcf	3988,6,c	;volatile
 18224                           
 18225                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 18226  0008E4  8E94               	bsf	3988,7,c	;volatile
 18227                           
 18228                           ; BSR set to: 0
 18229                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 18230  0008E6  C080  F079         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 18231  0008EA  C081  F07A         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 18232  0008EE  0E01               	movlw	1
 18233  0008F0  EC81  F010         	call	_SetUartBaudRate
 18234                           
 18235                           ;uart_drv.c: 302: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 18236  0008F4  0100               	movlb	0	; () banked
 18237  0008F6  EE20 F004          	lfsr	2,4
 18238  0008FA  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18239  0008FC  26D9               	addwf	fsr2l,f,c
 18240  0008FE  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18241  000900  22DA               	addwfc	fsr2h,f,c
 18242  000902  50DF               	movf	indf2,w,c
 18243  000904  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18244  000906  0E06               	movlw	6
 18245  000908  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18246  00090A                     u6915:
 18247  00090A  90D8               	bcf	status,0,c
 18248  00090C  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18249  00090E  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18250  000910  D7FC               	goto	u6915
 18251  000912  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18252  000914  12AD               	iorwf	4013,f,c	;volatile
 18253                           
 18254                           ; BSR set to: 0
 18255                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 18256  000916  EE20 F006          	lfsr	2,6
 18257  00091A  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18258  00091C  26D9               	addwf	fsr2l,f,c
 18259  00091E  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18260  000920  22DA               	addwfc	fsr2h,f,c
 18261  000922  50DF               	movf	indf2,w,c
 18262  000924  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18263  000926  0E05               	movlw	5
 18264  000928  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18265  00092A                     u6925:
 18266  00092A  90D8               	bcf	status,0,c
 18267  00092C  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18268  00092E  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18269  000930  D7FC               	goto	u6925
 18270  000932  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18271  000934  12AD               	iorwf	4013,f,c	;volatile
 18272                           
 18273                           ; BSR set to: 0
 18274                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 18275  000936  EE20 F001          	lfsr	2,1
 18276  00093A  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18277  00093C  26D9               	addwf	fsr2l,f,c
 18278  00093E  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18279  000940  22DA               	addwfc	fsr2h,f,c
 18280  000942  50DF               	movf	indf2,w,c
 18281  000944  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18282  000946  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18283  000948  0BF0               	andlw	240
 18284  00094A  12AD               	iorwf	4013,f,c	;volatile
 18285                           
 18286                           ; BSR set to: 0
 18287                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 18288  00094C  EE20 F008          	lfsr	2,8
 18289  000950  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18290  000952  26D9               	addwf	fsr2l,f,c
 18291  000954  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18292  000956  22DA               	addwfc	fsr2h,f,c
 18293  000958  50DF               	movf	indf2,w,c
 18294  00095A  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18295  00095C  90D8               	bcf	status,0,c
 18296  00095E  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18297  000960  90D8               	bcf	status,0,c
 18298  000962  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18299  000964  90D8               	bcf	status,0,c
 18300  000966  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18301  000968  12AD               	iorwf	4013,f,c	;volatile
 18302                           
 18303                           ; BSR set to: 0
 18304                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 18305  00096A  EE20 F003          	lfsr	2,3
 18306  00096E  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18307  000970  26D9               	addwf	fsr2l,f,c
 18308  000972  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18309  000974  22DA               	addwfc	fsr2h,f,c
 18310  000976  50DF               	movf	indf2,w,c
 18311  000978  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18312  00097A  90D8               	bcf	status,0,c
 18313  00097C  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18314  00097E  90D8               	bcf	status,0,c
 18315  000980  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18316  000982  12AD               	iorwf	4013,f,c	;volatile
 18317                           
 18318                           ; BSR set to: 0
 18319                           ;uart_drv.c: 309: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 18320  000984  C080  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 18321  000988  C081  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 18322  00098C  50DF               	movf	indf2,w,c
 18323  00098E  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18324  000990  0E00               	movlw	0
 18325  000992  B182               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 18326  000994  0E80               	movlw	128
 18327  000996  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18328  000998  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18329  00099A  12AC               	iorwf	4012,f,c	;volatile
 18330                           
 18331                           ; BSR set to: 0
 18332                           ;uart_drv.c: 310: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 18333  00099C  EE20 F005          	lfsr	2,5
 18334  0009A0  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18335  0009A2  26D9               	addwf	fsr2l,f,c
 18336  0009A4  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18337  0009A6  22DA               	addwfc	fsr2h,f,c
 18338  0009A8  50DF               	movf	indf2,w,c
 18339  0009AA  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18340  0009AC  0E06               	movlw	6
 18341  0009AE  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18342  0009B0                     u6935:
 18343  0009B0  90D8               	bcf	status,0,c
 18344  0009B2  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18345  0009B4  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18346  0009B6  D7FC               	goto	u6935
 18347  0009B8  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18348  0009BA  12AC               	iorwf	4012,f,c	;volatile
 18349                           
 18350                           ; BSR set to: 0
 18351                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 18352  0009BC  EE20 F007          	lfsr	2,7
 18353  0009C0  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18354  0009C2  26D9               	addwf	fsr2l,f,c
 18355  0009C4  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18356  0009C6  22DA               	addwfc	fsr2h,f,c
 18357  0009C8  50DF               	movf	indf2,w,c
 18358  0009CA  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18359  0009CC  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18360  0009CE  0BF0               	andlw	240
 18361  0009D0  12AC               	iorwf	4012,f,c	;volatile
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;uart_drv.c: 314: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 18365  0009D2  EE20 F002          	lfsr	2,2
 18366  0009D6  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18367  0009D8  26D9               	addwf	fsr2l,f,c
 18368  0009DA  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18369  0009DC  22DA               	addwfc	fsr2h,f,c
 18370  0009DE  50DF               	movf	indf2,w,c
 18371  0009E0  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18372  0009E2  90D8               	bcf	status,0,c
 18373  0009E4  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18374  0009E6  90D8               	bcf	status,0,c
 18375  0009E8  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18376  0009EA  90D8               	bcf	status,0,c
 18377  0009EC  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18378  0009EE  127E               	iorwf	3966,f,c	;volatile
 18379                           
 18380                           ; BSR set to: 0
 18381                           ;uart_drv.c: 315: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 18382  0009F0  EE20 F00A          	lfsr	2,10
 18383  0009F4  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18384  0009F6  26D9               	addwf	fsr2l,f,c
 18385  0009F8  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18386  0009FA  22DA               	addwfc	fsr2h,f,c
 18387  0009FC  50DF               	movf	indf2,w,c
 18388  0009FE  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18389  000A00  90D8               	bcf	status,0,c
 18390  000A02  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18391  000A04  127E               	iorwf	3966,f,c	;volatile
 18392                           
 18393                           ; BSR set to: 0
 18394                           ;uart_drv.c: 316: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 18395  000A06  EE20 F009          	lfsr	2,9
 18396  000A0A  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18397  000A0C  26D9               	addwf	fsr2l,f,c
 18398  000A0E  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18399  000A10  22DA               	addwfc	fsr2h,f,c
 18400  000A12  50DF               	movf	indf2,w,c
 18401  000A14  127E               	iorwf	3966,f,c	;volatile
 18402                           
 18403                           ; BSR set to: 0
 18404                           ;uart_drv.c: 319: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 18405  000A16  EE20 F00B          	lfsr	2,11
 18406  000A1A  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18407  000A1C  26D9               	addwf	fsr2l,f,c
 18408  000A1E  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18409  000A20  22DA               	addwfc	fsr2h,f,c
 18410  000A22  50DF               	movf	indf2,w,c
 18411  000A24  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18412  000A26  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18413  000A28  509D               	movf	3997,w,c	;volatile
 18414  000A2A  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18415  000A2C  0BEF               	andlw	-17
 18416  000A2E  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18417  000A30  6E9D               	movwf	3997,c	;volatile
 18418                           
 18419                           ; BSR set to: 0
 18420                           ;uart_drv.c: 320: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 18421  000A32  EE20 F00C          	lfsr	2,12
 18422  000A36  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18423  000A38  26D9               	addwf	fsr2l,f,c
 18424  000A3A  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18425  000A3C  22DA               	addwfc	fsr2h,f,c
 18426  000A3E  50DF               	movf	indf2,w,c
 18427  000A40  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18428  000A42  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18429  000A44  4782               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 18430  000A46  509D               	movf	3997,w,c	;volatile
 18431  000A48  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18432  000A4A  0BDF               	andlw	-33
 18433  000A4C  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18434  000A4E  6E9D               	movwf	3997,c	;volatile
 18435                           
 18436                           ;uart_drv.c: 323: }
 18437  000A50  0012               	return	
 18438  000A52                     l550:
 18439                           
 18440                           ; BSR set to: 0
 18441                           ;uart_drv.c: 324: else if (Module == ((UINT8)(2)))
 18442                           
 18443                           ; BSR set to: 0
 18444  000A52  0E02               	movlw	2
 18445  000A54  1984               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 18446  000A56  A4D8               	btfss	status,2,c
 18447  000A58  0012               	return	
 18448                           
 18449                           ; BSR set to: 0
 18450                           ;uart_drv.c: 325: {
 18451                           ;uart_drv.c: 327: TRISCbits.TRISC0 = ((UINT8)(0));
 18452  000A5A  9094               	bcf	3988,0,c	;volatile
 18453                           
 18454                           ;uart_drv.c: 328: TRISCbits.TRISC1 = ((UINT8)(1));
 18455  000A5C  8294               	bsf	3988,1,c	;volatile
 18456                           
 18457                           ; BSR set to: 0
 18458                           ;uart_drv.c: 331: SetUartBaudRate(((UINT8)(2)), UartConfig);
 18459  000A5E  C080  F079         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 18460  000A62  C081  F07A         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 18461  000A66  0E02               	movlw	2
 18462  000A68  EC81  F010         	call	_SetUartBaudRate
 18463                           
 18464                           ;uart_drv.c: 336: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 18465  000A6C  0100               	movlb	0	; () banked
 18466  000A6E  EE20 F004          	lfsr	2,4
 18467  000A72  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18468  000A74  26D9               	addwf	fsr2l,f,c
 18469  000A76  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18470  000A78  22DA               	addwfc	fsr2h,f,c
 18471  000A7A  50DF               	movf	indf2,w,c
 18472  000A7C  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18473  000A7E  0E06               	movlw	6
 18474  000A80  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18475  000A82                     u6955:
 18476  000A82  90D8               	bcf	status,0,c
 18477  000A84  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18478  000A86  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18479  000A88  D7FC               	goto	u6955
 18480  000A8A  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18481  000A8C  12A8               	iorwf	4008,f,c	;volatile
 18482                           
 18483                           ; BSR set to: 0
 18484                           ;uart_drv.c: 337: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 18485  000A8E  EE20 F006          	lfsr	2,6
 18486  000A92  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18487  000A94  26D9               	addwf	fsr2l,f,c
 18488  000A96  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18489  000A98  22DA               	addwfc	fsr2h,f,c
 18490  000A9A  50DF               	movf	indf2,w,c
 18491  000A9C  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18492  000A9E  0E05               	movlw	5
 18493  000AA0  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18494  000AA2                     u6965:
 18495  000AA2  90D8               	bcf	status,0,c
 18496  000AA4  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18497  000AA6  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18498  000AA8  D7FC               	goto	u6965
 18499  000AAA  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18500  000AAC  12A8               	iorwf	4008,f,c	;volatile
 18501                           
 18502                           ; BSR set to: 0
 18503                           ;uart_drv.c: 338: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 18504  000AAE  EE20 F001          	lfsr	2,1
 18505  000AB2  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18506  000AB4  26D9               	addwf	fsr2l,f,c
 18507  000AB6  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18508  000AB8  22DA               	addwfc	fsr2h,f,c
 18509  000ABA  50DF               	movf	indf2,w,c
 18510  000ABC  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18511  000ABE  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18512  000AC0  0BF0               	andlw	240
 18513  000AC2  12A8               	iorwf	4008,f,c	;volatile
 18514                           
 18515                           ; BSR set to: 0
 18516                           ;uart_drv.c: 339: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 18517  000AC4  EE20 F008          	lfsr	2,8
 18518  000AC8  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18519  000ACA  26D9               	addwf	fsr2l,f,c
 18520  000ACC  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18521  000ACE  22DA               	addwfc	fsr2h,f,c
 18522  000AD0  50DF               	movf	indf2,w,c
 18523  000AD2  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18524  000AD4  90D8               	bcf	status,0,c
 18525  000AD6  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18526  000AD8  90D8               	bcf	status,0,c
 18527  000ADA  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18528  000ADC  90D8               	bcf	status,0,c
 18529  000ADE  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18530  000AE0  12A8               	iorwf	4008,f,c	;volatile
 18531                           
 18532                           ; BSR set to: 0
 18533                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 18534  000AE2  EE20 F003          	lfsr	2,3
 18535  000AE6  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18536  000AE8  26D9               	addwf	fsr2l,f,c
 18537  000AEA  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18538  000AEC  22DA               	addwfc	fsr2h,f,c
 18539  000AEE  50DF               	movf	indf2,w,c
 18540  000AF0  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18541  000AF2  90D8               	bcf	status,0,c
 18542  000AF4  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18543  000AF6  90D8               	bcf	status,0,c
 18544  000AF8  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18545  000AFA  12A8               	iorwf	4008,f,c	;volatile
 18546                           
 18547                           ; BSR set to: 0
 18548                           ;uart_drv.c: 343: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 18549  000AFC  C080  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 18550  000B00  C081  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 18551  000B04  50DF               	movf	indf2,w,c
 18552  000B06  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18553  000B08  0E00               	movlw	0
 18554  000B0A  B182               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 18555  000B0C  0E80               	movlw	128
 18556  000B0E  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18557  000B10  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18558  000B12  129C               	iorwf	3996,f,c	;volatile
 18559                           
 18560                           ; BSR set to: 0
 18561                           ;uart_drv.c: 344: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 18562  000B14  EE20 F005          	lfsr	2,5
 18563  000B18  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18564  000B1A  26D9               	addwf	fsr2l,f,c
 18565  000B1C  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18566  000B1E  22DA               	addwfc	fsr2h,f,c
 18567  000B20  50DF               	movf	indf2,w,c
 18568  000B22  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18569  000B24  0E06               	movlw	6
 18570  000B26  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18571  000B28                     u6975:
 18572  000B28  90D8               	bcf	status,0,c
 18573  000B2A  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18574  000B2C  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18575  000B2E  D7FC               	goto	u6975
 18576  000B30  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18577  000B32  129C               	iorwf	3996,f,c	;volatile
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;uart_drv.c: 345: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 18581  000B34  EE20 F007          	lfsr	2,7
 18582  000B38  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18583  000B3A  26D9               	addwf	fsr2l,f,c
 18584  000B3C  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18585  000B3E  22DA               	addwfc	fsr2h,f,c
 18586  000B40  50DF               	movf	indf2,w,c
 18587  000B42  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18588  000B44  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18589  000B46  0BF0               	andlw	240
 18590  000B48  129C               	iorwf	3996,f,c	;volatile
 18591                           
 18592                           ; BSR set to: 0
 18593                           ;uart_drv.c: 348: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 18594  000B4A  EE20 F002          	lfsr	2,2
 18595  000B4E  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18596  000B50  26D9               	addwf	fsr2l,f,c
 18597  000B52  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18598  000B54  22DA               	addwfc	fsr2h,f,c
 18599  000B56  50DF               	movf	indf2,w,c
 18600  000B58  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18601  000B5A  90D8               	bcf	status,0,c
 18602  000B5C  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18603  000B5E  90D8               	bcf	status,0,c
 18604  000B60  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18605  000B62  90D8               	bcf	status,0,c
 18606  000B64  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18607  000B66  127C               	iorwf	3964,f,c	;volatile
 18608                           
 18609                           ; BSR set to: 0
 18610                           ;uart_drv.c: 349: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 18611  000B68  EE20 F00A          	lfsr	2,10
 18612  000B6C  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18613  000B6E  26D9               	addwf	fsr2l,f,c
 18614  000B70  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18615  000B72  22DA               	addwfc	fsr2h,f,c
 18616  000B74  50DF               	movf	indf2,w,c
 18617  000B76  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18618  000B78  90D8               	bcf	status,0,c
 18619  000B7A  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18620  000B7C  127C               	iorwf	3964,f,c	;volatile
 18621                           
 18622                           ; BSR set to: 0
 18623                           ;uart_drv.c: 350: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 18624  000B7E  EE20 F009          	lfsr	2,9
 18625  000B82  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18626  000B84  26D9               	addwf	fsr2l,f,c
 18627  000B86  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18628  000B88  22DA               	addwfc	fsr2h,f,c
 18629  000B8A  50DF               	movf	indf2,w,c
 18630  000B8C  127C               	iorwf	3964,f,c	;volatile
 18631                           
 18632                           ; BSR set to: 0
 18633                           ;uart_drv.c: 353: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 18634  000B8E  EE20 F00B          	lfsr	2,11
 18635  000B92  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18636  000B94  26D9               	addwf	fsr2l,f,c
 18637  000B96  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18638  000B98  22DA               	addwfc	fsr2h,f,c
 18639  000B9A  50DF               	movf	indf2,w,c
 18640  000B9C  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18641  000B9E  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18642  000BA0  50A3               	movf	4003,w,c	;volatile
 18643  000BA2  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18644  000BA4  0BEF               	andlw	-17
 18645  000BA6  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18646  000BA8  6EA3               	movwf	4003,c	;volatile
 18647                           
 18648                           ; BSR set to: 0
 18649                           ;uart_drv.c: 354: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 18650  000BAA  EE20 F00C          	lfsr	2,12
 18651  000BAE  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18652  000BB0  26D9               	addwf	fsr2l,f,c
 18653  000BB2  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18654  000BB4  22DA               	addwfc	fsr2h,f,c
 18655  000BB6  50DF               	movf	indf2,w,c
 18656  000BB8  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18657  000BBA  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18658  000BBC  4782               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 18659  000BBE  50A3               	movf	4003,w,c	;volatile
 18660  000BC0  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18661  000BC2  0BDF               	andlw	-33
 18662  000BC4  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18663  000BC6  6EA3               	movwf	4003,c	;volatile
 18664                           
 18665                           ; BSR set to: 0
 18666  000BC8  0012               	return	
 18667  000BCA                     __end_of_Uart_InitUartModule:
 18668                           	opt stack 0
 18669                           tosu	equ	0xFFF
 18670                           tosh	equ	0xFFE
 18671                           tosl	equ	0xFFD
 18672                           pclath	equ	0xFFA
 18673                           tblptru	equ	0xFF8
 18674                           tblptrh	equ	0xFF7
 18675                           tblptrl	equ	0xFF6
 18676                           tablat	equ	0xFF5
 18677                           prodh	equ	0xFF4
 18678                           prodl	equ	0xFF3
 18679                           intcon	equ	0xFF2
 18680                           intcon2	equ	0xFF1
 18681                           intcon3	equ	0xFF0
 18682                           indf0	equ	0xFEF
 18683                           postinc0	equ	0xFEE
 18684                           plusw0	equ	0xFEB
 18685                           fsr0h	equ	0xFEA
 18686                           fsr0l	equ	0xFE9
 18687                           wreg	equ	0xFE8
 18688                           indf1	equ	0xFE7
 18689                           postinc1	equ	0xFE6
 18690                           postdec1	equ	0xFE5
 18691                           fsr1h	equ	0xFE2
 18692                           fsr1l	equ	0xFE1
 18693                           indf2	equ	0xFDF
 18694                           postinc2	equ	0xFDE
 18695                           postdec2	equ	0xFDD
 18696                           plusw2	equ	0xFDB
 18697                           fsr2h	equ	0xFDA
 18698                           fsr2l	equ	0xFD9
 18699                           status	equ	0xFD8
 18700                           
 18701 ;; *************** function _SetUartBaudRate *****************
 18702 ;; Defined at:
 18703 ;;		line 121 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 18704 ;; Parameters:    Size  Location     Type
 18705 ;;  Module          1    wreg     unsigned char 
 18706 ;;  UartConfig      2   25[BANK0 ] PTR struct _UartConfig
 18707 ;;		 -> UartConfig(21), 
 18708 ;; Auto vars:     Size  Location     Type
 18709 ;;  Module          1   28[BANK0 ] unsigned char 
 18710 ;;  BaudRateRegi    2   29[BANK0 ] unsigned short 
 18711 ;;  DivisionFact    1   31[BANK0 ] unsigned char 
 18712 ;; Return value:  Size  Location     Type
 18713 ;;                  1    wreg      void 
 18714 ;; Registers used:
 18715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18716 ;; Tracked objects:
 18717 ;;		On entry : 0/0
 18718 ;;		On exit  : 0/0
 18719 ;;		Unchanged: 0/0
 18720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18721 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18722 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18724 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18725 ;;Total ram usage:        7 bytes
 18726 ;; Hardware stack levels used:    1
 18727 ;; Hardware stack levels required when called:   12
 18728 ;; This function calls:
 18729 ;;		___lldiv
 18730 ;;		___lmul
 18731 ;; This function is called by:
 18732 ;;		_Uart_InitUartModule
 18733 ;; This function uses a non-reentrant model
 18734 ;;
 18735                           
 18736                           	psect	text84
 18737  002102                     __ptext84:
 18738                           	opt stack 0
 18739  002102                     _SetUartBaudRate:
 18740                           	opt stack 14
 18741                           
 18742                           ; BSR set to: 0
 18743                           ;incstack = 0
 18744                           ;SetUartBaudRate@Module stored from wreg
 18745  002102  0100               	movlb	0	; () banked
 18746  002104  6F7C               	movwf	SetUartBaudRate@Module& (0+255),b
 18747                           
 18748                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 18749  002106  0E00               	movlw	0
 18750  002108  0100               	movlb	0	; () banked
 18751  00210A  6F7E               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 18752  00210C  0E00               	movlw	0
 18753  00210E  6F7D               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 18754                           
 18755                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 18756  002110  0E00               	movlw	0
 18757  002112  6F7F               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 18758                           
 18759                           ; BSR set to: 0
 18760                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 18761  002114  EE20 F002          	lfsr	2,2
 18762  002118  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18763  00211A  26D9               	addwf	fsr2l,f,c
 18764  00211C  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18765  00211E  22DA               	addwfc	fsr2h,f,c
 18766  002120  50DF               	movf	indf2,w,c
 18767  002122  A4D8               	btfss	status,2,c
 18768  002124  D00B               	goto	l507
 18769                           
 18770                           ; BSR set to: 0
 18771  002126  EE20 F002          	lfsr	2,2
 18772  00212A  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18773  00212C  26D9               	addwf	fsr2l,f,c
 18774  00212E  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18775  002130  22DA               	addwfc	fsr2h,f,c
 18776  002132  50DF               	movf	indf2,w,c
 18777  002134  A4D8               	btfss	status,2,c
 18778  002136  D002               	goto	l507
 18779                           
 18780                           ; BSR set to: 0
 18781                           ;uart_drv.c: 128: {
 18782                           ;uart_drv.c: 129: DivisionFactor = 64;
 18783  002138  0E40               	movlw	64
 18784  00213A  D039               	goto	L23
 18785  00213C                     l507:
 18786                           
 18787                           ; BSR set to: 0
 18788                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 18789                           
 18790                           ; BSR set to: 0
 18791  00213C  EE20 F002          	lfsr	2,2
 18792  002140  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18793  002142  26D9               	addwf	fsr2l,f,c
 18794  002144  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18795  002146  22DA               	addwfc	fsr2h,f,c
 18796  002148  04DE               	decf	postinc2,w,c
 18797  00214A  A4D8               	btfss	status,2,c
 18798  00214C  D009               	goto	l509
 18799                           
 18800                           ; BSR set to: 0
 18801  00214E  EE20 F002          	lfsr	2,2
 18802  002152  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18803  002154  26D9               	addwf	fsr2l,f,c
 18804  002156  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18805  002158  22DA               	addwfc	fsr2h,f,c
 18806  00215A  50DF               	movf	indf2,w,c
 18807  00215C  B4D8               	btfsc	status,2,c
 18808  00215E  D012               	goto	u6170
 18809  002160                     l509:
 18810                           
 18811                           ; BSR set to: 0
 18812                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 18813                           
 18814                           ; BSR set to: 0
 18815  002160  EE20 F002          	lfsr	2,2
 18816  002164  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18817  002166  26D9               	addwf	fsr2l,f,c
 18818  002168  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18819  00216A  22DA               	addwfc	fsr2h,f,c
 18820  00216C  50DF               	movf	indf2,w,c
 18821  00216E  A4D8               	btfss	status,2,c
 18822  002170  D00B               	goto	l511
 18823                           
 18824                           ; BSR set to: 0
 18825  002172  EE20 F002          	lfsr	2,2
 18826  002176  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18827  002178  26D9               	addwf	fsr2l,f,c
 18828  00217A  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18829  00217C  22DA               	addwfc	fsr2h,f,c
 18830  00217E  04DE               	decf	postinc2,w,c
 18831  002180  A4D8               	btfss	status,2,c
 18832  002182  D002               	goto	l511
 18833  002184                     u6170:
 18834                           
 18835                           ; BSR set to: 0
 18836                           ;uart_drv.c: 136: {
 18837                           ;uart_drv.c: 137: DivisionFactor = 16;
 18838  002184  0E10               	movlw	16
 18839  002186  D013               	goto	L23
 18840  002188                     l511:
 18841                           
 18842                           ; BSR set to: 0
 18843                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 18844                           
 18845                           ; BSR set to: 0
 18846  002188  EE20 F002          	lfsr	2,2
 18847  00218C  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18848  00218E  26D9               	addwf	fsr2l,f,c
 18849  002190  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18850  002192  22DA               	addwfc	fsr2h,f,c
 18851  002194  04DE               	decf	postinc2,w,c
 18852  002196  A4D8               	btfss	status,2,c
 18853  002198  D00B               	goto	l513
 18854                           
 18855                           ; BSR set to: 0
 18856  00219A  EE20 F002          	lfsr	2,2
 18857  00219E  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18858  0021A0  26D9               	addwf	fsr2l,f,c
 18859  0021A2  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18860  0021A4  22DA               	addwfc	fsr2h,f,c
 18861  0021A6  04DE               	decf	postinc2,w,c
 18862  0021A8  A4D8               	btfss	status,2,c
 18863  0021AA  D002               	goto	l513
 18864                           
 18865                           ; BSR set to: 0
 18866                           ;uart_drv.c: 140: {
 18867                           ;uart_drv.c: 141: DivisionFactor = 4;
 18868  0021AC  0E04               	movlw	4
 18869  0021AE                     L23:
 18870  0021AE  6F7F               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 18871  0021B0                     l513:
 18872                           
 18873                           ; BSR set to: 0
 18874                           ;uart_drv.c: 146: }
 18875                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 18876                           
 18877                           ; BSR set to: 0
 18878                           
 18879                           ; BSR set to: 0
 18880                           
 18881                           ; BSR set to: 0
 18882                           
 18883                           ; BSR set to: 0
 18884                           
 18885                           ;uart_drv.c: 143: else
 18886                           ;uart_drv.c: 144: {
 18887                           
 18888                           ; BSR set to: 0
 18889  0021B0  EE20 F00D          	lfsr	2,13
 18890  0021B4  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18891  0021B6  26D9               	addwf	fsr2l,f,c
 18892  0021B8  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18893  0021BA  22DA               	addwfc	fsr2h,f,c
 18894  0021BC  CFDE F06C          	movff	postinc2,___lldiv@dividend
 18895  0021C0  CFDE F06D          	movff	postinc2,___lldiv@dividend+1
 18896  0021C4  CFDE F06E          	movff	postinc2,___lldiv@dividend+2
 18897  0021C8  CFDE F06F          	movff	postinc2,___lldiv@dividend+3
 18898  0021CC  517F               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 18899  0021CE  6F60               	movwf	___lmul@multiplier& (0+255),b
 18900  0021D0  6B61               	clrf	(___lmul@multiplier+1)& (0+255),b
 18901  0021D2  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
 18902  0021D4  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
 18903  0021D6  EE20 F011          	lfsr	2,17
 18904  0021DA  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18905  0021DC  26D9               	addwf	fsr2l,f,c
 18906  0021DE  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18907  0021E0  22DA               	addwfc	fsr2h,f,c
 18908  0021E2  CFDE F064          	movff	postinc2,___lmul@multiplicand
 18909  0021E6  CFDE F065          	movff	postinc2,___lmul@multiplicand+1
 18910  0021EA  CFDE F066          	movff	postinc2,___lmul@multiplicand+2
 18911  0021EE  CFDE F067          	movff	postinc2,___lmul@multiplicand+3
 18912  0021F2  ECEA  F020         	call	___lmul	;wreg free
 18913  0021F6  C060  F070         	movff	?___lmul,___lldiv@divisor
 18914  0021FA  C061  F071         	movff	?___lmul+1,___lldiv@divisor+1
 18915  0021FE  C062  F072         	movff	?___lmul+2,___lldiv@divisor+2
 18916  002202  C063  F073         	movff	?___lmul+3,___lldiv@divisor+3
 18917  002206  EC2B  F01E         	call	___lldiv	;wreg free
 18918  00220A  0EFF               	movlw	255
 18919  00220C  0100               	movlb	0	; () banked
 18920  00220E  256C               	addwf	?___lldiv& (0+255),w,b
 18921  002210  6F7D               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 18922  002212  0EFF               	movlw	255
 18923  002214  216D               	addwfc	(?___lldiv+1)& (0+255),w,b
 18924  002216  6F7E               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 18925                           
 18926                           ; BSR set to: 0
 18927                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 18928  002218  057C               	decf	SetUartBaudRate@Module& (0+255),w,b
 18929  00221A  A4D8               	btfss	status,2,c
 18930  00221C  D005               	goto	l515
 18931                           
 18932                           ; BSR set to: 0
 18933                           ;uart_drv.c: 152: {
 18934                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 18935  00221E  0E00               	movlw	0
 18936  002220  6E7F               	movwf	3967,c	;volatile
 18937                           
 18938                           ; BSR set to: 0
 18939                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 18940  002222  C07D  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 18941                           
 18942                           ;uart_drv.c: 156: }
 18943  002226  0012               	return	
 18944  002228                     l515:
 18945                           
 18946                           ; BSR set to: 0
 18947                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 18948                           
 18949                           ; BSR set to: 0
 18950  002228  0E02               	movlw	2
 18951  00222A  197C               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 18952  00222C  A4D8               	btfss	status,2,c
 18953  00222E  0012               	return	
 18954                           
 18955                           ; BSR set to: 0
 18956                           ;uart_drv.c: 158: {
 18957                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 18958  002230  0E00               	movlw	0
 18959  002232  6E7D               	movwf	3965,c	;volatile
 18960                           
 18961                           ; BSR set to: 0
 18962                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 18963  002234  C07D  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 18964                           
 18965                           ; BSR set to: 0
 18966  002238  0012               	return	
 18967  00223A                     __end_of_SetUartBaudRate:
 18968                           	opt stack 0
 18969                           tosu	equ	0xFFF
 18970                           tosh	equ	0xFFE
 18971                           tosl	equ	0xFFD
 18972                           pclath	equ	0xFFA
 18973                           tblptru	equ	0xFF8
 18974                           tblptrh	equ	0xFF7
 18975                           tblptrl	equ	0xFF6
 18976                           tablat	equ	0xFF5
 18977                           prodh	equ	0xFF4
 18978                           prodl	equ	0xFF3
 18979                           intcon	equ	0xFF2
 18980                           intcon2	equ	0xFF1
 18981                           intcon3	equ	0xFF0
 18982                           indf0	equ	0xFEF
 18983                           postinc0	equ	0xFEE
 18984                           plusw0	equ	0xFEB
 18985                           fsr0h	equ	0xFEA
 18986                           fsr0l	equ	0xFE9
 18987                           wreg	equ	0xFE8
 18988                           indf1	equ	0xFE7
 18989                           postinc1	equ	0xFE6
 18990                           postdec1	equ	0xFE5
 18991                           fsr1h	equ	0xFE2
 18992                           fsr1l	equ	0xFE1
 18993                           indf2	equ	0xFDF
 18994                           postinc2	equ	0xFDE
 18995                           postdec2	equ	0xFDD
 18996                           plusw2	equ	0xFDB
 18997                           fsr2h	equ	0xFDA
 18998                           fsr2l	equ	0xFD9
 18999                           status	equ	0xFD8
 19000                           
 19001 ;; *************** function ___lmul *****************
 19002 ;; Defined at:
 19003 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 19004 ;; Parameters:    Size  Location     Type
 19005 ;;  multiplier      4    0[BANK0 ] unsigned long 
 19006 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 19007 ;; Auto vars:     Size  Location     Type
 19008 ;;  product         4    8[BANK0 ] unsigned long 
 19009 ;; Return value:  Size  Location     Type
 19010 ;;                  4    0[BANK0 ] unsigned long 
 19011 ;; Registers used:
 19012 ;;		wreg, status,2, status,0
 19013 ;; Tracked objects:
 19014 ;;		On entry : 0/0
 19015 ;;		On exit  : 0/0
 19016 ;;		Unchanged: 0/0
 19017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19018 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19019 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19021 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19022 ;;Total ram usage:       12 bytes
 19023 ;; Hardware stack levels used:    1
 19024 ;; Hardware stack levels required when called:   11
 19025 ;; This function calls:
 19026 ;;		Nothing
 19027 ;; This function is called by:
 19028 ;;		_Tmr_TmrBPrSet
 19029 ;;		_SetUartBaudRate
 19030 ;;		_strtol
 19031 ;; This function uses a non-reentrant model
 19032 ;;
 19033                           
 19034                           	psect	text85
 19035  0041D4                     __ptext85:
 19036                           	opt stack 0
 19037  0041D4                     ___lmul:
 19038                           	opt stack 15
 19039                           
 19040                           ; BSR set to: 0
 19041                           ;incstack = 0
 19042  0041D4  0E00               	movlw	0
 19043  0041D6  0100               	movlb	0	; () banked
 19044  0041D8  6F68               	movwf	___lmul@product& (0+255),b
 19045  0041DA  0E00               	movlw	0
 19046  0041DC  6F69               	movwf	(___lmul@product+1)& (0+255),b
 19047  0041DE  0E00               	movlw	0
 19048  0041E0  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 19049  0041E2  0E00               	movlw	0
 19050  0041E4  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 19051  0041E6                     
 19052                           ; BSR set to: 0
 19053                           
 19054                           ; BSR set to: 0
 19055  0041E6  A160               	btfss	___lmul@multiplier& (0+255),0,b
 19056  0041E8  D008               	goto	l2134
 19057                           
 19058                           ; BSR set to: 0
 19059  0041EA  5164               	movf	___lmul@multiplicand& (0+255),w,b
 19060  0041EC  2768               	addwf	___lmul@product& (0+255),f,b
 19061  0041EE  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19062  0041F0  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 19063  0041F2  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19064  0041F4  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 19065  0041F6  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19066  0041F8  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 19067  0041FA                     l2134:
 19068                           
 19069                           ; BSR set to: 0
 19070                           
 19071                           ; BSR set to: 0
 19072  0041FA  90D8               	bcf	status,0,c
 19073  0041FC  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 19074  0041FE  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19075  004200  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19076  004202  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19077                           
 19078                           ; BSR set to: 0
 19079  004204  90D8               	bcf	status,0,c
 19080  004206  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19081  004208  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19082  00420A  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19083  00420C  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 19084  00420E  5160               	movf	___lmul@multiplier& (0+255),w,b
 19085  004210  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19086  004212  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19087  004214  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19088  004216  A4D8               	btfss	status,2,c
 19089  004218  D7E6               	goto	l2133
 19090                           
 19091                           ; BSR set to: 0
 19092  00421A  C068  F060         	movff	___lmul@product,?___lmul
 19093  00421E  C069  F061         	movff	___lmul@product+1,?___lmul+1
 19094  004222  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 19095  004226  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 19096                           
 19097                           ; BSR set to: 0
 19098  00422A  0012               	return		;funcret
 19099  00422C                     __end_of___lmul:
 19100                           	opt stack 0
 19101                           tosu	equ	0xFFF
 19102                           tosh	equ	0xFFE
 19103                           tosl	equ	0xFFD
 19104                           pclath	equ	0xFFA
 19105                           tblptru	equ	0xFF8
 19106                           tblptrh	equ	0xFF7
 19107                           tblptrl	equ	0xFF6
 19108                           tablat	equ	0xFF5
 19109                           prodh	equ	0xFF4
 19110                           prodl	equ	0xFF3
 19111                           intcon	equ	0xFF2
 19112                           intcon2	equ	0xFF1
 19113                           intcon3	equ	0xFF0
 19114                           indf0	equ	0xFEF
 19115                           postinc0	equ	0xFEE
 19116                           plusw0	equ	0xFEB
 19117                           fsr0h	equ	0xFEA
 19118                           fsr0l	equ	0xFE9
 19119                           wreg	equ	0xFE8
 19120                           indf1	equ	0xFE7
 19121                           postinc1	equ	0xFE6
 19122                           postdec1	equ	0xFE5
 19123                           fsr1h	equ	0xFE2
 19124                           fsr1l	equ	0xFE1
 19125                           indf2	equ	0xFDF
 19126                           postinc2	equ	0xFDE
 19127                           postdec2	equ	0xFDD
 19128                           plusw2	equ	0xFDB
 19129                           fsr2h	equ	0xFDA
 19130                           fsr2l	equ	0xFD9
 19131                           status	equ	0xFD8
 19132                           
 19133 ;; *************** function _UartSetConfig *****************
 19134 ;; Defined at:
 19135 ;;		line 119 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19136 ;; Parameters:    Size  Location     Type
 19137 ;;		None
 19138 ;; Auto vars:     Size  Location     Type
 19139 ;;		None
 19140 ;; Return value:  Size  Location     Type
 19141 ;;                  1    wreg      void 
 19142 ;; Registers used:
 19143 ;;		wreg, status,2
 19144 ;; Tracked objects:
 19145 ;;		On entry : 0/0
 19146 ;;		On exit  : 0/0
 19147 ;;		Unchanged: 0/0
 19148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19153 ;;Total ram usage:        0 bytes
 19154 ;; Hardware stack levels used:    1
 19155 ;; Hardware stack levels required when called:   11
 19156 ;; This function calls:
 19157 ;;		Nothing
 19158 ;; This function is called by:
 19159 ;;		_MdmWifi_MainTask
 19160 ;; This function uses a non-reentrant model
 19161 ;;
 19162                           
 19163                           	psect	text86
 19164  00422C                     __ptext86:
 19165                           	opt stack 0
 19166  00422C                     _UartSetConfig:
 19167                           	opt stack 16
 19168                           
 19169                           ;mdm_wifi.c: 121: UartConfig.UartEnable = ((UINT8)(1));
 19170                           
 19171                           ; BSR set to: 0
 19172                           ;incstack = 0
 19173  00422C  0E01               	movlw	1
 19174  00422E  0101               	movlb	1	; () banked
 19175  004230  6F78               	movwf	_UartConfig& (0+255),b
 19176                           
 19177                           ;mdm_wifi.c: 122: UartConfig.UartMode = ((UINT8)(0));
 19178  004232  0E00               	movlw	0
 19179  004234  6F79               	movwf	(_UartConfig+1)& (0+255),b
 19180                           
 19181                           ;mdm_wifi.c: 123: UartConfig.BaudRateMode = ((UINT8)(1));
 19182  004236  0E01               	movlw	1
 19183  004238  6F7A               	movwf	(_UartConfig+2)& (0+255),b
 19184                           
 19185                           ;mdm_wifi.c: 124: UartConfig.HighBaudMode = ((UINT8)(1));
 19186  00423A  0E01               	movlw	1
 19187  00423C  6F7B               	movwf	(_UartConfig+3)& (0+255),b
 19188                           
 19189                           ;mdm_wifi.c: 125: UartConfig.Tx9bitMode = ((UINT8)(0));
 19190  00423E  0E00               	movlw	0
 19191  004240  6F7C               	movwf	(_UartConfig+4)& (0+255),b
 19192                           
 19193                           ;mdm_wifi.c: 126: UartConfig.Rx9bitMode = ((UINT8)(0));
 19194  004242  0E00               	movlw	0
 19195  004244  6F7D               	movwf	(_UartConfig+5)& (0+255),b
 19196                           
 19197                           ;mdm_wifi.c: 127: UartConfig.TxEnable = ((UINT8)(1));
 19198  004246  0E01               	movlw	1
 19199  004248  6F7E               	movwf	(_UartConfig+6)& (0+255),b
 19200                           
 19201                           ;mdm_wifi.c: 128: UartConfig.RxEnable = ((UINT8)(1));
 19202  00424A  0E01               	movlw	1
 19203  00424C  6F7F               	movwf	(_UartConfig+7)& (0+255),b
 19204                           
 19205                           ;mdm_wifi.c: 129: UartConfig.SendBreakEnable = ((UINT8)(0));
 19206  00424E  0E00               	movlw	0
 19207  004250  6F80               	movwf	(_UartConfig+8)& (0+255),b
 19208                           
 19209                           ;mdm_wifi.c: 130: UartConfig.AutobaudEnable = ((UINT8)(0));
 19210  004252  0E00               	movlw	0
 19211  004254  6F81               	movwf	(_UartConfig+9)& (0+255),b
 19212                           
 19213                           ;mdm_wifi.c: 131: UartConfig.WakeUpEnable = ((UINT8)(0));
 19214  004256  0E00               	movlw	0
 19215  004258  6F82               	movwf	(_UartConfig+10)& (0+255),b
 19216                           
 19217                           ;mdm_wifi.c: 132: UartConfig.TxInterruptEnable = ((UINT8)(0));
 19218  00425A  0E00               	movlw	0
 19219  00425C  6F83               	movwf	(_UartConfig+11)& (0+255),b
 19220                           
 19221                           ;mdm_wifi.c: 133: UartConfig.RxInterruptEnable = ((UINT8)(1));
 19222  00425E  0E01               	movlw	1
 19223  004260  6F84               	movwf	(_UartConfig+12)& (0+255),b
 19224                           
 19225                           ;mdm_wifi.c: 134: UartConfig.McuBusClock = ((UINT32)(48000000));
 19226  004262  0E00               	movlw	0
 19227  004264  6F85               	movwf	(_UartConfig+13)& (0+255),b
 19228  004266  0E6C               	movlw	108
 19229  004268  6F86               	movwf	(_UartConfig+14)& (0+255),b
 19230  00426A  0EDC               	movlw	220
 19231  00426C  6F87               	movwf	(_UartConfig+15)& (0+255),b
 19232  00426E  0E02               	movlw	2
 19233  004270  6F88               	movwf	(_UartConfig+16)& (0+255),b
 19234                           
 19235                           ;mdm_wifi.c: 135: UartConfig.DesiredBaudRate = 115200;
 19236  004272  0E00               	movlw	0
 19237  004274  6F89               	movwf	(_UartConfig+17)& (0+255),b
 19238  004276  0EC2               	movlw	194
 19239  004278  6F8A               	movwf	(_UartConfig+18)& (0+255),b
 19240  00427A  0E01               	movlw	1
 19241  00427C  6F8B               	movwf	(_UartConfig+19)& (0+255),b
 19242  00427E  0E00               	movlw	0
 19243  004280  6F8C               	movwf	(_UartConfig+20)& (0+255),b
 19244                           
 19245                           ; BSR set to: 1
 19246  004282  0012               	return		;funcret
 19247  004284                     __end_of_UartSetConfig:
 19248                           	opt stack 0
 19249                           tosu	equ	0xFFF
 19250                           tosh	equ	0xFFE
 19251                           tosl	equ	0xFFD
 19252                           pclath	equ	0xFFA
 19253                           tblptru	equ	0xFF8
 19254                           tblptrh	equ	0xFF7
 19255                           tblptrl	equ	0xFF6
 19256                           tablat	equ	0xFF5
 19257                           prodh	equ	0xFF4
 19258                           prodl	equ	0xFF3
 19259                           intcon	equ	0xFF2
 19260                           intcon2	equ	0xFF1
 19261                           intcon3	equ	0xFF0
 19262                           indf0	equ	0xFEF
 19263                           postinc0	equ	0xFEE
 19264                           plusw0	equ	0xFEB
 19265                           fsr0h	equ	0xFEA
 19266                           fsr0l	equ	0xFE9
 19267                           wreg	equ	0xFE8
 19268                           indf1	equ	0xFE7
 19269                           postinc1	equ	0xFE6
 19270                           postdec1	equ	0xFE5
 19271                           fsr1h	equ	0xFE2
 19272                           fsr1l	equ	0xFE1
 19273                           indf2	equ	0xFDF
 19274                           postinc2	equ	0xFDE
 19275                           postdec2	equ	0xFDD
 19276                           plusw2	equ	0xFDB
 19277                           fsr2h	equ	0xFDA
 19278                           fsr2l	equ	0xFD9
 19279                           status	equ	0xFD8
 19280                           
 19281 ;; *************** function _MdmWifiGetUartData *****************
 19282 ;; Defined at:
 19283 ;;		line 146 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19284 ;; Parameters:    Size  Location     Type
 19285 ;;		None
 19286 ;; Auto vars:     Size  Location     Type
 19287 ;;		None
 19288 ;; Return value:  Size  Location     Type
 19289 ;;                  1    wreg      void 
 19290 ;; Registers used:
 19291 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19292 ;; Tracked objects:
 19293 ;;		On entry : 0/0
 19294 ;;		On exit  : 0/0
 19295 ;;		Unchanged: 0/0
 19296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19301 ;;Total ram usage:        0 bytes
 19302 ;; Hardware stack levels used:    1
 19303 ;; Hardware stack levels required when called:   12
 19304 ;; This function calls:
 19305 ;;		_ClearBuffer
 19306 ;;		_GenerateEvt
 19307 ;;		_ReceiveEvt
 19308 ;;		_StringCopy
 19309 ;; This function is called by:
 19310 ;;		_MdmWifi_MainTask
 19311 ;; This function uses a non-reentrant model
 19312 ;;
 19313                           
 19314                           	psect	text87
 19315  002AEC                     __ptext87:
 19316                           	opt stack 0
 19317  002AEC                     _MdmWifiGetUartData:
 19318                           	opt stack 15
 19319                           
 19320                           ;mdm_wifi.c: 148: static WifiUartGetDataStateType WifiUartGetDataState = WifiMdmUart_RxI
      +                          dle;
 19321                           ;mdm_wifi.c: 149: static UINT8 Counter = 0;
 19322                           ;mdm_wifi.c: 151: switch (WifiUartGetDataState)
 19323                           
 19324                           ; BSR set to: 1
 19325                           ;incstack = 0
 19326  002AEC  D05F               	goto	l864
 19327  002AEE                     
 19328                           ;mdm_wifi.c: 155: if (ReceiveEvt(&NewWifiUartData))
 19329  002AEE  0E5C               	movlw	low _NewWifiUartData
 19330  002AF0  0100               	movlb	0	; () banked
 19331  002AF2  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19332  002AF4  0E00               	movlw	high _NewWifiUartData
 19333  002AF6  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19334  002AF8  EC61  F025         	call	_ReceiveEvt	;wreg free
 19335  002AFC  0900               	iorlw	0
 19336  002AFE  B4D8               	btfsc	status,2,c
 19337  002B00  0012               	return	
 19338                           
 19339                           ;mdm_wifi.c: 156: {
 19340                           ;mdm_wifi.c: 158: WifiUartGetDataState = WifiMdmUart_Receiving;
 19341  002B02  0E01               	movlw	1
 19342  002B04  0101               	movlb	1	; () banked
 19343  002B06  6F6C               	movwf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),b
 19344                           
 19345                           ; BSR set to: 1
 19346                           ;mdm_wifi.c: 159: }
 19347                           ;mdm_wifi.c: 160: break;
 19348  002B08  0012               	return	
 19349  002B0A                     
 19350                           ; BSR set to: 1
 19351                           ;mdm_wifi.c: 164: if (ReceiveEvt(&NewWifiUartData))
 19352                           
 19353                           ; BSR set to: 1
 19354  002B0A  0E5C               	movlw	low _NewWifiUartData
 19355  002B0C  0100               	movlb	0	; () banked
 19356  002B0E  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19357  002B10  0E00               	movlw	high _NewWifiUartData
 19358  002B12  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19359  002B14  EC61  F025         	call	_ReceiveEvt	;wreg free
 19360  002B18  0900               	iorlw	0
 19361  002B1A  B4D8               	btfsc	status,2,c
 19362  002B1C  D004               	goto	l869
 19363                           
 19364                           ;mdm_wifi.c: 165: {
 19365                           ;mdm_wifi.c: 167: Counter = 0;
 19366  002B1E  0E00               	movlw	0
 19367  002B20  0101               	movlb	1	; () banked
 19368  002B22  6F6B               	movwf	MdmWifiGetUartData@Counter& (0+255),b
 19369                           
 19370                           ;mdm_wifi.c: 168: }
 19371  002B24  0012               	return	
 19372  002B26                     l869:
 19373                           
 19374                           ;mdm_wifi.c: 169: else
 19375                           ;mdm_wifi.c: 170: {
 19376                           ;mdm_wifi.c: 172: Counter++;
 19377                           
 19378                           ; BSR set to: 1
 19379  002B26  0101               	movlb	1	; () banked
 19380  002B28  2B6B               	incf	MdmWifiGetUartData@Counter& (0+255),f,b
 19381                           
 19382                           ; BSR set to: 1
 19383                           ;mdm_wifi.c: 174: if (Counter >= (((UINT16)(10))/((UINT16)(1))))
 19384  002B2A  0E09               	movlw	9
 19385  002B2C  656B               	cpfsgt	MdmWifiGetUartData@Counter& (0+255),b
 19386  002B2E  0012               	return	
 19387                           
 19388                           ; BSR set to: 1
 19389                           ;mdm_wifi.c: 175: {
 19390                           ;mdm_wifi.c: 177: Counter = 0;
 19391  002B30  0E00               	movlw	0
 19392  002B32  6F6B               	movwf	MdmWifiGetUartData@Counter& (0+255),b
 19393                           
 19394                           ; BSR set to: 1
 19395                           ;mdm_wifi.c: 179: StringCopy(MdmWifi_UartRxBuffer,WifiRxPacket.RxBuffer,MdmWifi_UartRxCo
      +                          unter);
 19396  002B34  0E00               	movlw	low _MdmWifi_UartRxBuffer
 19397  002B36  0100               	movlb	0	; () banked
 19398  002B38  6F60               	movwf	StringCopy@SourceStr& (0+255),b
 19399  002B3A  0E0B               	movlw	high _MdmWifi_UartRxBuffer
 19400  002B3C  6F61               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 19401  002B3E  0E00               	movlw	low _WifiRxPacket
 19402  002B40  6F62               	movwf	StringCopy@DestStr& (0+255),b
 19403  002B42  0E07               	movlw	high _WifiRxPacket
 19404  002B44  6F63               	movwf	(StringCopy@DestStr+1)& (0+255),b
 19405  002B46  C14A  F064         	movff	_MdmWifi_UartRxCounter,StringCopy@Len
 19406  002B4A  C14B  F065         	movff	_MdmWifi_UartRxCounter+1,StringCopy@Len+1
 19407  002B4E  ECE9  F023         	call	_StringCopy	;wreg free
 19408                           
 19409                           ;mdm_wifi.c: 180: WifiRxPacket.RxByteNum = MdmWifi_UartRxCounter;
 19410  002B52  C14A  F7FA         	movff	_MdmWifi_UartRxCounter,_WifiRxPacket+250
 19411  002B56  C14B  F7FB         	movff	_MdmWifi_UartRxCounter+1,_WifiRxPacket+251
 19412                           
 19413                           ;mdm_wifi.c: 182: ClearBuffer(MdmWifi_UartRxBuffer,sizeof(MdmWifi_UartRxBuffer));
 19414  002B5A  0E00               	movlw	low _MdmWifi_UartRxBuffer
 19415  002B5C  0100               	movlb	0	; () banked
 19416  002B5E  6F60               	movwf	ClearBuffer@Buffer& (0+255),b
 19417  002B60  0E0B               	movlw	high _MdmWifi_UartRxBuffer
 19418  002B62  6F61               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 19419  002B64  0E00               	movlw	0
 19420  002B66  6F63               	movwf	(ClearBuffer@Len+1)& (0+255),b
 19421  002B68  0EFA               	movlw	250
 19422  002B6A  6F62               	movwf	ClearBuffer@Len& (0+255),b
 19423  002B6C  EC9B  F024         	call	_ClearBuffer	;wreg free
 19424                           
 19425                           ;mdm_wifi.c: 183: MdmWifi_UartRxCounter = 0;
 19426  002B70  0E00               	movlw	0
 19427  002B72  0101               	movlb	1	; () banked
 19428  002B74  6F4B               	movwf	(_MdmWifi_UartRxCounter+1)& (0+255),b
 19429  002B76  0E00               	movlw	0
 19430  002B78  6F4A               	movwf	_MdmWifi_UartRxCounter& (0+255),b
 19431                           
 19432                           ; BSR set to: 1
 19433                           ;mdm_wifi.c: 185: GenerateEvt(&(WifiRxPacket.PacketRxNotificationEvt));
 19434  002B7A  0EFC               	movlw	low (_WifiRxPacket+252)
 19435  002B7C  0100               	movlb	0	; () banked
 19436  002B7E  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19437  002B80  0E07               	movlw	high (_WifiRxPacket+252)
 19438  002B82  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19439  002B84  EC00  F027         	call	_GenerateEvt	;wreg free
 19440                           
 19441                           ;mdm_wifi.c: 186: GenerateEvt(&NewWifiPacket);
 19442  002B88  0E5A               	movlw	low _NewWifiPacket
 19443  002B8A  0100               	movlb	0	; () banked
 19444  002B8C  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19445  002B8E  0E00               	movlw	high _NewWifiPacket
 19446  002B90  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19447  002B92  EC00  F027         	call	_GenerateEvt	;wreg free
 19448                           
 19449                           ;mdm_wifi.c: 187: GenerateEvt(&NewWifiPacketParser);
 19450  002B96  0E59               	movlw	low _NewWifiPacketParser
 19451  002B98  0100               	movlb	0	; () banked
 19452  002B9A  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19453  002B9C  0E00               	movlw	high _NewWifiPacketParser
 19454  002B9E  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19455  002BA0  EC00  F027         	call	_GenerateEvt	;wreg free
 19456                           
 19457                           ;mdm_wifi.c: 189: WifiUartGetDataState = WifiMdmUart_RxIdle;
 19458  002BA4  0E00               	movlw	0
 19459  002BA6  0101               	movlb	1	; () banked
 19460  002BA8  6F6C               	movwf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),b
 19461                           
 19462                           ; BSR set to: 1
 19463                           ;mdm_wifi.c: 196: }
 19464                           
 19465                           ; BSR set to: 1
 19466                           ;mdm_wifi.c: 195: break;
 19467                           
 19468                           ;mdm_wifi.c: 194: default:
 19469                           
 19470                           ; BSR set to: 1
 19471                           ;mdm_wifi.c: 190: }
 19472                           ;mdm_wifi.c: 191: }
 19473                           ;mdm_wifi.c: 192: break;
 19474                           
 19475                           ; BSR set to: 1
 19476  002BAA  0012               	return	
 19477  002BAC                     l864:
 19478                           
 19479                           ; BSR set to: 1
 19480  002BAC  0101               	movlb	1	; () banked
 19481  002BAE  516C               	movf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),w,b
 19482                           
 19483                           ; Switch size 1, requested type "space"
 19484                           ; Number of cases is 2, Range of values is 0 to 1
 19485                           ; switch strategies available:
 19486                           ; Name         Instructions Cycles
 19487                           ; simple_byte            7     4 (average)
 19488                           ;	Chosen strategy is simple_byte
 19489  002BB0  0A00               	xorlw	0	; case 0
 19490  002BB2  B4D8               	btfsc	status,2,c
 19491  002BB4  D79C               	goto	l865
 19492  002BB6  0A01               	xorlw	1	; case 1
 19493  002BB8  A4D8               	btfss	status,2,c
 19494  002BBA  0012               	return	
 19495  002BBC  D7A6               	goto	l868
 19496  002BBE                     __end_of_MdmWifiGetUartData:
 19497                           	opt stack 0
 19498                           tosu	equ	0xFFF
 19499                           tosh	equ	0xFFE
 19500                           tosl	equ	0xFFD
 19501                           pclath	equ	0xFFA
 19502                           tblptru	equ	0xFF8
 19503                           tblptrh	equ	0xFF7
 19504                           tblptrl	equ	0xFF6
 19505                           tablat	equ	0xFF5
 19506                           prodh	equ	0xFF4
 19507                           prodl	equ	0xFF3
 19508                           intcon	equ	0xFF2
 19509                           intcon2	equ	0xFF1
 19510                           intcon3	equ	0xFF0
 19511                           indf0	equ	0xFEF
 19512                           postinc0	equ	0xFEE
 19513                           plusw0	equ	0xFEB
 19514                           fsr0h	equ	0xFEA
 19515                           fsr0l	equ	0xFE9
 19516                           wreg	equ	0xFE8
 19517                           indf1	equ	0xFE7
 19518                           postinc1	equ	0xFE6
 19519                           postdec1	equ	0xFE5
 19520                           fsr1h	equ	0xFE2
 19521                           fsr1l	equ	0xFE1
 19522                           indf2	equ	0xFDF
 19523                           postinc2	equ	0xFDE
 19524                           postdec2	equ	0xFDD
 19525                           plusw2	equ	0xFDB
 19526                           fsr2h	equ	0xFDA
 19527                           fsr2l	equ	0xFD9
 19528                           status	equ	0xFD8
 19529                           
 19530 ;; *************** function _MdmWifiEvtParser *****************
 19531 ;; Defined at:
 19532 ;;		line 207 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19533 ;; Parameters:    Size  Location     Type
 19534 ;;		None
 19535 ;; Auto vars:     Size  Location     Type
 19536 ;;		None
 19537 ;; Return value:  Size  Location     Type
 19538 ;;                  1    wreg      void 
 19539 ;; Registers used:
 19540 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19541 ;; Tracked objects:
 19542 ;;		On entry : 0/0
 19543 ;;		On exit  : 0/0
 19544 ;;		Unchanged: 0/0
 19545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19550 ;;Total ram usage:        0 bytes
 19551 ;; Hardware stack levels used:    1
 19552 ;; Hardware stack levels required when called:   13
 19553 ;; This function calls:
 19554 ;;		_GenerateEvt
 19555 ;;		_ReceiveEvt
 19556 ;;		_strstr
 19557 ;; This function is called by:
 19558 ;;		_MdmWifi_MainTask
 19559 ;; This function uses a non-reentrant model
 19560 ;;
 19561                           
 19562                           	psect	text88
 19563  003E38                     __ptext88:
 19564                           	opt stack 0
 19565  003E38                     _MdmWifiEvtParser:
 19566                           	opt stack 14
 19567                           
 19568                           ;mdm_wifi.c: 210: if (ReceiveEvt(&NewWifiPacketParser))
 19569                           
 19570                           ;incstack = 0
 19571  003E38  0E59               	movlw	low _NewWifiPacketParser
 19572  003E3A  0100               	movlb	0	; () banked
 19573  003E3C  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19574  003E3E  0E00               	movlw	high _NewWifiPacketParser
 19575  003E40  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19576  003E42  EC61  F025         	call	_ReceiveEvt	;wreg free
 19577  003E46  0900               	iorlw	0
 19578  003E48  B4D8               	btfsc	status,2,c
 19579  003E4A  0012               	return	
 19580                           
 19581                           ;mdm_wifi.c: 211: {
 19582                           ;mdm_wifi.c: 213: if (strstr(WifiRxPacket.RxBuffer,(void*)"ERROR") != (0))
 19583  003E4C  0E00               	movlw	low _WifiRxPacket
 19584  003E4E  0100               	movlb	0	; () banked
 19585  003E50  6F6F               	movwf	strstr@s1& (0+255),b
 19586  003E52  0E07               	movlw	high _WifiRxPacket
 19587  003E54  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19588  003E56  0ECF               	movlw	low STR_1
 19589  003E58  6F71               	movwf	strstr@s2& (0+255),b
 19590  003E5A  0EFF               	movlw	high STR_1
 19591  003E5C  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19592  003E5E  EC60  F01D         	call	_strstr	;wreg free
 19593  003E62  0100               	movlb	0	; () banked
 19594  003E64  516F               	movf	?_strstr& (0+255),w,b
 19595  003E66  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19596  003E68  B4D8               	btfsc	status,2,c
 19597  003E6A  D007               	goto	l877
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;mdm_wifi.c: 214: {
 19601                           ;mdm_wifi.c: 216: GenerateEvt(&WifiGenericError);
 19602  003E6C  0EC5               	movlw	low _WifiGenericError
 19603  003E6E  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19604  003E70  0E01               	movlw	high _WifiGenericError
 19605  003E72  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19606  003E74  EC00  F027         	call	_GenerateEvt	;wreg free
 19607                           
 19608                           ;mdm_wifi.c: 217: }
 19609  003E78  0012               	return	
 19610  003E7A                     l877:
 19611                           
 19612                           ;mdm_wifi.c: 219: else if (strstr(WifiRxPacket.RxBuffer,(void*)"+IPD") != (0))
 19613  003E7A  0E00               	movlw	low _WifiRxPacket
 19614  003E7C  0100               	movlb	0	; () banked
 19615  003E7E  6F6F               	movwf	strstr@s1& (0+255),b
 19616  003E80  0E07               	movlw	high _WifiRxPacket
 19617  003E82  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19618  003E84  0ED5               	movlw	low STR_2
 19619  003E86  6F71               	movwf	strstr@s2& (0+255),b
 19620  003E88  0EFF               	movlw	high STR_2
 19621  003E8A  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19622  003E8C  EC60  F01D         	call	_strstr	;wreg free
 19623  003E90  0100               	movlb	0	; () banked
 19624  003E92  516F               	movf	?_strstr& (0+255),w,b
 19625  003E94  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19626  003E96  B4D8               	btfsc	status,2,c
 19627  003E98  0012               	return	
 19628                           
 19629                           ; BSR set to: 0
 19630                           ;mdm_wifi.c: 220: {
 19631                           ;mdm_wifi.c: 222: GenerateEvt(&WifiReceiveNetData);
 19632  003E9A  0E58               	movlw	low _WifiReceiveNetData
 19633  003E9C  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19634  003E9E  0E00               	movlw	high _WifiReceiveNetData
 19635  003EA0  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19636  003EA2  EC00  F027         	call	_GenerateEvt	;wreg free
 19637                           
 19638                           ;mdm_wifi.c: 224: else
 19639                           ;mdm_wifi.c: 225: {
 19640                           
 19641                           ;mdm_wifi.c: 223: }
 19642  003EA6  0012               	return	
 19643  003EA8                     __end_of_MdmWifiEvtParser:
 19644                           	opt stack 0
 19645                           tosu	equ	0xFFF
 19646                           tosh	equ	0xFFE
 19647                           tosl	equ	0xFFD
 19648                           pclath	equ	0xFFA
 19649                           tblptru	equ	0xFF8
 19650                           tblptrh	equ	0xFF7
 19651                           tblptrl	equ	0xFF6
 19652                           tablat	equ	0xFF5
 19653                           prodh	equ	0xFF4
 19654                           prodl	equ	0xFF3
 19655                           intcon	equ	0xFF2
 19656                           intcon2	equ	0xFF1
 19657                           intcon3	equ	0xFF0
 19658                           indf0	equ	0xFEF
 19659                           postinc0	equ	0xFEE
 19660                           plusw0	equ	0xFEB
 19661                           fsr0h	equ	0xFEA
 19662                           fsr0l	equ	0xFE9
 19663                           wreg	equ	0xFE8
 19664                           indf1	equ	0xFE7
 19665                           postinc1	equ	0xFE6
 19666                           postdec1	equ	0xFE5
 19667                           fsr1h	equ	0xFE2
 19668                           fsr1l	equ	0xFE1
 19669                           indf2	equ	0xFDF
 19670                           postinc2	equ	0xFDE
 19671                           postdec2	equ	0xFDD
 19672                           plusw2	equ	0xFDB
 19673                           fsr2h	equ	0xFDA
 19674                           fsr2l	equ	0xFD9
 19675                           status	equ	0xFD8
 19676                           
 19677 ;; *************** function _MdmWifi_StartWifiModemSm *****************
 19678 ;; Defined at:
 19679 ;;		line 84 in file "../Source/c/01_Hal/02_Drv/mdm_wifi_drv.c"
 19680 ;; Parameters:    Size  Location     Type
 19681 ;;		None
 19682 ;; Auto vars:     Size  Location     Type
 19683 ;;		None
 19684 ;; Return value:  Size  Location     Type
 19685 ;;                  1    wreg      void 
 19686 ;; Registers used:
 19687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19688 ;; Tracked objects:
 19689 ;;		On entry : 0/0
 19690 ;;		On exit  : 0/0
 19691 ;;		Unchanged: 0/0
 19692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19697 ;;Total ram usage:        0 bytes
 19698 ;; Hardware stack levels used:    1
 19699 ;; Hardware stack levels required when called:   12
 19700 ;; This function calls:
 19701 ;;		_GenerateEvt
 19702 ;;		_ReceiveEvt
 19703 ;; This function is called by:
 19704 ;;		_MdmWifi_DrvMainFn
 19705 ;; This function uses a non-reentrant model
 19706 ;;
 19707                           
 19708                           	psect	text89
 19709  003BD0                     __ptext89:
 19710                           	opt stack 0
 19711  003BD0                     _MdmWifi_StartWifiModemSm:
 19712                           	opt stack 15
 19713                           
 19714                           ;mdm_wifi_drv.c: 86: static WifiModeSmStateType WifiModeSmState = WifiMdm_Autostart;
 19715                           ;mdm_wifi_drv.c: 87: static UINT16 Counter = 0;
 19716                           ;mdm_wifi_drv.c: 89: switch (WifiModeSmState)
 19717                           
 19718                           ;incstack = 0
 19719  003BD0  D033               	goto	l647
 19720  003BD2                     l648:
 19721                           
 19722                           ; BSR set to: 1
 19723                           ;mdm_wifi_drv.c: 93: TRISEbits.TRISE0 = ((UINT8)(0));
 19724  003BD2  9096               	bcf	3990,0,c	;volatile
 19725                           
 19726                           ;mdm_wifi_drv.c: 95: LATEbits.LATE0 = ((UINT8)(0));
 19727  003BD4  908D               	bcf	3981,0,c	;volatile
 19728                           
 19729                           ; BSR set to: 1
 19730                           ;mdm_wifi_drv.c: 97: GenerateEvt(&StartWifiModem);
 19731  003BD6  0E5B               	movlw	low _StartWifiModem
 19732  003BD8  0100               	movlb	0	; () banked
 19733  003BDA  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19734  003BDC  0E00               	movlw	high _StartWifiModem
 19735  003BDE  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19736  003BE0  EC00  F027         	call	_GenerateEvt	;wreg free
 19737                           
 19738                           ;mdm_wifi_drv.c: 99: WifiModeSmState = WifiMdm_Idle;
 19739  003BE4  0E01               	movlw	1
 19740  003BE6  0101               	movlb	1	; () banked
 19741  003BE8  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19742                           
 19743                           ;mdm_wifi_drv.c: 100: break;
 19744  003BEA  0012               	return	
 19745  003BEC                     
 19746                           ; BSR set to: 1
 19747                           ;mdm_wifi_drv.c: 104: if (ReceiveEvt(&StartWifiModem))
 19748                           
 19749                           ; BSR set to: 1
 19750  003BEC  0E5B               	movlw	low _StartWifiModem
 19751  003BEE  0100               	movlb	0	; () banked
 19752  003BF0  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19753  003BF2  0E00               	movlw	high _StartWifiModem
 19754  003BF4  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19755  003BF6  EC61  F025         	call	_ReceiveEvt	;wreg free
 19756  003BFA  0900               	iorlw	0
 19757  003BFC  B4D8               	btfsc	status,2,c
 19758  003BFE  0012               	return	
 19759                           
 19760                           ;mdm_wifi_drv.c: 105: {
 19761                           ;mdm_wifi_drv.c: 107: LATEbits.LATE0 = ((UINT8)(0));
 19762  003C00  908D               	bcf	3981,0,c	;volatile
 19763                           
 19764                           ;mdm_wifi_drv.c: 109: WifiMdmStatus = ((UINT8)(1));
 19765  003C02  0E01               	movlw	1
 19766  003C04  0101               	movlb	1	; () banked
 19767  003C06  6F6E               	movwf	_WifiMdmStatus& (0+255),b
 19768                           
 19769                           ;mdm_wifi_drv.c: 111: WifiModeSmState = WifiMdm_Delay;
 19770  003C08  0E03               	movlw	3
 19771  003C0A  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19772                           
 19773                           ; BSR set to: 1
 19774                           ;mdm_wifi_drv.c: 112: }
 19775                           ;mdm_wifi_drv.c: 113: break;
 19776  003C0C  0012               	return	
 19777  003C0E                     
 19778                           ; BSR set to: 1
 19779                           ;mdm_wifi_drv.c: 117: Counter++;
 19780                           
 19781                           ; BSR set to: 1
 19782  003C0E  4B46               	infsnz	MdmWifi_StartWifiModemSm@Counter& (0+255),f,b
 19783  003C10  2B47               	incf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),f,b
 19784                           
 19785                           ; BSR set to: 1
 19786                           ;mdm_wifi_drv.c: 119: if (Counter >= (((UINT16)(200))/((UINT16)(10))))
 19787  003C12  5147               	movf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),w,b
 19788  003C14  E104               	bnz	u6990
 19789  003C16  0E14               	movlw	20
 19790  003C18  5D46               	subwf	MdmWifi_StartWifiModemSm@Counter& (0+255),w,b
 19791  003C1A  A0D8               	btfss	status,0,c
 19792  003C1C  0012               	return	
 19793  003C1E                     u6990:
 19794                           
 19795                           ; BSR set to: 1
 19796                           ;mdm_wifi_drv.c: 120: {
 19797                           ;mdm_wifi_drv.c: 122: Counter = 0;
 19798  003C1E  0E00               	movlw	0
 19799  003C20  6F47               	movwf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),b
 19800  003C22  0E00               	movlw	0
 19801  003C24  6F46               	movwf	MdmWifi_StartWifiModemSm@Counter& (0+255),b
 19802                           
 19803                           ;mdm_wifi_drv.c: 124: WifiModeSmState = WifiMdm_RestartMdm;
 19804  003C26  0E04               	movlw	4
 19805  003C28  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19806                           
 19807                           ; BSR set to: 1
 19808                           ;mdm_wifi_drv.c: 125: }
 19809                           ;mdm_wifi_drv.c: 126: break;
 19810  003C2A  0012               	return	
 19811  003C2C                     l654:
 19812                           
 19813                           ; BSR set to: 1
 19814                           ;mdm_wifi_drv.c: 130: LATEbits.LATE0 = ((UINT8)(1));
 19815  003C2C  808D               	bsf	3981,0,c	;volatile
 19816                           
 19817                           ; BSR set to: 1
 19818                           ;mdm_wifi_drv.c: 132: WifiMdmStatus = ((UINT8)(2));
 19819  003C2E  0E02               	movlw	2
 19820  003C30  6F6E               	movwf	_WifiMdmStatus& (0+255),b
 19821                           
 19822                           ;mdm_wifi_drv.c: 134: WifiModeSmState = WifiMdm_Idle;
 19823  003C32  0E01               	movlw	1
 19824  003C34  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19825                           
 19826                           ; BSR set to: 1
 19827                           ;mdm_wifi_drv.c: 139: }
 19828                           
 19829                           ; BSR set to: 1
 19830                           ;mdm_wifi_drv.c: 138: break;
 19831                           
 19832                           ;mdm_wifi_drv.c: 137: default:
 19833                           
 19834                           ;mdm_wifi_drv.c: 135: break;
 19835  003C36  0012               	return	
 19836  003C38                     l647:
 19837                           
 19838                           ; BSR set to: 1
 19839  003C38  0101               	movlb	1	; () banked
 19840  003C3A  516D               	movf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),w,b
 19841                           
 19842                           ; Switch size 1, requested type "space"
 19843                           ; Number of cases is 4, Range of values is 0 to 4
 19844                           ; switch strategies available:
 19845                           ; Name         Instructions Cycles
 19846                           ; simple_byte           13     7 (average)
 19847                           ;	Chosen strategy is simple_byte
 19848  003C3C  0A00               	xorlw	0	; case 0
 19849  003C3E  B4D8               	btfsc	status,2,c
 19850  003C40  D7C8               	goto	l648
 19851  003C42  0A01               	xorlw	1	; case 1
 19852  003C44  B4D8               	btfsc	status,2,c
 19853  003C46  D7D2               	goto	l650
 19854  003C48  0A02               	xorlw	2	; case 3
 19855  003C4A  B4D8               	btfsc	status,2,c
 19856  003C4C  D7E0               	goto	l652
 19857  003C4E  0A07               	xorlw	7	; case 4
 19858  003C50  A4D8               	btfss	status,2,c
 19859  003C52  0012               	return	
 19860  003C54  D7EB               	goto	l654
 19861  003C56                     __end_of_MdmWifi_StartWifiModemSm:
 19862                           	opt stack 0
 19863                           tosu	equ	0xFFF
 19864                           tosh	equ	0xFFE
 19865                           tosl	equ	0xFFD
 19866                           pclath	equ	0xFFA
 19867                           tblptru	equ	0xFF8
 19868                           tblptrh	equ	0xFF7
 19869                           tblptrl	equ	0xFF6
 19870                           tablat	equ	0xFF5
 19871                           prodh	equ	0xFF4
 19872                           prodl	equ	0xFF3
 19873                           intcon	equ	0xFF2
 19874                           intcon2	equ	0xFF1
 19875                           intcon3	equ	0xFF0
 19876                           indf0	equ	0xFEF
 19877                           postinc0	equ	0xFEE
 19878                           plusw0	equ	0xFEB
 19879                           fsr0h	equ	0xFEA
 19880                           fsr0l	equ	0xFE9
 19881                           wreg	equ	0xFE8
 19882                           indf1	equ	0xFE7
 19883                           postinc1	equ	0xFE6
 19884                           postdec1	equ	0xFE5
 19885                           fsr1h	equ	0xFE2
 19886                           fsr1l	equ	0xFE1
 19887                           indf2	equ	0xFDF
 19888                           postinc2	equ	0xFDE
 19889                           postdec2	equ	0xFDD
 19890                           plusw2	equ	0xFDB
 19891                           fsr2h	equ	0xFDA
 19892                           fsr2l	equ	0xFD9
 19893                           status	equ	0xFD8
 19894                           
 19895 ;; *************** function _StartConnectionSm *****************
 19896 ;; Defined at:
 19897 ;;		line 104 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 19898 ;; Parameters:    Size  Location     Type
 19899 ;;		None
 19900 ;; Auto vars:     Size  Location     Type
 19901 ;;  Data          100   19[BANK0 ] unsigned char [100]
 19902 ;;  PortAscii       4  119[BANK0 ] unsigned char [4]
 19903 ;;  IdAscii         1  124[BANK0 ] unsigned char [1]
 19904 ;;  DataIndex       1  123[BANK0 ] unsigned char 
 19905 ;; Return value:  Size  Location     Type
 19906 ;;                  1    wreg      void 
 19907 ;; Registers used:
 19908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19909 ;; Tracked objects:
 19910 ;;		On entry : 0/0
 19911 ;;		On exit  : 0/0
 19912 ;;		Unchanged: 0/0
 19913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19915 ;;      Locals:         0     106       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19917 ;;      Totals:         0     106       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19918 ;;Total ram usage:      106 bytes
 19919 ;; Hardware stack levels used:    1
 19920 ;; Hardware stack levels required when called:   14
 19921 ;; This function calls:
 19922 ;;		_ClearBuffer
 19923 ;;		_MdmWifi_ReceiveWifiMsg
 19924 ;;		_MdmWifi_SendWifiMsg
 19925 ;;		_ReceiveEvt
 19926 ;;		_strcat
 19927 ;;		_strcpy
 19928 ;;		_strstr
 19929 ;;		_utoa
 19930 ;; This function is called by:
 19931 ;;		_MdmWifiCmd_MainTask
 19932 ;; This function uses a non-reentrant model
 19933 ;;
 19934                           
 19935                           	psect	text90
 19936  000BCA                     __ptext90:
 19937                           	opt stack 0
 19938  000BCA                     _StartConnectionSm:
 19939                           	opt stack 13
 19940                           
 19941                           ;mdm_wifi_cmd.c: 106: static StartConnStateType StartConnState = StCon_WaitEvt;
 19942                           ;mdm_wifi_cmd.c: 107: UINT8 Data[((UINT8)(100))];
 19943                           ;mdm_wifi_cmd.c: 108: UINT8 DataIndex;
 19944                           ;mdm_wifi_cmd.c: 109: UINT8 PortAscii[4];
 19945                           ;mdm_wifi_cmd.c: 110: UINT8 IdAscii[1];
 19946                           ;mdm_wifi_cmd.c: 112: switch (StartConnState)
 19947                           
 19948                           ;incstack = 0
 19949  000BCA  D15E               	goto	l974
 19950  000BCC                     
 19951                           ;mdm_wifi_cmd.c: 116: if (ReceiveEvt(&StartConnection))
 19952  000BCC  0E57               	movlw	low _StartConnection
 19953  000BCE  0100               	movlb	0	; () banked
 19954  000BD0  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19955  000BD2  0E00               	movlw	high _StartConnection
 19956  000BD4  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19957  000BD6  EC61  F025         	call	_ReceiveEvt	;wreg free
 19958  000BDA  0900               	iorlw	0
 19959  000BDC  B4D8               	btfsc	status,2,c
 19960  000BDE  0012               	return	
 19961                           
 19962                           ;mdm_wifi_cmd.c: 117: {
 19963                           ;mdm_wifi_cmd.c: 118: StartConnState = StCon_SendStartCmd;
 19964  000BE0  0E01               	movlw	1
 19965  000BE2  0101               	movlb	1	; () banked
 19966  000BE4  6F67               	movwf	StartConnectionSm@StartConnState& (0+255),b
 19967                           
 19968                           ; BSR set to: 1
 19969                           ;mdm_wifi_cmd.c: 119: }
 19970                           ;mdm_wifi_cmd.c: 120: break;
 19971  000BE6  0012               	return	
 19972  000BE8                     
 19973                           ; BSR set to: 1
 19974                           ;mdm_wifi_cmd.c: 124: strcpy(Data,"AT+CIPSTART=");
 19975                           
 19976                           ; BSR set to: 1
 19977  000BE8  0E73               	movlw	low StartConnectionSm@Data
 19978  000BEA  0100               	movlb	0	; () banked
 19979  000BEC  6F60               	movwf	strcpy@to& (0+255),b
 19980  000BEE  0E00               	movlw	high StartConnectionSm@Data
 19981  000BF0  6F61               	movwf	(strcpy@to+1)& (0+255),b
 19982  000BF2  0E4E               	movlw	low STR_3
 19983  000BF4  6F62               	movwf	strcpy@from& (0+255),b
 19984  000BF6  0EFF               	movlw	high STR_3
 19985  000BF8  6F63               	movwf	(strcpy@from+1)& (0+255),b
 19986  000BFA  ECF9  F022         	call	_strcpy	;wreg free
 19987                           
 19988                           ;mdm_wifi_cmd.c: 126: if (ModeLocal == ((UINT8)(1)))
 19989  000BFE  0451               	decf	_ModeLocal,w,c
 19990  000C00  A4D8               	btfss	status,2,c
 19991  000C02  D02E               	goto	l979
 19992                           
 19993                           ;mdm_wifi_cmd.c: 127: {
 19994                           ;mdm_wifi_cmd.c: 128: utoa(IdAscii,IdLocal,10);
 19995  000C04  0EDC               	movlw	low StartConnectionSm@IdAscii
 19996  000C06  0100               	movlb	0	; () banked
 19997  000C08  6F67               	movwf	utoa@buf& (0+255),b
 19998  000C0A  0E00               	movlw	high StartConnectionSm@IdAscii
 19999  000C0C  6F68               	movwf	(utoa@buf+1)& (0+255),b
 20000  000C0E  C050  F069         	movff	_IdLocal,utoa@val
 20001  000C12  6B6A               	clrf	(utoa@val+1)& (0+255),b
 20002  000C14  0E00               	movlw	0
 20003  000C16  6F6C               	movwf	(utoa@base+1)& (0+255),b
 20004  000C18  0E0A               	movlw	10
 20005  000C1A  6F6B               	movwf	utoa@base& (0+255),b
 20006  000C1C  EC8E  F019         	call	_utoa	;wreg free
 20007                           
 20008                           ;mdm_wifi_cmd.c: 129: strcat(Data,IdAscii);
 20009  000C20  0E73               	movlw	low StartConnectionSm@Data
 20010  000C22  0100               	movlb	0	; () banked
 20011  000C24  6F60               	movwf	strcat@to& (0+255),b
 20012  000C26  0E00               	movlw	high StartConnectionSm@Data
 20013  000C28  6F61               	movwf	(strcat@to+1)& (0+255),b
 20014  000C2A  0EDC               	movlw	low StartConnectionSm@IdAscii
 20015  000C2C  6F62               	movwf	strcat@from& (0+255),b
 20016  000C2E  0E00               	movlw	high StartConnectionSm@IdAscii
 20017  000C30  6F63               	movwf	(strcat@from+1)& (0+255),b
 20018  000C32  5162               	movf	strcat@from& (0+255),w,b
 20019  000C34  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20020  000C36  A4D8               	btfss	status,2,c
 20021  000C38  0E20               	movlw	32
 20022  000C3A  6F64               	movwf	(strcat@from+2)& (0+255),b
 20023  000C3C  EC29  F020         	call	_strcat	;wreg free
 20024                           
 20025                           ;mdm_wifi_cmd.c: 130: strcat(Data,",");
 20026  000C40  0E73               	movlw	low StartConnectionSm@Data
 20027  000C42  0100               	movlb	0	; () banked
 20028  000C44  6F60               	movwf	strcat@to& (0+255),b
 20029  000C46  0E00               	movlw	high StartConnectionSm@Data
 20030  000C48  6F61               	movwf	(strcat@to+1)& (0+255),b
 20031  000C4A  0EE7               	movlw	low (STR_46+1)
 20032  000C4C  6F62               	movwf	strcat@from& (0+255),b
 20033  000C4E  0EFF               	movlw	high (STR_46+1)
 20034  000C50  6F63               	movwf	(strcat@from+1)& (0+255),b
 20035  000C52  5162               	movf	strcat@from& (0+255),w,b
 20036  000C54  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20037  000C56  A4D8               	btfss	status,2,c
 20038  000C58  0E00               	movlw	low (__mediumconst shr (0+16))
 20039  000C5A  6F64               	movwf	(strcat@from+2)& (0+255),b
 20040  000C5C  EC29  F020         	call	_strcat	;wreg free
 20041  000C60                     l979:
 20042                           
 20043                           ;mdm_wifi_cmd.c: 131: }
 20044                           ;mdm_wifi_cmd.c: 132: strcat(Data,"\"");
 20045  000C60  0E73               	movlw	low StartConnectionSm@Data
 20046  000C62  0100               	movlb	0	; () banked
 20047  000C64  6F60               	movwf	strcat@to& (0+255),b
 20048  000C66  0E00               	movlw	high StartConnectionSm@Data
 20049  000C68  6F61               	movwf	(strcat@to+1)& (0+255),b
 20050  000C6A  0EDC               	movlw	low (STR_28+2)
 20051  000C6C  6F62               	movwf	strcat@from& (0+255),b
 20052  000C6E  0EFF               	movlw	high (STR_28+2)
 20053  000C70  6F63               	movwf	(strcat@from+1)& (0+255),b
 20054  000C72  5162               	movf	strcat@from& (0+255),w,b
 20055  000C74  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20056  000C76  A4D8               	btfss	status,2,c
 20057  000C78  0E00               	movlw	low (__mediumconst shr (0+16))
 20058  000C7A  6F64               	movwf	(strcat@from+2)& (0+255),b
 20059  000C7C  EC29  F020         	call	_strcat	;wreg free
 20060                           
 20061                           ;mdm_wifi_cmd.c: 134: if (ProtocolLocal == ((UINT8)(0)))
 20062  000C80  0101               	movlb	1	; () banked
 20063  000C82  516A               	movf	_ProtocolLocal& (0+255),w,b
 20064  000C84  A4D8               	btfss	status,2,c
 20065  000C86  D011               	goto	l980
 20066                           
 20067                           ; BSR set to: 1
 20068                           ;mdm_wifi_cmd.c: 135: {
 20069                           ;mdm_wifi_cmd.c: 136: strcat(Data,"UDP");
 20070  000C88  0E73               	movlw	low StartConnectionSm@Data
 20071  000C8A  0100               	movlb	0	; () banked
 20072  000C8C  6F60               	movwf	strcat@to& (0+255),b
 20073  000C8E  0E00               	movlw	high StartConnectionSm@Data
 20074  000C90  6F61               	movwf	(strcat@to+1)& (0+255),b
 20075  000C92  0EE2               	movlw	low STR_6
 20076  000C94  6F62               	movwf	strcat@from& (0+255),b
 20077  000C96  0EFF               	movlw	high STR_6
 20078  000C98  6F63               	movwf	(strcat@from+1)& (0+255),b
 20079  000C9A  5162               	movf	strcat@from& (0+255),w,b
 20080  000C9C  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20081  000C9E  A4D8               	btfss	status,2,c
 20082  000CA0  0E00               	movlw	low (__mediumconst shr (0+16))
 20083  000CA2  6F64               	movwf	(strcat@from+2)& (0+255),b
 20084  000CA4  EC29  F020         	call	_strcat	;wreg free
 20085                           
 20086                           ;mdm_wifi_cmd.c: 137: }
 20087  000CA8  D010               	goto	l981
 20088  000CAA                     l980:
 20089                           
 20090                           ;mdm_wifi_cmd.c: 138: else
 20091                           ;mdm_wifi_cmd.c: 139: {
 20092                           ;mdm_wifi_cmd.c: 140: strcat(Data,"TCP");
 20093  000CAA  0E73               	movlw	low StartConnectionSm@Data
 20094  000CAC  0100               	movlb	0	; () banked
 20095  000CAE  6F60               	movwf	strcat@to& (0+255),b
 20096  000CB0  0E00               	movlw	high StartConnectionSm@Data
 20097  000CB2  6F61               	movwf	(strcat@to+1)& (0+255),b
 20098  000CB4  0EDE               	movlw	low STR_7
 20099  000CB6  6F62               	movwf	strcat@from& (0+255),b
 20100  000CB8  0EFF               	movlw	high STR_7
 20101  000CBA  6F63               	movwf	(strcat@from+1)& (0+255),b
 20102  000CBC  5162               	movf	strcat@from& (0+255),w,b
 20103  000CBE  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20104  000CC0  A4D8               	btfss	status,2,c
 20105  000CC2  0E00               	movlw	low (__mediumconst shr (0+16))
 20106  000CC4  6F64               	movwf	(strcat@from+2)& (0+255),b
 20107  000CC6  EC29  F020         	call	_strcat	;wreg free
 20108  000CCA                     l981:
 20109                           
 20110                           ;mdm_wifi_cmd.c: 141: }
 20111                           ;mdm_wifi_cmd.c: 142: strcat(Data,"\"");
 20112  000CCA  0E73               	movlw	low StartConnectionSm@Data
 20113  000CCC  0100               	movlb	0	; () banked
 20114  000CCE  6F60               	movwf	strcat@to& (0+255),b
 20115  000CD0  0E00               	movlw	high StartConnectionSm@Data
 20116  000CD2  6F61               	movwf	(strcat@to+1)& (0+255),b
 20117  000CD4  0EDC               	movlw	low (STR_28+2)
 20118  000CD6  6F62               	movwf	strcat@from& (0+255),b
 20119  000CD8  0EFF               	movlw	high (STR_28+2)
 20120  000CDA  6F63               	movwf	(strcat@from+1)& (0+255),b
 20121  000CDC  5162               	movf	strcat@from& (0+255),w,b
 20122  000CDE  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20123  000CE0  A4D8               	btfss	status,2,c
 20124  000CE2  0E00               	movlw	low (__mediumconst shr (0+16))
 20125  000CE4  6F64               	movwf	(strcat@from+2)& (0+255),b
 20126  000CE6  EC29  F020         	call	_strcat	;wreg free
 20127                           
 20128                           ;mdm_wifi_cmd.c: 143: strcat(Data,",");
 20129  000CEA  0E73               	movlw	low StartConnectionSm@Data
 20130  000CEC  0100               	movlb	0	; () banked
 20131  000CEE  6F60               	movwf	strcat@to& (0+255),b
 20132  000CF0  0E00               	movlw	high StartConnectionSm@Data
 20133  000CF2  6F61               	movwf	(strcat@to+1)& (0+255),b
 20134  000CF4  0EE7               	movlw	low (STR_46+1)
 20135  000CF6  6F62               	movwf	strcat@from& (0+255),b
 20136  000CF8  0EFF               	movlw	high (STR_46+1)
 20137  000CFA  6F63               	movwf	(strcat@from+1)& (0+255),b
 20138  000CFC  5162               	movf	strcat@from& (0+255),w,b
 20139  000CFE  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20140  000D00  A4D8               	btfss	status,2,c
 20141  000D02  0E00               	movlw	low (__mediumconst shr (0+16))
 20142  000D04  6F64               	movwf	(strcat@from+2)& (0+255),b
 20143  000D06  EC29  F020         	call	_strcat	;wreg free
 20144                           
 20145                           ;mdm_wifi_cmd.c: 144: strcat(Data,"\"");
 20146  000D0A  0E73               	movlw	low StartConnectionSm@Data
 20147  000D0C  0100               	movlb	0	; () banked
 20148  000D0E  6F60               	movwf	strcat@to& (0+255),b
 20149  000D10  0E00               	movlw	high StartConnectionSm@Data
 20150  000D12  6F61               	movwf	(strcat@to+1)& (0+255),b
 20151  000D14  0EDC               	movlw	low (STR_28+2)
 20152  000D16  6F62               	movwf	strcat@from& (0+255),b
 20153  000D18  0EFF               	movlw	high (STR_28+2)
 20154  000D1A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20155  000D1C  5162               	movf	strcat@from& (0+255),w,b
 20156  000D1E  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20157  000D20  A4D8               	btfss	status,2,c
 20158  000D22  0E00               	movlw	low (__mediumconst shr (0+16))
 20159  000D24  6F64               	movwf	(strcat@from+2)& (0+255),b
 20160  000D26  EC29  F020         	call	_strcat	;wreg free
 20161                           
 20162                           ;mdm_wifi_cmd.c: 145: strcat(Data,AddressLocal);
 20163  000D2A  0E73               	movlw	low StartConnectionSm@Data
 20164  000D2C  0100               	movlb	0	; () banked
 20165  000D2E  6F60               	movwf	strcat@to& (0+255),b
 20166  000D30  0E00               	movlw	high StartConnectionSm@Data
 20167  000D32  6F61               	movwf	(strcat@to+1)& (0+255),b
 20168  000D34  0E72               	movlw	low _AddressLocal
 20169  000D36  6F62               	movwf	strcat@from& (0+255),b
 20170  000D38  0E02               	movlw	high _AddressLocal
 20171  000D3A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20172  000D3C  5162               	movf	strcat@from& (0+255),w,b
 20173  000D3E  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20174  000D40  A4D8               	btfss	status,2,c
 20175  000D42  0E20               	movlw	32
 20176  000D44  6F64               	movwf	(strcat@from+2)& (0+255),b
 20177  000D46  EC29  F020         	call	_strcat	;wreg free
 20178                           
 20179                           ;mdm_wifi_cmd.c: 146: strcat(Data,"\"");
 20180  000D4A  0E73               	movlw	low StartConnectionSm@Data
 20181  000D4C  0100               	movlb	0	; () banked
 20182  000D4E  6F60               	movwf	strcat@to& (0+255),b
 20183  000D50  0E00               	movlw	high StartConnectionSm@Data
 20184  000D52  6F61               	movwf	(strcat@to+1)& (0+255),b
 20185  000D54  0EDC               	movlw	low (STR_28+2)
 20186  000D56  6F62               	movwf	strcat@from& (0+255),b
 20187  000D58  0EFF               	movlw	high (STR_28+2)
 20188  000D5A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20189  000D5C  5162               	movf	strcat@from& (0+255),w,b
 20190  000D5E  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20191  000D60  A4D8               	btfss	status,2,c
 20192  000D62  0E00               	movlw	low (__mediumconst shr (0+16))
 20193  000D64  6F64               	movwf	(strcat@from+2)& (0+255),b
 20194  000D66  EC29  F020         	call	_strcat	;wreg free
 20195                           
 20196                           ;mdm_wifi_cmd.c: 148: utoa(PortAscii,PortLocal,10);
 20197  000D6A  0ED7               	movlw	low StartConnectionSm@PortAscii
 20198  000D6C  0100               	movlb	0	; () banked
 20199  000D6E  6F67               	movwf	utoa@buf& (0+255),b
 20200  000D70  0E00               	movlw	high StartConnectionSm@PortAscii
 20201  000D72  6F68               	movwf	(utoa@buf+1)& (0+255),b
 20202  000D74  C169  F069         	movff	_PortLocal,utoa@val
 20203  000D78  6B6A               	clrf	(utoa@val+1)& (0+255),b
 20204  000D7A  0E00               	movlw	0
 20205  000D7C  6F6C               	movwf	(utoa@base+1)& (0+255),b
 20206  000D7E  0E0A               	movlw	10
 20207  000D80  6F6B               	movwf	utoa@base& (0+255),b
 20208  000D82  EC8E  F019         	call	_utoa	;wreg free
 20209                           
 20210                           ;mdm_wifi_cmd.c: 149: strcat(Data,",");
 20211  000D86  0E73               	movlw	low StartConnectionSm@Data
 20212  000D88  0100               	movlb	0	; () banked
 20213  000D8A  6F60               	movwf	strcat@to& (0+255),b
 20214  000D8C  0E00               	movlw	high StartConnectionSm@Data
 20215  000D8E  6F61               	movwf	(strcat@to+1)& (0+255),b
 20216  000D90  0EE7               	movlw	low (STR_46+1)
 20217  000D92  6F62               	movwf	strcat@from& (0+255),b
 20218  000D94  0EFF               	movlw	high (STR_46+1)
 20219  000D96  6F63               	movwf	(strcat@from+1)& (0+255),b
 20220  000D98  5162               	movf	strcat@from& (0+255),w,b
 20221  000D9A  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20222  000D9C  A4D8               	btfss	status,2,c
 20223  000D9E  0E00               	movlw	low (__mediumconst shr (0+16))
 20224  000DA0  6F64               	movwf	(strcat@from+2)& (0+255),b
 20225  000DA2  EC29  F020         	call	_strcat	;wreg free
 20226                           
 20227                           ;mdm_wifi_cmd.c: 150: strcat(Data,PortAscii);
 20228  000DA6  0E73               	movlw	low StartConnectionSm@Data
 20229  000DA8  0100               	movlb	0	; () banked
 20230  000DAA  6F60               	movwf	strcat@to& (0+255),b
 20231  000DAC  0E00               	movlw	high StartConnectionSm@Data
 20232  000DAE  6F61               	movwf	(strcat@to+1)& (0+255),b
 20233  000DB0  0ED7               	movlw	low StartConnectionSm@PortAscii
 20234  000DB2  6F62               	movwf	strcat@from& (0+255),b
 20235  000DB4  0E00               	movlw	high StartConnectionSm@PortAscii
 20236  000DB6  6F63               	movwf	(strcat@from+1)& (0+255),b
 20237  000DB8  5162               	movf	strcat@from& (0+255),w,b
 20238  000DBA  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20239  000DBC  A4D8               	btfss	status,2,c
 20240  000DBE  0E20               	movlw	32
 20241  000DC0  6F64               	movwf	(strcat@from+2)& (0+255),b
 20242  000DC2  EC29  F020         	call	_strcat	;wreg free
 20243                           
 20244                           ;mdm_wifi_cmd.c: 152: strcat(Data,"\r\n");
 20245  000DC6  0E73               	movlw	low StartConnectionSm@Data
 20246  000DC8  0100               	movlb	0	; () banked
 20247  000DCA  6F60               	movwf	strcat@to& (0+255),b
 20248  000DCC  0E00               	movlw	high StartConnectionSm@Data
 20249  000DCE  6F61               	movwf	(strcat@to+1)& (0+255),b
 20250  000DD0  0E87               	movlw	low (STR_31+8)
 20251  000DD2  6F62               	movwf	strcat@from& (0+255),b
 20252  000DD4  0EFF               	movlw	high (STR_31+8)
 20253  000DD6  6F63               	movwf	(strcat@from+1)& (0+255),b
 20254  000DD8  5162               	movf	strcat@from& (0+255),w,b
 20255  000DDA  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20256  000DDC  A4D8               	btfss	status,2,c
 20257  000DDE  0E00               	movlw	low (__mediumconst shr (0+16))
 20258  000DE0  6F64               	movwf	(strcat@from+2)& (0+255),b
 20259  000DE2  EC29  F020         	call	_strcat	;wreg free
 20260                           
 20261                           ;mdm_wifi_cmd.c: 153: strcat(Data,(0));
 20262  000DE6  0E73               	movlw	low StartConnectionSm@Data
 20263  000DE8  0100               	movlb	0	; () banked
 20264  000DEA  6F60               	movwf	strcat@to& (0+255),b
 20265  000DEC  0E00               	movlw	high StartConnectionSm@Data
 20266  000DEE  6F61               	movwf	(strcat@to+1)& (0+255),b
 20267  000DF0  0E00               	movlw	0
 20268  000DF2  6F62               	movwf	strcat@from& (0+255),b
 20269  000DF4  0E00               	movlw	0
 20270  000DF6  6F63               	movwf	(strcat@from+1)& (0+255),b
 20271  000DF8  0E00               	movlw	0
 20272  000DFA  6F64               	movwf	(strcat@from+2)& (0+255),b
 20273  000DFC  EC29  F020         	call	_strcat	;wreg free
 20274                           
 20275                           ;mdm_wifi_cmd.c: 155: MdmWifi_SendWifiMsg(Data);
 20276  000E00  0E73               	movlw	low StartConnectionSm@Data
 20277  000E02  0100               	movlb	0	; () banked
 20278  000E04  6F66               	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20279  000E06  0E00               	movlw	high StartConnectionSm@Data
 20280  000E08  6F67               	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20281  000E0A  EC63  F027         	call	_MdmWifi_SendWifiMsg	;wreg free
 20282                           
 20283                           ;mdm_wifi_cmd.c: 158: ClearBuffer(AddressLocal,sizeof(AddressLocal));
 20284  000E0E  0E72               	movlw	low _AddressLocal
 20285  000E10  0100               	movlb	0	; () banked
 20286  000E12  6F60               	movwf	ClearBuffer@Buffer& (0+255),b
 20287  000E14  0E02               	movlw	high _AddressLocal
 20288  000E16  6F61               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 20289  000E18  0E00               	movlw	0
 20290  000E1A  6F63               	movwf	(ClearBuffer@Len+1)& (0+255),b
 20291  000E1C  0E19               	movlw	25
 20292  000E1E  6F62               	movwf	ClearBuffer@Len& (0+255),b
 20293  000E20  EC9B  F024         	call	_ClearBuffer	;wreg free
 20294                           
 20295                           ;mdm_wifi_cmd.c: 161: StartConnState = StCon_CheckCmdRes;
 20296  000E24  0E02               	movlw	2
 20297  000E26  0101               	movlb	1	; () banked
 20298  000E28  6F67               	movwf	StartConnectionSm@StartConnState& (0+255),b
 20299                           
 20300                           ;mdm_wifi_cmd.c: 162: break;
 20301  000E2A  0012               	return	
 20302  000E2C                     
 20303                           ; BSR set to: 1
 20304                           ;mdm_wifi_cmd.c: 166: if (MdmWifi_ReceiveWifiMsg(Data,&DataIndex) == WifiMsg_Received)
 20305                           
 20306                           ; BSR set to: 1
 20307  000E2C  0E73               	movlw	low StartConnectionSm@Data
 20308  000E2E  0100               	movlb	0	; () banked
 20309  000E30  6F68               	movwf	MdmWifi_ReceiveWifiMsg@RxBuffer& (0+255),b
 20310  000E32  0E00               	movlw	high StartConnectionSm@Data
 20311  000E34  6F69               	movwf	(MdmWifi_ReceiveWifiMsg@RxBuffer+1)& (0+255),b
 20312  000E36  0EDB               	movlw	low StartConnectionSm@DataIndex
 20313  000E38  6F6A               	movwf	MdmWifi_ReceiveWifiMsg@DataLenght& (0+255),b
 20314  000E3A  0E00               	movlw	high StartConnectionSm@DataIndex
 20315  000E3C  6F6B               	movwf	(MdmWifi_ReceiveWifiMsg@DataLenght+1)& (0+255),b
 20316  000E3E  EC8B  F022         	call	_MdmWifi_ReceiveWifiMsg	;wreg free
 20317  000E42  06E8               	decf	wreg,f,c
 20318  000E44  A4D8               	btfss	status,2,c
 20319  000E46  0012               	return	
 20320                           
 20321                           ;mdm_wifi_cmd.c: 167: {
 20322                           ;mdm_wifi_cmd.c: 169: if ((Data[0] != 'A') && (Data[1] != 'T'))
 20323  000E48  0E41               	movlw	65
 20324  000E4A  0100               	movlb	0	; () banked
 20325  000E4C  1973               	xorwf	StartConnectionSm@Data& (0+255),w,b
 20326  000E4E  B4D8               	btfsc	status,2,c
 20327  000E50  0012               	return	
 20328                           
 20329                           ; BSR set to: 0
 20330  000E52  0E54               	movlw	84
 20331  000E54  1974               	xorwf	(StartConnectionSm@Data+1)& (0+255),w,b
 20332  000E56  B4D8               	btfsc	status,2,c
 20333  000E58  0012               	return	
 20334                           
 20335                           ; BSR set to: 0
 20336                           ;mdm_wifi_cmd.c: 170: {
 20337                           ;mdm_wifi_cmd.c: 172: if (strstr(Data,(void*)"CONNECT") != (0))
 20338  000E5A  0E73               	movlw	low StartConnectionSm@Data
 20339  000E5C  6F6F               	movwf	strstr@s1& (0+255),b
 20340  000E5E  0E00               	movlw	high StartConnectionSm@Data
 20341  000E60  6F70               	movwf	(strstr@s1+1)& (0+255),b
 20342  000E62  0EC7               	movlw	low STR_14
 20343  000E64  6F71               	movwf	strstr@s2& (0+255),b
 20344  000E66  0EFF               	movlw	high STR_14
 20345  000E68  6F72               	movwf	(strstr@s2+1)& (0+255),b
 20346  000E6A  EC60  F01D         	call	_strstr	;wreg free
 20347  000E6E  0100               	movlb	0	; () banked
 20348  000E70  516F               	movf	?_strstr& (0+255),w,b
 20349  000E72  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 20350  000E74  B4D8               	btfsc	status,2,c
 20351  000E76  D002               	goto	l985
 20352                           
 20353                           ; BSR set to: 0
 20354                           ;mdm_wifi_cmd.c: 173: {
 20355                           ;mdm_wifi_cmd.c: 174: ConnStatus = ((UINT8)(1));
 20356  000E78  0E01               	movlw	1
 20357  000E7A  D001               	goto	L24
 20358  000E7C                     l985:
 20359                           
 20360                           ;mdm_wifi_cmd.c: 176: else
 20361                           ;mdm_wifi_cmd.c: 177: {
 20362                           ;mdm_wifi_cmd.c: 178: ConnStatus = ((UINT8)(0));
 20363                           
 20364                           ; BSR set to: 1
 20365  000E7C  0E00               	movlw	0
 20366  000E7E                     L24:
 20367  000E7E  0101               	movlb	1	; () banked
 20368  000E80  6F68               	movwf	_ConnStatus& (0+255),b
 20369                           
 20370                           ; BSR set to: 1
 20371                           ;mdm_wifi_cmd.c: 179: }
 20372                           ;mdm_wifi_cmd.c: 182: StartConnState = StCon_WaitEvt;
 20373  000E82  0E00               	movlw	0
 20374  000E84  6F67               	movwf	StartConnectionSm@StartConnState& (0+255),b
 20375                           
 20376                           ; BSR set to: 1
 20377                           ;mdm_wifi_cmd.c: 189: }
 20378                           
 20379                           ; BSR set to: 1
 20380                           ;mdm_wifi_cmd.c: 188: break;
 20381                           
 20382                           ;mdm_wifi_cmd.c: 187: default:
 20383                           
 20384                           ; BSR set to: 1
 20385                           ;mdm_wifi_cmd.c: 183: }
 20386                           ;mdm_wifi_cmd.c: 184: }
 20387                           ;mdm_wifi_cmd.c: 185: break;
 20388                           
 20389                           ; BSR set to: 1
 20390  000E86  0012               	return	
 20391  000E88                     l974:
 20392                           
 20393                           ; BSR set to: 1
 20394  000E88  0101               	movlb	1	; () banked
 20395  000E8A  5167               	movf	StartConnectionSm@StartConnState& (0+255),w,b
 20396                           
 20397                           ; Switch size 1, requested type "space"
 20398                           ; Number of cases is 3, Range of values is 0 to 2
 20399                           ; switch strategies available:
 20400                           ; Name         Instructions Cycles
 20401                           ; simple_byte           10     6 (average)
 20402                           ;	Chosen strategy is simple_byte
 20403  000E8C  0A00               	xorlw	0	; case 0
 20404  000E8E  B4D8               	btfsc	status,2,c
 20405  000E90  D69D               	goto	l975
 20406  000E92  0A01               	xorlw	1	; case 1
 20407  000E94  B4D8               	btfsc	status,2,c
 20408  000E96  D6A8               	goto	l978
 20409  000E98  0A03               	xorlw	3	; case 2
 20410  000E9A  A4D8               	btfss	status,2,c
 20411  000E9C  0012               	return	
 20412  000E9E  D7C6               	goto	l982
 20413  000EA0                     __end_of_StartConnectionSm:
 20414                           	opt stack 0
 20415                           tosu	equ	0xFFF
 20416                           tosh	equ	0xFFE
 20417                           tosl	equ	0xFFD
 20418                           pclath	equ	0xFFA
 20419                           tblptru	equ	0xFF8
 20420                           tblptrh	equ	0xFF7
 20421                           tblptrl	equ	0xFF6
 20422                           tablat	equ	0xFF5
 20423                           prodh	equ	0xFF4
 20424                           prodl	equ	0xFF3
 20425                           intcon	equ	0xFF2
 20426                           intcon2	equ	0xFF1
 20427                           intcon3	equ	0xFF0
 20428                           indf0	equ	0xFEF
 20429                           postinc0	equ	0xFEE
 20430                           plusw0	equ	0xFEB
 20431                           fsr0h	equ	0xFEA
 20432                           fsr0l	equ	0xFE9
 20433                           wreg	equ	0xFE8
 20434                           indf1	equ	0xFE7
 20435                           postinc1	equ	0xFE6
 20436                           postdec1	equ	0xFE5
 20437                           fsr1h	equ	0xFE2
 20438                           fsr1l	equ	0xFE1
 20439                           indf2	equ	0xFDF
 20440                           postinc2	equ	0xFDE
 20441                           postdec2	equ	0xFDD
 20442                           plusw2	equ	0xFDB
 20443                           fsr2h	equ	0xFDA
 20444                           fsr2l	equ	0xFD9
 20445                           status	equ	0xFD8
 20446                           
 20447 ;; *************** function _ClearBuffer *****************
 20448 ;; Defined at:
 20449 ;;		line 124 in file "../Source/c/03_Sml/02_Ssl/sf.c"
 20450 ;; Parameters:    Size  Location     Type
 20451 ;;  Buffer          2    0[BANK0 ] PTR unsigned char 
 20452 ;;		 -> WifiTerminal@UartBuffer(200), AddressLocal(25), MdmWifi_UartRxBuffer(250), 
 20453 ;;  Len             2    2[BANK0 ] unsigned short 
 20454 ;; Auto vars:     Size  Location     Type
 20455 ;;  Index           2    4[BANK0 ] unsigned short 
 20456 ;; Return value:  Size  Location     Type
 20457 ;;                  1    wreg      void 
 20458 ;; Registers used:
 20459 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20460 ;; Tracked objects:
 20461 ;;		On entry : 0/0
 20462 ;;		On exit  : 0/0
 20463 ;;		Unchanged: 0/0
 20464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20465 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20466 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20468 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20469 ;;Total ram usage:        6 bytes
 20470 ;; Hardware stack levels used:    1
 20471 ;; Hardware stack levels required when called:   11
 20472 ;; This function calls:
 20473 ;;		Nothing
 20474 ;; This function is called by:
 20475 ;;		_MdmWifiGetUartData
 20476 ;;		_StartConnectionSm
 20477 ;;		_WifiTerminal
 20478 ;; This function uses a non-reentrant model
 20479 ;;
 20480                           
 20481                           	psect	text91
 20482  004936                     __ptext91:
 20483                           	opt stack 0
 20484  004936                     _ClearBuffer:
 20485                           	opt stack 15
 20486                           
 20487                           ;sf.c: 126: UINT16 Index = 0;
 20488                           
 20489                           ;incstack = 0
 20490  004936  0E00               	movlw	0
 20491  004938  0100               	movlb	0	; () banked
 20492  00493A  6F65               	movwf	(ClearBuffer@Index+1)& (0+255),b
 20493  00493C  0E00               	movlw	0
 20494  00493E  6F64               	movwf	ClearBuffer@Index& (0+255),b
 20495                           
 20496                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 20497  004940  0E00               	movlw	0
 20498  004942  6F65               	movwf	(ClearBuffer@Index+1)& (0+255),b
 20499  004944  0E00               	movlw	0
 20500  004946  6F64               	movwf	ClearBuffer@Index& (0+255),b
 20501  004948  D00A               	goto	l1924
 20502  00494A                     
 20503                           ; BSR set to: 0
 20504                           ;sf.c: 130: {
 20505                           ;sf.c: 131: *(Buffer + Index) = 0;
 20506                           
 20507                           ; BSR set to: 0
 20508  00494A  5164               	movf	ClearBuffer@Index& (0+255),w,b
 20509  00494C  2560               	addwf	ClearBuffer@Buffer& (0+255),w,b
 20510  00494E  6ED9               	movwf	fsr2l,c
 20511  004950  5165               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 20512  004952  2161               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 20513  004954  6EDA               	movwf	fsr2h,c
 20514  004956  0E00               	movlw	0
 20515  004958  6EDF               	movwf	indf2,c
 20516                           
 20517                           ; BSR set to: 0
 20518  00495A  4B64               	infsnz	ClearBuffer@Index& (0+255),f,b
 20519  00495C  2B65               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 20520  00495E                     l1924:
 20521                           
 20522                           ; BSR set to: 0
 20523                           
 20524                           ; BSR set to: 0
 20525  00495E  5164               	movf	ClearBuffer@Index& (0+255),w,b
 20526  004960  5D62               	subwf	ClearBuffer@Len& (0+255),w,b
 20527  004962  5165               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 20528  004964  5963               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 20529  004966  A0D8               	btfss	status,0,c
 20530  004968  0012               	return	
 20531  00496A  D7EF               	goto	l1925
 20532  00496C                     __end_of_ClearBuffer:
 20533                           	opt stack 0
 20534                           tosu	equ	0xFFF
 20535                           tosh	equ	0xFFE
 20536                           tosl	equ	0xFFD
 20537                           pclath	equ	0xFFA
 20538                           tblptru	equ	0xFF8
 20539                           tblptrh	equ	0xFF7
 20540                           tblptrl	equ	0xFF6
 20541                           tablat	equ	0xFF5
 20542                           prodh	equ	0xFF4
 20543                           prodl	equ	0xFF3
 20544                           intcon	equ	0xFF2
 20545                           intcon2	equ	0xFF1
 20546                           intcon3	equ	0xFF0
 20547                           indf0	equ	0xFEF
 20548                           postinc0	equ	0xFEE
 20549                           plusw0	equ	0xFEB
 20550                           fsr0h	equ	0xFEA
 20551                           fsr0l	equ	0xFE9
 20552                           wreg	equ	0xFE8
 20553                           indf1	equ	0xFE7
 20554                           postinc1	equ	0xFE6
 20555                           postdec1	equ	0xFE5
 20556                           fsr1h	equ	0xFE2
 20557                           fsr1l	equ	0xFE1
 20558                           indf2	equ	0xFDF
 20559                           postinc2	equ	0xFDE
 20560                           postdec2	equ	0xFDD
 20561                           plusw2	equ	0xFDB
 20562                           fsr2h	equ	0xFDA
 20563                           fsr2l	equ	0xFD9
 20564                           status	equ	0xFD8
 20565                           
 20566 ;; *************** function _SendDataSm *****************
 20567 ;; Defined at:
 20568 ;;		line 200 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 20569 ;; Parameters:    Size  Location     Type
 20570 ;;		None
 20571 ;; Auto vars:     Size  Location     Type
 20572 ;;  Data          103   30[BANK0 ] unsigned char [103]
 20573 ;;  LenAscii        4  133[BANK0 ] unsigned char [4]
 20574 ;;  IdAscii         1  138[BANK0 ] unsigned char [1]
 20575 ;;  DataIndex       1  137[BANK0 ] unsigned char 
 20576 ;; Return value:  Size  Location     Type
 20577 ;;                  1    wreg      void 
 20578 ;; Registers used:
 20579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20580 ;; Tracked objects:
 20581 ;;		On entry : 0/0
 20582 ;;		On exit  : 0/0
 20583 ;;		Unchanged: 0/0
 20584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20586 ;;      Locals:         0     109       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20588 ;;      Totals:         0     109       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20589 ;;Total ram usage:      109 bytes
 20590 ;; Hardware stack levels used:    1
 20591 ;; Hardware stack levels required when called:   14
 20592 ;; This function calls:
 20593 ;;		_MdmWifi_ReceiveWifiMsg
 20594 ;;		_MdmWifi_SendWifiMsg
 20595 ;;		_OsTmr_GetTimerStatus
 20596 ;;		_OsTmr_StartTimer
 20597 ;;		_ReceiveEvt
 20598 ;;		_strcat
 20599 ;;		_strcpy
 20600 ;;		_strstr
 20601 ;;		_utoa
 20602 ;; This function is called by:
 20603 ;;		_MdmWifiCmd_MainTask
 20604 ;; This function uses a non-reentrant model
 20605 ;;
 20606                           
 20607                           	psect	text92
 20608  001362                     __ptext92:
 20609                           	opt stack 0
 20610  001362                     _SendDataSm:
 20611                           	opt stack 13
 20612                           
 20613                           ;mdm_wifi_cmd.c: 202: static WifiSendDataStateType WifiSendDataState = WiFiSnd_WaitEvt;
 20614                           ;mdm_wifi_cmd.c: 203: UINT8 Data[((UINT8)(100)) + 3];
 20615                           ;mdm_wifi_cmd.c: 204: UINT8 DataIndex;
 20616                           ;mdm_wifi_cmd.c: 205: UINT8 IdAscii[1];
 20617                           ;mdm_wifi_cmd.c: 206: UINT8 LenAscii[4];
 20618                           ;mdm_wifi_cmd.c: 207: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, };
 20619                           ;mdm_wifi_cmd.c: 209: switch (WifiSendDataState)
 20620                           
 20621                           ; BSR set to: 0
 20622                           ;incstack = 0
 20623  001362  D105               	goto	l995
 20624  001364                     
 20625                           ;mdm_wifi_cmd.c: 213: if (ReceiveEvt(&WifiSendData))
 20626  001364  0E56               	movlw	low _WifiSendData
 20627  001366  0100               	movlb	0	; () banked
 20628  001368  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 20629  00136A  0E00               	movlw	high _WifiSendData
 20630  00136C  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 20631  00136E  EC61  F025         	call	_ReceiveEvt	;wreg free
 20632  001372  0900               	iorlw	0
 20633  001374  B4D8               	btfsc	status,2,c
 20634  001376  0012               	return	
 20635                           
 20636                           ;mdm_wifi_cmd.c: 214: {
 20637                           ;mdm_wifi_cmd.c: 215: WifiSendDataState = WiFiSnd_SendDataCmd;
 20638  001378  0E01               	movlw	1
 20639  00137A  0101               	movlb	1	; () banked
 20640  00137C  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20641                           
 20642                           ; BSR set to: 1
 20643                           ;mdm_wifi_cmd.c: 216: }
 20644                           ;mdm_wifi_cmd.c: 217: break;
 20645  00137E  0012               	return	
 20646  001380                     
 20647                           ; BSR set to: 1
 20648                           ;mdm_wifi_cmd.c: 221: strcpy(Data,"AT+CIPSEND=");
 20649                           
 20650                           ; BSR set to: 1
 20651  001380  0E7E               	movlw	low SendDataSm@Data
 20652  001382  0100               	movlb	0	; () banked
 20653  001384  6F60               	movwf	strcpy@to& (0+255),b
 20654  001386  0E00               	movlw	high SendDataSm@Data
 20655  001388  6F61               	movwf	(strcpy@to+1)& (0+255),b
 20656  00138A  0E5B               	movlw	low STR_15
 20657  00138C  6F62               	movwf	strcpy@from& (0+255),b
 20658  00138E  0EFF               	movlw	high STR_15
 20659  001390  6F63               	movwf	(strcpy@from+1)& (0+255),b
 20660  001392  ECF9  F022         	call	_strcpy	;wreg free
 20661                           
 20662                           ;mdm_wifi_cmd.c: 223: if (ModeLocal == ((UINT8)(1)))
 20663  001396  0451               	decf	_ModeLocal,w,c
 20664  001398  A4D8               	btfss	status,2,c
 20665  00139A  D02E               	goto	l1000
 20666                           
 20667                           ;mdm_wifi_cmd.c: 224: {
 20668                           ;mdm_wifi_cmd.c: 225: utoa(IdAscii,IdLocal,10);
 20669  00139C  0EEA               	movlw	low SendDataSm@IdAscii
 20670  00139E  0100               	movlb	0	; () banked
 20671  0013A0  6F67               	movwf	utoa@buf& (0+255),b
 20672  0013A2  0E00               	movlw	high SendDataSm@IdAscii
 20673  0013A4  6F68               	movwf	(utoa@buf+1)& (0+255),b
 20674  0013A6  C050  F069         	movff	_IdLocal,utoa@val
 20675  0013AA  6B6A               	clrf	(utoa@val+1)& (0+255),b
 20676  0013AC  0E00               	movlw	0
 20677  0013AE  6F6C               	movwf	(utoa@base+1)& (0+255),b
 20678  0013B0  0E0A               	movlw	10
 20679  0013B2  6F6B               	movwf	utoa@base& (0+255),b
 20680  0013B4  EC8E  F019         	call	_utoa	;wreg free
 20681                           
 20682                           ;mdm_wifi_cmd.c: 226: strcat(Data,IdAscii);
 20683  0013B8  0E7E               	movlw	low SendDataSm@Data
 20684  0013BA  0100               	movlb	0	; () banked
 20685  0013BC  6F60               	movwf	strcat@to& (0+255),b
 20686  0013BE  0E00               	movlw	high SendDataSm@Data
 20687  0013C0  6F61               	movwf	(strcat@to+1)& (0+255),b
 20688  0013C2  0EEA               	movlw	low SendDataSm@IdAscii
 20689  0013C4  6F62               	movwf	strcat@from& (0+255),b
 20690  0013C6  0E00               	movlw	high SendDataSm@IdAscii
 20691  0013C8  6F63               	movwf	(strcat@from+1)& (0+255),b
 20692  0013CA  5162               	movf	strcat@from& (0+255),w,b
 20693  0013CC  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20694  0013CE  A4D8               	btfss	status,2,c
 20695  0013D0  0E20               	movlw	32
 20696  0013D2  6F64               	movwf	(strcat@from+2)& (0+255),b
 20697  0013D4  EC29  F020         	call	_strcat	;wreg free
 20698                           
 20699                           ;mdm_wifi_cmd.c: 227: strcat(Data,",");
 20700  0013D8  0E7E               	movlw	low SendDataSm@Data
 20701  0013DA  0100               	movlb	0	; () banked
 20702  0013DC  6F60               	movwf	strcat@to& (0+255),b
 20703  0013DE  0E00               	movlw	high SendDataSm@Data
 20704  0013E0  6F61               	movwf	(strcat@to+1)& (0+255),b
 20705  0013E2  0EE7               	movlw	low (STR_46+1)
 20706  0013E4  6F62               	movwf	strcat@from& (0+255),b
 20707  0013E6  0EFF               	movlw	high (STR_46+1)
 20708  0013E8  6F63               	movwf	(strcat@from+1)& (0+255),b
 20709  0013EA  5162               	movf	strcat@from& (0+255),w,b
 20710  0013EC  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20711  0013EE  A4D8               	btfss	status,2,c
 20712  0013F0  0E00               	movlw	low (__mediumconst shr (0+16))
 20713  0013F2  6F64               	movwf	(strcat@from+2)& (0+255),b
 20714  0013F4  EC29  F020         	call	_strcat	;wreg free
 20715  0013F8                     l1000:
 20716                           
 20717                           ;mdm_wifi_cmd.c: 228: }
 20718                           ;mdm_wifi_cmd.c: 230: LenLocal = LenLocal + 2;
 20719  0013F8  504F               	movf	_LenLocal,w,c
 20720  0013FA  0F02               	addlw	2
 20721  0013FC  6E4F               	movwf	_LenLocal,c
 20722                           
 20723                           ;mdm_wifi_cmd.c: 231: utoa(LenAscii,LenLocal,10);
 20724  0013FE  0EE5               	movlw	low SendDataSm@LenAscii
 20725  001400  0100               	movlb	0	; () banked
 20726  001402  6F67               	movwf	utoa@buf& (0+255),b
 20727  001404  0E00               	movlw	high SendDataSm@LenAscii
 20728  001406  6F68               	movwf	(utoa@buf+1)& (0+255),b
 20729  001408  C04F  F069         	movff	_LenLocal,utoa@val
 20730  00140C  6B6A               	clrf	(utoa@val+1)& (0+255),b
 20731  00140E  0E00               	movlw	0
 20732  001410  6F6C               	movwf	(utoa@base+1)& (0+255),b
 20733  001412  0E0A               	movlw	10
 20734  001414  6F6B               	movwf	utoa@base& (0+255),b
 20735  001416  EC8E  F019         	call	_utoa	;wreg free
 20736                           
 20737                           ;mdm_wifi_cmd.c: 232: strcat(Data,LenAscii);
 20738  00141A  0E7E               	movlw	low SendDataSm@Data
 20739  00141C  0100               	movlb	0	; () banked
 20740  00141E  6F60               	movwf	strcat@to& (0+255),b
 20741  001420  0E00               	movlw	high SendDataSm@Data
 20742  001422  6F61               	movwf	(strcat@to+1)& (0+255),b
 20743  001424  0EE5               	movlw	low SendDataSm@LenAscii
 20744  001426  6F62               	movwf	strcat@from& (0+255),b
 20745  001428  0E00               	movlw	high SendDataSm@LenAscii
 20746  00142A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20747  00142C  5162               	movf	strcat@from& (0+255),w,b
 20748  00142E  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20749  001430  A4D8               	btfss	status,2,c
 20750  001432  0E20               	movlw	32
 20751  001434  6F64               	movwf	(strcat@from+2)& (0+255),b
 20752  001436  EC29  F020         	call	_strcat	;wreg free
 20753                           
 20754                           ;mdm_wifi_cmd.c: 235: strcat(Data,"\r\n");
 20755  00143A  0E7E               	movlw	low SendDataSm@Data
 20756  00143C  0100               	movlb	0	; () banked
 20757  00143E  6F60               	movwf	strcat@to& (0+255),b
 20758  001440  0E00               	movlw	high SendDataSm@Data
 20759  001442  6F61               	movwf	(strcat@to+1)& (0+255),b
 20760  001444  0E87               	movlw	low (STR_31+8)
 20761  001446  6F62               	movwf	strcat@from& (0+255),b
 20762  001448  0EFF               	movlw	high (STR_31+8)
 20763  00144A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20764  00144C  5162               	movf	strcat@from& (0+255),w,b
 20765  00144E  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20766  001450  A4D8               	btfss	status,2,c
 20767  001452  0E00               	movlw	low (__mediumconst shr (0+16))
 20768  001454  6F64               	movwf	(strcat@from+2)& (0+255),b
 20769  001456  EC29  F020         	call	_strcat	;wreg free
 20770                           
 20771                           ;mdm_wifi_cmd.c: 236: strcat(Data,(0));
 20772  00145A  0E7E               	movlw	low SendDataSm@Data
 20773  00145C  0100               	movlb	0	; () banked
 20774  00145E  6F60               	movwf	strcat@to& (0+255),b
 20775  001460  0E00               	movlw	high SendDataSm@Data
 20776  001462  6F61               	movwf	(strcat@to+1)& (0+255),b
 20777  001464  0E00               	movlw	0
 20778  001466  6F62               	movwf	strcat@from& (0+255),b
 20779  001468  0E00               	movlw	0
 20780  00146A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20781  00146C  0E00               	movlw	0
 20782  00146E  6F64               	movwf	(strcat@from+2)& (0+255),b
 20783  001470  EC29  F020         	call	_strcat	;wreg free
 20784                           
 20785                           ;mdm_wifi_cmd.c: 238: MdmWifi_SendWifiMsg(Data);
 20786  001474  0E7E               	movlw	low SendDataSm@Data
 20787  001476  0100               	movlb	0	; () banked
 20788  001478  6F66               	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20789  00147A  0E00               	movlw	high SendDataSm@Data
 20790  00147C  6F67               	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20791  00147E  EC63  F027         	call	_MdmWifi_SendWifiMsg	;wreg free
 20792                           
 20793                           ;mdm_wifi_cmd.c: 240: OsTmr_StartTimer(&SwTimer,2000);
 20794  001482  0EF6               	movlw	low SendDataSm@SwTimer
 20795  001484  0100               	movlb	0	; () banked
 20796  001486  6F64               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 20797  001488  0E01               	movlw	high SendDataSm@SwTimer
 20798  00148A  6F65               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 20799  00148C  0ED0               	movlw	208
 20800  00148E  6F66               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 20801  001490  0E07               	movlw	7
 20802  001492  6F67               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 20803  001494  0E00               	movlw	0
 20804  001496  6F68               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 20805  001498  0E00               	movlw	0
 20806  00149A  6F69               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 20807  00149C  ECBB  F020         	call	_OsTmr_StartTimer	;wreg free
 20808                           
 20809                           ;mdm_wifi_cmd.c: 243: WifiSendDataState = WiFiSnd_WaitPrompt;
 20810  0014A0  0E02               	movlw	2
 20811  0014A2  0101               	movlb	1	; () banked
 20812  0014A4  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20813                           
 20814                           ;mdm_wifi_cmd.c: 244: break;
 20815  0014A6  0012               	return	
 20816  0014A8                     
 20817                           ; BSR set to: 1
 20818                           ;mdm_wifi_cmd.c: 248: if (MdmWifi_ReceiveWifiMsg(Data,&DataIndex) == WifiMsg_Received)
 20819                           
 20820                           ; BSR set to: 1
 20821  0014A8  0E7E               	movlw	low SendDataSm@Data
 20822  0014AA  0100               	movlb	0	; () banked
 20823  0014AC  6F68               	movwf	MdmWifi_ReceiveWifiMsg@RxBuffer& (0+255),b
 20824  0014AE  0E00               	movlw	high SendDataSm@Data
 20825  0014B0  6F69               	movwf	(MdmWifi_ReceiveWifiMsg@RxBuffer+1)& (0+255),b
 20826  0014B2  0EE9               	movlw	low SendDataSm@DataIndex
 20827  0014B4  6F6A               	movwf	MdmWifi_ReceiveWifiMsg@DataLenght& (0+255),b
 20828  0014B6  0E00               	movlw	high SendDataSm@DataIndex
 20829  0014B8  6F6B               	movwf	(MdmWifi_ReceiveWifiMsg@DataLenght+1)& (0+255),b
 20830  0014BA  EC8B  F022         	call	_MdmWifi_ReceiveWifiMsg	;wreg free
 20831  0014BE  06E8               	decf	wreg,f,c
 20832  0014C0  A4D8               	btfss	status,2,c
 20833  0014C2  D014               	goto	l1002
 20834                           
 20835                           ;mdm_wifi_cmd.c: 249: {
 20836                           ;mdm_wifi_cmd.c: 251: if (strstr(Data,(void*)">") != (0))
 20837  0014C4  0E7E               	movlw	low SendDataSm@Data
 20838  0014C6  0100               	movlb	0	; () banked
 20839  0014C8  6F6F               	movwf	strstr@s1& (0+255),b
 20840  0014CA  0E00               	movlw	high SendDataSm@Data
 20841  0014CC  6F70               	movwf	(strstr@s1+1)& (0+255),b
 20842  0014CE  0EF5               	movlw	low STR_18
 20843  0014D0  6F71               	movwf	strstr@s2& (0+255),b
 20844  0014D2  0EFF               	movlw	high STR_18
 20845  0014D4  6F72               	movwf	(strstr@s2+1)& (0+255),b
 20846  0014D6  EC60  F01D         	call	_strstr	;wreg free
 20847  0014DA  0100               	movlb	0	; () banked
 20848  0014DC  516F               	movf	?_strstr& (0+255),w,b
 20849  0014DE  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 20850  0014E0  B4D8               	btfsc	status,2,c
 20851  0014E2  0012               	return	
 20852                           
 20853                           ; BSR set to: 0
 20854                           ;mdm_wifi_cmd.c: 252: {
 20855                           ;mdm_wifi_cmd.c: 254: WifiSendDataState = WiFiSnd_SendPayload;
 20856  0014E4  0E03               	movlw	3
 20857  0014E6  0101               	movlb	1	; () banked
 20858  0014E8  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20859                           
 20860                           ; BSR set to: 1
 20861                           ;mdm_wifi_cmd.c: 255: }
 20862                           ;mdm_wifi_cmd.c: 256: }
 20863  0014EA  0012               	return	
 20864  0014EC                     l1002:
 20865                           
 20866                           ;mdm_wifi_cmd.c: 257: else if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 20867                           
 20868                           ; BSR set to: 1
 20869  0014EC  0EF6               	movlw	low SendDataSm@SwTimer
 20870  0014EE  0100               	movlb	0	; () banked
 20871  0014F0  6F78               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 20872  0014F2  0E01               	movlw	high SendDataSm@SwTimer
 20873  0014F4  6F79               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 20874  0014F6  EC46  F01C         	call	_OsTmr_GetTimerStatus	;wreg free
 20875  0014FA  06E8               	decf	wreg,f,c
 20876  0014FC  A4D8               	btfss	status,2,c
 20877  0014FE  0012               	return	
 20878                           
 20879                           ;mdm_wifi_cmd.c: 258: {
 20880                           ;mdm_wifi_cmd.c: 260: WifiSendDataState = WiFiSnd_WaitEvt;
 20881  001500  0E00               	movlw	0
 20882  001502  0101               	movlb	1	; () banked
 20883  001504  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20884                           
 20885                           ; BSR set to: 1
 20886                           ;mdm_wifi_cmd.c: 261: }
 20887                           ;mdm_wifi_cmd.c: 262: break;
 20888                           
 20889                           ; BSR set to: 1
 20890  001506  0012               	return	
 20891  001508                     
 20892                           ; BSR set to: 1
 20893                           ;mdm_wifi_cmd.c: 266: strcpy(Data,BufferLocal);
 20894                           
 20895                           ; BSR set to: 1
 20896  001508  0E7E               	movlw	low SendDataSm@Data
 20897  00150A  0100               	movlb	0	; () banked
 20898  00150C  6F60               	movwf	strcpy@to& (0+255),b
 20899  00150E  0E00               	movlw	high SendDataSm@Data
 20900  001510  6F61               	movwf	(strcpy@to+1)& (0+255),b
 20901  001512  0E64               	movlw	low _BufferLocal
 20902  001514  6F62               	movwf	strcpy@from& (0+255),b
 20903  001516  0E06               	movlw	high _BufferLocal
 20904  001518  6F63               	movwf	(strcpy@from+1)& (0+255),b
 20905  00151A  ECF9  F022         	call	_strcpy	;wreg free
 20906                           
 20907                           ;mdm_wifi_cmd.c: 268: strcat(Data,"\r\n");
 20908  00151E  0E7E               	movlw	low SendDataSm@Data
 20909  001520  0100               	movlb	0	; () banked
 20910  001522  6F60               	movwf	strcat@to& (0+255),b
 20911  001524  0E00               	movlw	high SendDataSm@Data
 20912  001526  6F61               	movwf	(strcat@to+1)& (0+255),b
 20913  001528  0E87               	movlw	low (STR_31+8)
 20914  00152A  6F62               	movwf	strcat@from& (0+255),b
 20915  00152C  0EFF               	movlw	high (STR_31+8)
 20916  00152E  6F63               	movwf	(strcat@from+1)& (0+255),b
 20917  001530  5162               	movf	strcat@from& (0+255),w,b
 20918  001532  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20919  001534  A4D8               	btfss	status,2,c
 20920  001536  0E00               	movlw	low (__mediumconst shr (0+16))
 20921  001538  6F64               	movwf	(strcat@from+2)& (0+255),b
 20922  00153A  EC29  F020         	call	_strcat	;wreg free
 20923                           
 20924                           ;mdm_wifi_cmd.c: 269: strcat(Data,(0));
 20925  00153E  0E7E               	movlw	low SendDataSm@Data
 20926  001540  0100               	movlb	0	; () banked
 20927  001542  6F60               	movwf	strcat@to& (0+255),b
 20928  001544  0E00               	movlw	high SendDataSm@Data
 20929  001546  6F61               	movwf	(strcat@to+1)& (0+255),b
 20930  001548  0E00               	movlw	0
 20931  00154A  6F62               	movwf	strcat@from& (0+255),b
 20932  00154C  0E00               	movlw	0
 20933  00154E  6F63               	movwf	(strcat@from+1)& (0+255),b
 20934  001550  0E00               	movlw	0
 20935  001552  6F64               	movwf	(strcat@from+2)& (0+255),b
 20936  001554  EC29  F020         	call	_strcat	;wreg free
 20937                           
 20938                           ;mdm_wifi_cmd.c: 272: MdmWifi_SendWifiMsg(Data);
 20939  001558  0E7E               	movlw	low SendDataSm@Data
 20940  00155A  0100               	movlb	0	; () banked
 20941  00155C  6F66               	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20942  00155E  0E00               	movlw	high SendDataSm@Data
 20943  001560  6F67               	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20944  001562  EC63  F027         	call	_MdmWifi_SendWifiMsg	;wreg free
 20945                           
 20946                           ;mdm_wifi_cmd.c: 275: WifiSendDataState = WiFiSnd_WaitEvt;
 20947  001566  0E00               	movlw	0
 20948  001568  0101               	movlb	1	; () banked
 20949  00156A  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20950                           
 20951                           ; BSR set to: 1
 20952                           ;mdm_wifi_cmd.c: 280: }
 20953                           
 20954                           ; BSR set to: 1
 20955                           ;mdm_wifi_cmd.c: 279: break;
 20956                           
 20957                           ;mdm_wifi_cmd.c: 278: default:
 20958                           
 20959                           ;mdm_wifi_cmd.c: 276: break;
 20960  00156C  0012               	return	
 20961  00156E                     l995:
 20962                           
 20963                           ; BSR set to: 1
 20964  00156E  0101               	movlb	1	; () banked
 20965  001570  5166               	movf	SendDataSm@WifiSendDataState& (0+255),w,b
 20966                           
 20967                           ; Switch size 1, requested type "space"
 20968                           ; Number of cases is 4, Range of values is 0 to 3
 20969                           ; switch strategies available:
 20970                           ; Name         Instructions Cycles
 20971                           ; simple_byte           13     7 (average)
 20972                           ;	Chosen strategy is simple_byte
 20973  001572  0A00               	xorlw	0	; case 0
 20974  001574  B4D8               	btfsc	status,2,c
 20975  001576  D6F6               	goto	l996
 20976  001578  0A01               	xorlw	1	; case 1
 20977  00157A  B4D8               	btfsc	status,2,c
 20978  00157C  D701               	goto	l999
 20979  00157E  0A03               	xorlw	3	; case 2
 20980  001580  B4D8               	btfsc	status,2,c
 20981  001582  D792               	goto	l1001
 20982  001584  0A01               	xorlw	1	; case 3
 20983  001586  A4D8               	btfss	status,2,c
 20984  001588  0012               	return	
 20985  00158A  D7BE               	goto	l1006
 20986  00158C                     __end_of_SendDataSm:
 20987                           	opt stack 0
 20988                           tosu	equ	0xFFF
 20989                           tosh	equ	0xFFE
 20990                           tosl	equ	0xFFD
 20991                           pclath	equ	0xFFA
 20992                           tblptru	equ	0xFF8
 20993                           tblptrh	equ	0xFF7
 20994                           tblptrl	equ	0xFF6
 20995                           tablat	equ	0xFF5
 20996                           prodh	equ	0xFF4
 20997                           prodl	equ	0xFF3
 20998                           intcon	equ	0xFF2
 20999                           intcon2	equ	0xFF1
 21000                           intcon3	equ	0xFF0
 21001                           indf0	equ	0xFEF
 21002                           postinc0	equ	0xFEE
 21003                           plusw0	equ	0xFEB
 21004                           fsr0h	equ	0xFEA
 21005                           fsr0l	equ	0xFE9
 21006                           wreg	equ	0xFE8
 21007                           indf1	equ	0xFE7
 21008                           postinc1	equ	0xFE6
 21009                           postdec1	equ	0xFE5
 21010                           fsr1h	equ	0xFE2
 21011                           fsr1l	equ	0xFE1
 21012                           indf2	equ	0xFDF
 21013                           postinc2	equ	0xFDE
 21014                           postdec2	equ	0xFDD
 21015                           plusw2	equ	0xFDB
 21016                           fsr2h	equ	0xFDA
 21017                           fsr2l	equ	0xFD9
 21018                           status	equ	0xFD8
 21019                           
 21020 ;; *************** function _utoa *****************
 21021 ;; Defined at:
 21022 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 21023 ;; Parameters:    Size  Location     Type
 21024 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 21025 ;;		 -> Term_MainSm@FwkBuildYearStr(4), Term_MainSm@FwkBuildMonthStr(4), Term_MainSm@FwkBuildDayStr(4), Term_MainSm@FwkB
      +uildStr(4), 
 21026 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(100), MdmWifiCmd_ConfigureServer@PortAs
      +cii(10), 
 21027 ;;		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(5), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(5), MdmWifiCmd_CloseConnect
      +ion@IdAscii(1), SendDataSm@LenAscii(4), 
 21028 ;;		 -> SendDataSm@IdAscii(1), StartConnectionSm@PortAscii(4), StartConnectionSm@IdAscii(1), 
 21029 ;;  val             2    9[BANK0 ] unsigned int 
 21030 ;;  base            2   11[BANK0 ] int 
 21031 ;; Auto vars:     Size  Location     Type
 21032 ;;  v               2   13[BANK0 ] unsigned int 
 21033 ;;  c               1   15[BANK0 ] unsigned char 
 21034 ;; Return value:  Size  Location     Type
 21035 ;;                  2    7[BANK0 ] PTR unsigned char 
 21036 ;; Registers used:
 21037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21038 ;; Tracked objects:
 21039 ;;		On entry : 0/0
 21040 ;;		On exit  : 0/0
 21041 ;;		Unchanged: 0/0
 21042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21043 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21044 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21046 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21047 ;;Total ram usage:        9 bytes
 21048 ;; Hardware stack levels used:    1
 21049 ;; Hardware stack levels required when called:   12
 21050 ;; This function calls:
 21051 ;;		___lwdiv
 21052 ;;		___lwmod
 21053 ;; This function is called by:
 21054 ;;		_StartConnectionSm
 21055 ;;		_SendDataSm
 21056 ;;		_Term_MainSm
 21057 ;;		_itoa
 21058 ;;		_MdmWifiCmd_CloseConnection
 21059 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 21060 ;;		_MdmWifiCmd_ConfigureServer
 21061 ;; This function uses a non-reentrant model
 21062 ;;
 21063                           
 21064                           	psect	text93
 21065  00331C                     __ptext93:
 21066                           	opt stack 0
 21067  00331C                     _utoa:
 21068                           	opt stack 14
 21069                           
 21070                           ;incstack = 0
 21071  00331C  C069  F06D         	movff	utoa@val,utoa@v
 21072  003320  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 21073  003324  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 21074  003328  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 21075  00332C  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 21076  003330  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 21077  003334  ECED  F021         	call	___lwdiv	;wreg free
 21078  003338  C060  F06D         	movff	?___lwdiv,utoa@v
 21079  00333C  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 21080  003340  0100               	movlb	0	; () banked
 21081  003342  4B67               	infsnz	utoa@buf& (0+255),f,b
 21082  003344  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 21083                           
 21084                           ; BSR set to: 0
 21085  003346  516D               	movf	utoa@v& (0+255),w,b
 21086  003348  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 21087  00334A  A4D8               	btfss	status,2,c
 21088  00334C  D7EB               	goto	l2476
 21089                           
 21090                           ; BSR set to: 0
 21091                           
 21092                           ; BSR set to: 0
 21093  00334E  C067  FFD9         	movff	utoa@buf,fsr2l
 21094  003352  C068  FFDA         	movff	utoa@buf+1,fsr2h
 21095  003356  0E00               	movlw	0
 21096  003358  6EDF               	movwf	indf2,c
 21097                           
 21098                           ; BSR set to: 0
 21099  00335A  0767               	decf	utoa@buf& (0+255),f,b
 21100  00335C  A0D8               	btfss	status,0,c
 21101  00335E  0768               	decf	(utoa@buf+1)& (0+255),f,b
 21102  003360                     
 21103                           ; BSR set to: 0
 21104                           
 21105                           ; BSR set to: 0
 21106  003360  C069  F060         	movff	utoa@val,___lwmod@dividend
 21107  003364  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 21108  003368  C06B  F062         	movff	utoa@base,___lwmod@divisor
 21109  00336C  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 21110  003370  ECC7  F023         	call	___lwmod	;wreg free
 21111  003374  0100               	movlb	0	; () banked
 21112  003376  5160               	movf	?___lwmod& (0+255),w,b
 21113  003378  6F6F               	movwf	utoa@c& (0+255),b
 21114                           
 21115                           ; BSR set to: 0
 21116  00337A  C069  F060         	movff	utoa@val,___lwdiv@dividend
 21117  00337E  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 21118  003382  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 21119  003386  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 21120  00338A  ECED  F021         	call	___lwdiv	;wreg free
 21121  00338E  C060  F069         	movff	?___lwdiv,utoa@val
 21122  003392  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 21123  003396  0E09               	movlw	9
 21124  003398  0100               	movlb	0	; () banked
 21125  00339A  656F               	cpfsgt	utoa@c& (0+255),b
 21126  00339C  D002               	goto	l2479
 21127                           
 21128                           ; BSR set to: 0
 21129  00339E  0E07               	movlw	7
 21130  0033A0  276F               	addwf	utoa@c& (0+255),f,b
 21131  0033A2                     l2479:
 21132                           
 21133                           ; BSR set to: 0
 21134  0033A2  0E30               	movlw	48
 21135  0033A4  276F               	addwf	utoa@c& (0+255),f,b
 21136                           
 21137                           ; BSR set to: 0
 21138  0033A6  C067  FFD9         	movff	utoa@buf,fsr2l
 21139  0033AA  C068  FFDA         	movff	utoa@buf+1,fsr2h
 21140  0033AE  C06F  FFDF         	movff	utoa@c,indf2
 21141                           
 21142                           ; BSR set to: 0
 21143  0033B2  0767               	decf	utoa@buf& (0+255),f,b
 21144  0033B4  A0D8               	btfss	status,0,c
 21145  0033B6  0768               	decf	(utoa@buf+1)& (0+255),f,b
 21146                           
 21147                           ; BSR set to: 0
 21148  0033B8  5169               	movf	utoa@val& (0+255),w,b
 21149  0033BA  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 21150  0033BC  A4D8               	btfss	status,2,c
 21151  0033BE  D7D0               	goto	l2478
 21152                           
 21153                           ; BSR set to: 0
 21154                           ;	Return value of _utoa is never used
 21155                           
 21156                           ; BSR set to: 0
 21157  0033C0  4B67               	infsnz	utoa@buf& (0+255),f,b
 21158  0033C2  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 21159  0033C4  0012               	return	
 21160  0033C6                     __end_of_utoa:
 21161                           	opt stack 0
 21162                           tosu	equ	0xFFF
 21163                           tosh	equ	0xFFE
 21164                           tosl	equ	0xFFD
 21165                           pclath	equ	0xFFA
 21166                           tblptru	equ	0xFF8
 21167                           tblptrh	equ	0xFF7
 21168                           tblptrl	equ	0xFF6
 21169                           tablat	equ	0xFF5
 21170                           prodh	equ	0xFF4
 21171                           prodl	equ	0xFF3
 21172                           intcon	equ	0xFF2
 21173                           intcon2	equ	0xFF1
 21174                           intcon3	equ	0xFF0
 21175                           indf0	equ	0xFEF
 21176                           postinc0	equ	0xFEE
 21177                           plusw0	equ	0xFEB
 21178                           fsr0h	equ	0xFEA
 21179                           fsr0l	equ	0xFE9
 21180                           wreg	equ	0xFE8
 21181                           indf1	equ	0xFE7
 21182                           postinc1	equ	0xFE6
 21183                           postdec1	equ	0xFE5
 21184                           fsr1h	equ	0xFE2
 21185                           fsr1l	equ	0xFE1
 21186                           indf2	equ	0xFDF
 21187                           postinc2	equ	0xFDE
 21188                           postdec2	equ	0xFDD
 21189                           plusw2	equ	0xFDB
 21190                           fsr2h	equ	0xFDA
 21191                           fsr2l	equ	0xFD9
 21192                           status	equ	0xFD8
 21193                           
 21194 ;; *************** function ___lwmod *****************
 21195 ;; Defined at:
 21196 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 21197 ;; Parameters:    Size  Location     Type
 21198 ;;  dividend        2    0[BANK0 ] unsigned int 
 21199 ;;  divisor         2    2[BANK0 ] unsigned int 
 21200 ;; Auto vars:     Size  Location     Type
 21201 ;;  counter         1    4[BANK0 ] unsigned char 
 21202 ;; Return value:  Size  Location     Type
 21203 ;;                  2    0[BANK0 ] unsigned int 
 21204 ;; Registers used:
 21205 ;;		wreg, status,2, status,0
 21206 ;; Tracked objects:
 21207 ;;		On entry : 0/0
 21208 ;;		On exit  : 0/0
 21209 ;;		Unchanged: 0/0
 21210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21211 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21212 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21214 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21215 ;;Total ram usage:        5 bytes
 21216 ;; Hardware stack levels used:    1
 21217 ;; Hardware stack levels required when called:   11
 21218 ;; This function calls:
 21219 ;;		Nothing
 21220 ;; This function is called by:
 21221 ;;		_utoa
 21222 ;; This function uses a non-reentrant model
 21223 ;;
 21224                           
 21225                           	psect	text94
 21226  00478E                     __ptext94:
 21227                           	opt stack 0
 21228  00478E                     ___lwmod:
 21229                           	opt stack 14
 21230                           
 21231                           ; BSR set to: 0
 21232                           ;incstack = 0
 21233  00478E  0100               	movlb	0	; () banked
 21234  004790  5162               	movf	___lwmod@divisor& (0+255),w,b
 21235  004792  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 21236  004794  B4D8               	btfsc	status,2,c
 21237  004796  D018               	goto	l2574
 21238                           
 21239                           ; BSR set to: 0
 21240  004798  0E01               	movlw	1
 21241  00479A  6F64               	movwf	___lwmod@counter& (0+255),b
 21242  00479C  D004               	goto	l2569
 21243  00479E                     
 21244                           ; BSR set to: 0
 21245                           
 21246                           ; BSR set to: 0
 21247  00479E  90D8               	bcf	status,0,c
 21248  0047A0  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 21249  0047A2  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21250  0047A4  2B64               	incf	___lwmod@counter& (0+255),f,b
 21251  0047A6                     l2569:
 21252                           
 21253                           ; BSR set to: 0
 21254                           
 21255                           ; BSR set to: 0
 21256  0047A6  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21257  0047A8  D7FA               	goto	l2570
 21258  0047AA                     u4900:
 21259                           
 21260                           ; BSR set to: 0
 21261                           
 21262                           ; BSR set to: 0
 21263                           
 21264                           ; BSR set to: 0
 21265  0047AA  5162               	movf	___lwmod@divisor& (0+255),w,b
 21266  0047AC  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 21267  0047AE  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21268  0047B0  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21269  0047B2  A0D8               	btfss	status,0,c
 21270  0047B4  D004               	goto	l2573
 21271                           
 21272                           ; BSR set to: 0
 21273  0047B6  5162               	movf	___lwmod@divisor& (0+255),w,b
 21274  0047B8  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 21275  0047BA  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21276  0047BC  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21277  0047BE                     l2573:
 21278                           
 21279                           ; BSR set to: 0
 21280                           
 21281                           ; BSR set to: 0
 21282  0047BE  90D8               	bcf	status,0,c
 21283  0047C0  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 21284  0047C2  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 21285                           
 21286                           ; BSR set to: 0
 21287  0047C4  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 21288  0047C6  D7F1               	goto	u4900
 21289  0047C8                     l2574:
 21290                           
 21291                           ; BSR set to: 0
 21292                           
 21293                           ; BSR set to: 0
 21294  0047C8  C060  F060         	movff	___lwmod@dividend,?___lwmod
 21295  0047CC  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 21296                           
 21297                           ; BSR set to: 0
 21298  0047D0  0012               	return		;funcret
 21299  0047D2                     __end_of___lwmod:
 21300                           	opt stack 0
 21301                           tosu	equ	0xFFF
 21302                           tosh	equ	0xFFE
 21303                           tosl	equ	0xFFD
 21304                           pclath	equ	0xFFA
 21305                           tblptru	equ	0xFF8
 21306                           tblptrh	equ	0xFF7
 21307                           tblptrl	equ	0xFF6
 21308                           tablat	equ	0xFF5
 21309                           prodh	equ	0xFF4
 21310                           prodl	equ	0xFF3
 21311                           intcon	equ	0xFF2
 21312                           intcon2	equ	0xFF1
 21313                           intcon3	equ	0xFF0
 21314                           indf0	equ	0xFEF
 21315                           postinc0	equ	0xFEE
 21316                           plusw0	equ	0xFEB
 21317                           fsr0h	equ	0xFEA
 21318                           fsr0l	equ	0xFE9
 21319                           wreg	equ	0xFE8
 21320                           indf1	equ	0xFE7
 21321                           postinc1	equ	0xFE6
 21322                           postdec1	equ	0xFE5
 21323                           fsr1h	equ	0xFE2
 21324                           fsr1l	equ	0xFE1
 21325                           indf2	equ	0xFDF
 21326                           postinc2	equ	0xFDE
 21327                           postdec2	equ	0xFDD
 21328                           plusw2	equ	0xFDB
 21329                           fsr2h	equ	0xFDA
 21330                           fsr2l	equ	0xFD9
 21331                           status	equ	0xFD8
 21332                           
 21333 ;; *************** function ___lwdiv *****************
 21334 ;; Defined at:
 21335 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 21336 ;; Parameters:    Size  Location     Type
 21337 ;;  dividend        2    0[BANK0 ] unsigned int 
 21338 ;;  divisor         2    2[BANK0 ] unsigned int 
 21339 ;; Auto vars:     Size  Location     Type
 21340 ;;  quotient        2    4[BANK0 ] unsigned int 
 21341 ;;  counter         1    6[BANK0 ] unsigned char 
 21342 ;; Return value:  Size  Location     Type
 21343 ;;                  2    0[BANK0 ] unsigned int 
 21344 ;; Registers used:
 21345 ;;		wreg, status,2, status,0
 21346 ;; Tracked objects:
 21347 ;;		On entry : 0/0
 21348 ;;		On exit  : 0/0
 21349 ;;		Unchanged: 0/0
 21350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21351 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21352 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21354 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21355 ;;Total ram usage:        7 bytes
 21356 ;; Hardware stack levels used:    1
 21357 ;; Hardware stack levels required when called:   11
 21358 ;; This function calls:
 21359 ;;		Nothing
 21360 ;; This function is called by:
 21361 ;;		_utoa
 21362 ;; This function uses a non-reentrant model
 21363 ;;
 21364                           
 21365                           	psect	text95
 21366  0043DA                     __ptext95:
 21367                           	opt stack 0
 21368  0043DA                     ___lwdiv:
 21369                           	opt stack 14
 21370                           
 21371                           ; BSR set to: 0
 21372                           ;incstack = 0
 21373  0043DA  0E00               	movlw	0
 21374  0043DC  0100               	movlb	0	; () banked
 21375  0043DE  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 21376  0043E0  0E00               	movlw	0
 21377  0043E2  6F64               	movwf	___lwdiv@quotient& (0+255),b
 21378                           
 21379                           ; BSR set to: 0
 21380  0043E4  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21381  0043E6  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 21382  0043E8  B4D8               	btfsc	status,2,c
 21383  0043EA  D01C               	goto	l2564
 21384                           
 21385                           ; BSR set to: 0
 21386  0043EC  0E01               	movlw	1
 21387  0043EE  6F66               	movwf	___lwdiv@counter& (0+255),b
 21388  0043F0  D004               	goto	l2559
 21389  0043F2                     
 21390                           ; BSR set to: 0
 21391                           
 21392                           ; BSR set to: 0
 21393  0043F2  90D8               	bcf	status,0,c
 21394  0043F4  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 21395  0043F6  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 21396  0043F8  2B66               	incf	___lwdiv@counter& (0+255),f,b
 21397  0043FA                     l2559:
 21398                           
 21399                           ; BSR set to: 0
 21400                           
 21401                           ; BSR set to: 0
 21402  0043FA  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 21403  0043FC  D7FA               	goto	l2560
 21404  0043FE                     u4870:
 21405                           
 21406                           ; BSR set to: 0
 21407                           
 21408                           ; BSR set to: 0
 21409                           
 21410                           ; BSR set to: 0
 21411  0043FE  90D8               	bcf	status,0,c
 21412  004400  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 21413  004402  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 21414                           
 21415                           ; BSR set to: 0
 21416  004404  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21417  004406  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 21418  004408  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21419  00440A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 21420  00440C  A0D8               	btfss	status,0,c
 21421  00440E  D005               	goto	l2563
 21422                           
 21423                           ; BSR set to: 0
 21424  004410  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21425  004412  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 21426  004414  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21427  004416  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 21428                           
 21429                           ; BSR set to: 0
 21430  004418  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 21431  00441A                     l2563:
 21432                           
 21433                           ; BSR set to: 0
 21434                           
 21435                           ; BSR set to: 0
 21436  00441A  90D8               	bcf	status,0,c
 21437  00441C  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 21438  00441E  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 21439                           
 21440                           ; BSR set to: 0
 21441  004420  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 21442  004422  D7ED               	goto	u4870
 21443  004424                     l2564:
 21444                           
 21445                           ; BSR set to: 0
 21446                           
 21447                           ; BSR set to: 0
 21448  004424  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 21449  004428  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 21450                           
 21451                           ; BSR set to: 0
 21452  00442C  0012               	return		;funcret
 21453  00442E                     __end_of___lwdiv:
 21454                           	opt stack 0
 21455                           tosu	equ	0xFFF
 21456                           tosh	equ	0xFFE
 21457                           tosl	equ	0xFFD
 21458                           pclath	equ	0xFFA
 21459                           tblptru	equ	0xFF8
 21460                           tblptrh	equ	0xFF7
 21461                           tblptrl	equ	0xFF6
 21462                           tablat	equ	0xFF5
 21463                           prodh	equ	0xFF4
 21464                           prodl	equ	0xFF3
 21465                           intcon	equ	0xFF2
 21466                           intcon2	equ	0xFF1
 21467                           intcon3	equ	0xFF0
 21468                           indf0	equ	0xFEF
 21469                           postinc0	equ	0xFEE
 21470                           plusw0	equ	0xFEB
 21471                           fsr0h	equ	0xFEA
 21472                           fsr0l	equ	0xFE9
 21473                           wreg	equ	0xFE8
 21474                           indf1	equ	0xFE7
 21475                           postinc1	equ	0xFE6
 21476                           postdec1	equ	0xFE5
 21477                           fsr1h	equ	0xFE2
 21478                           fsr1l	equ	0xFE1
 21479                           indf2	equ	0xFDF
 21480                           postinc2	equ	0xFDE
 21481                           postdec2	equ	0xFDD
 21482                           plusw2	equ	0xFDB
 21483                           fsr2h	equ	0xFDA
 21484                           fsr2l	equ	0xFD9
 21485                           status	equ	0xFD8
 21486                           
 21487 ;; *************** function _strstr *****************
 21488 ;; Defined at:
 21489 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 21490 ;; Parameters:    Size  Location     Type
 21491 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 21492 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(250), 
 21493 ;;		 -> WifiRxPacket(253), 
 21494 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 21495 ;;		 -> STR_18(2), STR_14(8), STR_2(5), STR_1(6), 
 21496 ;; Auto vars:     Size  Location     Type
 21497 ;;		None
 21498 ;; Return value:  Size  Location     Type
 21499 ;;                  2   15[BANK0 ] PTR unsigned char 
 21500 ;; Registers used:
 21501 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21502 ;; Tracked objects:
 21503 ;;		On entry : 0/0
 21504 ;;		On exit  : 0/0
 21505 ;;		Unchanged: 0/0
 21506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21507 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21510 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21511 ;;Total ram usage:        4 bytes
 21512 ;; Hardware stack levels used:    1
 21513 ;; Hardware stack levels required when called:   12
 21514 ;; This function calls:
 21515 ;;		_strchr
 21516 ;;		_strlen
 21517 ;;		_strncmp
 21518 ;; This function is called by:
 21519 ;;		_MdmWifiEvtParser
 21520 ;;		_StartConnectionSm
 21521 ;;		_SendDataSm
 21522 ;; This function uses a non-reentrant model
 21523 ;;
 21524                           
 21525                           	psect	text96
 21526  003AC0                     __ptext96:
 21527                           	opt stack 0
 21528  003AC0                     _strstr:
 21529                           	opt stack 14
 21530                           
 21531                           ; BSR set to: 0
 21532                           ;incstack = 0
 21533  003AC0  D033               	goto	l2742
 21534  003AC2  C06F  F066         	movff	strstr@s1,strncmp@s1
 21535  003AC6  C070  F067         	movff	strstr@s1+1,strncmp@s1+1
 21536  003ACA  C071  F068         	movff	strstr@s2,strncmp@s2
 21537  003ACE  C072  F069         	movff	strstr@s2+1,strncmp@s2+1
 21538  003AD2  C071  F060         	movff	strstr@s2,strlen@s
 21539  003AD6  C072  F061         	movff	strstr@s2+1,strlen@s+1
 21540  003ADA  EC6E  F021         	call	_strlen	;wreg free
 21541  003ADE  C060  F06A         	movff	?_strlen,strncmp@len
 21542  003AE2  C061  F06B         	movff	?_strlen+1,strncmp@len+1
 21543  003AE6  EC1A  F01D         	call	_strncmp	;wreg free
 21544  003AEA  0100               	movlb	0	; () banked
 21545  003AEC  5166               	movf	?_strncmp& (0+255),w,b
 21546  003AEE  1167               	iorwf	(?_strncmp+1)& (0+255),w,b
 21547  003AF0  A4D8               	btfss	status,2,c
 21548  003AF2  D005               	goto	l2744
 21549                           
 21550                           ; BSR set to: 0
 21551  003AF4  C06F  F06F         	movff	strstr@s1,?_strstr
 21552  003AF8  C070  F070         	movff	strstr@s1+1,?_strstr+1
 21553                           
 21554                           ; BSR set to: 0
 21555  003AFC  0012               	return	
 21556  003AFE                     l2744:
 21557                           
 21558                           ; BSR set to: 0
 21559                           
 21560                           ; BSR set to: 0
 21561  003AFE  0E01               	movlw	1
 21562  003B00  256F               	addwf	strstr@s1& (0+255),w,b
 21563  003B02  6F60               	movwf	strchr@ptr& (0+255),b
 21564  003B04  0E00               	movlw	0
 21565  003B06  2170               	addwfc	(strstr@s1+1)& (0+255),w,b
 21566  003B08  6F61               	movwf	(strchr@ptr+1)& (0+255),b
 21567  003B0A  C071  FFF6         	movff	strstr@s2,tblptrl
 21568  003B0E  C072  FFF7         	movff	strstr@s2+1,tblptrh
 21569  003B12                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21570  003B12  6AF8               	clrf	tblptru,c
 21571  003B14                     	endif
 21572  003B14                     	if	0	;tblptru may be non-zero
 21573  003B14                     	endif
 21574  003B14  0008               	tblrd		*
 21575  003B16  50F5               	movf	tablat,w,c
 21576  003B18  6F62               	movwf	strchr@chr& (0+255),b
 21577  003B1A  6B63               	clrf	(strchr@chr+1)& (0+255),b
 21578  003B1C  EC63  F024         	call	_strchr	;wreg free
 21579  003B20  C060  F06F         	movff	?_strchr,strstr@s1
 21580  003B24  C061  F070         	movff	?_strchr+1,strstr@s1+1
 21581  003B28                     l2742:
 21582  003B28  0100               	movlb	0	; () banked
 21583  003B2A  516F               	movf	strstr@s1& (0+255),w,b
 21584  003B2C  1170               	iorwf	(strstr@s1+1)& (0+255),w,b
 21585  003B2E  B4D8               	btfsc	status,2,c
 21586  003B30  D007               	goto	u6270
 21587                           
 21588                           ; BSR set to: 0
 21589  003B32  C06F  FFD9         	movff	strstr@s1,fsr2l
 21590  003B36  C070  FFDA         	movff	strstr@s1+1,fsr2h
 21591  003B3A  50DF               	movf	indf2,w,c
 21592  003B3C  A4D8               	btfss	status,2,c
 21593  003B3E  D7C1               	goto	l2743
 21594  003B40                     u6270:
 21595                           
 21596                           ; BSR set to: 0
 21597                           
 21598                           ; BSR set to: 0
 21599                           
 21600                           ; BSR set to: 0
 21601  003B40  0E00               	movlw	0
 21602  003B42  6F6F               	movwf	?_strstr& (0+255),b
 21603  003B44  0E00               	movlw	0
 21604  003B46  6F70               	movwf	(?_strstr+1)& (0+255),b
 21605  003B48  0012               	return	
 21606  003B4A                     __end_of_strstr:
 21607                           	opt stack 0
 21608                           tosu	equ	0xFFF
 21609                           tosh	equ	0xFFE
 21610                           tosl	equ	0xFFD
 21611                           pclath	equ	0xFFA
 21612                           tblptru	equ	0xFF8
 21613                           tblptrh	equ	0xFF7
 21614                           tblptrl	equ	0xFF6
 21615                           tablat	equ	0xFF5
 21616                           prodh	equ	0xFF4
 21617                           prodl	equ	0xFF3
 21618                           intcon	equ	0xFF2
 21619                           intcon2	equ	0xFF1
 21620                           intcon3	equ	0xFF0
 21621                           indf0	equ	0xFEF
 21622                           postinc0	equ	0xFEE
 21623                           plusw0	equ	0xFEB
 21624                           fsr0h	equ	0xFEA
 21625                           fsr0l	equ	0xFE9
 21626                           wreg	equ	0xFE8
 21627                           indf1	equ	0xFE7
 21628                           postinc1	equ	0xFE6
 21629                           postdec1	equ	0xFE5
 21630                           fsr1h	equ	0xFE2
 21631                           fsr1l	equ	0xFE1
 21632                           indf2	equ	0xFDF
 21633                           postinc2	equ	0xFDE
 21634                           postdec2	equ	0xFDD
 21635                           plusw2	equ	0xFDB
 21636                           fsr2h	equ	0xFDA
 21637                           fsr2l	equ	0xFD9
 21638                           status	equ	0xFD8
 21639                           
 21640 ;; *************** function _strncmp *****************
 21641 ;; Defined at:
 21642 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 21643 ;; Parameters:    Size  Location     Type
 21644 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 21645 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(250), 
 21646 ;;		 -> WifiRxPacket(253), 
 21647 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 21648 ;;		 -> STR_18(2), STR_14(8), STR_2(5), STR_1(6), 
 21649 ;;  len             2   10[BANK0 ] unsigned int 
 21650 ;; Auto vars:     Size  Location     Type
 21651 ;;		None
 21652 ;; Return value:  Size  Location     Type
 21653 ;;                  2    6[BANK0 ] int 
 21654 ;; Registers used:
 21655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21656 ;; Tracked objects:
 21657 ;;		On entry : 0/0
 21658 ;;		On exit  : 0/0
 21659 ;;		Unchanged: 0/0
 21660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21661 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21663 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21664 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21665 ;;Total ram usage:        9 bytes
 21666 ;; Hardware stack levels used:    1
 21667 ;; Hardware stack levels required when called:   11
 21668 ;; This function calls:
 21669 ;;		Nothing
 21670 ;; This function is called by:
 21671 ;;		_strstr
 21672 ;; This function uses a non-reentrant model
 21673 ;;
 21674                           
 21675                           	psect	text97
 21676  003A34                     __ptext97:
 21677                           	opt stack 0
 21678  003A34                     _strncmp:
 21679                           	opt stack 14
 21680                           
 21681                           ; BSR set to: 0
 21682                           ;incstack = 0
 21683  003A34  D037               	goto	l2831
 21684  003A36                     l7601:
 21685  003A36  C066  FFD9         	movff	strncmp@s1,fsr2l
 21686  003A3A  C067  FFDA         	movff	strncmp@s1+1,fsr2h
 21687  003A3E  50DF               	movf	indf2,w,c
 21688  003A40  B4D8               	btfsc	status,2,c
 21689  003A42  D011               	goto	u5950
 21690  003A44  C066  FFD9         	movff	strncmp@s1,fsr2l
 21691  003A48  C067  FFDA         	movff	strncmp@s1+1,fsr2h
 21692  003A4C  50DF               	movf	indf2,w,c
 21693  003A4E  0100               	movlb	0	; () banked
 21694  003A50  6F6C               	movwf	??_strncmp& (0+255),b
 21695  003A52  C068  FFF6         	movff	strncmp@s2,tblptrl
 21696  003A56  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21697  003A5A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21698  003A5A  6AF8               	clrf	tblptru,c
 21699  003A5C                     	endif
 21700  003A5C                     	if	0	;tblptru may be non-zero
 21701  003A5C                     	endif
 21702  003A5C  0008               	tblrd		*
 21703  003A5E  50F5               	movf	tablat,w,c
 21704  003A60  196C               	xorwf	??_strncmp& (0+255),w,b
 21705  003A62  B4D8               	btfsc	status,2,c
 21706  003A64  D01B               	goto	l2833
 21707  003A66                     u5950:
 21708                           
 21709                           ; BSR set to: 0
 21710  003A66  C068  FFF6         	movff	strncmp@s2,tblptrl
 21711  003A6A  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21712  003A6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21713  003A6E  6AF8               	clrf	tblptru,c
 21714  003A70                     	endif
 21715  003A70                     	if	0	;tblptru may be non-zero
 21716  003A70                     	endif
 21717  003A70  0008               	tblrd		*
 21718  003A72  50F5               	movf	tablat,w,c
 21719  003A74  0100               	movlb	0	; () banked
 21720  003A76  6F6C               	movwf	??_strncmp& (0+255),b
 21721  003A78  6B6D               	clrf	(??_strncmp+1)& (0+255),b
 21722  003A7A  1F6C               	comf	??_strncmp& (0+255),f,b
 21723  003A7C  1F6D               	comf	(??_strncmp+1)& (0+255),f,b
 21724  003A7E  4B6C               	infsnz	??_strncmp& (0+255),f,b
 21725  003A80  2B6D               	incf	(??_strncmp+1)& (0+255),f,b
 21726  003A82  C066  FFD9         	movff	strncmp@s1,fsr2l
 21727  003A86  C067  FFDA         	movff	strncmp@s1+1,fsr2h
 21728  003A8A  50DF               	movf	indf2,w,c
 21729  003A8C  6F6E               	movwf	(??_strncmp+2)& (0+255),b
 21730  003A8E  516E               	movf	(??_strncmp+2)& (0+255),w,b
 21731  003A90  256C               	addwf	??_strncmp& (0+255),w,b
 21732  003A92  6F66               	movwf	?_strncmp& (0+255),b
 21733  003A94  0E00               	movlw	0
 21734  003A96  216D               	addwfc	(??_strncmp+1)& (0+255),w,b
 21735  003A98  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21736                           
 21737                           ; BSR set to: 0
 21738  003A9A  0012               	return	
 21739  003A9C                     l2833:
 21740                           
 21741                           ; BSR set to: 0
 21742                           
 21743                           ; BSR set to: 0
 21744  003A9C  4B66               	infsnz	strncmp@s1& (0+255),f,b
 21745  003A9E  2B67               	incf	(strncmp@s1+1)& (0+255),f,b
 21746  003AA0  4B68               	infsnz	strncmp@s2& (0+255),f,b
 21747  003AA2  2B69               	incf	(strncmp@s2+1)& (0+255),f,b
 21748  003AA4                     l2831:
 21749                           
 21750                           ; BSR set to: 0
 21751  003AA4  0100               	movlb	0	; () banked
 21752  003AA6  076A               	decf	strncmp@len& (0+255),f,b
 21753  003AA8  A0D8               	btfss	status,0,c
 21754  003AAA  076B               	decf	(strncmp@len+1)& (0+255),f,b
 21755  003AAC  296A               	incf	strncmp@len& (0+255),w,b
 21756  003AAE  E1C3               	bnz	l7601
 21757  003AB0  296B               	incf	(strncmp@len+1)& (0+255),w,b
 21758  003AB2  A4D8               	btfss	status,2,c
 21759  003AB4  D7C0               	goto	l2832
 21760                           
 21761                           ; BSR set to: 0
 21762                           
 21763                           ; BSR set to: 0
 21764  003AB6  0E00               	movlw	0
 21765  003AB8  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21766  003ABA  0E00               	movlw	0
 21767  003ABC  6F66               	movwf	?_strncmp& (0+255),b
 21768  003ABE  0012               	return	
 21769  003AC0                     __end_of_strncmp:
 21770                           	opt stack 0
 21771                           tosu	equ	0xFFF
 21772                           tosh	equ	0xFFE
 21773                           tosl	equ	0xFFD
 21774                           pclath	equ	0xFFA
 21775                           tblptru	equ	0xFF8
 21776                           tblptrh	equ	0xFF7
 21777                           tblptrl	equ	0xFF6
 21778                           tablat	equ	0xFF5
 21779                           prodh	equ	0xFF4
 21780                           prodl	equ	0xFF3
 21781                           intcon	equ	0xFF2
 21782                           intcon2	equ	0xFF1
 21783                           intcon3	equ	0xFF0
 21784                           indf0	equ	0xFEF
 21785                           postinc0	equ	0xFEE
 21786                           plusw0	equ	0xFEB
 21787                           fsr0h	equ	0xFEA
 21788                           fsr0l	equ	0xFE9
 21789                           wreg	equ	0xFE8
 21790                           indf1	equ	0xFE7
 21791                           postinc1	equ	0xFE6
 21792                           postdec1	equ	0xFE5
 21793                           fsr1h	equ	0xFE2
 21794                           fsr1l	equ	0xFE1
 21795                           indf2	equ	0xFDF
 21796                           postinc2	equ	0xFDE
 21797                           postdec2	equ	0xFDD
 21798                           plusw2	equ	0xFDB
 21799                           fsr2h	equ	0xFDA
 21800                           fsr2l	equ	0xFD9
 21801                           status	equ	0xFD8
 21802                           
 21803 ;; *************** function _strlen *****************
 21804 ;; Defined at:
 21805 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 21806 ;; Parameters:    Size  Location     Type
 21807 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 21808 ;;		 -> Term_MainSm@Data(50), STR_18(2), STR_14(8), STR_2(5), 
 21809 ;;		 -> STR_1(6), 
 21810 ;; Auto vars:     Size  Location     Type
 21811 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 21812 ;;		 -> Term_MainSm@Data(50), STR_18(2), STR_14(8), STR_2(5), 
 21813 ;;		 -> STR_1(6), 
 21814 ;; Return value:  Size  Location     Type
 21815 ;;                  2    0[BANK0 ] unsigned int 
 21816 ;; Registers used:
 21817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21818 ;; Tracked objects:
 21819 ;;		On entry : 0/0
 21820 ;;		On exit  : 0/0
 21821 ;;		Unchanged: 0/0
 21822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21823 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21824 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21825 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21826 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21827 ;;Total ram usage:        6 bytes
 21828 ;; Hardware stack levels used:    1
 21829 ;; Hardware stack levels required when called:   11
 21830 ;; This function calls:
 21831 ;;		Nothing
 21832 ;; This function is called by:
 21833 ;;		_Term_MainSm
 21834 ;;		_strstr
 21835 ;; This function uses a non-reentrant model
 21836 ;;
 21837                           
 21838                           	psect	text98
 21839  0042DC                     __ptext98:
 21840                           	opt stack 0
 21841  0042DC                     _strlen:
 21842                           	opt stack 15
 21843                           
 21844                           ; BSR set to: 0
 21845                           ;incstack = 0
 21846  0042DC  C060  F064         	movff	strlen@s,strlen@cp
 21847  0042E0  C061  F065         	movff	strlen@s+1,strlen@cp+1
 21848  0042E4  D003               	goto	l2730
 21849  0042E6  0100               	movlb	0	; () banked
 21850  0042E8  4B64               	infsnz	strlen@cp& (0+255),f,b
 21851  0042EA  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 21852  0042EC                     l2730:
 21853                           
 21854                           ; BSR set to: 0
 21855  0042EC  C064  FFF6         	movff	strlen@cp,tblptrl
 21856  0042F0  C065  FFF7         	movff	strlen@cp+1,tblptrh
 21857  0042F4  6AF8               	clrf	tblptru,c
 21858  0042F6  0E0E               	movlw	(high __ramtop+-1)
 21859  0042F8  64F7               	cpfsgt	tblptrh,c
 21860  0042FA  D003               	bra	u5777
 21861  0042FC  0008               	tblrd		*
 21862  0042FE  50F5               	movf	tablat,w,c
 21863  004300  D005               	bra	u5770
 21864  004302                     u5777:
 21865  004302  CFF6 FFE9          	movff	tblptrl,fsr0l
 21866  004306  CFF7 FFEA          	movff	tblptrh,fsr0h
 21867  00430A  50EF               	movf	indf0,w,c
 21868  00430C                     u5770:
 21869  00430C  0900               	iorlw	0
 21870  00430E  A4D8               	btfss	status,2,c
 21871  004310  D7EA               	goto	l2731
 21872  004312  C060  F062         	movff	strlen@s,??_strlen
 21873  004316  C061  F063         	movff	strlen@s+1,??_strlen+1
 21874  00431A  0100               	movlb	0	; () banked
 21875  00431C  1F62               	comf	??_strlen& (0+255),f,b
 21876  00431E  1F63               	comf	(??_strlen+1)& (0+255),f,b
 21877  004320  4B62               	infsnz	??_strlen& (0+255),f,b
 21878  004322  2B63               	incf	(??_strlen+1)& (0+255),f,b
 21879  004324  5164               	movf	strlen@cp& (0+255),w,b
 21880  004326  2562               	addwf	??_strlen& (0+255),w,b
 21881  004328  6F60               	movwf	?_strlen& (0+255),b
 21882  00432A  5165               	movf	(strlen@cp+1)& (0+255),w,b
 21883  00432C  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 21884  00432E  6F61               	movwf	(?_strlen+1)& (0+255),b
 21885  004330  0012               	return	
 21886  004332                     __end_of_strlen:
 21887                           	opt stack 0
 21888                           tosu	equ	0xFFF
 21889                           tosh	equ	0xFFE
 21890                           tosl	equ	0xFFD
 21891                           pclath	equ	0xFFA
 21892                           tblptru	equ	0xFF8
 21893                           tblptrh	equ	0xFF7
 21894                           tblptrl	equ	0xFF6
 21895                           tablat	equ	0xFF5
 21896                           prodh	equ	0xFF4
 21897                           prodl	equ	0xFF3
 21898                           intcon	equ	0xFF2
 21899                           intcon2	equ	0xFF1
 21900                           intcon3	equ	0xFF0
 21901                           indf0	equ	0xFEF
 21902                           postinc0	equ	0xFEE
 21903                           plusw0	equ	0xFEB
 21904                           fsr0h	equ	0xFEA
 21905                           fsr0l	equ	0xFE9
 21906                           wreg	equ	0xFE8
 21907                           indf1	equ	0xFE7
 21908                           postinc1	equ	0xFE6
 21909                           postdec1	equ	0xFE5
 21910                           fsr1h	equ	0xFE2
 21911                           fsr1l	equ	0xFE1
 21912                           indf2	equ	0xFDF
 21913                           postinc2	equ	0xFDE
 21914                           postdec2	equ	0xFDD
 21915                           plusw2	equ	0xFDB
 21916                           fsr2h	equ	0xFDA
 21917                           fsr2l	equ	0xFD9
 21918                           status	equ	0xFD8
 21919                           
 21920 ;; *************** function _strchr *****************
 21921 ;; Defined at:
 21922 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 21923 ;; Parameters:    Size  Location     Type
 21924 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 21925 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(250), 
 21926 ;;		 -> WifiRxPacket(253), 
 21927 ;;  chr             2    2[BANK0 ] int 
 21928 ;; Auto vars:     Size  Location     Type
 21929 ;;		None
 21930 ;; Return value:  Size  Location     Type
 21931 ;;                  2    0[BANK0 ] PTR unsigned char 
 21932 ;; Registers used:
 21933 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21934 ;; Tracked objects:
 21935 ;;		On entry : 0/0
 21936 ;;		On exit  : 0/0
 21937 ;;		Unchanged: 0/0
 21938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21939 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21941 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21942 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21943 ;;Total ram usage:        5 bytes
 21944 ;; Hardware stack levels used:    1
 21945 ;; Hardware stack levels required when called:   11
 21946 ;; This function calls:
 21947 ;;		Nothing
 21948 ;; This function is called by:
 21949 ;;		_strstr
 21950 ;; This function uses a non-reentrant model
 21951 ;;
 21952                           
 21953                           	psect	text99
 21954  0048C6                     __ptext99:
 21955                           	opt stack 0
 21956  0048C6                     _strchr:
 21957                           	opt stack 14
 21958                           
 21959                           ; BSR set to: 0
 21960                           ;incstack = 0
 21961  0048C6  C060  FFD9         	movff	strchr@ptr,fsr2l
 21962  0048CA  C061  FFDA         	movff	strchr@ptr+1,fsr2h
 21963  0048CE  0100               	movlb	0	; () banked
 21964  0048D0  5162               	movf	strchr@chr& (0+255),w,b
 21965  0048D2  18DE               	xorwf	postinc2,w,c
 21966  0048D4  A4D8               	btfss	status,2,c
 21967  0048D6  D005               	goto	l2826
 21968                           
 21969                           ; BSR set to: 0
 21970  0048D8  C060  F060         	movff	strchr@ptr,?_strchr
 21971  0048DC  C061  F061         	movff	strchr@ptr+1,?_strchr+1
 21972                           
 21973                           ; BSR set to: 0
 21974  0048E0  0012               	return	
 21975  0048E2                     l2826:
 21976                           
 21977                           ; BSR set to: 0
 21978                           
 21979                           ; BSR set to: 0
 21980  0048E2  C060  FFD9         	movff	strchr@ptr,fsr2l
 21981  0048E6  C061  FFDA         	movff	strchr@ptr+1,fsr2h
 21982  0048EA  4B60               	infsnz	strchr@ptr& (0+255),f,b
 21983  0048EC  2B61               	incf	(strchr@ptr+1)& (0+255),f,b
 21984  0048EE  50DF               	movf	indf2,w,c
 21985  0048F0  A4D8               	btfss	status,2,c
 21986  0048F2  D7E9               	goto	_strchr
 21987                           
 21988                           ; BSR set to: 0
 21989                           
 21990                           ; BSR set to: 0
 21991  0048F4  0E00               	movlw	0
 21992  0048F6  6F60               	movwf	?_strchr& (0+255),b
 21993  0048F8  0E00               	movlw	0
 21994  0048FA  6F61               	movwf	(?_strchr+1)& (0+255),b
 21995  0048FC  0012               	return	
 21996  0048FE                     __end_of_strchr:
 21997                           	opt stack 0
 21998                           tosu	equ	0xFFF
 21999                           tosh	equ	0xFFE
 22000                           tosl	equ	0xFFD
 22001                           pclath	equ	0xFFA
 22002                           tblptru	equ	0xFF8
 22003                           tblptrh	equ	0xFF7
 22004                           tblptrl	equ	0xFF6
 22005                           tablat	equ	0xFF5
 22006                           prodh	equ	0xFF4
 22007                           prodl	equ	0xFF3
 22008                           intcon	equ	0xFF2
 22009                           intcon2	equ	0xFF1
 22010                           intcon3	equ	0xFF0
 22011                           indf0	equ	0xFEF
 22012                           postinc0	equ	0xFEE
 22013                           plusw0	equ	0xFEB
 22014                           fsr0h	equ	0xFEA
 22015                           fsr0l	equ	0xFE9
 22016                           wreg	equ	0xFE8
 22017                           indf1	equ	0xFE7
 22018                           postinc1	equ	0xFE6
 22019                           postdec1	equ	0xFE5
 22020                           fsr1h	equ	0xFE2
 22021                           fsr1l	equ	0xFE1
 22022                           indf2	equ	0xFDF
 22023                           postinc2	equ	0xFDE
 22024                           postdec2	equ	0xFDD
 22025                           plusw2	equ	0xFDB
 22026                           fsr2h	equ	0xFDA
 22027                           fsr2l	equ	0xFD9
 22028                           status	equ	0xFD8
 22029                           
 22030 ;; *************** function _strcpy *****************
 22031 ;; Defined at:
 22032 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 22033 ;; Parameters:    Size  Location     Type
 22034 ;;  to              2    0[BANK0 ] PTR unsigned char 
 22035 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 22036 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 22037 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), BufferLocal(100), SendDataSm@Data(103), AddressLocal(25), 
 22038 ;;		 -> StartConnectionSm@Data(100), 
 22039 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 22040 ;;		 -> STR_62(21), STR_58(20), STR_53(14), STR_49(10), 
 22041 ;;		 -> STR_43(10), STR_41(13), STR_40(12), STR_36(11), 
 22042 ;;		 -> STR_32(12), STR_26(10), STR_21(11), BufferLocal(100), 
 22043 ;;		 -> STR_15(12), STR_3(13), 
 22044 ;; Auto vars:     Size  Location     Type
 22045 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 22046 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 22047 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 22048 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), BufferLocal(100), SendDataSm@Data(103), AddressLocal(25), 
 22049 ;;		 -> StartConnectionSm@Data(100), 
 22050 ;; Return value:  Size  Location     Type
 22051 ;;                  2    0[BANK0 ] PTR unsigned char 
 22052 ;; Registers used:
 22053 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22054 ;; Tracked objects:
 22055 ;;		On entry : 0/0
 22056 ;;		On exit  : 0/0
 22057 ;;		Unchanged: 0/0
 22058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22059 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22060 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22062 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22063 ;;Total ram usage:        6 bytes
 22064 ;; Hardware stack levels used:    1
 22065 ;; Hardware stack levels required when called:   11
 22066 ;; This function calls:
 22067 ;;		Nothing
 22068 ;; This function is called by:
 22069 ;;		_StartConnectionSm
 22070 ;;		_SendDataSm
 22071 ;;		_Term_MainSm
 22072 ;;		_MdmWifiCmd_SetWifiMode
 22073 ;;		_MdmWifiCmd_JoinAccessPoint
 22074 ;;		_MdmWifiCmd_SetTransferMode
 22075 ;;		_MdmWifiCmd_SetConnectionMode
 22076 ;;		_MdmWifiCmd_StartConnection
 22077 ;;		_MdmWifiCmd_SendData
 22078 ;;		_MdmWifiCmd_CloseConnection
 22079 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 22080 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 22081 ;;		_MdmWifiCmd_ConfigureServer
 22082 ;; This function uses a non-reentrant model
 22083 ;;
 22084                           
 22085                           	psect	text100
 22086  0045F2                     __ptext100:
 22087                           	opt stack 0
 22088  0045F2                     _strcpy:
 22089                           	opt stack 15
 22090                           
 22091                           ; BSR set to: 0
 22092                           ;incstack = 0
 22093  0045F2  C060  F064         	movff	strcpy@to,strcpy@cp
 22094  0045F6  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 22095  0045FA  D005               	goto	l2724
 22096  0045FC  0100               	movlb	0	; () banked
 22097  0045FE  4B64               	infsnz	strcpy@cp& (0+255),f,b
 22098  004600  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 22099  004602  4B62               	infsnz	strcpy@from& (0+255),f,b
 22100  004604  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 22101  004606                     l2724:
 22102                           
 22103                           ; BSR set to: 0
 22104  004606  C062  FFF6         	movff	strcpy@from,tblptrl
 22105  00460A  C063  FFF7         	movff	strcpy@from+1,tblptrh
 22106  00460E  6AF8               	clrf	tblptru,c
 22107  004610  C064  FFD9         	movff	strcpy@cp,fsr2l
 22108  004614  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 22109  004618  0E0E               	movlw	(high __ramtop+-1)
 22110  00461A  64F7               	cpfsgt	tblptrh,c
 22111  00461C  D003               	bra	u6297
 22112  00461E  0008               	tblrd		*
 22113  004620  50F5               	movf	tablat,w,c
 22114  004622  D005               	bra	u6290
 22115  004624                     u6297:
 22116  004624  CFF6 FFE9          	movff	tblptrl,fsr0l
 22117  004628  CFF7 FFEA          	movff	tblptrh,fsr0h
 22118  00462C  50EF               	movf	indf0,w,c
 22119  00462E                     u6290:
 22120  00462E  6EDF               	movwf	indf2,c
 22121  004630  50DF               	movf	indf2,w,c
 22122  004632  B4D8               	btfsc	status,2,c
 22123  004634  0012               	return	
 22124  004636  D7E2               	goto	l2725
 22125  004638                     __end_of_strcpy:
 22126                           	opt stack 0
 22127                           tosu	equ	0xFFF
 22128                           tosh	equ	0xFFE
 22129                           tosl	equ	0xFFD
 22130                           pclath	equ	0xFFA
 22131                           tblptru	equ	0xFF8
 22132                           tblptrh	equ	0xFF7
 22133                           tblptrl	equ	0xFF6
 22134                           tablat	equ	0xFF5
 22135                           prodh	equ	0xFF4
 22136                           prodl	equ	0xFF3
 22137                           intcon	equ	0xFF2
 22138                           intcon2	equ	0xFF1
 22139                           intcon3	equ	0xFF0
 22140                           indf0	equ	0xFEF
 22141                           postinc0	equ	0xFEE
 22142                           plusw0	equ	0xFEB
 22143                           fsr0h	equ	0xFEA
 22144                           fsr0l	equ	0xFE9
 22145                           wreg	equ	0xFE8
 22146                           indf1	equ	0xFE7
 22147                           postinc1	equ	0xFE6
 22148                           postdec1	equ	0xFE5
 22149                           fsr1h	equ	0xFE2
 22150                           fsr1l	equ	0xFE1
 22151                           indf2	equ	0xFDF
 22152                           postinc2	equ	0xFDE
 22153                           postdec2	equ	0xFDD
 22154                           plusw2	equ	0xFDB
 22155                           fsr2h	equ	0xFDA
 22156                           fsr2l	equ	0xFD9
 22157                           status	equ	0xFD8
 22158                           
 22159 ;; *************** function _strcat *****************
 22160 ;; Defined at:
 22161 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 22162 ;; Parameters:    Size  Location     Type
 22163 ;;  to              2    0[BANK0 ] PTR unsigned char 
 22164 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 22165 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 22166 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22167 ;;  from            3    2[BANK0 ] PTR const unsigned char 
 22168 ;;		 -> STR_65(3), STR_64(2), STR_63(2), Term_MainSm@FwkBuildYearStr(4), 
 22169 ;;		 -> Term_MainSm@FwkBuildMonthStr(4), Term_MainSm@FwkBuildDayStr(4), STR_61(3), STR_60(2), 
 22170 ;;		 -> STR_59(2), Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 22171 ;;		 -> STR_57(3), MdmWifiCmd_ConfigureServer@PortAscii(10), STR_56(2), STR_55(2), 
 22172 ;;		 -> STR_54(2), STR_52(3), STR_51(2), STR_50(2), 
 22173 ;;		 -> STR_48(3), MdmWifiCmd_ConfigureSoftAPMode@EncAscii(5), STR_47(2), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(5), 
 22174 ;;		 -> STR_46(3), STR_45(4), STR_44(2), STR_42(3), 
 22175 ;;		 -> MdmWifiCmd_CloseConnection@IdAscii(1), STR_39(3), STR_38(2), STR_37(2), 
 22176 ;;		 -> STR_35(3), STR_34(2), STR_33(2), STR_30(3), 
 22177 ;;		 -> STR_29(2), STR_28(4), STR_27(2), STR_25(3), 
 22178 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_19(3), 
 22179 ;;		 -> STR_17(3), SendDataSm@LenAscii(4), STR_16(2), SendDataSm@IdAscii(1), 
 22180 ;;		 -> ROM(65527), STR_13(3), STR_12(2), StartConnectionSm@PortAscii(4), 
 22181 ;;		 -> STR_11(2), AddressLocal(25), STR_10(2), STR_9(2), 
 22182 ;;		 -> STR_8(2), STR_7(4), STR_6(4), STR_5(2), 
 22183 ;;		 -> STR_4(2), StartConnectionSm@IdAscii(1), 
 22184 ;; Auto vars:     Size  Location     Type
 22185 ;;  cp              2    5[BANK0 ] PTR unsigned char 
 22186 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 22187 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 22188 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22189 ;; Return value:  Size  Location     Type
 22190 ;;                  2    0[BANK0 ] PTR unsigned char 
 22191 ;; Registers used:
 22192 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22193 ;; Tracked objects:
 22194 ;;		On entry : 0/0
 22195 ;;		On exit  : 0/0
 22196 ;;		Unchanged: 0/0
 22197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22198 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22199 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22201 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22202 ;;Total ram usage:        7 bytes
 22203 ;; Hardware stack levels used:    1
 22204 ;; Hardware stack levels required when called:   11
 22205 ;; This function calls:
 22206 ;;		Nothing
 22207 ;; This function is called by:
 22208 ;;		_StartConnectionSm
 22209 ;;		_SendDataSm
 22210 ;;		_Term_MainSm
 22211 ;;		_MdmWifiCmd_SetWifiMode
 22212 ;;		_MdmWifiCmd_JoinAccessPoint
 22213 ;;		_MdmWifiCmd_SetTransferMode
 22214 ;;		_MdmWifiCmd_SetConnectionMode
 22215 ;;		_MdmWifiCmd_CloseConnection
 22216 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 22217 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 22218 ;;		_MdmWifiCmd_ConfigureServer
 22219 ;; This function uses a non-reentrant model
 22220 ;;
 22221                           
 22222                           	psect	text101
 22223  004052                     __ptext101:
 22224                           	opt stack 0
 22225  004052                     _strcat:
 22226                           	opt stack 15
 22227                           
 22228                           ;incstack = 0
 22229  004052  C060  F065         	movff	strcat@to,strcat@cp
 22230  004056  C061  F066         	movff	strcat@to+1,strcat@cp+1
 22231  00405A  D003               	goto	l2715
 22232  00405C  0100               	movlb	0	; () banked
 22233  00405E  4B65               	infsnz	strcat@cp& (0+255),f,b
 22234  004060  2B66               	incf	(strcat@cp+1)& (0+255),f,b
 22235  004062                     l2715:
 22236                           
 22237                           ; BSR set to: 0
 22238  004062  C065  FFD9         	movff	strcat@cp,fsr2l
 22239  004066  C066  FFDA         	movff	strcat@cp+1,fsr2h
 22240  00406A  50DF               	movf	indf2,w,c
 22241  00406C  B4D8               	btfsc	status,2,c
 22242  00406E  D00A               	goto	l2718
 22243  004070  D7F5               	goto	l2716
 22244  004072  0100               	movlb	0	; () banked
 22245  004074  4B65               	infsnz	strcat@cp& (0+255),f,b
 22246  004076  2B66               	incf	(strcat@cp+1)& (0+255),f,b
 22247                           
 22248                           ; BSR set to: 0
 22249  004078  0E01               	movlw	1
 22250  00407A  2762               	addwf	strcat@from& (0+255),f,b
 22251  00407C  0E00               	movlw	0
 22252  00407E  2363               	addwfc	(strcat@from+1)& (0+255),f,b
 22253  004080  0E00               	movlw	0
 22254  004082  2364               	addwfc	(strcat@from+2)& (0+255),f,b
 22255  004084                     l2718:
 22256                           
 22257                           ; BSR set to: 0
 22258  004084  C062  FFF6         	movff	strcat@from,tblptrl
 22259  004088  C063  FFF7         	movff	strcat@from+1,tblptrh
 22260  00408C  C064  FFF8         	movff	strcat@from+2,tblptru
 22261  004090  C065  FFD9         	movff	strcat@cp,fsr2l
 22262  004094  C066  FFDA         	movff	strcat@cp+1,fsr2h
 22263  004098  BAF8               	btfsc	tblptru,5,c
 22264  00409A  D003               	bra	u6327
 22265  00409C  0008               	tblrd		*
 22266  00409E  50F5               	movf	tablat,w,c
 22267  0040A0  D005               	bra	u6320
 22268  0040A2                     u6327:
 22269  0040A2  CFF6 FFE9          	movff	tblptrl,fsr0l
 22270  0040A6  CFF7 FFEA          	movff	tblptrh,fsr0h
 22271  0040AA  50EF               	movf	indf0,w,c
 22272  0040AC                     u6320:
 22273  0040AC  6EDF               	movwf	indf2,c
 22274  0040AE  50DF               	movf	indf2,w,c
 22275  0040B0  B4D8               	btfsc	status,2,c
 22276  0040B2  0012               	return	
 22277  0040B4  D7DE               	goto	l2719
 22278  0040B6                     __end_of_strcat:
 22279                           	opt stack 0
 22280                           tosu	equ	0xFFF
 22281                           tosh	equ	0xFFE
 22282                           tosl	equ	0xFFD
 22283                           pclath	equ	0xFFA
 22284                           tblptru	equ	0xFF8
 22285                           tblptrh	equ	0xFF7
 22286                           tblptrl	equ	0xFF6
 22287                           tablat	equ	0xFF5
 22288                           prodh	equ	0xFF4
 22289                           prodl	equ	0xFF3
 22290                           intcon	equ	0xFF2
 22291                           intcon2	equ	0xFF1
 22292                           intcon3	equ	0xFF0
 22293                           indf0	equ	0xFEF
 22294                           postinc0	equ	0xFEE
 22295                           plusw0	equ	0xFEB
 22296                           fsr0h	equ	0xFEA
 22297                           fsr0l	equ	0xFE9
 22298                           wreg	equ	0xFE8
 22299                           indf1	equ	0xFE7
 22300                           postinc1	equ	0xFE6
 22301                           postdec1	equ	0xFE5
 22302                           fsr1h	equ	0xFE2
 22303                           fsr1l	equ	0xFE1
 22304                           indf2	equ	0xFDF
 22305                           postinc2	equ	0xFDE
 22306                           postdec2	equ	0xFDD
 22307                           plusw2	equ	0xFDB
 22308                           fsr2h	equ	0xFDA
 22309                           fsr2l	equ	0xFD9
 22310                           status	equ	0xFD8
 22311                           
 22312 ;; *************** function _MdmWifi_SendWifiMsg *****************
 22313 ;; Defined at:
 22314 ;;		line 424 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 22315 ;; Parameters:    Size  Location     Type
 22316 ;;  TxBuffer        2    6[BANK0 ] PTR unsigned char 
 22317 ;;		 -> MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifiCmd_ConfigureSoftAPMod
      +e@Data(100), MdmWifiCmd_CloseConnection@Data(20), 
 22318 ;;		 -> MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20), STR_31(11), MdmWifiCmd_JoinAccessPoi
      +nt@Data(100), 
 22319 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), STR_20(9), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22320 ;; Auto vars:     Size  Location     Type
 22321 ;;		None
 22322 ;; Return value:  Size  Location     Type
 22323 ;;                  1    wreg      void 
 22324 ;; Registers used:
 22325 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22326 ;; Tracked objects:
 22327 ;;		On entry : 0/0
 22328 ;;		On exit  : 0/0
 22329 ;;		Unchanged: 0/0
 22330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22331 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22334 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22335 ;;Total ram usage:        2 bytes
 22336 ;; Hardware stack levels used:    1
 22337 ;; Hardware stack levels required when called:   13
 22338 ;; This function calls:
 22339 ;;		_Uart_WriteString
 22340 ;; This function is called by:
 22341 ;;		_StartConnectionSm
 22342 ;;		_SendDataSm
 22343 ;;		_MdmWifiCmd_RestartModem
 22344 ;;		_MdmWifiCmd_SetWifiMode
 22345 ;;		_MdmWifiCmd_JoinAccessPoint
 22346 ;;		_MdmWifiCmd_QuitAccessPoint
 22347 ;;		_MdmWifiCmd_SetTransferMode
 22348 ;;		_MdmWifiCmd_SetConnectionMode
 22349 ;;		_MdmWifiCmd_CloseConnection
 22350 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 22351 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 22352 ;;		_MdmWifiCmd_ConfigureServer
 22353 ;; This function uses a non-reentrant model
 22354 ;;
 22355                           
 22356                           	psect	text102
 22357  004EC6                     __ptext102:
 22358                           	opt stack 0
 22359  004EC6                     _MdmWifi_SendWifiMsg:
 22360                           	opt stack 13
 22361                           
 22362                           ;mdm_wifi.c: 427: Uart_WriteString(((UINT8)(1)), TxBuffer);
 22363                           
 22364                           ;incstack = 0
 22365  004EC6  C066  F063         	movff	MdmWifi_SendWifiMsg@TxBuffer,Uart_WriteString@StringToWrite
 22366  004ECA  C067  F064         	movff	MdmWifi_SendWifiMsg@TxBuffer+1,Uart_WriteString@StringToWrite+1
 22367  004ECE  0E01               	movlw	1
 22368  004ED0  ECC0  F01F         	call	_Uart_WriteString
 22369  004ED4  0012               	return		;funcret
 22370  004ED6                     __end_of_MdmWifi_SendWifiMsg:
 22371                           	opt stack 0
 22372                           tosu	equ	0xFFF
 22373                           tosh	equ	0xFFE
 22374                           tosl	equ	0xFFD
 22375                           pclath	equ	0xFFA
 22376                           tblptru	equ	0xFF8
 22377                           tblptrh	equ	0xFF7
 22378                           tblptrl	equ	0xFF6
 22379                           tablat	equ	0xFF5
 22380                           prodh	equ	0xFF4
 22381                           prodl	equ	0xFF3
 22382                           intcon	equ	0xFF2
 22383                           intcon2	equ	0xFF1
 22384                           intcon3	equ	0xFF0
 22385                           indf0	equ	0xFEF
 22386                           postinc0	equ	0xFEE
 22387                           plusw0	equ	0xFEB
 22388                           fsr0h	equ	0xFEA
 22389                           fsr0l	equ	0xFE9
 22390                           wreg	equ	0xFE8
 22391                           indf1	equ	0xFE7
 22392                           postinc1	equ	0xFE6
 22393                           postdec1	equ	0xFE5
 22394                           fsr1h	equ	0xFE2
 22395                           fsr1l	equ	0xFE1
 22396                           indf2	equ	0xFDF
 22397                           postinc2	equ	0xFDE
 22398                           postdec2	equ	0xFDD
 22399                           plusw2	equ	0xFDB
 22400                           fsr2h	equ	0xFDA
 22401                           fsr2l	equ	0xFD9
 22402                           status	equ	0xFD8
 22403                           
 22404 ;; *************** function _Uart_WriteString *****************
 22405 ;; Defined at:
 22406 ;;		line 506 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22407 ;; Parameters:    Size  Location     Type
 22408 ;;  Module          1    wreg     unsigned char 
 22409 ;;  StringToWrit    2    3[BANK0 ] PTR unsigned char 
 22410 ;;		 -> MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifiCmd_ConfigureSoftAPMod
      +e@Data(100), MdmWifiCmd_CloseConnection@Data(20), 
 22411 ;;		 -> MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20), STR_31(11), MdmWifiCmd_JoinAccessPoi
      +nt@Data(100), 
 22412 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), STR_20(9), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22413 ;; Auto vars:     Size  Location     Type
 22414 ;;  Module          1    5[BANK0 ] unsigned char 
 22415 ;; Return value:  Size  Location     Type
 22416 ;;                  1    wreg      void 
 22417 ;; Registers used:
 22418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22419 ;; Tracked objects:
 22420 ;;		On entry : 0/0
 22421 ;;		On exit  : 0/0
 22422 ;;		Unchanged: 0/0
 22423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22424 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22425 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22427 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22428 ;;Total ram usage:        3 bytes
 22429 ;; Hardware stack levels used:    1
 22430 ;; Hardware stack levels required when called:   12
 22431 ;; This function calls:
 22432 ;;		_UartTxBufferStatus
 22433 ;;		_UartWriteByte
 22434 ;; This function is called by:
 22435 ;;		_MdmWifi_SendWifiMsg
 22436 ;; This function uses a non-reentrant model
 22437 ;;
 22438                           
 22439                           	psect	text103
 22440  003F80                     __ptext103:
 22441                           	opt stack 0
 22442  003F80                     _Uart_WriteString:
 22443                           	opt stack 13
 22444                           
 22445                           ;incstack = 0
 22446                           ;Uart_WriteString@Module stored from wreg
 22447  003F80  0100               	movlb	0	; () banked
 22448  003F82  6F65               	movwf	Uart_WriteString@Module& (0+255),b
 22449                           
 22450                           ;uart_drv.c: 509: while (*StringToWrite)
 22451  003F84  D01F               	goto	u5330
 22452  003F86                     
 22453                           ;uart_drv.c: 510: {
 22454                           ;uart_drv.c: 512: UartWriteByte(Module, *StringToWrite);
 22455  003F86  C063  FFF6         	movff	Uart_WriteString@StringToWrite,tblptrl
 22456  003F8A  C064  FFF7         	movff	Uart_WriteString@StringToWrite+1,tblptrh
 22457  003F8E  6AF8               	clrf	tblptru,c
 22458  003F90  0E0E               	movlw	(high __ramtop+-1)
 22459  003F92  64F7               	cpfsgt	tblptrh,c
 22460  003F94  D003               	bra	u5327
 22461  003F96  0008               	tblrd		*
 22462  003F98  50F5               	movf	tablat,w,c
 22463  003F9A  D005               	bra	u5320
 22464  003F9C                     u5327:
 22465  003F9C  CFF6 FFE9          	movff	tblptrl,fsr0l
 22466  003FA0  CFF7 FFEA          	movff	tblptrh,fsr0h
 22467  003FA4  50EF               	movf	indf0,w,c
 22468  003FA6                     u5320:
 22469  003FA6  0100               	movlb	0	; () banked
 22470  003FA8  6F60               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 22471  003FAA  5165               	movf	Uart_WriteString@Module& (0+255),w,b
 22472  003FAC  EC9D  F026         	call	_UartWriteByte
 22473                           
 22474                           ;uart_drv.c: 514: StringToWrite++;
 22475  003FB0  0100               	movlb	0	; () banked
 22476  003FB2  4B63               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 22477  003FB4  2B64               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 22478  003FB6                     
 22479                           ; BSR set to: 0
 22480                           
 22481                           ; BSR set to: 0
 22482  003FB6  0100               	movlb	0	; () banked
 22483  003FB8  5165               	movf	Uart_WriteString@Module& (0+255),w,b
 22484  003FBA  EC17  F022         	call	_UartTxBufferStatus
 22485  003FBE  06E8               	decf	wreg,f,c
 22486  003FC0  B4D8               	btfsc	status,2,c
 22487  003FC2  D7F9               	goto	l572
 22488  003FC4                     u5330:
 22489  003FC4  C063  FFF6         	movff	Uart_WriteString@StringToWrite,tblptrl
 22490  003FC8  C064  FFF7         	movff	Uart_WriteString@StringToWrite+1,tblptrh
 22491  003FCC  6AF8               	clrf	tblptru,c
 22492  003FCE  0E0E               	movlw	(high __ramtop+-1)
 22493  003FD0  64F7               	cpfsgt	tblptrh,c
 22494  003FD2  D003               	bra	u5347
 22495  003FD4  0008               	tblrd		*
 22496  003FD6  50F5               	movf	tablat,w,c
 22497  003FD8  D005               	bra	u5340
 22498  003FDA                     u5347:
 22499  003FDA  CFF6 FFE9          	movff	tblptrl,fsr0l
 22500  003FDE  CFF7 FFEA          	movff	tblptrh,fsr0h
 22501  003FE2  50EF               	movf	indf0,w,c
 22502  003FE4                     u5340:
 22503  003FE4  0900               	iorlw	0
 22504  003FE6  B4D8               	btfsc	status,2,c
 22505  003FE8  0012               	return	
 22506  003FEA  D7CD               	goto	l570
 22507  003FEC                     __end_of_Uart_WriteString:
 22508                           	opt stack 0
 22509                           tosu	equ	0xFFF
 22510                           tosh	equ	0xFFE
 22511                           tosl	equ	0xFFD
 22512                           pclath	equ	0xFFA
 22513                           tblptru	equ	0xFF8
 22514                           tblptrh	equ	0xFF7
 22515                           tblptrl	equ	0xFF6
 22516                           tablat	equ	0xFF5
 22517                           prodh	equ	0xFF4
 22518                           prodl	equ	0xFF3
 22519                           intcon	equ	0xFF2
 22520                           intcon2	equ	0xFF1
 22521                           intcon3	equ	0xFF0
 22522                           indf0	equ	0xFEF
 22523                           postinc0	equ	0xFEE
 22524                           plusw0	equ	0xFEB
 22525                           fsr0h	equ	0xFEA
 22526                           fsr0l	equ	0xFE9
 22527                           wreg	equ	0xFE8
 22528                           indf1	equ	0xFE7
 22529                           postinc1	equ	0xFE6
 22530                           postdec1	equ	0xFE5
 22531                           fsr1h	equ	0xFE2
 22532                           fsr1l	equ	0xFE1
 22533                           indf2	equ	0xFDF
 22534                           postinc2	equ	0xFDE
 22535                           postdec2	equ	0xFDD
 22536                           plusw2	equ	0xFDB
 22537                           fsr2h	equ	0xFDA
 22538                           fsr2l	equ	0xFD9
 22539                           status	equ	0xFD8
 22540                           
 22541 ;; *************** function _UartWriteByte *****************
 22542 ;; Defined at:
 22543 ;;		line 173 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22544 ;; Parameters:    Size  Location     Type
 22545 ;;  Module          1    wreg     unsigned char 
 22546 ;;  ByteToWrite     1    0[BANK0 ] unsigned char 
 22547 ;; Auto vars:     Size  Location     Type
 22548 ;;  Module          1    1[BANK0 ] unsigned char 
 22549 ;; Return value:  Size  Location     Type
 22550 ;;                  1    wreg      void 
 22551 ;; Registers used:
 22552 ;;		wreg, status,2, status,0
 22553 ;; Tracked objects:
 22554 ;;		On entry : 0/0
 22555 ;;		On exit  : 0/0
 22556 ;;		Unchanged: 0/0
 22557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22558 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22561 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22562 ;;Total ram usage:        2 bytes
 22563 ;; Hardware stack levels used:    1
 22564 ;; Hardware stack levels required when called:   11
 22565 ;; This function calls:
 22566 ;;		Nothing
 22567 ;; This function is called by:
 22568 ;;		_Uart_WriteString
 22569 ;;		_Uart_WriteConstString
 22570 ;;		_Uart_WriteStringLen
 22571 ;; This function uses a non-reentrant model
 22572 ;;
 22573                           
 22574                           	psect	text104
 22575  004D3A                     __ptext104:
 22576                           	opt stack 0
 22577  004D3A                     _UartWriteByte:
 22578                           	opt stack 13
 22579                           
 22580                           ;incstack = 0
 22581                           ;UartWriteByte@Module stored from wreg
 22582  004D3A  0100               	movlb	0	; () banked
 22583  004D3C  6F61               	movwf	UartWriteByte@Module& (0+255),b
 22584                           
 22585                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 22586  004D3E  0100               	movlb	0	; () banked
 22587  004D40  0561               	decf	UartWriteByte@Module& (0+255),w,b
 22588  004D42  A4D8               	btfss	status,2,c
 22589  004D44  D003               	goto	l521
 22590                           
 22591                           ; BSR set to: 0
 22592                           ;uart_drv.c: 176: {
 22593                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 22594  004D46  C060  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 22595                           
 22596                           ;uart_drv.c: 179: }
 22597  004D4A  0012               	return	
 22598  004D4C                     l521:
 22599                           
 22600                           ; BSR set to: 0
 22601                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 22602                           
 22603                           ; BSR set to: 0
 22604  004D4C  0E02               	movlw	2
 22605  004D4E  1961               	xorwf	UartWriteByte@Module& (0+255),w,b
 22606  004D50  A4D8               	btfss	status,2,c
 22607  004D52  0012               	return	
 22608                           
 22609                           ; BSR set to: 0
 22610                           ;uart_drv.c: 181: {
 22611                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 22612  004D54  C060  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 22613                           
 22614                           ; BSR set to: 0
 22615  004D58  0012               	return	
 22616  004D5A                     __end_of_UartWriteByte:
 22617                           	opt stack 0
 22618                           tosu	equ	0xFFF
 22619                           tosh	equ	0xFFE
 22620                           tosl	equ	0xFFD
 22621                           pclath	equ	0xFFA
 22622                           tblptru	equ	0xFF8
 22623                           tblptrh	equ	0xFF7
 22624                           tblptrl	equ	0xFF6
 22625                           tablat	equ	0xFF5
 22626                           prodh	equ	0xFF4
 22627                           prodl	equ	0xFF3
 22628                           intcon	equ	0xFF2
 22629                           intcon2	equ	0xFF1
 22630                           intcon3	equ	0xFF0
 22631                           indf0	equ	0xFEF
 22632                           postinc0	equ	0xFEE
 22633                           plusw0	equ	0xFEB
 22634                           fsr0h	equ	0xFEA
 22635                           fsr0l	equ	0xFE9
 22636                           wreg	equ	0xFE8
 22637                           indf1	equ	0xFE7
 22638                           postinc1	equ	0xFE6
 22639                           postdec1	equ	0xFE5
 22640                           fsr1h	equ	0xFE2
 22641                           fsr1l	equ	0xFE1
 22642                           indf2	equ	0xFDF
 22643                           postinc2	equ	0xFDE
 22644                           postdec2	equ	0xFDD
 22645                           plusw2	equ	0xFDB
 22646                           fsr2h	equ	0xFDA
 22647                           fsr2l	equ	0xFD9
 22648                           status	equ	0xFD8
 22649                           
 22650 ;; *************** function _UartTxBufferStatus *****************
 22651 ;; Defined at:
 22652 ;;		line 223 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22653 ;; Parameters:    Size  Location     Type
 22654 ;;  Module          1    wreg     unsigned char 
 22655 ;; Auto vars:     Size  Location     Type
 22656 ;;  Module          1    1[BANK0 ] unsigned char 
 22657 ;;  TxBufferStat    1    2[BANK0 ] enum E8864
 22658 ;; Return value:  Size  Location     Type
 22659 ;;                  1    wreg      enum E8864
 22660 ;; Registers used:
 22661 ;;		wreg, status,2, status,0
 22662 ;; Tracked objects:
 22663 ;;		On entry : 0/0
 22664 ;;		On exit  : 0/0
 22665 ;;		Unchanged: 0/0
 22666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22668 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22669 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22670 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22671 ;;Total ram usage:        3 bytes
 22672 ;; Hardware stack levels used:    1
 22673 ;; Hardware stack levels required when called:   11
 22674 ;; This function calls:
 22675 ;;		Nothing
 22676 ;; This function is called by:
 22677 ;;		_Uart_WriteString
 22678 ;;		_Uart_WriteConstString
 22679 ;;		_Uart_WriteStringLen
 22680 ;; This function uses a non-reentrant model
 22681 ;;
 22682                           
 22683                           	psect	text105
 22684  00442E                     __ptext105:
 22685                           	opt stack 0
 22686  00442E                     _UartTxBufferStatus:
 22687                           	opt stack 13
 22688                           
 22689                           ; BSR set to: 0
 22690                           ;incstack = 0
 22691                           ;UartTxBufferStatus@Module stored from wreg
 22692  00442E  0100               	movlb	0	; () banked
 22693  004430  6F61               	movwf	UartTxBufferStatus@Module& (0+255),b
 22694                           
 22695                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 22696  004432  0E00               	movlw	0
 22697  004434  0100               	movlb	0	; () banked
 22698  004436  6F62               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 22699                           
 22700                           ; BSR set to: 0
 22701                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 22702  004438  0561               	decf	UartTxBufferStatus@Module& (0+255),w,b
 22703  00443A  A4D8               	btfss	status,2,c
 22704  00443C  D00B               	goto	l533
 22705                           
 22706                           ; BSR set to: 0
 22707                           ;uart_drv.c: 228: {
 22708                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 22709  00443E  CFAD F060          	movff	4013,??_UartTxBufferStatus	;volatile
 22710  004442  90D8               	bcf	status,0,c
 22711  004444  3360               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 22712  004446  B160               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 22713  004448  D002               	goto	l534
 22714  00444A                     u4970:
 22715                           
 22716                           ; BSR set to: 0
 22717                           ;uart_drv.c: 231: {
 22718                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 22719  00444A  0E01               	movlw	1
 22720  00444C  D014               	goto	L27
 22721  00444E                     l534:
 22722                           
 22723                           ; BSR set to: 0
 22724                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 22725                           
 22726                           ; BSR set to: 0
 22727  00444E  CFAD F060          	movff	4013,??_UartTxBufferStatus	;volatile
 22728  004452  D00C               	goto	L45
 22729  004454                     l533:
 22730                           
 22731                           ; BSR set to: 0
 22732                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 22733                           
 22734                           ; BSR set to: 0
 22735  004454  0E02               	movlw	2
 22736  004456  1961               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 22737  004458  A4D8               	btfss	status,2,c
 22738  00445A  D00E               	goto	l542
 22739                           
 22740                           ; BSR set to: 0
 22741                           ;uart_drv.c: 244: {
 22742                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 22743  00445C  CFA8 F060          	movff	4008,??_UartTxBufferStatus	;volatile
 22744  004460  90D8               	bcf	status,0,c
 22745  004462  3360               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 22746  004464  A160               	btfss	??_UartTxBufferStatus& (0+255),0,b
 22747  004466  D7F1               	goto	u4970
 22748                           
 22749                           ; BSR set to: 0
 22750                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 22751                           
 22752                           ; BSR set to: 0
 22753                           
 22754                           ;uart_drv.c: 249: }
 22755                           
 22756                           ; BSR set to: 0
 22757                           ;uart_drv.c: 247: {
 22758                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 22759  004468  CFA8 F060          	movff	4008,??_UartTxBufferStatus	;volatile
 22760  00446C                     L45:
 22761  00446C  90D8               	bcf	status,0,c
 22762  00446E  3360               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 22763  004470  A160               	btfss	??_UartTxBufferStatus& (0+255),0,b
 22764  004472  D002               	goto	l542
 22765                           
 22766                           ; BSR set to: 0
 22767                           ;uart_drv.c: 251: {
 22768                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 22769  004474  0E02               	movlw	2
 22770  004476                     L27:
 22771  004476  6F62               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 22772  004478                     l542:
 22773                           
 22774                           ; BSR set to: 0
 22775                           ;uart_drv.c: 257: }
 22776                           ;uart_drv.c: 258: }
 22777                           ;uart_drv.c: 260: return TxBufferStatus;
 22778                           
 22779                           ; BSR set to: 0
 22780                           
 22781                           ; BSR set to: 0
 22782                           
 22783                           ; BSR set to: 0
 22784                           
 22785                           ; BSR set to: 0
 22786                           
 22787                           ;uart_drv.c: 254: else
 22788                           ;uart_drv.c: 255: {
 22789                           
 22790                           ; BSR set to: 0
 22791  004478  5162               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 22792  00447A  0012               	return	
 22793  00447C                     __end_of_UartTxBufferStatus:
 22794                           	opt stack 0
 22795                           tosu	equ	0xFFF
 22796                           tosh	equ	0xFFE
 22797                           tosl	equ	0xFFD
 22798                           pclath	equ	0xFFA
 22799                           tblptru	equ	0xFF8
 22800                           tblptrh	equ	0xFF7
 22801                           tblptrl	equ	0xFF6
 22802                           tablat	equ	0xFF5
 22803                           prodh	equ	0xFF4
 22804                           prodl	equ	0xFF3
 22805                           intcon	equ	0xFF2
 22806                           intcon2	equ	0xFF1
 22807                           intcon3	equ	0xFF0
 22808                           indf0	equ	0xFEF
 22809                           postinc0	equ	0xFEE
 22810                           plusw0	equ	0xFEB
 22811                           fsr0h	equ	0xFEA
 22812                           fsr0l	equ	0xFE9
 22813                           wreg	equ	0xFE8
 22814                           indf1	equ	0xFE7
 22815                           postinc1	equ	0xFE6
 22816                           postdec1	equ	0xFE5
 22817                           fsr1h	equ	0xFE2
 22818                           fsr1l	equ	0xFE1
 22819                           indf2	equ	0xFDF
 22820                           postinc2	equ	0xFDE
 22821                           postdec2	equ	0xFDD
 22822                           plusw2	equ	0xFDB
 22823                           fsr2h	equ	0xFDA
 22824                           fsr2l	equ	0xFD9
 22825                           status	equ	0xFD8
 22826                           
 22827 ;; *************** function _MdmWifi_ReceiveWifiMsg *****************
 22828 ;; Defined at:
 22829 ;;		line 343 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 22830 ;; Parameters:    Size  Location     Type
 22831 ;;  RxBuffer        2    8[BANK0 ] PTR unsigned char 
 22832 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22833 ;;  DataLenght      2   10[BANK0 ] PTR unsigned char 
 22834 ;;		 -> SendDataSm@DataIndex(1), StartConnectionSm@DataIndex(1), 
 22835 ;; Auto vars:     Size  Location     Type
 22836 ;;  Ret             1   12[BANK0 ] enum E8823
 22837 ;; Return value:  Size  Location     Type
 22838 ;;                  1    wreg      enum E8823
 22839 ;; Registers used:
 22840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22841 ;; Tracked objects:
 22842 ;;		On entry : 0/0
 22843 ;;		On exit  : 0/0
 22844 ;;		Unchanged: 0/0
 22845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22846 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22849 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22850 ;;Total ram usage:        5 bytes
 22851 ;; Hardware stack levels used:    1
 22852 ;; Hardware stack levels required when called:   12
 22853 ;; This function calls:
 22854 ;;		_ReceiveEvt
 22855 ;;		_StringCopy
 22856 ;; This function is called by:
 22857 ;;		_StartConnectionSm
 22858 ;;		_SendDataSm
 22859 ;; This function uses a non-reentrant model
 22860 ;;
 22861                           
 22862                           	psect	text106
 22863  004516                     __ptext106:
 22864                           	opt stack 0
 22865  004516                     _MdmWifi_ReceiveWifiMsg:
 22866                           	opt stack 14
 22867                           
 22868                           ;mdm_wifi.c: 345: WifiRxMsgStsType Ret;
 22869                           ;mdm_wifi.c: 348: if (ReceiveEvt(&WifiRxPacket.PacketRxNotificationEvt))
 22870                           
 22871                           ; BSR set to: 0
 22872                           ;incstack = 0
 22873  004516  0EFC               	movlw	low (_WifiRxPacket+252)
 22874  004518  0100               	movlb	0	; () banked
 22875  00451A  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 22876  00451C  0E07               	movlw	high (_WifiRxPacket+252)
 22877  00451E  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 22878  004520  EC61  F025         	call	_ReceiveEvt	;wreg free
 22879  004524  0900               	iorlw	0
 22880  004526  B4D8               	btfsc	status,2,c
 22881  004528  D017               	goto	l892
 22882                           
 22883                           ;mdm_wifi.c: 349: {
 22884                           ;mdm_wifi.c: 351: StringCopy(WifiRxPacket.RxBuffer, RxBuffer, WifiRxPacket.RxByteNum);
 22885  00452A  0E00               	movlw	low _WifiRxPacket
 22886  00452C  0100               	movlb	0	; () banked
 22887  00452E  6F60               	movwf	StringCopy@SourceStr& (0+255),b
 22888  004530  0E07               	movlw	high _WifiRxPacket
 22889  004532  6F61               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 22890  004534  C068  F062         	movff	MdmWifi_ReceiveWifiMsg@RxBuffer,StringCopy@DestStr
 22891  004538  C069  F063         	movff	MdmWifi_ReceiveWifiMsg@RxBuffer+1,StringCopy@DestStr+1
 22892  00453C  C7FA  F064         	movff	_WifiRxPacket+250,StringCopy@Len
 22893  004540  C7FB  F065         	movff	_WifiRxPacket+251,StringCopy@Len+1
 22894  004544  ECE9  F023         	call	_StringCopy	;wreg free
 22895                           
 22896                           ;mdm_wifi.c: 353: *DataLenght = WifiRxPacket.RxByteNum;
 22897  004548  C06A  FFD9         	movff	MdmWifi_ReceiveWifiMsg@DataLenght,fsr2l
 22898  00454C  C06B  FFDA         	movff	MdmWifi_ReceiveWifiMsg@DataLenght+1,fsr2h
 22899  004550  C7FA  FFDF         	movff	_WifiRxPacket+250,indf2
 22900                           
 22901                           ;mdm_wifi.c: 355: Ret = WifiMsg_Received;
 22902  004554  0E01               	movlw	1
 22903  004556  D001               	goto	L28
 22904  004558                     l892:
 22905                           
 22906                           ;mdm_wifi.c: 357: else
 22907                           ;mdm_wifi.c: 358: {
 22908                           ;mdm_wifi.c: 360: Ret = WifiMsg_NotReceived;
 22909                           
 22910                           ; BSR set to: 0
 22911  004558  0E00               	movlw	0
 22912  00455A                     L28:
 22913  00455A  0100               	movlb	0	; () banked
 22914  00455C  6F6C               	movwf	MdmWifi_ReceiveWifiMsg@Ret& (0+255),b
 22915                           
 22916                           ; BSR set to: 0
 22917                           ;mdm_wifi.c: 361: }
 22918                           ;mdm_wifi.c: 363: return Ret;
 22919  00455E  516C               	movf	MdmWifi_ReceiveWifiMsg@Ret& (0+255),w,b
 22920  004560  0012               	return	
 22921  004562                     __end_of_MdmWifi_ReceiveWifiMsg:
 22922                           	opt stack 0
 22923                           tosu	equ	0xFFF
 22924                           tosh	equ	0xFFE
 22925                           tosl	equ	0xFFD
 22926                           pclath	equ	0xFFA
 22927                           tblptru	equ	0xFF8
 22928                           tblptrh	equ	0xFF7
 22929                           tblptrl	equ	0xFF6
 22930                           tablat	equ	0xFF5
 22931                           prodh	equ	0xFF4
 22932                           prodl	equ	0xFF3
 22933                           intcon	equ	0xFF2
 22934                           intcon2	equ	0xFF1
 22935                           intcon3	equ	0xFF0
 22936                           indf0	equ	0xFEF
 22937                           postinc0	equ	0xFEE
 22938                           plusw0	equ	0xFEB
 22939                           fsr0h	equ	0xFEA
 22940                           fsr0l	equ	0xFE9
 22941                           wreg	equ	0xFE8
 22942                           indf1	equ	0xFE7
 22943                           postinc1	equ	0xFE6
 22944                           postdec1	equ	0xFE5
 22945                           fsr1h	equ	0xFE2
 22946                           fsr1l	equ	0xFE1
 22947                           indf2	equ	0xFDF
 22948                           postinc2	equ	0xFDE
 22949                           postdec2	equ	0xFDD
 22950                           plusw2	equ	0xFDB
 22951                           fsr2h	equ	0xFDA
 22952                           fsr2l	equ	0xFD9
 22953                           status	equ	0xFD8
 22954                           
 22955 ;; *************** function _StringCopy *****************
 22956 ;; Defined at:
 22957 ;;		line 104 in file "../Source/c/03_Sml/02_Ssl/sf.c"
 22958 ;; Parameters:    Size  Location     Type
 22959 ;;  SourceStr       2    0[BANK0 ] PTR unsigned char 
 22960 ;;		 -> WifiRxPacket(253), MdmWifi_UartRxBuffer(250), 
 22961 ;;  DestStr         2    2[BANK0 ] PTR unsigned char 
 22962 ;;		 -> WifiTerminal@UartBuffer(200), SendDataSm@Data(103), StartConnectionSm@Data(100), WifiRxPacket(253), 
 22963 ;;  Len             2    4[BANK0 ] unsigned short 
 22964 ;; Auto vars:     Size  Location     Type
 22965 ;;  Index           2    6[BANK0 ] unsigned short 
 22966 ;; Return value:  Size  Location     Type
 22967 ;;                  1    wreg      void 
 22968 ;; Registers used:
 22969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 22970 ;; Tracked objects:
 22971 ;;		On entry : 0/0
 22972 ;;		On exit  : 0/0
 22973 ;;		Unchanged: 0/0
 22974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22975 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22976 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22978 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22979 ;;Total ram usage:        8 bytes
 22980 ;; Hardware stack levels used:    1
 22981 ;; Hardware stack levels required when called:   11
 22982 ;; This function calls:
 22983 ;;		Nothing
 22984 ;; This function is called by:
 22985 ;;		_MdmWifiGetUartData
 22986 ;;		_MdmWifi_ReceiveWifiMsg
 22987 ;;		_MdmWifi_ReceiveWifiMsgTerminal
 22988 ;;		_MdmWifiCmd_ReceiveWifiMsg
 22989 ;; This function uses a non-reentrant model
 22990 ;;
 22991                           
 22992                           	psect	text107
 22993  0047D2                     __ptext107:
 22994                           	opt stack 0
 22995  0047D2                     _StringCopy:
 22996                           	opt stack 15
 22997                           
 22998                           ;sf.c: 106: UINT16 Index = 0;
 22999                           
 23000                           ; BSR set to: 0
 23001                           ;incstack = 0
 23002  0047D2  0E00               	movlw	0
 23003  0047D4  0100               	movlb	0	; () banked
 23004  0047D6  6F67               	movwf	(StringCopy@Index+1)& (0+255),b
 23005  0047D8  0E00               	movlw	0
 23006  0047DA  6F66               	movwf	StringCopy@Index& (0+255),b
 23007                           
 23008                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 23009  0047DC  0E00               	movlw	0
 23010  0047DE  6F67               	movwf	(StringCopy@Index+1)& (0+255),b
 23011  0047E0  0E00               	movlw	0
 23012  0047E2  6F66               	movwf	StringCopy@Index& (0+255),b
 23013  0047E4  D010               	goto	l1918
 23014  0047E6                     
 23015                           ; BSR set to: 0
 23016                           ;sf.c: 110: {
 23017                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 23018                           
 23019                           ; BSR set to: 0
 23020  0047E6  5166               	movf	StringCopy@Index& (0+255),w,b
 23021  0047E8  2560               	addwf	StringCopy@SourceStr& (0+255),w,b
 23022  0047EA  6ED9               	movwf	fsr2l,c
 23023  0047EC  5167               	movf	(StringCopy@Index+1)& (0+255),w,b
 23024  0047EE  2161               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 23025  0047F0  6EDA               	movwf	fsr2h,c
 23026  0047F2  5166               	movf	StringCopy@Index& (0+255),w,b
 23027  0047F4  2562               	addwf	StringCopy@DestStr& (0+255),w,b
 23028  0047F6  6EE1               	movwf	fsr1l,c
 23029  0047F8  5167               	movf	(StringCopy@Index+1)& (0+255),w,b
 23030  0047FA  2163               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 23031  0047FC  6EE2               	movwf	fsr1h,c
 23032  0047FE  CFDF FFE7          	movff	indf2,indf1
 23033                           
 23034                           ; BSR set to: 0
 23035  004802  4B66               	infsnz	StringCopy@Index& (0+255),f,b
 23036  004804  2B67               	incf	(StringCopy@Index+1)& (0+255),f,b
 23037  004806                     l1918:
 23038                           
 23039                           ; BSR set to: 0
 23040                           
 23041                           ; BSR set to: 0
 23042  004806  5164               	movf	StringCopy@Len& (0+255),w,b
 23043  004808  5D66               	subwf	StringCopy@Index& (0+255),w,b
 23044  00480A  5165               	movf	(StringCopy@Len+1)& (0+255),w,b
 23045  00480C  5967               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 23046  00480E  B0D8               	btfsc	status,0,c
 23047  004810  0012               	return	
 23048  004812  D7E9               	goto	l1919
 23049  004814                     __end_of_StringCopy:
 23050                           	opt stack 0
 23051                           tosu	equ	0xFFF
 23052                           tosh	equ	0xFFE
 23053                           tosl	equ	0xFFD
 23054                           pclath	equ	0xFFA
 23055                           tblptru	equ	0xFF8
 23056                           tblptrh	equ	0xFF7
 23057                           tblptrl	equ	0xFF6
 23058                           tablat	equ	0xFF5
 23059                           prodh	equ	0xFF4
 23060                           prodl	equ	0xFF3
 23061                           intcon	equ	0xFF2
 23062                           intcon2	equ	0xFF1
 23063                           intcon3	equ	0xFF0
 23064                           indf0	equ	0xFEF
 23065                           postinc0	equ	0xFEE
 23066                           plusw0	equ	0xFEB
 23067                           fsr0h	equ	0xFEA
 23068                           fsr0l	equ	0xFE9
 23069                           wreg	equ	0xFE8
 23070                           indf1	equ	0xFE7
 23071                           postinc1	equ	0xFE6
 23072                           postdec1	equ	0xFE5
 23073                           fsr1h	equ	0xFE2
 23074                           fsr1l	equ	0xFE1
 23075                           indf2	equ	0xFDF
 23076                           postinc2	equ	0xFDE
 23077                           postdec2	equ	0xFDD
 23078                           plusw2	equ	0xFDB
 23079                           fsr2h	equ	0xFDA
 23080                           fsr2l	equ	0xFD9
 23081                           status	equ	0xFD8
 23082                           
 23083 ;; *************** function _ReceiveDataSm *****************
 23084 ;; Defined at:
 23085 ;;		line 291 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 23086 ;; Parameters:    Size  Location     Type
 23087 ;;		None
 23088 ;; Auto vars:     Size  Location     Type
 23089 ;;		None
 23090 ;; Return value:  Size  Location     Type
 23091 ;;                  1    wreg      void 
 23092 ;; Registers used:
 23093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23094 ;; Tracked objects:
 23095 ;;		On entry : 0/0
 23096 ;;		On exit  : 0/0
 23097 ;;		Unchanged: 0/0
 23098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23103 ;;Total ram usage:        0 bytes
 23104 ;; Hardware stack levels used:    1
 23105 ;; Hardware stack levels required when called:   12
 23106 ;; This function calls:
 23107 ;;		_GenerateEvt
 23108 ;;		_ReceiveEvt
 23109 ;; This function is called by:
 23110 ;;		_MdmWifiCmd_MainTask
 23111 ;; This function uses a non-reentrant model
 23112 ;;
 23113                           
 23114                           	psect	text108
 23115  004638                     __ptext108:
 23116                           	opt stack 0
 23117  004638                     _ReceiveDataSm:
 23118                           	opt stack 15
 23119                           
 23120                           ;mdm_wifi_cmd.c: 293: static WifiReceiveDataStateType WifiReceiveDataState = WiFiRcv_Wai
      +                          tEvt;
 23121                           ;mdm_wifi_cmd.c: 296: switch (WifiReceiveDataState)
 23122                           
 23123                           ; BSR set to: 0
 23124                           ;incstack = 0
 23125  004638  D019               	goto	l1013
 23126  00463A                     
 23127                           ;mdm_wifi_cmd.c: 300: if (ReceiveEvt(&WifiReceiveNetData))
 23128  00463A  0E58               	movlw	low _WifiReceiveNetData
 23129  00463C  0100               	movlb	0	; () banked
 23130  00463E  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 23131  004640  0E00               	movlw	high _WifiReceiveNetData
 23132  004642  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23133  004644  EC61  F025         	call	_ReceiveEvt	;wreg free
 23134  004648  0900               	iorlw	0
 23135  00464A  B4D8               	btfsc	status,2,c
 23136  00464C  0012               	return	
 23137                           
 23138                           ;mdm_wifi_cmd.c: 301: {
 23139                           ;mdm_wifi_cmd.c: 302: WifiReceiveDataState = WiFiRcv_GetData;
 23140  00464E  0E01               	movlw	1
 23141  004650  0101               	movlb	1	; () banked
 23142  004652  6F65               	movwf	ReceiveDataSm@WifiReceiveDataState& (0+255),b
 23143                           
 23144                           ; BSR set to: 1
 23145                           ;mdm_wifi_cmd.c: 303: }
 23146                           ;mdm_wifi_cmd.c: 304: break;
 23147  004654  0012               	return	
 23148  004656                     
 23149                           ; BSR set to: 1
 23150                           ;mdm_wifi_cmd.c: 308: GenerateEvt(&WifiReceiveData);
 23151                           
 23152                           ; BSR set to: 1
 23153  004656  0E55               	movlw	low _WifiReceiveData
 23154  004658  0100               	movlb	0	; () banked
 23155  00465A  6F60               	movwf	GenerateEvt@Event& (0+255),b
 23156  00465C  0E00               	movlw	high _WifiReceiveData
 23157  00465E  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23158  004660  EC00  F027         	call	_GenerateEvt	;wreg free
 23159                           
 23160                           ;mdm_wifi_cmd.c: 310: WifiReceiveDataState = WiFiRcv_WaitEvt;
 23161  004664  0E00               	movlw	0
 23162  004666  0101               	movlb	1	; () banked
 23163  004668  6F65               	movwf	ReceiveDataSm@WifiReceiveDataState& (0+255),b
 23164                           
 23165                           ; BSR set to: 1
 23166                           ;mdm_wifi_cmd.c: 315: }
 23167                           
 23168                           ; BSR set to: 1
 23169                           ;mdm_wifi_cmd.c: 314: break;
 23170                           
 23171                           ;mdm_wifi_cmd.c: 313: default:
 23172                           
 23173                           ;mdm_wifi_cmd.c: 311: break;
 23174  00466A  0012               	return	
 23175  00466C                     l1013:
 23176                           
 23177                           ; BSR set to: 1
 23178  00466C  0101               	movlb	1	; () banked
 23179  00466E  5165               	movf	ReceiveDataSm@WifiReceiveDataState& (0+255),w,b
 23180                           
 23181                           ; Switch size 1, requested type "space"
 23182                           ; Number of cases is 2, Range of values is 0 to 1
 23183                           ; switch strategies available:
 23184                           ; Name         Instructions Cycles
 23185                           ; simple_byte            7     4 (average)
 23186                           ;	Chosen strategy is simple_byte
 23187  004670  0A00               	xorlw	0	; case 0
 23188  004672  B4D8               	btfsc	status,2,c
 23189  004674  D7E2               	goto	l1014
 23190  004676  0A01               	xorlw	1	; case 1
 23191  004678  A4D8               	btfss	status,2,c
 23192  00467A  0012               	return	
 23193  00467C  D7EC               	goto	l1017
 23194  00467E                     __end_of_ReceiveDataSm:
 23195                           	opt stack 0
 23196                           tosu	equ	0xFFF
 23197                           tosh	equ	0xFFE
 23198                           tosl	equ	0xFFD
 23199                           pclath	equ	0xFFA
 23200                           tblptru	equ	0xFF8
 23201                           tblptrh	equ	0xFF7
 23202                           tblptrl	equ	0xFF6
 23203                           tablat	equ	0xFF5
 23204                           prodh	equ	0xFF4
 23205                           prodl	equ	0xFF3
 23206                           intcon	equ	0xFF2
 23207                           intcon2	equ	0xFF1
 23208                           intcon3	equ	0xFF0
 23209                           indf0	equ	0xFEF
 23210                           postinc0	equ	0xFEE
 23211                           plusw0	equ	0xFEB
 23212                           fsr0h	equ	0xFEA
 23213                           fsr0l	equ	0xFE9
 23214                           wreg	equ	0xFE8
 23215                           indf1	equ	0xFE7
 23216                           postinc1	equ	0xFE6
 23217                           postdec1	equ	0xFE5
 23218                           fsr1h	equ	0xFE2
 23219                           fsr1l	equ	0xFE1
 23220                           indf2	equ	0xFDF
 23221                           postinc2	equ	0xFDE
 23222                           postdec2	equ	0xFDD
 23223                           plusw2	equ	0xFDB
 23224                           fsr2h	equ	0xFDA
 23225                           fsr2l	equ	0xFD9
 23226                           status	equ	0xFD8
 23227                           
 23228 ;; *************** function _OsTmr_StartTimer *****************
 23229 ;; Defined at:
 23230 ;;		line 117 in file "../Source/c/02_Osl/os_timers.c"
 23231 ;; Parameters:    Size  Location     Type
 23232 ;;  Timer           2    4[BANK0 ] PTR struct _SwTimerType
 23233 ;;		 -> Term_MainSm@TermDelay(10), Led_MainTask@LedTimer1(10), SendDataSm@SwTimer(10), 
 23234 ;;  Timeout         4    6[BANK0 ] unsigned long 
 23235 ;; Auto vars:     Size  Location     Type
 23236 ;;		None
 23237 ;; Return value:  Size  Location     Type
 23238 ;;                  1    wreg      void 
 23239 ;; Registers used:
 23240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23241 ;; Tracked objects:
 23242 ;;		On entry : 0/0
 23243 ;;		On exit  : 0/0
 23244 ;;		Unchanged: 0/0
 23245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23246 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23249 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23250 ;;Total ram usage:        6 bytes
 23251 ;; Hardware stack levels used:    1
 23252 ;; Hardware stack levels required when called:   12
 23253 ;; This function calls:
 23254 ;;		_GetOsTickCounter
 23255 ;; This function is called by:
 23256 ;;		_SendDataSm
 23257 ;;		_Led_MainTask
 23258 ;;		_Term_MainSm
 23259 ;; This function uses a non-reentrant model
 23260 ;;
 23261                           
 23262                           	psect	text109
 23263  004176                     __ptext109:
 23264                           	opt stack 0
 23265  004176                     _OsTmr_StartTimer:
 23266                           	opt stack 14
 23267                           
 23268                           ;os_timers.c: 120: Timer->Status = SwTmrNotExpired;
 23269                           
 23270                           ;incstack = 0
 23271  004176  0100               	movlb	0	; () banked
 23272  004178  EE20 F001          	lfsr	2,1
 23273  00417C  5164               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 23274  00417E  26D9               	addwf	fsr2l,f,c
 23275  004180  5165               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 23276  004182  22DA               	addwfc	fsr2h,f,c
 23277  004184  0E00               	movlw	0
 23278  004186  6EDF               	movwf	indf2,c
 23279                           
 23280                           ; BSR set to: 0
 23281                           ;os_timers.c: 122: Timer->StartTime = GetOsTickCounter();
 23282  004188  EC42  F027         	call	_GetOsTickCounter	;wreg free
 23283  00418C  0100               	movlb	0	; () banked
 23284  00418E  EE20 F002          	lfsr	2,2
 23285  004192  5164               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 23286  004194  26D9               	addwf	fsr2l,f,c
 23287  004196  5165               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 23288  004198  22DA               	addwfc	fsr2h,f,c
 23289  00419A  C060  FFDE         	movff	?_GetOsTickCounter,postinc2
 23290  00419E  C061  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 23291  0041A2  C062  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 23292  0041A6  C063  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 23293                           
 23294                           ; BSR set to: 0
 23295                           ;os_timers.c: 124: Timer->TargetTime = Timeout;
 23296  0041AA  EE20 F006          	lfsr	2,6
 23297  0041AE  5164               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 23298  0041B0  26D9               	addwf	fsr2l,f,c
 23299  0041B2  5165               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 23300  0041B4  22DA               	addwfc	fsr2h,f,c
 23301  0041B6  C066  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 23302  0041BA  C067  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 23303  0041BE  C068  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 23304  0041C2  C069  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 23305                           
 23306                           ; BSR set to: 0
 23307                           ;os_timers.c: 126: Timer->Enabled = 1u;
 23308  0041C6  C064  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 23309  0041CA  C065  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 23310  0041CE  0E01               	movlw	1
 23311  0041D0  6EDF               	movwf	indf2,c
 23312                           
 23313                           ; BSR set to: 0
 23314  0041D2  0012               	return		;funcret
 23315  0041D4                     __end_of_OsTmr_StartTimer:
 23316                           	opt stack 0
 23317                           tosu	equ	0xFFF
 23318                           tosh	equ	0xFFE
 23319                           tosl	equ	0xFFD
 23320                           pclath	equ	0xFFA
 23321                           tblptru	equ	0xFF8
 23322                           tblptrh	equ	0xFF7
 23323                           tblptrl	equ	0xFF6
 23324                           tablat	equ	0xFF5
 23325                           prodh	equ	0xFF4
 23326                           prodl	equ	0xFF3
 23327                           intcon	equ	0xFF2
 23328                           intcon2	equ	0xFF1
 23329                           intcon3	equ	0xFF0
 23330                           indf0	equ	0xFEF
 23331                           postinc0	equ	0xFEE
 23332                           plusw0	equ	0xFEB
 23333                           fsr0h	equ	0xFEA
 23334                           fsr0l	equ	0xFE9
 23335                           wreg	equ	0xFE8
 23336                           indf1	equ	0xFE7
 23337                           postinc1	equ	0xFE6
 23338                           postdec1	equ	0xFE5
 23339                           fsr1h	equ	0xFE2
 23340                           fsr1l	equ	0xFE1
 23341                           indf2	equ	0xFDF
 23342                           postinc2	equ	0xFDE
 23343                           postdec2	equ	0xFDD
 23344                           plusw2	equ	0xFDB
 23345                           fsr2h	equ	0xFDA
 23346                           fsr2l	equ	0xFD9
 23347                           status	equ	0xFD8
 23348                           
 23349 ;; *************** function _OsTmr_GetTimerStatus *****************
 23350 ;; Defined at:
 23351 ;;		line 151 in file "../Source/c/02_Osl/os_timers.c"
 23352 ;; Parameters:    Size  Location     Type
 23353 ;;  Timer           2   24[BANK0 ] PTR struct _SwTimerType
 23354 ;;		 -> Term_MainSm@TermDelay(10), Led_MainTask@LedTimer1(10), SendDataSm@SwTimer(10), 
 23355 ;; Auto vars:     Size  Location     Type
 23356 ;;		None
 23357 ;; Return value:  Size  Location     Type
 23358 ;;                  1    wreg      enum E7734
 23359 ;; Registers used:
 23360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23361 ;; Tracked objects:
 23362 ;;		On entry : 0/0
 23363 ;;		On exit  : 0/0
 23364 ;;		Unchanged: 0/0
 23365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23366 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23368 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23369 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23370 ;;Total ram usage:        6 bytes
 23371 ;; Hardware stack levels used:    1
 23372 ;; Hardware stack levels required when called:   13
 23373 ;; This function calls:
 23374 ;;		_GetElapsedTime
 23375 ;; This function is called by:
 23376 ;;		_SendDataSm
 23377 ;;		_Led_MainTask
 23378 ;;		_Term_MainSm
 23379 ;; This function uses a non-reentrant model
 23380 ;;
 23381                           
 23382                           	psect	text110
 23383  00388C                     __ptext110:
 23384                           	opt stack 0
 23385  00388C                     _OsTmr_GetTimerStatus:
 23386                           	opt stack 13
 23387                           
 23388                           ;os_timers.c: 154: if (Timer->Enabled == 1u)
 23389                           
 23390                           ; BSR set to: 0
 23391                           ;incstack = 0
 23392  00388C  C078  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 23393  003890  C079  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 23394  003894  04DE               	decf	postinc2,w,c
 23395  003896  A4D8               	btfss	status,2,c
 23396  003898  D030               	goto	l782
 23397                           
 23398                           ;os_timers.c: 155: {
 23399                           ;os_timers.c: 157: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 23400  00389A  0100               	movlb	0	; () banked
 23401  00389C  EE20 F006          	lfsr	2,6
 23402  0038A0  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 23403  0038A2  26D9               	addwf	fsr2l,f,c
 23404  0038A4  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 23405  0038A6  22DA               	addwfc	fsr2h,f,c
 23406  0038A8  EE10 F002          	lfsr	1,2
 23407  0038AC  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 23408  0038AE  26E1               	addwf	fsr1l,f,c
 23409  0038B0  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 23410  0038B2  22E2               	addwfc	fsr1h,f,c
 23411  0038B4  CFE6 F064          	movff	postinc1,GetElapsedTime@StartTime
 23412  0038B8  CFE6 F065          	movff	postinc1,GetElapsedTime@StartTime+1
 23413  0038BC  CFE6 F066          	movff	postinc1,GetElapsedTime@StartTime+2
 23414  0038C0  CFE6 F067          	movff	postinc1,GetElapsedTime@StartTime+3
 23415  0038C4  ECA8  F016         	call	_GetElapsedTime	;wreg free
 23416  0038C8  50DE               	movf	postinc2,w,c
 23417  0038CA  0100               	movlb	0	; () banked
 23418  0038CC  5D64               	subwf	?_GetElapsedTime& (0+255),w,b
 23419  0038CE  50DE               	movf	postinc2,w,c
 23420  0038D0  5965               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 23421  0038D2  50DE               	movf	postinc2,w,c
 23422  0038D4  5966               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 23423  0038D6  50DE               	movf	postinc2,w,c
 23424  0038D8  5967               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 23425  0038DA  A0D8               	btfss	status,0,c
 23426  0038DC  D017               	goto	l785
 23427                           
 23428                           ; BSR set to: 0
 23429                           ;os_timers.c: 158: {
 23430                           ;os_timers.c: 160: Timer->Enabled = 0u;
 23431  0038DE  C078  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 23432  0038E2  C079  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 23433  0038E6  0E00               	movlw	0
 23434  0038E8  6EDF               	movwf	indf2,c
 23435                           
 23436                           ; BSR set to: 0
 23437                           ;os_timers.c: 162: Timer->Status = SwTimerExpired;
 23438  0038EA  EE20 F001          	lfsr	2,1
 23439  0038EE  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 23440  0038F0  26D9               	addwf	fsr2l,f,c
 23441  0038F2  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 23442  0038F4  22DA               	addwfc	fsr2h,f,c
 23443  0038F6  0E01               	movlw	1
 23444  0038F8  D008               	goto	L46
 23445  0038FA                     l782:
 23446                           
 23447                           ;os_timers.c: 169: else
 23448                           ;os_timers.c: 170: {
 23449                           ;os_timers.c: 172: Timer->Status = SwTimerDisabled;
 23450                           
 23451                           ; BSR set to: 0
 23452  0038FA  0100               	movlb	0	; () banked
 23453  0038FC  EE20 F001          	lfsr	2,1
 23454  003900  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 23455  003902  26D9               	addwf	fsr2l,f,c
 23456  003904  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 23457  003906  22DA               	addwfc	fsr2h,f,c
 23458  003908  0E02               	movlw	2
 23459  00390A                     L46:
 23460  00390A  6EDF               	movwf	indf2,c
 23461  00390C                     l785:
 23462                           
 23463                           ; BSR set to: 0
 23464                           ;os_timers.c: 173: }
 23465                           ;os_timers.c: 176: return Timer->Status;
 23466  00390C  EE20 F001          	lfsr	2,1
 23467  003910  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 23468  003912  26D9               	addwf	fsr2l,f,c
 23469  003914  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 23470  003916  22DA               	addwfc	fsr2h,f,c
 23471  003918  50DF               	movf	indf2,w,c
 23472  00391A  0012               	return	
 23473  00391C                     __end_of_OsTmr_GetTimerStatus:
 23474                           	opt stack 0
 23475                           tosu	equ	0xFFF
 23476                           tosh	equ	0xFFE
 23477                           tosl	equ	0xFFD
 23478                           pclath	equ	0xFFA
 23479                           tblptru	equ	0xFF8
 23480                           tblptrh	equ	0xFF7
 23481                           tblptrl	equ	0xFF6
 23482                           tablat	equ	0xFF5
 23483                           prodh	equ	0xFF4
 23484                           prodl	equ	0xFF3
 23485                           intcon	equ	0xFF2
 23486                           intcon2	equ	0xFF1
 23487                           intcon3	equ	0xFF0
 23488                           indf0	equ	0xFEF
 23489                           postinc0	equ	0xFEE
 23490                           plusw0	equ	0xFEB
 23491                           fsr0h	equ	0xFEA
 23492                           fsr0l	equ	0xFE9
 23493                           wreg	equ	0xFE8
 23494                           indf1	equ	0xFE7
 23495                           postinc1	equ	0xFE6
 23496                           postdec1	equ	0xFE5
 23497                           fsr1h	equ	0xFE2
 23498                           fsr1l	equ	0xFE1
 23499                           indf2	equ	0xFDF
 23500                           postinc2	equ	0xFDE
 23501                           postdec2	equ	0xFDD
 23502                           plusw2	equ	0xFDB
 23503                           fsr2h	equ	0xFDA
 23504                           fsr2l	equ	0xFD9
 23505                           status	equ	0xFD8
 23506                           
 23507 ;; *************** function _GetElapsedTime *****************
 23508 ;; Defined at:
 23509 ;;		line 83 in file "../Source/c/02_Osl/os_timers.c"
 23510 ;; Parameters:    Size  Location     Type
 23511 ;;  StartTime       4    4[BANK0 ] unsigned long 
 23512 ;; Auto vars:     Size  Location     Type
 23513 ;;  CurrentTimes    4   20[BANK0 ] unsigned long 
 23514 ;;  TimeValue       4   16[BANK0 ] unsigned long 
 23515 ;; Return value:  Size  Location     Type
 23516 ;;                  4    4[BANK0 ] unsigned long 
 23517 ;; Registers used:
 23518 ;;		wreg, status,2, status,0, cstack
 23519 ;; Tracked objects:
 23520 ;;		On entry : 0/0
 23521 ;;		On exit  : 0/0
 23522 ;;		Unchanged: 0/0
 23523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23524 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23525 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23526 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23527 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23528 ;;Total ram usage:       20 bytes
 23529 ;; Hardware stack levels used:    1
 23530 ;; Hardware stack levels required when called:   12
 23531 ;; This function calls:
 23532 ;;		_GetOsTickCounter
 23533 ;; This function is called by:
 23534 ;;		_OsTmr_GetTimerStatus
 23535 ;;		_OsTmr_GetRemainingTime
 23536 ;; This function uses a non-reentrant model
 23537 ;;
 23538                           
 23539                           	psect	text111
 23540  002D50                     __ptext111:
 23541                           	opt stack 0
 23542  002D50                     _GetElapsedTime:
 23543                           	opt stack 13
 23544                           
 23545                           ;os_timers.c: 85: UINT32 CurrentTimestamp;
 23546                           ;os_timers.c: 86: UINT32 TimeValue;
 23547                           ;os_timers.c: 89: CurrentTimestamp = GetOsTickCounter();
 23548                           
 23549                           ; BSR set to: 0
 23550                           ;incstack = 0
 23551  002D50  EC42  F027         	call	_GetOsTickCounter	;wreg free
 23552  002D54  C060  F074         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 23553  002D58  C061  F075         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 23554  002D5C  C062  F076         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 23555  002D60  C063  F077         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 23556                           
 23557                           ;os_timers.c: 92: if (CurrentTimestamp >= StartTime)
 23558  002D64  0100               	movlb	0	; () banked
 23559  002D66  5164               	movf	GetElapsedTime@StartTime& (0+255),w,b
 23560  002D68  5D74               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 23561  002D6A  5165               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 23562  002D6C  5975               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 23563  002D6E  5166               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 23564  002D70  5976               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 23565  002D72  5167               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 23566  002D74  5977               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 23567  002D76  A0D8               	btfss	status,0,c
 23568  002D78  D01D               	goto	l771
 23569                           
 23570                           ; BSR set to: 0
 23571                           ;os_timers.c: 93: {
 23572                           ;os_timers.c: 94: TimeValue = (CurrentTimestamp - StartTime);
 23573  002D7A  C064  F068         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 23574  002D7E  C065  F069         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 23575  002D82  C066  F06A         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 23576  002D86  C067  F06B         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 23577  002D8A  1F68               	comf	??_GetElapsedTime& (0+255),f,b
 23578  002D8C  1F69               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 23579  002D8E  1F6A               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 23580  002D90  1F6B               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 23581  002D92  2B68               	incf	??_GetElapsedTime& (0+255),f,b
 23582  002D94  0E00               	movlw	0
 23583  002D96  2369               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 23584  002D98  236A               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 23585  002D9A  236B               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 23586  002D9C  5174               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 23587  002D9E  2568               	addwf	??_GetElapsedTime& (0+255),w,b
 23588  002DA0  6F70               	movwf	GetElapsedTime@TimeValue& (0+255),b
 23589  002DA2  5175               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 23590  002DA4  2169               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 23591  002DA6  6F71               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 23592  002DA8  5176               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 23593  002DAA  216A               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 23594  002DAC  6F72               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 23595  002DAE  5177               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 23596  002DB0  216B               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 23597  002DB2  D028               	goto	L29
 23598  002DB4                     l771:
 23599                           
 23600                           ; BSR set to: 0
 23601                           ;os_timers.c: 96: else
 23602                           ;os_timers.c: 97: {
 23603                           ;os_timers.c: 98: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 23604                           
 23605                           ; BSR set to: 0
 23606  002DB4  C064  F068         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 23607  002DB8  C065  F069         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 23608  002DBC  C066  F06A         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 23609  002DC0  C067  F06B         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 23610  002DC4  1F68               	comf	??_GetElapsedTime& (0+255),f,b
 23611  002DC6  1F69               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 23612  002DC8  1F6A               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 23613  002DCA  1F6B               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 23614  002DCC  2B68               	incf	??_GetElapsedTime& (0+255),f,b
 23615  002DCE  0E00               	movlw	0
 23616  002DD0  2369               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 23617  002DD2  236A               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 23618  002DD4  236B               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 23619  002DD6  5174               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 23620  002DD8  2568               	addwf	??_GetElapsedTime& (0+255),w,b
 23621  002DDA  6F6C               	movwf	(??_GetElapsedTime+4)& (0+255),b
 23622  002DDC  5175               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 23623  002DDE  2169               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 23624  002DE0  6F6D               	movwf	(??_GetElapsedTime+5)& (0+255),b
 23625  002DE2  5176               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 23626  002DE4  216A               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 23627  002DE6  6F6E               	movwf	(??_GetElapsedTime+6)& (0+255),b
 23628  002DE8  5177               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 23629  002DEA  216B               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 23630  002DEC  6F6F               	movwf	(??_GetElapsedTime+7)& (0+255),b
 23631  002DEE  0EFF               	movlw	255
 23632  002DF0  256C               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 23633  002DF2  6F70               	movwf	GetElapsedTime@TimeValue& (0+255),b
 23634  002DF4  0EFF               	movlw	255
 23635  002DF6  216D               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 23636  002DF8  6F71               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 23637  002DFA  0EFF               	movlw	255
 23638  002DFC  216E               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 23639  002DFE  6F72               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 23640  002E00  0EFF               	movlw	255
 23641  002E02  216F               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 23642  002E04                     L29:
 23643  002E04  6F73               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 23644                           
 23645                           ; BSR set to: 0
 23646                           ;os_timers.c: 99: }
 23647                           ;os_timers.c: 101: return TimeValue;
 23648                           
 23649                           ; BSR set to: 0
 23650  002E06  C070  F064         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 23651  002E0A  C071  F065         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 23652  002E0E  C072  F066         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 23653  002E12  C073  F067         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 23654  002E16  0012               	return	
 23655  002E18                     __end_of_GetElapsedTime:
 23656                           	opt stack 0
 23657                           tosu	equ	0xFFF
 23658                           tosh	equ	0xFFE
 23659                           tosl	equ	0xFFD
 23660                           pclath	equ	0xFFA
 23661                           tblptru	equ	0xFF8
 23662                           tblptrh	equ	0xFF7
 23663                           tblptrl	equ	0xFF6
 23664                           tablat	equ	0xFF5
 23665                           prodh	equ	0xFF4
 23666                           prodl	equ	0xFF3
 23667                           intcon	equ	0xFF2
 23668                           intcon2	equ	0xFF1
 23669                           intcon3	equ	0xFF0
 23670                           indf0	equ	0xFEF
 23671                           postinc0	equ	0xFEE
 23672                           plusw0	equ	0xFEB
 23673                           fsr0h	equ	0xFEA
 23674                           fsr0l	equ	0xFE9
 23675                           wreg	equ	0xFE8
 23676                           indf1	equ	0xFE7
 23677                           postinc1	equ	0xFE6
 23678                           postdec1	equ	0xFE5
 23679                           fsr1h	equ	0xFE2
 23680                           fsr1l	equ	0xFE1
 23681                           indf2	equ	0xFDF
 23682                           postinc2	equ	0xFDE
 23683                           postdec2	equ	0xFDD
 23684                           plusw2	equ	0xFDB
 23685                           fsr2h	equ	0xFDA
 23686                           fsr2l	equ	0xFD9
 23687                           status	equ	0xFD8
 23688                           
 23689 ;; *************** function _GetOsTickCounter *****************
 23690 ;; Defined at:
 23691 ;;		line 69 in file "../Source/c/02_Osl/os_timers.c"
 23692 ;; Parameters:    Size  Location     Type
 23693 ;;		None
 23694 ;; Auto vars:     Size  Location     Type
 23695 ;;		None
 23696 ;; Return value:  Size  Location     Type
 23697 ;;                  4    0[BANK0 ] unsigned long 
 23698 ;; Registers used:
 23699 ;;		None
 23700 ;; Tracked objects:
 23701 ;;		On entry : 0/0
 23702 ;;		On exit  : 0/0
 23703 ;;		Unchanged: 0/0
 23704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23705 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23708 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23709 ;;Total ram usage:        4 bytes
 23710 ;; Hardware stack levels used:    1
 23711 ;; Hardware stack levels required when called:   11
 23712 ;; This function calls:
 23713 ;;		Nothing
 23714 ;; This function is called by:
 23715 ;;		_GetElapsedTime
 23716 ;;		_OsTmr_StartTimer
 23717 ;;		_OsTmr_GetElapsedTime
 23718 ;; This function uses a non-reentrant model
 23719 ;;
 23720                           
 23721                           	psect	text112
 23722  004E84                     __ptext112:
 23723                           	opt stack 0
 23724  004E84                     _GetOsTickCounter:
 23725                           	opt stack 14
 23726                           
 23727                           ;os_timers.c: 72: return OsTmr_OsTickCounter;
 23728                           
 23729                           ; BSR set to: 0
 23730                           ;incstack = 0
 23731  004E84  C12E  F060         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 23732  004E88  C12F  F061         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 23733  004E8C  C130  F062         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 23734  004E90  C131  F063         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 23735  004E94  0012               	return		;funcret
 23736  004E96                     __end_of_GetOsTickCounter:
 23737                           	opt stack 0
 23738                           tosu	equ	0xFFF
 23739                           tosh	equ	0xFFE
 23740                           tosl	equ	0xFFD
 23741                           pclath	equ	0xFFA
 23742                           tblptru	equ	0xFF8
 23743                           tblptrh	equ	0xFF7
 23744                           tblptrl	equ	0xFF6
 23745                           tablat	equ	0xFF5
 23746                           prodh	equ	0xFF4
 23747                           prodl	equ	0xFF3
 23748                           intcon	equ	0xFF2
 23749                           intcon2	equ	0xFF1
 23750                           intcon3	equ	0xFF0
 23751                           indf0	equ	0xFEF
 23752                           postinc0	equ	0xFEE
 23753                           plusw0	equ	0xFEB
 23754                           fsr0h	equ	0xFEA
 23755                           fsr0l	equ	0xFE9
 23756                           wreg	equ	0xFE8
 23757                           indf1	equ	0xFE7
 23758                           postinc1	equ	0xFE6
 23759                           postdec1	equ	0xFE5
 23760                           fsr1h	equ	0xFE2
 23761                           fsr1l	equ	0xFE1
 23762                           indf2	equ	0xFDF
 23763                           postinc2	equ	0xFDE
 23764                           postdec2	equ	0xFDD
 23765                           plusw2	equ	0xFDB
 23766                           fsr2h	equ	0xFDA
 23767                           fsr2l	equ	0xFD9
 23768                           status	equ	0xFD8
 23769                           
 23770 ;; *************** function _OsAlrm_SetOsAlarm *****************
 23771 ;; Defined at:
 23772 ;;		line 76 in file "../Source/c/02_Osl/os_alarms.c"
 23773 ;; Parameters:    Size  Location     Type
 23774 ;;  OsAlarmId       2    6[BANK0 ] unsigned short 
 23775 ;;  OsAlarmTimeo    4    8[BANK0 ] unsigned long 
 23776 ;;  AlarmCallbac    2   12[BANK0 ] PTR FTN()void 
 23777 ;;		 -> I2cDummyTx(1), 
 23778 ;; Auto vars:     Size  Location     Type
 23779 ;;		None
 23780 ;; Return value:  Size  Location     Type
 23781 ;;                  1    wreg      void 
 23782 ;; Registers used:
 23783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23784 ;; Tracked objects:
 23785 ;;		On entry : 0/0
 23786 ;;		On exit  : 0/0
 23787 ;;		Unchanged: 0/0
 23788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23789 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23792 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23793 ;;Total ram usage:        8 bytes
 23794 ;; Hardware stack levels used:    1
 23795 ;; Hardware stack levels required when called:   12
 23796 ;; This function calls:
 23797 ;;		___wmul
 23798 ;; This function is called by:
 23799 ;;		_I2cSlv_MainTask
 23800 ;; This function uses a non-reentrant model
 23801 ;;
 23802                           
 23803                           	psect	text113
 23804  002E18                     __ptext113:
 23805                           	opt stack 0
 23806  002E18                     _OsAlrm_SetOsAlarm:
 23807                           	opt stack 15
 23808                           
 23809                           ;os_alarms.c: 79: OsAlarms[OsAlarmId].Enabled = 1u;
 23810                           
 23811                           ;incstack = 0
 23812  002E18  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23813  002E1C  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23814  002E20  0E00               	movlw	0
 23815  002E22  0100               	movlb	0	; () banked
 23816  002E24  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23817  002E26  0E0B               	movlw	11
 23818  002E28  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23819  002E2A  ECCD  F025         	call	___wmul	;wreg free
 23820  002E2E  0E00               	movlw	low _OsAlarms
 23821  002E30  0100               	movlb	0	; () banked
 23822  002E32  2560               	addwf	?___wmul& (0+255),w,b
 23823  002E34  6ED9               	movwf	fsr2l,c
 23824  002E36  0E05               	movlw	high _OsAlarms
 23825  002E38  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23826  002E3A  6EDA               	movwf	fsr2h,c
 23827  002E3C  0E01               	movlw	1
 23828  002E3E  6EDF               	movwf	indf2,c
 23829                           
 23830                           ;os_alarms.c: 81: OsAlarms[OsAlarmId].Counter = 0;
 23831  002E40  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23832  002E44  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23833  002E48  0E00               	movlw	0
 23834  002E4A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23835  002E4C  0E0B               	movlw	11
 23836  002E4E  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23837  002E50  ECCD  F025         	call	___wmul	;wreg free
 23838  002E54  0E01               	movlw	1
 23839  002E56  0100               	movlb	0	; () banked
 23840  002E58  2760               	addwf	?___wmul& (0+255),f,b
 23841  002E5A  0E00               	movlw	0
 23842  002E5C  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 23843  002E5E  0E00               	movlw	low _OsAlarms
 23844  002E60  2560               	addwf	?___wmul& (0+255),w,b
 23845  002E62  6ED9               	movwf	fsr2l,c
 23846  002E64  0E05               	movlw	high _OsAlarms
 23847  002E66  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23848  002E68  6EDA               	movwf	fsr2h,c
 23849  002E6A  6ADE               	clrf	postinc2,c
 23850  002E6C  6ADE               	clrf	postinc2,c
 23851  002E6E  6ADE               	clrf	postinc2,c
 23852  002E70  6ADD               	clrf	postdec2,c
 23853                           
 23854                           ;os_alarms.c: 83: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 23855  002E72  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23856  002E76  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23857  002E7A  0E00               	movlw	0
 23858  002E7C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23859  002E7E  0E0B               	movlw	11
 23860  002E80  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23861  002E82  ECCD  F025         	call	___wmul	;wreg free
 23862  002E86  0E05               	movlw	5
 23863  002E88  0100               	movlb	0	; () banked
 23864  002E8A  2760               	addwf	?___wmul& (0+255),f,b
 23865  002E8C  0E00               	movlw	0
 23866  002E8E  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 23867  002E90  0E00               	movlw	low _OsAlarms
 23868  002E92  2560               	addwf	?___wmul& (0+255),w,b
 23869  002E94  6ED9               	movwf	fsr2l,c
 23870  002E96  0E05               	movlw	high _OsAlarms
 23871  002E98  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23872  002E9A  6EDA               	movwf	fsr2h,c
 23873  002E9C  C068  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 23874  002EA0  C069  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 23875  002EA4  C06A  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 23876  002EA8  C06B  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 23877                           
 23878                           ;os_alarms.c: 85: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 23879  002EAC  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23880  002EB0  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23881  002EB4  0E00               	movlw	0
 23882  002EB6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23883  002EB8  0E0B               	movlw	11
 23884  002EBA  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23885  002EBC  ECCD  F025         	call	___wmul	;wreg free
 23886  002EC0  0E09               	movlw	9
 23887  002EC2  0100               	movlb	0	; () banked
 23888  002EC4  2760               	addwf	?___wmul& (0+255),f,b
 23889  002EC6  0E00               	movlw	0
 23890  002EC8  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 23891  002ECA  0E00               	movlw	low _OsAlarms
 23892  002ECC  2560               	addwf	?___wmul& (0+255),w,b
 23893  002ECE  6ED9               	movwf	fsr2l,c
 23894  002ED0  0E05               	movlw	high _OsAlarms
 23895  002ED2  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23896  002ED4  6EDA               	movwf	fsr2h,c
 23897  002ED6  C06C  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 23898  002EDA  C06D  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 23899                           
 23900                           ; BSR set to: 0
 23901  002EDE  0012               	return		;funcret
 23902  002EE0                     __end_of_OsAlrm_SetOsAlarm:
 23903                           	opt stack 0
 23904                           tosu	equ	0xFFF
 23905                           tosh	equ	0xFFE
 23906                           tosl	equ	0xFFD
 23907                           pclath	equ	0xFFA
 23908                           tblptru	equ	0xFF8
 23909                           tblptrh	equ	0xFF7
 23910                           tblptrl	equ	0xFF6
 23911                           tablat	equ	0xFF5
 23912                           prodh	equ	0xFF4
 23913                           prodl	equ	0xFF3
 23914                           intcon	equ	0xFF2
 23915                           intcon2	equ	0xFF1
 23916                           intcon3	equ	0xFF0
 23917                           indf0	equ	0xFEF
 23918                           postinc0	equ	0xFEE
 23919                           plusw0	equ	0xFEB
 23920                           fsr0h	equ	0xFEA
 23921                           fsr0l	equ	0xFE9
 23922                           wreg	equ	0xFE8
 23923                           indf1	equ	0xFE7
 23924                           postinc1	equ	0xFE6
 23925                           postdec1	equ	0xFE5
 23926                           fsr1h	equ	0xFE2
 23927                           fsr1l	equ	0xFE1
 23928                           indf2	equ	0xFDF
 23929                           postinc2	equ	0xFDE
 23930                           postdec2	equ	0xFDD
 23931                           plusw2	equ	0xFDB
 23932                           fsr2h	equ	0xFDA
 23933                           fsr2l	equ	0xFD9
 23934                           status	equ	0xFD8
 23935                           
 23936 ;; *************** function ___wmul *****************
 23937 ;; Defined at:
 23938 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 23939 ;; Parameters:    Size  Location     Type
 23940 ;;  multiplier      2    0[BANK0 ] unsigned int 
 23941 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 23942 ;; Auto vars:     Size  Location     Type
 23943 ;;  product         2    4[BANK0 ] unsigned int 
 23944 ;; Return value:  Size  Location     Type
 23945 ;;                  2    0[BANK0 ] unsigned int 
 23946 ;; Registers used:
 23947 ;;		wreg, status,2, status,0, prodl, prodh
 23948 ;; Tracked objects:
 23949 ;;		On entry : 0/0
 23950 ;;		On exit  : 0/0
 23951 ;;		Unchanged: 0/0
 23952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23953 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23954 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23956 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23957 ;;Total ram usage:        6 bytes
 23958 ;; Hardware stack levels used:    1
 23959 ;; Hardware stack levels required when called:   11
 23960 ;; This function calls:
 23961 ;;		Nothing
 23962 ;; This function is called by:
 23963 ;;		_OsAlrm_SetOsAlarm
 23964 ;;		_atoi
 23965 ;; This function uses a non-reentrant model
 23966 ;;
 23967                           
 23968                           	psect	text114
 23969  004B9A                     __ptext114:
 23970                           	opt stack 0
 23971  004B9A                     ___wmul:
 23972                           	opt stack 13
 23973                           
 23974                           ; BSR set to: 0
 23975                           ;incstack = 0
 23976  004B9A  0100               	movlb	0	; () banked
 23977  004B9C  5160               	movf	___wmul@multiplier& (0+255),w,b
 23978  004B9E  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23979  004BA0  CFF3 F064          	movff	prodl,___wmul@product
 23980  004BA4  CFF4 F065          	movff	prodh,___wmul@product+1
 23981  004BA8  5160               	movf	___wmul@multiplier& (0+255),w,b
 23982  004BAA  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 23983  004BAC  50F3               	movf	prodl,w,c
 23984  004BAE  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23985  004BB0  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 23986  004BB2  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23987  004BB4  50F3               	movf	prodl,w,c
 23988  004BB6  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23989                           
 23990                           ; BSR set to: 0
 23991  004BB8  C064  F060         	movff	___wmul@product,?___wmul
 23992  004BBC  C065  F061         	movff	___wmul@product+1,?___wmul+1
 23993  004BC0  0012               	return	
 23994  004BC2                     __end_of___wmul:
 23995                           	opt stack 0
 23996                           tosu	equ	0xFFF
 23997                           tosh	equ	0xFFE
 23998                           tosl	equ	0xFFD
 23999                           pclath	equ	0xFFA
 24000                           tblptru	equ	0xFF8
 24001                           tblptrh	equ	0xFF7
 24002                           tblptrl	equ	0xFF6
 24003                           tablat	equ	0xFF5
 24004                           prodh	equ	0xFF4
 24005                           prodl	equ	0xFF3
 24006                           intcon	equ	0xFF2
 24007                           intcon2	equ	0xFF1
 24008                           intcon3	equ	0xFF0
 24009                           indf0	equ	0xFEF
 24010                           postinc0	equ	0xFEE
 24011                           plusw0	equ	0xFEB
 24012                           fsr0h	equ	0xFEA
 24013                           fsr0l	equ	0xFE9
 24014                           wreg	equ	0xFE8
 24015                           indf1	equ	0xFE7
 24016                           postinc1	equ	0xFE6
 24017                           postdec1	equ	0xFE5
 24018                           fsr1h	equ	0xFE2
 24019                           fsr1l	equ	0xFE1
 24020                           indf2	equ	0xFDF
 24021                           postinc2	equ	0xFDE
 24022                           postdec2	equ	0xFDD
 24023                           plusw2	equ	0xFDB
 24024                           fsr2h	equ	0xFDA
 24025                           fsr2l	equ	0xFD9
 24026                           status	equ	0xFD8
 24027                           
 24028 ;; *************** function _I2c_InitI2cModule *****************
 24029 ;; Defined at:
 24030 ;;		line 228 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 24031 ;; Parameters:    Size  Location     Type
 24032 ;;  I2cConfig       2   37[BANK0 ] PTR struct _I2cConfig
 24033 ;;		 -> I2cConfig(10), 
 24034 ;; Auto vars:     Size  Location     Type
 24035 ;;		None
 24036 ;; Return value:  Size  Location     Type
 24037 ;;                  1    wreg      void 
 24038 ;; Registers used:
 24039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24040 ;; Tracked objects:
 24041 ;;		On entry : 0/0
 24042 ;;		On exit  : 0/0
 24043 ;;		Unchanged: 0/0
 24044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24045 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24047 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24048 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24049 ;;Total ram usage:        4 bytes
 24050 ;; Hardware stack levels used:    1
 24051 ;; Hardware stack levels required when called:   13
 24052 ;; This function calls:
 24053 ;;		_SetBaudRate
 24054 ;; This function is called by:
 24055 ;;		_I2cSlv_MainTask
 24056 ;; This function uses a non-reentrant model
 24057 ;;
 24058                           
 24059                           	psect	text115
 24060  003DC6                     __ptext115:
 24061                           	opt stack 0
 24062  003DC6                     _I2c_InitI2cModule:
 24063                           	opt stack 14
 24064                           
 24065                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 24066                           
 24067                           ; BSR set to: 0
 24068                           ;incstack = 0
 24069  003DC6  8295               	bsf	3989,1,c	;volatile
 24070                           
 24071                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 24072  003DC8  8095               	bsf	3989,0,c	;volatile
 24073                           
 24074                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 24075  003DCA  C085  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 24076  003DCE  C086  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 24077  003DD2  CFDE F079          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 24078  003DD6  CFDE F07A          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 24079  003DDA  CFDE F07B          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 24080  003DDE  CFDE F07C          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 24081  003DE2  0100               	movlb	0	; () banked
 24082  003DE4  EE20 F004          	lfsr	2,4
 24083  003DE8  5185               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24084  003DEA  26D9               	addwf	fsr2l,f,c
 24085  003DEC  5186               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24086  003DEE  22DA               	addwfc	fsr2h,f,c
 24087  003DF0  CFDE F07D          	movff	postinc2,SetBaudRate@McuClockHz
 24088  003DF4  CFDE F07E          	movff	postinc2,SetBaudRate@McuClockHz+1
 24089  003DF8  CFDE F07F          	movff	postinc2,SetBaudRate@McuClockHz+2
 24090  003DFC  CFDE F080          	movff	postinc2,SetBaudRate@McuClockHz+3
 24091  003E00  EC3E  F022         	call	_SetBaudRate	;wreg free
 24092                           
 24093                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 24094  003E04  0100               	movlb	0	; () banked
 24095  003E06  EE20 F008          	lfsr	2,8
 24096  003E0A  5185               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24097  003E0C  26D9               	addwf	fsr2l,f,c
 24098  003E0E  5186               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24099  003E10  22DA               	addwfc	fsr2h,f,c
 24100  003E12  50DF               	movf	indf2,w,c
 24101  003E14  1272               	iorwf	3954,f,c	;volatile
 24102                           
 24103                           ; BSR set to: 0
 24104                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 24105  003E16  EE20 F009          	lfsr	2,9
 24106  003E1A  5185               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24107  003E1C  26D9               	addwf	fsr2l,f,c
 24108  003E1E  5186               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24109  003E20  22DA               	addwfc	fsr2h,f,c
 24110  003E22  50DF               	movf	indf2,w,c
 24111  003E24  6F87               	movwf	??_I2c_InitI2cModule& (0+255),b
 24112  003E26  0E05               	movlw	5
 24113  003E28  6F88               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 24114  003E2A                     u6825:
 24115  003E2A  90D8               	bcf	status,0,c
 24116  003E2C  3787               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 24117  003E2E  2F88               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 24118  003E30  D7FC               	goto	u6825
 24119  003E32  5187               	movf	??_I2c_InitI2cModule& (0+255),w,b
 24120  003E34  1272               	iorwf	3954,f,c	;volatile
 24121                           
 24122                           ; BSR set to: 0
 24123  003E36  0012               	return		;funcret
 24124  003E38                     __end_of_I2c_InitI2cModule:
 24125                           	opt stack 0
 24126                           tosu	equ	0xFFF
 24127                           tosh	equ	0xFFE
 24128                           tosl	equ	0xFFD
 24129                           pclath	equ	0xFFA
 24130                           tblptru	equ	0xFF8
 24131                           tblptrh	equ	0xFF7
 24132                           tblptrl	equ	0xFF6
 24133                           tablat	equ	0xFF5
 24134                           prodh	equ	0xFF4
 24135                           prodl	equ	0xFF3
 24136                           intcon	equ	0xFF2
 24137                           intcon2	equ	0xFF1
 24138                           intcon3	equ	0xFF0
 24139                           indf0	equ	0xFEF
 24140                           postinc0	equ	0xFEE
 24141                           plusw0	equ	0xFEB
 24142                           fsr0h	equ	0xFEA
 24143                           fsr0l	equ	0xFE9
 24144                           wreg	equ	0xFE8
 24145                           indf1	equ	0xFE7
 24146                           postinc1	equ	0xFE6
 24147                           postdec1	equ	0xFE5
 24148                           fsr1h	equ	0xFE2
 24149                           fsr1l	equ	0xFE1
 24150                           indf2	equ	0xFDF
 24151                           postinc2	equ	0xFDE
 24152                           postdec2	equ	0xFDD
 24153                           plusw2	equ	0xFDB
 24154                           fsr2h	equ	0xFDA
 24155                           fsr2l	equ	0xFD9
 24156                           status	equ	0xFD8
 24157                           
 24158 ;; *************** function _SetBaudRate *****************
 24159 ;; Defined at:
 24160 ;;		line 78 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 24161 ;; Parameters:    Size  Location     Type
 24162 ;;  DesiredI2cBu    4   25[BANK0 ] unsigned long 
 24163 ;;  McuClockHz      4   29[BANK0 ] unsigned long 
 24164 ;; Auto vars:     Size  Location     Type
 24165 ;;		None
 24166 ;; Return value:  Size  Location     Type
 24167 ;;                  1    wreg      void 
 24168 ;; Registers used:
 24169 ;;		wreg, status,2, status,0, cstack
 24170 ;; Tracked objects:
 24171 ;;		On entry : 0/0
 24172 ;;		On exit  : 0/0
 24173 ;;		Unchanged: 0/0
 24174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24175 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24177 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24178 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24179 ;;Total ram usage:       12 bytes
 24180 ;; Hardware stack levels used:    1
 24181 ;; Hardware stack levels required when called:   12
 24182 ;; This function calls:
 24183 ;;		___lldiv
 24184 ;; This function is called by:
 24185 ;;		_I2c_InitI2cModule
 24186 ;; This function uses a non-reentrant model
 24187 ;;
 24188                           
 24189                           	psect	text116
 24190  00447C                     __ptext116:
 24191                           	opt stack 0
 24192  00447C                     _SetBaudRate:
 24193                           	opt stack 14
 24194                           
 24195                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 24196                           
 24197                           ; BSR set to: 0
 24198                           ;incstack = 0
 24199  00447C  C07D  F06C         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 24200  004480  C07E  F06D         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 24201  004484  C07F  F06E         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 24202  004488  C080  F06F         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 24203  00448C  C079  F081         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 24204  004490  C07A  F082         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 24205  004494  C07B  F083         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 24206  004498  C07C  F084         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 24207  00449C  0E02               	movlw	2
 24208  00449E                     u5995:
 24209  00449E  90D8               	bcf	status,0,c
 24210  0044A0  0100               	movlb	0	; () banked
 24211  0044A2  3781               	rlcf	??_SetBaudRate& (0+255),f,b
 24212  0044A4  3782               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 24213  0044A6  3783               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 24214  0044A8  3784               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 24215  0044AA  2EE8               	decfsz	wreg,f,c
 24216  0044AC  D7F8               	goto	u5995
 24217  0044AE  C081  F070         	movff	??_SetBaudRate,___lldiv@divisor
 24218  0044B2  C082  F071         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 24219  0044B6  C083  F072         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 24220  0044BA  C084  F073         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 24221  0044BE  EC2B  F01E         	call	___lldiv	;wreg free
 24222  0044C2  0100               	movlb	0	; () banked
 24223  0044C4  056C               	decf	?___lldiv& (0+255),w,b
 24224  0044C6  6E74               	movwf	3956,c	;volatile
 24225                           
 24226                           ; BSR set to: 0
 24227  0044C8  0012               	return		;funcret
 24228  0044CA                     __end_of_SetBaudRate:
 24229                           	opt stack 0
 24230                           tosu	equ	0xFFF
 24231                           tosh	equ	0xFFE
 24232                           tosl	equ	0xFFD
 24233                           pclath	equ	0xFFA
 24234                           tblptru	equ	0xFF8
 24235                           tblptrh	equ	0xFF7
 24236                           tblptrl	equ	0xFF6
 24237                           tablat	equ	0xFF5
 24238                           prodh	equ	0xFF4
 24239                           prodl	equ	0xFF3
 24240                           intcon	equ	0xFF2
 24241                           intcon2	equ	0xFF1
 24242                           intcon3	equ	0xFF0
 24243                           indf0	equ	0xFEF
 24244                           postinc0	equ	0xFEE
 24245                           plusw0	equ	0xFEB
 24246                           fsr0h	equ	0xFEA
 24247                           fsr0l	equ	0xFE9
 24248                           wreg	equ	0xFE8
 24249                           indf1	equ	0xFE7
 24250                           postinc1	equ	0xFE6
 24251                           postdec1	equ	0xFE5
 24252                           fsr1h	equ	0xFE2
 24253                           fsr1l	equ	0xFE1
 24254                           indf2	equ	0xFDF
 24255                           postinc2	equ	0xFDE
 24256                           postdec2	equ	0xFDD
 24257                           plusw2	equ	0xFDB
 24258                           fsr2h	equ	0xFDA
 24259                           fsr2l	equ	0xFD9
 24260                           status	equ	0xFD8
 24261                           
 24262 ;; *************** function ___lldiv *****************
 24263 ;; Defined at:
 24264 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 24265 ;; Parameters:    Size  Location     Type
 24266 ;;  dividend        4   12[BANK0 ] unsigned long 
 24267 ;;  divisor         4   16[BANK0 ] unsigned long 
 24268 ;; Auto vars:     Size  Location     Type
 24269 ;;  quotient        4   20[BANK0 ] unsigned long 
 24270 ;;  counter         1   24[BANK0 ] unsigned char 
 24271 ;; Return value:  Size  Location     Type
 24272 ;;                  4   12[BANK0 ] unsigned long 
 24273 ;; Registers used:
 24274 ;;		wreg, status,2, status,0
 24275 ;; Tracked objects:
 24276 ;;		On entry : 0/0
 24277 ;;		On exit  : 0/0
 24278 ;;		Unchanged: 0/0
 24279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24280 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24281 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24283 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24284 ;;Total ram usage:       13 bytes
 24285 ;; Hardware stack levels used:    1
 24286 ;; Hardware stack levels required when called:   11
 24287 ;; This function calls:
 24288 ;;		Nothing
 24289 ;; This function is called by:
 24290 ;;		_SetBaudRate
 24291 ;;		_Tmr_TmrBPrSet
 24292 ;;		_SetUartBaudRate
 24293 ;; This function uses a non-reentrant model
 24294 ;;
 24295                           
 24296                           	psect	text117
 24297  003C56                     __ptext117:
 24298                           	opt stack 0
 24299  003C56                     ___lldiv:
 24300                           	opt stack 15
 24301                           
 24302                           ; BSR set to: 0
 24303                           ;incstack = 0
 24304  003C56  0E00               	movlw	0
 24305  003C58  0100               	movlb	0	; () banked
 24306  003C5A  6F74               	movwf	___lldiv@quotient& (0+255),b
 24307  003C5C  0E00               	movlw	0
 24308  003C5E  6F75               	movwf	(___lldiv@quotient+1)& (0+255),b
 24309  003C60  0E00               	movlw	0
 24310  003C62  6F76               	movwf	(___lldiv@quotient+2)& (0+255),b
 24311  003C64  0E00               	movlw	0
 24312  003C66  6F77               	movwf	(___lldiv@quotient+3)& (0+255),b
 24313                           
 24314                           ; BSR set to: 0
 24315  003C68  5170               	movf	___lldiv@divisor& (0+255),w,b
 24316  003C6A  1171               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24317  003C6C  1172               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24318  003C6E  1173               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24319  003C70  B4D8               	btfsc	status,2,c
 24320  003C72  D02A               	goto	l2511
 24321                           
 24322                           ; BSR set to: 0
 24323  003C74  0E01               	movlw	1
 24324  003C76  6F78               	movwf	___lldiv@counter& (0+255),b
 24325  003C78  D006               	goto	l2506
 24326  003C7A                     
 24327                           ; BSR set to: 0
 24328                           
 24329                           ; BSR set to: 0
 24330  003C7A  90D8               	bcf	status,0,c
 24331  003C7C  3770               	rlcf	___lldiv@divisor& (0+255),f,b
 24332  003C7E  3771               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24333  003C80  3772               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24334  003C82  3773               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24335  003C84  2B78               	incf	___lldiv@counter& (0+255),f,b
 24336  003C86                     l2506:
 24337                           
 24338                           ; BSR set to: 0
 24339                           
 24340                           ; BSR set to: 0
 24341  003C86  AF73               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24342  003C88  D7F8               	goto	l2507
 24343  003C8A                     u5920:
 24344                           
 24345                           ; BSR set to: 0
 24346                           
 24347                           ; BSR set to: 0
 24348                           
 24349                           ; BSR set to: 0
 24350  003C8A  90D8               	bcf	status,0,c
 24351  003C8C  3774               	rlcf	___lldiv@quotient& (0+255),f,b
 24352  003C8E  3775               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24353  003C90  3776               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24354  003C92  3777               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24355                           
 24356                           ; BSR set to: 0
 24357  003C94  5170               	movf	___lldiv@divisor& (0+255),w,b
 24358  003C96  5D6C               	subwf	___lldiv@dividend& (0+255),w,b
 24359  003C98  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24360  003C9A  596D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24361  003C9C  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24362  003C9E  596E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24363  003CA0  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24364  003CA2  596F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24365  003CA4  A0D8               	btfss	status,0,c
 24366  003CA6  D009               	goto	l2510
 24367                           
 24368                           ; BSR set to: 0
 24369  003CA8  5170               	movf	___lldiv@divisor& (0+255),w,b
 24370  003CAA  5F6C               	subwf	___lldiv@dividend& (0+255),f,b
 24371  003CAC  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24372  003CAE  5B6D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24373  003CB0  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24374  003CB2  5B6E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24375  003CB4  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24376  003CB6  5B6F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24377                           
 24378                           ; BSR set to: 0
 24379  003CB8  8174               	bsf	___lldiv@quotient& (0+255),0,b
 24380  003CBA                     l2510:
 24381                           
 24382                           ; BSR set to: 0
 24383                           
 24384                           ; BSR set to: 0
 24385  003CBA  90D8               	bcf	status,0,c
 24386  003CBC  3373               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24387  003CBE  3372               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24388  003CC0  3371               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24389  003CC2  3370               	rrcf	___lldiv@divisor& (0+255),f,b
 24390                           
 24391                           ; BSR set to: 0
 24392  003CC4  2F78               	decfsz	___lldiv@counter& (0+255),f,b
 24393  003CC6  D7E1               	goto	u5920
 24394  003CC8                     l2511:
 24395                           
 24396                           ; BSR set to: 0
 24397                           
 24398                           ; BSR set to: 0
 24399  003CC8  C074  F06C         	movff	___lldiv@quotient,?___lldiv
 24400  003CCC  C075  F06D         	movff	___lldiv@quotient+1,?___lldiv+1
 24401  003CD0  C076  F06E         	movff	___lldiv@quotient+2,?___lldiv+2
 24402  003CD4  C077  F06F         	movff	___lldiv@quotient+3,?___lldiv+3
 24403                           
 24404                           ; BSR set to: 0
 24405  003CD8  0012               	return		;funcret
 24406  003CDA                     __end_of___lldiv:
 24407                           	opt stack 0
 24408                           tosu	equ	0xFFF
 24409                           tosh	equ	0xFFE
 24410                           tosl	equ	0xFFD
 24411                           pclath	equ	0xFFA
 24412                           tblptru	equ	0xFF8
 24413                           tblptrh	equ	0xFF7
 24414                           tblptrl	equ	0xFF6
 24415                           tablat	equ	0xFF5
 24416                           prodh	equ	0xFF4
 24417                           prodl	equ	0xFF3
 24418                           intcon	equ	0xFF2
 24419                           intcon2	equ	0xFF1
 24420                           intcon3	equ	0xFF0
 24421                           indf0	equ	0xFEF
 24422                           postinc0	equ	0xFEE
 24423                           plusw0	equ	0xFEB
 24424                           fsr0h	equ	0xFEA
 24425                           fsr0l	equ	0xFE9
 24426                           wreg	equ	0xFE8
 24427                           indf1	equ	0xFE7
 24428                           postinc1	equ	0xFE6
 24429                           postdec1	equ	0xFE5
 24430                           fsr1h	equ	0xFE2
 24431                           fsr1l	equ	0xFE1
 24432                           indf2	equ	0xFDF
 24433                           postinc2	equ	0xFDE
 24434                           postdec2	equ	0xFDD
 24435                           plusw2	equ	0xFDB
 24436                           fsr2h	equ	0xFDA
 24437                           fsr2l	equ	0xFD9
 24438                           status	equ	0xFD8
 24439                           
 24440 ;; *************** function _I2cSetConfig *****************
 24441 ;; Defined at:
 24442 ;;		line 89 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24443 ;; Parameters:    Size  Location     Type
 24444 ;;		None
 24445 ;; Auto vars:     Size  Location     Type
 24446 ;;		None
 24447 ;; Return value:  Size  Location     Type
 24448 ;;                  1    wreg      void 
 24449 ;; Registers used:
 24450 ;;		wreg, status,2
 24451 ;; Tracked objects:
 24452 ;;		On entry : 0/0
 24453 ;;		On exit  : 0/0
 24454 ;;		Unchanged: 0/0
 24455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24460 ;;Total ram usage:        0 bytes
 24461 ;; Hardware stack levels used:    1
 24462 ;; Hardware stack levels required when called:   11
 24463 ;; This function calls:
 24464 ;;		Nothing
 24465 ;; This function is called by:
 24466 ;;		_I2cSlv_MainTask
 24467 ;; This function uses a non-reentrant model
 24468 ;;
 24469                           
 24470                           	psect	text118
 24471  004AF0                     __ptext118:
 24472                           	opt stack 0
 24473  004AF0                     _I2cSetConfig:
 24474                           	opt stack 16
 24475                           
 24476                           ;i2c_slv.c: 91: I2cConfig.I2cBaudRateHz = ((UINT32)(100000));
 24477                           
 24478                           ; BSR set to: 0
 24479                           ;incstack = 0
 24480  004AF0  0EA0               	movlw	160
 24481  004AF2  0101               	movlb	1	; () banked
 24482  004AF4  6F8D               	movwf	_I2cConfig& (0+255),b
 24483  004AF6  0E86               	movlw	134
 24484  004AF8  6F8E               	movwf	(_I2cConfig+1)& (0+255),b
 24485  004AFA  0E01               	movlw	1
 24486  004AFC  6F8F               	movwf	(_I2cConfig+2)& (0+255),b
 24487  004AFE  0E00               	movlw	0
 24488  004B00  6F90               	movwf	(_I2cConfig+3)& (0+255),b
 24489                           
 24490                           ;i2c_slv.c: 92: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 24491  004B02  0E00               	movlw	0
 24492  004B04  6F91               	movwf	(_I2cConfig+4)& (0+255),b
 24493  004B06  0E6C               	movlw	108
 24494  004B08  6F92               	movwf	(_I2cConfig+5)& (0+255),b
 24495  004B0A  0EDC               	movlw	220
 24496  004B0C  6F93               	movwf	(_I2cConfig+6)& (0+255),b
 24497  004B0E  0E02               	movlw	2
 24498  004B10  6F94               	movwf	(_I2cConfig+7)& (0+255),b
 24499                           
 24500                           ;i2c_slv.c: 93: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 24501  004B12  0E08               	movlw	8
 24502  004B14  6F95               	movwf	(_I2cConfig+8)& (0+255),b
 24503                           
 24504                           ;i2c_slv.c: 94: I2cConfig.EnableI2cModule = ((UINT8)(1));
 24505  004B16  0E01               	movlw	1
 24506  004B18  6F96               	movwf	(_I2cConfig+9)& (0+255),b
 24507                           
 24508                           ; BSR set to: 1
 24509  004B1A  0012               	return		;funcret
 24510  004B1C                     __end_of_I2cSetConfig:
 24511                           	opt stack 0
 24512                           tosu	equ	0xFFF
 24513                           tosh	equ	0xFFE
 24514                           tosl	equ	0xFFD
 24515                           pclath	equ	0xFFA
 24516                           tblptru	equ	0xFF8
 24517                           tblptrh	equ	0xFF7
 24518                           tblptrl	equ	0xFF6
 24519                           tablat	equ	0xFF5
 24520                           prodh	equ	0xFF4
 24521                           prodl	equ	0xFF3
 24522                           intcon	equ	0xFF2
 24523                           intcon2	equ	0xFF1
 24524                           intcon3	equ	0xFF0
 24525                           indf0	equ	0xFEF
 24526                           postinc0	equ	0xFEE
 24527                           plusw0	equ	0xFEB
 24528                           fsr0h	equ	0xFEA
 24529                           fsr0l	equ	0xFE9
 24530                           wreg	equ	0xFE8
 24531                           indf1	equ	0xFE7
 24532                           postinc1	equ	0xFE6
 24533                           postdec1	equ	0xFE5
 24534                           fsr1h	equ	0xFE2
 24535                           fsr1l	equ	0xFE1
 24536                           indf2	equ	0xFDF
 24537                           postinc2	equ	0xFDE
 24538                           postdec2	equ	0xFDD
 24539                           plusw2	equ	0xFDB
 24540                           fsr2h	equ	0xFDA
 24541                           fsr2l	equ	0xFD9
 24542                           status	equ	0xFD8
 24543                           
 24544 ;; *************** function _I2cSendMsgSm *****************
 24545 ;; Defined at:
 24546 ;;		line 105 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24547 ;; Parameters:    Size  Location     Type
 24548 ;;		None
 24549 ;; Auto vars:     Size  Location     Type
 24550 ;;		None
 24551 ;; Return value:  Size  Location     Type
 24552 ;;                  1    wreg      void 
 24553 ;; Registers used:
 24554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24555 ;; Tracked objects:
 24556 ;;		On entry : 0/0
 24557 ;;		On exit  : 0/0
 24558 ;;		Unchanged: 0/0
 24559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24564 ;;Total ram usage:        0 bytes
 24565 ;; Hardware stack levels used:    1
 24566 ;; Hardware stack levels required when called:   13
 24567 ;; This function calls:
 24568 ;;		_I2c_ReadData
 24569 ;;		_I2c_WriteData
 24570 ;;		_ReceiveEvt
 24571 ;; This function is called by:
 24572 ;;		_I2cSlv_MainTask
 24573 ;; This function uses a non-reentrant model
 24574 ;;
 24575                           
 24576                           	psect	text119
 24577  0031C0                     __ptext119:
 24578                           	opt stack 0
 24579  0031C0                     _I2cSendMsgSm:
 24580                           	opt stack 14
 24581                           
 24582                           ;i2c_slv.c: 108: static I2cComStateType I2cComState = I2cComIdle;
 24583                           ;i2c_slv.c: 110: switch(I2cComState)
 24584                           
 24585                           ; BSR set to: 1
 24586                           ;incstack = 0
 24587  0031C0  D045               	goto	l1152
 24588  0031C2                     
 24589                           ;i2c_slv.c: 114: if (ReceiveEvt(&I2cWriteDataEvt))
 24590  0031C2  0E54               	movlw	low _I2cWriteDataEvt
 24591  0031C4  0100               	movlb	0	; () banked
 24592  0031C6  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 24593  0031C8  0E00               	movlw	high _I2cWriteDataEvt
 24594  0031CA  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24595  0031CC  EC61  F025         	call	_ReceiveEvt	;wreg free
 24596  0031D0  0900               	iorlw	0
 24597  0031D2  B4D8               	btfsc	status,2,c
 24598  0031D4  D006               	goto	l1154
 24599                           
 24600                           ;i2c_slv.c: 115: {
 24601                           ;i2c_slv.c: 117: I2cComState = I2cComWriteData;
 24602  0031D6  0E01               	movlw	1
 24603  0031D8  0101               	movlb	1	; () banked
 24604  0031DA  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24605                           
 24606                           ;i2c_slv.c: 119: I2cComSts = TxInProgress;
 24607  0031DC  0E01               	movlw	1
 24608  0031DE  6E4E               	movwf	_I2cComSts,c
 24609                           
 24610                           ;i2c_slv.c: 120: }
 24611  0031E0  0012               	return	
 24612  0031E2                     l1154:
 24613                           
 24614                           ;i2c_slv.c: 121: else if (ReceiveEvt(&I2cReadDataEvt))
 24615                           
 24616                           ; BSR set to: 1
 24617  0031E2  0E53               	movlw	low _I2cReadDataEvt
 24618  0031E4  0100               	movlb	0	; () banked
 24619  0031E6  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 24620  0031E8  0E00               	movlw	high _I2cReadDataEvt
 24621  0031EA  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24622  0031EC  EC61  F025         	call	_ReceiveEvt	;wreg free
 24623  0031F0  0900               	iorlw	0
 24624  0031F2  B4D8               	btfsc	status,2,c
 24625  0031F4  D006               	goto	l1156
 24626                           
 24627                           ;i2c_slv.c: 122: {
 24628                           ;i2c_slv.c: 124: I2cComState = I2cComReadData;
 24629  0031F6  0E02               	movlw	2
 24630  0031F8  0101               	movlb	1	; () banked
 24631  0031FA  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24632                           
 24633                           ;i2c_slv.c: 126: I2cComSts = RxInProgress;
 24634  0031FC  0E02               	movlw	2
 24635  0031FE  6E4E               	movwf	_I2cComSts,c
 24636                           
 24637                           ;i2c_slv.c: 127: }
 24638  003200  0012               	return	
 24639  003202                     l1156:
 24640                           
 24641                           ;i2c_slv.c: 128: else
 24642                           ;i2c_slv.c: 129: {
 24643                           ;i2c_slv.c: 131: I2cComSts = TxRxIdle;
 24644                           
 24645                           ; BSR set to: 1
 24646  003202  0E00               	movlw	0
 24647  003204  6E4E               	movwf	_I2cComSts,c
 24648                           
 24649                           ;i2c_slv.c: 132: }
 24650                           ;i2c_slv.c: 133: break;
 24651  003206  0012               	return	
 24652  003208                     
 24653                           ;i2c_slv.c: 137: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 24654  003208  0EAC               	movlw	low _I2cTxPacket
 24655  00320A  0100               	movlb	0	; () banked
 24656  00320C  6F61               	movwf	I2c_WriteData@WritePacket& (0+255),b
 24657  00320E  0E01               	movlw	high _I2cTxPacket
 24658  003210  6F62               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 24659  003212  EC72  F00C         	call	_I2c_WriteData	;wreg free
 24660  003216  0900               	iorlw	0
 24661  003218  B4D8               	btfsc	status,2,c
 24662  00321A  0012               	return	
 24663                           
 24664                           ;i2c_slv.c: 138: {
 24665                           ;i2c_slv.c: 140: I2cComState = I2cComWriteComplete;
 24666  00321C  0E03               	movlw	3
 24667  00321E  0101               	movlb	1	; () banked
 24668  003220  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24669                           
 24670                           ; BSR set to: 1
 24671                           ;i2c_slv.c: 141: }
 24672                           ;i2c_slv.c: 142: break;
 24673  003222  0012               	return	
 24674  003224                     
 24675                           ; BSR set to: 1
 24676                           ;i2c_slv.c: 146: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 24677                           
 24678                           ; BSR set to: 1
 24679  003224  0EA6               	movlw	low _I2cRxPacket
 24680  003226  0100               	movlb	0	; () banked
 24681  003228  6F63               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 24682  00322A  0E01               	movlw	high _I2cRxPacket
 24683  00322C  6F64               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 24684  00322E  EC32  F00D         	call	_I2c_ReadData	;wreg free
 24685  003232  0900               	iorlw	0
 24686  003234  B4D8               	btfsc	status,2,c
 24687  003236  0012               	return	
 24688                           
 24689                           ;i2c_slv.c: 147: {
 24690                           ;i2c_slv.c: 149: I2cComState = I2cComReadComplete;
 24691  003238  0E04               	movlw	4
 24692  00323A  0101               	movlb	1	; () banked
 24693  00323C  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24694                           
 24695                           ; BSR set to: 1
 24696                           ;i2c_slv.c: 150: }
 24697                           ;i2c_slv.c: 152: break;
 24698  00323E  0012               	return	
 24699  003240                     
 24700                           ; BSR set to: 1
 24701                           ;i2c_slv.c: 156: I2cComState = I2cComIdle;
 24702                           
 24703                           ; BSR set to: 1
 24704  003240  0E00               	movlw	0
 24705  003242  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24706                           
 24707                           ;i2c_slv.c: 157: break;
 24708  003244  0012               	return	
 24709  003246                     
 24710                           ; BSR set to: 1
 24711                           ;i2c_slv.c: 161: I2cComState = I2cComIdle;
 24712                           
 24713                           ; BSR set to: 1
 24714  003246  0E00               	movlw	0
 24715  003248  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24716                           
 24717                           ; BSR set to: 1
 24718                           ;i2c_slv.c: 166: }
 24719                           
 24720                           ; BSR set to: 1
 24721                           ;i2c_slv.c: 165: break;
 24722                           
 24723                           ;i2c_slv.c: 164: default:
 24724                           
 24725                           ;i2c_slv.c: 162: break;
 24726  00324A  0012               	return	
 24727  00324C                     l1152:
 24728                           
 24729                           ; BSR set to: 1
 24730  00324C  0101               	movlb	1	; () banked
 24731  00324E  5163               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 24732                           
 24733                           ; Switch size 1, requested type "space"
 24734                           ; Number of cases is 5, Range of values is 0 to 4
 24735                           ; switch strategies available:
 24736                           ; Name         Instructions Cycles
 24737                           ; simple_byte           16     9 (average)
 24738                           ;	Chosen strategy is simple_byte
 24739  003250  0A00               	xorlw	0	; case 0
 24740  003252  B4D8               	btfsc	status,2,c
 24741  003254  D7B6               	goto	l1153
 24742  003256  0A01               	xorlw	1	; case 1
 24743  003258  B4D8               	btfsc	status,2,c
 24744  00325A  D7D6               	goto	l1159
 24745  00325C  0A03               	xorlw	3	; case 2
 24746  00325E  B4D8               	btfsc	status,2,c
 24747  003260  D7E1               	goto	l1161
 24748  003262  0A01               	xorlw	1	; case 3
 24749  003264  B4D8               	btfsc	status,2,c
 24750  003266  D7EC               	goto	l1163
 24751  003268  0A07               	xorlw	7	; case 4
 24752  00326A  A4D8               	btfss	status,2,c
 24753  00326C  0012               	return	
 24754  00326E  D7EB               	goto	l1164
 24755  003270                     __end_of_I2cSendMsgSm:
 24756                           	opt stack 0
 24757                           tosu	equ	0xFFF
 24758                           tosh	equ	0xFFE
 24759                           tosl	equ	0xFFD
 24760                           pclath	equ	0xFFA
 24761                           tblptru	equ	0xFF8
 24762                           tblptrh	equ	0xFF7
 24763                           tblptrl	equ	0xFF6
 24764                           tablat	equ	0xFF5
 24765                           prodh	equ	0xFF4
 24766                           prodl	equ	0xFF3
 24767                           intcon	equ	0xFF2
 24768                           intcon2	equ	0xFF1
 24769                           intcon3	equ	0xFF0
 24770                           indf0	equ	0xFEF
 24771                           postinc0	equ	0xFEE
 24772                           plusw0	equ	0xFEB
 24773                           fsr0h	equ	0xFEA
 24774                           fsr0l	equ	0xFE9
 24775                           wreg	equ	0xFE8
 24776                           indf1	equ	0xFE7
 24777                           postinc1	equ	0xFE6
 24778                           postdec1	equ	0xFE5
 24779                           fsr1h	equ	0xFE2
 24780                           fsr1l	equ	0xFE1
 24781                           indf2	equ	0xFDF
 24782                           postinc2	equ	0xFDE
 24783                           postdec2	equ	0xFDD
 24784                           plusw2	equ	0xFDB
 24785                           fsr2h	equ	0xFDA
 24786                           fsr2l	equ	0xFD9
 24787                           status	equ	0xFD8
 24788                           
 24789 ;; *************** function _ReceiveEvt *****************
 24790 ;; Defined at:
 24791 ;;		line 95 in file "../Source/c/02_Osl/os_ser.c"
 24792 ;; Parameters:    Size  Location     Type
 24793 ;;  Event           2    0[BANK0 ] PTR struct EventStructur
 24794 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), WifiReceiveData(1), 
 24795 ;;		 -> WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), NewWifiPacketParser(1), 
 24796 ;;		 -> NewWifiPacket(1), WifiRxPacket(253), StartWifiModem(1), NewWifiUartData(1), 
 24797 ;; Auto vars:     Size  Location     Type
 24798 ;;  EventStatus     1    3[BANK0 ] enum E7721
 24799 ;; Return value:  Size  Location     Type
 24800 ;;                  1    wreg      enum E7693
 24801 ;; Registers used:
 24802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24803 ;; Tracked objects:
 24804 ;;		On entry : 0/0
 24805 ;;		On exit  : 0/0
 24806 ;;		Unchanged: 0/0
 24807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24808 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24809 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24810 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24811 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24812 ;;Total ram usage:        4 bytes
 24813 ;; Hardware stack levels used:    1
 24814 ;; Hardware stack levels required when called:   11
 24815 ;; This function calls:
 24816 ;;		Nothing
 24817 ;; This function is called by:
 24818 ;;		_MdmWifi_StartWifiModemSm
 24819 ;;		_MdmWifiGetUartData
 24820 ;;		_MdmWifiEvtParser
 24821 ;;		_MdmWifi_ReceiveWifiMsg
 24822 ;;		_StartConnectionSm
 24823 ;;		_SendDataSm
 24824 ;;		_ReceiveDataSm
 24825 ;;		_I2cSendMsgSm
 24826 ;;		_I2cSlv_I2cReadMsgSts
 24827 ;;		_MdmWifi_ReceiveWifiMsgTerminal
 24828 ;;		_MdmWifiCmd_ReceiveWifiMsg
 24829 ;; This function uses a non-reentrant model
 24830 ;;
 24831                           
 24832                           	psect	text120
 24833  004AC2                     __ptext120:
 24834                           	opt stack 0
 24835  004AC2                     _ReceiveEvt:
 24836                           	opt stack 13
 24837                           
 24838                           ;os_ser.c: 98: EventStatusType EventStatus = EventIdle;
 24839                           
 24840                           ;incstack = 0
 24841  004AC2  0E00               	movlw	0
 24842  004AC4  0100               	movlb	0	; () banked
 24843  004AC6  6F63               	movwf	ReceiveEvt@EventStatus& (0+255),b
 24844                           
 24845                           ; BSR set to: 0
 24846                           ;os_ser.c: 101: if (Event->EventStatus == EventSent)
 24847  004AC8  C060  FFD9         	movff	ReceiveEvt@Event,fsr2l
 24848  004ACC  C061  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 24849  004AD0  0E02               	movlw	2
 24850  004AD2  18DE               	xorwf	postinc2,w,c
 24851  004AD4  A4D8               	btfss	status,2,c
 24852  004AD6  D008               	goto	l761
 24853                           
 24854                           ; BSR set to: 0
 24855                           ;os_ser.c: 102: {
 24856                           ;os_ser.c: 104: Event->EventStatus = EventReceived;
 24857  004AD8  C060  FFD9         	movff	ReceiveEvt@Event,fsr2l
 24858  004ADC  C061  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 24859  004AE0  0E01               	movlw	1
 24860  004AE2  6EDF               	movwf	indf2,c
 24861                           
 24862                           ; BSR set to: 0
 24863                           ;os_ser.c: 106: EventStatus = EventReceived;
 24864  004AE4  0E01               	movlw	1
 24865  004AE6  D001               	goto	L30
 24866  004AE8                     l761:
 24867                           
 24868                           ; BSR set to: 0
 24869                           ;os_ser.c: 108: else
 24870                           ;os_ser.c: 109: {
 24871                           ;os_ser.c: 111: EventStatus = EventIdle;
 24872                           
 24873                           ; BSR set to: 0
 24874  004AE8  0E00               	movlw	0
 24875  004AEA                     L30:
 24876  004AEA  6F63               	movwf	ReceiveEvt@EventStatus& (0+255),b
 24877                           
 24878                           ; BSR set to: 0
 24879                           ;os_ser.c: 112: }
 24880                           ;os_ser.c: 115: return(EventStatus);
 24881  004AEC  5163               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 24882  004AEE  0012               	return	
 24883  004AF0                     __end_of_ReceiveEvt:
 24884                           	opt stack 0
 24885                           tosu	equ	0xFFF
 24886                           tosh	equ	0xFFE
 24887                           tosl	equ	0xFFD
 24888                           pclath	equ	0xFFA
 24889                           tblptru	equ	0xFF8
 24890                           tblptrh	equ	0xFF7
 24891                           tblptrl	equ	0xFF6
 24892                           tablat	equ	0xFF5
 24893                           prodh	equ	0xFF4
 24894                           prodl	equ	0xFF3
 24895                           intcon	equ	0xFF2
 24896                           intcon2	equ	0xFF1
 24897                           intcon3	equ	0xFF0
 24898                           indf0	equ	0xFEF
 24899                           postinc0	equ	0xFEE
 24900                           plusw0	equ	0xFEB
 24901                           fsr0h	equ	0xFEA
 24902                           fsr0l	equ	0xFE9
 24903                           wreg	equ	0xFE8
 24904                           indf1	equ	0xFE7
 24905                           postinc1	equ	0xFE6
 24906                           postdec1	equ	0xFE5
 24907                           fsr1h	equ	0xFE2
 24908                           fsr1l	equ	0xFE1
 24909                           indf2	equ	0xFDF
 24910                           postinc2	equ	0xFDE
 24911                           postdec2	equ	0xFDD
 24912                           plusw2	equ	0xFDB
 24913                           fsr2h	equ	0xFDA
 24914                           fsr2l	equ	0xFD9
 24915                           status	equ	0xFD8
 24916                           
 24917 ;; *************** function _I2c_WriteData *****************
 24918 ;; Defined at:
 24919 ;;		line 252 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 24920 ;; Parameters:    Size  Location     Type
 24921 ;;  WritePacket     2    1[BANK0 ] PTR struct _I2cWritePack
 24922 ;;		 -> I2cTxPacket(5), 
 24923 ;; Auto vars:     Size  Location     Type
 24924 ;;		None
 24925 ;; Return value:  Size  Location     Type
 24926 ;;                  1    wreg      enum E7734
 24927 ;; Registers used:
 24928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24929 ;; Tracked objects:
 24930 ;;		On entry : 0/0
 24931 ;;		On exit  : 0/0
 24932 ;;		Unchanged: 0/0
 24933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24937 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24938 ;;Total ram usage:        4 bytes
 24939 ;; Hardware stack levels used:    1
 24940 ;; Hardware stack levels required when called:   12
 24941 ;; This function calls:
 24942 ;;		_CheckAckStatus
 24943 ;;		_CheckTxStatus
 24944 ;;		_StartCondition
 24945 ;;		_StopCondition
 24946 ;;		_WriteByte
 24947 ;; This function is called by:
 24948 ;;		_I2cSendMsgSm
 24949 ;; This function uses a non-reentrant model
 24950 ;;
 24951                           
 24952                           	psect	text121
 24953  0018E4                     __ptext121:
 24954                           	opt stack 0
 24955  0018E4                     _I2c_WriteData:
 24956                           	opt stack 14
 24957                           
 24958                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 24959                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 24960                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 24961                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 24962                           ;i2c_drv.c: 260: switch (I2cWriteState)
 24963                           
 24964                           ; BSR set to: 0
 24965                           ;incstack = 0
 24966  0018E4  D09C               	goto	l160
 24967  0018E6                     
 24968                           ;i2c_drv.c: 264: StartCondition();
 24969  0018E6  ECBC  F027         	call	_StartCondition	;wreg free
 24970                           
 24971                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 24972  0018EA  0E00               	movlw	0
 24973  0018EC  0101               	movlb	1	; () banked
 24974  0018EE  6F74               	movwf	I2c_WriteData@WriteStatus& (0+255),b
 24975                           
 24976                           ; BSR set to: 1
 24977                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 24978  0018F0  0E01               	movlw	1
 24979  0018F2  D06C               	goto	L34
 24980  0018F4                     
 24981                           ; BSR set to: 1
 24982                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 24983                           
 24984                           ; BSR set to: 1
 24985  0018F4  0100               	movlb	0	; () banked
 24986  0018F6  EE20 F001          	lfsr	2,1
 24987  0018FA  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 24988  0018FC  26D9               	addwf	fsr2l,f,c
 24989  0018FE  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 24990  001900  22DA               	addwfc	fsr2h,f,c
 24991  001902  50DF               	movf	indf2,w,c
 24992  001904  6F63               	movwf	??_I2c_WriteData& (0+255),b
 24993  001906  C061  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 24994  00190A  C062  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 24995  00190E  50DF               	movf	indf2,w,c
 24996  001910  6F64               	movwf	(??_I2c_WriteData+1)& (0+255),b
 24997  001912  90D8               	bcf	status,0,c
 24998  001914  3564               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 24999  001916  1163               	iorwf	??_I2c_WriteData& (0+255),w,b
 25000  001918  C061  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 25001  00191C  C062  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 25002  001920  6EDF               	movwf	indf2,c
 25003                           
 25004                           ; BSR set to: 0
 25005                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 25006  001922  C061  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 25007  001926  C062  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 25008  00192A  50DF               	movf	indf2,w,c
 25009  00192C  ECA0  F027         	call	_WriteByte
 25010                           
 25011                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 25012  001930  0E02               	movlw	2
 25013  001932  0101               	movlb	1	; () banked
 25014  001934  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25015  001936                     
 25016                           ; BSR set to: 1
 25017                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 25018                           
 25019                           ; BSR set to: 1
 25020  001936  ECAA  F027         	call	_CheckTxStatus	;wreg free
 25021  00193A  0900               	iorlw	0
 25022  00193C  A4D8               	btfss	status,2,c
 25023  00193E  D08F               	goto	l162
 25024                           
 25025                           ;i2c_drv.c: 282: {
 25026                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 25027  001940  0E03               	movlw	3
 25028  001942  D01B               	goto	L38
 25029  001944                     
 25030                           ; BSR set to: 1
 25031                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 25032                           
 25033                           ; BSR set to: 1
 25034  001944  0100               	movlb	0	; () banked
 25035  001946  EE20 F002          	lfsr	2,2
 25036  00194A  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25037  00194C  26D9               	addwf	fsr2l,f,c
 25038  00194E  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25039  001950  22DA               	addwfc	fsr2h,f,c
 25040  001952  CFDE F063          	movff	postinc2,??_I2c_WriteData
 25041  001956  CFDD F064          	movff	postdec2,??_I2c_WriteData+1
 25042  00195A  C063  FFD9         	movff	??_I2c_WriteData,fsr2l
 25043  00195E  C064  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 25044  001962  50DF               	movf	indf2,w,c
 25045  001964  ECA0  F027         	call	_WriteByte
 25046                           
 25047                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 25048  001968  0E04               	movlw	4
 25049  00196A                     L37:
 25050  00196A  0101               	movlb	1	; () banked
 25051  00196C  D02F               	goto	L34
 25052  00196E                     
 25053                           ; BSR set to: 1
 25054                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 25055                           
 25056                           ; BSR set to: 1
 25057  00196E  ECAA  F027         	call	_CheckTxStatus	;wreg free
 25058  001972  0900               	iorlw	0
 25059  001974  A4D8               	btfss	status,2,c
 25060  001976  D073               	goto	l162
 25061                           
 25062                           ;i2c_drv.c: 300: {
 25063                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 25064  001978  0E05               	movlw	5
 25065  00197A                     L38:
 25066  00197A  0101               	movlb	1	; () banked
 25067  00197C  6F76               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25068                           
 25069                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 25070  00197E  0E08               	movlw	8
 25071  001980  D025               	goto	L34
 25072  001982                     
 25073                           ; BSR set to: 1
 25074                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 25075                           
 25076                           ; BSR set to: 1
 25077  001982  0100               	movlb	0	; () banked
 25078  001984  EE20 F004          	lfsr	2,4
 25079  001988  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25080  00198A  26D9               	addwf	fsr2l,f,c
 25081  00198C  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25082  00198E  22DA               	addwfc	fsr2h,f,c
 25083  001990  50DF               	movf	indf2,w,c
 25084  001992  B4D8               	btfsc	status,2,c
 25085  001994  D010               	goto	l170
 25086                           
 25087                           ; BSR set to: 0
 25088                           ;i2c_drv.c: 310: {
 25089                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 25090  001996  EE20 F004          	lfsr	2,4
 25091  00199A  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25092  00199C  26D9               	addwf	fsr2l,f,c
 25093  00199E  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25094  0019A0  22DA               	addwfc	fsr2h,f,c
 25095  0019A2  06DF               	decf	indf2,f,c
 25096                           
 25097                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 25098  0019A4  EE20 F002          	lfsr	2,2
 25099  0019A8  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25100  0019AA  26D9               	addwf	fsr2l,f,c
 25101  0019AC  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25102  0019AE  22DA               	addwfc	fsr2h,f,c
 25103  0019B0  2ADE               	incf	postinc2,f,c
 25104  0019B2  0E00               	movlw	0
 25105  0019B4  22DD               	addwfc	postdec2,f,c
 25106  0019B6                     l170:
 25107                           
 25108                           ; BSR set to: 0
 25109                           ;i2c_drv.c: 315: }
 25110                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 25111  0019B6  EE20 F004          	lfsr	2,4
 25112  0019BA  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25113  0019BC  26D9               	addwf	fsr2l,f,c
 25114  0019BE  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25115  0019C0  22DA               	addwfc	fsr2h,f,c
 25116  0019C2  50DF               	movf	indf2,w,c
 25117  0019C4  A4D8               	btfss	status,2,c
 25118  0019C6  D004               	goto	l171
 25119                           
 25120                           ; BSR set to: 0
 25121                           ;i2c_drv.c: 319: {
 25122                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 25123  0019C8  0E06               	movlw	6
 25124  0019CA  D7CF               	goto	L37
 25125  0019CC                     L34:
 25126  0019CC  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25127                           
 25128                           ;i2c_drv.c: 322: }
 25129  0019CE  D047               	goto	l162
 25130  0019D0                     l171:
 25131                           
 25132                           ;i2c_drv.c: 323: else
 25133                           ;i2c_drv.c: 324: {
 25134                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 25135                           
 25136                           ; BSR set to: 1
 25137  0019D0  0E03               	movlw	3
 25138  0019D2  D7CB               	goto	L37
 25139  0019D4                     
 25140                           ; BSR set to: 1
 25141                           ;i2c_drv.c: 332: StopCondition();
 25142                           
 25143                           ; BSR set to: 1
 25144  0019D4  ECBA  F027         	call	_StopCondition	;wreg free
 25145                           
 25146                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 25147  0019D8  0E07               	movlw	7
 25148  0019DA  D7C7               	goto	L37
 25149  0019DC                     
 25150                           ; BSR set to: 1
 25151                           ;i2c_drv.c: 339: TentativeCounter++;
 25152                           
 25153                           ; BSR set to: 1
 25154  0019DC  2B75               	incf	I2c_WriteData@TentativeCounter& (0+255),f,b
 25155                           
 25156                           ; BSR set to: 1
 25157                           ;i2c_drv.c: 341: if (CheckAckStatus() == ((UINT8)(0)))
 25158  0019DE  ECAF  F027         	call	_CheckAckStatus	;wreg free
 25159  0019E2  0900               	iorlw	0
 25160  0019E4  A4D8               	btfss	status,2,c
 25161  0019E6  D006               	goto	l175
 25162                           
 25163                           ;i2c_drv.c: 342: {
 25164                           ;i2c_drv.c: 344: TentativeCounter = 0;
 25165  0019E8  0E00               	movlw	0
 25166  0019EA  0101               	movlb	1	; () banked
 25167  0019EC  6F75               	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 25168                           
 25169                           ; BSR set to: 1
 25170                           ;i2c_drv.c: 346: I2cWriteState = I2cNextState;
 25171  0019EE  C176  F177         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 25172                           
 25173                           ;i2c_drv.c: 347: }
 25174  0019F2  D035               	goto	l162
 25175  0019F4                     l175:
 25176                           
 25177                           ;i2c_drv.c: 348: else
 25178                           ;i2c_drv.c: 349: {
 25179                           ;i2c_drv.c: 351: if (TentativeCounter >= ((UINT8)(3)))
 25180                           
 25181                           ; BSR set to: 1
 25182  0019F4  0E02               	movlw	2
 25183  0019F6  0101               	movlb	1	; () banked
 25184  0019F8  6575               	cpfsgt	I2c_WriteData@TentativeCounter& (0+255),b
 25185  0019FA  D031               	goto	l162
 25186                           
 25187                           ; BSR set to: 1
 25188                           ;i2c_drv.c: 352: {
 25189                           ;i2c_drv.c: 354: I2cWriteState = TxErrorStatus;
 25190  0019FC  0E09               	movlw	9
 25191  0019FE  D7E6               	goto	L34
 25192  001A00                     
 25193                           ; BSR set to: 1
 25194                           ;i2c_drv.c: 361: I2cWriteState = TxAssertStart;
 25195                           
 25196                           ; BSR set to: 1
 25197  001A00  0E00               	movlw	0
 25198  001A02  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25199                           
 25200                           ;i2c_drv.c: 362: I2cNextState = TxAssertStart;
 25201  001A04  0E00               	movlw	0
 25202  001A06  6F76               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25203                           
 25204                           ;i2c_drv.c: 364: WriteStatus = I2cWriteOk;
 25205  001A08  0E02               	movlw	2
 25206  001A0A  D007               	goto	L36
 25207  001A0C                     
 25208                           ; BSR set to: 1
 25209                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 25210                           
 25211                           ; BSR set to: 1
 25212  001A0C  0E00               	movlw	0
 25213  001A0E  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25214                           
 25215                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 25216  001A10  0E00               	movlw	0
 25217  001A12  6F76               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25218                           
 25219                           ;i2c_drv.c: 372: TentativeCounter = 0;
 25220  001A14  0E00               	movlw	0
 25221  001A16  6F75               	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 25222                           
 25223                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 25224  001A18  0E01               	movlw	1
 25225  001A1A                     L36:
 25226  001A1A  6F74               	movwf	I2c_WriteData@WriteStatus& (0+255),b
 25227                           
 25228                           ; BSR set to: 1
 25229                           ;i2c_drv.c: 379: }
 25230                           
 25231                           ; BSR set to: 1
 25232                           ;i2c_drv.c: 378: break;
 25233                           
 25234                           ;i2c_drv.c: 377: default:
 25235                           
 25236                           ;i2c_drv.c: 375: break;
 25237  001A1C  D020               	goto	l162
 25238  001A1E                     l160:
 25239                           
 25240                           ; BSR set to: 1
 25241  001A1E  0101               	movlb	1	; () banked
 25242  001A20  5177               	movf	I2c_WriteData@I2cWriteState& (0+255),w,b
 25243                           
 25244                           ; Switch size 1, requested type "space"
 25245                           ; Number of cases is 10, Range of values is 0 to 9
 25246                           ; switch strategies available:
 25247                           ; Name         Instructions Cycles
 25248                           ; simple_byte           31    16 (average)
 25249                           ;	Chosen strategy is simple_byte
 25250  001A22  0A00               	xorlw	0	; case 0
 25251  001A24  B4D8               	btfsc	status,2,c
 25252  001A26  D75F               	goto	l161
 25253  001A28  0A01               	xorlw	1	; case 1
 25254  001A2A  B4D8               	btfsc	status,2,c
 25255  001A2C  D763               	goto	l163
 25256  001A2E  0A03               	xorlw	3	; case 2
 25257  001A30  B4D8               	btfsc	status,2,c
 25258  001A32  D781               	goto	l164
 25259  001A34  0A01               	xorlw	1	; case 3
 25260  001A36  B4D8               	btfsc	status,2,c
 25261  001A38  D785               	goto	l166
 25262  001A3A  0A07               	xorlw	7	; case 4
 25263  001A3C  B4D8               	btfsc	status,2,c
 25264  001A3E  D797               	goto	l167
 25265  001A40  0A01               	xorlw	1	; case 5
 25266  001A42  B4D8               	btfsc	status,2,c
 25267  001A44  D79E               	goto	l169
 25268  001A46  0A03               	xorlw	3	; case 6
 25269  001A48  B4D8               	btfsc	status,2,c
 25270  001A4A  D7C4               	goto	l173
 25271  001A4C  0A01               	xorlw	1	; case 7
 25272  001A4E  B4D8               	btfsc	status,2,c
 25273  001A50  D7D7               	goto	l178
 25274  001A52  0A0F               	xorlw	15	; case 8
 25275  001A54  B4D8               	btfsc	status,2,c
 25276  001A56  D7C2               	goto	l174
 25277  001A58  0A01               	xorlw	1	; case 9
 25278  001A5A  B4D8               	btfsc	status,2,c
 25279  001A5C  D7D7               	goto	l179
 25280  001A5E                     l162:
 25281                           
 25282                           ;i2c_drv.c: 382: return WriteStatus;
 25283                           
 25284                           ; BSR set to: 1
 25285  001A5E  0101               	movlb	1	; () banked
 25286  001A60  5174               	movf	I2c_WriteData@WriteStatus& (0+255),w,b
 25287  001A62  0012               	return	
 25288  001A64                     __end_of_I2c_WriteData:
 25289                           	opt stack 0
 25290                           tosu	equ	0xFFF
 25291                           tosh	equ	0xFFE
 25292                           tosl	equ	0xFFD
 25293                           pclath	equ	0xFFA
 25294                           tblptru	equ	0xFF8
 25295                           tblptrh	equ	0xFF7
 25296                           tblptrl	equ	0xFF6
 25297                           tablat	equ	0xFF5
 25298                           prodh	equ	0xFF4
 25299                           prodl	equ	0xFF3
 25300                           intcon	equ	0xFF2
 25301                           intcon2	equ	0xFF1
 25302                           intcon3	equ	0xFF0
 25303                           indf0	equ	0xFEF
 25304                           postinc0	equ	0xFEE
 25305                           plusw0	equ	0xFEB
 25306                           fsr0h	equ	0xFEA
 25307                           fsr0l	equ	0xFE9
 25308                           wreg	equ	0xFE8
 25309                           indf1	equ	0xFE7
 25310                           postinc1	equ	0xFE6
 25311                           postdec1	equ	0xFE5
 25312                           fsr1h	equ	0xFE2
 25313                           fsr1l	equ	0xFE1
 25314                           indf2	equ	0xFDF
 25315                           postinc2	equ	0xFDE
 25316                           postdec2	equ	0xFDD
 25317                           plusw2	equ	0xFDB
 25318                           fsr2h	equ	0xFDA
 25319                           fsr2l	equ	0xFD9
 25320                           status	equ	0xFD8
 25321                           
 25322 ;; *************** function _I2c_ReadData *****************
 25323 ;; Defined at:
 25324 ;;		line 393 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25325 ;; Parameters:    Size  Location     Type
 25326 ;;  ReadPacket      2    3[BANK0 ] PTR struct _I2cReadPacke
 25327 ;;		 -> I2cRxPacket(6), 
 25328 ;; Auto vars:     Size  Location     Type
 25329 ;;		None
 25330 ;; Return value:  Size  Location     Type
 25331 ;;                  1    wreg      enum E7781
 25332 ;; Registers used:
 25333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25334 ;; Tracked objects:
 25335 ;;		On entry : 0/0
 25336 ;;		On exit  : 0/0
 25337 ;;		Unchanged: 0/0
 25338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25341 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25342 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25343 ;;Total ram usage:        4 bytes
 25344 ;; Hardware stack levels used:    1
 25345 ;; Hardware stack levels required when called:   12
 25346 ;; This function calls:
 25347 ;;		_CheckAckStatus
 25348 ;;		_CheckTxStatus
 25349 ;;		_EnableReceiver
 25350 ;;		_GenerateEvt
 25351 ;;		_ReadByte
 25352 ;;		_SetAckStatus
 25353 ;;		_StartCondition
 25354 ;;		_StopCondition
 25355 ;;		_WriteByte
 25356 ;; This function is called by:
 25357 ;;		_I2cSendMsgSm
 25358 ;; This function uses a non-reentrant model
 25359 ;;
 25360                           
 25361                           	psect	text122
 25362  001A64                     __ptext122:
 25363                           	opt stack 0
 25364  001A64                     _I2c_ReadData:
 25365                           	opt stack 14
 25366                           
 25367                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 25368                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 25369                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 25370                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 25371                           ;i2c_drv.c: 402: switch (I2cReadState)
 25372                           
 25373                           ; BSR set to: 1
 25374                           ;incstack = 0
 25375  001A64  D09A               	goto	l192
 25376  001A66                     
 25377                           ;i2c_drv.c: 406: StartCondition();
 25378  001A66  ECBC  F027         	call	_StartCondition	;wreg free
 25379                           
 25380                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 25381  001A6A  0E00               	movlw	0
 25382  001A6C  0101               	movlb	1	; () banked
 25383  001A6E  6F70               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 25384                           
 25385                           ; BSR set to: 1
 25386                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 25387  001A70  0E01               	movlw	1
 25388  001A72  D020               	goto	L39
 25389  001A74                     
 25390                           ; BSR set to: 1
 25391                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 25392                           
 25393                           ; BSR set to: 1
 25394  001A74  0100               	movlb	0	; () banked
 25395  001A76  EE20 F001          	lfsr	2,1
 25396  001A7A  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25397  001A7C  26D9               	addwf	fsr2l,f,c
 25398  001A7E  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25399  001A80  22DA               	addwfc	fsr2h,f,c
 25400  001A82  50DF               	movf	indf2,w,c
 25401  001A84  6F65               	movwf	??_I2c_ReadData& (0+255),b
 25402  001A86  C063  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 25403  001A8A  C064  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 25404  001A8E  50DF               	movf	indf2,w,c
 25405  001A90  6F66               	movwf	(??_I2c_ReadData+1)& (0+255),b
 25406  001A92  90D8               	bcf	status,0,c
 25407  001A94  3566               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 25408  001A96  1165               	iorwf	??_I2c_ReadData& (0+255),w,b
 25409  001A98  C063  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 25410  001A9C  C064  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 25411  001AA0  6EDF               	movwf	indf2,c
 25412                           
 25413                           ; BSR set to: 0
 25414                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 25415  001AA2  C063  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 25416  001AA6  C064  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 25417  001AAA  50DF               	movf	indf2,w,c
 25418  001AAC  ECA0  F027         	call	_WriteByte
 25419                           
 25420                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 25421  001AB0  0E02               	movlw	2
 25422  001AB2  D06C               	goto	L43
 25423  001AB4                     L39:
 25424  001AB4  6F73               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 25425                           
 25426                           ;i2c_drv.c: 420: break;
 25427  001AB6  D08E               	goto	l194
 25428  001AB8                     
 25429                           ; BSR set to: 1
 25430                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 25431                           
 25432                           ; BSR set to: 1
 25433  001AB8  ECAA  F027         	call	_CheckTxStatus	;wreg free
 25434  001ABC  0900               	iorlw	0
 25435  001ABE  A4D8               	btfss	status,2,c
 25436  001AC0  D089               	goto	l194
 25437                           
 25438                           ;i2c_drv.c: 425: {
 25439                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 25440  001AC2  0E03               	movlw	3
 25441  001AC4  D063               	goto	L43
 25442  001AC6                     
 25443                           ; BSR set to: 1
 25444                           ;i2c_drv.c: 433: TentativeCounter++;
 25445                           
 25446                           ; BSR set to: 1
 25447  001AC6  2B71               	incf	I2c_ReadData@TentativeCounter& (0+255),f,b
 25448                           
 25449                           ; BSR set to: 1
 25450                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 25451  001AC8  ECAF  F027         	call	_CheckAckStatus	;wreg free
 25452  001ACC  0900               	iorlw	0
 25453  001ACE  A4D8               	btfss	status,2,c
 25454  001AD0  D005               	goto	l199
 25455                           
 25456                           ;i2c_drv.c: 436: {
 25457                           ;i2c_drv.c: 438: TentativeCounter = 0;
 25458  001AD2  0E00               	movlw	0
 25459  001AD4  0101               	movlb	1	; () banked
 25460  001AD6  6F71               	movwf	I2c_ReadData@TentativeCounter& (0+255),b
 25461                           
 25462                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 25463  001AD8  0E04               	movlw	4
 25464  001ADA  D7EC               	goto	L39
 25465  001ADC                     l199:
 25466                           
 25467                           ;i2c_drv.c: 442: else
 25468                           ;i2c_drv.c: 443: {
 25469                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 25470                           
 25471                           ; BSR set to: 1
 25472  001ADC  0E02               	movlw	2
 25473  001ADE  0101               	movlb	1	; () banked
 25474  001AE0  6571               	cpfsgt	I2c_ReadData@TentativeCounter& (0+255),b
 25475  001AE2  D078               	goto	l194
 25476                           
 25477                           ; BSR set to: 1
 25478                           ;i2c_drv.c: 446: {
 25479                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 25480  001AE4  0E08               	movlw	8
 25481  001AE6  D7E6               	goto	L39
 25482  001AE8                     
 25483                           ; BSR set to: 1
 25484                           ;i2c_drv.c: 455: EnableReceiver();
 25485                           
 25486                           ; BSR set to: 1
 25487  001AE8  ECBE  F027         	call	_EnableReceiver	;wreg free
 25488                           
 25489                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 25490  001AEC  0E05               	movlw	5
 25491  001AEE  D04E               	goto	L43
 25492  001AF0                     
 25493                           ; BSR set to: 1
 25494                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 25495                           
 25496                           ; BSR set to: 1
 25497  001AF0  ECAA  F027         	call	_CheckTxStatus	;wreg free
 25498  001AF4  0900               	iorlw	0
 25499  001AF6  A4D8               	btfss	status,2,c
 25500  001AF8  D06D               	goto	l194
 25501                           
 25502                           ;i2c_drv.c: 463: {
 25503                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 25504  001AFA  0100               	movlb	0	; () banked
 25505  001AFC  EE20 F002          	lfsr	2,2
 25506  001B00  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25507  001B02  26D9               	addwf	fsr2l,f,c
 25508  001B04  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25509  001B06  22DA               	addwfc	fsr2h,f,c
 25510  001B08  CFDE F065          	movff	postinc2,??_I2c_ReadData
 25511  001B0C  CFDD F066          	movff	postdec2,??_I2c_ReadData+1
 25512  001B10  C065  FFD9         	movff	??_I2c_ReadData,fsr2l
 25513  001B14  C066  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 25514  001B18  ECA5  F027         	call	_ReadByte	;wreg free
 25515  001B1C  6EDF               	movwf	indf2,c
 25516                           
 25517                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 25518  001B1E  0100               	movlb	0	; () banked
 25519  001B20  EE20 F002          	lfsr	2,2
 25520  001B24  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25521  001B26  26D9               	addwf	fsr2l,f,c
 25522  001B28  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25523  001B2A  22DA               	addwfc	fsr2h,f,c
 25524  001B2C  2ADE               	incf	postinc2,f,c
 25525  001B2E  0E00               	movlw	0
 25526  001B30  22DD               	addwfc	postdec2,f,c
 25527                           
 25528                           ; BSR set to: 0
 25529                           ;i2c_drv.c: 469: DataCounter++;
 25530  001B32  0101               	movlb	1	; () banked
 25531  001B34  2B72               	incf	I2c_ReadData@DataCounter& (0+255),f,b
 25532                           
 25533                           ; BSR set to: 1
 25534                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 25535  001B36  0E06               	movlw	6
 25536  001B38  D7BD               	goto	L39
 25537  001B3A                     
 25538                           ; BSR set to: 1
 25539                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 25540                           
 25541                           ; BSR set to: 1
 25542  001B3A  0100               	movlb	0	; () banked
 25543  001B3C  EE20 F004          	lfsr	2,4
 25544  001B40  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25545  001B42  26D9               	addwf	fsr2l,f,c
 25546  001B44  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25547  001B46  22DA               	addwfc	fsr2h,f,c
 25548  001B48  50DE               	movf	postinc2,w,c
 25549  001B4A  0101               	movlb	1	; () banked
 25550  001B4C  5D72               	subwf	I2c_ReadData@DataCounter& (0+255),w,b
 25551  001B4E  A0D8               	btfss	status,0,c
 25552  001B50  D009               	goto	l206
 25553                           
 25554                           ; BSR set to: 1
 25555                           ;i2c_drv.c: 478: {
 25556                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 25557  001B52  0E01               	movlw	1
 25558  001B54  EC38  F027         	call	_SetAckStatus
 25559                           
 25560                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 25561  001B58  0E07               	movlw	7
 25562  001B5A  0101               	movlb	1	; () banked
 25563  001B5C  6F73               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 25564                           
 25565                           ; BSR set to: 1
 25566                           ;i2c_drv.c: 484: DataCounter = 0;
 25567  001B5E  0E00               	movlw	0
 25568  001B60  6F72               	movwf	I2c_ReadData@DataCounter& (0+255),b
 25569                           
 25570                           ;i2c_drv.c: 485: }
 25571  001B62  D038               	goto	l194
 25572  001B64                     l206:
 25573                           
 25574                           ; BSR set to: 1
 25575                           ;i2c_drv.c: 486: else
 25576                           ;i2c_drv.c: 487: {
 25577                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 25578                           
 25579                           ; BSR set to: 1
 25580  001B64  0E00               	movlw	0
 25581  001B66  EC38  F027         	call	_SetAckStatus
 25582                           
 25583                           ;i2c_drv.c: 491: I2cReadState = RxGetData;
 25584  001B6A  0E04               	movlw	4
 25585  001B6C  D00F               	goto	L43
 25586  001B6E                     
 25587                           ; BSR set to: 1
 25588                           ;i2c_drv.c: 497: StopCondition();
 25589                           
 25590                           ; BSR set to: 1
 25591  001B6E  ECBA  F027         	call	_StopCondition	;wreg free
 25592                           
 25593                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 25594  001B72  0E02               	movlw	2
 25595  001B74  0101               	movlb	1	; () banked
 25596  001B76  6F70               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 25597                           
 25598                           ; BSR set to: 1
 25599                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 25600  001B78  0E05               	movlw	5
 25601  001B7A  0100               	movlb	0	; () banked
 25602  001B7C  2563               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 25603  001B7E  6F60               	movwf	GenerateEvt@Event& (0+255),b
 25604  001B80  0E00               	movlw	0
 25605  001B82  2164               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25606  001B84  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25607  001B86  EC00  F027         	call	_GenerateEvt	;wreg free
 25608                           
 25609                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 25610  001B8A  0E00               	movlw	0
 25611  001B8C                     L43:
 25612  001B8C  0101               	movlb	1	; () banked
 25613  001B8E  D792               	goto	L39
 25614  001B90                     
 25615                           ; BSR set to: 1
 25616                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 25617                           
 25618                           ; BSR set to: 1
 25619  001B90  0E00               	movlw	0
 25620  001B92  6F73               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 25621                           
 25622                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 25623  001B94  0E01               	movlw	1
 25624  001B96  6F70               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 25625                           
 25626                           ; BSR set to: 1
 25627                           ;i2c_drv.c: 515: }
 25628                           
 25629                           ; BSR set to: 1
 25630                           ;i2c_drv.c: 514: break;
 25631                           
 25632                           ;i2c_drv.c: 513: default:
 25633                           
 25634                           ;i2c_drv.c: 511: break;
 25635  001B98  D01D               	goto	l194
 25636  001B9A                     l192:
 25637                           
 25638                           ; BSR set to: 1
 25639  001B9A  0101               	movlb	1	; () banked
 25640  001B9C  5173               	movf	I2c_ReadData@I2cReadState& (0+255),w,b
 25641                           
 25642                           ; Switch size 1, requested type "space"
 25643                           ; Number of cases is 9, Range of values is 0 to 8
 25644                           ; switch strategies available:
 25645                           ; Name         Instructions Cycles
 25646                           ; simple_byte           28    15 (average)
 25647                           ;	Chosen strategy is simple_byte
 25648  001B9E  0A00               	xorlw	0	; case 0
 25649  001BA0  B4D8               	btfsc	status,2,c
 25650  001BA2  D761               	goto	l193
 25651  001BA4  0A01               	xorlw	1	; case 1
 25652  001BA6  B4D8               	btfsc	status,2,c
 25653  001BA8  D765               	goto	l195
 25654  001BAA  0A03               	xorlw	3	; case 2
 25655  001BAC  B4D8               	btfsc	status,2,c
 25656  001BAE  D784               	goto	l196
 25657  001BB0  0A01               	xorlw	1	; case 3
 25658  001BB2  B4D8               	btfsc	status,2,c
 25659  001BB4  D788               	goto	l198
 25660  001BB6  0A07               	xorlw	7	; case 4
 25661  001BB8  B4D8               	btfsc	status,2,c
 25662  001BBA  D796               	goto	l202
 25663  001BBC  0A01               	xorlw	1	; case 5
 25664  001BBE  B4D8               	btfsc	status,2,c
 25665  001BC0  D797               	goto	l203
 25666  001BC2  0A03               	xorlw	3	; case 6
 25667  001BC4  B4D8               	btfsc	status,2,c
 25668  001BC6  D7B9               	goto	l205
 25669  001BC8  0A01               	xorlw	1	; case 7
 25670  001BCA  B4D8               	btfsc	status,2,c
 25671  001BCC  D7D0               	goto	l208
 25672  001BCE  0A0F               	xorlw	15	; case 8
 25673  001BD0  B4D8               	btfsc	status,2,c
 25674  001BD2  D7DE               	goto	l209
 25675  001BD4                     l194:
 25676                           
 25677                           ;i2c_drv.c: 518: return ReadStatus;
 25678                           
 25679                           ; BSR set to: 1
 25680  001BD4  0101               	movlb	1	; () banked
 25681  001BD6  5170               	movf	I2c_ReadData@ReadStatus& (0+255),w,b
 25682  001BD8  0012               	return	
 25683  001BDA                     __end_of_I2c_ReadData:
 25684                           	opt stack 0
 25685                           tosu	equ	0xFFF
 25686                           tosh	equ	0xFFE
 25687                           tosl	equ	0xFFD
 25688                           pclath	equ	0xFFA
 25689                           tblptru	equ	0xFF8
 25690                           tblptrh	equ	0xFF7
 25691                           tblptrl	equ	0xFF6
 25692                           tablat	equ	0xFF5
 25693                           prodh	equ	0xFF4
 25694                           prodl	equ	0xFF3
 25695                           intcon	equ	0xFF2
 25696                           intcon2	equ	0xFF1
 25697                           intcon3	equ	0xFF0
 25698                           indf0	equ	0xFEF
 25699                           postinc0	equ	0xFEE
 25700                           plusw0	equ	0xFEB
 25701                           fsr0h	equ	0xFEA
 25702                           fsr0l	equ	0xFE9
 25703                           wreg	equ	0xFE8
 25704                           indf1	equ	0xFE7
 25705                           postinc1	equ	0xFE6
 25706                           postdec1	equ	0xFE5
 25707                           fsr1h	equ	0xFE2
 25708                           fsr1l	equ	0xFE1
 25709                           indf2	equ	0xFDF
 25710                           postinc2	equ	0xFDE
 25711                           postdec2	equ	0xFDD
 25712                           plusw2	equ	0xFDB
 25713                           fsr2h	equ	0xFDA
 25714                           fsr2l	equ	0xFD9
 25715                           status	equ	0xFD8
 25716                           
 25717 ;; *************** function _WriteByte *****************
 25718 ;; Defined at:
 25719 ;;		line 190 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25720 ;; Parameters:    Size  Location     Type
 25721 ;;  Byte            1    wreg     unsigned char 
 25722 ;; Auto vars:     Size  Location     Type
 25723 ;;  Byte            1    0[BANK0 ] unsigned char 
 25724 ;; Return value:  Size  Location     Type
 25725 ;;                  1    wreg      void 
 25726 ;; Registers used:
 25727 ;;		wreg
 25728 ;; Tracked objects:
 25729 ;;		On entry : 0/0
 25730 ;;		On exit  : 0/0
 25731 ;;		Unchanged: 0/0
 25732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25734 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25736 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25737 ;;Total ram usage:        1 bytes
 25738 ;; Hardware stack levels used:    1
 25739 ;; Hardware stack levels required when called:   11
 25740 ;; This function calls:
 25741 ;;		Nothing
 25742 ;; This function is called by:
 25743 ;;		_I2c_WriteData
 25744 ;;		_I2c_ReadData
 25745 ;; This function uses a non-reentrant model
 25746 ;;
 25747                           
 25748                           	psect	text123
 25749  004F40                     __ptext123:
 25750                           	opt stack 0
 25751  004F40                     _WriteByte:
 25752                           	opt stack 14
 25753                           
 25754                           ; BSR set to: 1
 25755                           ;incstack = 0
 25756                           ;WriteByte@Byte stored from wreg
 25757  004F40  0100               	movlb	0	; () banked
 25758  004F42  6F60               	movwf	WriteByte@Byte& (0+255),b
 25759                           
 25760                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 25761  004F44  C060  FF75         	movff	WriteByte@Byte,3957	;volatile
 25762  004F48  0012               	return		;funcret
 25763  004F4A                     __end_of_WriteByte:
 25764                           	opt stack 0
 25765                           tosu	equ	0xFFF
 25766                           tosh	equ	0xFFE
 25767                           tosl	equ	0xFFD
 25768                           pclath	equ	0xFFA
 25769                           tblptru	equ	0xFF8
 25770                           tblptrh	equ	0xFF7
 25771                           tblptrl	equ	0xFF6
 25772                           tablat	equ	0xFF5
 25773                           prodh	equ	0xFF4
 25774                           prodl	equ	0xFF3
 25775                           intcon	equ	0xFF2
 25776                           intcon2	equ	0xFF1
 25777                           intcon3	equ	0xFF0
 25778                           indf0	equ	0xFEF
 25779                           postinc0	equ	0xFEE
 25780                           plusw0	equ	0xFEB
 25781                           fsr0h	equ	0xFEA
 25782                           fsr0l	equ	0xFE9
 25783                           wreg	equ	0xFE8
 25784                           indf1	equ	0xFE7
 25785                           postinc1	equ	0xFE6
 25786                           postdec1	equ	0xFE5
 25787                           fsr1h	equ	0xFE2
 25788                           fsr1l	equ	0xFE1
 25789                           indf2	equ	0xFDF
 25790                           postinc2	equ	0xFDE
 25791                           postdec2	equ	0xFDD
 25792                           plusw2	equ	0xFDB
 25793                           fsr2h	equ	0xFDA
 25794                           fsr2l	equ	0xFD9
 25795                           status	equ	0xFD8
 25796                           
 25797 ;; *************** function _StopCondition *****************
 25798 ;; Defined at:
 25799 ;;		line 120 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25800 ;; Parameters:    Size  Location     Type
 25801 ;;		None
 25802 ;; Auto vars:     Size  Location     Type
 25803 ;;		None
 25804 ;; Return value:  Size  Location     Type
 25805 ;;                  1    wreg      void 
 25806 ;; Registers used:
 25807 ;;		status,2, status,0
 25808 ;; Tracked objects:
 25809 ;;		On entry : 0/0
 25810 ;;		On exit  : 0/0
 25811 ;;		Unchanged: 0/0
 25812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25817 ;;Total ram usage:        0 bytes
 25818 ;; Hardware stack levels used:    1
 25819 ;; Hardware stack levels required when called:   11
 25820 ;; This function calls:
 25821 ;;		Nothing
 25822 ;; This function is called by:
 25823 ;;		_I2c_WriteData
 25824 ;;		_I2c_ReadData
 25825 ;; This function uses a non-reentrant model
 25826 ;;
 25827                           
 25828                           	psect	text124
 25829  004F74                     __ptext124:
 25830                           	opt stack 0
 25831  004F74                     _StopCondition:
 25832                           	opt stack 14
 25833                           
 25834                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 25835                           
 25836                           ;incstack = 0
 25837  004F74  8471               	bsf	3953,2,c	;volatile
 25838  004F76  0012               	return		;funcret
 25839  004F78                     __end_of_StopCondition:
 25840                           	opt stack 0
 25841                           tosu	equ	0xFFF
 25842                           tosh	equ	0xFFE
 25843                           tosl	equ	0xFFD
 25844                           pclath	equ	0xFFA
 25845                           tblptru	equ	0xFF8
 25846                           tblptrh	equ	0xFF7
 25847                           tblptrl	equ	0xFF6
 25848                           tablat	equ	0xFF5
 25849                           prodh	equ	0xFF4
 25850                           prodl	equ	0xFF3
 25851                           intcon	equ	0xFF2
 25852                           intcon2	equ	0xFF1
 25853                           intcon3	equ	0xFF0
 25854                           indf0	equ	0xFEF
 25855                           postinc0	equ	0xFEE
 25856                           plusw0	equ	0xFEB
 25857                           fsr0h	equ	0xFEA
 25858                           fsr0l	equ	0xFE9
 25859                           wreg	equ	0xFE8
 25860                           indf1	equ	0xFE7
 25861                           postinc1	equ	0xFE6
 25862                           postdec1	equ	0xFE5
 25863                           fsr1h	equ	0xFE2
 25864                           fsr1l	equ	0xFE1
 25865                           indf2	equ	0xFDF
 25866                           postinc2	equ	0xFDE
 25867                           postdec2	equ	0xFDD
 25868                           plusw2	equ	0xFDB
 25869                           fsr2h	equ	0xFDA
 25870                           fsr2l	equ	0xFD9
 25871                           status	equ	0xFD8
 25872                           
 25873 ;; *************** function _StartCondition *****************
 25874 ;; Defined at:
 25875 ;;		line 92 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25876 ;; Parameters:    Size  Location     Type
 25877 ;;		None
 25878 ;; Auto vars:     Size  Location     Type
 25879 ;;		None
 25880 ;; Return value:  Size  Location     Type
 25881 ;;                  1    wreg      void 
 25882 ;; Registers used:
 25883 ;;		status,2, status,0
 25884 ;; Tracked objects:
 25885 ;;		On entry : 0/0
 25886 ;;		On exit  : 0/0
 25887 ;;		Unchanged: 0/0
 25888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25893 ;;Total ram usage:        0 bytes
 25894 ;; Hardware stack levels used:    1
 25895 ;; Hardware stack levels required when called:   11
 25896 ;; This function calls:
 25897 ;;		Nothing
 25898 ;; This function is called by:
 25899 ;;		_I2c_WriteData
 25900 ;;		_I2c_ReadData
 25901 ;; This function uses a non-reentrant model
 25902 ;;
 25903                           
 25904                           	psect	text125
 25905  004F78                     __ptext125:
 25906                           	opt stack 0
 25907  004F78                     _StartCondition:
 25908                           	opt stack 14
 25909                           
 25910                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 25911                           
 25912                           ;incstack = 0
 25913  004F78  8071               	bsf	3953,0,c	;volatile
 25914  004F7A  0012               	return		;funcret
 25915  004F7C                     __end_of_StartCondition:
 25916                           	opt stack 0
 25917                           tosu	equ	0xFFF
 25918                           tosh	equ	0xFFE
 25919                           tosl	equ	0xFFD
 25920                           pclath	equ	0xFFA
 25921                           tblptru	equ	0xFF8
 25922                           tblptrh	equ	0xFF7
 25923                           tblptrl	equ	0xFF6
 25924                           tablat	equ	0xFF5
 25925                           prodh	equ	0xFF4
 25926                           prodl	equ	0xFF3
 25927                           intcon	equ	0xFF2
 25928                           intcon2	equ	0xFF1
 25929                           intcon3	equ	0xFF0
 25930                           indf0	equ	0xFEF
 25931                           postinc0	equ	0xFEE
 25932                           plusw0	equ	0xFEB
 25933                           fsr0h	equ	0xFEA
 25934                           fsr0l	equ	0xFE9
 25935                           wreg	equ	0xFE8
 25936                           indf1	equ	0xFE7
 25937                           postinc1	equ	0xFE6
 25938                           postdec1	equ	0xFE5
 25939                           fsr1h	equ	0xFE2
 25940                           fsr1l	equ	0xFE1
 25941                           indf2	equ	0xFDF
 25942                           postinc2	equ	0xFDE
 25943                           postdec2	equ	0xFDD
 25944                           plusw2	equ	0xFDB
 25945                           fsr2h	equ	0xFDA
 25946                           fsr2l	equ	0xFD9
 25947                           status	equ	0xFD8
 25948                           
 25949 ;; *************** function _SetAckStatus *****************
 25950 ;; Defined at:
 25951 ;;		line 162 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25952 ;; Parameters:    Size  Location     Type
 25953 ;;  AckSts          1    wreg     unsigned char 
 25954 ;; Auto vars:     Size  Location     Type
 25955 ;;  AckSts          1    0[BANK0 ] unsigned char 
 25956 ;; Return value:  Size  Location     Type
 25957 ;;                  1    wreg      void 
 25958 ;; Registers used:
 25959 ;;		wreg
 25960 ;; Tracked objects:
 25961 ;;		On entry : 0/0
 25962 ;;		On exit  : 0/0
 25963 ;;		Unchanged: 0/0
 25964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25966 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25968 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25969 ;;Total ram usage:        1 bytes
 25970 ;; Hardware stack levels used:    1
 25971 ;; Hardware stack levels required when called:   11
 25972 ;; This function calls:
 25973 ;;		Nothing
 25974 ;; This function is called by:
 25975 ;;		_I2c_ReadData
 25976 ;; This function uses a non-reentrant model
 25977 ;;
 25978                           
 25979                           	psect	text126
 25980  004E70                     __ptext126:
 25981                           	opt stack 0
 25982  004E70                     _SetAckStatus:
 25983                           	opt stack 14
 25984                           
 25985                           ;incstack = 0
 25986                           ;SetAckStatus@AckSts stored from wreg
 25987  004E70  0100               	movlb	0	; () banked
 25988  004E72  6F60               	movwf	SetAckStatus@AckSts& (0+255),b
 25989                           
 25990                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 25991  004E74  0100               	movlb	0	; () banked
 25992  004E76  B160               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 25993  004E78  D002               	bra	u5315
 25994  004E7A  9A71               	bcf	3953,5,c	;volatile
 25995  004E7C  D001               	bra	u5316
 25996  004E7E                     u5315:
 25997  004E7E  8A71               	bsf	3953,5,c	;volatile
 25998  004E80                     u5316:
 25999                           
 26000                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 26001  004E80  8871               	bsf	3953,4,c	;volatile
 26002  004E82  0012               	return		;funcret
 26003  004E84                     __end_of_SetAckStatus:
 26004                           	opt stack 0
 26005                           tosu	equ	0xFFF
 26006                           tosh	equ	0xFFE
 26007                           tosl	equ	0xFFD
 26008                           pclath	equ	0xFFA
 26009                           tblptru	equ	0xFF8
 26010                           tblptrh	equ	0xFF7
 26011                           tblptrl	equ	0xFF6
 26012                           tablat	equ	0xFF5
 26013                           prodh	equ	0xFF4
 26014                           prodl	equ	0xFF3
 26015                           intcon	equ	0xFF2
 26016                           intcon2	equ	0xFF1
 26017                           intcon3	equ	0xFF0
 26018                           indf0	equ	0xFEF
 26019                           postinc0	equ	0xFEE
 26020                           plusw0	equ	0xFEB
 26021                           fsr0h	equ	0xFEA
 26022                           fsr0l	equ	0xFE9
 26023                           wreg	equ	0xFE8
 26024                           indf1	equ	0xFE7
 26025                           postinc1	equ	0xFE6
 26026                           postdec1	equ	0xFE5
 26027                           fsr1h	equ	0xFE2
 26028                           fsr1l	equ	0xFE1
 26029                           indf2	equ	0xFDF
 26030                           postinc2	equ	0xFDE
 26031                           postdec2	equ	0xFDD
 26032                           plusw2	equ	0xFDB
 26033                           fsr2h	equ	0xFDA
 26034                           fsr2l	equ	0xFD9
 26035                           status	equ	0xFD8
 26036                           
 26037 ;; *************** function _ReadByte *****************
 26038 ;; Defined at:
 26039 ;;		line 204 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26040 ;; Parameters:    Size  Location     Type
 26041 ;;		None
 26042 ;; Auto vars:     Size  Location     Type
 26043 ;;  Byte            1    0[BANK0 ] unsigned char 
 26044 ;; Return value:  Size  Location     Type
 26045 ;;                  1    wreg      unsigned char 
 26046 ;; Registers used:
 26047 ;;		wreg, status,2
 26048 ;; Tracked objects:
 26049 ;;		On entry : 0/0
 26050 ;;		On exit  : 0/0
 26051 ;;		Unchanged: 0/0
 26052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26054 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26056 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26057 ;;Total ram usage:        1 bytes
 26058 ;; Hardware stack levels used:    1
 26059 ;; Hardware stack levels required when called:   11
 26060 ;; This function calls:
 26061 ;;		Nothing
 26062 ;; This function is called by:
 26063 ;;		_I2c_ReadData
 26064 ;; This function uses a non-reentrant model
 26065 ;;
 26066                           
 26067                           	psect	text127
 26068  004F4A                     __ptext127:
 26069                           	opt stack 0
 26070  004F4A                     _ReadByte:
 26071                           	opt stack 14
 26072                           
 26073                           ;i2c_drv.c: 207: UINT8 Byte;
 26074                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 26075                           
 26076                           ;incstack = 0
 26077  004F4A  CF75 F060          	movff	3957,ReadByte@Byte	;volatile
 26078                           
 26079                           ;i2c_drv.c: 213: return Byte;
 26080  004F4E  0100               	movlb	0	; () banked
 26081  004F50  5160               	movf	ReadByte@Byte& (0+255),w,b
 26082  004F52  0012               	return	
 26083  004F54                     __end_of_ReadByte:
 26084                           	opt stack 0
 26085                           tosu	equ	0xFFF
 26086                           tosh	equ	0xFFE
 26087                           tosl	equ	0xFFD
 26088                           pclath	equ	0xFFA
 26089                           tblptru	equ	0xFF8
 26090                           tblptrh	equ	0xFF7
 26091                           tblptrl	equ	0xFF6
 26092                           tablat	equ	0xFF5
 26093                           prodh	equ	0xFF4
 26094                           prodl	equ	0xFF3
 26095                           intcon	equ	0xFF2
 26096                           intcon2	equ	0xFF1
 26097                           intcon3	equ	0xFF0
 26098                           indf0	equ	0xFEF
 26099                           postinc0	equ	0xFEE
 26100                           plusw0	equ	0xFEB
 26101                           fsr0h	equ	0xFEA
 26102                           fsr0l	equ	0xFE9
 26103                           wreg	equ	0xFE8
 26104                           indf1	equ	0xFE7
 26105                           postinc1	equ	0xFE6
 26106                           postdec1	equ	0xFE5
 26107                           fsr1h	equ	0xFE2
 26108                           fsr1l	equ	0xFE1
 26109                           indf2	equ	0xFDF
 26110                           postinc2	equ	0xFDE
 26111                           postdec2	equ	0xFDD
 26112                           plusw2	equ	0xFDB
 26113                           fsr2h	equ	0xFDA
 26114                           fsr2l	equ	0xFD9
 26115                           status	equ	0xFD8
 26116                           
 26117 ;; *************** function _GenerateEvt *****************
 26118 ;; Defined at:
 26119 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 26120 ;; Parameters:    Size  Location     Type
 26121 ;;  Event           2    0[BANK0 ] PTR struct EventStructur
 26122 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 26123 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 26124 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(253), 
 26125 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 26126 ;; Auto vars:     Size  Location     Type
 26127 ;;  EventStatus     1    2[BANK0 ] enum E7721
 26128 ;; Return value:  Size  Location     Type
 26129 ;;                  1    wreg      enum E7693
 26130 ;; Registers used:
 26131 ;;		wreg, fsr2l, fsr2h, status,2
 26132 ;; Tracked objects:
 26133 ;;		On entry : 0/0
 26134 ;;		On exit  : 0/0
 26135 ;;		Unchanged: 0/0
 26136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26137 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26140 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26141 ;;Total ram usage:        3 bytes
 26142 ;; Hardware stack levels used:    1
 26143 ;; Hardware stack levels required when called:   11
 26144 ;; This function calls:
 26145 ;;		Nothing
 26146 ;; This function is called by:
 26147 ;;		_I2c_ReadData
 26148 ;;		_MdmWifi_StartWifiModemSm
 26149 ;;		_MdmWifiGetUartData
 26150 ;;		_MdmWifiEvtParser
 26151 ;;		_ReceiveDataSm
 26152 ;;		_I2cSlv_SendI2cMsg
 26153 ;;		_I2cSlv_ReceiveI2cMsg
 26154 ;;		_MdmWifi_RestartModem
 26155 ;;		_MdmWifiCmd_StartConnection
 26156 ;;		_MdmWifiCmd_SendData
 26157 ;; This function uses a non-reentrant model
 26158 ;;
 26159                           
 26160                           	psect	text128
 26161  004E00                     __ptext128:
 26162                           	opt stack 0
 26163  004E00                     _GenerateEvt:
 26164                           	opt stack 13
 26165                           
 26166                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 26167                           
 26168                           ; BSR set to: 0
 26169                           ;incstack = 0
 26170  004E00  0E00               	movlw	0
 26171  004E02  0100               	movlb	0	; () banked
 26172  004E04  6F62               	movwf	GenerateEvt@EventStatus& (0+255),b
 26173                           
 26174                           ; BSR set to: 0
 26175                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 26176  004E06  C060  FFD9         	movff	GenerateEvt@Event,fsr2l
 26177  004E0A  C061  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 26178  004E0E  0E02               	movlw	2
 26179  004E10  6EDF               	movwf	indf2,c
 26180                           
 26181                           ; BSR set to: 0
 26182                           ;os_ser.c: 81: EventStatus = EventSent;
 26183  004E12  0E02               	movlw	2
 26184  004E14  6F62               	movwf	GenerateEvt@EventStatus& (0+255),b
 26185  004E16  0012               	return	
 26186  004E18                     __end_of_GenerateEvt:
 26187                           	opt stack 0
 26188                           tosu	equ	0xFFF
 26189                           tosh	equ	0xFFE
 26190                           tosl	equ	0xFFD
 26191                           pclath	equ	0xFFA
 26192                           tblptru	equ	0xFF8
 26193                           tblptrh	equ	0xFF7
 26194                           tblptrl	equ	0xFF6
 26195                           tablat	equ	0xFF5
 26196                           prodh	equ	0xFF4
 26197                           prodl	equ	0xFF3
 26198                           intcon	equ	0xFF2
 26199                           intcon2	equ	0xFF1
 26200                           intcon3	equ	0xFF0
 26201                           indf0	equ	0xFEF
 26202                           postinc0	equ	0xFEE
 26203                           plusw0	equ	0xFEB
 26204                           fsr0h	equ	0xFEA
 26205                           fsr0l	equ	0xFE9
 26206                           wreg	equ	0xFE8
 26207                           indf1	equ	0xFE7
 26208                           postinc1	equ	0xFE6
 26209                           postdec1	equ	0xFE5
 26210                           fsr1h	equ	0xFE2
 26211                           fsr1l	equ	0xFE1
 26212                           indf2	equ	0xFDF
 26213                           postinc2	equ	0xFDE
 26214                           postdec2	equ	0xFDD
 26215                           plusw2	equ	0xFDB
 26216                           fsr2h	equ	0xFDA
 26217                           fsr2l	equ	0xFD9
 26218                           status	equ	0xFD8
 26219                           
 26220 ;; *************** function _EnableReceiver *****************
 26221 ;; Defined at:
 26222 ;;		line 177 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26223 ;; Parameters:    Size  Location     Type
 26224 ;;		None
 26225 ;; Auto vars:     Size  Location     Type
 26226 ;;		None
 26227 ;; Return value:  Size  Location     Type
 26228 ;;                  1    wreg      void 
 26229 ;; Registers used:
 26230 ;;		status,2, status,0
 26231 ;; Tracked objects:
 26232 ;;		On entry : 0/0
 26233 ;;		On exit  : 0/0
 26234 ;;		Unchanged: 0/0
 26235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26240 ;;Total ram usage:        0 bytes
 26241 ;; Hardware stack levels used:    1
 26242 ;; Hardware stack levels required when called:   11
 26243 ;; This function calls:
 26244 ;;		Nothing
 26245 ;; This function is called by:
 26246 ;;		_I2c_ReadData
 26247 ;; This function uses a non-reentrant model
 26248 ;;
 26249                           
 26250                           	psect	text129
 26251  004F7C                     __ptext129:
 26252                           	opt stack 0
 26253  004F7C                     _EnableReceiver:
 26254                           	opt stack 14
 26255                           
 26256                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 26257                           
 26258                           ; BSR set to: 0
 26259                           ;incstack = 0
 26260  004F7C  8671               	bsf	3953,3,c	;volatile
 26261  004F7E  0012               	return		;funcret
 26262  004F80                     __end_of_EnableReceiver:
 26263                           	opt stack 0
 26264                           tosu	equ	0xFFF
 26265                           tosh	equ	0xFFE
 26266                           tosl	equ	0xFFD
 26267                           pclath	equ	0xFFA
 26268                           tblptru	equ	0xFF8
 26269                           tblptrh	equ	0xFF7
 26270                           tblptrl	equ	0xFF6
 26271                           tablat	equ	0xFF5
 26272                           prodh	equ	0xFF4
 26273                           prodl	equ	0xFF3
 26274                           intcon	equ	0xFF2
 26275                           intcon2	equ	0xFF1
 26276                           intcon3	equ	0xFF0
 26277                           indf0	equ	0xFEF
 26278                           postinc0	equ	0xFEE
 26279                           plusw0	equ	0xFEB
 26280                           fsr0h	equ	0xFEA
 26281                           fsr0l	equ	0xFE9
 26282                           wreg	equ	0xFE8
 26283                           indf1	equ	0xFE7
 26284                           postinc1	equ	0xFE6
 26285                           postdec1	equ	0xFE5
 26286                           fsr1h	equ	0xFE2
 26287                           fsr1l	equ	0xFE1
 26288                           indf2	equ	0xFDF
 26289                           postinc2	equ	0xFDE
 26290                           postdec2	equ	0xFDD
 26291                           plusw2	equ	0xFDB
 26292                           fsr2h	equ	0xFDA
 26293                           fsr2l	equ	0xFD9
 26294                           status	equ	0xFD8
 26295                           
 26296 ;; *************** function _CheckTxStatus *****************
 26297 ;; Defined at:
 26298 ;;		line 148 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26299 ;; Parameters:    Size  Location     Type
 26300 ;;		None
 26301 ;; Auto vars:     Size  Location     Type
 26302 ;;		None
 26303 ;; Return value:  Size  Location     Type
 26304 ;;                  1    wreg      unsigned char 
 26305 ;; Registers used:
 26306 ;;		wreg, status,2, status,0
 26307 ;; Tracked objects:
 26308 ;;		On entry : 0/0
 26309 ;;		On exit  : 0/0
 26310 ;;		Unchanged: 0/0
 26311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26316 ;;Total ram usage:        0 bytes
 26317 ;; Hardware stack levels used:    1
 26318 ;; Hardware stack levels required when called:   11
 26319 ;; This function calls:
 26320 ;;		Nothing
 26321 ;; This function is called by:
 26322 ;;		_I2c_WriteData
 26323 ;;		_I2c_ReadData
 26324 ;; This function uses a non-reentrant model
 26325 ;;
 26326                           
 26327                           	psect	text130
 26328  004F54                     __ptext130:
 26329                           	opt stack 0
 26330  004F54                     _CheckTxStatus:
 26331                           	opt stack 14
 26332                           
 26333                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 26334                           
 26335                           ;incstack = 0
 26336  004F54  4073               	rrncf	3955,w,c	;volatile
 26337  004F56  42E8               	rrncf	wreg,f,c
 26338  004F58  0B3F               	andlw	63
 26339  004F5A  0B01               	andlw	1
 26340  004F5C  0012               	return	
 26341  004F5E                     __end_of_CheckTxStatus:
 26342                           	opt stack 0
 26343                           tosu	equ	0xFFF
 26344                           tosh	equ	0xFFE
 26345                           tosl	equ	0xFFD
 26346                           pclath	equ	0xFFA
 26347                           tblptru	equ	0xFF8
 26348                           tblptrh	equ	0xFF7
 26349                           tblptrl	equ	0xFF6
 26350                           tablat	equ	0xFF5
 26351                           prodh	equ	0xFF4
 26352                           prodl	equ	0xFF3
 26353                           intcon	equ	0xFF2
 26354                           intcon2	equ	0xFF1
 26355                           intcon3	equ	0xFF0
 26356                           indf0	equ	0xFEF
 26357                           postinc0	equ	0xFEE
 26358                           plusw0	equ	0xFEB
 26359                           fsr0h	equ	0xFEA
 26360                           fsr0l	equ	0xFE9
 26361                           wreg	equ	0xFE8
 26362                           indf1	equ	0xFE7
 26363                           postinc1	equ	0xFE6
 26364                           postdec1	equ	0xFE5
 26365                           fsr1h	equ	0xFE2
 26366                           fsr1l	equ	0xFE1
 26367                           indf2	equ	0xFDF
 26368                           postinc2	equ	0xFDE
 26369                           postdec2	equ	0xFDD
 26370                           plusw2	equ	0xFDB
 26371                           fsr2h	equ	0xFDA
 26372                           fsr2l	equ	0xFD9
 26373                           status	equ	0xFD8
 26374                           
 26375 ;; *************** function _CheckAckStatus *****************
 26376 ;; Defined at:
 26377 ;;		line 134 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26378 ;; Parameters:    Size  Location     Type
 26379 ;;		None
 26380 ;; Auto vars:     Size  Location     Type
 26381 ;;		None
 26382 ;; Return value:  Size  Location     Type
 26383 ;;                  1    wreg      unsigned char 
 26384 ;; Registers used:
 26385 ;;		wreg, status,2, status,0
 26386 ;; Tracked objects:
 26387 ;;		On entry : 0/0
 26388 ;;		On exit  : 0/0
 26389 ;;		Unchanged: 0/0
 26390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26395 ;;Total ram usage:        0 bytes
 26396 ;; Hardware stack levels used:    1
 26397 ;; Hardware stack levels required when called:   11
 26398 ;; This function calls:
 26399 ;;		Nothing
 26400 ;; This function is called by:
 26401 ;;		_I2c_WriteData
 26402 ;;		_I2c_ReadData
 26403 ;; This function uses a non-reentrant model
 26404 ;;
 26405                           
 26406                           	psect	text131
 26407  004F5E                     __ptext131:
 26408                           	opt stack 0
 26409  004F5E                     _CheckAckStatus:
 26410                           	opt stack 14
 26411                           
 26412                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 26413                           
 26414                           ;incstack = 0
 26415  004F5E  4471               	rlncf	3953,w,c	;volatile
 26416  004F60  46E8               	rlncf	wreg,f,c
 26417  004F62  0B03               	andlw	3
 26418  004F64  0B01               	andlw	1
 26419  004F66  0012               	return	
 26420  004F68                     __end_of_CheckAckStatus:
 26421                           	opt stack 0
 26422                           tosu	equ	0xFFF
 26423                           tosh	equ	0xFFE
 26424                           tosl	equ	0xFFD
 26425                           pclath	equ	0xFFA
 26426                           tblptru	equ	0xFF8
 26427                           tblptrh	equ	0xFF7
 26428                           tblptrl	equ	0xFF6
 26429                           tablat	equ	0xFF5
 26430                           prodh	equ	0xFF4
 26431                           prodl	equ	0xFF3
 26432                           intcon	equ	0xFF2
 26433                           intcon2	equ	0xFF1
 26434                           intcon3	equ	0xFF0
 26435                           indf0	equ	0xFEF
 26436                           postinc0	equ	0xFEE
 26437                           plusw0	equ	0xFEB
 26438                           fsr0h	equ	0xFEA
 26439                           fsr0l	equ	0xFE9
 26440                           wreg	equ	0xFE8
 26441                           indf1	equ	0xFE7
 26442                           postinc1	equ	0xFE6
 26443                           postdec1	equ	0xFE5
 26444                           fsr1h	equ	0xFE2
 26445                           fsr1l	equ	0xFE1
 26446                           indf2	equ	0xFDF
 26447                           postinc2	equ	0xFDE
 26448                           postdec2	equ	0xFDD
 26449                           plusw2	equ	0xFDB
 26450                           fsr2h	equ	0xFDA
 26451                           fsr2l	equ	0xFD9
 26452                           status	equ	0xFD8
 26453                           
 26454 ;; *************** function _LowPriorityIsr *****************
 26455 ;; Defined at:
 26456 ;;		line 236 in file "../Source/c/01_Hal/01_Sys/irq.c"
 26457 ;; Parameters:    Size  Location     Type
 26458 ;;		None
 26459 ;; Auto vars:     Size  Location     Type
 26460 ;;		None
 26461 ;; Return value:  Size  Location     Type
 26462 ;;                  1    wreg      void 
 26463 ;; Registers used:
 26464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26465 ;; Tracked objects:
 26466 ;;		On entry : 0/0
 26467 ;;		On exit  : 0/0
 26468 ;;		Unchanged: 0/0
 26469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26472 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26473 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26474 ;;Total ram usage:       21 bytes
 26475 ;; Hardware stack levels used:    1
 26476 ;; Hardware stack levels required when called:   10
 26477 ;; This function calls:
 26478 ;;		_Tmr_Tmr2Isr
 26479 ;; This function is called by:
 26480 ;;		Interrupt level 1
 26481 ;; This function uses a non-reentrant model
 26482 ;;
 26483                           
 26484                           	psect	intcodelo
 26485  000018                     __pintcodelo:
 26486                           	opt stack 0
 26487  000018                     _LowPriorityIsr:
 26488                           	opt stack 8
 26489                           
 26490                           ;incstack = 0
 26491  000018  805D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 26492  00001A  CFD8 F029          	movff	status,??_LowPriorityIsr
 26493  00001E  CFE8 F02A          	movff	wreg,??_LowPriorityIsr+1
 26494  000022  CFE0 F02B          	movff	bsr,??_LowPriorityIsr+2
 26495  000026  CFFA F02C          	movff	pclath,??_LowPriorityIsr+3
 26496  00002A  CFFB F02D          	movff	pclatu,??_LowPriorityIsr+4
 26497  00002E  CFE9 F02E          	movff	fsr0l,??_LowPriorityIsr+5
 26498  000032  CFEA F02F          	movff	fsr0h,??_LowPriorityIsr+6
 26499  000036  CFE1 F030          	movff	fsr1l,??_LowPriorityIsr+7
 26500  00003A  CFE2 F031          	movff	fsr1h,??_LowPriorityIsr+8
 26501  00003E  CFD9 F032          	movff	fsr2l,??_LowPriorityIsr+9
 26502  000042  CFDA F033          	movff	fsr2h,??_LowPriorityIsr+10
 26503  000046  CFF3 F034          	movff	prodl,??_LowPriorityIsr+11
 26504  00004A  CFF4 F035          	movff	prodh,??_LowPriorityIsr+12
 26505  00004E  CFF6 F036          	movff	tblptrl,??_LowPriorityIsr+13
 26506  000052  CFF7 F037          	movff	tblptrh,??_LowPriorityIsr+14
 26507  000056  CFF8 F038          	movff	tblptru,??_LowPriorityIsr+15
 26508  00005A  CFF5 F039          	movff	tablat,??_LowPriorityIsr+16
 26509  00005E  C05D  F03A         	movff	btemp,??_LowPriorityIsr+17
 26510  000062  C05E  F03B         	movff	btemp+1,??_LowPriorityIsr+18
 26511  000066  C05F  F03C         	movff	btemp+2,??_LowPriorityIsr+19
 26512  00006A  C060  F03D         	movff	btemp+3,??_LowPriorityIsr+20
 26513                           
 26514                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 26515  00006E  B29E               	btfsc	3998,1,c	;volatile
 26516                           
 26517                           ;irq.c: 259: {
 26518                           ;irq.c: 261: Tmr_Tmr2Isr();
 26519  000070  EC5B  F026         	call	_Tmr_Tmr2Isr	;wreg free
 26520  000074  C03D  F060         	movff	??_LowPriorityIsr+20,btemp+3
 26521  000078  C03C  F05F         	movff	??_LowPriorityIsr+19,btemp+2
 26522  00007C  C03B  F05E         	movff	??_LowPriorityIsr+18,btemp+1
 26523  000080  C03A  F05D         	movff	??_LowPriorityIsr+17,btemp
 26524  000084  C039  FFF5         	movff	??_LowPriorityIsr+16,tablat
 26525  000088  C038  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 26526  00008C  C037  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 26527  000090  C036  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 26528  000094  C035  FFF4         	movff	??_LowPriorityIsr+12,prodh
 26529  000098  C034  FFF3         	movff	??_LowPriorityIsr+11,prodl
 26530  00009C  C033  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 26531  0000A0  C032  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 26532  0000A4  C031  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 26533  0000A8  C030  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 26534  0000AC  C02F  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 26535  0000B0  C02E  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 26536  0000B4  C02D  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 26537  0000B8  C02C  FFFA         	movff	??_LowPriorityIsr+3,pclath
 26538  0000BC  C02B  FFE0         	movff	??_LowPriorityIsr+2,bsr
 26539  0000C0  C02A  FFE8         	movff	??_LowPriorityIsr+1,wreg
 26540  0000C4  C029  FFD8         	movff	??_LowPriorityIsr,status
 26541  0000C8  905D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 26542  0000CA  0010               	retfie	
 26543  0000CC                     __end_of_LowPriorityIsr:
 26544                           	opt stack 0
 26545                           tosu	equ	0xFFF
 26546                           tosh	equ	0xFFE
 26547                           tosl	equ	0xFFD
 26548                           pclatu	equ	0xFFB
 26549                           pclath	equ	0xFFA
 26550                           tblptru	equ	0xFF8
 26551                           tblptrh	equ	0xFF7
 26552                           tblptrl	equ	0xFF6
 26553                           tablat	equ	0xFF5
 26554                           prodh	equ	0xFF4
 26555                           prodl	equ	0xFF3
 26556                           intcon	equ	0xFF2
 26557                           intcon2	equ	0xFF1
 26558                           intcon3	equ	0xFF0
 26559                           indf0	equ	0xFEF
 26560                           postinc0	equ	0xFEE
 26561                           plusw0	equ	0xFEB
 26562                           fsr0h	equ	0xFEA
 26563                           fsr0l	equ	0xFE9
 26564                           wreg	equ	0xFE8
 26565                           indf1	equ	0xFE7
 26566                           postinc1	equ	0xFE6
 26567                           postdec1	equ	0xFE5
 26568                           fsr1h	equ	0xFE2
 26569                           fsr1l	equ	0xFE1
 26570                           bsr	equ	0xFE0
 26571                           indf2	equ	0xFDF
 26572                           postinc2	equ	0xFDE
 26573                           postdec2	equ	0xFDD
 26574                           plusw2	equ	0xFDB
 26575                           fsr2h	equ	0xFDA
 26576                           fsr2l	equ	0xFD9
 26577                           status	equ	0xFD8
 26578                           
 26579 ;; *************** function _Tmr_Tmr2Isr *****************
 26580 ;; Defined at:
 26581 ;;		line 308 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
 26582 ;; Parameters:    Size  Location     Type
 26583 ;;		None
 26584 ;; Auto vars:     Size  Location     Type
 26585 ;;		None
 26586 ;; Return value:  Size  Location     Type
 26587 ;;                  1    wreg      void 
 26588 ;; Registers used:
 26589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26590 ;; Tracked objects:
 26591 ;;		On entry : 0/0
 26592 ;;		On exit  : 0/0
 26593 ;;		Unchanged: 0/0
 26594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26599 ;;Total ram usage:        0 bytes
 26600 ;; Hardware stack levels used:    1
 26601 ;; Hardware stack levels required when called:    9
 26602 ;; This function calls:
 26603 ;;		Absolute function
 26604 ;;		_Sch_SchmIntService
 26605 ;; This function is called by:
 26606 ;;		_LowPriorityIsr
 26607 ;; This function uses a non-reentrant model
 26608 ;;
 26609                           
 26610                           	psect	text133
 26611  004CB6                     __ptext133:
 26612                           	opt stack 0
 26613  004CB6                     _Tmr_Tmr2Isr:
 26614                           	opt stack 8
 26615                           
 26616                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 26617                           
 26618                           ;incstack = 0
 26619  004CB6  929E               	bcf	3998,1,c	;volatile
 26620                           
 26621                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 26622  004CB8  0101               	movlb	1	; () banked
 26623  004CBA  5154               	movf	_Tmr2IsrCallback& (0+255),w,b
 26624  004CBC  1155               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 26625  004CBE  B4D8               	btfsc	status,2,c
 26626  004CC0  0012               	return	
 26627                           
 26628                           ; BSR set to: 1
 26629                           ;tmr_drv.c: 315: {
 26630                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 26631  004CC2  D801               	call	i1u806_28
 26632  004CC4  0012               	return	
 26633  004CC6                     i1u806_28:
 26634  004CC6  0005               	push	
 26635  004CC8  6EFA               	movwf	pclath,c
 26636  004CCA  5154               	movf	_Tmr2IsrCallback& (0+255),w,b
 26637  004CCC  6EFD               	movwf	tosl,c
 26638  004CCE  5155               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 26639  004CD0  6EFE               	movwf	tosh,c
 26640  004CD2  6AFF               	clrf	tosu,c
 26641  004CD4  50FA               	movf	pclath,w,c
 26642  004CD6  0012               	return		;indir
 26643  004CD8                     __end_of_Tmr_Tmr2Isr:
 26644                           	opt stack 0
 26645                           tosu	equ	0xFFF
 26646                           tosh	equ	0xFFE
 26647                           tosl	equ	0xFFD
 26648                           pclatu	equ	0xFFB
 26649                           pclath	equ	0xFFA
 26650                           tblptru	equ	0xFF8
 26651                           tblptrh	equ	0xFF7
 26652                           tblptrl	equ	0xFF6
 26653                           tablat	equ	0xFF5
 26654                           prodh	equ	0xFF4
 26655                           prodl	equ	0xFF3
 26656                           intcon	equ	0xFF2
 26657                           intcon2	equ	0xFF1
 26658                           intcon3	equ	0xFF0
 26659                           indf0	equ	0xFEF
 26660                           postinc0	equ	0xFEE
 26661                           plusw0	equ	0xFEB
 26662                           fsr0h	equ	0xFEA
 26663                           fsr0l	equ	0xFE9
 26664                           wreg	equ	0xFE8
 26665                           indf1	equ	0xFE7
 26666                           postinc1	equ	0xFE6
 26667                           postdec1	equ	0xFE5
 26668                           fsr1h	equ	0xFE2
 26669                           fsr1l	equ	0xFE1
 26670                           bsr	equ	0xFE0
 26671                           indf2	equ	0xFDF
 26672                           postinc2	equ	0xFDE
 26673                           postdec2	equ	0xFDD
 26674                           plusw2	equ	0xFDB
 26675                           fsr2h	equ	0xFDA
 26676                           fsr2l	equ	0xFD9
 26677                           status	equ	0xFD8
 26678                           
 26679 ;; *************** function _Sch_SchmIntService *****************
 26680 ;; Defined at:
 26681 ;;		line 214 in file "../Source/c/02_Osl/os_sched.c"
 26682 ;; Parameters:    Size  Location     Type
 26683 ;;		None
 26684 ;; Auto vars:     Size  Location     Type
 26685 ;;		None
 26686 ;; Return value:  Size  Location     Type
 26687 ;;                  1    wreg      void 
 26688 ;; Registers used:
 26689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26690 ;; Tracked objects:
 26691 ;;		On entry : 0/0
 26692 ;;		On exit  : 0/0
 26693 ;;		Unchanged: 0/0
 26694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26699 ;;Total ram usage:        0 bytes
 26700 ;; Hardware stack levels used:    1
 26701 ;; Hardware stack levels required when called:    8
 26702 ;; This function calls:
 26703 ;;		_OsAlrm_ProcessOsAlarms
 26704 ;;		_UpdateOsCounters
 26705 ;;		_UpdateSchFlag
 26706 ;; This function is called by:
 26707 ;;		_SystemInit
 26708 ;;		_Tmr_Tmr2Isr
 26709 ;; This function uses a non-reentrant model
 26710 ;;
 26711                           
 26712                           	psect	text134
 26713  004F12                     __ptext134:
 26714                           	opt stack 0
 26715  004F12                     _Sch_SchmIntService:
 26716                           	opt stack 8
 26717                           
 26718                           ;os_sched.c: 217: UpdateSchFlag();
 26719                           
 26720                           ;incstack = 0
 26721  004F12  ECCB  F026         	call	_UpdateSchFlag	;wreg free
 26722                           
 26723                           ;os_sched.c: 219: UpdateOsCounters();
 26724  004F16  EC6B  F027         	call	_UpdateOsCounters	;wreg free
 26725                           
 26726                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 26727  004F1A  ECED  F00D         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 26728  004F1E  0012               	return		;funcret
 26729  004F20                     __end_of_Sch_SchmIntService:
 26730                           	opt stack 0
 26731                           tosu	equ	0xFFF
 26732                           tosh	equ	0xFFE
 26733                           tosl	equ	0xFFD
 26734                           pclatu	equ	0xFFB
 26735                           pclath	equ	0xFFA
 26736                           tblptru	equ	0xFF8
 26737                           tblptrh	equ	0xFF7
 26738                           tblptrl	equ	0xFF6
 26739                           tablat	equ	0xFF5
 26740                           prodh	equ	0xFF4
 26741                           prodl	equ	0xFF3
 26742                           intcon	equ	0xFF2
 26743                           intcon2	equ	0xFF1
 26744                           intcon3	equ	0xFF0
 26745                           indf0	equ	0xFEF
 26746                           postinc0	equ	0xFEE
 26747                           plusw0	equ	0xFEB
 26748                           fsr0h	equ	0xFEA
 26749                           fsr0l	equ	0xFE9
 26750                           wreg	equ	0xFE8
 26751                           indf1	equ	0xFE7
 26752                           postinc1	equ	0xFE6
 26753                           postdec1	equ	0xFE5
 26754                           fsr1h	equ	0xFE2
 26755                           fsr1l	equ	0xFE1
 26756                           bsr	equ	0xFE0
 26757                           indf2	equ	0xFDF
 26758                           postinc2	equ	0xFDE
 26759                           postdec2	equ	0xFDD
 26760                           plusw2	equ	0xFDB
 26761                           fsr2h	equ	0xFDA
 26762                           fsr2l	equ	0xFD9
 26763                           status	equ	0xFD8
 26764                           
 26765 ;; *************** function _UpdateSchFlag *****************
 26766 ;; Defined at:
 26767 ;;		line 132 in file "../Source/c/02_Osl/os_sched.c"
 26768 ;; Parameters:    Size  Location     Type
 26769 ;;		None
 26770 ;; Auto vars:     Size  Location     Type
 26771 ;;		None
 26772 ;; Return value:  Size  Location     Type
 26773 ;;                  1    wreg      void 
 26774 ;; Registers used:
 26775 ;;		wreg, status,2, status,0
 26776 ;; Tracked objects:
 26777 ;;		On entry : 0/0
 26778 ;;		On exit  : 0/0
 26779 ;;		Unchanged: 0/0
 26780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26785 ;;Total ram usage:        0 bytes
 26786 ;; Hardware stack levels used:    1
 26787 ;; Hardware stack levels required when called:    4
 26788 ;; This function calls:
 26789 ;;		Nothing
 26790 ;; This function is called by:
 26791 ;;		_Sch_SchmIntService
 26792 ;; This function uses a non-reentrant model
 26793 ;;
 26794                           
 26795                           	psect	text135
 26796  004D96                     __ptext135:
 26797                           	opt stack 0
 26798  004D96                     _UpdateSchFlag:
 26799                           	opt stack 11
 26800                           
 26801                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 26802                           ;os_sched.c: 138: InterruptCounter++;
 26803                           
 26804                           ;incstack = 0
 26805  004D96  0101               	movlb	1	; () banked
 26806  004D98  4B44               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 26807  004D9A  2B45               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 26808                           
 26809                           ; BSR set to: 1
 26810                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 26811  004D9C  5144               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 26812  004D9E  1145               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 26813  004DA0  B4D8               	btfsc	status,2,c
 26814  004DA2  0012               	return	
 26815                           
 26816                           ; BSR set to: 1
 26817                           ;os_sched.c: 141: {
 26818                           ;os_sched.c: 143: InterruptCounter = 0;
 26819  004DA4  0E00               	movlw	0
 26820  004DA6  6F45               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 26821  004DA8  0E00               	movlw	0
 26822  004DAA  6F44               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 26823                           
 26824                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 26825  004DAC  0E00               	movlw	0
 26826  004DAE  6FE1               	movwf	_MainSystemTimebaseFlag& (0+255),b
 26827  004DB0  0012               	return	
 26828  004DB2                     __end_of_UpdateSchFlag:
 26829                           	opt stack 0
 26830                           tosu	equ	0xFFF
 26831                           tosh	equ	0xFFE
 26832                           tosl	equ	0xFFD
 26833                           pclatu	equ	0xFFB
 26834                           pclath	equ	0xFFA
 26835                           tblptru	equ	0xFF8
 26836                           tblptrh	equ	0xFF7
 26837                           tblptrl	equ	0xFF6
 26838                           tablat	equ	0xFF5
 26839                           prodh	equ	0xFF4
 26840                           prodl	equ	0xFF3
 26841                           intcon	equ	0xFF2
 26842                           intcon2	equ	0xFF1
 26843                           intcon3	equ	0xFF0
 26844                           indf0	equ	0xFEF
 26845                           postinc0	equ	0xFEE
 26846                           plusw0	equ	0xFEB
 26847                           fsr0h	equ	0xFEA
 26848                           fsr0l	equ	0xFE9
 26849                           wreg	equ	0xFE8
 26850                           indf1	equ	0xFE7
 26851                           postinc1	equ	0xFE6
 26852                           postdec1	equ	0xFE5
 26853                           fsr1h	equ	0xFE2
 26854                           fsr1l	equ	0xFE1
 26855                           bsr	equ	0xFE0
 26856                           indf2	equ	0xFDF
 26857                           postinc2	equ	0xFDE
 26858                           postdec2	equ	0xFDD
 26859                           plusw2	equ	0xFDB
 26860                           fsr2h	equ	0xFDA
 26861                           fsr2l	equ	0xFD9
 26862                           status	equ	0xFD8
 26863                           
 26864 ;; *************** function _UpdateOsCounters *****************
 26865 ;; Defined at:
 26866 ;;		line 157 in file "../Source/c/02_Osl/os_sched.c"
 26867 ;; Parameters:    Size  Location     Type
 26868 ;;		None
 26869 ;; Auto vars:     Size  Location     Type
 26870 ;;		None
 26871 ;; Return value:  Size  Location     Type
 26872 ;;                  1    wreg      void 
 26873 ;; Registers used:
 26874 ;;		wreg, status,2, status,0
 26875 ;; Tracked objects:
 26876 ;;		On entry : 0/0
 26877 ;;		On exit  : 0/0
 26878 ;;		Unchanged: 0/0
 26879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26884 ;;Total ram usage:        0 bytes
 26885 ;; Hardware stack levels used:    1
 26886 ;; Hardware stack levels required when called:    4
 26887 ;; This function calls:
 26888 ;;		Nothing
 26889 ;; This function is called by:
 26890 ;;		_Sch_SchmIntService
 26891 ;; This function uses a non-reentrant model
 26892 ;;
 26893                           
 26894                           	psect	text136
 26895  004ED6                     __ptext136:
 26896                           	opt stack 0
 26897  004ED6                     _UpdateOsCounters:
 26898                           	opt stack 11
 26899                           
 26900                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 26901                           
 26902                           ; BSR set to: 1
 26903                           ;incstack = 0
 26904  004ED6  0E01               	movlw	1
 26905  004ED8  0101               	movlb	1	; () banked
 26906  004EDA  272E               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 26907  004EDC  0E00               	movlw	0
 26908  004EDE  232F               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 26909  004EE0  2330               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 26910  004EE2  2331               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 26911                           
 26912                           ; BSR set to: 1
 26913  004EE4  0012               	return		;funcret
 26914  004EE6                     __end_of_UpdateOsCounters:
 26915                           	opt stack 0
 26916                           tosu	equ	0xFFF
 26917                           tosh	equ	0xFFE
 26918                           tosl	equ	0xFFD
 26919                           pclatu	equ	0xFFB
 26920                           pclath	equ	0xFFA
 26921                           tblptru	equ	0xFF8
 26922                           tblptrh	equ	0xFF7
 26923                           tblptrl	equ	0xFF6
 26924                           tablat	equ	0xFF5
 26925                           prodh	equ	0xFF4
 26926                           prodl	equ	0xFF3
 26927                           intcon	equ	0xFF2
 26928                           intcon2	equ	0xFF1
 26929                           intcon3	equ	0xFF0
 26930                           indf0	equ	0xFEF
 26931                           postinc0	equ	0xFEE
 26932                           plusw0	equ	0xFEB
 26933                           fsr0h	equ	0xFEA
 26934                           fsr0l	equ	0xFE9
 26935                           wreg	equ	0xFE8
 26936                           indf1	equ	0xFE7
 26937                           postinc1	equ	0xFE6
 26938                           postdec1	equ	0xFE5
 26939                           fsr1h	equ	0xFE2
 26940                           fsr1l	equ	0xFE1
 26941                           bsr	equ	0xFE0
 26942                           indf2	equ	0xFDF
 26943                           postinc2	equ	0xFDE
 26944                           postdec2	equ	0xFDD
 26945                           plusw2	equ	0xFDB
 26946                           fsr2h	equ	0xFDA
 26947                           fsr2l	equ	0xFD9
 26948                           status	equ	0xFD8
 26949                           
 26950 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 26951 ;; Defined at:
 26952 ;;		line 114 in file "../Source/c/02_Osl/os_alarms.c"
 26953 ;; Parameters:    Size  Location     Type
 26954 ;;		None
 26955 ;; Auto vars:     Size  Location     Type
 26956 ;;  AlarmIndex      2   38[COMRAM] unsigned short 
 26957 ;; Return value:  Size  Location     Type
 26958 ;;                  1    wreg      void 
 26959 ;; Registers used:
 26960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26961 ;; Tracked objects:
 26962 ;;		On entry : 0/0
 26963 ;;		On exit  : 0/0
 26964 ;;		Unchanged: 0/0
 26965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26968 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26969 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26970 ;;Total ram usage:       10 bytes
 26971 ;; Hardware stack levels used:    1
 26972 ;; Hardware stack levels required when called:    7
 26973 ;; This function calls:
 26974 ;;		_I2cDummyTx
 26975 ;;		_OsAlrm_ClearOsAlarm
 26976 ;;		i1___wmul
 26977 ;; This function is called by:
 26978 ;;		_Sch_SchmIntService
 26979 ;; This function uses a non-reentrant model
 26980 ;;
 26981                           
 26982                           	psect	text137
 26983  001BDA                     __ptext137:
 26984                           	opt stack 0
 26985  001BDA                     _OsAlrm_ProcessOsAlarms:
 26986                           	opt stack 8
 26987                           
 26988                           ;os_alarms.c: 116: UINT16 AlarmIndex;
 26989                           ;os_alarms.c: 119: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 26990                           
 26991                           ; BSR set to: 1
 26992                           ;incstack = 0
 26993  001BDA  0E00               	movlw	0
 26994  001BDC  6E28               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 26995  001BDE  0E00               	movlw	0
 26996  001BE0  6E27               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 26997  001BE2  5028               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 26998  001BE4  E105               	bnz	i1u774_20
 26999  001BE6  0E14               	movlw	20
 27000  001BE8  5C27               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 27001  001BEA  B0D8               	btfsc	status,0,c
 27002  001BEC  0012               	return	
 27003  001BEE  D001               	goto	i1l673
 27004  001BF0                     i1u774_20:
 27005  001BF0  0012               	return	
 27006  001BF2                     i1l673:
 27007                           
 27008                           ;os_alarms.c: 120: {
 27009                           ;os_alarms.c: 122: if (OsAlarms[AlarmIndex].Enabled == 1u)
 27010  001BF2  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27011  001BF6  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27012  001BFA  0E00               	movlw	0
 27013  001BFC  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27014  001BFE  0E0B               	movlw	11
 27015  001C00  6E19               	movwf	i1___wmul@multiplicand,c
 27016  001C02  ECE1  F025         	call	i1___wmul	;wreg free
 27017  001C06  0E00               	movlw	low _OsAlarms
 27018  001C08  2417               	addwf	?i1___wmul,w,c
 27019  001C0A  6ED9               	movwf	fsr2l,c
 27020  001C0C  0E05               	movlw	high _OsAlarms
 27021  001C0E  2018               	addwfc	?i1___wmul+1,w,c
 27022  001C10  6EDA               	movwf	fsr2h,c
 27023  001C12  04DE               	decf	postinc2,w,c
 27024  001C14  A4D8               	btfss	status,2,c
 27025  001C16  D089               	goto	i1u778_29
 27026                           
 27027                           ;os_alarms.c: 123: {
 27028                           ;os_alarms.c: 125: OsAlarms[AlarmIndex].Counter++;
 27029  001C18  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27030  001C1C  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27031  001C20  0E00               	movlw	0
 27032  001C22  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27033  001C24  0E0B               	movlw	11
 27034  001C26  6E19               	movwf	i1___wmul@multiplicand,c
 27035  001C28  ECE1  F025         	call	i1___wmul	;wreg free
 27036  001C2C  0E01               	movlw	1
 27037  001C2E  2617               	addwf	?i1___wmul,f,c
 27038  001C30  0E00               	movlw	0
 27039  001C32  2218               	addwfc	?i1___wmul+1,f,c
 27040  001C34  0E00               	movlw	low _OsAlarms
 27041  001C36  2417               	addwf	?i1___wmul,w,c
 27042  001C38  6ED9               	movwf	fsr2l,c
 27043  001C3A  0E05               	movlw	high _OsAlarms
 27044  001C3C  2018               	addwfc	?i1___wmul+1,w,c
 27045  001C3E  6EDA               	movwf	fsr2h,c
 27046  001C40  2ADE               	incf	postinc2,f,c
 27047  001C42  0E00               	movlw	0
 27048  001C44  22DE               	addwfc	postinc2,f,c
 27049  001C46  22DE               	addwfc	postinc2,f,c
 27050  001C48  22DE               	addwfc	postinc2,f,c
 27051                           
 27052                           ;os_alarms.c: 127: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 27053  001C4A  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27054  001C4E  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27055  001C52  0E00               	movlw	0
 27056  001C54  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27057  001C56  0E0B               	movlw	11
 27058  001C58  6E19               	movwf	i1___wmul@multiplicand,c
 27059  001C5A  ECE1  F025         	call	i1___wmul	;wreg free
 27060  001C5E  0E05               	movlw	5
 27061  001C60  2617               	addwf	?i1___wmul,f,c
 27062  001C62  0E00               	movlw	0
 27063  001C64  2218               	addwfc	?i1___wmul+1,f,c
 27064  001C66  0E00               	movlw	low _OsAlarms
 27065  001C68  2417               	addwf	?i1___wmul,w,c
 27066  001C6A  6ED9               	movwf	fsr2l,c
 27067  001C6C  0E05               	movlw	high _OsAlarms
 27068  001C6E  2018               	addwfc	?i1___wmul+1,w,c
 27069  001C70  6EDA               	movwf	fsr2h,c
 27070  001C72  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27071  001C76  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27072  001C7A  0E00               	movlw	0
 27073  001C7C  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27074  001C7E  0E0B               	movlw	11
 27075  001C80  6E19               	movwf	i1___wmul@multiplicand,c
 27076  001C82  ECE1  F025         	call	i1___wmul	;wreg free
 27077  001C86  0E01               	movlw	1
 27078  001C88  2617               	addwf	?i1___wmul,f,c
 27079  001C8A  0E00               	movlw	0
 27080  001C8C  2218               	addwfc	?i1___wmul+1,f,c
 27081  001C8E  0E00               	movlw	low _OsAlarms
 27082  001C90  2417               	addwf	?i1___wmul,w,c
 27083  001C92  6EE1               	movwf	fsr1l,c
 27084  001C94  0E05               	movlw	high _OsAlarms
 27085  001C96  2018               	addwfc	?i1___wmul+1,w,c
 27086  001C98  6EE2               	movwf	fsr1h,c
 27087  001C9A  50DE               	movf	postinc2,w,c
 27088  001C9C  5CE6               	subwf	postinc1,w,c
 27089  001C9E  50DE               	movf	postinc2,w,c
 27090  001CA0  58E6               	subwfb	postinc1,w,c
 27091  001CA2  50DE               	movf	postinc2,w,c
 27092  001CA4  58E6               	subwfb	postinc1,w,c
 27093  001CA6  50DE               	movf	postinc2,w,c
 27094  001CA8  58E6               	subwfb	postinc1,w,c
 27095  001CAA  A0D8               	btfss	status,0,c
 27096  001CAC  D03E               	goto	i1u778_29
 27097                           
 27098                           ;os_alarms.c: 128: {
 27099                           ;os_alarms.c: 130: OsAlrm_ClearOsAlarm(AlarmIndex);
 27100  001CAE  5027               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 27101  001CB0  EC42  F021         	call	_OsAlrm_ClearOsAlarm
 27102                           
 27103                           ;os_alarms.c: 132: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 27104  001CB4  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27105  001CB8  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27106  001CBC  0E00               	movlw	0
 27107  001CBE  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27108  001CC0  0E0B               	movlw	11
 27109  001CC2  6E19               	movwf	i1___wmul@multiplicand,c
 27110  001CC4  ECE1  F025         	call	i1___wmul	;wreg free
 27111  001CC8  0E09               	movlw	9
 27112  001CCA  2617               	addwf	?i1___wmul,f,c
 27113  001CCC  0E00               	movlw	0
 27114  001CCE  2218               	addwfc	?i1___wmul+1,f,c
 27115  001CD0  0E00               	movlw	low _OsAlarms
 27116  001CD2  2417               	addwf	?i1___wmul,w,c
 27117  001CD4  6ED9               	movwf	fsr2l,c
 27118  001CD6  0E05               	movlw	high _OsAlarms
 27119  001CD8  2018               	addwfc	?i1___wmul+1,w,c
 27120  001CDA  6EDA               	movwf	fsr2h,c
 27121  001CDC  50DE               	movf	postinc2,w,c
 27122  001CDE  10DE               	iorwf	postinc2,w,c
 27123  001CE0  B4D8               	btfsc	status,2,c
 27124  001CE2  D023               	goto	i1u778_29
 27125                           
 27126                           ;os_alarms.c: 133: {
 27127                           ;os_alarms.c: 135: OsAlarms[AlarmIndex].AlrmCbk();
 27128  001CE4  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27129  001CE8  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27130  001CEC  0E00               	movlw	0
 27131  001CEE  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27132  001CF0  0E0B               	movlw	11
 27133  001CF2  6E19               	movwf	i1___wmul@multiplicand,c
 27134  001CF4  ECE1  F025         	call	i1___wmul	;wreg free
 27135  001CF8  0E09               	movlw	9
 27136  001CFA  2617               	addwf	?i1___wmul,f,c
 27137  001CFC  0E00               	movlw	0
 27138  001CFE  2218               	addwfc	?i1___wmul+1,f,c
 27139  001D00  0E00               	movlw	low _OsAlarms
 27140  001D02  2417               	addwf	?i1___wmul,w,c
 27141  001D04  6ED9               	movwf	fsr2l,c
 27142  001D06  0E05               	movlw	high _OsAlarms
 27143  001D08  2018               	addwfc	?i1___wmul+1,w,c
 27144  001D0A  6EDA               	movwf	fsr2h,c
 27145  001D0C  CFDE F01F          	movff	postinc2,??_OsAlrm_ProcessOsAlarms
 27146  001D10  CFDD F020          	movff	postdec2,??_OsAlrm_ProcessOsAlarms+1
 27147  001D14  D801               	call	i1u778_28
 27148  001D16  D009               	goto	i1u778_29
 27149  001D18                     i1u778_28:
 27150  001D18  0005               	push	
 27151  001D1A  6EFA               	movwf	pclath,c
 27152  001D1C  501F               	movf	??_OsAlrm_ProcessOsAlarms,w,c
 27153  001D1E  6EFD               	movwf	tosl,c
 27154  001D20  5020               	movf	??_OsAlrm_ProcessOsAlarms+1,w,c
 27155  001D22  6EFE               	movwf	tosh,c
 27156  001D24  6AFF               	clrf	tosu,c
 27157  001D26  50FA               	movf	pclath,w,c
 27158  001D28  0012               	return		;indir
 27159  001D2A                     i1u778_29:
 27160  001D2A  4A27               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 27161  001D2C  2A28               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 27162  001D2E  5028               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 27163  001D30  E101               	bnz	i1l678
 27164  001D32  D759               	goto	L44
 27165  001D34                     i1l678:
 27166  001D34  0012               	return		;funcret
 27167  001D36                     __end_of_OsAlrm_ProcessOsAlarms:
 27168                           	opt stack 0
 27169                           tosu	equ	0xFFF
 27170                           tosh	equ	0xFFE
 27171                           tosl	equ	0xFFD
 27172                           pclatu	equ	0xFFB
 27173                           pclath	equ	0xFFA
 27174                           tblptru	equ	0xFF8
 27175                           tblptrh	equ	0xFF7
 27176                           tblptrl	equ	0xFF6
 27177                           tablat	equ	0xFF5
 27178                           prodh	equ	0xFF4
 27179                           prodl	equ	0xFF3
 27180                           intcon	equ	0xFF2
 27181                           intcon2	equ	0xFF1
 27182                           intcon3	equ	0xFF0
 27183                           indf0	equ	0xFEF
 27184                           postinc0	equ	0xFEE
 27185                           plusw0	equ	0xFEB
 27186                           fsr0h	equ	0xFEA
 27187                           fsr0l	equ	0xFE9
 27188                           wreg	equ	0xFE8
 27189                           indf1	equ	0xFE7
 27190                           postinc1	equ	0xFE6
 27191                           postdec1	equ	0xFE5
 27192                           fsr1h	equ	0xFE2
 27193                           fsr1l	equ	0xFE1
 27194                           bsr	equ	0xFE0
 27195                           indf2	equ	0xFDF
 27196                           postinc2	equ	0xFDE
 27197                           postdec2	equ	0xFDD
 27198                           plusw2	equ	0xFDB
 27199                           fsr2h	equ	0xFDA
 27200                           fsr2l	equ	0xFD9
 27201                           status	equ	0xFD8
 27202                           
 27203 ;; *************** function i1___wmul *****************
 27204 ;; Defined at:
 27205 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 27206 ;; Parameters:    Size  Location     Type
 27207 ;;  multiplier      2   22[COMRAM] unsigned int 
 27208 ;;  multiplicand    2   24[COMRAM] unsigned int 
 27209 ;; Auto vars:     Size  Location     Type
 27210 ;;  __wmul          2   26[COMRAM] unsigned int 
 27211 ;; Return value:  Size  Location     Type
 27212 ;;                  2   22[COMRAM] unsigned int 
 27213 ;; Registers used:
 27214 ;;		wreg, status,2, status,0, prodl, prodh
 27215 ;; Tracked objects:
 27216 ;;		On entry : 0/0
 27217 ;;		On exit  : 0/0
 27218 ;;		Unchanged: 0/0
 27219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27223 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27224 ;;Total ram usage:        6 bytes
 27225 ;; Hardware stack levels used:    1
 27226 ;; Hardware stack levels required when called:    4
 27227 ;; This function calls:
 27228 ;;		Nothing
 27229 ;; This function is called by:
 27230 ;;		_OsAlrm_ProcessOsAlarms
 27231 ;; This function uses a non-reentrant model
 27232 ;;
 27233                           
 27234                           	psect	text138
 27235  004BC2                     __ptext138:
 27236                           	opt stack 0
 27237  004BC2                     i1___wmul:
 27238                           	opt stack 10
 27239                           
 27240                           ;incstack = 0
 27241  004BC2  5017               	movf	i1___wmul@multiplier,w,c
 27242  004BC4  0219               	mulwf	i1___wmul@multiplicand,c
 27243  004BC6  CFF3 F01B          	movff	prodl,i1___wmul@product
 27244  004BCA  CFF4 F01C          	movff	prodh,i1___wmul@product+1
 27245  004BCE  5017               	movf	i1___wmul@multiplier,w,c
 27246  004BD0  021A               	mulwf	i1___wmul@multiplicand+1,c
 27247  004BD2  50F3               	movf	prodl,w,c
 27248  004BD4  261C               	addwf	i1___wmul@product+1,f,c
 27249  004BD6  5018               	movf	i1___wmul@multiplier+1,w,c
 27250  004BD8  0219               	mulwf	i1___wmul@multiplicand,c
 27251  004BDA  50F3               	movf	prodl,w,c
 27252  004BDC  261C               	addwf	i1___wmul@product+1,f,c
 27253  004BDE  C01B  F017         	movff	i1___wmul@product,?i1___wmul
 27254  004BE2  C01C  F018         	movff	i1___wmul@product+1,?i1___wmul+1
 27255  004BE6  0012               	return	
 27256  004BE8                     __end_ofi1___wmul:
 27257                           	opt stack 0
 27258                           tosu	equ	0xFFF
 27259                           tosh	equ	0xFFE
 27260                           tosl	equ	0xFFD
 27261                           pclatu	equ	0xFFB
 27262                           pclath	equ	0xFFA
 27263                           tblptru	equ	0xFF8
 27264                           tblptrh	equ	0xFF7
 27265                           tblptrl	equ	0xFF6
 27266                           tablat	equ	0xFF5
 27267                           prodh	equ	0xFF4
 27268                           prodl	equ	0xFF3
 27269                           intcon	equ	0xFF2
 27270                           intcon2	equ	0xFF1
 27271                           intcon3	equ	0xFF0
 27272                           indf0	equ	0xFEF
 27273                           postinc0	equ	0xFEE
 27274                           plusw0	equ	0xFEB
 27275                           fsr0h	equ	0xFEA
 27276                           fsr0l	equ	0xFE9
 27277                           wreg	equ	0xFE8
 27278                           indf1	equ	0xFE7
 27279                           postinc1	equ	0xFE6
 27280                           postdec1	equ	0xFE5
 27281                           fsr1h	equ	0xFE2
 27282                           fsr1l	equ	0xFE1
 27283                           bsr	equ	0xFE0
 27284                           indf2	equ	0xFDF
 27285                           postinc2	equ	0xFDE
 27286                           postdec2	equ	0xFDD
 27287                           plusw2	equ	0xFDB
 27288                           fsr2h	equ	0xFDA
 27289                           fsr2l	equ	0xFD9
 27290                           status	equ	0xFD8
 27291                           
 27292 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 27293 ;; Defined at:
 27294 ;;		line 96 in file "../Source/c/02_Osl/os_alarms.c"
 27295 ;; Parameters:    Size  Location     Type
 27296 ;;  OsAlarmId       1    wreg     unsigned char 
 27297 ;; Auto vars:     Size  Location     Type
 27298 ;;  OsAlarmId       1   22[COMRAM] unsigned char 
 27299 ;; Return value:  Size  Location     Type
 27300 ;;                  1    wreg      void 
 27301 ;; Registers used:
 27302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27303 ;; Tracked objects:
 27304 ;;		On entry : 0/0
 27305 ;;		On exit  : 0/0
 27306 ;;		Unchanged: 0/0
 27307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27312 ;;Total ram usage:        1 bytes
 27313 ;; Hardware stack levels used:    1
 27314 ;; Hardware stack levels required when called:    4
 27315 ;; This function calls:
 27316 ;;		Nothing
 27317 ;; This function is called by:
 27318 ;;		_OsAlrm_ProcessOsAlarms
 27319 ;; This function uses a non-reentrant model
 27320 ;;
 27321                           
 27322                           	psect	text139
 27323  004284                     __ptext139:
 27324                           	opt stack 0
 27325  004284                     _OsAlrm_ClearOsAlarm:
 27326                           	opt stack 10
 27327                           
 27328                           ;incstack = 0
 27329                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 27330  004284  6E17               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 27331                           
 27332                           ;os_alarms.c: 99: OsAlarms[OsAlarmId].Enabled = 0u;
 27333  004286  5017               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 27334  004288  0D0B               	mullw	11
 27335  00428A  0E00               	movlw	low _OsAlarms
 27336  00428C  24F3               	addwf	prodl,w,c
 27337  00428E  6ED9               	movwf	fsr2l,c
 27338  004290  0E05               	movlw	high _OsAlarms
 27339  004292  20F4               	addwfc	prodh,w,c
 27340  004294  6EDA               	movwf	fsr2h,c
 27341  004296  0E00               	movlw	0
 27342  004298  6EDF               	movwf	indf2,c
 27343                           
 27344                           ;os_alarms.c: 101: OsAlarms[OsAlarmId].Counter = 0;
 27345  00429A  5017               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 27346  00429C  0D0B               	mullw	11
 27347  00429E  0E01               	movlw	1
 27348  0042A0  26F3               	addwf	prodl,f,c
 27349  0042A2  0E00               	movlw	0
 27350  0042A4  22F4               	addwfc	prodh,f,c
 27351  0042A6  0E00               	movlw	low _OsAlarms
 27352  0042A8  24F3               	addwf	prodl,w,c
 27353  0042AA  6ED9               	movwf	fsr2l,c
 27354  0042AC  0E05               	movlw	high _OsAlarms
 27355  0042AE  20F4               	addwfc	prodh,w,c
 27356  0042B0  6EDA               	movwf	fsr2h,c
 27357  0042B2  6ADE               	clrf	postinc2,c
 27358  0042B4  6ADE               	clrf	postinc2,c
 27359  0042B6  6ADE               	clrf	postinc2,c
 27360  0042B8  6ADD               	clrf	postdec2,c
 27361                           
 27362                           ;os_alarms.c: 103: OsAlarms[OsAlarmId].AlarmTime = 0;
 27363  0042BA  5017               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 27364  0042BC  0D0B               	mullw	11
 27365  0042BE  0E05               	movlw	5
 27366  0042C0  26F3               	addwf	prodl,f,c
 27367  0042C2  0E00               	movlw	0
 27368  0042C4  22F4               	addwfc	prodh,f,c
 27369  0042C6  0E00               	movlw	low _OsAlarms
 27370  0042C8  24F3               	addwf	prodl,w,c
 27371  0042CA  6ED9               	movwf	fsr2l,c
 27372  0042CC  0E05               	movlw	high _OsAlarms
 27373  0042CE  20F4               	addwfc	prodh,w,c
 27374  0042D0  6EDA               	movwf	fsr2h,c
 27375  0042D2  6ADE               	clrf	postinc2,c
 27376  0042D4  6ADE               	clrf	postinc2,c
 27377  0042D6  6ADE               	clrf	postinc2,c
 27378  0042D8  6ADD               	clrf	postdec2,c
 27379  0042DA  0012               	return		;funcret
 27380  0042DC                     __end_of_OsAlrm_ClearOsAlarm:
 27381                           	opt stack 0
 27382                           tosu	equ	0xFFF
 27383                           tosh	equ	0xFFE
 27384                           tosl	equ	0xFFD
 27385                           pclatu	equ	0xFFB
 27386                           pclath	equ	0xFFA
 27387                           tblptru	equ	0xFF8
 27388                           tblptrh	equ	0xFF7
 27389                           tblptrl	equ	0xFF6
 27390                           tablat	equ	0xFF5
 27391                           prodh	equ	0xFF4
 27392                           prodl	equ	0xFF3
 27393                           intcon	equ	0xFF2
 27394                           intcon2	equ	0xFF1
 27395                           intcon3	equ	0xFF0
 27396                           indf0	equ	0xFEF
 27397                           postinc0	equ	0xFEE
 27398                           plusw0	equ	0xFEB
 27399                           fsr0h	equ	0xFEA
 27400                           fsr0l	equ	0xFE9
 27401                           wreg	equ	0xFE8
 27402                           indf1	equ	0xFE7
 27403                           postinc1	equ	0xFE6
 27404                           postdec1	equ	0xFE5
 27405                           fsr1h	equ	0xFE2
 27406                           fsr1l	equ	0xFE1
 27407                           bsr	equ	0xFE0
 27408                           indf2	equ	0xFDF
 27409                           postinc2	equ	0xFDE
 27410                           postdec2	equ	0xFDD
 27411                           plusw2	equ	0xFDB
 27412                           fsr2h	equ	0xFDA
 27413                           fsr2l	equ	0xFD9
 27414                           status	equ	0xFD8
 27415                           
 27416 ;; *************** function _I2cDummyTx *****************
 27417 ;; Defined at:
 27418 ;;		line 177 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 27419 ;; Parameters:    Size  Location     Type
 27420 ;;		None
 27421 ;; Auto vars:     Size  Location     Type
 27422 ;;		None
 27423 ;; Return value:  Size  Location     Type
 27424 ;;                  1    wreg      void 
 27425 ;; Registers used:
 27426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27427 ;; Tracked objects:
 27428 ;;		On entry : 0/0
 27429 ;;		On exit  : 0/0
 27430 ;;		Unchanged: 0/0
 27431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27436 ;;Total ram usage:        0 bytes
 27437 ;; Hardware stack levels used:    1
 27438 ;; Hardware stack levels required when called:    6
 27439 ;; This function calls:
 27440 ;;		i1_I2cSlv_SendI2cMsg
 27441 ;; This function is called by:
 27442 ;;		_I2cSlv_MainTask
 27443 ;;		_OsAlrm_ProcessOsAlarms
 27444 ;; This function uses a non-reentrant model
 27445 ;;
 27446                           
 27447                           	psect	text140
 27448  004DB2                     __ptext140:
 27449                           	opt stack 0
 27450  004DB2                     _I2cDummyTx:
 27451                           	opt stack 8
 27452                           
 27453                           ;i2c_slv.c: 179: static UINT8 DummyBuffer = 0x00;
 27454                           ;i2c_slv.c: 182: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 27455                           
 27456                           ;incstack = 0
 27457  004DB2  0EC4               	movlw	low I2cDummyTx@DummyBuffer
 27458  004DB4  6E1A               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 27459  004DB6  0E01               	movlw	high I2cDummyTx@DummyBuffer
 27460  004DB8  6E1B               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 27461  004DBA  0E00               	movlw	0
 27462  004DBC  6E1C               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 27463  004DBE  0E01               	movlw	1
 27464  004DC0  6E1D               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 27465  004DC2  EC7F  F024         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 27466                           
 27467                           ;i2c_slv.c: 184: I2cBusStatus = I2cBusReady;
 27468  004DC6  0E01               	movlw	1
 27469  004DC8  0101               	movlb	1	; () banked
 27470  004DCA  6F64               	movwf	_I2cBusStatus& (0+255),b
 27471                           
 27472                           ; BSR set to: 1
 27473  004DCC  0012               	return		;funcret
 27474  004DCE                     __end_of_I2cDummyTx:
 27475                           	opt stack 0
 27476                           tosu	equ	0xFFF
 27477                           tosh	equ	0xFFE
 27478                           tosl	equ	0xFFD
 27479                           pclatu	equ	0xFFB
 27480                           pclath	equ	0xFFA
 27481                           tblptru	equ	0xFF8
 27482                           tblptrh	equ	0xFF7
 27483                           tblptrl	equ	0xFF6
 27484                           tablat	equ	0xFF5
 27485                           prodh	equ	0xFF4
 27486                           prodl	equ	0xFF3
 27487                           intcon	equ	0xFF2
 27488                           intcon2	equ	0xFF1
 27489                           intcon3	equ	0xFF0
 27490                           indf0	equ	0xFEF
 27491                           postinc0	equ	0xFEE
 27492                           plusw0	equ	0xFEB
 27493                           fsr0h	equ	0xFEA
 27494                           fsr0l	equ	0xFE9
 27495                           wreg	equ	0xFE8
 27496                           indf1	equ	0xFE7
 27497                           postinc1	equ	0xFE6
 27498                           postdec1	equ	0xFE5
 27499                           fsr1h	equ	0xFE2
 27500                           fsr1l	equ	0xFE1
 27501                           bsr	equ	0xFE0
 27502                           indf2	equ	0xFDF
 27503                           postinc2	equ	0xFDE
 27504                           postdec2	equ	0xFDD
 27505                           plusw2	equ	0xFDB
 27506                           fsr2h	equ	0xFDA
 27507                           fsr2l	equ	0xFD9
 27508                           status	equ	0xFD8
 27509                           
 27510 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 27511 ;; Defined at:
 27512 ;;		line 236 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 27513 ;; Parameters:    Size  Location     Type
 27514 ;;  TxBuffer        2   25[COMRAM] PTR unsigned char 
 27515 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 27516 ;;  SlaveAddr       1   27[COMRAM] unsigned char 
 27517 ;;  DataLenght      1   28[COMRAM] unsigned char 
 27518 ;; Auto vars:     Size  Location     Type
 27519 ;;  I2cSlv_SendI    1   29[COMRAM] unsigned char 
 27520 ;; Return value:  Size  Location     Type
 27521 ;;                  1    wreg      unsigned char 
 27522 ;; Registers used:
 27523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27524 ;; Tracked objects:
 27525 ;;		On entry : 0/0
 27526 ;;		On exit  : 0/0
 27527 ;;		Unchanged: 0/0
 27528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27532 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27533 ;;Total ram usage:        5 bytes
 27534 ;; Hardware stack levels used:    1
 27535 ;; Hardware stack levels required when called:    5
 27536 ;; This function calls:
 27537 ;;		i1_GenerateEvt
 27538 ;; This function is called by:
 27539 ;;		_I2cDummyTx
 27540 ;; This function uses a non-reentrant model
 27541 ;;
 27542                           
 27543                           	psect	text141
 27544  0048FE                     __ptext141:
 27545                           	opt stack 0
 27546  0048FE                     i1_I2cSlv_SendI2cMsg:
 27547                           	opt stack 8
 27548                           
 27549                           ;i2c_slv.c: 238: UINT8 TxSts = 0u;
 27550                           
 27551                           ; BSR set to: 1
 27552                           ;incstack = 0
 27553  0048FE  0E00               	movlw	0
 27554  004900  6E1E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 27555                           
 27556                           ;i2c_slv.c: 240: if (I2cComSts != TxInProgress)
 27557  004902  044E               	decf	_I2cComSts,w,c
 27558  004904  B4D8               	btfsc	status,2,c
 27559  004906  D014               	goto	i1l1182
 27560                           
 27561                           ;i2c_slv.c: 241: {
 27562                           ;i2c_slv.c: 243: I2cTxPacket.SlaveAddress = SlaveAddr;
 27563  004908  C01C  F1AC         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 27564                           
 27565                           ;i2c_slv.c: 244: I2cTxPacket.ReadWrite = ((UINT8)(0));
 27566  00490C  0E00               	movlw	0
 27567  00490E  0101               	movlb	1	; () banked
 27568  004910  6FAD               	movwf	(_I2cTxPacket+1)& (0+255),b
 27569                           
 27570                           ; BSR set to: 1
 27571                           ;i2c_slv.c: 245: I2cTxPacket.Lenght = DataLenght;
 27572  004912  C01D  F1B0         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 27573                           
 27574                           ; BSR set to: 1
 27575                           ;i2c_slv.c: 246: I2cTxPacket.Buffer = TxBuffer;
 27576  004916  C01A  F1AE         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 27577  00491A  C01B  F1AF         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 27578                           
 27579                           ; BSR set to: 1
 27580                           ;i2c_slv.c: 249: GenerateEvt(&I2cWriteDataEvt);
 27581  00491E  0E54               	movlw	low _I2cWriteDataEvt
 27582  004920  6E17               	movwf	i1GenerateEvt@Event,c
 27583  004922  0E00               	movlw	high _I2cWriteDataEvt
 27584  004924  6E18               	movwf	i1GenerateEvt@Event+1,c
 27585  004926  EC22  F027         	call	i1_GenerateEvt	;wreg free
 27586                           
 27587                           ;i2c_slv.c: 251: TxSts = 1u;
 27588  00492A  0E01               	movlw	1
 27589  00492C  6E1E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 27590                           
 27591                           ;i2c_slv.c: 252: }
 27592  00492E  0012               	return	
 27593  004930                     i1l1182:
 27594                           
 27595                           ;i2c_slv.c: 253: else
 27596                           ;i2c_slv.c: 254: {
 27597                           ;i2c_slv.c: 256: TxSts = 0u;
 27598  004930  0E00               	movlw	0
 27599  004932  6E1E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 27600  004934  0012               	return	
 27601  004936                     __end_ofi1_I2cSlv_SendI2cMsg:
 27602                           	opt stack 0
 27603                           tosu	equ	0xFFF
 27604                           tosh	equ	0xFFE
 27605                           tosl	equ	0xFFD
 27606                           pclatu	equ	0xFFB
 27607                           pclath	equ	0xFFA
 27608                           tblptru	equ	0xFF8
 27609                           tblptrh	equ	0xFF7
 27610                           tblptrl	equ	0xFF6
 27611                           tablat	equ	0xFF5
 27612                           prodh	equ	0xFF4
 27613                           prodl	equ	0xFF3
 27614                           intcon	equ	0xFF2
 27615                           intcon2	equ	0xFF1
 27616                           intcon3	equ	0xFF0
 27617                           indf0	equ	0xFEF
 27618                           postinc0	equ	0xFEE
 27619                           plusw0	equ	0xFEB
 27620                           fsr0h	equ	0xFEA
 27621                           fsr0l	equ	0xFE9
 27622                           wreg	equ	0xFE8
 27623                           indf1	equ	0xFE7
 27624                           postinc1	equ	0xFE6
 27625                           postdec1	equ	0xFE5
 27626                           fsr1h	equ	0xFE2
 27627                           fsr1l	equ	0xFE1
 27628                           bsr	equ	0xFE0
 27629                           indf2	equ	0xFDF
 27630                           postinc2	equ	0xFDE
 27631                           postdec2	equ	0xFDD
 27632                           plusw2	equ	0xFDB
 27633                           fsr2h	equ	0xFDA
 27634                           fsr2l	equ	0xFD9
 27635                           status	equ	0xFD8
 27636                           
 27637 ;; *************** function i1_GenerateEvt *****************
 27638 ;; Defined at:
 27639 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 27640 ;; Parameters:    Size  Location     Type
 27641 ;;  Event           2   22[COMRAM] PTR struct EventStructur
 27642 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 27643 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 27644 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(253), 
 27645 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 27646 ;; Auto vars:     Size  Location     Type
 27647 ;;  GenerateEvt     1   24[COMRAM] enum E7721
 27648 ;; Return value:  Size  Location     Type
 27649 ;;                  1    wreg      enum E7693
 27650 ;; Registers used:
 27651 ;;		wreg, fsr2l, fsr2h, status,2
 27652 ;; Tracked objects:
 27653 ;;		On entry : 0/0
 27654 ;;		On exit  : 0/0
 27655 ;;		Unchanged: 0/0
 27656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27660 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27661 ;;Total ram usage:        3 bytes
 27662 ;; Hardware stack levels used:    1
 27663 ;; Hardware stack levels required when called:    4
 27664 ;; This function calls:
 27665 ;;		Nothing
 27666 ;; This function is called by:
 27667 ;;		i1_I2cSlv_SendI2cMsg
 27668 ;; This function uses a non-reentrant model
 27669 ;;
 27670                           
 27671                           	psect	text142
 27672  004E44                     __ptext142:
 27673                           	opt stack 0
 27674  004E44                     i1_GenerateEvt:
 27675                           	opt stack 8
 27676                           
 27677                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 27678                           
 27679                           ;incstack = 0
 27680  004E44  0E00               	movlw	0
 27681  004E46  6E19               	movwf	i1GenerateEvt@EventStatus,c
 27682                           
 27683                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 27684  004E48  C017  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 27685  004E4C  C018  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 27686  004E50  0E02               	movlw	2
 27687  004E52  6EDF               	movwf	indf2,c
 27688                           
 27689                           ;os_ser.c: 81: EventStatus = EventSent;
 27690  004E54  0E02               	movlw	2
 27691  004E56  6E19               	movwf	i1GenerateEvt@EventStatus,c
 27692  004E58  0012               	return	
 27693  004E5A                     __end_ofi1_GenerateEvt:
 27694                           	opt stack 0
 27695                           tosu	equ	0xFFF
 27696                           tosh	equ	0xFFE
 27697                           tosl	equ	0xFFD
 27698                           pclatu	equ	0xFFB
 27699                           pclath	equ	0xFFA
 27700                           tblptru	equ	0xFF8
 27701                           tblptrh	equ	0xFF7
 27702                           tblptrl	equ	0xFF6
 27703                           tablat	equ	0xFF5
 27704                           prodh	equ	0xFF4
 27705                           prodl	equ	0xFF3
 27706                           intcon	equ	0xFF2
 27707                           intcon2	equ	0xFF1
 27708                           intcon3	equ	0xFF0
 27709                           indf0	equ	0xFEF
 27710                           postinc0	equ	0xFEE
 27711                           plusw0	equ	0xFEB
 27712                           fsr0h	equ	0xFEA
 27713                           fsr0l	equ	0xFE9
 27714                           wreg	equ	0xFE8
 27715                           indf1	equ	0xFE7
 27716                           postinc1	equ	0xFE6
 27717                           postdec1	equ	0xFE5
 27718                           fsr1h	equ	0xFE2
 27719                           fsr1l	equ	0xFE1
 27720                           bsr	equ	0xFE0
 27721                           indf2	equ	0xFDF
 27722                           postinc2	equ	0xFDE
 27723                           postdec2	equ	0xFDD
 27724                           plusw2	equ	0xFDB
 27725                           fsr2h	equ	0xFDA
 27726                           fsr2l	equ	0xFD9
 27727                           status	equ	0xFD8
 27728                           
 27729 ;; *************** function _HighPriorityIsr *****************
 27730 ;; Defined at:
 27731 ;;		line 153 in file "../Source/c/01_Hal/01_Sys/irq.c"
 27732 ;; Parameters:    Size  Location     Type
 27733 ;;		None
 27734 ;; Auto vars:     Size  Location     Type
 27735 ;;		None
 27736 ;; Return value:  Size  Location     Type
 27737 ;;                  1    wreg      void 
 27738 ;; Registers used:
 27739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 27740 ;; Tracked objects:
 27741 ;;		On entry : 0/0
 27742 ;;		On exit  : 0/0
 27743 ;;		Unchanged: 0/0
 27744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27747 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27748 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27749 ;;Total ram usage:       18 bytes
 27750 ;; Hardware stack levels used:    1
 27751 ;; Hardware stack levels required when called:    3
 27752 ;; This function calls:
 27753 ;;		_Mcu_Int0Isr
 27754 ;;		_Mcu_Int1Isr
 27755 ;;		_Rtcc_RtcIsr
 27756 ;;		_Uart_Uart1RxIsr
 27757 ;; This function is called by:
 27758 ;;		Interrupt level 2
 27759 ;; This function uses a non-reentrant model
 27760 ;;
 27761                           
 27762                           	psect	intcode
 27763  000008                     __pintcode:
 27764                           	opt stack 0
 27765  000008                     _HighPriorityIsr:
 27766                           	opt stack 8
 27767                           
 27768                           ;incstack = 0
 27769  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 27770  00000A  EF38  F019         	goto	int_func
 27771                           tosu	equ	0xFFF
 27772                           tosh	equ	0xFFE
 27773                           tosl	equ	0xFFD
 27774                           pclatu	equ	0xFFB
 27775                           pclath	equ	0xFFA
 27776                           tblptru	equ	0xFF8
 27777                           tblptrh	equ	0xFF7
 27778                           tblptrl	equ	0xFF6
 27779                           tablat	equ	0xFF5
 27780                           prodh	equ	0xFF4
 27781                           prodl	equ	0xFF3
 27782                           intcon	equ	0xFF2
 27783                           intcon2	equ	0xFF1
 27784                           intcon3	equ	0xFF0
 27785                           indf0	equ	0xFEF
 27786                           postinc0	equ	0xFEE
 27787                           plusw0	equ	0xFEB
 27788                           fsr0h	equ	0xFEA
 27789                           fsr0l	equ	0xFE9
 27790                           wreg	equ	0xFE8
 27791                           indf1	equ	0xFE7
 27792                           postinc1	equ	0xFE6
 27793                           postdec1	equ	0xFE5
 27794                           fsr1h	equ	0xFE2
 27795                           fsr1l	equ	0xFE1
 27796                           bsr	equ	0xFE0
 27797                           indf2	equ	0xFDF
 27798                           postinc2	equ	0xFDE
 27799                           postdec2	equ	0xFDD
 27800                           plusw2	equ	0xFDB
 27801                           fsr2h	equ	0xFDA
 27802                           fsr2l	equ	0xFD9
 27803                           status	equ	0xFD8
 27804                           
 27805                           	psect	intcode_body
 27806  003270                     __pintcode_body:
 27807                           	opt stack 8
 27808  003270                     int_func:
 27809                           	opt stack 8
 27810  003270  CFFA F005          	movff	pclath,??_HighPriorityIsr
 27811  003274  CFFB F006          	movff	pclatu,??_HighPriorityIsr+1
 27812  003278  CFE9 F007          	movff	fsr0l,??_HighPriorityIsr+2
 27813  00327C  CFEA F008          	movff	fsr0h,??_HighPriorityIsr+3
 27814  003280  CFE1 F009          	movff	fsr1l,??_HighPriorityIsr+4
 27815  003284  CFE2 F00A          	movff	fsr1h,??_HighPriorityIsr+5
 27816  003288  CFD9 F00B          	movff	fsr2l,??_HighPriorityIsr+6
 27817  00328C  CFDA F00C          	movff	fsr2h,??_HighPriorityIsr+7
 27818  003290  CFF3 F00D          	movff	prodl,??_HighPriorityIsr+8
 27819  003294  CFF4 F00E          	movff	prodh,??_HighPriorityIsr+9
 27820  003298  CFF6 F00F          	movff	tblptrl,??_HighPriorityIsr+10
 27821  00329C  CFF7 F010          	movff	tblptrh,??_HighPriorityIsr+11
 27822  0032A0  CFF8 F011          	movff	tblptru,??_HighPriorityIsr+12
 27823  0032A4  CFF5 F012          	movff	tablat,??_HighPriorityIsr+13
 27824  0032A8  C05D  F013         	movff	btemp,??_HighPriorityIsr+14
 27825  0032AC  C05E  F014         	movff	btemp+1,??_HighPriorityIsr+15
 27826  0032B0  C05F  F015         	movff	btemp+2,??_HighPriorityIsr+16
 27827  0032B4  C060  F016         	movff	btemp+3,??_HighPriorityIsr+17
 27828                           
 27829                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 27830  0032B8  B2F2               	btfsc	intcon,1,c	;volatile
 27831                           
 27832                           ;irq.c: 158: {
 27833                           ;irq.c: 160: Mcu_Int0Isr();
 27834  0032BA  ECC2  F027         	call	_Mcu_Int0Isr	;wreg free
 27835                           
 27836                           ;irq.c: 161: }
 27837                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 27838  0032BE  B0F0               	btfsc	intcon3,0,c	;volatile
 27839                           
 27840                           ;irq.c: 167: {
 27841                           ;irq.c: 169: Mcu_Int1Isr();
 27842  0032C0  ECC0  F027         	call	_Mcu_Int1Isr	;wreg free
 27843                           
 27844                           ;irq.c: 170: }
 27845                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 27846  0032C4  B0A4               	btfsc	4004,0,c	;volatile
 27847                           
 27848                           ;irq.c: 203: {
 27849                           ;irq.c: 205: Rtcc_RtcIsr();
 27850  0032C6  EC6C  F026         	call	_Rtcc_RtcIsr	;wreg free
 27851                           
 27852                           ;irq.c: 206: }
 27853                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 27854  0032CA  BA9E               	btfsc	3998,5,c	;volatile
 27855                           
 27856                           ;irq.c: 212: {
 27857                           ;irq.c: 214: Uart_Uart1RxIsr();
 27858  0032CC  EC73  F027         	call	_Uart_Uart1RxIsr	;wreg free
 27859  0032D0  C016  F060         	movff	??_HighPriorityIsr+17,btemp+3
 27860  0032D4  C015  F05F         	movff	??_HighPriorityIsr+16,btemp+2
 27861  0032D8  C014  F05E         	movff	??_HighPriorityIsr+15,btemp+1
 27862  0032DC  C013  F05D         	movff	??_HighPriorityIsr+14,btemp
 27863  0032E0  C012  FFF5         	movff	??_HighPriorityIsr+13,tablat
 27864  0032E4  C011  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 27865  0032E8  C010  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 27866  0032EC  C00F  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 27867  0032F0  C00E  FFF4         	movff	??_HighPriorityIsr+9,prodh
 27868  0032F4  C00D  FFF3         	movff	??_HighPriorityIsr+8,prodl
 27869  0032F8  C00C  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 27870  0032FC  C00B  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 27871  003300  C00A  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 27872  003304  C009  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 27873  003308  C008  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 27874  00330C  C007  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 27875  003310  C006  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 27876  003314  C005  FFFA         	movff	??_HighPriorityIsr,pclath
 27877  003318  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 27878  00331A  0011               	retfie		f
 27879  00331C                     __end_of_HighPriorityIsr:
 27880                           	opt stack 0
 27881                           tosu	equ	0xFFF
 27882                           tosh	equ	0xFFE
 27883                           tosl	equ	0xFFD
 27884                           pclatu	equ	0xFFB
 27885                           pclath	equ	0xFFA
 27886                           tblptru	equ	0xFF8
 27887                           tblptrh	equ	0xFF7
 27888                           tblptrl	equ	0xFF6
 27889                           tablat	equ	0xFF5
 27890                           prodh	equ	0xFF4
 27891                           prodl	equ	0xFF3
 27892                           intcon	equ	0xFF2
 27893                           intcon2	equ	0xFF1
 27894                           intcon3	equ	0xFF0
 27895                           indf0	equ	0xFEF
 27896                           postinc0	equ	0xFEE
 27897                           plusw0	equ	0xFEB
 27898                           fsr0h	equ	0xFEA
 27899                           fsr0l	equ	0xFE9
 27900                           wreg	equ	0xFE8
 27901                           indf1	equ	0xFE7
 27902                           postinc1	equ	0xFE6
 27903                           postdec1	equ	0xFE5
 27904                           fsr1h	equ	0xFE2
 27905                           fsr1l	equ	0xFE1
 27906                           bsr	equ	0xFE0
 27907                           indf2	equ	0xFDF
 27908                           postinc2	equ	0xFDE
 27909                           postdec2	equ	0xFDD
 27910                           plusw2	equ	0xFDB
 27911                           fsr2h	equ	0xFDA
 27912                           fsr2l	equ	0xFD9
 27913                           status	equ	0xFD8
 27914                           
 27915 ;; *************** function _Uart_Uart1RxIsr *****************
 27916 ;; Defined at:
 27917 ;;		line 572 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 27918 ;; Parameters:    Size  Location     Type
 27919 ;;		None
 27920 ;; Auto vars:     Size  Location     Type
 27921 ;;		None
 27922 ;; Return value:  Size  Location     Type
 27923 ;;                  1    wreg      void 
 27924 ;; Registers used:
 27925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27926 ;; Tracked objects:
 27927 ;;		On entry : 0/0
 27928 ;;		On exit  : 0/0
 27929 ;;		Unchanged: 0/0
 27930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27935 ;;Total ram usage:        0 bytes
 27936 ;; Hardware stack levels used:    1
 27937 ;; Hardware stack levels required when called:    2
 27938 ;; This function calls:
 27939 ;;		_Uart_MdmWifiReadService
 27940 ;; This function is called by:
 27941 ;;		_HighPriorityIsr
 27942 ;; This function uses a non-reentrant model
 27943 ;;
 27944                           
 27945                           	psect	text144
 27946  004EE6                     __ptext144:
 27947                           	opt stack 0
 27948  004EE6                     _Uart_Uart1RxIsr:
 27949                           	opt stack 8
 27950                           
 27951                           ;uart_drv.c: 575: static UINT8 UartRxData = 0;
 27952                           ;uart_drv.c: 578: UartRxData = RCREG1;
 27953                           
 27954                           ;incstack = 0
 27955  004EE6  CFAF F16F          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 27956                           
 27957                           ;uart_drv.c: 592: Uart_MdmWifiReadService(1,UartRxData);
 27958  004EEA  C16F  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmWifiReadService@UartData
 27959  004EEE  0E01               	movlw	1
 27960  004EF0  ECE9  F024         	call	_Uart_MdmWifiReadService
 27961  004EF4  0012               	return		;funcret
 27962  004EF6                     __end_of_Uart_Uart1RxIsr:
 27963                           	opt stack 0
 27964                           tosu	equ	0xFFF
 27965                           tosh	equ	0xFFE
 27966                           tosl	equ	0xFFD
 27967                           pclatu	equ	0xFFB
 27968                           pclath	equ	0xFFA
 27969                           tblptru	equ	0xFF8
 27970                           tblptrh	equ	0xFF7
 27971                           tblptrl	equ	0xFF6
 27972                           tablat	equ	0xFF5
 27973                           prodh	equ	0xFF4
 27974                           prodl	equ	0xFF3
 27975                           intcon	equ	0xFF2
 27976                           intcon2	equ	0xFF1
 27977                           intcon3	equ	0xFF0
 27978                           indf0	equ	0xFEF
 27979                           postinc0	equ	0xFEE
 27980                           plusw0	equ	0xFEB
 27981                           fsr0h	equ	0xFEA
 27982                           fsr0l	equ	0xFE9
 27983                           wreg	equ	0xFE8
 27984                           indf1	equ	0xFE7
 27985                           postinc1	equ	0xFE6
 27986                           postdec1	equ	0xFE5
 27987                           fsr1h	equ	0xFE2
 27988                           fsr1l	equ	0xFE1
 27989                           bsr	equ	0xFE0
 27990                           indf2	equ	0xFDF
 27991                           postinc2	equ	0xFDE
 27992                           postdec2	equ	0xFDD
 27993                           plusw2	equ	0xFDB
 27994                           fsr2h	equ	0xFDA
 27995                           fsr2l	equ	0xFD9
 27996                           status	equ	0xFD8
 27997                           
 27998 ;; *************** function _Uart_MdmWifiReadService *****************
 27999 ;; Defined at:
 28000 ;;		line 462 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 28001 ;; Parameters:    Size  Location     Type
 28002 ;;  Module          1    wreg     unsigned char 
 28003 ;;  UartData        1    3[COMRAM] unsigned char 
 28004 ;; Auto vars:     Size  Location     Type
 28005 ;;  Module          1    0[COMRAM] unsigned char 
 28006 ;; Return value:  Size  Location     Type
 28007 ;;                  1    wreg      void 
 28008 ;; Registers used:
 28009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28010 ;; Tracked objects:
 28011 ;;		On entry : 0/0
 28012 ;;		On exit  : 0/0
 28013 ;;		Unchanged: 0/0
 28014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28015 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28018 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28019 ;;Total ram usage:        1 bytes
 28020 ;; Hardware stack levels used:    1
 28021 ;; Hardware stack levels required when called:    1
 28022 ;; This function calls:
 28023 ;;		i2_GenerateEvt
 28024 ;; This function is called by:
 28025 ;;		_Uart_Uart1RxIsr
 28026 ;; This function uses a non-reentrant model
 28027 ;;
 28028                           
 28029                           	psect	text145
 28030  0049D2                     __ptext145:
 28031                           	opt stack 0
 28032  0049D2                     _Uart_MdmWifiReadService:
 28033                           	opt stack 8
 28034                           
 28035                           ;uart_drv.c: 464: if (MdmWifi_UartRxCounter < sizeof(MdmWifi_UartRxBuffer))
 28036                           
 28037                           ;incstack = 0
 28038  0049D2  0101               	movlb	1	; () banked
 28039  0049D4  514B               	movf	(_MdmWifi_UartRxCounter+1)& (0+255),w,b
 28040  0049D6  E115               	bnz	i2l557
 28041  0049D8  0EFA               	movlw	250
 28042  0049DA  5D4A               	subwf	_MdmWifi_UartRxCounter& (0+255),w,b
 28043  0049DC  B0D8               	btfsc	status,0,c
 28044  0049DE  0012               	return	
 28045                           
 28046                           ; BSR set to: 1
 28047                           ;uart_drv.c: 465: {
 28048                           ;uart_drv.c: 467: MdmWifi_UartRxBuffer[MdmWifi_UartRxCounter] = UartData;
 28049  0049E0  0E00               	movlw	low _MdmWifi_UartRxBuffer
 28050  0049E2  254A               	addwf	_MdmWifi_UartRxCounter& (0+255),w,b
 28051  0049E4  6ED9               	movwf	fsr2l,c
 28052  0049E6  0E0B               	movlw	high _MdmWifi_UartRxBuffer
 28053  0049E8  214B               	addwfc	(_MdmWifi_UartRxCounter+1)& (0+255),w,b
 28054  0049EA  6EDA               	movwf	fsr2h,c
 28055  0049EC  C004  FFDF         	movff	Uart_MdmWifiReadService@UartData,indf2
 28056                           
 28057                           ; BSR set to: 1
 28058                           ;uart_drv.c: 469: MdmWifi_UartRxCounter++;
 28059  0049F0  4B4A               	infsnz	_MdmWifi_UartRxCounter& (0+255),f,b
 28060  0049F2  2B4B               	incf	(_MdmWifi_UartRxCounter+1)& (0+255),f,b
 28061                           
 28062                           ; BSR set to: 1
 28063                           ;uart_drv.c: 471: GenerateEvt(&NewWifiUartData);
 28064  0049F4  0E5C               	movlw	low _NewWifiUartData
 28065  0049F6  6E01               	movwf	i2GenerateEvt@Event,c
 28066  0049F8  0E00               	movlw	high _NewWifiUartData
 28067  0049FA  6E02               	movwf	i2GenerateEvt@Event+1,c
 28068  0049FC  EC2D  F027         	call	i2_GenerateEvt	;wreg free
 28069  004A00  0012               	return	
 28070  004A02                     i2l557:
 28071  004A02  0012               	return		;funcret
 28072  004A04                     __end_of_Uart_MdmWifiReadService:
 28073                           	opt stack 0
 28074                           tosu	equ	0xFFF
 28075                           tosh	equ	0xFFE
 28076                           tosl	equ	0xFFD
 28077                           pclatu	equ	0xFFB
 28078                           pclath	equ	0xFFA
 28079                           tblptru	equ	0xFF8
 28080                           tblptrh	equ	0xFF7
 28081                           tblptrl	equ	0xFF6
 28082                           tablat	equ	0xFF5
 28083                           prodh	equ	0xFF4
 28084                           prodl	equ	0xFF3
 28085                           intcon	equ	0xFF2
 28086                           intcon2	equ	0xFF1
 28087                           intcon3	equ	0xFF0
 28088                           indf0	equ	0xFEF
 28089                           postinc0	equ	0xFEE
 28090                           plusw0	equ	0xFEB
 28091                           fsr0h	equ	0xFEA
 28092                           fsr0l	equ	0xFE9
 28093                           wreg	equ	0xFE8
 28094                           indf1	equ	0xFE7
 28095                           postinc1	equ	0xFE6
 28096                           postdec1	equ	0xFE5
 28097                           fsr1h	equ	0xFE2
 28098                           fsr1l	equ	0xFE1
 28099                           bsr	equ	0xFE0
 28100                           indf2	equ	0xFDF
 28101                           postinc2	equ	0xFDE
 28102                           postdec2	equ	0xFDD
 28103                           plusw2	equ	0xFDB
 28104                           fsr2h	equ	0xFDA
 28105                           fsr2l	equ	0xFD9
 28106                           status	equ	0xFD8
 28107                           
 28108 ;; *************** function _Rtcc_RtcIsr *****************
 28109 ;; Defined at:
 28110 ;;		line 537 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 28111 ;; Parameters:    Size  Location     Type
 28112 ;;		None
 28113 ;; Auto vars:     Size  Location     Type
 28114 ;;		None
 28115 ;; Return value:  Size  Location     Type
 28116 ;;                  1    wreg      void 
 28117 ;; Registers used:
 28118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 28119 ;; Tracked objects:
 28120 ;;		On entry : 0/0
 28121 ;;		On exit  : 0/0
 28122 ;;		Unchanged: 0/0
 28123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28128 ;;Total ram usage:        0 bytes
 28129 ;; Hardware stack levels used:    1
 28130 ;; Hardware stack levels required when called:    2
 28131 ;; This function calls:
 28132 ;;		Absolute function
 28133 ;;		_Alarm
 28134 ;; This function is called by:
 28135 ;;		_HighPriorityIsr
 28136 ;; This function uses a non-reentrant model
 28137 ;;
 28138                           
 28139                           	psect	text146
 28140  004CD8                     __ptext146:
 28141                           	opt stack 0
 28142  004CD8                     _Rtcc_RtcIsr:
 28143                           	opt stack 8
 28144                           
 28145                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 28146                           
 28147                           ;incstack = 0
 28148  004CD8  90A4               	bcf	4004,0,c	;volatile
 28149                           
 28150                           ;rtcc_drv.c: 543: if (RtccIsrCallback != (0))
 28151  004CDA  0101               	movlb	1	; () banked
 28152  004CDC  5150               	movf	_RtccIsrCallback& (0+255),w,b
 28153  004CDE  1151               	iorwf	(_RtccIsrCallback+1)& (0+255),w,b
 28154  004CE0  B4D8               	btfsc	status,2,c
 28155  004CE2  0012               	return	
 28156                           
 28157                           ; BSR set to: 1
 28158                           ;rtcc_drv.c: 544: {
 28159                           ;rtcc_drv.c: 546: RtccIsrCallback();
 28160  004CE4  D801               	call	i2u804_48
 28161  004CE6  0012               	return	
 28162  004CE8                     i2u804_48:
 28163  004CE8  0005               	push	
 28164  004CEA  6EFA               	movwf	pclath,c
 28165  004CEC  5150               	movf	_RtccIsrCallback& (0+255),w,b
 28166  004CEE  6EFD               	movwf	tosl,c
 28167  004CF0  5151               	movf	(_RtccIsrCallback+1)& (0+255),w,b
 28168  004CF2  6EFE               	movwf	tosh,c
 28169  004CF4  6AFF               	clrf	tosu,c
 28170  004CF6  50FA               	movf	pclath,w,c
 28171  004CF8  0012               	return		;indir
 28172  004CFA                     __end_of_Rtcc_RtcIsr:
 28173                           	opt stack 0
 28174                           tosu	equ	0xFFF
 28175                           tosh	equ	0xFFE
 28176                           tosl	equ	0xFFD
 28177                           pclatu	equ	0xFFB
 28178                           pclath	equ	0xFFA
 28179                           tblptru	equ	0xFF8
 28180                           tblptrh	equ	0xFF7
 28181                           tblptrl	equ	0xFF6
 28182                           tablat	equ	0xFF5
 28183                           prodh	equ	0xFF4
 28184                           prodl	equ	0xFF3
 28185                           intcon	equ	0xFF2
 28186                           intcon2	equ	0xFF1
 28187                           intcon3	equ	0xFF0
 28188                           indf0	equ	0xFEF
 28189                           postinc0	equ	0xFEE
 28190                           plusw0	equ	0xFEB
 28191                           fsr0h	equ	0xFEA
 28192                           fsr0l	equ	0xFE9
 28193                           wreg	equ	0xFE8
 28194                           indf1	equ	0xFE7
 28195                           postinc1	equ	0xFE6
 28196                           postdec1	equ	0xFE5
 28197                           fsr1h	equ	0xFE2
 28198                           fsr1l	equ	0xFE1
 28199                           bsr	equ	0xFE0
 28200                           indf2	equ	0xFDF
 28201                           postinc2	equ	0xFDE
 28202                           postdec2	equ	0xFDD
 28203                           plusw2	equ	0xFDB
 28204                           fsr2h	equ	0xFDA
 28205                           fsr2l	equ	0xFD9
 28206                           status	equ	0xFD8
 28207                           
 28208 ;; *************** function _Alarm *****************
 28209 ;; Defined at:
 28210 ;;		line 80 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 28211 ;; Parameters:    Size  Location     Type
 28212 ;;		None
 28213 ;; Auto vars:     Size  Location     Type
 28214 ;;		None
 28215 ;; Return value:  Size  Location     Type
 28216 ;;                  1    wreg      void 
 28217 ;; Registers used:
 28218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28219 ;; Tracked objects:
 28220 ;;		On entry : 0/0
 28221 ;;		On exit  : 0/0
 28222 ;;		Unchanged: 0/0
 28223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28226 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28228 ;;Total ram usage:        1 bytes
 28229 ;; Hardware stack levels used:    1
 28230 ;; Hardware stack levels required when called:    1
 28231 ;; This function calls:
 28232 ;;		i2_GenerateEvt
 28233 ;; This function is called by:
 28234 ;;		_Rtcm_MainTask
 28235 ;;		_Rtcc_RtcIsr
 28236 ;; This function uses a non-reentrant model
 28237 ;;
 28238                           
 28239                           	psect	text147
 28240  004B70                     __ptext147:
 28241                           	opt stack 0
 28242  004B70                     _Alarm:
 28243                           	opt stack 8
 28244                           
 28245                           ;rtcm.c: 83: PORTDbits.RD6 = !PORTDbits.RD6;
 28246                           
 28247                           ;incstack = 0
 28248  004B70  BC83               	btfsc	3971,6,c	;volatile
 28249  004B72  D003               	goto	i2u800_40
 28250  004B74  6A04               	clrf	??_Alarm& (0+255),c
 28251  004B76  2A04               	incf	??_Alarm& (0+255),f,c
 28252  004B78  D001               	goto	i2u801_48
 28253  004B7A                     i2u800_40:
 28254  004B7A  6A04               	clrf	??_Alarm& (0+255),c
 28255  004B7C                     i2u801_48:
 28256  004B7C  3A04               	swapf	??_Alarm,f,c
 28257  004B7E  4604               	rlncf	??_Alarm,f,c
 28258  004B80  4604               	rlncf	??_Alarm,f,c
 28259  004B82  5083               	movf	3971,w,c	;volatile
 28260  004B84  1804               	xorwf	??_Alarm,w,c
 28261  004B86  0BBF               	andlw	-65
 28262  004B88  1804               	xorwf	??_Alarm,w,c
 28263  004B8A  6E83               	movwf	3971,c	;volatile
 28264                           
 28265                           ;rtcm.c: 85: GenerateEvt(&AlarmEvent);
 28266  004B8C  0EC3               	movlw	low _AlarmEvent
 28267  004B8E  6E01               	movwf	i2GenerateEvt@Event,c
 28268  004B90  0E01               	movlw	high _AlarmEvent
 28269  004B92  6E02               	movwf	i2GenerateEvt@Event+1,c
 28270  004B94  EC2D  F027         	call	i2_GenerateEvt	;wreg free
 28271  004B98  0012               	return		;funcret
 28272  004B9A                     __end_of_Alarm:
 28273                           	opt stack 0
 28274                           tosu	equ	0xFFF
 28275                           tosh	equ	0xFFE
 28276                           tosl	equ	0xFFD
 28277                           pclatu	equ	0xFFB
 28278                           pclath	equ	0xFFA
 28279                           tblptru	equ	0xFF8
 28280                           tblptrh	equ	0xFF7
 28281                           tblptrl	equ	0xFF6
 28282                           tablat	equ	0xFF5
 28283                           prodh	equ	0xFF4
 28284                           prodl	equ	0xFF3
 28285                           intcon	equ	0xFF2
 28286                           intcon2	equ	0xFF1
 28287                           intcon3	equ	0xFF0
 28288                           indf0	equ	0xFEF
 28289                           postinc0	equ	0xFEE
 28290                           plusw0	equ	0xFEB
 28291                           fsr0h	equ	0xFEA
 28292                           fsr0l	equ	0xFE9
 28293                           wreg	equ	0xFE8
 28294                           indf1	equ	0xFE7
 28295                           postinc1	equ	0xFE6
 28296                           postdec1	equ	0xFE5
 28297                           fsr1h	equ	0xFE2
 28298                           fsr1l	equ	0xFE1
 28299                           bsr	equ	0xFE0
 28300                           indf2	equ	0xFDF
 28301                           postinc2	equ	0xFDE
 28302                           postdec2	equ	0xFDD
 28303                           plusw2	equ	0xFDB
 28304                           fsr2h	equ	0xFDA
 28305                           fsr2l	equ	0xFD9
 28306                           status	equ	0xFD8
 28307                           
 28308 ;; *************** function i2_GenerateEvt *****************
 28309 ;; Defined at:
 28310 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 28311 ;; Parameters:    Size  Location     Type
 28312 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 28313 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 28314 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 28315 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(253), 
 28316 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 28317 ;; Auto vars:     Size  Location     Type
 28318 ;;  GenerateEvt     1    2[COMRAM] enum E7721
 28319 ;; Return value:  Size  Location     Type
 28320 ;;                  1    wreg      enum E7693
 28321 ;; Registers used:
 28322 ;;		wreg, fsr2l, fsr2h, status,2
 28323 ;; Tracked objects:
 28324 ;;		On entry : 0/0
 28325 ;;		On exit  : 0/0
 28326 ;;		Unchanged: 0/0
 28327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28328 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28329 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28331 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28332 ;;Total ram usage:        3 bytes
 28333 ;; Hardware stack levels used:    1
 28334 ;; This function calls:
 28335 ;;		Nothing
 28336 ;; This function is called by:
 28337 ;;		_Uart_MdmWifiReadService
 28338 ;;		_Alarm
 28339 ;; This function uses a non-reentrant model
 28340 ;;
 28341                           
 28342                           	psect	text148
 28343  004E5A                     __ptext148:
 28344                           	opt stack 0
 28345  004E5A                     i2_GenerateEvt:
 28346                           	opt stack 8
 28347                           
 28348                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 28349                           
 28350                           ;incstack = 0
 28351  004E5A  0E00               	movlw	0
 28352  004E5C  6E03               	movwf	i2GenerateEvt@EventStatus,c
 28353                           
 28354                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 28355  004E5E  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 28356  004E62  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 28357  004E66  0E02               	movlw	2
 28358  004E68  6EDF               	movwf	indf2,c
 28359                           
 28360                           ;os_ser.c: 81: EventStatus = EventSent;
 28361  004E6A  0E02               	movlw	2
 28362  004E6C  6E03               	movwf	i2GenerateEvt@EventStatus,c
 28363  004E6E  0012               	return	
 28364  004E70                     __end_ofi2_GenerateEvt:
 28365                           	opt stack 0
 28366                           tosu	equ	0xFFF
 28367                           tosh	equ	0xFFE
 28368                           tosl	equ	0xFFD
 28369                           pclatu	equ	0xFFB
 28370                           pclath	equ	0xFFA
 28371                           tblptru	equ	0xFF8
 28372                           tblptrh	equ	0xFF7
 28373                           tblptrl	equ	0xFF6
 28374                           tablat	equ	0xFF5
 28375                           prodh	equ	0xFF4
 28376                           prodl	equ	0xFF3
 28377                           intcon	equ	0xFF2
 28378                           intcon2	equ	0xFF1
 28379                           intcon3	equ	0xFF0
 28380                           indf0	equ	0xFEF
 28381                           postinc0	equ	0xFEE
 28382                           plusw0	equ	0xFEB
 28383                           fsr0h	equ	0xFEA
 28384                           fsr0l	equ	0xFE9
 28385                           wreg	equ	0xFE8
 28386                           indf1	equ	0xFE7
 28387                           postinc1	equ	0xFE6
 28388                           postdec1	equ	0xFE5
 28389                           fsr1h	equ	0xFE2
 28390                           fsr1l	equ	0xFE1
 28391                           bsr	equ	0xFE0
 28392                           indf2	equ	0xFDF
 28393                           postinc2	equ	0xFDE
 28394                           postdec2	equ	0xFDD
 28395                           plusw2	equ	0xFDB
 28396                           fsr2h	equ	0xFDA
 28397                           fsr2l	equ	0xFD9
 28398                           status	equ	0xFD8
 28399                           
 28400 ;; *************** function _Mcu_Int1Isr *****************
 28401 ;; Defined at:
 28402 ;;		line 155 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
 28403 ;; Parameters:    Size  Location     Type
 28404 ;;		None
 28405 ;; Auto vars:     Size  Location     Type
 28406 ;;		None
 28407 ;; Return value:  Size  Location     Type
 28408 ;;                  1    wreg      void 
 28409 ;; Registers used:
 28410 ;;		wreg, status,2, status,0
 28411 ;; Tracked objects:
 28412 ;;		On entry : 0/0
 28413 ;;		On exit  : 0/0
 28414 ;;		Unchanged: 0/0
 28415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28420 ;;Total ram usage:        0 bytes
 28421 ;; Hardware stack levels used:    1
 28422 ;; This function calls:
 28423 ;;		Nothing
 28424 ;; This function is called by:
 28425 ;;		_HighPriorityIsr
 28426 ;; This function uses a non-reentrant model
 28427 ;;
 28428                           
 28429                           	psect	text149
 28430  004F80                     __ptext149:
 28431                           	opt stack 0
 28432  004F80                     _Mcu_Int1Isr:
 28433                           	opt stack 10
 28434                           
 28435                           ;mcu_drv.c: 158: INTCON3bits.INT1IF = 0u;
 28436                           
 28437                           ;incstack = 0
 28438  004F80  90F0               	bcf	intcon3,0,c	;volatile
 28439  004F82  0012               	return	
 28440  004F84                     __end_of_Mcu_Int1Isr:
 28441                           	opt stack 0
 28442                           tosu	equ	0xFFF
 28443                           tosh	equ	0xFFE
 28444                           tosl	equ	0xFFD
 28445                           pclatu	equ	0xFFB
 28446                           pclath	equ	0xFFA
 28447                           tblptru	equ	0xFF8
 28448                           tblptrh	equ	0xFF7
 28449                           tblptrl	equ	0xFF6
 28450                           tablat	equ	0xFF5
 28451                           prodh	equ	0xFF4
 28452                           prodl	equ	0xFF3
 28453                           intcon	equ	0xFF2
 28454                           intcon2	equ	0xFF1
 28455                           intcon3	equ	0xFF0
 28456                           indf0	equ	0xFEF
 28457                           postinc0	equ	0xFEE
 28458                           plusw0	equ	0xFEB
 28459                           fsr0h	equ	0xFEA
 28460                           fsr0l	equ	0xFE9
 28461                           wreg	equ	0xFE8
 28462                           indf1	equ	0xFE7
 28463                           postinc1	equ	0xFE6
 28464                           postdec1	equ	0xFE5
 28465                           fsr1h	equ	0xFE2
 28466                           fsr1l	equ	0xFE1
 28467                           bsr	equ	0xFE0
 28468                           indf2	equ	0xFDF
 28469                           postinc2	equ	0xFDE
 28470                           postdec2	equ	0xFDD
 28471                           plusw2	equ	0xFDB
 28472                           fsr2h	equ	0xFDA
 28473                           fsr2l	equ	0xFD9
 28474                           status	equ	0xFD8
 28475                           
 28476 ;; *************** function _Mcu_Int0Isr *****************
 28477 ;; Defined at:
 28478 ;;		line 120 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
 28479 ;; Parameters:    Size  Location     Type
 28480 ;;		None
 28481 ;; Auto vars:     Size  Location     Type
 28482 ;;		None
 28483 ;; Return value:  Size  Location     Type
 28484 ;;                  1    wreg      void 
 28485 ;; Registers used:
 28486 ;;		wreg, status,2, status,0
 28487 ;; Tracked objects:
 28488 ;;		On entry : 0/0
 28489 ;;		On exit  : 0/0
 28490 ;;		Unchanged: 0/0
 28491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28496 ;;Total ram usage:        0 bytes
 28497 ;; Hardware stack levels used:    1
 28498 ;; This function calls:
 28499 ;;		Nothing
 28500 ;; This function is called by:
 28501 ;;		_HighPriorityIsr
 28502 ;; This function uses a non-reentrant model
 28503 ;;
 28504                           
 28505                           	psect	text150
 28506  004F84                     __ptext150:
 28507                           	opt stack 0
 28508  004F84                     _Mcu_Int0Isr:
 28509                           	opt stack 10
 28510                           
 28511                           ;mcu_drv.c: 123: INTCONbits.INT0IF = 0u;
 28512                           
 28513                           ;incstack = 0
 28514  004F84  92F2               	bcf	intcon,1,c	;volatile
 28515  004F86  0012               	return	
 28516  004F88                     __end_of_Mcu_Int0Isr:
 28517                           	opt stack 0
 28518                           tosu	equ	0xFFF
 28519                           tosh	equ	0xFFE
 28520                           tosl	equ	0xFFD
 28521                           pclatu	equ	0xFFB
 28522                           pclath	equ	0xFFA
 28523                           tblptru	equ	0xFF8
 28524                           tblptrh	equ	0xFF7
 28525                           tblptrl	equ	0xFF6
 28526                           tablat	equ	0xFF5
 28527                           prodh	equ	0xFF4
 28528                           prodl	equ	0xFF3
 28529                           intcon	equ	0xFF2
 28530                           intcon2	equ	0xFF1
 28531                           intcon3	equ	0xFF0
 28532                           indf0	equ	0xFEF
 28533                           postinc0	equ	0xFEE
 28534                           plusw0	equ	0xFEB
 28535                           fsr0h	equ	0xFEA
 28536                           fsr0l	equ	0xFE9
 28537                           wreg	equ	0xFE8
 28538                           indf1	equ	0xFE7
 28539                           postinc1	equ	0xFE6
 28540                           postdec1	equ	0xFE5
 28541                           fsr1h	equ	0xFE2
 28542                           fsr1l	equ	0xFE1
 28543                           bsr	equ	0xFE0
 28544                           indf2	equ	0xFDF
 28545                           postinc2	equ	0xFDE
 28546                           postdec2	equ	0xFDD
 28547                           plusw2	equ	0xFDB
 28548                           fsr2h	equ	0xFDA
 28549                           fsr2l	equ	0xFD9
 28550                           status	equ	0xFD8
 28551                           tosu	equ	0xFFF
 28552                           tosh	equ	0xFFE
 28553                           tosl	equ	0xFFD
 28554                           pclatu	equ	0xFFB
 28555                           pclath	equ	0xFFA
 28556                           tblptru	equ	0xFF8
 28557                           tblptrh	equ	0xFF7
 28558                           tblptrl	equ	0xFF6
 28559                           tablat	equ	0xFF5
 28560                           prodh	equ	0xFF4
 28561                           prodl	equ	0xFF3
 28562                           intcon	equ	0xFF2
 28563                           intcon2	equ	0xFF1
 28564                           intcon3	equ	0xFF0
 28565                           indf0	equ	0xFEF
 28566                           postinc0	equ	0xFEE
 28567                           plusw0	equ	0xFEB
 28568                           fsr0h	equ	0xFEA
 28569                           fsr0l	equ	0xFE9
 28570                           wreg	equ	0xFE8
 28571                           indf1	equ	0xFE7
 28572                           postinc1	equ	0xFE6
 28573                           postdec1	equ	0xFE5
 28574                           fsr1h	equ	0xFE2
 28575                           fsr1l	equ	0xFE1
 28576                           bsr	equ	0xFE0
 28577                           indf2	equ	0xFDF
 28578                           postinc2	equ	0xFDE
 28579                           postdec2	equ	0xFDD
 28580                           plusw2	equ	0xFDB
 28581                           fsr2h	equ	0xFDA
 28582                           fsr2l	equ	0xFD9
 28583                           status	equ	0xFD8
 28584                           
 28585                           	psect	text151
 28586  000000                     __ptext151:
 28587                           	opt stack 0
 28588                           tosu	equ	0xFFF
 28589                           tosh	equ	0xFFE
 28590                           tosl	equ	0xFFD
 28591                           pclatu	equ	0xFFB
 28592                           pclath	equ	0xFFA
 28593                           tblptru	equ	0xFF8
 28594                           tblptrh	equ	0xFF7
 28595                           tblptrl	equ	0xFF6
 28596                           tablat	equ	0xFF5
 28597                           prodh	equ	0xFF4
 28598                           prodl	equ	0xFF3
 28599                           intcon	equ	0xFF2
 28600                           intcon2	equ	0xFF1
 28601                           intcon3	equ	0xFF0
 28602                           indf0	equ	0xFEF
 28603                           postinc0	equ	0xFEE
 28604                           plusw0	equ	0xFEB
 28605                           fsr0h	equ	0xFEA
 28606                           fsr0l	equ	0xFE9
 28607                           wreg	equ	0xFE8
 28608                           indf1	equ	0xFE7
 28609                           postinc1	equ	0xFE6
 28610                           postdec1	equ	0xFE5
 28611                           fsr1h	equ	0xFE2
 28612                           fsr1l	equ	0xFE1
 28613                           bsr	equ	0xFE0
 28614                           indf2	equ	0xFDF
 28615                           postinc2	equ	0xFDE
 28616                           postdec2	equ	0xFDD
 28617                           plusw2	equ	0xFDB
 28618                           fsr2h	equ	0xFDA
 28619                           fsr2l	equ	0xFD9
 28620                           status	equ	0xFD8
 28621                           
 28622                           	psect	rparam
 28623  0000                     tosu	equ	0xFFF
 28624                           tosh	equ	0xFFE
 28625                           tosl	equ	0xFFD
 28626                           pclatu	equ	0xFFB
 28627                           pclath	equ	0xFFA
 28628                           tblptru	equ	0xFF8
 28629                           tblptrh	equ	0xFF7
 28630                           tblptrl	equ	0xFF6
 28631                           tablat	equ	0xFF5
 28632                           prodh	equ	0xFF4
 28633                           prodl	equ	0xFF3
 28634                           intcon	equ	0xFF2
 28635                           intcon2	equ	0xFF1
 28636                           intcon3	equ	0xFF0
 28637                           indf0	equ	0xFEF
 28638                           postinc0	equ	0xFEE
 28639                           plusw0	equ	0xFEB
 28640                           fsr0h	equ	0xFEA
 28641                           fsr0l	equ	0xFE9
 28642                           wreg	equ	0xFE8
 28643                           indf1	equ	0xFE7
 28644                           postinc1	equ	0xFE6
 28645                           postdec1	equ	0xFE5
 28646                           fsr1h	equ	0xFE2
 28647                           fsr1l	equ	0xFE1
 28648                           bsr	equ	0xFE0
 28649                           indf2	equ	0xFDF
 28650                           postinc2	equ	0xFDE
 28651                           postdec2	equ	0xFDD
 28652                           plusw2	equ	0xFDB
 28653                           fsr2h	equ	0xFDA
 28654                           fsr2l	equ	0xFD9
 28655                           status	equ	0xFD8
 28656                           
 28657                           	psect	temp
 28658  00005D                     btemp:
 28659                           	opt stack 0
 28660  00005D                     	ds	1
 28661  0000                     int$flags	set	btemp
 28662  0000                     wtemp6	set	btemp+1
 28663                           tosu	equ	0xFFF
 28664                           tosh	equ	0xFFE
 28665                           tosl	equ	0xFFD
 28666                           pclatu	equ	0xFFB
 28667                           pclath	equ	0xFFA
 28668                           tblptru	equ	0xFF8
 28669                           tblptrh	equ	0xFF7
 28670                           tblptrl	equ	0xFF6
 28671                           tablat	equ	0xFF5
 28672                           prodh	equ	0xFF4
 28673                           prodl	equ	0xFF3
 28674                           intcon	equ	0xFF2
 28675                           intcon2	equ	0xFF1
 28676                           intcon3	equ	0xFF0
 28677                           indf0	equ	0xFEF
 28678                           postinc0	equ	0xFEE
 28679                           plusw0	equ	0xFEB
 28680                           fsr0h	equ	0xFEA
 28681                           fsr0l	equ	0xFE9
 28682                           wreg	equ	0xFE8
 28683                           indf1	equ	0xFE7
 28684                           postinc1	equ	0xFE6
 28685                           postdec1	equ	0xFE5
 28686                           fsr1h	equ	0xFE2
 28687                           fsr1l	equ	0xFE1
 28688                           bsr	equ	0xFE0
 28689                           indf2	equ	0xFDF
 28690                           postinc2	equ	0xFDE
 28691                           postdec2	equ	0xFDD
 28692                           plusw2	equ	0xFDB
 28693                           fsr2h	equ	0xFDA
 28694                           fsr2l	equ	0xFD9
 28695                           status	equ	0xFD8


Data Sizes:
    Strings     237
    Constant    563
    Data        130
    BSS         2674
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      92
    BANK0           160    144     160
    BANK1           256      0     256
    BANK2           256      0     211
    BANK3           256      0     250
    BANK4           192      0     164
    BANK5           256      0     220
    BANK6           256      0     200
    BANK7           256      0     253
    BANK8           256      0     200
    BANK9           256      0     103
    BANK10          256      0     200
    BANK11          256      0     250
    BANK12          256      0     250
    BANK13          256      0     200
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), STR_1(CODE[6]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), STR_1(CODE[6]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_62(CODE[21]), STR_58(CODE[20]), STR_53(CODE[14]), STR_49(CODE[10]), 
		 -> STR_43(CODE[10]), STR_41(CODE[13]), STR_40(CODE[12]), STR_36(CODE[11]), 
		 -> STR_32(CODE[12]), STR_26(CODE[10]), STR_21(CODE[11]), BufferLocal(BANK6[100]), 
		 -> STR_15(CODE[12]), STR_3(CODE[13]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK2[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK2[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    strcat@from	PTR const unsigned char  size(3) Largest target is 65527
		 -> STR_65(CODE[3]), STR_64(CODE[2]), STR_63(CODE[2]), Term_MainSm@FwkBuildYearStr(BANK0[4]), 
		 -> Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), STR_61(CODE[3]), STR_60(CODE[2]), 
		 -> STR_59(CODE[2]), Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), 
		 -> STR_57(CODE[3]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), STR_56(CODE[2]), STR_55(CODE[2]), 
		 -> STR_54(CODE[2]), STR_52(CODE[3]), STR_51(CODE[2]), STR_50(CODE[2]), 
		 -> STR_48(CODE[3]), MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), STR_47(CODE[2]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), 
		 -> STR_46(CODE[3]), STR_45(CODE[4]), STR_44(CODE[2]), STR_42(CODE[3]), 
		 -> MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), STR_39(CODE[3]), STR_38(CODE[2]), STR_37(CODE[2]), 
		 -> STR_35(CODE[3]), STR_34(CODE[2]), STR_33(CODE[2]), STR_30(CODE[3]), 
		 -> STR_29(CODE[2]), STR_28(CODE[4]), STR_27(CODE[2]), STR_25(CODE[3]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), SendDataSm@LenAscii(BANK0[4]), STR_16(CODE[2]), SendDataSm@IdAscii(BANK0[1]), 
		 -> ROM(CODE[65527]), STR_13(CODE[3]), STR_12(CODE[2]), StartConnectionSm@PortAscii(BANK0[4]), 
		 -> STR_11(CODE[2]), AddressLocal(BANK2[25]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), StartConnectionSm@IdAscii(BANK0[1]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 100
		 -> Term_MainSm@FwkBuildYearStr(BANK0[4]), Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK4[100]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), 
		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), SendDataSm@LenAscii(BANK0[4]), 
		 -> SendDataSm@IdAscii(BANK0[1]), StartConnectionSm@PortAscii(BANK0[4]), StartConnectionSm@IdAscii(BANK0[1]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK1[4]), Terminal@Len(BANK1[4]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 250
		 -> WifiTerminal@UartBuffer(BANK8[200]), AddressLocal(BANK2[25]), MdmWifi_UartRxBuffer(BANK11[250]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 253
		 -> WifiRxPacket(BANK7[253]), MdmWifi_UartRxBuffer(BANK11[250]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 253
		 -> WifiTerminal@UartBuffer(BANK8[200]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), WifiRxPacket(BANK7[253]), 

    Rtcm_SetAlarmAction@Action	PTR FTN()void  size(2) Largest target is 1
		 -> Alarm(), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 236
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK0[50]), MsgFormat(CODE[236]), Welcome(CODE[137]), 
		 -> Terminal@TermRxBuffer(BANK2[50]), Terminal@Payload(BANK4[100]), Terminal@UsbRxBuffer(BANK3[200]), WifiTerminal@UartBuffer(BANK8[200]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK3[200]), WifiTerminal@UsbBuffer(BANK10[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4289$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4289$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4289$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4289$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK4[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S2743$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2733$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2733$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2709$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2709$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2709$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2709$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 100
		 -> Term_MainSm@FwkBuildYearStr(BANK0[4]), Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK4[100]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), 
		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), SendDataSm@LenAscii(BANK0[4]), 
		 -> SendDataSm@IdAscii(BANK0[1]), StartConnectionSm@PortAscii(BANK0[4]), StartConnectionSm@IdAscii(BANK0[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK2[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    MdmWifi_SendWifiMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 103
		 -> MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), MdmWifiCmd_CloseConnection@Data(COMRAM[20]), 
		 -> MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), STR_31(CODE[11]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), STR_20(CODE[9]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    MdmWifi_ReceiveWifiMsg@DataLenght	PTR unsigned char  size(2) Largest target is 1
		 -> SendDataSm@DataIndex(BANK0[1]), StartConnectionSm@DataIndex(BANK0[1]), 

    MdmWifi_ReceiveWifiMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 103
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 10
		 -> Term_MainSm@TermDelay(BANK1[10]), Led_MainTask@LedTimer1(BANK1[10]), SendDataSm@SwTimer(BANK1[10]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 10
		 -> Term_MainSm@TermDelay(BANK1[10]), Led_MainTask@LedTimer1(BANK1[10]), SendDataSm@SwTimer(BANK1[10]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 253
		 -> I2cRxPacket(BANK1[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(COMRAM[1]), WifiReceiveData(COMRAM[1]), 
		 -> WifiSendData(COMRAM[1]), StartConnection(COMRAM[1]), WifiReceiveNetData(COMRAM[1]), NewWifiPacketParser(COMRAM[1]), 
		 -> NewWifiPacket(COMRAM[1]), WifiRxPacket(BANK7[253]), StartWifiModem(COMRAM[1]), NewWifiUartData(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 253
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK1[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(COMRAM[1]), 
		 -> WifiReceiveData(COMRAM[1]), WifiSendData(COMRAM[1]), StartConnection(COMRAM[1]), WifiReceiveNetData(COMRAM[1]), 
		 -> WifiGenericError(BANK1[1]), NewWifiPacketParser(COMRAM[1]), NewWifiPacket(COMRAM[1]), WifiRxPacket(BANK7[253]), 
		 -> StartWifiModem(COMRAM[1]), NewWifiUartData(COMRAM[1]), 

    S1896_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), UsbDevice_MainTask(), 
		 -> MdmWifiHttp_MainTask(), MdmWifiCmd_MainTask(), MdmWifi_MainTask(), I2cSlv_MainTask(), 
		 -> MdmWifi_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), UsbDevice_MainTask(), 
		 -> MdmWifiHttp_MainTask(), MdmWifiCmd_MainTask(), MdmWifi_MainTask(), I2cSlv_MainTask(), 
		 -> MdmWifi_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S1861_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 103
		 -> MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), MdmWifiCmd_CloseConnection@Data(COMRAM[20]), 
		 -> MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), STR_31(CODE[11]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), STR_20(CODE[9]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK1[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK1[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    Rtcc_RegisterRtcIsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Alarm(), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Alarm(), Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK1[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK1[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK1[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK1[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK1[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmWifiReadService
    _Uart_MdmWifiReadService->i2_GenerateEvt
    _Rtcc_RtcIsr->_Alarm
    _Alarm->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Terminal->_strtol
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_SetAlarmAction->_Rtcc_RegisterRtcIsrCallback
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MdmWifi_MainTask->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _MdmWifiGetUartData->_StringCopy
    _MdmWifiEvtParser->_strstr
    _MdmWifi_StartWifiModemSm->_ReceiveEvt
    _MdmWifiCmd_MainTask->_SendDataSm
    _StartConnectionSm->_strstr
    _SendDataSm->_OsTmr_GetTimerStatus
    _utoa->___lwdiv
    _strstr->_strncmp
    _strncmp->_strlen
    _MdmWifi_SendWifiMsg->_Uart_WriteString
    _Uart_WriteString->_UartTxBufferStatus
    _MdmWifi_ReceiveWifiMsg->_StringCopy
    _ReceiveDataSm->_ReceiveEvt
    _Led_MainTask->_OsTmr_GetTimerStatus
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    None.

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  405155
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    3901
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    3523
                                             39 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3371
                                             35 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2109
                                             25 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  401254
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  200693
                                            139 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                _MdmWifiCmd_MainTask *
               _MdmWifiHttp_MainTask *
                  _MdmWifi_DrvMainFn *
                   _MdmWifi_MainTask *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  200561
                                            139 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                _MdmWifiCmd_MainTask *
               _MdmWifiHttp_MainTask *
                  _MdmWifi_DrvMainFn *
                   _MdmWifi_MainTask *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   44242
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   40538
                                             27 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    1900
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   23316
                                             26 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   22677
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   17493
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    6880
                                             20 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    5475
                                             20 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5092
                                             12 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2400
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                              8 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    1804
                                              7 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   53668
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         74    74      0   53668
                                             32 BANK0     74    74      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    1698
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                             4     4      0   25133
                                             28 BANK0      4     4      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strtol
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2033
                                             12 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0      90
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     158
                                              3 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    1824
                                              6 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    5592
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2090
                                              7 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    1667
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    8507
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    1844
                                              3 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    1655
                                              3 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    1250
                                              4 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7556
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                _Rtcm_SetAlarmAction
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             12 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                              8 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetAlarmAction                                  2     0      2     222
                                              2 BANK0      2     0      2
        _Rtcc_RegisterRtcIsrCallback
 ---------------------------------------------------------------------------------
 (5) _Rtcc_RegisterRtcIsrCallback                          2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                              4 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                              1 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MdmWifi_MainTask                                     1     1      0   11939
                   _MdmWifiEvtParser
                 _MdmWifiGetUartData
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    2942
                                             32 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2193
                                             25 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     702
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MdmWifiGetUartData                                   0     0      0    4545
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _MdmWifiEvtParser                                     0     0      0    4452
                        _GenerateEvt
                         _ReceiveEvt
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _MdmWifi_DrvMainFn                                    1     1      0    2539
           _MdmWifi_StartWifiModemSm
 ---------------------------------------------------------------------------------
 (4) _MdmWifi_StartWifiModemSm                             0     0      0    2539
                        _GenerateEvt
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _MdmWifiHttp_MainTask                                 1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmWifiCmd_MainTask                                  1     1      0   66050
                      _ReceiveDataSm
                         _SendDataSm
                  _StartConnectionSm
 ---------------------------------------------------------------------------------
 (4) _StartConnectionSm                                  106   106      0   31401
                                             19 BANK0    106   106      0
                        _ClearBuffer
             _MdmWifi_ReceiveWifiMsg
                _MdmWifi_SendWifiMsg
                         _ReceiveEvt
                             _strcat
                             _strcpy
                             _strstr
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4     803
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _SendDataSm                                         109   109      0   32110
                                             30 BANK0    109   109      0
             _MdmWifi_ReceiveWifiMsg
                _MdmWifi_SendWifiMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                             _strcat
                             _strcpy
                             _strstr
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    5162
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _strstr                                               4     0      4    1913
                                             15 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              9     3      6     401
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     357
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strchr                                               5     1      4     266
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4    3279
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _strcat                                               7     2      5   13804
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (5) _MdmWifi_SendWifiMsg                                  2     0      2    1783
                                              6 BANK0      2     0      2
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2     604
                                              3 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _UartWriteByte                                        2     1      1     355
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _UartTxBufferStatus                                   3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _MdmWifi_ReceiveWifiMsg                               5     1      4    2853
                                              8 BANK0      5     1      4
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                           8     2      6    1203
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) _ReceiveDataSm                                        0     0      0    2539
                        _GenerateEvt
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    1667
                                             30 BANK0      1     1      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (5) _OsTmr_StartTimer                                     6     0      6     822
                                              4 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (5) _OsTmr_GetTimerStatus                                 6     4      2     845
                                             24 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (6) _GetElapsedTime                                      20    16      4     424
                                              4 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (6) _GetOsTickCounter                                     4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   12809
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    8254
                                              6 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    7855
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1375
                                             37 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1198
                                             25 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     976
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    3180
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    1226
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     309
                                              1 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    1645
                                              3 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    1313
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0     944
                                             40 COMRAM    21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0     944
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0     944
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0     944
                                             30 COMRAM    10    10      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             25 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             22 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (22) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     275
                                              4 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     193
            _Uart_MdmWifiReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmWifiReadService                             2     1      1     193
                                              3 COMRAM     1     0      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0      82
                   Absolute function *
                              _Alarm *
 ---------------------------------------------------------------------------------
 (22) _Alarm                                               1     1      0      82
                                              3 COMRAM     1     1      0
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2      82
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (22) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _OsTmr_GetTimerStatus
           _GetElapsedTime
             _GetOsTickCounter
         _OsTmr_StartTimer
           _GetOsTickCounter
       _MdmWifiCmd_MainTask *
         _ReceiveDataSm
           _GenerateEvt
           _ReceiveEvt
         _SendDataSm
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _StartConnectionSm
           _ClearBuffer
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _MdmWifiHttp_MainTask *
       _MdmWifi_DrvMainFn *
         _MdmWifi_StartWifiModemSm
           _GenerateEvt
           _ReceiveEvt
       _MdmWifi_MainTask *
         _MdmWifiEvtParser
           _GenerateEvt
           _ReceiveEvt
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
         _MdmWifiGetUartData
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetAlarmAction
           _Rtcc_RegisterRtcIsrCallback
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
           _memset
           _putUSBUSART
             _strlen (ARG)
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _OsTmr_GetTimerStatus
           _GetElapsedTime
             _GetOsTickCounter
         _OsTmr_StartTimer
           _GetOsTickCounter
       _MdmWifiCmd_MainTask *
         _ReceiveDataSm
           _GenerateEvt
           _ReceiveEvt
         _SendDataSm
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _StartConnectionSm
           _ClearBuffer
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _MdmWifiHttp_MainTask *
       _MdmWifi_DrvMainFn *
         _MdmWifi_StartWifiModemSm
           _GenerateEvt
           _ReceiveEvt
       _MdmWifi_MainTask *
         _MdmWifiEvtParser
           _GenerateEvt
           _ReceiveEvt
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
         _MdmWifiGetUartData
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetAlarmAction
           _Rtcc_RegisterRtcIsrCallback
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
           _memset
           _putUSBUSART
             _strlen (ARG)
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
     Absolute function(Fake) *
     _Alarm *
       i2_GenerateEvt
   _Uart_Uart1RxIsr
     _Uart_MdmWifiReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0       0      36        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0      C8      32       78.1%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0      FA      30       97.7%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0      FA      28       97.7%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      67      24       40.2%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      FD      20       98.8%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      DC      16       85.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      D3      10       82.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      A4      14       85.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      5C       1       97.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     BC1       8        0.0%
DATA                 0      0     BC1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Nov 12 20:29:21 2018

                     SendDataSm@DataIndex 00E9                                _USB_SD_Ptr FCD7  
                         ??_UpdateSchFlag 0017                        _Mcu_StartSystemPll 4D5A  
                            ___awdiv@sign 0065                    I2c_ReadData@ReadPacket 0063  
                                      bsr 000FE0                             _USBDeviceInit 1D36  
                     ___wmul@multiplicand 0062            MdmWifi_ReceiveWifiMsg@RxBuffer 0068  
                        i1___wmul@product 001B                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 0087  
                     _MdmWifiCmd_MainTask 4C0C                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0066      USER_USB_CALLBACK_EVENT_HANDLER@event 006C  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 006E                    I2c_ReadData@ReadStatus 0170  
                                     l202 1AE8                                       l203 1AF0  
                                     l300 3886                                       l205 1B3A  
                                     l301 3806                                       l206 1B64  
                                     l302 380C                                       l303 382C  
                                     l231 4D66                                       l208 1B6E  
                                     l160 1A1E                                       l304 3838  
                                     l209 1B90                                       l161 18E6  
                                     l305 3844                                       l162 1A5E  
                                     l170 19B6                                       l306 3850  
                                     l330 12A2                                       l402 4504  
                                     l410 276C                                       l171 19D0  
                                     l163 18F4                                       l323 1332  
                                     l331 12EA                                       l403 44D0  
                                     l411 2758                                       l164 1936  
                                     l324 113A                                       l420 4D08  
                                     l412 2700                                       l173 19D4  
                                     l421 4D00                                       l405 44EA  
                                     l413 2766                                       l174 19DC  
                                     l166 1944                                       l326 1182  
             __end_of_USBStdGetDscHandler 2102                                       l414 272C  
                                     l175 19F4                                       l167 196E  
                                     l511 2188                                       l327 11CA  
                                     l423 4D04                                       l192 1B9A  
                                     l328 1212                                       l193 1A66  
                                     l169 1982                                       l521 4D4C  
                                     l513 21B0                                       l329 125A  
                                     l194 1BD4                                       l178 1A00  
                                     l195 1A74                                       l179 1A0C  
                                     l515 2228                                       l507 213C  
                                     l196 1AB8                                       l428 2CE0  
                                     l533 4454                                       l509 2160  
                                     l429 2CFC                                       l198 1AC6  
                                     l542 4478                                       l534 444E  
                                     l550 0A52                                       l382 36BE  
                                     l199 1ADC                                       l392 3690  
                                     l384 3650                                       l721 4D82  
                                     l393 3680                                       l385 3640  
                                     l570 3F86                                       l650 3BEC  
                                     l298 3858                                       l706 2362  
                                     l394 36A4                                       l386 3666  
                                     l299 37FE                                       l395 3684  
                                     l387 3644                                       l572 3FB6  
                                     l652 3C0E                                       l396 368A  
                                     l388 364A                                       l654 3C2C  
                                     l647 3C38                                       l648 3BD2  
                                     l761 4AE8                                       l771 2DB4  
                                     _BDT 000400                                       l782 38FA  
                                     l864 2BAC                                       l785 390C  
                                     l865 2AEE                                       l892 4558  
                                     l980 0CAA                                       l868 2B0A  
                                     l884 498E                                       l981 0CCA  
                                     l877 3E7A                                       l869 2B26  
                                     l885 496E                                       l974 0E88  
                                     l982 0E2C                                       l975 0BCC  
                                     l887 4984                                       l985 0E7C  
                                     l978 0BE8                                       l995 156E  
                                     l979 0C60                                       l996 1364  
                                     l999 1380                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                 __end_of_HighPriorityIsr 331C                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 49A0                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0074                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0063                            _USBDeviceTasks 1762  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00FD  
             Rtcc_AlarmConfig@AlarmConfig 0060              __end_of_I2cSlv_ReceiveI2cMsg 478E  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 0060                            ??_getsUSBUSART 006A  
                USBEnableEndpoint@options 0068                   ?_MdmWifi_ReceiveWifiMsg 0068  
                   ??_Rtcm_SetAlarmAction 0064             ??_Tmr_RegisterTmr2IsrCallback 0062  
                                    l1000 13F8                                      l1001 14A8  
                                    l1002 14EC                                      l1013 466C  
                                    l1014 463A                                      l1006 1508  
                                    l1022 4C1C                                      l1017 4656  
                                    l1025 4C0E                                      l2101 053C  
                                    l2111 0894                                      l2103 055C  
                                    l1152 324C                                      l1161 3224  
                                    l1153 31C2                                      l2041 04CA  
                                    l2105 057C                                      l1154 31E2  
                                    l2042 00E2                                      l1410 3418  
                                    l1163 3240                                      l2107 06F8  
                                    l1164 3246                                      l1156 3202  
                                    l2060 0316                                      l1404 2C04  
                                    l1412 3434                                      l2116 4DD6  
                                    l2133 41E6                                      l2061 02AE  
                                    l2045 0152                                      l2109 0874  
                                    l1421 2604                                      l1341 1D80  
                                    l2134 41FA                                      l1182 484C  
                                    l2062 024C                                      l2046 01E2  
                                    l2054 01D0                                      l1422 25AC  
                                    l1174 4374                                      l1159 3208  
                                    l2311 3BAE                                      l1511 3752  
                                    l1343 1DA8                                      l1175 4334  
                                    l2119 4DD0                                      l2312 3BB8  
                                    l2304 3B60                                      l2320 3D8C  
                                    l1192 4CAC                                      l2072 037E  
                                    l2064 02F8                                      l2048 01AE  
                                    l1440 2990                                      l1416 3608  
                                    l1512 374C                                      l1360 17D8  
                                    l1352 178E                                      l2313 3BC6  
                                    l2305 3B70                                      l2321 3D84  
                                    l2081 047C                                      l2065 02BC  
                                    l2049 019C                                      l1345 1DE4  
                                    l1505 48BA                                      l1361 17E4  
                                    l1353 1784                                      l1177 436E  
                                    l2082 04C2                                      l2074 03BE  
                                    l1530 2F12                                      l1450 23C2  
                                    l1522 40C4                                      l1426 262E  
                                    l1506 48B8                                      l1370 1876  
                                    l1354 1782                                      l2307 3B8E  
                                    l1187 4788                                      l2091 089A  
                                    l1443 2A0C                                      l1435 295C  
                                    l1531 2F18                                      l1451 239C  
                                    l1363 180C                                      l2308 3B86  
                                    l2324 3DA4                                      l2092 04E6  
                                    l1700 1F10                                      l1444 29D2  
                                    l1532 2F94                                      l1524 4110  
                                    l1380 46D6                                      l2325 3DAE  
                                    l2317 3D6A                                      l2077 0412  
                                    l1437 2966                                      l1533 2F58  
                                    l1453 243A                                      l1381 46E6  
                                    l1373 189C                                      l1365 1820  
                                    l1357 17AA                                      l2510 3CBA  
                                    l2326 3DBC                                      l2318 3D76  
                                    l2078 03D8                                      l2094 050C  
                                    l1454 2420                                      l1470 20EA  
                                    l1462 27C0                                      l1550 287E  
                                    l1366 182C                                      l1358 17BA  
                                    l2511 3CC8                                      l1703 1F8A  
                                    l1439 29CA                                      l1535 2F7A  
                                    l1471 1FDA                                      l1551 2892  
                                    l1375 18BC                                      l1367 1856  
                                    l1359 17C2                                      l2096 0528  
                                    l1704 1F52                                      l1640 3136  
                                    l1464 2834                                      l1552 2898  
                                    l1368 1862                                      l1800 3948  
                                    l1385 2FBA                                      l1473 1FEE  
                                    l1545 28F8                                      l1377 18DA  
                                    l2506 3C86                                      l1642 314E  
                                    l1562 0EC4                                      l1474 207C  
                                    l1490 30A2                                      l1554 289E  
                                    l1546 2868                                      l1730 4BEA  
                                    l2507 3C7A                                      l2291 2AAE  
                                    l1387 2FE4                                      l1707 1FA4  
                                    l1643 315C                                      l1571 1030  
                                    l1563 0ECA                                      l1483 30E4  
                                    l1555 28BC                                      l2292 2A70  
                                    l1708 1FA8                                      l1644 317A  
                                    l1476 2084                                      l1484 306A  
                                    l1556 28D8                                      l1548 2872  
                                    l1732 4BF0                USBConfigureEndpoint@handle 0066  
                                    l2285 2A1C                                      l1389 3040  
                                    l1661 37F4                                      l1645 3192  
                                    l1581 10B6                                      l1573 0FF8  
                                    l1565 0F3C                                      l1477 20DA  
                                    l1549 2878                                      l2294 2AE2  
                                    l2286 2A16                                      l1574 1016  
                                    l1639 319C                                      l1743 411A  
                                    l1583 110C                                      l1567 0F84  
                                    l1479 20E2                                      l1487 30FA  
                                    l2560 43F2                                      l2288 2A5E  
                                    l1664 37A2                                      l2472 472C  
                                    l1576 1078                                      l1568 0F86  
                                    l1488 307C                                      l1665 37CE  
                                    l1737 4126                                      l1745 4120  
                                    l1577 1084                                      l1569 0FA2  
                                    l1489 3082                                      l1497 46BE  
                                    l1729 4BFA                                      l2730 42EC  
                                    l2570 479E                                      l2466 4C8C  
                                    l1666 37A8                                      l1578 1100  
                                    l1498 46BC                                      l2715 4062  
                                    l2731 42E6                                      l2563 441A  
                                    l2811 4A8A                                      l1691 1EA8  
                                    l2716 405C                                      l2724 4606  
                                    l2564 4424                                      l2476 3324  
                                    l1924 495E                                      l1860 3508  
                                    l2725 45FC                                      l2573 47BE  
                                    l1925 494A                                      l2821 4C48  
                                    l1693 1EDC                                      l1918 4806  
                                    l2718 4084                                      l2742 3B28  
                                    l2574 47C8                                      l2478 3360  
                                    l2590 4A3E                                      l1862 357C  
                                    l1919 47E6                                      l2719 4072  
                                    l2831 3AA4                                      l2743 3AC2  
                                    l2559 43FA                                      l2479 33A2  
                                    l2583 45DE                                      l2832 3A36  
                                    l2744 3AFE                                      l2816 4B68  
                                    l1696 1EEE                                      l2584 45BC  
                                    l2833 3A9C                                      l2569 47A6  
                                    l2761 15CC                                      l1697 1EF2  
                                    l1689 1E9A                                      l2826 48E2  
                                    l2771 1648                                      l2763 15E4  
                                    l1699 1F48                                      l1859 3590  
                                    l2780 1716                                      l2772 1658  
                                    l2781 1750                                      l2765 1638  
                                    l2589 4A50                                      l1797 3996  
                                    l2774 1672                                      l1798 391E  
                                    l2785 4DFC                                      l2777 1684  
                                    l2778 16F0                                      l7245 45BC  
                                    l6631 27B8                                      l7601 3A36  
                                    l6537 2966                                      l9121 2244  
                                    l8313 276C                                      l9109 3CE4  
                                    l9081 4D66                                      l6499 4A3E  
                                    l7389 2AAA                                      l8707 186E  
                                    l9721 4140                                      l9723 4170  
                                    l7789 3812                                      l7959 1D78  
                                    l7987 1DDC                                      STR_1 FFCF  
                                    STR_2 FFD5                                      STR_3 FF4E  
                                    STR_4 FFE7                                      STR_5 FFDC  
                                    STR_6 FFE2                                      STR_7 FFDE  
                                    STR_8 FFDC                                      STR_9 FFE7  
                                    u5320 3FA6                                      u4440 29B8  
                                    u4600 2076                                      u5330 3FC4  
                                    u5250 4B64                                      u5315 4E7E  
                                    u6115 4E3E                                      u5316 4E80  
                                    u5340 3FE4                                      u6116 4E40  
                                    u4460 29FA                                      u4620 20CE  
                                    u5510 377C                                      u5270 4A7A  
                                    u4550 27EC                                      u5327 3F9C  
                                    u4447 29AE                                      u4607 206C  
                                    u6320 40AC                                      u6170 2184  
                                    u5347 3FDA                                      u4467 29F0  
                                    u4627 20C4                                      u4900 47AA  
                                    u6270 3B40                                      u5630 15D4  
                                    u4590 2046                                      u6350 1D9C  
                                    u6327 40A2                                      u4840 109A  
                                    u6290 462E                                      u5820 3B92  
                                    u5660 160E                                      u6380 1E40  
                                    u4597 203C                                      u4870 43FE  
                   ??_USBCtrlTrfTxService 0060                                      u5920 3C8A  
                                    u5680 161E                                      u7600 1F92  
                                    u6297 4624                                      u4970 444A  
                                    u5770 430C                                      u5950 3A66  
                                    u7631 4048                                      _UCFG 000F39  
                                    u5880 3D90                                      u7480 18E0  
                                    u6825 3E2A                                      u5777 4302  
                                    u7570 1F38                                      u6915 090A  
                                    u6780 041A                                      u7820 3968  
                                    _UEP0 000F26                                      u6925 092A  
                                    u6845 4E28                                      _UEP1 000F27  
                                    u6846 4E2C                                      u7590 1F7A  
                                    u6935 09B0                                      u6855 44DA  
                                    u6856 44DC                                      u7577 1F2E  
                                    u7841 3560                                      u6865 44E6  
                                    u6866 44E8                                      u5995 449E  
                                    u6955 0A82                                      u7851 3586  
                                    u6875 44F4                                      _UEIE 000F37  
                                    u6876 44F6                                      u6965 0AA2  
                                    u7597 1F70                                      u6885 4500  
                __size_of_Uart_Uart1RxIsr 0010                                      u6990 3C1E  
                                    u7838 396C                                      u6886 4502  
                                    u6975 0B28                                      u7865 4B2A  
                                    u7866 4B2C                                      u7875 4B36  
                                    u7948 3D22                                      u7876 4B38  
                                    u7949 3D4E                                      u7885 4B42  
                                    u7886 4B44                                      _UEIR 000F63  
                                    _UCON 000F65                                      u7988 2318  
                                    u7989 2344                                _AlarmEvent 01C3  
                          ?_StopCondition 0001                                      _Led1 01D8  
                                    _Led2 01D0               __end_of_MdmWifi_SendWifiMsg 4ED6  
                    ?_MdmWifiCmd_MainTask 0001                       _OsTmr_OsTickCounter 012E  
                           __CFG_FCMEN$ON 000000                           _CDCDataInHandle 0140  
            I2c_ReadData@TentativeCounter 0171    USBStdFeatureReqHandler@current_ep_data 0077  
                                    _pDst 0142                      _MdmWifiHttp_MainTask 4EF6  
                                    _atoi 2A14                                      _main 4F20  
                                    _itoa 4706                          ?_SetUartBaudRate 0079  
                                    fsr0h 000FEA                                      fsr1h 000FE2  
                                    indf0 000FEF                                      fsr2h 000FDA  
                                    fsr0l 000FE9                                      indf1 000FE7  
                             _BaudRateGen 0126                                      indf2 000FDF  
                                    fsr1l 000FE1                                      fsr2l 000FD9  
                                    btemp 005D                                      _utoa 331C  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 4F68  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 37F8  
             I2cSlv_SendI2cMsg@DataLenght 0066                      ??_Mcu_StartSystemPll 0060  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC                       __end_of_GenerateEvt 4E18  
              __end_of_USBCheckStdRequest 293C                           _Rtcm_SystemDate 010A  
                  ??_USBCtrlTrfOutHandler 0062                  __end_of_GetOsTickCounter 4E96  
                      ?_Rtcc_GetRtccValue 0001           Uart_MdmWifiReadService@UartData 0004  
                          _GetElapsedTime 2D50             I2cSlv_ReceiveI2cMsg@SlaveAddr 0065  
                            ___param_bank 000000                 Term_MainSm@FwkBuildDayStr 00BE  
               ??_USBStdFeatureReqHandler 0074                       StringCopy@SourceStr 0060  
             __end_of_OsAlrm_ClearOsAlarm 42DC                                     EECON2 000FA7  
                ??_USBStdGetStatusHandler 0060                       __size_of_I2cDummyTx 001C  
                          ?_USBDeviceInit 0001                             __CFG_PLLDIV$2 000000  
                        _Uart_WriteString 3F80                       ??_Rtcc_GetRtccValue 0060  
                         __end_of_Welcome FE56                         ?_UpdateOsCounters 0001  
                      _MdmWifiGetUartData 2AEC                                     ?_atoi 0066  
                                   ?_main 0001                                     ?_itoa 0070  
                         __end_of___awdiv 3BD0                                     STR_10 FFDC  
                                   STR_11 FFDC                                     STR_12 FFE7  
                                   STR_20 FFBE                                     STR_13 FF87  
                                   STR_21 FF8A                                     STR_22 FFEF  
                                   STR_14 FFC7                                     STR_23 FFF1  
                                   STR_31 FF7F                                     STR_15 FF5B  
                                   STR_16 FFE7                                     STR_24 FFF3  
                                   STR_40 FF73                                     STR_32 FF67  
                                   STR_17 FF87                                     STR_33 FFED  
                                   STR_41 FF41                                     STR_18 FFF5  
                                   STR_26 FFA0                                     STR_19 FF87  
                                   STR_43 FFB4                                     STR_60 FFEB  
                                   STR_28 FFDA                                     STR_36 FF95  
                         __end_of___awmod 3DC6                                     STR_61 FF87  
                                   STR_53 FF33                                     STR_46 FFE6  
                                   STR_62 FF0A                                     STR_63 FFE9  
                                   STR_64 FFE9                                     STR_65 FF87  
                                   STR_49 FFAA                                     STR_58 FF1F  
                                   STR_59 FFEB         __size_of_USBCtrlEPServiceComplete 00FC  
                         __end_of___lldiv 3CDA                                     ?_utoa 0067  
                         ___awdiv@divisor 0062                    __end_of_USBDeviceTasks 18E4  
               ?_USBCtrlEPServiceComplete 0001                           __end_of___lwdiv 442E  
                         __end_of___lwmod 47D2                        ??_UpdateOsCounters 0017  
                                   i1l673 1BF2                                     i1l678 1D34  
                                   i2l557 4A02                                     _UADDR 000F38  
                         ___awdiv@counter 0064                                     _AlCfg 01B9  
                 I2cSendMsgSm@I2cComState 0163                                     _USTAT 000F64  
              MdmWifiCmd_MainTask@Options 0001                                     _Alarm 4B70  
                              _ConnStatus 0168        __size_of_USBCtrlEPAllowStatusStage 00CA  
                     ___lmul@multiplicand 0064                 __size_of_MdmWifiEvtParser 0070  
                            _AddressLocal 0272            __end_of_MdmWifi_ReceiveWifiMsg 4562  
                                   _RxLen 0148                       ?_MdmWifiGetUartData 0001  
         __end_of_USBCtrlEPAllowDataStage 3466                                     _sd000 FF06  
                                   _sd001 FEBF                                     _sd002 FE99  
          ?_USBIncrement1msInternalTimers 0001               Rtcc_GetRtccValue@RtccPtrVal 0061  
                    __end_of_Led_MainTask 39A8                    ??_OsTmr_GetTimerStatus 007A  
                         __end_of_isalpha 4A94                           __end_of_isdigit 4C94  
                                   atoi@a 006B                                     atoi@s 0066  
  MdmWifiGetUartData@WifiUartGetDataState 016C                               _ClearBuffer 4936  
                         __end_of_isspace 4B70                 __size_of_MdmWifi_MainTask 0034  
              I2c_WriteData@I2cWriteState 0177                 Rtcc_GetRtccValue@RegValue 0063  
                 __size_of_Rtcc_RtcConfig 00A0                           __end_of_isupper 4C50  
                                   pclath 000FFA                     ??_MdmWifiCmd_MainTask 00EB  
                                   tablat 000FF5                          __end_ofi1___wmul 4BE8  
               __end_of_Rtcc_GetRtccValue 388C                     ?_MdmWifiHttp_MainTask 0001  
                                   plusw0 000FEB                                     plusw2 000FDB  
                       __end_of_CDCInitEP 3F14                                     utoa@c 006F  
                           ??_SetBaudRate 0081                                     utoa@v 006D  
                                   status 000FD8                           _I2cSlv_MainTask 4332  
               Rtcc_GetRtccValue@RetValue 0062                       i1___wmul@multiplier 0017  
                                   wtemp6 005E                       __end_of_Mcu_Int0Isr 4F88  
                     __end_of_Mcu_Int1Isr 4F84                           __end_of_strncmp 3AC0  
                         __end_of_toupper 4E00                  MdmWifi_DrvMainFn@Options 0001  
                  __end_of_GetElapsedTime 2E18                     __end_of_UartSetConfig 4284  
        __end_of_MdmWifi_StartWifiModemSm 3C56                  ?_Uart_MdmWifiReadService 0004  
             Rtcc_SetRtccValue@RtccPtrVal 006B                     __end_of_Term_MainTask 4DE8  
                 __CFG_DSWDTOSC$INTOSCREF 000000                           putUSBUSART@data 0066  
            __size_of_USBStdSetCfgHandler 00E6                      ??_MdmWifiGetUartData 0068  
                 OsTmr_StartTimer@Timeout 0066                      __end_of_I2cSetConfig 4B1C  
                          _InitSchedTimer 4A94                           __initialization 248A  
                    __end_of_I2c_ReadData 1BDA                   Rtcc_RtcConfig@RtcConfig 0061  
                    __end_of_I2cSendMsgSm 3270                         _StartConnectionSm 0BCA  
                            __end_of_atoi 2AEC                              __end_of_main 4F2C  
                            __end_of_itoa 474A                     _control_signal_bitmap 015B  
                            __end_of_utoa 33C6                  __end_of_Rtcm_SetRtccDate 43DA  
                 __size_of_Rtcc_UnlockRtc 0010                          ??_StartCondition 0060  
                        __end_of_ReadByte 4F54                        ?_StartConnectionSm 0001  
                    Term_MainSm@TermDelay 01E2                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FEF4                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 0068                                    ??_main 00F0  
            __size_of_Uart_InitUartModule 02F4                                    ??_itoa 0076  
                                  ??_utoa 006D                             __activetblptr 000003  
                         ?_USBDeviceTasks 0001                Term_MainSm@FwkBuildYearStr 00C6  
                        __end_of_TmrBInit 36D0                                _ReceiveEvt 4AC2  
                  __size_of_ReceiveDataSm 0046                  StartConnectionSm@IdAscii 00DC  
                             ?_USBSuspend 0001                         ?_Mcu_ConfigExtInt 0001  
                        ?_HighPriorityIsr 0001                       ??_StartConnectionSm 0073  
                                  ?_Alarm 0001                          __end_of_Terminal 04E4  
                           ?_SetAckStatus 0001                                _SendDataSm 1362  
                            _cdc_mem_type 015C                        ??_Mcu_ConfigExtInt 0060  
                         ReceiveEvt@Event 0060                          _CDCDataOutHandle 0044  
                         ??_StopCondition 0060                          ___awdiv@dividend 0060  
              __end_of_UsbDevice_MainTask 4C0C                           getsUSBUSART@len 0069  
                   __end_of_UartWriteByte 4D5A                          ??_LowPriorityIsr 0029  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
      Irq_InitIntController@IntPriorityEn 0062                     __size_of_CDCTxService 0144  
                                  i1l1182 4930                               _GenerateEvt 4E00  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                             _NewWifiPacket 005A  
               Uart_Uart1RxIsr@UartRxData 016F                             CDCTxService@i 0067  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                _TaskNumber FCDF  
                             _BufferLocal 0664                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                __end_of_Rtcc_AlarmConfig 3F80                    __end_of_InitSchedTimer 4AC2  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0064  
                          _EnableReceiver 4F7C                                _UartConfig 0178  
               __end_of_StartConnectionSm 0EA0                         ??_Uart_Uart1RxIsr 0005  
                       _shortPacketStatus 004D                             ??_Term_MainSm 0080  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                         USBDeviceTasks@i 007B               USBStdFeatureReqHandler@pUEP 0075  
                USBTransferOnePacket@data 0061                USBCtrlTrfInHandler@lastDTS 0061  
                           ??_RtccIrqInit 0060                  ??_OsAlrm_ProcessOsAlarms 001F  
                         ??_USBDeviceInit 0068                       __end_of_SetBaudRate 44CA  
                                  ___lmul 41D4                      _I2cSlv_ReceiveI2cMsg 474A  
                            ?_putUSBUSART 0066                                    ___wmul 4B9A  
                               ??___awdiv 0064            GetElapsedTime@CurrentTimestamp 0074  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0064  
                       ?_Rtcm_GetRtccDate 0064                                 ??___lldiv 0074  
                    __end_of_getsUSBUSART 37F8                                 ??___lwdiv 0064  
                  Tmr_TmrBPrSet@IntFreqHz 0079                                 ??___lwmod 0064  
                       _USBEnableEndpoint 46C2           __size_of_USBStdGetStatusHandler 00B2  
                           ??_Rtcc_RtcIsr 0005                              ReadByte@Byte 0060  
                                  _memcpy 45AA                                    _memset 4A34  
                                  clear_0 24D0                                    clear_1 24DC  
                                  clear_2 24E8                                    clear_3 24F4  
                                  clear_4 2500                                    clear_5 250C  
                                  clear_6 2518                                    clear_7 2524  
                                  clear_8 2530                                    clear_9 253C  
                        ___awdiv@quotient 0066                        ??_Rtcm_GetRtccDate 006C  
                         ___awmod@divisor 0062                        _ExtInt0IsrCallback 014E  
                       ?_OsTmr_StartTimer 0064                           ___awmod@counter 0064  
                     UartWriteByte@Module 0061                        ?_USBEnableEndpoint 0068  
                                  _strcat 4052              ?_Rtcc_RegisterRtcIsrCallback 0060  
                                  _strchr 48C6                                    _strcpy 45F2  
                                  _strlen 42DC                                    _strtol 158C  
                                  _strstr 3AC0                          ClearBuffer@Index 0064  
           __size_of_USBTransferOnePacket 00BE                        ??_OsTmr_StartTimer 006A  
                                  itoa@cp 0076                                 ??_isalpha 0063  
                               ??_isdigit 0060                            ??_SetAckStatus 0060  
                            _CDCTxService 1E84                              __mediumconst FCD6  
                               ??_isspace 0060                    __size_of_CheckTxStatus 000A  
                                  tblptrh 000FF7                                 ??_isupper 0060  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                     ??_USBEnableEndpoint 0069                   __end_of_I2cSlv_MainTask 4386  
                           ??_Tmr_Tmr2Isr 0029                              ??_I2cDummyTx 001F  
               OsTmr_GetTimerStatus@Timer 0078                               _Mcu_Int0Isr 4F84  
                             _Mcu_Int1Isr 4F80                 MdmWifiGetUartData@Counter 016B  
                  __size_of_ScheduleTasks 012C                               _CtrlTrfData 000438  
                               ??_strncmp 006C                                 ??_toupper 0060  
                  ??_MdmWifiHttp_MainTask 0060                      _controlTransferState 004C  
                   __end_ofi1_GenerateEvt 4E5A           __end_of_Uart_MdmWifiReadService 4A04  
                   __end_of_Rtcm_MainTask 35A2                __size_of_Rtcc_GetRtccValue 0094  
                      _ExtInt1IsrCallback 014C                                __accesstop 0060  
                 __end_of__initialization 257E                    Tmr_TmrBPrSet@Prescaler 007B  
                  __end_of_EnableReceiver 4F80                        __size_of_WriteByte 000A  
                           _ReceiveDataSm 4638                             ___rparam_used 000001  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0001  
              __end_of_UartTxBufferStatus 447C                      Terminal@FormatOption 0157  
                         __CFG_IOL1WAY$ON 000000                               _InitCounter 013E  
                              _StringCopy 47D2                     I2cDummyTx@DummyBuffer 01C4  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0032  
                           __end_of_Alarm 4B9A   MdmWifi_StartWifiModemSm@WifiModeSmState 016D  
                   ?_I2cSlv_ReceiveI2cMsg 0063                            __pcstackCOMRAM 0001  
               __end_of_USBEnableEndpoint 4706                             __end_of_sd000 FF0A  
                           __end_of_sd001 FEDD                             __end_of_sd002 FEBF  
                            __pidataBANK1 4852                              __pidataBANK2 4562  
                _MdmWifi_StartWifiModemSm 3BD0          __size_of_USBCtrlEPAllowDataStage 00A0  
           __size_of_USBConfigureEndpoint 0098                  __size_of_InitializeTasks 007A  
                      __end_of_I2cDummyTx 4DCE               __end_of_USBCtrlTrfInHandler 2FA0  
                         __CFG_DSWDTPS$G2 000000                       __end_of_Term_MainSm 08D6  
                               ?i1___wmul 0017                       __end_of_RtccIrqInit 4E44  
                   __size_of_Led_MainTask 008C                               ?_ReceiveEvt 0060  
           ??_Rtcc_RegisterRtcIsrCallback 0062                                _SystemInit 4A04  
                                 ??_Alarm 0004                                _cdc_notice 0100  
                   __end_of_Tmr_TmrBPrSet 2772                       __end_of_Rtcc_RtcIsr 4CFA  
                        _MdmWifiEvtParser 3E38                                _cdc_rx_len 0047  
                       __end_of_MsgFormat FDCD                                _cdc_tx_len 0046  
                             ?_SendDataSm 0001                       Terminal@UsbRxBuffer 0300  
                     Terminal@UsbTxBuffer 0D00               __end_ofi1_I2cSlv_SendI2cMsg 4936  
                ??_USBCtrlTrfSetupHandler 007A                   _USBTicksSinceSuspendEnd 015D  
                          ClearBuffer@Len 0062                     _Irq_InitIntController 4B1C  
                  _USBStdGetStatusHandler 305E       Mcu_StartSystemPll@PllStartupCounter 0060  
             MdmWifiHttp_MainTask@Options 0001                            _Rtcc_RtcConfig 3466  
                        _MdmWifi_MainTask 496C                                __pbssBANK0 00F0  
                              __pbssBANK1 0100                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                              __pbssBANK7 0700                                __pbssBANK8 0800  
                              __pbssBANK9 0900                   ?_Pm_DsReleasePinControl 0001  
                   __end_ofi2_GenerateEvt 4E70                  __end_of_Uart_WriteString 3FEC  
                               ?_ReadByte 0001                     __size_of_I2cSetConfig 002C  
                         ?_EnableReceiver 0001                            ?_ReceiveDataSm 0001  
                   __size_of_I2c_ReadData 0176                     __size_of_I2cSendMsgSm 00B0  
                     __end_of_Tmr_Tmr2Isr 4CD8                               _SetBaudRate 447C  
             __size_of_USBWakeFromSuspend 003A                               _pBDTEntryIn 003E  
              __size_of_StartConnectionSm 02D6          UartTxBufferStatus@TxBufferStatus 0062  
        __end_of_USBCtrlEPServiceComplete 2684                                 ?_TmrBInit 0060  
                           _CheckTxStatus 4F54                          _WifiGenericError 01C5  
                 __size_of_Tmr_TmrBConfig 00C8               __size_of_USBCheckCDCRequest 00B0  
                       ?_GetOsTickCounter 0060                   __size_of_Tmr_TmrBIrqSet 004C  
                    USBCtrlTrfRxService@i 0060                                 ?_Terminal 0001  
                                 ?___lmul 0060                              _Led_MainTask 391C  
                          _Rtcc_UnlockRtc 4EA6                              _I2cBusStatus 0164  
                                 ?___wmul 0060           __size_of_OsAlrm_ProcessOsAlarms 015C  
                           _ScheduleTasks 223A                 Uart_InitUartModule@Module 0084  
                   __end_of_I2c_WriteData 1A64                        ??_GetOsTickCounter 0064  
                                 ?_memcpy 0060                                   ?_memset 0060  
                          ___lmul@product 0068                                _device_dsc FEF4  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 36D0  
                   __end_of_UpdateSchFlag 4DB2                                _ep_data_in 013B  
                         _I2cWriteDataEvt 0054                  i1GenerateEvt@EventStatus 0019  
                           ?_Rtcc_LockRtc 0001                                   ?_strcat 0060  
                              ??i1___wmul 001B                                   ?_strchr 0060  
                                 ?_strcpy 0060                                   ?_strlen 0060  
                                 ?_strtol 006C                                   ?_strstr 006F  
             __end_of_USBCtrlTrfRxService 248A                     Led_MainTask@LedTimer1 01EC  
                   Led_MainTask@LedTimer2 01C6                         __end_of_WriteByte 4F4A  
                      _USBCheckStdRequest 2858                         _configDescriptor1 FE56  
             __end_of_Rtcm_SetAlarmAction 4F12                      _MdmWifi_UartRxBuffer 0B00  
             __end_of_USBCtrlTrfTxService 2A14                       _USBStdSetCfgHandler 2772  
                 MdmWifi_MainTask@Options 0001                      _MdmWifi_UartTxBuffer 0600  
           Uart_MdmWifiReadService@Module 0001                              _I2cSetConfig 4AF0  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 3506                                   _SSP2ADD 000F74  
                                 _SSP2BUF 000F75                              _I2c_ReadData 1A64  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 31C0                          ?_I2cSlv_MainTask 0001  
          __end_of_Pm_DsReleasePinControl 4F6E                 MdmWifi_ReceiveWifiMsg@Ret 006C  
                     ?_USBCheckStdRequest 0001              __size_of_USBStdGetDscHandler 013A  
                                 _UIEbits 000F36                              ?_ClearBuffer 0060  
                                 _UIRbits 000F62                                   _IdLocal 0050  
               __size_of_UpdateOsCounters 0010                __end_of_Sch_SchmIntService 4F20  
                           _cdc_trf_state 00FB                                ??_ReadByte 0060  
                     _Uart_InitUartModule 08D6                            ?_CheckTxStatus 0001  
             __size_of_Mcu_StartSystemPll 001E                                   _pCDCDst 0132  
                                 _pCDCSrc 0135                     __size_of_getsUSBUSART 0094  
                             ?_StringCopy 0060                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 0062  
                  ??_I2cSlv_ReceiveI2cMsg 0067           ??_USBIncrement1msInternalTimers 0060  
                          _I2cReadDataEvt 0053                      ?_USBStdSetCfgHandler 0001  
                               _CDCInitEP 3EA8                    __end_of_Rtcc_UnlockRtc 4EB6  
                                 __Lparam 0000           OsAlrm_SetOsAlarm@OsAlarmTimeout 0068  
                    __end_of_SetAckStatus 4E84                               _Term_MainSm 04E4  
            __size_of_MdmWifi_SendWifiMsg 0010                                   _Welcome FDCD  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0001  
                              ??_Terminal 007C                       __size_of_SendDataSm 022A  
                       _Sch_MainScheduler 4D78                      ??_USBCheckStdRequest 007A  
                             _RtccIrqInit 4E2E             __size_of_USBCtrlTrfOutHandler 0062  
                                 ___awdiv 3B4A                      Term_MainTask@Options 0001  
                         __size_of___lmul 0058                  __size_of_SetUartBaudRate 0138  
                                 ___awmod 3D54                                   ___lldiv 3C56  
                        ??_USBDeviceTasks 007B                           __size_of___wmul 0028  
                                 ___lwdiv 43DA                         ??_USBStallHandler 0060  
                                 ___lwmod 478E                         ?_Rtcm_SetRtccDate 006C  
                      ?_Sch_MainScheduler 0001                               _Rtcc_RtcIsr 4CD8  
                    __size_of_putUSBUSART 0022                                   __pcinit 248A  
                      getsUSBUSART@buffer 0067                           __size_of_memcpy 0048  
                               _I2cComSts 004E                           __size_of_memset 0030  
                               _I2cConfig 018D                            ??_Rtcc_LockRtc 0060  
               __end_of_configDescriptor1 FE99                                   __ramtop 0F00  
                             Terminal@Len 01B5                        ??_Rtcm_SetRtccDate 0074  
                   Tmr_TmrBIrqSet@TmrNumb 0062                      ?_Uart_InitUartModule 0080  
                                 __ptext0 4F20                                   __ptext1 4A04  
                                 __ptext2 4F2C                                   __ptext3 4F68  
                                 __ptext4 4D5A                                   __ptext5 4E96  
                                 __ptext6 4B1C                                   __ptext7 4A94  
                                 __ptext8 2C88                                   __ptext9 2684  
                                 _inPipes 00F0                StartConnectionSm@DataIndex 00DB  
        __size_of_Uart_MdmWifiReadService 0032               _USBDeferOUTDataStagePackets 015E  
                         __size_of_strcat 0064                           __size_of_strchr 0038  
                      _WifiReceiveNetData 0058                           __size_of_strcpy 0046  
                         __size_of_strlen 0056              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                         __size_of_strstr 008A                              ??_USBSuspend 0074  
                               _T2CONbits 000FCA                                   _isalpha 4A64  
                                 _isdigit 4C72                             ?_Tmr_StartTmr 0001  
                     ??_Sch_MainScheduler 00F0                               ?_SystemInit 0001  
                                 clear_10 2548                                   clear_11 2554  
                                 clear_12 2560                                   clear_13 256C  
                                 clear_14 2578                          ___awmod@dividend 0060  
                       ??_InitializeTasks 00EB                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 0154       __end_of_Tmr_RegisterTmr2IsrCallback 4F36  
             _Tmr_RegisterTmr2IsrCallback 4F2C                                   _isspace 4B46  
             __end_of_MdmWifiCmd_MainTask 4C2E                                   _isupper 4C2E  
                  ?_Irq_InitIntController 0060                    Term_MainSm@FwkBuildStr 00BA  
                         ?_Rtcc_RtcConfig 0061                    _OsAlrm_ProcessOsAlarms 1BDA  
                      __end_of_USB_CD_Ptr FCDF                               _Tmr_Tmr2Isr 4CB6  
         __size_of_USBCtrlTrfSetupHandler 008C                           _Uart_Uart1RxIsr 4EE6  
                  Term_MainSm@FwkMajorStr 00B2                                   _strncmp 3A34  
                          __pintcode_body 3270                                   _toupper 4DE8  
                       ClearBuffer@Buffer 0060                      end_of_initialization 257E  
                            _getsUSBUSART 3764                          ??_GetElapsedTime 0068  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 0060  
                         ??_ReceiveDataSm 0064                    _MainSystemTimebaseFlag 01E1  
           i1I2cSlv_SendI2cMsg@DataLenght 001D                        __end_of_USB_SD_Ptr FCDD  
     Irq_InitIntController@PerInt_LowPInt 0061                                   memcpy@d 0066  
                                 memcpy@n 0064                                   memcpy@s 0068  
                     _pBDTEntryEP0OutNext 00F6                                   itoa@buf 0070  
                                 memset@c 0062                    Term_MainSm@FwkMinorStr 00B6  
                                 itoa@val 0072                                   memset@n 0064  
                                 memset@p 0066                                   int_func 3270  
                         _USB1msTickCount 012A           _dummy_encapsulated_cmd_response 0197  
                ?_USBStdFeatureReqHandler 0001                 __size_of_Mcu_ConfigExtInt 0010  
                       ?_Rtcc_AlarmConfig 0060                     ??_USBStdSetCfgHandler 0074  
                         ___lldiv@divisor 0070                 __end_of_Sch_MainScheduler 4D96  
                              ?_CDCInitEP 0001                           ___lldiv@counter 0078  
                       _Rtcc_SetRtccValue 1134                         _Rtcc_SetRtcStatus 4E18  
                         ?_Rtcc_UnlockRtc 0001               __size_of_MdmWifiGetUartData 00D2  
                      ??_Rtcc_AlarmConfig 0062                        __end_of_USBSuspend 49D2  
                           StringCopy@Len 0064                   _USBCtrlEPAllowDataStage 33C6  
                      _UsbDevice_MainTask 4BE8                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 0068  
                      ?_Rtcc_SetRtcStatus 0001                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                                 utoa@buf 0067                  _USBCtrlEPServiceComplete 2588  
                                 utoa@val 0069                     i1___wmul@multiplicand 0019  
                         _RtccIsrCallback 0150          OsAlrm_ProcessOsAlarms@AlarmIndex 0027  
                      Terminal@EchoOption 01E0                                   strlen@s 0060  
              _USBStatusStageEnabledFlag1 0049                _USBStatusStageEnabledFlag2 0048  
                   ??_Uart_InitUartModule 0082                                   strtol@a 0077  
                                 strtol@c 007B                            _Rtcm_RtccAlarm 011A  
                                 strtol@s 006C                        USBEnableEndpoint@p 0069  
                     ?_UsbDevice_MainTask 0001                                 _PORTDbits 000F83  
                     ??_Rtcc_SetRtccValue 0069                       ??_Rtcc_SetRtcStatus 0060  
                        __CFG_DSBOREN$OFF 000000                            ??_Tmr_StartTmr 0060  
            __end_of_I2cSlv_I2cReadMsgSts 4CB6                  i1I2cSlv_SendI2cMsg@TxSts 001E  
                       StringCopy@DestStr 0062    Rtcc_RegisterRtcIsrCallback@IsrCallback 0060  
                        __CFG_CPUDIV$OSC1 000000                    __size_of_UartSetConfig 0058  
                         _Tmr4IsrCallback 0152                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 0042  
                      _BothEP0OutUOWNsSet 0160                              strtol@endptr 006E  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0001  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0001  
        MdmWifi_ReceiveWifiMsg@DataLenght 006A                 I2c_WriteData@I2cNextState 0176  
              StartConnectionSm@PortAscii 00D7                 USBConfigureEndpoint@EPNum 0065  
              ?_USBCtrlEPAllowStatusStage 0001                          ??_InitSchedTimer 0087  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0070                                 _USTATcopy 00FF  
                   __end_of_StopCondition 4F78                  __size_of_HighPriorityIsr 3314  
               Tmr_TmrBPrSet@TmrBPrCfgSts 007D                 __size_of_OsTmr_StartTimer 005E  
                      SendDataSm@LenAscii 00E5                      ??_UsbDevice_MainTask 007C  
            __end_of_USBTransferOnePacket 305E                           ??_CheckTxStatus 0060  
              ??_MdmWifi_StartWifiModemSm 0064                     StartConnectionSm@Data 0073  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 1362  
               __end_of_Rtcc_SetRtcStatus 4E2E                         _I2cSlv_SendI2cMsg 4814  
         SetBaudRate@DesiredI2cBusClockHz 0079                           ??_ScheduleTasks 00EB  
                          _Tmr_TmrBConfig 2C88                   Tmr_TmrBPrSet@Postscaler 007C  
                       putUSBUSART@length 0068                         _OsAlrm_SetOsAlarm 2E18  
                __end_of_MdmWifiEvtParser 3EA8                      Terminal@TermRxBuffer 0240  
                      ?_I2cSlv_SendI2cMsg 0063                       __size_of_SystemInit 0030  
                          _Tmr_TmrBIrqSet 44CA                       __CFG_MSSP7B_EN$MSK7 000000  
                         _StartConnection 0057                      Terminal@TermTxBuffer 03C8  
                  _USBCtrlTrfSetupHandler 39A8                        ?_OsAlrm_SetOsAlarm 0066  
                   __end_of_USBDeviceInit 1E84     __end_of_USBIncrement1msInternalTimers 4D3A  
  __size_of_USBIncrement1msInternalTimers 0020             _USBIncrement1msInternalTimers 4D1A  
                          __end_of___lmul 422C                            _CheckAckStatus 4F5E  
                          __end_of___wmul 4BC2                  __end_of_MdmWifi_MainTask 49A0  
                     ??_I2cSlv_SendI2cMsg 0067                    __size_of_UartWriteByte 0020  
                ??_MdmWifi_ReceiveWifiMsg 006C                            __end_of_memcpy 45F2  
                      Terminal@PackageLen 00FA                            __end_of_memset 4A64  
                      _UartTxBufferStatus 442E                       ??_OsAlrm_SetOsAlarm 006E  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 0062  
                       _USBBusIsSuspended 0161                         ??_SetUartBaudRate 007B  
                 __end_of_Uart_Uart1RxIsr 4EF6                            __end_of_strcat 40B6  
                          __end_of_strchr 48FE                            __end_of_strcpy 4638  
                          __end_of_strlen 4332                            __end_of_strtol 1762  
                          __end_of_strstr 3B4A                       start_initialization 248A  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0001  
                            ??_SendDataSm 007E                    Uart_WriteString@Module 0065  
           USBCtrlTrfRxService@byteToRead 0061                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 006C                       ?_UartTxBufferStatus 0001  
                               _ModeLocal 0051                          ??_EnableReceiver 0060  
                             _cdc_data_rx 0200                               _cdc_data_tx 04A4  
            __end_of_USBConfigureEndpoint 363A           __end_of_USBStdFeatureReqHandler 1134  
                               _MsgFormat FCE1                          _UpdateOsCounters 4ED6  
              I2c_InitI2cModule@I2cConfig 0085         __end_of_USBCtrlEPAllowStatusStage 2C88  
               __end_of_I2cSlv_SendI2cMsg 4852                  __end_of_USBCtrlEPService 3764  
                       ?_Uart_WriteString 0063                     __size_of_SetAckStatus 0014  
           __size_of_MdmWifiHttp_MainTask 000E                      __size_of_ClearBuffer 0036  
                    __end_of_Rtcc_LockRtc 4EC6                              ?_SetBaudRate 0079  
                  __end_of_Tmr_TmrBConfig 2D50                 __end_of_OsAlrm_SetOsAlarm 2EE0  
                  __end_of_Tmr_TmrBIrqSet 4516                                 _TaskTable 028B  
               ??_USBCtrlEPAllowDataStage 0061                        ??_Uart_WriteString 0065  
                             _SystemState 00FE                         __size_of_ReadByte 000A  
                               _RtcConfig 01BD                __size_of_Sch_MainScheduler 001E  
           Uart_InitUartModule@UartConfig 0080                               ??_CDCInitEP 006C  
                          USBDeviceInit@i 0068                             _UartSetConfig 422C  
                      __end_of_ReceiveEvt 4AF0                    _pBDTEntryEP0OutCurrent 00F8  
                           _Term_MainTask 4DCE                   USBTransferOnePacket@dir 0060  
                    ??_UartTxBufferStatus 0060                   USBTransferOnePacket@len 0063  
                   Tmr_TmrBConfig@TmrNumb 0086                   __size_of_LowPriorityIsr 00B4  
         StartConnectionSm@StartConnState 0167                    __end_of_CheckAckStatus 4F68  
                                ??___lmul 0068                                  ??___wmul 0064  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 0060  
                      __end_of_SendDataSm 158C                       _USBStdGetDscHandler 1FC8  
                               _PortLocal 0169                I2cSlv_SendI2cMsg@SlaveAddr 0065  
                             __pdataBANK1 01C6                               __pdataBANK2 028B  
                        __CFG_LPT1OSC$OFF 000000                         __size_of_Terminal 0414  
                                ??_memcpy 0066                                  ??_memset 0066  
                 _Uart_MdmWifiReadService 49D2                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 0060                                  ??_strcat 0065  
                                ??_strchr 0064                                  ??_strcpy 0064  
                                ??_strlen 0062                    __size_of_Rtcm_MainTask 009C  
                       _MdmWifi_DrvMainFn 4F6E                                  ??_strtol 0072  
                                ??_strstr 0073                               __pbssBANK10 0A00  
                             __pbssBANK11 0B00                               __pbssBANK12 0C00  
                             __pbssBANK13 0D00                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 0052            __end_of_USBStdGetStatusHandler 3110  
                           WriteByte@Byte 0060                        __end_of_TaskNumber FCE1  
         MdmWifi_StartWifiModemSm@Counter 0146                               __pbssCOMRAM 003E  
                 GetElapsedTime@TimeValue 0070                        ?_MdmWifi_DrvMainFn 0001  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
            __size_of_USBCtrlTrfInHandler 00C0                              _SetAckStatus 4E70  
                     _MdmWifi_SendWifiMsg 4EC6                              _isalpha$5858 0064  
                  GenerateEvt@EventStatus 0062                                 _WriteByte 4F40  
                WifiTerminal@FirstRecFlag 015A                      ?_USBStdGetDscHandler 0001  
                            _isdigit$5593 0061             UpdateSchFlag@InterruptCounter 0144  
               SetUartBaudRate@UartConfig 0079                       ??_MdmWifi_DrvMainFn 0064  
                 GetElapsedTime@StartTime 0064                             _UartWriteByte 4D3A  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 48C6  
                         _USBStallHandler 467E                              _pBDTEntryOut 0120  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 0083                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 4E96                __end_of_USBCheckCDCRequest 31C0  
            __size_ofi1_I2cSlv_SendI2cMsg 0038                       _OsAlrm_ClearOsAlarm 4284  
                         ?_Tmr_TmrBIrqSet 0060                            ?_UartSetConfig 0001  
                    __end_of_Tmr_StartTmr 4D1A               SendDataSm@WifiSendDataState 0166  
                            ??_StringCopy 0066                         ??_HighPriorityIsr 0005  
                          ?_Term_MainTask 0001                          ___lwdiv@dividend 0060  
                            ?_Term_MainSm 0001                      _I2cSlv_I2cReadMsgSts 4C94  
                        GenerateEvt@Event 0060                      ?_MdmWifi_SendWifiMsg 0066  
                  __size_of_Tmr_TmrBPrSet 00EE                                 __pintcode 0008  
           Uart_WriteString@StringToWrite 0063                             __pmediumconst FCD6  
                            ?_RtccIrqInit 0001                           ?_CheckAckStatus 0001  
                 Tmr_TmrBIrqSet@TmrIrqSts 0061                                  ?___awdiv 0060  
                               __ptext100 45F2                                 __ptext101 4052  
                               __ptext110 388C                                 __ptext102 4EC6  
                               __ptext111 2D50                                 __ptext103 3F80  
                               __ptext120 4AC2                                 __ptext112 4E84  
                               __ptext104 4D3A                                 __ptext121 18E4  
                               __ptext113 2E18                                 __ptext105 442E  
                               __ptext130 4F54                                 __ptext122 1A64  
                               __ptext114 4B9A                                 __ptext106 4516  
                           Terminal@Index 007F                                 __ptext131 4F5E  
                               __ptext123 4F40                                 __ptext115 3DC6  
                               __ptext107 47D2                                 __ptext140 4DB2  
                               __ptext124 4F74                                 __ptext116 447C  
                               __ptext108 4638                                 __ptext141 48FE  
                               __ptext133 4CB6                                 __ptext125 4F78  
                               __ptext117 3C56                                 __ptext109 4176  
                               __ptext150 4F84                                 __ptext142 4E44  
                               __ptext134 4F12                                 __ptext126 4E70  
                               __ptext118 4AF0                                 __ptext151 0000  
                               __ptext135 4D96                                 __ptext127 4F4A  
                               __ptext119 31C0                                 __ptext144 4EE6  
                               __ptext136 4ED6                                 __ptext128 4E00  
                               __ptext145 49D2                                 __ptext137 1BDA  
                               __ptext129 4F7C                                 __ptext146 4CD8  
                               __ptext138 4BC2                                 __ptext147 4B70  
                               __ptext139 4284                                 __ptext148 4E5A  
                               __ptext149 4F80                                  ?___awmod 0060  
                      _Sch_SchmIntService 4F12                           _InitializeTasks 3CDA  
                                ?___lldiv 006C                                  ?___lwdiv 0060  
                                ?___lwmod 0060                 __end_of_MdmWifi_DrvMainFn 4F74  
                            ?_Rtcc_RtcIsr 0001                               __pintcodelo 0018  
                           _WifiMdmStatus 016E       __end_of_Rtcc_RegisterRtcIsrCallback 4F40  
             _Rtcc_RegisterRtcIsrCallback 4F36                    __size_ofi2_GenerateEvt 0016  
         __size_of_MdmWifi_ReceiveWifiMsg 004C                          ??_Rtcc_RtcConfig 0063  
                    ?_OsAlrm_ClearOsAlarm 0001                               _I2cRxPacket 01A6  
                     _NewWifiPacketParser 0059                       ?_Sch_SchmIntService 0001  
                    _USBTransferOnePacket 2FA0                   ??_Irq_InitIntController 0062  
                 ?_OsAlrm_ProcessOsAlarms 0001                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0001  
                                ?_isalpha 0001                              ??_SystemInit 008E  
                                ?_isdigit 0001                               _I2cTxPacket 01AC  
          InitializeTasks@ActiveTaskIndex 00ED                      __CFG_RTCOSC$T1OSCREF 000000  
                          __size_of_Alarm 002A                                  ?_isspace 0001  
                                ?_isupper 0001                Term_MainSm@TermMainSmState 0156  
                         Terminal@Payload 0440                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 4118                                ?_WriteByte 0001  
                   ??_USBStdGetDscHandler 0060                          _Rtcm_GetRtccDate 3FEC  
                      __end_of_StringCopy 4814                               _ep_data_out 0138  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 0064                              ?_Tmr_Tmr2Isr 0001  
               __size_of_Rtcm_SetRtccDate 0054              __size_of_USBCtrlTrfRxService 0124  
           USBConfigureEndpoint@direction 0060                                  ?_strncmp 0066  
                                ?_toupper 0001                            ?_UartWriteByte 0060  
            __size_of_Rtcm_SetAlarmAction 000E                    __size_of_I2c_WriteData 0180  
                        _OsTmr_StartTimer 4176                      __size_of_Mcu_Int0Isr 0004  
                    __size_of_Mcu_Int1Isr 0004   Irq_InitIntController@GlobalInt_HighPInt 0060  
              __size_of_I2cSlv_SendI2cMsg 003E              __size_of_USBCtrlTrfTxService 00D8  
                        ??_Rtcc_UnlockRtc 0060                             i1_GenerateEvt 4E44  
              __end_of_Mcu_StartSystemPll 4D78                             _Rtcm_MainTask 3506  
                          ___wmul@product 0064                     Terminal@ReceivedBytes 007E  
                                _LATEbits 000F8D                      ??_Sch_SchmIntService 0029  
                  __size_of_UpdateSchFlag 001C                __size_of_OsAlrm_SetOsAlarm 00C8  
              ??_USBCtrlEPServiceComplete 0061                  __size_of_I2cSlv_MainTask 0054  
                                _IPR1bits 000F9F                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
                   _MdmWifi_UartRxCounter 014A                     ?_I2cSlv_I2cReadMsgSts 0001  
                   ??_MdmWifi_SendWifiMsg 0068                         _I2c_InitI2cModule 3DC6  
                                i1u806_28 4CC6                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                                i1u774_20 1BF0                                  i2u800_40 4B7A  
                                i2u801_48 4B7C                                  i1u778_28 1D18  
                                i1u778_29 1D2A                                  i2u804_48 4CE8  
                      __end_of_SystemInit 4A34                                  _RCONbits 000FD0  
                           ??_putUSBUSART 0069                          __CFG_WDTPS$32768 000000  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 0044  
              _USBDeferINDataStagePackets 015F                        ?_I2c_InitI2cModule 0085  
               ??_Uart_MdmWifiReadService 0005                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0001              __end_of_OsTmr_GetTimerStatus 391C  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
             MdmWifi_SendWifiMsg@TxBuffer 0066                      _USBConfigureEndpoint 35A2  
                         _NewWifiUartData 005C                         SendDataSm@IdAscii 00EA  
        __size_of_USBStdFeatureReqHandler 0294                     SetUartBaudRate@Module 007C  
          __end_of_OsAlrm_ProcessOsAlarms 1D36                     ??_OsAlrm_ClearOsAlarm 0017  
                       ___wmul@multiplier 0060                     ?_USBTransferOnePacket 0060  
                                i1___wmul 4BC2                       ??_I2c_InitI2cModule 0087  
               __size_of_Rtcc_AlarmConfig 006C                             ?_CDCTxService 0001  
          OsAlrm_SetOsAlarm@AlarmCallback 006C                              _RemoteWakeup 0162  
                          _StartCondition 4F78                        SetAckStatus@AckSts 0060  
                           _Tmr_TmrBPrSet 2684                              _isspace$5861 0061  
                 __end_of_USBStallHandler 46C2                     __size_of_Rtcc_LockRtc 0010  
                       SendDataSm@SwTimer 01F6                         ___lmul@multiplier 0060  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 0001                                 copy_data0 249E  
                               copy_data1 24BE                                  _LenLocal 004F  
                  I2cSlv_SendI2cMsg@TxSts 0067               ??_USBCtrlEPAllowStatusStage 0060  
             __end_of_USBStdSetCfgHandler 2858                            ?i1_GenerateEvt 0017  
                Tmr_TmrBConfig@TmrBConfig 0083                                  _OsAlarms 0500  
                          ?_Rtcm_MainTask 0001                     OsTmr_StartTimer@Timer 0064  
                  _MdmWifi_ReceiveWifiMsg 4516                                  _ReadByte 4F4A  
            __size_of_MdmWifiCmd_MainTask 0022                             i2_GenerateEvt 4E5A  
                         ??_UartSetConfig 0060                     __end_of_ReceiveDataSm 467E  
                      __end_of_device_dsc FF06                 __end_of_I2c_InitI2cModule 3E38  
                                _MsgReady FEDD                           ??_Term_MainTask 00CA  
              __end_of_MdmWifiGetUartData 2BBE                   __end_of_InitializeTasks 3D54  
                 ?_USBCtrlTrfSetupHandler 0001                                  _RxBuffer 0C00  
                 USBStdGetStatusHandler@p 0061                                  __Hrparam 0000  
                                _TmrBInit 363A                      __size_of_SetBaudRate 004E  
                          _LowPriorityIsr 0018                                 memcpy@tmp 006A  
                    Tmr_TmrBPrSet@Divisor 007F                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0064                         ?_MdmWifiEvtParser 0001  
             __end_of_Uart_InitUartModule 0BCA                           _WifiReceiveData 0055  
                         _SetUartBaudRate 2102              i1I2cSlv_SendI2cMsg@SlaveAddr 001C  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0063                     SetBaudRate@McuClockHz 007D  
                      ??_MdmWifiEvtParser 0073                     ?_USBConfigureEndpoint 0060  
            OsAlrm_ClearOsAlarm@OsAlarmId 0017                             _I2c_WriteData 18E4  
                        __size_of___awdiv 0086                          __size_of___awmod 0072  
                __end_of_UpdateOsCounters 4EE6                          __size_of___lldiv 0084  
              __size_of_MdmWifi_DrvMainFn 0006                         Terminal@SlaveAddr 0158  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 007E  
                        __size_of___lwmod 0044                 Rtcm_SetAlarmAction@Action 0062  
                       ?_MdmWifi_MainTask 0001                  I2c_WriteData@WritePacket 0061  
                       Terminal@TermState 0159                             _UpdateSchFlag 4D96  
                     __end_of_putUSBUSART 4C72                               _line_coding 019F  
                          _StartWifiModem 005B                              _Rtcc_LockRtc 4EB6  
                  __end_of_StartCondition 4F7C                            ??_CDCTxService 0067  
                ??_Pm_DsReleasePinControl 0060                 Rtcm_GetRtccDate@LocalDate 006D  
                      ??_MdmWifi_MainTask 0085                  I2c_WriteData@WriteStatus 0174  
                            _isupper$5864 0061                                strcat@from 0062  
                 I2c_ReadData@DataCounter 0172                            ?_Tmr_TmrBPrSet 0079  
                        _GetOsTickCounter 4E84                          __size_of_isalpha 0030  
                        __size_of_isdigit 0022                   __size_of_USBDeviceTasks 0182  
                         ___lwdiv@divisor 0062                              Terminal@Addr 01B1  
                             ??_WriteByte 0060                          __size_of_isspace 002A  
                         ___lwdiv@counter 0066                                  __ptext10 44CA  
                                __ptext11 4CFA                                  __ptext20 4C0C  
                                __ptext12 363A                                  __ptext21 496C  
                                __ptext13 4D78                           ??_UartWriteByte 0061  
                                __ptext30 1D36                                  __ptext22 4332  
                                __ptext14 223A                                  __ptext31 36D0  
                                __ptext23 4F6E                                  __ptext15 3CDA  
                                __ptext40 0EA0                                  __ptext32 45AA  
                                __ptext24 4BE8                                  __ptext16 4DCE  
                                __ptext41 4118                                  __ptext33 39A8  
                                __ptext25 1762                                  __ptext17 3506  
                                __ptext50 293C                                  __ptext42 3110  
                                __ptext34 2588                                  __ptext26 488C  
                                __ptext18 391C                                  __ptext51 1E84  
                                __ptext43 3EA8                                  __ptext35 33C6  
                                __ptext27 49A0                                  __ptext19 4EF6  
                                __ptext60 4C50                                  __ptext52 04E4  
                                __ptext44 46C2                                  __ptext36 2858  
                                __ptext28 467E                                  __ptext61 4706  
                                __ptext53 4A34                                  __ptext45 35A2  
                                __ptext37 2772                                  __ptext29 4D1A  
                                __ptext70 4EA6                                  __ptext62 3764  
                                __ptext54 00D0                                  __ptext46 40B6  
                                __ptext38 305E                                  __ptext71 1134  
                                __ptext63 2FA0                                  __ptext55 158C  
                                __ptext47 2366                                  __ptext39 1FC8  
                                __ptext80 3466                                  __ptext72 3D54  
                                __ptext64 2A14                                  __ptext56 4DE8  
                                __ptext48 2BBE                                  __ptext81 4E2E  
                                __ptext73 3B4A                                  __ptext65 4C72  
                                __ptext57 4B46                                  __ptext49 2EE0  
                                __ptext90 0BCA                                  __ptext82 3F14  
                                __ptext74 4EB6                                  __ptext66 4814  
                                __ptext58 4A64                                  __ptext91 4936  
                                __ptext83 08D6                                  __ptext75 4F04  
                                __ptext67 474A                                  __ptext59 4C2E  
                                __ptext92 1362                                  __ptext84 2102  
                                __ptext76 4F36                                  __ptext68 4C94  
                                __ptext93 331C                                  __ptext85 41D4  
                                __ptext77 3FEC                                  __ptext69 4386  
                                __ptext94 478E                                  __ptext86 422C  
                                __ptext78 37F8                                  __ptext95 43DA  
                                __ptext87 2AEC                                  __ptext79 4E18  
                                __ptext96 3AC0                                  __ptext88 3E38  
                                __ptext97 3A34                                  __ptext89 3BD0  
                                __ptext98 42DC                                  __ptext99 48C6  
                        __size_of_isupper 0022                                _I2cDummyTx 4DB2  
                  Tmr_TmrBIrqSet@Priority 0060                              _SSP2CON2bits 000F71  
                          SendDataSm@Data 007E                     __size_of_Tmr_StartTmr 0020  
                        __size_of_strncmp 008C                          __size_of_toupper 0018  
                          ?i2_GenerateEvt 0001                                _DSCONHbits 000F4D  
                              strcpy@from 0062                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0017                              _WifiSendData 0056  
             __size_of_UsbDevice_MainTask 0024                             __size_of_atoi 00D8  
                      TmrBInit@Postscaler 0061            __end_of_USBCtrlTrfSetupHandler 3A34  
                           __size_of_main 000C                         ?_USBCtrlEPService 0001  
                           __size_of_itoa 0044                             __size_of_utoa 00AA  
                     Led_MainTask@Options 0001                    ??_I2cSlv_I2cReadMsgSts 0064  
                              strncmp@len 006A                    __end_of_LowPriorityIsr 00CC  
                            _WifiRxPacket 0700                     __end_of_CheckTxStatus 4F5E  
                      ??_USBCtrlEPService 007A                              _WifiTxPacket 0900  
                     _USBCtrlTrfInHandler 2EE0                  I2c_ReadData@I2cReadState 0173  
                   __end_of_ScheduleTasks 2366                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0001                                  _outPipes 0112  
                    _USBCtrlTrfOutHandler 40B6                                  int$flags 005D  
                              strtol@base 0070                            ?_I2c_WriteData 0061  
                                atoi@sign 006A                         ??_I2cSlv_MainTask 0089  
                         StringCopy@Index 0066                 _USBCtrlEPAllowStatusStage 2BBE  
                    __size_of_Term_MainSm 03F2              ScheduleTasks@ActiveTaskIndex 00EF  
                              strtol@sign 0076                           Term_MainSm@Data 0080  
                    __size_of_RtccIrqInit 0016              __end_of_MdmWifiHttp_MainTask 4F04  
               __size_of_Uart_WriteString 006C                    ??_USBTransferOnePacket 0064  
                          ?_UpdateSchFlag 0001         __size_of_MdmWifi_StartWifiModemSm 0086  
                  __size_of_StopCondition 0004                 ?_MdmWifi_StartWifiModemSm 0001  
                    __size_of_Rtcc_RtcIsr 0022                       i1_I2cSlv_SendI2cMsg 48FE  
                __end_of_Mcu_ConfigExtInt 4EA6                           ?_StartCondition 0001  
               _USBDeferStatusStagePacket 00FC                  CDCTxService@byte_to_send 0068  
           I2c_WriteData@TentativeCounter 0175                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 0060  
                            _Tmr_StartTmr 4CFA               Term_MainSm@FwkBuildMonthStr 00C2  
                    ?_USBCtrlTrfInHandler 0001                                  memcpy@d1 0060  
                                memcpy@s1 0062                I2cSlv_I2cReadMsgSts@Result 0064  
           USBCtrlTrfTxService@byteToSend 0060                             ?_I2cSetConfig 0001  
                                itoa@base 0074               i1I2cSlv_SendI2cMsg@TxBuffer 001A  
                           ?_I2c_ReadData 0063                             ?_I2cSendMsgSm 0001  
                                isalpha@c 0065                                  isdigit@c 0062  
                                memset@p1 0060                             _ProtocolLocal 016A  
                        ?_USBStallHandler 0001                           ??i1_GenerateEvt 0019  
                        _Rtcm_SetRtccDate 4386                  USBStdFeatureReqHandler@p 0078  
                        ??_Tmr_TmrBConfig 0085                             ??_ClearBuffer 0064  
                         _HighPriorityIsr 0008                           ??_Rtcm_MainTask 0075  
                        ??_Tmr_TmrBIrqSet 0062                                  intlevel1 0000  
                                intlevel2 0000                      _OsTmr_GetTimerStatus 388C  
                       TmrBInit@Prescaler 0060                      __size_of_Tmr_Tmr2Isr 0022  
                  __size_of_USBDeviceInit 014E   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 4176  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 0072  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 006C           _USER_USB_CALLBACK_EVENT_HANDLER 4118  
                               strchr@chr 0062                   Rtcc_SetRtcStatus@Status 0060  
                        ___lwmod@dividend 0060                                 strchr@ptr 0060  
                 __end_of_SetUartBaudRate 223A                                  isspace@c 0062  
                        ___lldiv@dividend 006C                      ?i1_I2cSlv_SendI2cMsg 001A  
              __size_of_I2c_InitI2cModule 0072                          ??_CheckAckStatus 0060  
                         ?_LowPriorityIsr 0001                          ?_InitializeTasks 0001  
                                isupper@c 0062                                 strncmp@s1 0066  
                               strncmp@s2 0068                                _OSCCONbits 000FD3  
               I2cSlv_ReceiveI2cMsg@RxSts 0067                            ??_Led_MainTask 007E  
                 __size_of_InitSchedTimer 002E                    ??_USBConfigureEndpoint 0061  
                   ?_USBCtrlTrfOutHandler 0001               __size_of_UartTxBufferStatus 004E  
                __end_of_Rtcm_GetRtccDate 4052                               _putUSBUSART 4C50  
                     _USBCtrlTrfRxService 2366                    Rtcc_SetRtccValue@Value 0068  
                      _USBWakeFromSuspend 488C                       _Rtcm_SetAlarmAction 4F04  
                 _USBStdFeatureReqHandler 0EA0                  __end_of_OsTmr_StartTimer 41D4  
                      _USBCheckCDCRequest 3110                       _USBCtrlTrfTxService 293C  
                     RtccIrqInit@Priority 0060                                  utoa@base 006B  
                              _RTCCFGbits 000F3F                          _Rtcc_AlarmConfig 3F14  
                         ??_Tmr_TmrBPrSet 007D                                  strcat@cp 0065  
                                strcat@to 0060                       ?_USBWakeFromSuspend 0001  
         __size_of_Pm_DsReleasePinControl 0006                          ___lldiv@quotient 0074  
                         ___lwmod@divisor 0062                     ??_USBCtrlTrfInHandler 0061  
                                strcpy@cp 0064                                  strlen@cp 0064  
                                strcpy@to 0060                 UsbDevice_MainTask@Options 0001  
                   _USBAlternateInterface 01C1                           ___lwmod@counter 0064  
                          ??_I2cSetConfig 0060            __size_of_Irq_InitIntController 002A  
                                toupper@c 0060           SetUartBaudRate@BaudRateRegister 007D  
                     ?_USBCheckCDCRequest 0001                            ??_I2c_ReadData 0065  
                          ??_I2cSendMsgSm 0067             __end_of_Irq_InitIntController 4B46  
                   ReceiveEvt@EventStatus 0063              ?_Tmr_RegisterTmr2IsrCallback 0060  
                     USBEnableEndpoint@ep 006B                                  strstr@s1 006F  
                                strstr@s2 0071                           _endpoint_number 004B  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0001  
                    ?_USBCtrlTrfRxService 0001                           ??i2_GenerateEvt 0003  
                           ?_getsUSBUSART 0067                  UartTxBufferStatus@Module 0061  
                   ?_OsTmr_GetTimerStatus 0078             SetUartBaudRate@DivisionFactor 007F  
          I2cSlv_ReceiveI2cMsg@DataLenght 0066                             ??_GenerateEvt 0062  
                    ?_Rtcm_SetAlarmAction 0062         ReceiveDataSm@WifiReceiveDataState 0165  
    __size_of_Rtcc_RegisterRtcIsrCallback 000A                           TmrBInit@TmrNumb 0063  
                ?_USBCtrlEPAllowDataStage 0001                      ?_USBCtrlTrfTxService 0001  
                           _StopCondition 4F74                     ??i1_I2cSlv_SendI2cMsg 001E  
            _USBStatusStageTimeoutCounter 004A                    WifiTerminal@UartBuffer 0800  
                    ??_USBWakeFromSuspend 0074                USBTransferOnePacket@handle 0065  
                     __end_of_ClearBuffer 496C                      __end_of_CDCTxService 1FC8  
                    ??_USBCheckCDCRequest 0060                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FCDD                     WifiTerminal@UsbBuffer 0A00  
                         ??_I2c_WriteData 0063  
