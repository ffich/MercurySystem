

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Nov 12 20:43:13 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK12,global,class=BANK12,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK13,global,class=BANK13,space=1,delta=1,lowdata,noexec
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	text0,global,reloc=2,class=CODE,delta=1
    29                           	psect	text1,global,reloc=2,class=CODE,delta=1
    30                           	psect	text2,global,reloc=2,class=CODE,delta=1
    31                           	psect	text3,global,reloc=2,class=CODE,delta=1
    32                           	psect	text4,global,reloc=2,class=CODE,delta=1
    33                           	psect	text5,global,reloc=2,class=CODE,delta=1
    34                           	psect	text6,global,reloc=2,class=CODE,delta=1
    35                           	psect	text7,global,reloc=2,class=CODE,delta=1
    36                           	psect	text8,global,reloc=2,class=CODE,delta=1
    37                           	psect	text9,global,reloc=2,class=CODE,delta=1
    38                           	psect	text10,global,reloc=2,class=CODE,delta=1
    39                           	psect	text11,global,reloc=2,class=CODE,delta=1
    40                           	psect	text12,global,reloc=2,class=CODE,delta=1
    41                           	psect	text13,global,reloc=2,class=CODE,delta=1
    42                           	psect	text14,global,reloc=2,class=CODE,delta=1
    43                           	psect	text15,global,reloc=2,class=CODE,delta=1
    44                           	psect	text16,global,reloc=2,class=CODE,delta=1
    45                           	psect	text17,global,reloc=2,class=CODE,delta=1
    46                           	psect	text18,global,reloc=2,class=CODE,delta=1
    47                           	psect	text19,global,reloc=2,class=CODE,delta=1
    48                           	psect	text20,global,reloc=2,class=CODE,delta=1
    49                           	psect	text21,global,reloc=2,class=CODE,delta=1
    50                           	psect	text22,global,reloc=2,class=CODE,delta=1
    51                           	psect	text23,global,reloc=2,class=CODE,delta=1
    52                           	psect	text24,global,reloc=2,class=CODE,delta=1
    53                           	psect	text25,global,reloc=2,class=CODE,delta=1
    54                           	psect	text26,global,reloc=2,class=CODE,delta=1
    55                           	psect	text27,global,reloc=2,class=CODE,delta=1
    56                           	psect	text28,global,reloc=2,class=CODE,delta=1
    57                           	psect	text29,global,reloc=2,class=CODE,delta=1
    58                           	psect	text30,global,reloc=2,class=CODE,delta=1
    59                           	psect	text31,global,reloc=2,class=CODE,delta=1
    60                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text33,global,reloc=2,class=CODE,delta=1
    62                           	psect	text34,global,reloc=2,class=CODE,delta=1
    63                           	psect	text35,global,reloc=2,class=CODE,delta=1
    64                           	psect	text36,global,reloc=2,class=CODE,delta=1
    65                           	psect	text37,global,reloc=2,class=CODE,delta=1
    66                           	psect	text38,global,reloc=2,class=CODE,delta=1
    67                           	psect	text39,global,reloc=2,class=CODE,delta=1
    68                           	psect	text40,global,reloc=2,class=CODE,delta=1
    69                           	psect	text41,global,reloc=2,class=CODE,delta=1
    70                           	psect	text42,global,reloc=2,class=CODE,delta=1
    71                           	psect	text43,global,reloc=2,class=CODE,delta=1
    72                           	psect	text44,global,reloc=2,class=CODE,delta=1
    73                           	psect	text45,global,reloc=2,class=CODE,delta=1
    74                           	psect	text46,global,reloc=2,class=CODE,delta=1
    75                           	psect	text47,global,reloc=2,class=CODE,delta=1
    76                           	psect	text48,global,reloc=2,class=CODE,delta=1
    77                           	psect	text49,global,reloc=2,class=CODE,delta=1
    78                           	psect	text50,global,reloc=2,class=CODE,delta=1
    79                           	psect	text51,global,reloc=2,class=CODE,delta=1
    80                           	psect	text52,global,reloc=2,class=CODE,delta=1
    81                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text54,global,reloc=2,class=CODE,delta=1
    83                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text60,global,reloc=2,class=CODE,delta=1
    89                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text62,global,reloc=2,class=CODE,delta=1
    91                           	psect	text63,global,reloc=2,class=CODE,delta=1
    92                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text66,global,reloc=2,class=CODE,delta=1
    95                           	psect	text67,global,reloc=2,class=CODE,delta=1
    96                           	psect	text68,global,reloc=2,class=CODE,delta=1
    97                           	psect	text69,global,reloc=2,class=CODE,delta=1
    98                           	psect	text70,global,reloc=2,class=CODE,delta=1
    99                           	psect	text71,global,reloc=2,class=CODE,delta=1
   100                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   101                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text74,global,reloc=2,class=CODE,delta=1
   103                           	psect	text75,global,reloc=2,class=CODE,delta=1
   104                           	psect	text76,global,reloc=2,class=CODE,delta=1
   105                           	psect	text77,global,reloc=2,class=CODE,delta=1
   106                           	psect	text78,global,reloc=2,class=CODE,delta=1
   107                           	psect	text79,global,reloc=2,class=CODE,delta=1
   108                           	psect	text80,global,reloc=2,class=CODE,delta=1
   109                           	psect	text81,global,reloc=2,class=CODE,delta=1
   110                           	psect	text82,global,reloc=2,class=CODE,delta=1
   111                           	psect	text83,global,reloc=2,class=CODE,delta=1
   112                           	psect	text84,global,reloc=2,class=CODE,delta=1
   113                           	psect	text85,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text86,global,reloc=2,class=CODE,delta=1
   115                           	psect	text87,global,reloc=2,class=CODE,delta=1
   116                           	psect	text88,global,reloc=2,class=CODE,delta=1
   117                           	psect	text89,global,reloc=2,class=CODE,delta=1
   118                           	psect	text90,global,reloc=2,class=CODE,delta=1
   119                           	psect	text91,global,reloc=2,class=CODE,delta=1
   120                           	psect	text92,global,reloc=2,class=CODE,delta=1
   121                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text101,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text102,global,reloc=2,class=CODE,delta=1
   131                           	psect	text103,global,reloc=2,class=CODE,delta=1
   132                           	psect	text104,global,reloc=2,class=CODE,delta=1
   133                           	psect	text105,global,reloc=2,class=CODE,delta=1
   134                           	psect	text106,global,reloc=2,class=CODE,delta=1
   135                           	psect	text107,global,reloc=2,class=CODE,delta=1
   136                           	psect	text108,global,reloc=2,class=CODE,delta=1
   137                           	psect	text109,global,reloc=2,class=CODE,delta=1
   138                           	psect	text110,global,reloc=2,class=CODE,delta=1
   139                           	psect	text111,global,reloc=2,class=CODE,delta=1
   140                           	psect	text112,global,reloc=2,class=CODE,delta=1
   141                           	psect	text113,global,reloc=2,class=CODE,delta=1
   142                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text115,global,reloc=2,class=CODE,delta=1
   144                           	psect	text116,global,reloc=2,class=CODE,delta=1
   145                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text118,global,reloc=2,class=CODE,delta=1
   147                           	psect	text119,global,reloc=2,class=CODE,delta=1
   148                           	psect	text120,global,reloc=2,class=CODE,delta=1
   149                           	psect	text121,global,reloc=2,class=CODE,delta=1
   150                           	psect	text122,global,reloc=2,class=CODE,delta=1
   151                           	psect	text123,global,reloc=2,class=CODE,delta=1
   152                           	psect	text124,global,reloc=2,class=CODE,delta=1
   153                           	psect	text125,global,reloc=2,class=CODE,delta=1
   154                           	psect	text126,global,reloc=2,class=CODE,delta=1
   155                           	psect	text127,global,reloc=2,class=CODE,delta=1
   156                           	psect	text128,global,reloc=2,class=CODE,delta=1
   157                           	psect	text129,global,reloc=2,class=CODE,delta=1
   158                           	psect	text130,global,reloc=2,class=CODE,delta=1
   159                           	psect	text131,global,reloc=2,class=CODE,delta=1
   160                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   161                           	psect	text133,global,reloc=2,class=CODE,delta=1
   162                           	psect	text134,global,reloc=2,class=CODE,delta=1
   163                           	psect	text135,global,reloc=2,class=CODE,delta=1
   164                           	psect	text136,global,reloc=2,class=CODE,delta=1
   165                           	psect	text137,global,reloc=2,class=CODE,delta=1
   166                           	psect	text138,global,reloc=2,class=CODE,delta=1
   167                           	psect	text139,global,reloc=2,class=CODE,delta=1
   168                           	psect	text140,global,reloc=2,class=CODE,delta=1
   169                           	psect	text141,global,reloc=2,class=CODE,delta=1
   170                           	psect	text142,global,reloc=2,class=CODE,delta=1
   171                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   172                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   173                           	psect	text144,global,reloc=2,class=CODE,delta=1
   174                           	psect	text145,global,reloc=2,class=CODE,delta=1
   175                           	psect	text146,global,reloc=2,class=CODE,delta=1
   176                           	psect	text147,global,reloc=2,class=CODE,delta=1
   177                           	psect	text148,global,reloc=2,class=CODE,delta=1
   178                           	psect	text149,global,reloc=2,class=CODE,delta=1
   179                           	psect	text150,global,reloc=2,class=CODE,delta=1
   180                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   181                           	psect	text151,global,reloc=2,class=CODE,delta=1
   182                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   183                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   184                           	dabs	1,0x400,48,_BDT
   185                           	dabs	1,0x438,8,_CtrlTrfData
   186                           	dabs	1,0x430,8,_SetupPkt
   187  0000                     
   188                           ; Version 1.45
   189                           ; Generated 16/11/2017 GMT
   190                           ; 
   191                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   192                           ; All rights reserved.
   193                           ; 
   194                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   195                           ; 
   196                           ; Redistribution and use in source and binary forms, with or without modification, are
   197                           ; permitted provided that the following conditions are met:
   198                           ; 
   199                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   200                           ;        conditions and the following disclaimer.
   201                           ; 
   202                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   203                           ;        of conditions and the following disclaimer in the documentation and/or other
   204                           ;        materials provided with the distribution.
   205                           ; 
   206                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   207                           ;        software without specific prior written permission.
   208                           ; 
   209                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   210                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   211                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   212                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   213                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   214                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   215                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   216                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   217                           ; 
   218                           ; 
   219                           ; Code-generator required, PIC18F46J50 Definitions
   220                           ; 
   221                           ; SFR Addresses
   222  0000                     
   223                           	psect	idataBANK1
   224  0047C6                     __pidataBANK1:
   225                           	opt stack 0
   226                           
   227                           ;initializer for Led_MainTask@LedTimer2
   228  0047C6  01                 	db	1
   229  0047C7  01                 	db	1
   230  0047C8  0000               	dw	0
   231  0047CA  0000               	dw	0
   232  0047CC  0000               	dw	0
   233  0047CE  0000               	dw	0
   234                           
   235                           ;initializer for _Led2
   236  0047D0  00                 	db	0
   237  0047D1  00                 	db	0
   238  0047D2  0000               	dw	0
   239  0047D4  0014               	dw	20
   240  0047D6  0014               	dw	20
   241                           
   242                           ;initializer for _Led1
   243  0047D8  00                 	db	0
   244  0047D9  00                 	db	0
   245  0047DA  0000               	dw	0
   246  0047DC  0001               	dw	1
   247  0047DE  0013               	dw	19
   248                           
   249                           ;initializer for Terminal@EchoOption
   250  0047E0  01                 	db	1
   251                           
   252                           ;initializer for _MainSystemTimebaseFlag
   253  0047E1  01                 	db	1
   254                           
   255                           ;initializer for Term_MainSm@TermDelay
   256  0047E2  01                 	db	1
   257  0047E3  01                 	db	1
   258  0047E4  0000               	dw	0
   259  0047E6  0000               	dw	0
   260  0047E8  0000               	dw	0
   261  0047EA  0000               	dw	0
   262                           
   263                           ;initializer for Led_MainTask@LedTimer1
   264  0047EC  01                 	db	1
   265  0047ED  01                 	db	1
   266  0047EE  0000               	dw	0
   267  0047F0  0000               	dw	0
   268  0047F2  0000               	dw	0
   269  0047F4  0000               	dw	0
   270                           
   271                           ;initializer for SendDataSm@SwTimer
   272  0047F6  01                 	db	1
   273  0047F7  01                 	db	1
   274  0047F8  0000               	dw	0
   275  0047FA  0000               	dw	0
   276  0047FC  0000               	dw	0
   277  0047FE  0000               	dw	0
   278                           
   279                           	psect	idataBANK2
   280  0044D6                     __pidataBANK2:
   281                           	opt stack 0
   282                           
   283                           ;initializer for _TaskTable
   284  0044D6  18                 	db	low _MdmWifi_DrvMainFn
   285  0044D7  4F                 	db	high _MdmWifi_DrvMainFn
   286  0044D8  00                 	db	0
   287  0044D9  0000               	dw	0
   288  0044DB  000A               	dw	10
   289  0044DD  00                 	db	0
   290  0044DE  A6                 	db	low _I2cSlv_MainTask
   291  0044DF  42                 	db	high _I2cSlv_MainTask
   292  0044E0  00                 	db	0
   293  0044E1  0000               	dw	0
   294  0044E3  0005               	dw	5
   295  0044E5  00                 	db	0
   296  0044E6  1A                 	db	low _MdmWifi_MainTask
   297  0044E7  49                 	db	high _MdmWifi_MainTask
   298  0044E8  00                 	db	0
   299  0044E9  0000               	dw	0
   300  0044EB  0001               	dw	1
   301  0044ED  00                 	db	0
   302  0044EE  B6                 	db	low _MdmWifiCmd_MainTask
   303  0044EF  4B                 	db	high _MdmWifiCmd_MainTask
   304  0044F0  00                 	db	0
   305  0044F1  0000               	dw	0
   306  0044F3  000A               	dw	10
   307  0044F5  00                 	db	0
   308  0044F6  A0                 	db	low _MdmWifiHttp_MainTask
   309  0044F7  4E                 	db	high _MdmWifiHttp_MainTask
   310  0044F8  00                 	db	0
   311  0044F9  0000               	dw	0
   312  0044FB  000A               	dw	10
   313  0044FD  00                 	db	0
   314  0044FE  92                 	db	low _UsbDevice_MainTask
   315  0044FF  4B                 	db	high _UsbDevice_MainTask
   316  004500  00                 	db	0
   317  004501  0000               	dw	0
   318  004503  0001               	dw	1
   319  004505  00                 	db	0
   320  004506  00                 	db	low _Led_MainTask
   321  004507  48                 	db	high _Led_MainTask
   322  004508  00                 	db	0
   323  004509  0000               	dw	0
   324  00450B  0032               	dw	50
   325  00450D  00                 	db	0
   326  00450E  06                 	db	low _Rtcm_MainTask
   327  00450F  35                 	db	high _Rtcm_MainTask
   328  004510  00                 	db	0
   329  004511  0000               	dw	0
   330  004513  03E8               	dw	1000
   331  004515  00                 	db	0
   332  004516  78                 	db	low _Term_MainTask
   333  004517  4D                 	db	high _Term_MainTask
   334  004518  00                 	db	0
   335  004519  0000               	dw	0
   336  00451B  0064               	dw	100
   337  00451D  00                 	db	0
   338                           
   339                           	psect	mediumconst
   340  00FCD6                     __pmediumconst:
   341                           	opt stack 0
   342  00FCD6  00                 	db	0
   343  00FCD7                     _USB_SD_Ptr:
   344                           	opt stack 0
   345  00FCD7  06                 	db	low _sd000
   346  00FCD8  FF                 	db	high _sd000
   347  00FCD9  BF                 	db	low _sd001
   348  00FCDA  FE                 	db	high _sd001
   349  00FCDB  99                 	db	low _sd002
   350  00FCDC  FE                 	db	high _sd002
   351  00FCDD                     __end_of_USB_SD_Ptr:
   352                           	opt stack 0
   353  00FCDD                     _USB_CD_Ptr:
   354                           	opt stack 0
   355  00FCDD  56                 	db	low _configDescriptor1
   356  00FCDE  FE                 	db	high _configDescriptor1
   357  00FCDF                     __end_of_USB_CD_Ptr:
   358                           	opt stack 0
   359  00FCDF                     _TaskNumber:
   360                           	opt stack 0
   361  00FCDF  0009               	dw	9
   362  00FCE1                     __end_of_TaskNumber:
   363                           	opt stack 0
   364  00FCE1                     _MsgFormat:
   365                           	opt stack 0
   366  00FCE1  48                 	db	72
   367  00FCE2  6F                 	db	111
   368  00FCE3  73                 	db	115
   369  00FCE4  74                 	db	116
   370  00FCE5  20                 	db	32
   371  00FCE6  6D                 	db	109
   372  00FCE7  65                 	db	101
   373  00FCE8  73                 	db	115
   374  00FCE9  73                 	db	115
   375  00FCEA  61                 	db	97
   376  00FCEB  67                 	db	103
   377  00FCEC  65                 	db	101
   378  00FCED  20                 	db	32
   379  00FCEE  66                 	db	102
   380  00FCEF  6F                 	db	111
   381  00FCF0  72                 	db	114
   382  00FCF1  6D                 	db	109
   383  00FCF2  61                 	db	97
   384  00FCF3  74                 	db	116
   385  00FCF4  3A                 	db	58
   386  00FCF5  20                 	db	32
   387  00FCF6  0D                 	db	13
   388  00FCF7  0A                 	db	10
   389  00FCF8  5B                 	db	91
   390  00FCF9  6F                 	db	111
   391  00FCFA  70                 	db	112
   392  00FCFB  5F                 	db	95
   393  00FCFC  74                 	db	116
   394  00FCFD  79                 	db	121
   395  00FCFE  70                 	db	112
   396  00FCFF  65                 	db	101
   397  00FD00  5D                 	db	93
   398  00FD01  3A                 	db	58
   399  00FD02  5B                 	db	91
   400  00FD03  6F                 	db	111
   401  00FD04  70                 	db	112
   402  00FD05  5D                 	db	93
   403  00FD06  3A                 	db	58
   404  00FD07  5B                 	db	91
   405  00FD08  6C                 	db	108
   406  00FD09  65                 	db	101
   407  00FD0A  6E                 	db	110
   408  00FD0B  5D                 	db	93
   409  00FD0C  3A                 	db	58
   410  00FD0D  5B                 	db	91
   411  00FD0E  61                 	db	97
   412  00FD0F  64                 	db	100
   413  00FD10  64                 	db	100
   414  00FD11  72                 	db	114
   415  00FD12  5D                 	db	93
   416  00FD13  3A                 	db	58
   417  00FD14  5B                 	db	91
   418  00FD15  70                 	db	112
   419  00FD16  61                 	db	97
   420  00FD17  79                 	db	121
   421  00FD18  6C                 	db	108
   422  00FD19  6F                 	db	111
   423  00FD1A  61                 	db	97
   424  00FD1B  64                 	db	100
   425  00FD1C  5D                 	db	93
   426  00FD1D  0D                 	db	13
   427  00FD1E  0A                 	db	10
   428  00FD1F  0D                 	db	13
   429  00FD20  0A                 	db	10
   430  00FD21  5B                 	db	91
   431  00FD22  6F                 	db	111
   432  00FD23  70                 	db	112
   433  00FD24  5F                 	db	95
   434  00FD25  74                 	db	116
   435  00FD26  79                 	db	121
   436  00FD27  70                 	db	112
   437  00FD28  65                 	db	101
   438  00FD29  5D                 	db	93
   439  00FD2A  20                 	db	32
   440  00FD2B  3D                 	db	61
   441  00FD2C  20                 	db	32
   442  00FD2D  53                 	db	83
   443  00FD2E  4F                 	db	79
   444  00FD2F  2C                 	db	44
   445  00FD30  53                 	db	83
   446  00FD31  42                 	db	66
   447  00FD32  0D                 	db	13
   448  00FD33  0A                 	db	10
   449  00FD34  5B                 	db	91
   450  00FD35  6F                 	db	111
   451  00FD36  70                 	db	112
   452  00FD37  5D                 	db	93
   453  00FD38  20                 	db	32
   454  00FD39  3D                 	db	61
   455  00FD3A  20                 	db	32
   456  00FD3B  52                 	db	82
   457  00FD3C  3A                 	db	58
   458  00FD3D  20                 	db	32
   459  00FD3E  72                 	db	114
   460  00FD3F  65                 	db	101
   461  00FD40  61                 	db	97
   462  00FD41  64                 	db	100
   463  00FD42  2C                 	db	44
   464  00FD43  57                 	db	87
   465  00FD44  3A                 	db	58
   466  00FD45  20                 	db	32
   467  00FD46  77                 	db	119
   468  00FD47  72                 	db	114
   469  00FD48  69                 	db	105
   470  00FD49  74                 	db	116
   471  00FD4A  65                 	db	101
   472  00FD4B  0D                 	db	13
   473  00FD4C  0A                 	db	10
   474  00FD4D  5B                 	db	91
   475  00FD4E  6C                 	db	108
   476  00FD4F  65                 	db	101
   477  00FD50  6E                 	db	110
   478  00FD51  5D                 	db	93
   479  00FD52  20                 	db	32
   480  00FD53  3D                 	db	61
   481  00FD54  20                 	db	32
   482  00FD55  32                 	db	50
   483  00FD56  20                 	db	32
   484  00FD57  62                 	db	98
   485  00FD58  79                 	db	121
   486  00FD59  74                 	db	116
   487  00FD5A  65                 	db	101
   488  00FD5B  20                 	db	32
   489  00FD5C  41                 	db	65
   490  00FD5D  53                 	db	83
   491  00FD5E  43                 	db	67
   492  00FD5F  49                 	db	73
   493  00FD60  49                 	db	73
   494  00FD61  0D                 	db	13
   495  00FD62  0A                 	db	10
   496  00FD63  5B                 	db	91
   497  00FD64  61                 	db	97
   498  00FD65  64                 	db	100
   499  00FD66  64                 	db	100
   500  00FD67  72                 	db	114
   501  00FD68  5D                 	db	93
   502  00FD69  20                 	db	32
   503  00FD6A  3D                 	db	61
   504  00FD6B  20                 	db	32
   505  00FD6C  32                 	db	50
   506  00FD6D  20                 	db	32
   507  00FD6E  62                 	db	98
   508  00FD6F  79                 	db	121
   509  00FD70  74                 	db	116
   510  00FD71  65                 	db	101
   511  00FD72  20                 	db	32
   512  00FD73  41                 	db	65
   513  00FD74  53                 	db	83
   514  00FD75  43                 	db	67
   515  00FD76  49                 	db	73
   516  00FD77  49                 	db	73
   517  00FD78  0D                 	db	13
   518  00FD79  0A                 	db	10
   519  00FD7A  5B                 	db	91
   520  00FD7B  70                 	db	112
   521  00FD7C  61                 	db	97
   522  00FD7D  79                 	db	121
   523  00FD7E  6C                 	db	108
   524  00FD7F  6F                 	db	111
   525  00FD80  61                 	db	97
   526  00FD81  64                 	db	100
   527  00FD82  5D                 	db	93
   528  00FD83  20                 	db	32
   529  00FD84  3D                 	db	61
   530  00FD85  20                 	db	32
   531  00FD86  6D                 	db	109
   532  00FD87  61                 	db	97
   533  00FD88  78                 	db	120
   534  00FD89  20                 	db	32
   535  00FD8A  32                 	db	50
   536  00FD8B  30                 	db	48
   537  00FD8C  20                 	db	32
   538  00FD8D  62                 	db	98
   539  00FD8E  79                 	db	121
   540  00FD8F  74                 	db	116
   541  00FD90  65                 	db	101
   542  00FD91  20                 	db	32
   543  00FD92  41                 	db	65
   544  00FD93  53                 	db	83
   545  00FD94  43                 	db	67
   546  00FD95  49                 	db	73
   547  00FD96  49                 	db	73
   548  00FD97  0D                 	db	13
   549  00FD98  0A                 	db	10
   550  00FD99  0D                 	db	13
   551  00FD9A  0A                 	db	10
   552  00FD9B  54                 	db	84
   553  00FD9C  65                 	db	101
   554  00FD9D  72                 	db	114
   555  00FD9E  6D                 	db	109
   556  00FD9F  69                 	db	105
   557  00FDA0  6E                 	db	110
   558  00FDA1  61                 	db	97
   559  00FDA2  6C                 	db	108
   560  00FDA3  20                 	db	32
   561  00FDA4  4D                 	db	77
   562  00FDA5  6F                 	db	111
   563  00FDA6  64                 	db	100
   564  00FDA7  65                 	db	101
   565  00FDA8  3A                 	db	58
   566  00FDA9  20                 	db	32
   567  00FDAA  43                 	db	67
   568  00FDAB  4F                 	db	79
   569  00FDAC  4D                 	db	77
   570  00FDAD  4D                 	db	77
   571  00FDAE  41                 	db	65
   572  00FDAF  4E                 	db	78
   573  00FDB0  44                 	db	68
   574  00FDB1  20                 	db	32
   575  00FDB2  4D                 	db	77
   576  00FDB3  4F                 	db	79
   577  00FDB4  44                 	db	68
   578  00FDB5  45                 	db	69
   579  00FDB6  0D                 	db	13
   580  00FDB7  0A                 	db	10
   581  00FDB8  4D                 	db	77
   582  00FDB9  6F                 	db	111
   583  00FDBA  64                 	db	100
   584  00FDBB  65                 	db	101
   585  00FDBC  6D                 	db	109
   586  00FDBD  20                 	db	32
   587  00FDBE  54                 	db	84
   588  00FDBF  79                 	db	121
   589  00FDC0  70                 	db	112
   590  00FDC1  65                 	db	101
   591  00FDC2  3A                 	db	58
   592  00FDC3  20                 	db	32
   593  00FDC4  57                 	db	87
   594  00FDC5  69                 	db	105
   595  00FDC6  46                 	db	70
   596  00FDC7  69                 	db	105
   597  00FDC8  0D                 	db	13
   598  00FDC9  0A                 	db	10
   599  00FDCA  0D                 	db	13
   600  00FDCB  0A                 	db	10
   601  00FDCC  00                 	db	0
   602  00FDCD                     __end_of_MsgFormat:
   603                           	opt stack 0
   604  00FDCD                     _Welcome:
   605                           	opt stack 0
   606  00FDCD  2A                 	db	42
   607  00FDCE  2A                 	db	42
   608  00FDCF  2A                 	db	42
   609  00FDD0  2A                 	db	42
   610  00FDD1  2A                 	db	42
   611  00FDD2  2A                 	db	42
   612  00FDD3  2A                 	db	42
   613  00FDD4  2A                 	db	42
   614  00FDD5  2A                 	db	42
   615  00FDD6  2A                 	db	42
   616  00FDD7  2A                 	db	42
   617  00FDD8  2A                 	db	42
   618  00FDD9  2A                 	db	42
   619  00FDDA  2A                 	db	42
   620  00FDDB  2A                 	db	42
   621  00FDDC  2A                 	db	42
   622  00FDDD  2A                 	db	42
   623  00FDDE  2A                 	db	42
   624  00FDDF  2A                 	db	42
   625  00FDE0  2A                 	db	42
   626  00FDE1  2A                 	db	42
   627  00FDE2  2A                 	db	42
   628  00FDE3  2A                 	db	42
   629  00FDE4  2A                 	db	42
   630  00FDE5  2A                 	db	42
   631  00FDE6  2A                 	db	42
   632  00FDE7  2A                 	db	42
   633  00FDE8  2A                 	db	42
   634  00FDE9  2A                 	db	42
   635  00FDEA  2A                 	db	42
   636  00FDEB  2A                 	db	42
   637  00FDEC  2A                 	db	42
   638  00FDED  2A                 	db	42
   639  00FDEE  2A                 	db	42
   640  00FDEF  2A                 	db	42
   641  00FDF0  2A                 	db	42
   642  00FDF1  2A                 	db	42
   643  00FDF2  2A                 	db	42
   644  00FDF3  2A                 	db	42
   645  00FDF4  2A                 	db	42
   646  00FDF5  2A                 	db	42
   647  00FDF6  2A                 	db	42
   648  00FDF7  2A                 	db	42
   649  00FDF8  2A                 	db	42
   650  00FDF9  2A                 	db	42
   651  00FDFA  2A                 	db	42
   652  00FDFB  2A                 	db	42
   653  00FDFC  2A                 	db	42
   654  00FDFD  2A                 	db	42
   655  00FDFE  0D                 	db	13
   656  00FDFF  0A                 	db	10
   657  00FE00  20                 	db	32
   658  00FE01  20                 	db	32
   659  00FE02  20                 	db	32
   660  00FE03  20                 	db	32
   661  00FE04  20                 	db	32
   662  00FE05  20                 	db	32
   663  00FE06  20                 	db	32
   664  00FE07  20                 	db	32
   665  00FE08  20                 	db	32
   666  00FE09  20                 	db	32
   667  00FE0A  20                 	db	32
   668  00FE0B  20                 	db	32
   669  00FE0C  20                 	db	32
   670  00FE0D  20                 	db	32
   671  00FE0E  20                 	db	32
   672  00FE0F  20                 	db	32
   673  00FE10  20                 	db	32
   674  00FE11  20                 	db	32
   675  00FE12  4D                 	db	77
   676  00FE13  45                 	db	69
   677  00FE14  52                 	db	82
   678  00FE15  43                 	db	67
   679  00FE16  55                 	db	85
   680  00FE17  52                 	db	82
   681  00FE18  59                 	db	89
   682  00FE19  20                 	db	32
   683  00FE1A  53                 	db	83
   684  00FE1B  59                 	db	89
   685  00FE1C  53                 	db	83
   686  00FE1D  54                 	db	84
   687  00FE1E  45                 	db	69
   688  00FE1F  4D                 	db	77
   689  00FE20  0D                 	db	13
   690  00FE21  0A                 	db	10
   691  00FE22  2A                 	db	42
   692  00FE23  2A                 	db	42
   693  00FE24  2A                 	db	42
   694  00FE25  2A                 	db	42
   695  00FE26  2A                 	db	42
   696  00FE27  2A                 	db	42
   697  00FE28  2A                 	db	42
   698  00FE29  2A                 	db	42
   699  00FE2A  2A                 	db	42
   700  00FE2B  2A                 	db	42
   701  00FE2C  2A                 	db	42
   702  00FE2D  2A                 	db	42
   703  00FE2E  2A                 	db	42
   704  00FE2F  2A                 	db	42
   705  00FE30  2A                 	db	42
   706  00FE31  2A                 	db	42
   707  00FE32  2A                 	db	42
   708  00FE33  2A                 	db	42
   709  00FE34  2A                 	db	42
   710  00FE35  2A                 	db	42
   711  00FE36  2A                 	db	42
   712  00FE37  2A                 	db	42
   713  00FE38  2A                 	db	42
   714  00FE39  2A                 	db	42
   715  00FE3A  2A                 	db	42
   716  00FE3B  2A                 	db	42
   717  00FE3C  2A                 	db	42
   718  00FE3D  2A                 	db	42
   719  00FE3E  2A                 	db	42
   720  00FE3F  2A                 	db	42
   721  00FE40  2A                 	db	42
   722  00FE41  2A                 	db	42
   723  00FE42  2A                 	db	42
   724  00FE43  2A                 	db	42
   725  00FE44  2A                 	db	42
   726  00FE45  2A                 	db	42
   727  00FE46  2A                 	db	42
   728  00FE47  2A                 	db	42
   729  00FE48  2A                 	db	42
   730  00FE49  2A                 	db	42
   731  00FE4A  2A                 	db	42
   732  00FE4B  2A                 	db	42
   733  00FE4C  2A                 	db	42
   734  00FE4D  2A                 	db	42
   735  00FE4E  2A                 	db	42
   736  00FE4F  2A                 	db	42
   737  00FE50  2A                 	db	42
   738  00FE51  2A                 	db	42
   739  00FE52  2A                 	db	42
   740  00FE53  0D                 	db	13
   741  00FE54  0A                 	db	10
   742  00FE55  00                 	db	0
   743  00FE56                     __end_of_Welcome:
   744                           	opt stack 0
   745  00FE56                     _configDescriptor1:
   746                           	opt stack 0
   747  00FE56  09                 	db	9
   748  00FE57  02                 	db	2
   749  00FE58  43                 	db	67
   750  00FE59  00                 	db	0
   751  00FE5A  02                 	db	2
   752  00FE5B  01                 	db	1
   753  00FE5C  00                 	db	0
   754  00FE5D  C0                 	db	192
   755  00FE5E  32                 	db	50
   756  00FE5F  09                 	db	9
   757  00FE60  04                 	db	4
   758  00FE61  00                 	db	0
   759  00FE62  00                 	db	0
   760  00FE63  01                 	db	1
   761  00FE64  02                 	db	2
   762  00FE65  02                 	db	2
   763  00FE66  01                 	db	1
   764  00FE67  00                 	db	0
   765  00FE68  05                 	db	5
   766  00FE69  24                 	db	36
   767  00FE6A  00                 	db	0
   768  00FE6B  10                 	db	16
   769  00FE6C  01                 	db	1
   770  00FE6D  04                 	db	4
   771  00FE6E  24                 	db	36
   772  00FE6F  02                 	db	2
   773  00FE70  02                 	db	2
   774  00FE71  05                 	db	5
   775  00FE72  24                 	db	36
   776  00FE73  06                 	db	6
   777  00FE74  00                 	db	0
   778  00FE75  01                 	db	1
   779  00FE76  05                 	db	5
   780  00FE77  24                 	db	36
   781  00FE78  01                 	db	1
   782  00FE79  00                 	db	0
   783  00FE7A  01                 	db	1
   784  00FE7B  07                 	db	7
   785  00FE7C  05                 	db	5
   786  00FE7D  81                 	db	129
   787  00FE7E  03                 	db	3
   788  00FE7F  08                 	db	8
   789  00FE80  00                 	db	0
   790  00FE81  02                 	db	2
   791  00FE82  09                 	db	9
   792  00FE83  04                 	db	4
   793  00FE84  01                 	db	1
   794  00FE85  00                 	db	0
   795  00FE86  02                 	db	2
   796  00FE87  0A                 	db	10
   797  00FE88  00                 	db	0
   798  00FE89  00                 	db	0
   799  00FE8A  00                 	db	0
   800  00FE8B  07                 	db	7
   801  00FE8C  05                 	db	5
   802  00FE8D  02                 	db	2
   803  00FE8E  02                 	db	2
   804  00FE8F  40                 	db	64
   805  00FE90  00                 	db	0
   806  00FE91  00                 	db	0
   807  00FE92  07                 	db	7
   808  00FE93  05                 	db	5
   809  00FE94  82                 	db	130
   810  00FE95  02                 	db	2
   811  00FE96  40                 	db	64
   812  00FE97  00                 	db	0
   813  00FE98  00                 	db	0
   814  00FE99                     __end_of_configDescriptor1:
   815                           	opt stack 0
   816  00FE99                     _sd002:
   817                           	opt stack 0
   818  00FE99  26                 	db	38
   819  00FE9A  03                 	db	3
   820  00FE9B  0054               	dw	84
   821  00FE9D  0065               	dw	101
   822  00FE9F  0072               	dw	114
   823  00FEA1  006D               	dw	109
   824  00FEA3  0069               	dw	105
   825  00FEA5  006E               	dw	110
   826  00FEA7  0061               	dw	97
   827  00FEA9  006C               	dw	108
   828  00FEAB  0020               	dw	32
   829  00FEAD  0049               	dw	73
   830  00FEAF  006E               	dw	110
   831  00FEB1  0074               	dw	116
   832  00FEB3  0065               	dw	101
   833  00FEB5  0072               	dw	114
   834  00FEB7  0066               	dw	102
   835  00FEB9  0061               	dw	97
   836  00FEBB  0063               	dw	99
   837  00FEBD  0065               	dw	101
   838  00FEBF                     __end_of_sd002:
   839                           	opt stack 0
   840  00FEBF                     _sd001:
   841                           	opt stack 0
   842  00FEBF  1E                 	db	30
   843  00FEC0  03                 	db	3
   844  00FEC1  004D               	dw	77
   845  00FEC3  0065               	dw	101
   846  00FEC5  0072               	dw	114
   847  00FEC7  0063               	dw	99
   848  00FEC9  0075               	dw	117
   849  00FECB  0072               	dw	114
   850  00FECD  0079               	dw	121
   851  00FECF  0020               	dw	32
   852  00FED1  0053               	dw	83
   853  00FED3  0079               	dw	121
   854  00FED5  0073               	dw	115
   855  00FED7  0074               	dw	116
   856  00FED9  0065               	dw	101
   857  00FEDB  006D               	dw	109
   858  00FEDD                     __end_of_sd001:
   859                           	opt stack 0
   860  00FEDD                     _MsgReady:
   861                           	opt stack 0
   862  00FEDD  0D                 	db	13
   863  00FEDE  0A                 	db	10
   864  00FEDF  53                 	db	83
   865  00FEE0  79                 	db	121
   866  00FEE1  73                 	db	115
   867  00FEE2  74                 	db	116
   868  00FEE3  65                 	db	101
   869  00FEE4  6D                 	db	109
   870  00FEE5  20                 	db	32
   871  00FEE6  52                 	db	82
   872  00FEE7  65                 	db	101
   873  00FEE8  61                 	db	97
   874  00FEE9  64                 	db	100
   875  00FEEA  79                 	db	121
   876  00FEEB  2E                 	db	46
   877  00FEEC  2E                 	db	46
   878  00FEED  2E                 	db	46
   879  00FEEE  20                 	db	32
   880  00FEEF  0D                 	db	13
   881  00FEF0  0A                 	db	10
   882  00FEF1  0D                 	db	13
   883  00FEF2  0A                 	db	10
   884  00FEF3  00                 	db	0
   885  00FEF4                     __end_of_MsgReady:
   886                           	opt stack 0
   887  00FEF4                     _device_dsc:
   888                           	opt stack 0
   889  00FEF4  12                 	db	18
   890  00FEF5  01                 	db	1
   891  00FEF6  0200               	dw	512
   892  00FEF8  02                 	db	2
   893  00FEF9  00                 	db	0
   894  00FEFA  00                 	db	0
   895  00FEFB  08                 	db	8
   896  00FEFC  04D8               	dw	1240
   897  00FEFE  000A               	dw	10
   898  00FF00  0100               	dw	256
   899  00FF02  01                 	db	1
   900  00FF03  02                 	db	2
   901  00FF04  00                 	db	0
   902  00FF05  01                 	db	1
   903  00FF06                     __end_of_device_dsc:
   904                           	opt stack 0
   905  00FF06                     _sd000:
   906                           	opt stack 0
   907  00FF06  04                 	db	4
   908  00FF07  03                 	db	3
   909  00FF08  0409               	dw	1033
   910  00FF0A                     __end_of_sd000:
   911                           	opt stack 0
   912  0000                     _UEP0bits	set	3878
   913  0000                     _UIEbits	set	3894
   914  0000                     _UADDR	set	3896
   915  0000                     _UIE	set	3894
   916  0000                     _UEIE	set	3895
   917  0000                     _UCFG	set	3897
   918  0000                     _DSCONLbits	set	3916
   919  0000                     _DSGPR1	set	3919
   920  0000                     _DSGPR0	set	3918
   921  0000                     _DSCONHbits	set	3917
   922  0000                     _RTCCAL	set	3902
   923  0000                     _PADCFG1bits	set	3900
   924  0000                     _RTCCFGbits	set	3903
   925  0000                     _UEP1	set	3879
   926  0000                     _UEP0	set	3878
   927  0000                     _T1CONbits	set	4045
   928  0000                     _PORTDbits	set	3971
   929  0000                     _USTAT	set	3940
   930  0000                     _PIR2bits	set	4001
   931  0000                     _UCON	set	3941
   932  0000                     _UIRbits	set	3938
   933  0000                     _UCONbits	set	3941
   934  0000                     _UIR	set	3938
   935  0000                     _UEIR	set	3939
   936  0000                     _PIE2bits	set	4000
   937  0000                     _LATEbits	set	3981
   938  0000                     _TRISEbits	set	3990
   939  0000                     _WDTCONbits	set	4032
   940  0000                     _OSCCONbits	set	4051
   941  0000                     _BAUDCON2	set	3964
   942  0000                     _RCSTA2	set	3996
   943  0000                     _BAUDCON1	set	3966
   944  0000                     _RCSTA1	set	4012
   945  0000                     _TRISCbits	set	3988
   946  0000                     _TXSTA2	set	4008
   947  0000                     _TXSTA1	set	4013
   948  0000                     _RCREG2	set	4010
   949  0000                     _RCREG1	set	4015
   950  0000                     _TXREG2	set	4009
   951  0000                     _TXREG1	set	4014
   952  0000                     _SPBRG2	set	4011
   953  0000                     _SPBRGH2	set	3965
   954  0000                     _SPBRG1	set	4016
   955  0000                     _SPBRGH1	set	3967
   956  0000                     _PR4	set	3959
   957  0000                     _PR2	set	4043
   958  0000                     _PIE1bits	set	3997
   959  0000                     _IPR1bits	set	3999
   960  0000                     _T4CONbits	set	3958
   961  0000                     _T2CONbits	set	4042
   962  0000                     _ALRMVALL	set	3982
   963  0000                     _ALRMVALH	set	3983
   964  0000                     _RTCVALH	set	3993
   965  0000                     _RTCVALL	set	3992
   966  0000                     _ALRMRPTbits	set	3984
   967  0000                     _ALRMCFGbits	set	3985
   968  0000                     _PIE3bits	set	4003
   969  0000                     _IPR3bits	set	4005
   970  0000                     _INTCON2bits	set	4081
   971  0000                     _TRISBbits	set	3987
   972  0000                     _OSCTUNEbits	set	3995
   973  0000                     _SSP2CON1	set	3954
   974  0000                     _TRISDbits	set	3989
   975  0000                     _SSP2BUF	set	3957
   976  0000                     _SSP2CON2bits	set	3953
   977  0000                     _SSP2STAT	set	3955
   978  0000                     _SSP2CON2	set	3953
   979  0000                     _SSP2ADD	set	3956
   980  0000                     _PIR1bits	set	3998
   981  0000                     _PIR3bits	set	4004
   982  0000                     _INTCON3bits	set	4080
   983  0000                     _INTCONbits	set	4082
   984  0000                     _RCONbits	set	4048
   985  00FF0A                     STR_62:
   986  00FF0A  42                 	db	66	;'B'
   987  00FF0B  75                 	db	117	;'u'
   988  00FF0C  69                 	db	105	;'i'
   989  00FF0D  6C                 	db	108	;'l'
   990  00FF0E  64                 	db	100	;'d'
   991  00FF0F  20                 	db	32
   992  00FF10  44                 	db	68	;'D'
   993  00FF11  61                 	db	97	;'a'
   994  00FF12  74                 	db	116	;'t'
   995  00FF13  65                 	db	101	;'e'
   996  00FF14  20                 	db	32
   997  00FF15  28                 	db	40
   998  00FF16  64                 	db	100	;'d'
   999  00FF17  2D                 	db	45
  1000  00FF18  6D                 	db	109	;'m'
  1001  00FF19  2D                 	db	45
  1002  00FF1A  79                 	db	121	;'y'
  1003  00FF1B  29                 	db	41
  1004  00FF1C  3A                 	db	58	;':'
  1005  00FF1D  20                 	db	32
  1006  00FF1E  00                 	db	0
  1007  00FF1F                     STR_58:
  1008  00FF1F  46                 	db	70	;'F'
  1009  00FF20  72                 	db	114	;'r'
  1010  00FF21  61                 	db	97	;'a'
  1011  00FF22  6D                 	db	109	;'m'
  1012  00FF23  65                 	db	101	;'e'
  1013  00FF24  77                 	db	119	;'w'
  1014  00FF25  6F                 	db	111	;'o'
  1015  00FF26  72                 	db	114	;'r'
  1016  00FF27  6B                 	db	107	;'k'
  1017  00FF28  20                 	db	32
  1018  00FF29  56                 	db	86	;'V'
  1019  00FF2A  65                 	db	101	;'e'
  1020  00FF2B  72                 	db	114	;'r'
  1021  00FF2C  73                 	db	115	;'s'
  1022  00FF2D  69                 	db	105	;'i'
  1023  00FF2E  6F                 	db	111	;'o'
  1024  00FF2F  6E                 	db	110	;'n'
  1025  00FF30  3A                 	db	58	;':'
  1026  00FF31  20                 	db	32
  1027  00FF32  00                 	db	0
  1028  00FF33  41                 	db	65	;'A'
  1029  00FF34  54                 	db	84	;'T'
  1030  00FF35  2B                 	db	43
  1031  00FF36  43                 	db	67	;'C'
  1032  00FF37  49                 	db	73	;'I'
  1033  00FF38  50                 	db	80	;'P'
  1034  00FF39  53                 	db	83	;'S'
  1035  00FF3A  45                 	db	69	;'E'
  1036  00FF3B  52                 	db	82	;'R'
  1037  00FF3C  56                 	db	86	;'V'
  1038  00FF3D  45                 	db	69	;'E'
  1039  00FF3E  52                 	db	82	;'R'
  1040  00FF3F  3D                 	db	61	;'='
  1041  00FF40  00                 	db	0
  1042  00FF41  41                 	db	65	;'A'
  1043  00FF42  54                 	db	84	;'T'
  1044  00FF43  2B                 	db	43
  1045  00FF44  43                 	db	67	;'C'
  1046  00FF45  49                 	db	73	;'I'
  1047  00FF46  50                 	db	80	;'P'
  1048  00FF47  43                 	db	67	;'C'
  1049  00FF48  4C                 	db	76	;'L'
  1050  00FF49  4F                 	db	79	;'O'
  1051  00FF4A  53                 	db	83	;'S'
  1052  00FF4B  45                 	db	69	;'E'
  1053  00FF4C  3D                 	db	61	;'='
  1054  00FF4D  00                 	db	0
  1055  00FF4E                     STR_3:
  1056  00FF4E  41                 	db	65	;'A'
  1057  00FF4F  54                 	db	84	;'T'
  1058  00FF50  2B                 	db	43
  1059  00FF51  43                 	db	67	;'C'
  1060  00FF52  49                 	db	73	;'I'
  1061  00FF53  50                 	db	80	;'P'
  1062  00FF54  53                 	db	83	;'S'
  1063  00FF55  54                 	db	84	;'T'
  1064  00FF56  41                 	db	65	;'A'
  1065  00FF57  52                 	db	82	;'R'
  1066  00FF58  54                 	db	84	;'T'
  1067  00FF59  3D                 	db	61	;'='
  1068  00FF5A  00                 	db	0
  1069  00FF5B                     STR_15:
  1070  00FF5B  41                 	db	65	;'A'
  1071  00FF5C  54                 	db	84	;'T'
  1072  00FF5D  2B                 	db	43
  1073  00FF5E  43                 	db	67	;'C'
  1074  00FF5F  49                 	db	73	;'I'
  1075  00FF60  50                 	db	80	;'P'
  1076  00FF61  53                 	db	83	;'S'
  1077  00FF62  45                 	db	69	;'E'
  1078  00FF63  4E                 	db	78	;'N'
  1079  00FF64  44                 	db	68	;'D'
  1080  00FF65  3D                 	db	61	;'='
  1081  00FF66  00                 	db	0
  1082  00FF67  41                 	db	65	;'A'
  1083  00FF68  54                 	db	84	;'T'
  1084  00FF69  2B                 	db	43
  1085  00FF6A  43                 	db	67	;'C'
  1086  00FF6B  49                 	db	73	;'I'
  1087  00FF6C  50                 	db	80	;'P'
  1088  00FF6D  4D                 	db	77	;'M'
  1089  00FF6E  4F                 	db	79	;'O'
  1090  00FF6F  44                 	db	68	;'D'
  1091  00FF70  45                 	db	69	;'E'
  1092  00FF71  3D                 	db	61	;'='
  1093  00FF72  00                 	db	0
  1094  00FF73  41                 	db	65	;'A'
  1095  00FF74  54                 	db	84	;'T'
  1096  00FF75  2B                 	db	43
  1097  00FF76  43                 	db	67	;'C'
  1098  00FF77  49                 	db	73	;'I'
  1099  00FF78  50                 	db	80	;'P'
  1100  00FF79  43                 	db	67	;'C'
  1101  00FF7A  4C                 	db	76	;'L'
  1102  00FF7B  4F                 	db	79	;'O'
  1103  00FF7C  53                 	db	83	;'S'
  1104  00FF7D  45                 	db	69	;'E'
  1105  00FF7E  00                 	db	0
  1106  00FF7F                     STR_31:
  1107  00FF7F  41                 	db	65	;'A'
  1108  00FF80  54                 	db	84	;'T'
  1109  00FF81  2B                 	db	43
  1110  00FF82  43                 	db	67	;'C'
  1111  00FF83  57                 	db	87	;'W'
  1112  00FF84  51                 	db	81	;'Q'
  1113  00FF85  41                 	db	65	;'A'
  1114  00FF86  50                 	db	80	;'P'
  1115  00FF87  0D                 	db	13
  1116  00FF88  0A                 	db	10
  1117  00FF89  00                 	db	0
  1118  00FF8A  41                 	db	65	;'A'
  1119  00FF8B  54                 	db	84	;'T'
  1120  00FF8C  2B                 	db	43
  1121  00FF8D  43                 	db	67	;'C'
  1122  00FF8E  57                 	db	87	;'W'
  1123  00FF8F  4D                 	db	77	;'M'
  1124  00FF90  4F                 	db	79	;'O'
  1125  00FF91  44                 	db	68	;'D'
  1126  00FF92  45                 	db	69	;'E'
  1127  00FF93  3D                 	db	61	;'='
  1128  00FF94  00                 	db	0
  1129  00FF95  41                 	db	65	;'A'
  1130  00FF96  54                 	db	84	;'T'
  1131  00FF97  2B                 	db	43
  1132  00FF98  43                 	db	67	;'C'
  1133  00FF99  49                 	db	73	;'I'
  1134  00FF9A  50                 	db	80	;'P'
  1135  00FF9B  4D                 	db	77	;'M'
  1136  00FF9C  55                 	db	85	;'U'
  1137  00FF9D  58                 	db	88	;'X'
  1138  00FF9E  3D                 	db	61	;'='
  1139  00FF9F  00                 	db	0
  1140  00FFA0  41                 	db	65	;'A'
  1141  00FFA1  54                 	db	84	;'T'
  1142  00FFA2  2B                 	db	43
  1143  00FFA3  43                 	db	67	;'C'
  1144  00FFA4  57                 	db	87	;'W'
  1145  00FFA5  4A                 	db	74	;'J'
  1146  00FFA6  41                 	db	65	;'A'
  1147  00FFA7  50                 	db	80	;'P'
  1148  00FFA8  3D                 	db	61	;'='
  1149  00FFA9  00                 	db	0
  1150  00FFAA  41                 	db	65	;'A'
  1151  00FFAB  54                 	db	84	;'T'
  1152  00FFAC  2B                 	db	43
  1153  00FFAD  43                 	db	67	;'C'
  1154  00FFAE  49                 	db	73	;'I'
  1155  00FFAF  50                 	db	80	;'P'
  1156  00FFB0  41                 	db	65	;'A'
  1157  00FFB1  50                 	db	80	;'P'
  1158  00FFB2  3D                 	db	61	;'='
  1159  00FFB3  00                 	db	0
  1160  00FFB4  41                 	db	65	;'A'
  1161  00FFB5  54                 	db	84	;'T'
  1162  00FFB6  2B                 	db	43
  1163  00FFB7  43                 	db	67	;'C'
  1164  00FFB8  57                 	db	87	;'W'
  1165  00FFB9  53                 	db	83	;'S'
  1166  00FFBA  41                 	db	65	;'A'
  1167  00FFBB  50                 	db	80	;'P'
  1168  00FFBC  3D                 	db	61	;'='
  1169  00FFBD  00                 	db	0
  1170  00FFBE  41                 	db	65	;'A'
  1171  00FFBF  54                 	db	84	;'T'
  1172  00FFC0  2B                 	db	43
  1173  00FFC1  52                 	db	82	;'R'
  1174  00FFC2  53                 	db	83	;'S'
  1175  00FFC3  54                 	db	84	;'T'
  1176  00FFC4  0D                 	db	13
  1177  00FFC5  0A                 	db	10
  1178  00FFC6  00                 	db	0
  1179  00FFC7                     STR_14:
  1180  00FFC7  43                 	db	67	;'C'
  1181  00FFC8  4F                 	db	79	;'O'
  1182  00FFC9  4E                 	db	78	;'N'
  1183  00FFCA  4E                 	db	78	;'N'
  1184  00FFCB  45                 	db	69	;'E'
  1185  00FFCC  43                 	db	67	;'C'
  1186  00FFCD  54                 	db	84	;'T'
  1187  00FFCE  00                 	db	0
  1188  00FFCF                     STR_1:
  1189  00FFCF  45                 	db	69	;'E'
  1190  00FFD0  52                 	db	82	;'R'
  1191  00FFD1  52                 	db	82	;'R'
  1192  00FFD2  4F                 	db	79	;'O'
  1193  00FFD3  52                 	db	82	;'R'
  1194  00FFD4  00                 	db	0
  1195  00FFD5                     STR_2:
  1196  00FFD5  2B                 	db	43
  1197  00FFD6  49                 	db	73	;'I'
  1198  00FFD7  50                 	db	80	;'P'
  1199  00FFD8  44                 	db	68	;'D'
  1200  00FFD9  00                 	db	0
  1201  00FFDA                     STR_28:
  1202  00FFDA  22                 	db	34
  1203  00FFDB  2C                 	db	44
  1204  00FFDC  22                 	db	34
  1205  00FFDD  00                 	db	0
  1206  00FFDE                     STR_7:
  1207  00FFDE  54                 	db	84	;'T'
  1208  00FFDF  43                 	db	67	;'C'
  1209  00FFE0  50                 	db	80	;'P'
  1210  00FFE1  00                 	db	0
  1211  00FFE2                     STR_6:
  1212  00FFE2  55                 	db	85	;'U'
  1213  00FFE3  44                 	db	68	;'D'
  1214  00FFE4  50                 	db	80	;'P'
  1215  00FFE5  00                 	db	0
  1216  00FFE6                     STR_46:
  1217  00FFE6  22                 	db	34
  1218  00FFE7  2C                 	db	44
  1219  00FFE8  00                 	db	0
  1220  00FFE9                     STR_63:
  1221  00FFE9  2D                 	db	45
  1222  00FFEA  00                 	db	0
  1223  00FFEB                     STR_59:
  1224  00FFEB  2E                 	db	46
  1225  00FFEC  00                 	db	0
  1226  00FFED                     STR_33:
  1227  00FFED  30                 	db	48	;'0'
  1228  00FFEE  00                 	db	0
  1229  00FFEF                     STR_22:
  1230  00FFEF  31                 	db	49	;'1'
  1231  00FFF0  00                 	db	0
  1232  00FFF1  32                 	db	50	;'2'
  1233  00FFF2  00                 	db	0
  1234  00FFF3  33                 	db	51	;'3'
  1235  00FFF4  00                 	db	0
  1236  00FFF5                     STR_18:
  1237  00FFF5  3E                 	db	62	;'>'
  1238  00FFF6  00                 	db	0
  1239  0000                     
  1240                           ; #config settings
  1241  00FFF7  00                 	db	0	; dummy byte at the end
  1242  0000                     
  1243                           	psect	cinit
  1244  00248A                     __pcinit:
  1245                           	opt stack 0
  1246  00248A                     start_initialization:
  1247                           	opt stack 0
  1248  00248A                     __initialization:
  1249                           	opt stack 0
  1250                           
  1251                           ; Initialize objects allocated to BANK2 (72 bytes)
  1252                           ; load TBLPTR registers with __pidataBANK2
  1253  00248A  0ED6               	movlw	low __pidataBANK2
  1254  00248C  6EF6               	movwf	tblptrl,c
  1255  00248E  0E44               	movlw	high __pidataBANK2
  1256  002490  6EF7               	movwf	tblptrh,c
  1257  002492  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1258  002494  6EF8               	movwf	tblptru,c
  1259  002496  EE02  F08B         	lfsr	0,__pdataBANK2
  1260  00249A  EE10 F048          	lfsr	1,72
  1261  00249E                     copy_data0:
  1262  00249E  0009               	tblrd		*+
  1263  0024A0  CFF5 FFEE          	movff	tablat,postinc0
  1264  0024A4  50E5               	movf	postdec1,w,c
  1265  0024A6  50E1               	movf	fsr1l,w,c
  1266  0024A8  E1FA               	bnz	copy_data0
  1267                           
  1268                           ; Initialize objects allocated to BANK1 (58 bytes)
  1269                           ; load TBLPTR registers with __pidataBANK1
  1270  0024AA  0EC6               	movlw	low __pidataBANK1
  1271  0024AC  6EF6               	movwf	tblptrl,c
  1272  0024AE  0E47               	movlw	high __pidataBANK1
  1273  0024B0  6EF7               	movwf	tblptrh,c
  1274  0024B2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1275  0024B4  6EF8               	movwf	tblptru,c
  1276  0024B6  EE01  F0C6         	lfsr	0,__pdataBANK1
  1277  0024BA  EE10 F03A          	lfsr	1,58
  1278  0024BE                     copy_data1:
  1279  0024BE  0009               	tblrd		*+
  1280  0024C0  CFF5 FFEE          	movff	tablat,postinc0
  1281  0024C4  50E5               	movf	postdec1,w,c
  1282  0024C6  50E1               	movf	fsr1l,w,c
  1283  0024C8  E1FA               	bnz	copy_data1
  1284                           
  1285                           ; Clear objects allocated to BANK13 (200 bytes)
  1286  0024CA  EE0D  F000         	lfsr	0,__pbssBANK13
  1287  0024CE  0EC8               	movlw	200
  1288  0024D0                     clear_0:
  1289  0024D0  6AEE               	clrf	postinc0,c
  1290  0024D2  06E8               	decf	wreg,f,c
  1291  0024D4  E1FD               	bnz	clear_0
  1292                           
  1293                           ; Clear objects allocated to BANK12 (250 bytes)
  1294  0024D6  EE0C  F000         	lfsr	0,__pbssBANK12
  1295  0024DA  0EFA               	movlw	250
  1296  0024DC                     clear_1:
  1297  0024DC  6AEE               	clrf	postinc0,c
  1298  0024DE  06E8               	decf	wreg,f,c
  1299  0024E0  E1FD               	bnz	clear_1
  1300                           
  1301                           ; Clear objects allocated to BANK11 (250 bytes)
  1302  0024E2  EE0B  F000         	lfsr	0,__pbssBANK11
  1303  0024E6  0EFA               	movlw	250
  1304  0024E8                     clear_2:
  1305  0024E8  6AEE               	clrf	postinc0,c
  1306  0024EA  06E8               	decf	wreg,f,c
  1307  0024EC  E1FD               	bnz	clear_2
  1308                           
  1309                           ; Clear objects allocated to BANK10 (200 bytes)
  1310  0024EE  EE0A  F000         	lfsr	0,__pbssBANK10
  1311  0024F2  0EC8               	movlw	200
  1312  0024F4                     clear_3:
  1313  0024F4  6AEE               	clrf	postinc0,c
  1314  0024F6  06E8               	decf	wreg,f,c
  1315  0024F8  E1FD               	bnz	clear_3
  1316                           
  1317                           ; Clear objects allocated to BANK9 (103 bytes)
  1318  0024FA  EE09  F000         	lfsr	0,__pbssBANK9
  1319  0024FE  0E67               	movlw	103
  1320  002500                     clear_4:
  1321  002500  6AEE               	clrf	postinc0,c
  1322  002502  06E8               	decf	wreg,f,c
  1323  002504  E1FD               	bnz	clear_4
  1324                           
  1325                           ; Clear objects allocated to BANK8 (200 bytes)
  1326  002506  EE08  F000         	lfsr	0,__pbssBANK8
  1327  00250A  0EC8               	movlw	200
  1328  00250C                     clear_5:
  1329  00250C  6AEE               	clrf	postinc0,c
  1330  00250E  06E8               	decf	wreg,f,c
  1331  002510  E1FD               	bnz	clear_5
  1332                           
  1333                           ; Clear objects allocated to BANK7 (253 bytes)
  1334  002512  EE07  F000         	lfsr	0,__pbssBANK7
  1335  002516  0EFD               	movlw	253
  1336  002518                     clear_6:
  1337  002518  6AEE               	clrf	postinc0,c
  1338  00251A  06E8               	decf	wreg,f,c
  1339  00251C  E1FD               	bnz	clear_6
  1340                           
  1341                           ; Clear objects allocated to BANK6 (200 bytes)
  1342  00251E  EE06  F000         	lfsr	0,__pbssBANK6
  1343  002522  0EC8               	movlw	200
  1344  002524                     clear_7:
  1345  002524  6AEE               	clrf	postinc0,c
  1346  002526  06E8               	decf	wreg,f,c
  1347  002528  E1FD               	bnz	clear_7
  1348                           
  1349                           ; Clear objects allocated to BANK5 (220 bytes)
  1350  00252A  EE05  F000         	lfsr	0,__pbssBANK5
  1351  00252E  0EDC               	movlw	220
  1352  002530                     clear_8:
  1353  002530  6AEE               	clrf	postinc0,c
  1354  002532  06E8               	decf	wreg,f,c
  1355  002534  E1FD               	bnz	clear_8
  1356                           
  1357                           ; Clear objects allocated to BANK3 (250 bytes)
  1358  002536  EE03  F000         	lfsr	0,__pbssBANK3
  1359  00253A  0EFA               	movlw	250
  1360  00253C                     clear_9:
  1361  00253C  6AEE               	clrf	postinc0,c
  1362  00253E  06E8               	decf	wreg,f,c
  1363  002540  E1FD               	bnz	clear_9
  1364                           
  1365                           ; Clear objects allocated to BANK2 (139 bytes)
  1366  002542  EE02  F000         	lfsr	0,__pbssBANK2
  1367  002546  0E8B               	movlw	139
  1368  002548                     clear_10:
  1369  002548  6AEE               	clrf	postinc0,c
  1370  00254A  06E8               	decf	wreg,f,c
  1371  00254C  E1FD               	bnz	clear_10
  1372                           
  1373                           ; Clear objects allocated to BANK1 (198 bytes)
  1374  00254E  EE01  F000         	lfsr	0,__pbssBANK1
  1375  002552  0EC6               	movlw	198
  1376  002554                     clear_11:
  1377  002554  6AEE               	clrf	postinc0,c
  1378  002556  06E8               	decf	wreg,f,c
  1379  002558  E1FD               	bnz	clear_11
  1380                           
  1381                           ; Clear objects allocated to BANK4 (164 bytes)
  1382  00255A  EE04  F040         	lfsr	0,__pbssBANK4
  1383  00255E  0EA4               	movlw	164
  1384  002560                     clear_12:
  1385  002560  6AEE               	clrf	postinc0,c
  1386  002562  06E8               	decf	wreg,f,c
  1387  002564  E1FD               	bnz	clear_12
  1388                           
  1389                           ; Clear objects allocated to BANK0 (16 bytes)
  1390  002566  EE00  F0F0         	lfsr	0,__pbssBANK0
  1391  00256A  0E10               	movlw	16
  1392  00256C                     clear_13:
  1393  00256C  6AEE               	clrf	postinc0,c
  1394  00256E  06E8               	decf	wreg,f,c
  1395  002570  E1FD               	bnz	clear_13
  1396                           
  1397                           ; Clear objects allocated to COMRAM (31 bytes)
  1398  002572  EE00  F03E         	lfsr	0,__pbssCOMRAM
  1399  002576  0E1F               	movlw	31
  1400  002578                     clear_14:
  1401  002578  6AEE               	clrf	postinc0,c
  1402  00257A  06E8               	decf	wreg,f,c
  1403  00257C  E1FD               	bnz	clear_14
  1404  00257E                     end_of_initialization:
  1405                           	opt stack 0
  1406  00257E                     __end_of__initialization:
  1407                           	opt stack 0
  1408  00257E  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1409  002580  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1410  002582  0100               	movlb	0
  1411  002584  EF65  F027         	goto	_main	;jump to C main() function
  1412                           tblptru	equ	0xFF8
  1413                           tblptrh	equ	0xFF7
  1414                           tblptrl	equ	0xFF6
  1415                           tablat	equ	0xFF5
  1416                           postinc0	equ	0xFEE
  1417                           wreg	equ	0xFE8
  1418                           postdec1	equ	0xFE5
  1419                           fsr1l	equ	0xFE1
  1420                           
  1421                           	psect	bssCOMRAM
  1422  00003E                     __pbssCOMRAM:
  1423                           	opt stack 0
  1424  00003E                     _pBDTEntryIn:
  1425                           	opt stack 0
  1426  00003E                     	ds	6
  1427  000044                     _CDCDataOutHandle:
  1428                           	opt stack 0
  1429  000044                     	ds	2
  1430  000046                     _cdc_tx_len:
  1431                           	opt stack 0
  1432  000046                     	ds	1
  1433  000047                     _cdc_rx_len:
  1434                           	opt stack 0
  1435  000047                     	ds	1
  1436  000048                     _USBStatusStageEnabledFlag2:
  1437                           	opt stack 0
  1438  000048                     	ds	1
  1439  000049                     _USBStatusStageEnabledFlag1:
  1440                           	opt stack 0
  1441  000049                     	ds	1
  1442  00004A                     _USBStatusStageTimeoutCounter:
  1443                           	opt stack 0
  1444  00004A                     	ds	1
  1445  00004B                     _endpoint_number:
  1446                           	opt stack 0
  1447  00004B                     	ds	1
  1448  00004C                     _controlTransferState:
  1449                           	opt stack 0
  1450  00004C                     	ds	1
  1451  00004D                     _shortPacketStatus:
  1452                           	opt stack 0
  1453  00004D                     	ds	1
  1454  00004E                     _I2cComSts:
  1455                           	opt stack 0
  1456  00004E                     	ds	1
  1457  00004F                     _LenLocal:
  1458                           	opt stack 0
  1459  00004F                     	ds	1
  1460  000050                     _IdLocal:
  1461                           	opt stack 0
  1462  000050                     	ds	1
  1463  000051                     _ModeLocal:
  1464                           	opt stack 0
  1465  000051                     	ds	1
  1466  000052                     _USBActiveConfiguration:
  1467                           	opt stack 0
  1468  000052                     	ds	1
  1469  000053                     _I2cReadDataEvt:
  1470                           	opt stack 0
  1471  000053                     	ds	1
  1472  000054                     _I2cWriteDataEvt:
  1473                           	opt stack 0
  1474  000054                     	ds	1
  1475  000055                     _WifiReceiveData:
  1476                           	opt stack 0
  1477  000055                     	ds	1
  1478  000056                     _WifiSendData:
  1479                           	opt stack 0
  1480  000056                     	ds	1
  1481  000057                     _StartConnection:
  1482                           	opt stack 0
  1483  000057                     	ds	1
  1484  000058                     _WifiReceiveNetData:
  1485                           	opt stack 0
  1486  000058                     	ds	1
  1487  000059                     _NewWifiPacketParser:
  1488                           	opt stack 0
  1489  000059                     	ds	1
  1490  00005A                     _NewWifiPacket:
  1491                           	opt stack 0
  1492  00005A                     	ds	1
  1493  00005B                     _StartWifiModem:
  1494                           	opt stack 0
  1495  00005B                     	ds	1
  1496  00005C                     _NewWifiUartData:
  1497                           	opt stack 0
  1498  00005C                     	ds	1
  1499                           tblptru	equ	0xFF8
  1500                           tblptrh	equ	0xFF7
  1501                           tblptrl	equ	0xFF6
  1502                           tablat	equ	0xFF5
  1503                           postinc0	equ	0xFEE
  1504                           wreg	equ	0xFE8
  1505                           postdec1	equ	0xFE5
  1506                           fsr1l	equ	0xFE1
  1507                           
  1508                           	psect	bssBANK0
  1509  0000F0                     __pbssBANK0:
  1510                           	opt stack 0
  1511  0000F0                     _inPipes:
  1512                           	opt stack 0
  1513  0000F0                     	ds	6
  1514  0000F6                     _pBDTEntryEP0OutNext:
  1515                           	opt stack 0
  1516  0000F6                     	ds	2
  1517  0000F8                     _pBDTEntryEP0OutCurrent:
  1518                           	opt stack 0
  1519  0000F8                     	ds	2
  1520  0000FA                     Terminal@PackageLen:
  1521                           	opt stack 0
  1522  0000FA                     	ds	1
  1523  0000FB                     _cdc_trf_state:
  1524                           	opt stack 0
  1525  0000FB                     	ds	1
  1526  0000FC                     _USBDeferStatusStagePacket:
  1527                           	opt stack 0
  1528  0000FC                     	ds	1
  1529  0000FD                     _USBDeviceState:
  1530                           	opt stack 0
  1531  0000FD                     	ds	1
  1532  0000FE                     _SystemState:
  1533                           	opt stack 0
  1534  0000FE                     	ds	1
  1535  0000FF                     _USTATcopy:
  1536                           	opt stack 0
  1537  0000FF                     	ds	1
  1538                           tblptru	equ	0xFF8
  1539                           tblptrh	equ	0xFF7
  1540                           tblptrl	equ	0xFF6
  1541                           tablat	equ	0xFF5
  1542                           postinc0	equ	0xFEE
  1543                           wreg	equ	0xFE8
  1544                           postdec1	equ	0xFE5
  1545                           fsr1l	equ	0xFE1
  1546                           
  1547                           	psect	bssBANK1
  1548  000100                     __pbssBANK1:
  1549                           	opt stack 0
  1550  000100                     _cdc_notice:
  1551                           	opt stack 0
  1552  000100                     	ds	10
  1553  00010A                     _Rtcm_SystemDate:
  1554                           	opt stack 0
  1555  00010A                     	ds	8
  1556  000112                     _outPipes:
  1557                           	opt stack 0
  1558  000112                     	ds	8
  1559  00011A                     _Rtcm_RtccAlarm:
  1560                           	opt stack 0
  1561  00011A                     	ds	6
  1562  000120                     _pBDTEntryOut:
  1563                           	opt stack 0
  1564  000120                     	ds	6
  1565  000126                     _BaudRateGen:
  1566                           	opt stack 0
  1567  000126                     	ds	4
  1568  00012A                     _USB1msTickCount:
  1569                           	opt stack 0
  1570  00012A                     	ds	4
  1571  00012E                     _OsTmr_OsTickCounter:
  1572                           	opt stack 0
  1573  00012E                     	ds	4
  1574  000132                     _pCDCDst:
  1575                           	opt stack 0
  1576  000132                     	ds	3
  1577  000135                     _pCDCSrc:
  1578                           	opt stack 0
  1579  000135                     	ds	3
  1580  000138                     _ep_data_out:
  1581                           	opt stack 0
  1582  000138                     	ds	3
  1583  00013B                     _ep_data_in:
  1584                           	opt stack 0
  1585  00013B                     	ds	3
  1586  00013E                     	ds	2
  1587  000140                     _CDCDataInHandle:
  1588                           	opt stack 0
  1589  000140                     	ds	2
  1590  000142                     _pDst:
  1591                           	opt stack 0
  1592  000142                     	ds	2
  1593  000144                     UpdateSchFlag@InterruptCounter:
  1594                           	opt stack 0
  1595  000144                     	ds	2
  1596  000146                     MdmWifi_StartWifiModemSm@Counter:
  1597                           	opt stack 0
  1598  000146                     	ds	2
  1599  000148                     _RxLen:
  1600                           	opt stack 0
  1601  000148                     	ds	2
  1602  00014A                     _MdmWifi_UartRxCounter:
  1603                           	opt stack 0
  1604  00014A                     	ds	2
  1605  00014C                     _ExtInt1IsrCallback:
  1606                           	opt stack 0
  1607  00014C                     	ds	2
  1608  00014E                     _ExtInt0IsrCallback:
  1609                           	opt stack 0
  1610  00014E                     	ds	2
  1611  000150                     _RtccIsrCallback:
  1612                           	opt stack 0
  1613  000150                     	ds	2
  1614  000152                     _Tmr4IsrCallback:
  1615                           	opt stack 0
  1616  000152                     	ds	2
  1617  000154                     _Tmr2IsrCallback:
  1618                           	opt stack 0
  1619  000154                     	ds	2
  1620  000156                     Term_MainSm@TermMainSmState:
  1621                           	opt stack 0
  1622  000156                     	ds	1
  1623  000157                     Terminal@FormatOption:
  1624                           	opt stack 0
  1625  000157                     	ds	1
  1626  000158                     Terminal@SlaveAddr:
  1627                           	opt stack 0
  1628  000158                     	ds	1
  1629  000159                     Terminal@TermState:
  1630                           	opt stack 0
  1631  000159                     	ds	1
  1632  00015A                     WifiTerminal@FirstRecFlag:
  1633                           	opt stack 0
  1634  00015A                     	ds	1
  1635  00015B                     _control_signal_bitmap:
  1636                           	opt stack 0
  1637  00015B                     	ds	1
  1638  00015C                     _cdc_mem_type:
  1639                           	opt stack 0
  1640  00015C                     	ds	1
  1641  00015D                     _USBTicksSinceSuspendEnd:
  1642                           	opt stack 0
  1643  00015D                     	ds	1
  1644  00015E                     _USBDeferOUTDataStagePackets:
  1645                           	opt stack 0
  1646  00015E                     	ds	1
  1647  00015F                     _USBDeferINDataStagePackets:
  1648                           	opt stack 0
  1649  00015F                     	ds	1
  1650  000160                     _BothEP0OutUOWNsSet:
  1651                           	opt stack 0
  1652  000160                     	ds	1
  1653  000161                     _USBBusIsSuspended:
  1654                           	opt stack 0
  1655  000161                     	ds	1
  1656  000162                     _RemoteWakeup:
  1657                           	opt stack 0
  1658  000162                     	ds	1
  1659  000163                     I2cSendMsgSm@I2cComState:
  1660                           	opt stack 0
  1661  000163                     	ds	1
  1662  000164                     _I2cBusStatus:
  1663                           	opt stack 0
  1664  000164                     	ds	1
  1665  000165                     ReceiveDataSm@WifiReceiveDataState:
  1666                           	opt stack 0
  1667  000165                     	ds	1
  1668  000166                     SendDataSm@WifiSendDataState:
  1669                           	opt stack 0
  1670  000166                     	ds	1
  1671  000167                     StartConnectionSm@StartConnState:
  1672                           	opt stack 0
  1673  000167                     	ds	1
  1674  000168                     _ConnStatus:
  1675                           	opt stack 0
  1676  000168                     	ds	1
  1677  000169                     _PortLocal:
  1678                           	opt stack 0
  1679  000169                     	ds	1
  1680  00016A                     _ProtocolLocal:
  1681                           	opt stack 0
  1682  00016A                     	ds	1
  1683  00016B                     MdmWifiGetUartData@Counter:
  1684                           	opt stack 0
  1685  00016B                     	ds	1
  1686  00016C                     MdmWifiGetUartData@WifiUartGetDataState:
  1687                           	opt stack 0
  1688  00016C                     	ds	1
  1689  00016D                     MdmWifi_StartWifiModemSm@WifiModeSmState:
  1690                           	opt stack 0
  1691  00016D                     	ds	1
  1692  00016E                     _WifiMdmStatus:
  1693                           	opt stack 0
  1694  00016E                     	ds	1
  1695  00016F                     Uart_Uart1RxIsr@UartRxData:
  1696                           	opt stack 0
  1697  00016F                     	ds	1
  1698  000170                     I2c_ReadData@ReadStatus:
  1699                           	opt stack 0
  1700  000170                     	ds	1
  1701  000171                     I2c_ReadData@TentativeCounter:
  1702                           	opt stack 0
  1703  000171                     	ds	1
  1704  000172                     I2c_ReadData@DataCounter:
  1705                           	opt stack 0
  1706  000172                     	ds	1
  1707  000173                     I2c_ReadData@I2cReadState:
  1708                           	opt stack 0
  1709  000173                     	ds	1
  1710  000174                     I2c_WriteData@WriteStatus:
  1711                           	opt stack 0
  1712  000174                     	ds	1
  1713  000175                     I2c_WriteData@TentativeCounter:
  1714                           	opt stack 0
  1715  000175                     	ds	1
  1716  000176                     I2c_WriteData@I2cNextState:
  1717                           	opt stack 0
  1718  000176                     	ds	1
  1719  000177                     I2c_WriteData@I2cWriteState:
  1720                           	opt stack 0
  1721  000177                     	ds	1
  1722  000178                     _UartConfig:
  1723                           	opt stack 0
  1724  000178                     	ds	21
  1725  00018D                     _I2cConfig:
  1726                           	opt stack 0
  1727  00018D                     	ds	10
  1728  000197                     _dummy_encapsulated_cmd_response:
  1729                           	opt stack 0
  1730  000197                     	ds	8
  1731  00019F                     _line_coding:
  1732                           	opt stack 0
  1733  00019F                     	ds	7
  1734  0001A6                     _I2cRxPacket:
  1735                           	opt stack 0
  1736  0001A6                     	ds	6
  1737  0001AC                     _I2cTxPacket:
  1738                           	opt stack 0
  1739  0001AC                     	ds	5
  1740  0001B1                     Terminal@Addr:
  1741                           	opt stack 0
  1742  0001B1                     	ds	4
  1743  0001B5                     Terminal@Len:
  1744                           	opt stack 0
  1745  0001B5                     	ds	4
  1746  0001B9                     _AlCfg:
  1747                           	opt stack 0
  1748  0001B9                     	ds	4
  1749  0001BD                     _RtcConfig:
  1750                           	opt stack 0
  1751  0001BD                     	ds	4
  1752  0001C1                     _USBAlternateInterface:
  1753                           	opt stack 0
  1754  0001C1                     	ds	2
  1755  0001C3                     _AlarmEvent:
  1756                           	opt stack 0
  1757  0001C3                     	ds	1
  1758  0001C4                     I2cDummyTx@DummyBuffer:
  1759                           	opt stack 0
  1760  0001C4                     	ds	1
  1761  0001C5                     _WifiGenericError:
  1762                           	opt stack 0
  1763  0001C5                     	ds	1
  1764                           tblptru	equ	0xFF8
  1765                           tblptrh	equ	0xFF7
  1766                           tblptrl	equ	0xFF6
  1767                           tablat	equ	0xFF5
  1768                           postinc0	equ	0xFEE
  1769                           wreg	equ	0xFE8
  1770                           postdec1	equ	0xFE5
  1771                           fsr1l	equ	0xFE1
  1772                           
  1773                           	psect	dataBANK1
  1774  0001C6                     __pdataBANK1:
  1775                           	opt stack 0
  1776  0001C6                     	ds	10
  1777  0001D0                     	ds	8
  1778  0001D8                     	ds	8
  1779  0001E0                     Terminal@EchoOption:
  1780                           	opt stack 0
  1781  0001E0                     	ds	1
  1782  0001E1                     _MainSystemTimebaseFlag:
  1783                           	opt stack 0
  1784  0001E1                     	ds	1
  1785  0001E2                     Term_MainSm@TermDelay:
  1786                           	opt stack 0
  1787  0001E2                     	ds	10
  1788  0001EC                     Led_MainTask@LedTimer1:
  1789                           	opt stack 0
  1790  0001EC                     	ds	10
  1791  0001F6                     SendDataSm@SwTimer:
  1792                           	opt stack 0
  1793  0001F6                     	ds	10
  1794                           tblptru	equ	0xFF8
  1795                           tblptrh	equ	0xFF7
  1796                           tblptrl	equ	0xFF6
  1797                           tablat	equ	0xFF5
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           postdec1	equ	0xFE5
  1801                           fsr1l	equ	0xFE1
  1802                           
  1803                           	psect	bssBANK2
  1804  000200                     __pbssBANK2:
  1805                           	opt stack 0
  1806  000200                     _cdc_data_rx:
  1807                           	opt stack 0
  1808  000200                     	ds	64
  1809  000240                     Terminal@TermRxBuffer:
  1810                           	opt stack 0
  1811  000240                     	ds	50
  1812  000272                     _AddressLocal:
  1813                           	opt stack 0
  1814  000272                     	ds	25
  1815                           tblptru	equ	0xFF8
  1816                           tblptrh	equ	0xFF7
  1817                           tblptrl	equ	0xFF6
  1818                           tablat	equ	0xFF5
  1819                           postinc0	equ	0xFEE
  1820                           wreg	equ	0xFE8
  1821                           postdec1	equ	0xFE5
  1822                           fsr1l	equ	0xFE1
  1823                           
  1824                           	psect	dataBANK2
  1825  00028B                     __pdataBANK2:
  1826                           	opt stack 0
  1827  00028B                     _TaskTable:
  1828                           	opt stack 0
  1829  00028B                     	ds	72
  1830                           tblptru	equ	0xFF8
  1831                           tblptrh	equ	0xFF7
  1832                           tblptrl	equ	0xFF6
  1833                           tablat	equ	0xFF5
  1834                           postinc0	equ	0xFEE
  1835                           wreg	equ	0xFE8
  1836                           postdec1	equ	0xFE5
  1837                           fsr1l	equ	0xFE1
  1838                           
  1839                           	psect	bssBANK3
  1840  000300                     __pbssBANK3:
  1841                           	opt stack 0
  1842  000300                     Terminal@UsbRxBuffer:
  1843                           	opt stack 0
  1844  000300                     	ds	200
  1845  0003C8                     Terminal@TermTxBuffer:
  1846                           	opt stack 0
  1847  0003C8                     	ds	50
  1848                           tblptru	equ	0xFF8
  1849                           tblptrh	equ	0xFF7
  1850                           tblptrl	equ	0xFF6
  1851                           tablat	equ	0xFF5
  1852                           postinc0	equ	0xFEE
  1853                           wreg	equ	0xFE8
  1854                           postdec1	equ	0xFE5
  1855                           fsr1l	equ	0xFE1
  1856                           
  1857                           	psect	bssBANK4
  1858  000440                     __pbssBANK4:
  1859                           	opt stack 0
  1860  000440                     Terminal@Payload:
  1861                           	opt stack 0
  1862  000440                     	ds	100
  1863  0004A4                     _cdc_data_tx:
  1864                           	opt stack 0
  1865  0004A4                     	ds	64
  1866                           tblptru	equ	0xFF8
  1867                           tblptrh	equ	0xFF7
  1868                           tblptrl	equ	0xFF6
  1869                           tablat	equ	0xFF5
  1870                           postinc0	equ	0xFEE
  1871                           wreg	equ	0xFE8
  1872                           postdec1	equ	0xFE5
  1873                           fsr1l	equ	0xFE1
  1874                           
  1875                           	psect	bssBANK5
  1876  000500                     __pbssBANK5:
  1877                           	opt stack 0
  1878  000500                     _OsAlarms:
  1879                           	opt stack 0
  1880  000500                     	ds	220
  1881                           tblptru	equ	0xFF8
  1882                           tblptrh	equ	0xFF7
  1883                           tblptrl	equ	0xFF6
  1884                           tablat	equ	0xFF5
  1885                           postinc0	equ	0xFEE
  1886                           wreg	equ	0xFE8
  1887                           postdec1	equ	0xFE5
  1888                           fsr1l	equ	0xFE1
  1889                           
  1890                           	psect	bssBANK6
  1891  000600                     __pbssBANK6:
  1892                           	opt stack 0
  1893  000600                     _MdmWifi_UartTxBuffer:
  1894                           	opt stack 0
  1895  000600                     	ds	100
  1896  000664                     _BufferLocal:
  1897                           	opt stack 0
  1898  000664                     	ds	100
  1899                           tblptru	equ	0xFF8
  1900                           tblptrh	equ	0xFF7
  1901                           tblptrl	equ	0xFF6
  1902                           tablat	equ	0xFF5
  1903                           postinc0	equ	0xFEE
  1904                           wreg	equ	0xFE8
  1905                           postdec1	equ	0xFE5
  1906                           fsr1l	equ	0xFE1
  1907                           
  1908                           	psect	bssBANK7
  1909  000700                     __pbssBANK7:
  1910                           	opt stack 0
  1911  000700                     _WifiRxPacket:
  1912                           	opt stack 0
  1913  000700                     	ds	253
  1914                           tblptru	equ	0xFF8
  1915                           tblptrh	equ	0xFF7
  1916                           tblptrl	equ	0xFF6
  1917                           tablat	equ	0xFF5
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           postdec1	equ	0xFE5
  1921                           fsr1l	equ	0xFE1
  1922                           
  1923                           	psect	bssBANK8
  1924  000800                     __pbssBANK8:
  1925                           	opt stack 0
  1926  000800                     WifiTerminal@UartBuffer:
  1927                           	opt stack 0
  1928  000800                     	ds	200
  1929                           tblptru	equ	0xFF8
  1930                           tblptrh	equ	0xFF7
  1931                           tblptrl	equ	0xFF6
  1932                           tablat	equ	0xFF5
  1933                           postinc0	equ	0xFEE
  1934                           wreg	equ	0xFE8
  1935                           postdec1	equ	0xFE5
  1936                           fsr1l	equ	0xFE1
  1937                           
  1938                           	psect	bssBANK9
  1939  000900                     __pbssBANK9:
  1940                           	opt stack 0
  1941  000900                     _WifiTxPacket:
  1942                           	opt stack 0
  1943  000900                     	ds	103
  1944                           tblptru	equ	0xFF8
  1945                           tblptrh	equ	0xFF7
  1946                           tblptrl	equ	0xFF6
  1947                           tablat	equ	0xFF5
  1948                           postinc0	equ	0xFEE
  1949                           wreg	equ	0xFE8
  1950                           postdec1	equ	0xFE5
  1951                           fsr1l	equ	0xFE1
  1952                           
  1953                           	psect	bssBANK10
  1954  000A00                     __pbssBANK10:
  1955                           	opt stack 0
  1956  000A00                     WifiTerminal@UsbBuffer:
  1957                           	opt stack 0
  1958  000A00                     	ds	200
  1959                           tblptru	equ	0xFF8
  1960                           tblptrh	equ	0xFF7
  1961                           tblptrl	equ	0xFF6
  1962                           tablat	equ	0xFF5
  1963                           postinc0	equ	0xFEE
  1964                           wreg	equ	0xFE8
  1965                           postdec1	equ	0xFE5
  1966                           fsr1l	equ	0xFE1
  1967                           
  1968                           	psect	bssBANK11
  1969  000B00                     __pbssBANK11:
  1970                           	opt stack 0
  1971  000B00                     _MdmWifi_UartRxBuffer:
  1972                           	opt stack 0
  1973  000B00                     	ds	250
  1974                           tblptru	equ	0xFF8
  1975                           tblptrh	equ	0xFF7
  1976                           tblptrl	equ	0xFF6
  1977                           tablat	equ	0xFF5
  1978                           postinc0	equ	0xFEE
  1979                           wreg	equ	0xFE8
  1980                           postdec1	equ	0xFE5
  1981                           fsr1l	equ	0xFE1
  1982                           
  1983                           	psect	bssBANK12
  1984  000C00                     __pbssBANK12:
  1985                           	opt stack 0
  1986  000C00                     _RxBuffer:
  1987                           	opt stack 0
  1988  000C00                     	ds	250
  1989                           tblptru	equ	0xFF8
  1990                           tblptrh	equ	0xFF7
  1991                           tblptrl	equ	0xFF6
  1992                           tablat	equ	0xFF5
  1993                           postinc0	equ	0xFEE
  1994                           wreg	equ	0xFE8
  1995                           postdec1	equ	0xFE5
  1996                           fsr1l	equ	0xFE1
  1997                           
  1998                           	psect	bssBANK13
  1999  000D00                     __pbssBANK13:
  2000                           	opt stack 0
  2001  000D00                     	ds	200
  2002                           tblptru	equ	0xFF8
  2003                           tblptrh	equ	0xFF7
  2004                           tblptrl	equ	0xFF6
  2005                           tablat	equ	0xFF5
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           postdec1	equ	0xFE5
  2009                           fsr1l	equ	0xFE1
  2010                           
  2011                           	psect	cstackBANK0
  2012  000060                     __pcstackBANK0:
  2013                           	opt stack 0
  2014  000060                     ??_isdigit:
  2015  000060                     ??_isspace:
  2016  000060                     ??_isupper:
  2017  000060                     ??_Rtcc_GetRtccValue:
  2018  000060                     ??_UartTxBufferStatus:
  2019  000060                     ??_USBStdGetDscHandler:
  2020  000060                     ??_USBStdGetStatusHandler:
  2021  000060                     ?_USBTransferOnePacket:
  2022                           	opt stack 0
  2023  000060                     ?_strlen:
  2024                           	opt stack 0
  2025  000060                     ?_strchr:
  2026                           	opt stack 0
  2027  000060                     ?___wmul:
  2028                           	opt stack 0
  2029  000060                     ?___awdiv:
  2030                           	opt stack 0
  2031  000060                     ?___awmod:
  2032                           	opt stack 0
  2033  000060                     ?___lwdiv:
  2034                           	opt stack 0
  2035  000060                     ?___lwmod:
  2036                           	opt stack 0
  2037  000060                     ?_GetOsTickCounter:
  2038                           	opt stack 0
  2039  000060                     ?___lmul:
  2040                           	opt stack 0
  2041  000060                     Irq_InitIntController@GlobalInt_HighPInt:
  2042                           	opt stack 0
  2043  000060                     SetAckStatus@AckSts:
  2044                           	opt stack 0
  2045  000060                     WriteByte@Byte:
  2046                           	opt stack 0
  2047  000060                     ReadByte@Byte:
  2048                           	opt stack 0
  2049  000060                     RtccIrqInit@Priority:
  2050                           	opt stack 0
  2051  000060                     Rtcc_SetRtcStatus@Status:
  2052                           	opt stack 0
  2053  000060                     TmrBInit@Prescaler:
  2054                           	opt stack 0
  2055  000060                     Tmr_TmrBIrqSet@Priority:
  2056                           	opt stack 0
  2057  000060                     Tmr_StartTmr@TmrNumb:
  2058                           	opt stack 0
  2059  000060                     UartWriteByte@ByteToWrite:
  2060                           	opt stack 0
  2061  000060                     USBTransferOnePacket@dir:
  2062                           	opt stack 0
  2063  000060                     USBConfigureEndpoint@direction:
  2064                           	opt stack 0
  2065  000060                     USBCtrlTrfTxService@byteToSend:
  2066                           	opt stack 0
  2067  000060                     USBCtrlTrfRxService@i:
  2068                           	opt stack 0
  2069  000060                     toupper@c:
  2070                           	opt stack 0
  2071  000060                     Mcu_StartSystemPll@PllStartupCounter:
  2072                           	opt stack 0
  2073  000060                     Rtcc_AlarmConfig@AlarmConfig:
  2074                           	opt stack 0
  2075  000060                     Rtcc_RegisterRtcIsrCallback@IsrCallback:
  2076                           	opt stack 0
  2077  000060                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2078                           	opt stack 0
  2079  000060                     GenerateEvt@Event:
  2080                           	opt stack 0
  2081  000060                     ReceiveEvt@Event:
  2082                           	opt stack 0
  2083  000060                     StringCopy@SourceStr:
  2084                           	opt stack 0
  2085  000060                     ClearBuffer@Buffer:
  2086                           	opt stack 0
  2087  000060                     ___wmul@multiplier:
  2088                           	opt stack 0
  2089  000060                     ___awdiv@dividend:
  2090                           	opt stack 0
  2091  000060                     ___awmod@dividend:
  2092                           	opt stack 0
  2093  000060                     ___lwdiv@dividend:
  2094                           	opt stack 0
  2095  000060                     ___lwmod@dividend:
  2096                           	opt stack 0
  2097  000060                     memcpy@d1:
  2098                           	opt stack 0
  2099  000060                     memset@p1:
  2100                           	opt stack 0
  2101  000060                     strcat@to:
  2102                           	opt stack 0
  2103  000060                     strcpy@to:
  2104                           	opt stack 0
  2105  000060                     strlen@s:
  2106                           	opt stack 0
  2107  000060                     strchr@ptr:
  2108                           	opt stack 0
  2109  000060                     ___lmul@multiplier:
  2110                           	opt stack 0
  2111                           
  2112                           ; 4 bytes @ 0x0
  2113  000060                     	ds	1
  2114  000061                     ??_USBConfigureEndpoint:
  2115  000061                     Irq_InitIntController@PerInt_LowPInt:
  2116                           	opt stack 0
  2117  000061                     Rtcc_GetRtccValue@RtccPtrVal:
  2118                           	opt stack 0
  2119  000061                     TmrBInit@Postscaler:
  2120                           	opt stack 0
  2121  000061                     Tmr_TmrBIrqSet@TmrIrqSts:
  2122                           	opt stack 0
  2123  000061                     UartWriteByte@Module:
  2124                           	opt stack 0
  2125  000061                     UartTxBufferStatus@Module:
  2126                           	opt stack 0
  2127  000061                     USBCtrlTrfRxService@byteToRead:
  2128                           	opt stack 0
  2129  000061                     USBCtrlTrfInHandler@lastDTS:
  2130                           	opt stack 0
  2131  000061                     _isdigit$5592:
  2132                           	opt stack 0
  2133  000061                     _isspace$5860:
  2134                           	opt stack 0
  2135  000061                     _isupper$5863:
  2136                           	opt stack 0
  2137  000061                     I2c_WriteData@WritePacket:
  2138                           	opt stack 0
  2139  000061                     Rtcc_RtcConfig@RtcConfig:
  2140                           	opt stack 0
  2141  000061                     USBTransferOnePacket@data:
  2142                           	opt stack 0
  2143  000061                     USBStdGetStatusHandler@p:
  2144                           	opt stack 0
  2145                           
  2146                           ; 2 bytes @ 0x1
  2147  000061                     	ds	1
  2148  000062                     ??_strlen:
  2149  000062                     ??_Rtcc_AlarmConfig:
  2150  000062                     ??_TmrBInit:
  2151  000062                     Irq_InitIntController@IntPriorityEn:
  2152                           	opt stack 0
  2153  000062                     Rtcc_GetRtccValue@RetValue:
  2154                           	opt stack 0
  2155  000062                     Tmr_TmrBIrqSet@TmrNumb:
  2156                           	opt stack 0
  2157  000062                     UartTxBufferStatus@TxBufferStatus:
  2158                           	opt stack 0
  2159  000062                     GenerateEvt@EventStatus:
  2160                           	opt stack 0
  2161  000062                     isdigit@c:
  2162                           	opt stack 0
  2163  000062                     isspace@c:
  2164                           	opt stack 0
  2165  000062                     isupper@c:
  2166                           	opt stack 0
  2167  000062                     Rtcm_SetAlarmAction@Action:
  2168                           	opt stack 0
  2169  000062                     StringCopy@DestStr:
  2170                           	opt stack 0
  2171  000062                     ClearBuffer@Len:
  2172                           	opt stack 0
  2173  000062                     ___wmul@multiplicand:
  2174                           	opt stack 0
  2175  000062                     ___awdiv@divisor:
  2176                           	opt stack 0
  2177  000062                     ___awmod@divisor:
  2178                           	opt stack 0
  2179  000062                     ___lwdiv@divisor:
  2180                           	opt stack 0
  2181  000062                     ___lwmod@divisor:
  2182                           	opt stack 0
  2183  000062                     memcpy@s1:
  2184                           	opt stack 0
  2185  000062                     memset@c:
  2186                           	opt stack 0
  2187  000062                     strcpy@from:
  2188                           	opt stack 0
  2189  000062                     strchr@chr:
  2190                           	opt stack 0
  2191  000062                     strcat@from:
  2192                           	opt stack 0
  2193                           
  2194                           ; 3 bytes @ 0x2
  2195  000062                     	ds	1
  2196  000063                     ??_isalpha:
  2197  000063                     ??_I2c_WriteData:
  2198  000063                     ??_Rtcc_RtcConfig:
  2199  000063                     Rtcc_GetRtccValue@RegValue:
  2200                           	opt stack 0
  2201  000063                     TmrBInit@TmrNumb:
  2202                           	opt stack 0
  2203  000063                     ReceiveEvt@EventStatus:
  2204                           	opt stack 0
  2205  000063                     USBTransferOnePacket@len:
  2206                           	opt stack 0
  2207  000063                     I2c_ReadData@ReadPacket:
  2208                           	opt stack 0
  2209  000063                     Uart_WriteString@StringToWrite:
  2210                           	opt stack 0
  2211  000063                     I2cSlv_SendI2cMsg@TxBuffer:
  2212                           	opt stack 0
  2213  000063                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  2214                           	opt stack 0
  2215                           
  2216                           ; 2 bytes @ 0x3
  2217  000063                     	ds	1
  2218  000064                     ?_GetElapsedTime:
  2219                           	opt stack 0
  2220  000064                     ?_Rtcm_GetRtccDate:
  2221                           	opt stack 0
  2222  000064                     I2cSlv_I2cReadMsgSts@Result:
  2223                           	opt stack 0
  2224  000064                     USBTransferOnePacket@ep:
  2225                           	opt stack 0
  2226  000064                     ___awdiv@counter:
  2227                           	opt stack 0
  2228  000064                     ___awmod@counter:
  2229                           	opt stack 0
  2230  000064                     ___lwmod@counter:
  2231                           	opt stack 0
  2232  000064                     _isalpha$5857:
  2233                           	opt stack 0
  2234  000064                     OsTmr_StartTimer@Timer:
  2235                           	opt stack 0
  2236  000064                     StringCopy@Len:
  2237                           	opt stack 0
  2238  000064                     ClearBuffer@Index:
  2239                           	opt stack 0
  2240  000064                     ___wmul@product:
  2241                           	opt stack 0
  2242  000064                     ___lwdiv@quotient:
  2243                           	opt stack 0
  2244  000064                     memcpy@n:
  2245                           	opt stack 0
  2246  000064                     memset@n:
  2247                           	opt stack 0
  2248  000064                     strcpy@cp:
  2249                           	opt stack 0
  2250  000064                     strlen@cp:
  2251                           	opt stack 0
  2252  000064                     GetElapsedTime@StartTime:
  2253                           	opt stack 0
  2254  000064                     ___lmul@multiplicand:
  2255                           	opt stack 0
  2256                           
  2257                           ; 4 bytes @ 0x4
  2258  000064                     	ds	1
  2259  000065                     ??_I2c_ReadData:
  2260  000065                     Uart_WriteString@Module:
  2261                           	opt stack 0
  2262  000065                     I2cSlv_SendI2cMsg@SlaveAddr:
  2263                           	opt stack 0
  2264  000065                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2265                           	opt stack 0
  2266  000065                     USBConfigureEndpoint@EPNum:
  2267                           	opt stack 0
  2268  000065                     ___awdiv@sign:
  2269                           	opt stack 0
  2270  000065                     ___awmod@sign:
  2271                           	opt stack 0
  2272  000065                     isalpha@c:
  2273                           	opt stack 0
  2274  000065                     USBTransferOnePacket@handle:
  2275                           	opt stack 0
  2276  000065                     strcat@cp:
  2277                           	opt stack 0
  2278                           
  2279                           ; 2 bytes @ 0x5
  2280  000065                     	ds	1
  2281  000066                     ?_atoi:
  2282                           	opt stack 0
  2283  000066                     ?_strncmp:
  2284                           	opt stack 0
  2285  000066                     I2cSlv_SendI2cMsg@DataLenght:
  2286                           	opt stack 0
  2287  000066                     I2cSlv_ReceiveI2cMsg@DataLenght:
  2288                           	opt stack 0
  2289  000066                     ___lwdiv@counter:
  2290                           	opt stack 0
  2291  000066                     OsAlrm_SetOsAlarm@OsAlarmId:
  2292                           	opt stack 0
  2293  000066                     MdmWifi_SendWifiMsg@TxBuffer:
  2294                           	opt stack 0
  2295  000066                     USBConfigureEndpoint@handle:
  2296                           	opt stack 0
  2297  000066                     putUSBUSART@data:
  2298                           	opt stack 0
  2299  000066                     StringCopy@Index:
  2300                           	opt stack 0
  2301  000066                     atoi@s:
  2302                           	opt stack 0
  2303  000066                     ___awdiv@quotient:
  2304                           	opt stack 0
  2305  000066                     memcpy@d:
  2306                           	opt stack 0
  2307  000066                     memset@p:
  2308                           	opt stack 0
  2309  000066                     strncmp@s1:
  2310                           	opt stack 0
  2311  000066                     OsTmr_StartTimer@Timeout:
  2312                           	opt stack 0
  2313                           
  2314                           ; 4 bytes @ 0x6
  2315  000066                     	ds	1
  2316  000067                     I2cSlv_SendI2cMsg@TxSts:
  2317                           	opt stack 0
  2318  000067                     I2cSlv_ReceiveI2cMsg@RxSts:
  2319                           	opt stack 0
  2320  000067                     CDCTxService@i:
  2321                           	opt stack 0
  2322  000067                     getsUSBUSART@buffer:
  2323                           	opt stack 0
  2324  000067                     utoa@buf:
  2325                           	opt stack 0
  2326                           
  2327                           ; 2 bytes @ 0x7
  2328  000067                     	ds	1
  2329  000068                     ??_atoi:
  2330  000068                     ??_GetElapsedTime:
  2331  000068                     Rtcc_SetRtccValue@Value:
  2332                           	opt stack 0
  2333  000068                     USBDeviceInit@i:
  2334                           	opt stack 0
  2335  000068                     USBEnableEndpoint@options:
  2336                           	opt stack 0
  2337  000068                     putUSBUSART@length:
  2338                           	opt stack 0
  2339  000068                     CDCTxService@byte_to_send:
  2340                           	opt stack 0
  2341  000068                     MdmWifi_ReceiveWifiMsg@RxBuffer:
  2342                           	opt stack 0
  2343  000068                     memcpy@s:
  2344                           	opt stack 0
  2345  000068                     strncmp@s2:
  2346                           	opt stack 0
  2347  000068                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  2348                           	opt stack 0
  2349  000068                     ___lmul@product:
  2350                           	opt stack 0
  2351                           
  2352                           ; 4 bytes @ 0x8
  2353  000068                     	ds	1
  2354  000069                     ??_Rtcc_SetRtccValue:
  2355  000069                     getsUSBUSART@len:
  2356                           	opt stack 0
  2357  000069                     USBEnableEndpoint@p:
  2358                           	opt stack 0
  2359  000069                     utoa@val:
  2360                           	opt stack 0
  2361                           
  2362                           ; 2 bytes @ 0x9
  2363  000069                     	ds	1
  2364  00006A                     atoi@sign:
  2365                           	opt stack 0
  2366  00006A                     memcpy@tmp:
  2367                           	opt stack 0
  2368  00006A                     MdmWifi_ReceiveWifiMsg@DataLenght:
  2369                           	opt stack 0
  2370  00006A                     strncmp@len:
  2371                           	opt stack 0
  2372                           
  2373                           ; 2 bytes @ 0xA
  2374  00006A                     	ds	1
  2375  00006B                     Rtcc_SetRtccValue@RtccPtrVal:
  2376                           	opt stack 0
  2377  00006B                     USBEnableEndpoint@ep:
  2378                           	opt stack 0
  2379  00006B                     atoi@a:
  2380                           	opt stack 0
  2381  00006B                     utoa@base:
  2382                           	opt stack 0
  2383                           
  2384                           ; 2 bytes @ 0xB
  2385  00006B                     	ds	1
  2386  00006C                     ??_Rtcm_GetRtccDate:
  2387  00006C                     ??_strncmp:
  2388  00006C                     ?_strtol:
  2389                           	opt stack 0
  2390  00006C                     ?___lldiv:
  2391                           	opt stack 0
  2392  00006C                     MdmWifi_ReceiveWifiMsg@Ret:
  2393                           	opt stack 0
  2394  00006C                     OsAlrm_SetOsAlarm@AlarmCallback:
  2395                           	opt stack 0
  2396  00006C                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2397                           	opt stack 0
  2398  00006C                     strtol@s:
  2399                           	opt stack 0
  2400  00006C                     ___lldiv@dividend:
  2401                           	opt stack 0
  2402  00006C                     Rtcm_SetRtccDate@Date:
  2403                           	opt stack 0
  2404                           
  2405                           ; 8 bytes @ 0xC
  2406  00006C                     	ds	1
  2407  00006D                     utoa@v:
  2408                           	opt stack 0
  2409  00006D                     Rtcm_GetRtccDate@LocalDate:
  2410                           	opt stack 0
  2411                           
  2412                           ; 8 bytes @ 0xD
  2413  00006D                     	ds	1
  2414  00006E                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2415                           	opt stack 0
  2416  00006E                     strtol@endptr:
  2417                           	opt stack 0
  2418                           
  2419                           ; 2 bytes @ 0xE
  2420  00006E                     	ds	1
  2421  00006F                     ?_strstr:
  2422                           	opt stack 0
  2423  00006F                     utoa@c:
  2424                           	opt stack 0
  2425  00006F                     strstr@s1:
  2426                           	opt stack 0
  2427                           
  2428                           ; 2 bytes @ 0xF
  2429  00006F                     	ds	1
  2430  000070                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2431                           	opt stack 0
  2432  000070                     itoa@buf:
  2433                           	opt stack 0
  2434  000070                     strtol@base:
  2435                           	opt stack 0
  2436  000070                     GetElapsedTime@TimeValue:
  2437                           	opt stack 0
  2438  000070                     ___lldiv@divisor:
  2439                           	opt stack 0
  2440                           
  2441                           ; 4 bytes @ 0x10
  2442  000070                     	ds	1
  2443  000071                     strstr@s2:
  2444                           	opt stack 0
  2445                           
  2446                           ; 2 bytes @ 0x11
  2447  000071                     	ds	1
  2448  000072                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2449  000072                     ??_strtol:
  2450  000072                     itoa@val:
  2451                           	opt stack 0
  2452                           
  2453                           ; 2 bytes @ 0x12
  2454  000072                     	ds	1
  2455  000073                     StartConnectionSm@Data:
  2456                           	opt stack 0
  2457                           
  2458                           ; 100 bytes @ 0x13
  2459  000073                     	ds	1
  2460  000074                     ??_USBStdFeatureReqHandler:
  2461  000074                     USBStdSetCfgHandler@i:
  2462                           	opt stack 0
  2463  000074                     itoa@base:
  2464                           	opt stack 0
  2465  000074                     GetElapsedTime@CurrentTimestamp:
  2466                           	opt stack 0
  2467  000074                     ___lldiv@quotient:
  2468                           	opt stack 0
  2469                           
  2470                           ; 4 bytes @ 0x14
  2471  000074                     	ds	1
  2472  000075                     USBStdFeatureReqHandler@pUEP:
  2473                           	opt stack 0
  2474                           
  2475                           ; 2 bytes @ 0x15
  2476  000075                     	ds	1
  2477  000076                     strtol@sign:
  2478                           	opt stack 0
  2479  000076                     itoa@cp:
  2480                           	opt stack 0
  2481                           
  2482                           ; 2 bytes @ 0x16
  2483  000076                     	ds	1
  2484  000077                     USBStdFeatureReqHandler@current_ep_data:
  2485                           	opt stack 0
  2486  000077                     strtol@a:
  2487                           	opt stack 0
  2488                           
  2489                           ; 4 bytes @ 0x17
  2490  000077                     	ds	1
  2491  000078                     ___lldiv@counter:
  2492                           	opt stack 0
  2493  000078                     OsTmr_GetTimerStatus@Timer:
  2494                           	opt stack 0
  2495  000078                     USBStdFeatureReqHandler@p:
  2496                           	opt stack 0
  2497                           
  2498                           ; 2 bytes @ 0x18
  2499  000078                     	ds	1
  2500  000079                     Tmr_TmrBPrSet@IntFreqHz:
  2501                           	opt stack 0
  2502  000079                     SetUartBaudRate@UartConfig:
  2503                           	opt stack 0
  2504  000079                     SetBaudRate@DesiredI2cBusClockHz:
  2505                           	opt stack 0
  2506                           
  2507                           ; 4 bytes @ 0x19
  2508  000079                     	ds	1
  2509  00007A                     ??_USBCtrlEPService:
  2510  00007A                     
  2511                           ; 1 bytes @ 0x1A
  2512  00007A                     	ds	1
  2513  00007B                     Tmr_TmrBPrSet@Prescaler:
  2514                           	opt stack 0
  2515  00007B                     USBDeviceTasks@i:
  2516                           	opt stack 0
  2517  00007B                     strtol@c:
  2518                           	opt stack 0
  2519                           
  2520                           ; 1 bytes @ 0x1B
  2521  00007B                     	ds	1
  2522  00007C                     ??_Terminal:
  2523  00007C                     Tmr_TmrBPrSet@Postscaler:
  2524                           	opt stack 0
  2525  00007C                     SetUartBaudRate@Module:
  2526                           	opt stack 0
  2527                           
  2528                           ; 1 bytes @ 0x1C
  2529  00007C                     	ds	1
  2530  00007D                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  2531                           	opt stack 0
  2532  00007D                     SetUartBaudRate@BaudRateRegister:
  2533                           	opt stack 0
  2534  00007D                     SetBaudRate@McuClockHz:
  2535                           	opt stack 0
  2536                           
  2537                           ; 4 bytes @ 0x1D
  2538  00007D                     	ds	1
  2539  00007E                     Tmr_TmrBPrSet@TmrNumb:
  2540                           	opt stack 0
  2541  00007E                     Terminal@ReceivedBytes:
  2542                           	opt stack 0
  2543  00007E                     SendDataSm@Data:
  2544                           	opt stack 0
  2545                           
  2546                           ; 103 bytes @ 0x1E
  2547  00007E                     	ds	1
  2548  00007F                     SetUartBaudRate@DivisionFactor:
  2549                           	opt stack 0
  2550  00007F                     Terminal@Index:
  2551                           	opt stack 0
  2552  00007F                     Tmr_TmrBPrSet@Divisor:
  2553                           	opt stack 0
  2554                           
  2555                           ; 4 bytes @ 0x1F
  2556  00007F                     	ds	1
  2557  000080                     Uart_InitUartModule@UartConfig:
  2558                           	opt stack 0
  2559  000080                     Term_MainSm@Data:
  2560                           	opt stack 0
  2561                           
  2562                           ; 50 bytes @ 0x20
  2563  000080                     	ds	1
  2564  000081                     ??_SetBaudRate:
  2565                           
  2566                           ; 1 bytes @ 0x21
  2567  000081                     	ds	1
  2568  000082                     ??_Uart_InitUartModule:
  2569                           
  2570                           ; 1 bytes @ 0x22
  2571  000082                     	ds	1
  2572  000083                     Tmr_TmrBConfig@TmrBConfig:
  2573                           	opt stack 0
  2574                           
  2575                           ; 2 bytes @ 0x23
  2576  000083                     	ds	1
  2577  000084                     Uart_InitUartModule@Module:
  2578                           	opt stack 0
  2579                           
  2580                           ; 1 bytes @ 0x24
  2581  000084                     	ds	1
  2582  000085                     I2c_InitI2cModule@I2cConfig:
  2583                           	opt stack 0
  2584                           
  2585                           ; 2 bytes @ 0x25
  2586  000085                     	ds	1
  2587  000086                     Tmr_TmrBConfig@TmrNumb:
  2588                           	opt stack 0
  2589                           
  2590                           ; 1 bytes @ 0x26
  2591  000086                     	ds	1
  2592  000087                     ??_I2c_InitI2cModule:
  2593  000087                     InitSchedTimer@TmrBConfig:
  2594                           	opt stack 0
  2595                           
  2596                           ; 7 bytes @ 0x27
  2597  000087                     	ds	2
  2598  000089                     
  2599                           ; 1 bytes @ 0x29
  2600  000089                     	ds	5
  2601  00008E                     
  2602                           ; 1 bytes @ 0x2E
  2603  00008E                     	ds	36
  2604  0000B2                     Term_MainSm@FwkMajorStr:
  2605                           	opt stack 0
  2606                           
  2607                           ; 4 bytes @ 0x52
  2608  0000B2                     	ds	4
  2609  0000B6                     Term_MainSm@FwkMinorStr:
  2610                           	opt stack 0
  2611                           
  2612                           ; 4 bytes @ 0x56
  2613  0000B6                     	ds	4
  2614  0000BA                     Term_MainSm@FwkBuildStr:
  2615                           	opt stack 0
  2616                           
  2617                           ; 4 bytes @ 0x5A
  2618  0000BA                     	ds	4
  2619  0000BE                     Term_MainSm@FwkBuildDayStr:
  2620                           	opt stack 0
  2621                           
  2622                           ; 4 bytes @ 0x5E
  2623  0000BE                     	ds	4
  2624  0000C2                     Term_MainSm@FwkBuildMonthStr:
  2625                           	opt stack 0
  2626                           
  2627                           ; 4 bytes @ 0x62
  2628  0000C2                     	ds	4
  2629  0000C6                     Term_MainSm@FwkBuildYearStr:
  2630                           	opt stack 0
  2631                           
  2632                           ; 4 bytes @ 0x66
  2633  0000C6                     	ds	4
  2634  0000CA                     
  2635                           ; 1 bytes @ 0x6A
  2636  0000CA                     	ds	13
  2637  0000D7                     StartConnectionSm@PortAscii:
  2638                           	opt stack 0
  2639                           
  2640                           ; 4 bytes @ 0x77
  2641  0000D7                     	ds	4
  2642  0000DB                     StartConnectionSm@DataIndex:
  2643                           	opt stack 0
  2644                           
  2645                           ; 1 bytes @ 0x7B
  2646  0000DB                     	ds	1
  2647  0000DC                     StartConnectionSm@IdAscii:
  2648                           	opt stack 0
  2649                           
  2650                           ; 1 bytes @ 0x7C
  2651  0000DC                     	ds	9
  2652  0000E5                     SendDataSm@LenAscii:
  2653                           	opt stack 0
  2654                           
  2655                           ; 4 bytes @ 0x85
  2656  0000E5                     	ds	4
  2657  0000E9                     SendDataSm@DataIndex:
  2658                           	opt stack 0
  2659                           
  2660                           ; 1 bytes @ 0x89
  2661  0000E9                     	ds	1
  2662  0000EA                     SendDataSm@IdAscii:
  2663                           	opt stack 0
  2664                           
  2665                           ; 1 bytes @ 0x8A
  2666  0000EA                     	ds	1
  2667  0000EB                     ??_InitializeTasks:
  2668  0000EB                     ??_ScheduleTasks:
  2669                           
  2670                           ; 1 bytes @ 0x8B
  2671  0000EB                     	ds	2
  2672  0000ED                     InitializeTasks@ActiveTaskIndex:
  2673                           	opt stack 0
  2674                           
  2675                           ; 1 bytes @ 0x8D
  2676  0000ED                     	ds	2
  2677  0000EF                     ScheduleTasks@ActiveTaskIndex:
  2678                           	opt stack 0
  2679                           
  2680                           ; 1 bytes @ 0x8F
  2681  0000EF                     	ds	1
  2682  0000F0                     tblptru	equ	0xFF8
  2683                           tblptrh	equ	0xFF7
  2684                           tblptrl	equ	0xFF6
  2685                           tablat	equ	0xFF5
  2686                           postinc0	equ	0xFEE
  2687                           wreg	equ	0xFE8
  2688                           postdec1	equ	0xFE5
  2689                           fsr1l	equ	0xFE1
  2690                           
  2691                           ; 1 bytes @ 0x90
  2692                           
  2693                           	psect	cstackCOMRAM
  2694  000001                     __pcstackCOMRAM:
  2695                           	opt stack 0
  2696  000001                     i2GenerateEvt@Event:
  2697                           	opt stack 0
  2698                           
  2699                           ; 2 bytes @ 0x0
  2700  000001                     	ds	2
  2701  000003                     i2GenerateEvt@EventStatus:
  2702                           	opt stack 0
  2703                           
  2704                           ; 1 bytes @ 0x2
  2705  000003                     	ds	1
  2706  000004                     ??_Alarm:
  2707  000004                     Uart_MdmWifiReadService@UartData:
  2708                           	opt stack 0
  2709                           
  2710                           ; 1 bytes @ 0x3
  2711  000004                     	ds	1
  2712  000005                     ??_HighPriorityIsr:
  2713  000005                     
  2714                           ; 1 bytes @ 0x4
  2715  000005                     	ds	18
  2716  000017                     ?i1___wmul:
  2717                           	opt stack 0
  2718  000017                     OsAlrm_ClearOsAlarm@OsAlarmId:
  2719                           	opt stack 0
  2720  000017                     i1GenerateEvt@Event:
  2721                           	opt stack 0
  2722  000017                     i1___wmul@multiplier:
  2723                           	opt stack 0
  2724                           
  2725                           ; 2 bytes @ 0x16
  2726  000017                     	ds	2
  2727  000019                     i1GenerateEvt@EventStatus:
  2728                           	opt stack 0
  2729  000019                     i1___wmul@multiplicand:
  2730                           	opt stack 0
  2731                           
  2732                           ; 2 bytes @ 0x18
  2733  000019                     	ds	1
  2734  00001A                     i1I2cSlv_SendI2cMsg@TxBuffer:
  2735                           	opt stack 0
  2736                           
  2737                           ; 2 bytes @ 0x19
  2738  00001A                     	ds	1
  2739  00001B                     i1___wmul@product:
  2740                           	opt stack 0
  2741                           
  2742                           ; 2 bytes @ 0x1A
  2743  00001B                     	ds	1
  2744  00001C                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  2745                           	opt stack 0
  2746                           
  2747                           ; 1 bytes @ 0x1B
  2748  00001C                     	ds	1
  2749  00001D                     i1I2cSlv_SendI2cMsg@DataLenght:
  2750                           	opt stack 0
  2751                           
  2752                           ; 1 bytes @ 0x1C
  2753  00001D                     	ds	1
  2754  00001E                     i1I2cSlv_SendI2cMsg@TxSts:
  2755                           	opt stack 0
  2756                           
  2757                           ; 1 bytes @ 0x1D
  2758  00001E                     	ds	1
  2759  00001F                     ??_OsAlrm_ProcessOsAlarms:
  2760  00001F                     
  2761                           ; 1 bytes @ 0x1E
  2762  00001F                     	ds	8
  2763  000027                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  2764                           	opt stack 0
  2765                           
  2766                           ; 2 bytes @ 0x26
  2767  000027                     	ds	2
  2768  000029                     ??_LowPriorityIsr:
  2769                           
  2770                           ; 1 bytes @ 0x28
  2771  000029                     	ds	21
  2772                           tblptru	equ	0xFF8
  2773                           tblptrh	equ	0xFF7
  2774                           tblptrl	equ	0xFF6
  2775                           tablat	equ	0xFF5
  2776                           postinc0	equ	0xFEE
  2777                           wreg	equ	0xFE8
  2778                           postdec1	equ	0xFE5
  2779                           fsr1l	equ	0xFE1
  2780                           
  2781 ;;
  2782 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2783 ;;
  2784 ;; *************** function _main *****************
  2785 ;; Defined at:
  2786 ;;		line 58 in file "../Source/c/00_Main/main.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  2   14[None  ] short 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2804 ;;Total ram usage:        0 bytes
  2805 ;; Hardware stack levels required when called:   23
  2806 ;; This function calls:
  2807 ;;		_Sch_MainScheduler
  2808 ;;		_SystemInit
  2809 ;; This function is called by:
  2810 ;;		Startup code after reset
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text0
  2815  004ECA                     __ptext0:
  2816                           	opt stack 0
  2817  004ECA                     _main:
  2818                           	opt stack 8
  2819                           
  2820                           ;main.c: 61: SystemInit();
  2821                           
  2822                           ;incstack = 0
  2823  004ECA  ECD9  F024         	call	_SystemInit	;wreg free
  2824                           
  2825                           ;main.c: 64: Sch_MainScheduler();
  2826  004ECE  EC91  F026         	call	_Sch_MainScheduler	;wreg free
  2827                           
  2828                           ;main.c: 67: return 0;
  2829                           ;	Return value of _main is never used
  2830  004ED2  EF66  F000         	goto	start
  2831  004ED6                     __end_of_main:
  2832                           	opt stack 0
  2833                           tblptru	equ	0xFF8
  2834                           tblptrh	equ	0xFF7
  2835                           tblptrl	equ	0xFF6
  2836                           tablat	equ	0xFF5
  2837                           postinc0	equ	0xFEE
  2838                           wreg	equ	0xFE8
  2839                           postdec1	equ	0xFE5
  2840                           fsr1l	equ	0xFE1
  2841                           
  2842 ;; *************** function _SystemInit *****************
  2843 ;; Defined at:
  2844 ;;		line 121 in file "../Source/c/01_Hal/01_Sys/sys_init.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2862 ;;Total ram usage:        0 bytes
  2863 ;; Hardware stack levels used:    1
  2864 ;; Hardware stack levels required when called:   15
  2865 ;; This function calls:
  2866 ;;		_InitSchedTimer
  2867 ;;		_Irq_InitIntController
  2868 ;;		_Mcu_ConfigExtInt
  2869 ;;		_Mcu_StartSystemPll
  2870 ;;		_Pm_DsReleasePinControl
  2871 ;;		_Tmr_RegisterTmr2IsrCallback
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text1
  2878  0049B2                     __ptext1:
  2879                           	opt stack 0
  2880  0049B2                     _SystemInit:
  2881                           	opt stack 15
  2882                           
  2883                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  2884                           
  2885                           ;incstack = 0
  2886  0049B2  EC89  F027         	call	_Pm_DsReleasePinControl	;wreg free
  2887                           
  2888                           ;sys_init.c: 126: Mcu_StartSystemPll();
  2889  0049B6  EC82  F026         	call	_Mcu_StartSystemPll	;wreg free
  2890                           
  2891                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  2892  0049BA  0E01               	movlw	1
  2893  0049BC  0100               	movlb	0	; () banked
  2894  0049BE  6F60               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  2895  0049C0  0E01               	movlw	1
  2896  0049C2  6F61               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  2897  0049C4  0E01               	movlw	1
  2898  0049C6  EC65  F025         	call	_Irq_InitIntController
  2899                           
  2900                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  2901  0049CA  0EBC               	movlw	low _Sch_SchmIntService
  2902  0049CC  0100               	movlb	0	; () banked
  2903  0049CE  6F60               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  2904  0049D0  0E4E               	movlw	high _Sch_SchmIntService
  2905  0049D2  6F61               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  2906  0049D4  EC6B  F027         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  2907                           
  2908                           ;sys_init.c: 132: InitSchedTimer();
  2909  0049D8  EC21  F025         	call	_InitSchedTimer	;wreg free
  2910                           
  2911                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  2912  0049DC  EC20  F027         	call	_Mcu_ConfigExtInt	;wreg free
  2913  0049E0  0012               	return		;funcret
  2914  0049E2                     __end_of_SystemInit:
  2915                           	opt stack 0
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           postinc0	equ	0xFEE
  2921                           wreg	equ	0xFE8
  2922                           postdec1	equ	0xFE5
  2923                           fsr1l	equ	0xFE1
  2924                           
  2925 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  2926 ;; Defined at:
  2927 ;;		line 329 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  IsrCallback     2    0[BANK0 ] PTR FTN()void 
  2930 ;;		 -> Sch_SchmIntService(1), 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;		None
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg, status,2, status,0
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2942 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2945 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;Total ram usage:        2 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; Hardware stack levels required when called:   11
  2949 ;; This function calls:
  2950 ;;		Nothing
  2951 ;; This function is called by:
  2952 ;;		_SystemInit
  2953 ;; This function uses a non-reentrant model
  2954 ;;
  2955                           
  2956                           	psect	text2
  2957  004ED6                     __ptext2:
  2958                           	opt stack 0
  2959  004ED6                     _Tmr_RegisterTmr2IsrCallback:
  2960                           	opt stack 18
  2961                           
  2962                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  2963                           
  2964                           ;incstack = 0
  2965  004ED6  C060  F154         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  2966  004EDA  C061  F155         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  2967  004EDE  0012               	return		;funcret
  2968  004EE0                     __end_of_Tmr_RegisterTmr2IsrCallback:
  2969                           	opt stack 0
  2970                           tblptru	equ	0xFF8
  2971                           tblptrh	equ	0xFF7
  2972                           tblptrl	equ	0xFF6
  2973                           tablat	equ	0xFF5
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           postdec1	equ	0xFE5
  2977                           fsr1l	equ	0xFE1
  2978                           
  2979 ;; *************** function _Pm_DsReleasePinControl *****************
  2980 ;; Defined at:
  2981 ;;		line 166 in file "../Source/c/01_Hal/02_Drv/pm_drv.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;		None
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1    wreg      void 
  2988 ;; Registers used:
  2989 ;;		None
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2999 ;;Total ram usage:        0 bytes
  3000 ;; Hardware stack levels used:    1
  3001 ;; Hardware stack levels required when called:   11
  3002 ;; This function calls:
  3003 ;;		Nothing
  3004 ;; This function is called by:
  3005 ;;		_SystemInit
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text3
  3010  004F12                     __ptext3:
  3011                           	opt stack 0
  3012  004F12                     _Pm_DsReleasePinControl:
  3013                           	opt stack 18
  3014                           
  3015                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3016                           
  3017                           ;incstack = 0
  3018  004F12  010F               	movlb	15	; () banked
  3019  004F14  914C               	bcf	76,0,b	;volatile
  3020                           
  3021                           ; BSR set to: 15
  3022  004F16  0012               	return		;funcret
  3023  004F18                     __end_of_Pm_DsReleasePinControl:
  3024                           	opt stack 0
  3025                           tblptru	equ	0xFF8
  3026                           tblptrh	equ	0xFF7
  3027                           tblptrl	equ	0xFF6
  3028                           tablat	equ	0xFF5
  3029                           postinc0	equ	0xFEE
  3030                           wreg	equ	0xFE8
  3031                           postdec1	equ	0xFE5
  3032                           fsr1l	equ	0xFE1
  3033                           
  3034 ;; *************** function _Mcu_StartSystemPll *****************
  3035 ;; Defined at:
  3036 ;;		line 80 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  PllStartupCo    2    0[BANK0 ] volatile unsigned short 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3051 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;Total ram usage:        2 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:   11
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_SystemInit
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text4
  3065  004D04                     __ptext4:
  3066                           	opt stack 0
  3067  004D04                     _Mcu_StartSystemPll:
  3068                           	opt stack 18
  3069                           
  3070                           ;mcu_drv.c: 82: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3071                           
  3072                           ; BSR set to: 15
  3073                           ;incstack = 0
  3074  004D04  0E03               	movlw	3
  3075  004D06  0100               	movlb	0	; () banked
  3076  004D08  6F61               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3077  004D0A  0EE8               	movlw	232
  3078  004D0C  6F60               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;mcu_drv.c: 85: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3082  004D0E  8C9B               	bsf	3995,6,c	;volatile
  3083  004D10                     l9066:
  3084                           
  3085                           ; BSR set to: 0
  3086  004D10  0760               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3087  004D12  A0D8               	btfss	status,0,c
  3088  004D14  0761               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3089  004D16  2960               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3090  004D18  E1FB               	bnz	l9066
  3091  004D1A  2961               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3092  004D1C  B4D8               	btfsc	status,2,c
  3093  004D1E  0012               	return	
  3094  004D20  D7F7               	goto	l231
  3095  004D22                     __end_of_Mcu_StartSystemPll:
  3096                           	opt stack 0
  3097                           tblptru	equ	0xFF8
  3098                           tblptrh	equ	0xFF7
  3099                           tblptrl	equ	0xFF6
  3100                           tablat	equ	0xFF5
  3101                           postinc0	equ	0xFEE
  3102                           wreg	equ	0xFE8
  3103                           postdec1	equ	0xFE5
  3104                           fsr1l	equ	0xFE1
  3105                           status	equ	0xFD8
  3106                           
  3107 ;; *************** function _Mcu_ConfigExtInt *****************
  3108 ;; Defined at:
  3109 ;;		line 98 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
  3110 ;; Parameters:    Size  Location     Type
  3111 ;;		None
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1    wreg      void 
  3116 ;; Registers used:
  3117 ;;		None
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:   11
  3130 ;; This function calls:
  3131 ;;		Nothing
  3132 ;; This function is called by:
  3133 ;;		_SystemInit
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text5
  3138  004E40                     __ptext5:
  3139                           	opt stack 0
  3140  004E40                     _Mcu_ConfigExtInt:
  3141                           	opt stack 18
  3142                           
  3143                           ;mcu_drv.c: 101: TRISBbits.TRISB0 = ((UINT8)(1));
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;incstack = 0
  3147  004E40  8093               	bsf	3987,0,c	;volatile
  3148                           
  3149                           ;mcu_drv.c: 102: TRISDbits.TRISD3 = ((UINT8)(1));
  3150  004E42  8695               	bsf	3989,3,c	;volatile
  3151                           
  3152                           ;mcu_drv.c: 105: INTCONbits.INT0IE = 1u;
  3153  004E44  88F2               	bsf	intcon,4,c	;volatile
  3154                           
  3155                           ;mcu_drv.c: 106: INTCON3bits.INT1IE = 1u;
  3156  004E46  86F0               	bsf	intcon3,3,c	;volatile
  3157                           
  3158                           ;mcu_drv.c: 107: INTCON3bits.INT1IP = 1u;
  3159  004E48  8CF0               	bsf	intcon3,6,c	;volatile
  3160                           
  3161                           ;mcu_drv.c: 108: INTCON2bits.INTEDG0 = 0u;
  3162  004E4A  9CF1               	bcf	intcon2,6,c	;volatile
  3163                           
  3164                           ;mcu_drv.c: 109: INTCON2bits.INTEDG1 = 0u;
  3165  004E4C  9AF1               	bcf	intcon2,5,c	;volatile
  3166  004E4E  0012               	return		;funcret
  3167  004E50                     __end_of_Mcu_ConfigExtInt:
  3168                           	opt stack 0
  3169                           tblptru	equ	0xFF8
  3170                           tblptrh	equ	0xFF7
  3171                           tblptrl	equ	0xFF6
  3172                           tablat	equ	0xFF5
  3173                           intcon	equ	0xFF2
  3174                           intcon2	equ	0xFF1
  3175                           intcon3	equ	0xFF0
  3176                           postinc0	equ	0xFEE
  3177                           wreg	equ	0xFE8
  3178                           postdec1	equ	0xFE5
  3179                           fsr1l	equ	0xFE1
  3180                           status	equ	0xFD8
  3181                           
  3182 ;; *************** function _Irq_InitIntController *****************
  3183 ;; Defined at:
  3184 ;;		line 75 in file "../Source/c/01_Hal/01_Sys/irq.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  IntPriorityE    1    wreg     enum E7714
  3187 ;;  GlobalInt_Hi    1    0[BANK0 ] unsigned char 
  3188 ;;  PerInt_LowPI    1    1[BANK0 ] unsigned char 
  3189 ;; Auto vars:     Size  Location     Type
  3190 ;;  IntPriorityE    1    2[BANK0 ] enum E7714
  3191 ;; Return value:  Size  Location     Type
  3192 ;;                  1    wreg      void 
  3193 ;; Registers used:
  3194 ;;		wreg
  3195 ;; Tracked objects:
  3196 ;;		On entry : 0/0
  3197 ;;		On exit  : 0/0
  3198 ;;		Unchanged: 0/0
  3199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3203 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3204 ;;Total ram usage:        3 bytes
  3205 ;; Hardware stack levels used:    1
  3206 ;; Hardware stack levels required when called:   11
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_SystemInit
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text6
  3215  004ACA                     __ptext6:
  3216                           	opt stack 0
  3217  004ACA                     _Irq_InitIntController:
  3218                           	opt stack 18
  3219                           
  3220                           ;incstack = 0
  3221                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3222  004ACA  0100               	movlb	0	; () banked
  3223  004ACC  6F62               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3224                           
  3225                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3226  004ACE  0100               	movlb	0	; () banked
  3227  004AD0  B162               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3228  004AD2  D002               	bra	u7805
  3229  004AD4  9ED0               	bcf	4048,7,c	;volatile
  3230  004AD6  D001               	bra	u7806
  3231  004AD8                     u7805:
  3232  004AD8  8ED0               	bsf	4048,7,c	;volatile
  3233  004ADA                     u7806:
  3234                           
  3235                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3236  004ADA  0100               	movlb	0	; () banked
  3237  004ADC  B160               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3238  004ADE  D002               	bra	u7815
  3239  004AE0  9EF2               	bcf	intcon,7,c	;volatile
  3240  004AE2  D001               	bra	u7816
  3241  004AE4                     u7815:
  3242  004AE4  8EF2               	bsf	intcon,7,c	;volatile
  3243  004AE6                     u7816:
  3244                           
  3245                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3246  004AE6  0100               	movlb	0	; () banked
  3247  004AE8  B161               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3248  004AEA  D002               	bra	u7825
  3249  004AEC  9CF2               	bcf	intcon,6,c	;volatile
  3250  004AEE  D001               	bra	u7826
  3251  004AF0                     u7825:
  3252  004AF0  8CF2               	bsf	intcon,6,c	;volatile
  3253  004AF2                     u7826:
  3254  004AF2  0012               	return		;funcret
  3255  004AF4                     __end_of_Irq_InitIntController:
  3256                           	opt stack 0
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           intcon	equ	0xFF2
  3262                           intcon2	equ	0xFF1
  3263                           intcon3	equ	0xFF0
  3264                           postinc0	equ	0xFEE
  3265                           wreg	equ	0xFE8
  3266                           postdec1	equ	0xFE5
  3267                           fsr1l	equ	0xFE1
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function _InitSchedTimer *****************
  3271 ;; Defined at:
  3272 ;;		line 69 in file "../Source/c/01_Hal/01_Sys/sys_init.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;  TmrBConfig      7   39[BANK0 ] struct _TmrBConfigType
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  1    wreg      void 
  3279 ;; Registers used:
  3280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3287 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3289 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3290 ;;Total ram usage:        7 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:   14
  3293 ;; This function calls:
  3294 ;;		_Tmr_TmrBConfig
  3295 ;; This function is called by:
  3296 ;;		_SystemInit
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text7
  3301  004A42                     __ptext7:
  3302                           	opt stack 0
  3303  004A42                     _InitSchedTimer:
  3304                           	opt stack 15
  3305                           
  3306                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  3307                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  3308                           
  3309                           ;incstack = 0
  3310  004A42  0E04               	movlw	4
  3311  004A44  0100               	movlb	0	; () banked
  3312  004A46  6F87               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  3313                           
  3314                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  3315  004A48  0E0C               	movlw	12
  3316  004A4A  6F88               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  3317                           
  3318                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  3319  004A4C  0E00               	movlw	0
  3320  004A4E  6F8A               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  3321                           
  3322                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  3323  004A50  0E01               	movlw	1
  3324  004A52  6F89               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  3325                           
  3326                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  3327  004A54  0E03               	movlw	3
  3328  004A56  6F8C               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  3329  004A58  0EE8               	movlw	232
  3330  004A5A  6F8B               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  3331                           
  3332                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  3333  004A5C  0E01               	movlw	1
  3334  004A5E  6F8D               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  3338  004A60  0E87               	movlw	low InitSchedTimer@TmrBConfig
  3339  004A62  6F83               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  3340  004A64  0E00               	movlw	high InitSchedTimer@TmrBConfig
  3341  004A66  6F84               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  3342  004A68  0E02               	movlw	2
  3343  004A6A  EC44  F016         	call	_Tmr_TmrBConfig
  3344  004A6E  0012               	return		;funcret
  3345  004A70                     __end_of_InitSchedTimer:
  3346                           	opt stack 0
  3347                           tblptru	equ	0xFF8
  3348                           tblptrh	equ	0xFF7
  3349                           tblptrl	equ	0xFF6
  3350                           tablat	equ	0xFF5
  3351                           intcon	equ	0xFF2
  3352                           intcon2	equ	0xFF1
  3353                           intcon3	equ	0xFF0
  3354                           postinc0	equ	0xFEE
  3355                           wreg	equ	0xFE8
  3356                           postdec1	equ	0xFE5
  3357                           fsr1l	equ	0xFE1
  3358                           status	equ	0xFD8
  3359                           
  3360 ;; *************** function _Tmr_TmrBConfig *****************
  3361 ;; Defined at:
  3362 ;;		line 271 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;  TmrNumb         1    wreg     unsigned char 
  3365 ;;  TmrBConfig      2   35[BANK0 ] PTR struct _TmrBConfigTy
  3366 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  3367 ;; Auto vars:     Size  Location     Type
  3368 ;;  TmrNumb         1   38[BANK0 ] unsigned char 
  3369 ;; Return value:  Size  Location     Type
  3370 ;;                  1    wreg      void 
  3371 ;; Registers used:
  3372 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3373 ;; Tracked objects:
  3374 ;;		On entry : 0/0
  3375 ;;		On exit  : 0/0
  3376 ;;		Unchanged: 0/0
  3377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3378 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3380 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3381 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3382 ;;Total ram usage:        4 bytes
  3383 ;; Hardware stack levels used:    1
  3384 ;; Hardware stack levels required when called:   13
  3385 ;; This function calls:
  3386 ;;		_TmrBInit
  3387 ;;		_Tmr_StartTmr
  3388 ;;		_Tmr_TmrBIrqSet
  3389 ;;		_Tmr_TmrBPrSet
  3390 ;; This function is called by:
  3391 ;;		_InitSchedTimer
  3392 ;;		_InitAuxTimer
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text8
  3397  002C88                     __ptext8:
  3398                           	opt stack 0
  3399  002C88                     _Tmr_TmrBConfig:
  3400                           	opt stack 15
  3401                           
  3402                           ;incstack = 0
  3403                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  3404  002C88  0100               	movlb	0	; () banked
  3405  002C8A  6F86               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  3406                           
  3407                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  3408  002C8C  C083  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3409  002C90  C084  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3410  002C94  50DF               	movf	indf2,w,c
  3411  002C96  0100               	movlb	0	; () banked
  3412  002C98  6F60               	movwf	TmrBInit@Prescaler& (0+255),b
  3413  002C9A  EE20 F001          	lfsr	2,1
  3414  002C9E  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3415  002CA0  26D9               	addwf	fsr2l,f,c
  3416  002CA2  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3417  002CA4  22DA               	addwfc	fsr2h,f,c
  3418  002CA6  50DF               	movf	indf2,w,c
  3419  002CA8  6F61               	movwf	TmrBInit@Postscaler& (0+255),b
  3420  002CAA  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3421  002CAC  EC1D  F01B         	call	_TmrBInit
  3422                           
  3423                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  3424  002CB0  0100               	movlb	0	; () banked
  3425  002CB2  EE20 F002          	lfsr	2,2
  3426  002CB6  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3427  002CB8  26D9               	addwf	fsr2l,f,c
  3428  002CBA  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3429  002CBC  22DA               	addwfc	fsr2h,f,c
  3430  002CBE  04DE               	decf	postinc2,w,c
  3431  002CC0  A4D8               	btfss	status,2,c
  3432  002CC2  D00E               	goto	l428
  3433                           
  3434                           ; BSR set to: 0
  3435                           ;tmr_drv.c: 277: {
  3436                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  3437  002CC4  EE20 F003          	lfsr	2,3
  3438  002CC8  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3439  002CCA  26D9               	addwf	fsr2l,f,c
  3440  002CCC  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3441  002CCE  22DA               	addwfc	fsr2h,f,c
  3442  002CD0  50DF               	movf	indf2,w,c
  3443  002CD2  6F60               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3444  002CD4  0E01               	movlw	1
  3445  002CD6  6F61               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3446  002CD8  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3447  002CDA  EC1F  F022         	call	_Tmr_TmrBIrqSet
  3448                           
  3449                           ;tmr_drv.c: 280: }
  3450  002CDE  D00E               	goto	l429
  3451  002CE0                     l428:
  3452                           
  3453                           ;tmr_drv.c: 281: else
  3454                           ;tmr_drv.c: 282: {
  3455                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  3456  002CE0  0100               	movlb	0	; () banked
  3457  002CE2  EE20 F003          	lfsr	2,3
  3458  002CE6  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3459  002CE8  26D9               	addwf	fsr2l,f,c
  3460  002CEA  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3461  002CEC  22DA               	addwfc	fsr2h,f,c
  3462  002CEE  50DF               	movf	indf2,w,c
  3463  002CF0  6F60               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3464  002CF2  0E00               	movlw	0
  3465  002CF4  6F61               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3466  002CF6  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3467  002CF8  EC1F  F022         	call	_Tmr_TmrBIrqSet
  3468  002CFC                     l429:
  3469                           
  3470                           ;tmr_drv.c: 285: }
  3471                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  3472  002CFC  0100               	movlb	0	; () banked
  3473  002CFE  EE20 F004          	lfsr	2,4
  3474  002D02  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3475  002D04  26D9               	addwf	fsr2l,f,c
  3476  002D06  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3477  002D08  22DA               	addwfc	fsr2h,f,c
  3478  002D0A  CFDE F079          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  3479  002D0E  CFDD F07A          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  3480  002D12  C083  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3481  002D16  C084  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3482  002D1A  50DF               	movf	indf2,w,c
  3483  002D1C  6F7B               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  3484  002D1E  EE20 F001          	lfsr	2,1
  3485  002D22  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3486  002D24  26D9               	addwf	fsr2l,f,c
  3487  002D26  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3488  002D28  22DA               	addwfc	fsr2h,f,c
  3489  002D2A  50DF               	movf	indf2,w,c
  3490  002D2C  6F7C               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3491  002D2E  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3492  002D30  EC42  F013         	call	_Tmr_TmrBPrSet
  3493                           
  3494                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  3495  002D34  0100               	movlb	0	; () banked
  3496  002D36  EE20 F006          	lfsr	2,6
  3497  002D3A  5183               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3498  002D3C  26D9               	addwf	fsr2l,f,c
  3499  002D3E  5184               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3500  002D40  22DA               	addwfc	fsr2h,f,c
  3501  002D42  04DE               	decf	postinc2,w,c
  3502  002D44  A4D8               	btfss	status,2,c
  3503  002D46  0012               	return	
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;tmr_drv.c: 290: {
  3507                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  3508  002D48  5186               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3509  002D4A  EC52  F026         	call	_Tmr_StartTmr
  3510                           
  3511                           ;tmr_drv.c: 293: }
  3512  002D4E  0012               	return	
  3513  002D50                     __end_of_Tmr_TmrBConfig:
  3514                           	opt stack 0
  3515                           tblptru	equ	0xFF8
  3516                           tblptrh	equ	0xFF7
  3517                           tblptrl	equ	0xFF6
  3518                           tablat	equ	0xFF5
  3519                           intcon	equ	0xFF2
  3520                           intcon2	equ	0xFF1
  3521                           intcon3	equ	0xFF0
  3522                           postinc0	equ	0xFEE
  3523                           wreg	equ	0xFE8
  3524                           postdec1	equ	0xFE5
  3525                           fsr1l	equ	0xFE1
  3526                           indf2	equ	0xFDF
  3527                           postinc2	equ	0xFDE
  3528                           postdec2	equ	0xFDD
  3529                           fsr2h	equ	0xFDA
  3530                           fsr2l	equ	0xFD9
  3531                           status	equ	0xFD8
  3532                           
  3533 ;; *************** function _Tmr_TmrBPrSet *****************
  3534 ;; Defined at:
  3535 ;;		line 193 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  TmrNumb         1    wreg     unsigned char 
  3538 ;;  IntFreqHz       2   25[BANK0 ] unsigned short 
  3539 ;;  Prescaler       1   27[BANK0 ] unsigned char 
  3540 ;;  Postscaler      1   28[BANK0 ] unsigned char 
  3541 ;; Auto vars:     Size  Location     Type
  3542 ;;  TmrNumb         1   30[BANK0 ] unsigned char 
  3543 ;;  Divisor         4   31[BANK0 ] unsigned long 
  3544 ;;  TmrBPrCfgSts    1   29[BANK0 ] enum E7730
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      enum E7730
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3554 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3558 ;;Total ram usage:       10 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:   12
  3561 ;; This function calls:
  3562 ;;		___lldiv
  3563 ;;		___lmul
  3564 ;; This function is called by:
  3565 ;;		_Tmr_TmrBConfig
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text9
  3570  002684                     __ptext9:
  3571                           	opt stack 0
  3572  002684                     _Tmr_TmrBPrSet:
  3573                           	opt stack 15
  3574                           
  3575                           ;incstack = 0
  3576                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  3577  002684  0100               	movlb	0	; () banked
  3578  002686  6F7E               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  3579                           
  3580                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  3581                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  3582  002688  0E00               	movlw	0
  3583  00268A  0100               	movlb	0	; () banked
  3584  00268C  6F7F               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  3585  00268E  0E00               	movlw	0
  3586  002690  6F80               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  3587  002692  0E00               	movlw	0
  3588  002694  6F81               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  3589  002696  0E00               	movlw	0
  3590  002698  6F82               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  3594  00269A  517B               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  3595  00269C  037C               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3596  00269E  CFF3 F060          	movff	prodl,___lmul@multiplier
  3597  0026A2  CFF4 F061          	movff	prodh,___lmul@multiplier+1
  3598  0026A6  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
  3599  0026A8  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
  3600  0026AA  C079  F064         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  3601  0026AE  C07A  F065         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  3602  0026B2  6B66               	clrf	(___lmul@multiplicand+2)& (0+255),b
  3603  0026B4  6B67               	clrf	(___lmul@multiplicand+3)& (0+255),b
  3604  0026B6  ECA4  F020         	call	___lmul	;wreg free
  3605  0026BA  C060  F07F         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  3606  0026BE  C061  F080         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  3607  0026C2  C062  F081         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  3608  0026C6  C063  F082         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  3609                           
  3610                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  3611  0026CA  0E00               	movlw	0
  3612  0026CC  0100               	movlb	0	; () banked
  3613  0026CE  6F6C               	movwf	___lldiv@dividend& (0+255),b
  3614  0026D0  0E1B               	movlw	27
  3615  0026D2  6F6D               	movwf	(___lldiv@dividend+1)& (0+255),b
  3616  0026D4  0EB7               	movlw	183
  3617  0026D6  6F6E               	movwf	(___lldiv@dividend+2)& (0+255),b
  3618  0026D8  0E00               	movlw	0
  3619  0026DA  6F6F               	movwf	(___lldiv@dividend+3)& (0+255),b
  3620  0026DC  C07F  F070         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3621  0026E0  C080  F071         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3622  0026E4  C081  F072         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3623  0026E8  C082  F073         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3624  0026EC  ECE5  F01D         	call	___lldiv	;wreg free
  3625  0026F0  0100               	movlb	0	; () banked
  3626  0026F2  516F               	movf	(?___lldiv+3)& (0+255),w,b
  3627  0026F4  116E               	iorwf	(?___lldiv+2)& (0+255),w,b
  3628  0026F6  E13A               	bnz	l8304
  3629  0026F8  056D               	decf	(?___lldiv+1)& (0+255),w,b
  3630  0026FA  A0D8               	btfss	status,0,c
  3631  0026FC  D02D               	goto	l411
  3632  0026FE  D036               	goto	l410
  3633  002700                     
  3634                           ; BSR set to: 0
  3635                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3636                           
  3637                           ; BSR set to: 0
  3638  002700  0E00               	movlw	0
  3639  002702  6F6C               	movwf	___lldiv@dividend& (0+255),b
  3640  002704  0E1B               	movlw	27
  3641  002706  6F6D               	movwf	(___lldiv@dividend+1)& (0+255),b
  3642  002708  0EB7               	movlw	183
  3643  00270A  6F6E               	movwf	(___lldiv@dividend+2)& (0+255),b
  3644  00270C  0E00               	movlw	0
  3645  00270E  6F6F               	movwf	(___lldiv@dividend+3)& (0+255),b
  3646  002710  C07F  F070         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3647  002714  C080  F071         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3648  002718  C081  F072         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3649  00271C  C082  F073         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3650  002720  ECE5  F01D         	call	___lldiv	;wreg free
  3651  002724  0100               	movlb	0	; () banked
  3652  002726  516C               	movf	?___lldiv& (0+255),w,b
  3653  002728  6ECB               	movwf	4043,c	;volatile
  3654                           
  3655                           ;tmr_drv.c: 210: break;
  3656  00272A  D01D               	goto	l413
  3657  00272C                     
  3658                           ; BSR set to: 0
  3659                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3660                           
  3661                           ; BSR set to: 0
  3662  00272C  0E00               	movlw	0
  3663  00272E  6F6C               	movwf	___lldiv@dividend& (0+255),b
  3664  002730  0E1B               	movlw	27
  3665  002732  6F6D               	movwf	(___lldiv@dividend+1)& (0+255),b
  3666  002734  0EB7               	movlw	183
  3667  002736  6F6E               	movwf	(___lldiv@dividend+2)& (0+255),b
  3668  002738  0E00               	movlw	0
  3669  00273A  6F6F               	movwf	(___lldiv@dividend+3)& (0+255),b
  3670  00273C  C07F  F070         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3671  002740  C080  F071         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3672  002744  C081  F072         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3673  002748  C082  F073         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3674  00274C  ECE5  F01D         	call	___lldiv	;wreg free
  3675  002750  0100               	movlb	0	; () banked
  3676  002752  516C               	movf	?___lldiv& (0+255),w,b
  3677  002754  6E77               	movwf	3959,c	;volatile
  3678                           
  3679                           ; BSR set to: 0
  3680                           ;tmr_drv.c: 219: }
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;tmr_drv.c: 218: break;
  3684                           
  3685                           ;tmr_drv.c: 217: default:
  3686                           
  3687                           ;tmr_drv.c: 215: break;
  3688  002756  D007               	goto	l413
  3689  002758                     l411:
  3690                           
  3691                           ; BSR set to: 0
  3692                           
  3693                           ; BSR set to: 0
  3694  002758  517E               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  3695                           
  3696                           ; Switch size 1, requested type "space"
  3697                           ; Number of cases is 2, Range of values is 2 to 4
  3698                           ; switch strategies available:
  3699                           ; Name         Instructions Cycles
  3700                           ; simple_byte            7     4 (average)
  3701                           ;	Chosen strategy is simple_byte
  3702  00275A  0A02               	xorlw	2	; case 2
  3703  00275C  B4D8               	btfsc	status,2,c
  3704  00275E  D7D0               	goto	l412
  3705  002760  0A06               	xorlw	6	; case 4
  3706  002762  B4D8               	btfsc	status,2,c
  3707  002764  D7E3               	goto	l414
  3708  002766                     l413:
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  3712                           
  3713                           ; BSR set to: 0
  3714  002766  0E00               	movlw	0
  3715  002768  6F7D               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3716                           
  3717                           ;tmr_drv.c: 223: }
  3718  00276A  0012               	return	
  3719  00276C                     l410:
  3720  00276C                     l8304:
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;tmr_drv.c: 224: else
  3724                           ;tmr_drv.c: 225: {
  3725                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  3726  00276C  0E01               	movlw	1
  3727  00276E  6F7D               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3728                           
  3729                           ; BSR set to: 0
  3730  002770  0012               	return	
  3731  002772                     __end_of_Tmr_TmrBPrSet:
  3732                           	opt stack 0
  3733                           tblptru	equ	0xFF8
  3734                           tblptrh	equ	0xFF7
  3735                           tblptrl	equ	0xFF6
  3736                           tablat	equ	0xFF5
  3737                           prodh	equ	0xFF4
  3738                           prodl	equ	0xFF3
  3739                           intcon	equ	0xFF2
  3740                           intcon2	equ	0xFF1
  3741                           intcon3	equ	0xFF0
  3742                           postinc0	equ	0xFEE
  3743                           wreg	equ	0xFE8
  3744                           postdec1	equ	0xFE5
  3745                           fsr1l	equ	0xFE1
  3746                           indf2	equ	0xFDF
  3747                           postinc2	equ	0xFDE
  3748                           postdec2	equ	0xFDD
  3749                           fsr2h	equ	0xFDA
  3750                           fsr2l	equ	0xFD9
  3751                           status	equ	0xFD8
  3752                           
  3753 ;; *************** function _Tmr_TmrBIrqSet *****************
  3754 ;; Defined at:
  3755 ;;		line 153 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  TmrNumb         1    wreg     unsigned char 
  3758 ;;  Priority        1    0[BANK0 ] enum E7710
  3759 ;;  TmrIrqSts       1    1[BANK0 ] unsigned char 
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  TmrNumb         1    2[BANK0 ] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  1    wreg      void 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3771 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3772 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3775 ;;Total ram usage:        3 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:   11
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_Tmr_TmrBConfig
  3782 ;; This function uses a non-reentrant model
  3783 ;;
  3784                           
  3785                           	psect	text10
  3786  00443E                     __ptext10:
  3787                           	opt stack 0
  3788  00443E                     _Tmr_TmrBIrqSet:
  3789                           	opt stack 16
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;incstack = 0
  3793                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  3794  00443E  0100               	movlb	0	; () banked
  3795  004440  6F62               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  3796                           
  3797                           ;tmr_drv.c: 156: switch (TmrNumb)
  3798  004442  D01A               	goto	l402
  3799  004444                     l403:
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  3803  004444  929E               	bcf	3998,1,c	;volatile
  3804                           
  3805                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  3806  004446  B160               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3807  004448  D002               	bra	u6825
  3808  00444A  929F               	bcf	3999,1,c	;volatile
  3809  00444C  D001               	bra	u6826
  3810  00444E                     u6825:
  3811  00444E  829F               	bsf	3999,1,c	;volatile
  3812  004450                     u6826:
  3813                           
  3814                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  3815  004450  0100               	movlb	0	; () banked
  3816  004452  B161               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3817  004454  D002               	bra	u6835
  3818  004456  929D               	bcf	3997,1,c	;volatile
  3819  004458  D001               	bra	u6836
  3820  00445A                     u6835:
  3821  00445A  829D               	bsf	3997,1,c	;volatile
  3822  00445C                     u6836:
  3823                           
  3824                           ;tmr_drv.c: 165: break;
  3825  00445C  0012               	return	
  3826  00445E                     l405:
  3827                           
  3828                           ; BSR set to: 0
  3829                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  3830  00445E  96A4               	bcf	4004,3,c	;volatile
  3831                           
  3832                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  3833  004460  B160               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3834  004462  D002               	bra	u6845
  3835  004464  96A5               	bcf	4005,3,c	;volatile
  3836  004466  D001               	bra	u6846
  3837  004468                     u6845:
  3838  004468  86A5               	bsf	4005,3,c	;volatile
  3839  00446A                     u6846:
  3840                           
  3841                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  3842  00446A  0100               	movlb	0	; () banked
  3843  00446C  B161               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3844  00446E  D002               	bra	u6855
  3845  004470  96A3               	bcf	4003,3,c	;volatile
  3846  004472  D001               	bra	u6856
  3847  004474                     u6855:
  3848  004474  86A3               	bsf	4003,3,c	;volatile
  3849  004476                     u6856:
  3850                           
  3851                           ;tmr_drv.c: 178: }
  3852                           
  3853                           ;tmr_drv.c: 177: break;
  3854                           
  3855                           ;tmr_drv.c: 176: default:
  3856                           
  3857                           ;tmr_drv.c: 174: break;
  3858  004476  0012               	return	
  3859  004478                     l402:
  3860  004478  0100               	movlb	0	; () banked
  3861  00447A  5162               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  3862                           
  3863                           ; Switch size 1, requested type "space"
  3864                           ; Number of cases is 2, Range of values is 2 to 4
  3865                           ; switch strategies available:
  3866                           ; Name         Instructions Cycles
  3867                           ; simple_byte            7     4 (average)
  3868                           ;	Chosen strategy is simple_byte
  3869  00447C  0A02               	xorlw	2	; case 2
  3870  00447E  B4D8               	btfsc	status,2,c
  3871  004480  D7E1               	goto	l403
  3872  004482  0A06               	xorlw	6	; case 4
  3873  004484  A4D8               	btfss	status,2,c
  3874  004486  0012               	return	
  3875  004488  D7EA               	goto	l405
  3876  00448A                     __end_of_Tmr_TmrBIrqSet:
  3877                           	opt stack 0
  3878                           tblptru	equ	0xFF8
  3879                           tblptrh	equ	0xFF7
  3880                           tblptrl	equ	0xFF6
  3881                           tablat	equ	0xFF5
  3882                           prodh	equ	0xFF4
  3883                           prodl	equ	0xFF3
  3884                           intcon	equ	0xFF2
  3885                           intcon2	equ	0xFF1
  3886                           intcon3	equ	0xFF0
  3887                           postinc0	equ	0xFEE
  3888                           wreg	equ	0xFE8
  3889                           postdec1	equ	0xFE5
  3890                           fsr1l	equ	0xFE1
  3891                           indf2	equ	0xFDF
  3892                           postinc2	equ	0xFDE
  3893                           postdec2	equ	0xFDD
  3894                           fsr2h	equ	0xFDA
  3895                           fsr2l	equ	0xFD9
  3896                           status	equ	0xFD8
  3897                           
  3898 ;; *************** function _Tmr_StartTmr *****************
  3899 ;; Defined at:
  3900 ;;		line 242 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  TmrNumb         1    wreg     unsigned char 
  3903 ;; Auto vars:     Size  Location     Type
  3904 ;;  TmrNumb         1    0[BANK0 ] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      void 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3917 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3918 ;;Total ram usage:        1 bytes
  3919 ;; Hardware stack levels used:    1
  3920 ;; Hardware stack levels required when called:   11
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_Tmr_TmrBConfig
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928                           	psect	text11
  3929  004CA4                     __ptext11:
  3930                           	opt stack 0
  3931  004CA4                     _Tmr_StartTmr:
  3932                           	opt stack 16
  3933                           
  3934                           ;incstack = 0
  3935                           ;Tmr_StartTmr@TmrNumb stored from wreg
  3936  004CA4  0100               	movlb	0	; () banked
  3937  004CA6  6F60               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  3938                           
  3939                           ;tmr_drv.c: 245: switch (TmrNumb)
  3940  004CA8  D004               	goto	l420
  3941  004CAA                     l421:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  3945  004CAA  84CA               	bsf	4042,2,c	;volatile
  3946                           
  3947                           ;tmr_drv.c: 250: break;
  3948  004CAC  0012               	return	
  3949  004CAE                     l423:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  3953  004CAE  8476               	bsf	3958,2,c	;volatile
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;tmr_drv.c: 259: }
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;tmr_drv.c: 258: break;
  3960                           
  3961                           ;tmr_drv.c: 257: default:
  3962                           
  3963                           ;tmr_drv.c: 255: break;
  3964  004CB0  0012               	return	
  3965  004CB2                     l420:
  3966                           
  3967                           ; BSR set to: 0
  3968  004CB2  0100               	movlb	0	; () banked
  3969  004CB4  5160               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  3970                           
  3971                           ; Switch size 1, requested type "space"
  3972                           ; Number of cases is 2, Range of values is 2 to 4
  3973                           ; switch strategies available:
  3974                           ; Name         Instructions Cycles
  3975                           ; simple_byte            7     4 (average)
  3976                           ;	Chosen strategy is simple_byte
  3977  004CB6  0A02               	xorlw	2	; case 2
  3978  004CB8  B4D8               	btfsc	status,2,c
  3979  004CBA  D7F7               	goto	l421
  3980  004CBC  0A06               	xorlw	6	; case 4
  3981  004CBE  A4D8               	btfss	status,2,c
  3982  004CC0  0012               	return	
  3983  004CC2  D7F5               	goto	l423
  3984  004CC4                     __end_of_Tmr_StartTmr:
  3985                           	opt stack 0
  3986                           tblptru	equ	0xFF8
  3987                           tblptrh	equ	0xFF7
  3988                           tblptrl	equ	0xFF6
  3989                           tablat	equ	0xFF5
  3990                           prodh	equ	0xFF4
  3991                           prodl	equ	0xFF3
  3992                           intcon	equ	0xFF2
  3993                           intcon2	equ	0xFF1
  3994                           intcon3	equ	0xFF0
  3995                           postinc0	equ	0xFEE
  3996                           wreg	equ	0xFE8
  3997                           postdec1	equ	0xFE5
  3998                           fsr1l	equ	0xFE1
  3999                           indf2	equ	0xFDF
  4000                           postinc2	equ	0xFDE
  4001                           postdec2	equ	0xFDD
  4002                           fsr2h	equ	0xFDA
  4003                           fsr2l	equ	0xFD9
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function _TmrBInit *****************
  4007 ;; Defined at:
  4008 ;;		line 72 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  TmrNumb         1    wreg     unsigned char 
  4011 ;;  Prescaler       1    0[BANK0 ] unsigned char 
  4012 ;;  Postscaler      1    1[BANK0 ] unsigned char 
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  TmrNumb         1    3[BANK0 ] unsigned char 
  4015 ;; Return value:  Size  Location     Type
  4016 ;;                  1    wreg      void 
  4017 ;; Registers used:
  4018 ;;		wreg, status,2, status,0
  4019 ;; Tracked objects:
  4020 ;;		On entry : 0/0
  4021 ;;		On exit  : 0/0
  4022 ;;		Unchanged: 0/0
  4023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4024 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4027 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4028 ;;Total ram usage:        4 bytes
  4029 ;; Hardware stack levels used:    1
  4030 ;; Hardware stack levels required when called:   11
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_Tmr_TmrBConfig
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text12
  4039  00363A                     __ptext12:
  4040                           	opt stack 0
  4041  00363A                     _TmrBInit:
  4042                           	opt stack 16
  4043                           
  4044                           ; BSR set to: 0
  4045                           ;incstack = 0
  4046                           ;TmrBInit@TmrNumb stored from wreg
  4047  00363A  0100               	movlb	0	; () banked
  4048  00363C  6F63               	movwf	TmrBInit@TmrNumb& (0+255),b
  4049                           
  4050                           ;tmr_drv.c: 75: switch (TmrNumb)
  4051  00363E  D03F               	goto	l382
  4052  003640                     l385:
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4056  003640  90CA               	bcf	4042,0,c	;volatile
  4057  003642  D001               	goto	L1
  4058  003644                     l387:
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4062  003644  80CA               	bsf	4042,0,c	;volatile
  4063  003646                     L1:
  4064                           
  4065                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4066  003646  92CA               	bcf	4042,1,c	;volatile
  4067                           
  4068                           ;tmr_drv.c: 91: break;
  4069  003648  D00E               	goto	l386
  4070  00364A                     l388:
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4074  00364A  80CA               	bsf	4042,0,c	;volatile
  4075                           
  4076                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4077  00364C  82CA               	bsf	4042,1,c	;volatile
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;tmr_drv.c: 100: }
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;tmr_drv.c: 99: break;
  4084                           
  4085                           ;tmr_drv.c: 98: default:
  4086                           
  4087                           ;tmr_drv.c: 96: break;
  4088  00364E  D00B               	goto	l386
  4089  003650                     
  4090                           ; BSR set to: 0
  4091  003650  0100               	movlb	0	; () banked
  4092  003652  5160               	movf	TmrBInit@Prescaler& (0+255),w,b
  4093                           
  4094                           ; Switch size 1, requested type "space"
  4095                           ; Number of cases is 3, Range of values is 1 to 16
  4096                           ; switch strategies available:
  4097                           ; Name         Instructions Cycles
  4098                           ; simple_byte           10     6 (average)
  4099                           ;	Chosen strategy is simple_byte
  4100  003654  0A01               	xorlw	1	; case 1
  4101  003656  B4D8               	btfsc	status,2,c
  4102  003658  D7F3               	goto	l385
  4103  00365A  0A05               	xorlw	5	; case 4
  4104  00365C  B4D8               	btfsc	status,2,c
  4105  00365E  D7F2               	goto	l387
  4106  003660  0A14               	xorlw	20	; case 16
  4107  003662  B4D8               	btfsc	status,2,c
  4108  003664  D7F2               	goto	l388
  4109  003666                     l386:
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4113                           
  4114                           ; BSR set to: 0
  4115  003666  C061  F062         	movff	TmrBInit@Postscaler,??_TmrBInit
  4116  00366A  0EFF               	movlw	255
  4117  00366C  2762               	addwf	??_TmrBInit& (0+255),f,b
  4118  00366E  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4119  003670  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4120  003672  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4121  003674  50CA               	movf	4042,w,c	;volatile
  4122  003676  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4123  003678  0B87               	andlw	-121
  4124  00367A  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4125  00367C  6ECA               	movwf	4042,c	;volatile
  4126                           
  4127                           ;tmr_drv.c: 104: break;
  4128  00367E  0012               	return	
  4129  003680                     l393:
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4133  003680  9076               	bcf	3958,0,c	;volatile
  4134  003682  D001               	goto	L2
  4135  003684                     l395:
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4139  003684  8076               	bsf	3958,0,c	;volatile
  4140  003686                     L2:
  4141                           
  4142                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4143  003686  9276               	bcf	3958,1,c	;volatile
  4144                           
  4145                           ;tmr_drv.c: 120: break;
  4146  003688  D00D               	goto	l394
  4147  00368A                     l396:
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4151  00368A  8076               	bsf	3958,0,c	;volatile
  4152                           
  4153                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4154  00368C  8276               	bsf	3958,1,c	;volatile
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;tmr_drv.c: 129: }
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;tmr_drv.c: 128: break;
  4161                           
  4162                           ;tmr_drv.c: 127: default:
  4163                           
  4164                           ;tmr_drv.c: 125: break;
  4165  00368E  D00A               	goto	l394
  4166  003690                     
  4167                           ; BSR set to: 0
  4168                           
  4169                           ; BSR set to: 0
  4170  003690  5160               	movf	TmrBInit@Prescaler& (0+255),w,b
  4171                           
  4172                           ; Switch size 1, requested type "space"
  4173                           ; Number of cases is 3, Range of values is 1 to 16
  4174                           ; switch strategies available:
  4175                           ; Name         Instructions Cycles
  4176                           ; simple_byte           10     6 (average)
  4177                           ;	Chosen strategy is simple_byte
  4178  003692  0A01               	xorlw	1	; case 1
  4179  003694  B4D8               	btfsc	status,2,c
  4180  003696  D7F4               	goto	l393
  4181  003698  0A05               	xorlw	5	; case 4
  4182  00369A  B4D8               	btfsc	status,2,c
  4183  00369C  D7F3               	goto	l395
  4184  00369E  0A14               	xorlw	20	; case 16
  4185  0036A0  B4D8               	btfsc	status,2,c
  4186  0036A2  D7F3               	goto	l396
  4187  0036A4                     l394:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4191                           
  4192                           ; BSR set to: 0
  4193  0036A4  C061  F062         	movff	TmrBInit@Postscaler,??_TmrBInit
  4194  0036A8  0EFF               	movlw	255
  4195  0036AA  2762               	addwf	??_TmrBInit& (0+255),f,b
  4196  0036AC  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4197  0036AE  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4198  0036B0  4762               	rlncf	??_TmrBInit& (0+255),f,b
  4199  0036B2  5076               	movf	3958,w,c	;volatile
  4200  0036B4  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4201  0036B6  0B87               	andlw	-121
  4202  0036B8  1962               	xorwf	??_TmrBInit& (0+255),w,b
  4203  0036BA  6E76               	movwf	3958,c	;volatile
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;tmr_drv.c: 137: }
  4207                           
  4208                           ; BSR set to: 0
  4209                           ;tmr_drv.c: 136: break;
  4210                           
  4211                           ;tmr_drv.c: 135: default:
  4212                           
  4213                           ;tmr_drv.c: 133: break;
  4214  0036BC  0012               	return	
  4215  0036BE                     l382:
  4216                           
  4217                           ; BSR set to: 0
  4218  0036BE  0100               	movlb	0	; () banked
  4219  0036C0  5163               	movf	TmrBInit@TmrNumb& (0+255),w,b
  4220                           
  4221                           ; Switch size 1, requested type "space"
  4222                           ; Number of cases is 2, Range of values is 2 to 4
  4223                           ; switch strategies available:
  4224                           ; Name         Instructions Cycles
  4225                           ; simple_byte            7     4 (average)
  4226                           ;	Chosen strategy is simple_byte
  4227  0036C2  0A02               	xorlw	2	; case 2
  4228  0036C4  B4D8               	btfsc	status,2,c
  4229  0036C6  D7C4               	goto	l384
  4230  0036C8  0A06               	xorlw	6	; case 4
  4231  0036CA  A4D8               	btfss	status,2,c
  4232  0036CC  0012               	return	
  4233  0036CE  D7E0               	goto	l392
  4234  0036D0                     __end_of_TmrBInit:
  4235                           	opt stack 0
  4236                           tblptru	equ	0xFF8
  4237                           tblptrh	equ	0xFF7
  4238                           tblptrl	equ	0xFF6
  4239                           tablat	equ	0xFF5
  4240                           prodh	equ	0xFF4
  4241                           prodl	equ	0xFF3
  4242                           intcon	equ	0xFF2
  4243                           intcon2	equ	0xFF1
  4244                           intcon3	equ	0xFF0
  4245                           postinc0	equ	0xFEE
  4246                           wreg	equ	0xFE8
  4247                           postdec1	equ	0xFE5
  4248                           fsr1l	equ	0xFE1
  4249                           indf2	equ	0xFDF
  4250                           postinc2	equ	0xFDE
  4251                           postdec2	equ	0xFDD
  4252                           fsr2h	equ	0xFDA
  4253                           fsr2l	equ	0xFD9
  4254                           status	equ	0xFD8
  4255                           
  4256 ;; *************** function _Sch_MainScheduler *****************
  4257 ;; Defined at:
  4258 ;;		line 175 in file "../Source/c/02_Osl/os_sched.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;		None
  4261 ;; Auto vars:     Size  Location     Type
  4262 ;;		None
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  1    wreg      void 
  4265 ;; Registers used:
  4266 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4267 ;; Tracked objects:
  4268 ;;		On entry : 0/0
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;Total ram usage:        0 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; Hardware stack levels required when called:   22
  4279 ;; This function calls:
  4280 ;;		_InitializeTasks
  4281 ;;		_ScheduleTasks
  4282 ;; This function is called by:
  4283 ;;		_main
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           	psect	text13
  4288  004D22                     __ptext13:
  4289                           	opt stack 0
  4290  004D22                     _Sch_MainScheduler:
  4291                           	opt stack 8
  4292                           
  4293                           ;os_sched.c: 178: InitializeTasks();
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;incstack = 0
  4297  004D22  EC27  F01E         	call	_InitializeTasks	;wreg free
  4298                           
  4299                           ;os_sched.c: 180: SystemState = RunningState;
  4300  004D26  0E01               	movlw	1
  4301  004D28  0100               	movlb	0	; () banked
  4302  004D2A  6FFE               	movwf	_SystemState& (0+255),b
  4303  004D2C                     
  4304                           ;os_sched.c: 188: {
  4305                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  4306                           
  4307                           ; BSR set to: 0
  4308  004D2C  0101               	movlb	1	; () banked
  4309  004D2E  51E1               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  4310  004D30  A4D8               	btfss	status,2,c
  4311  004D32  D7FC               	goto	l721
  4312                           
  4313                           ; BSR set to: 1
  4314                           ;os_sched.c: 191: {
  4315                           ;os_sched.c: 196: ScheduleTasks();
  4316  004D34  EC1D  F011         	call	_ScheduleTasks	;wreg free
  4317                           
  4318                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  4319  004D38  0E01               	movlw	1
  4320  004D3A  0101               	movlb	1	; () banked
  4321  004D3C  6FE1               	movwf	_MainSystemTimebaseFlag& (0+255),b
  4322                           
  4323                           ; BSR set to: 1
  4324                           
  4325                           ; BSR set to: 1
  4326  004D3E  D7F6               	goto	l721
  4327  004D40                     __end_of_Sch_MainScheduler:
  4328                           	opt stack 0
  4329                           tblptru	equ	0xFF8
  4330                           tblptrh	equ	0xFF7
  4331                           tblptrl	equ	0xFF6
  4332                           tablat	equ	0xFF5
  4333                           prodh	equ	0xFF4
  4334                           prodl	equ	0xFF3
  4335                           intcon	equ	0xFF2
  4336                           intcon2	equ	0xFF1
  4337                           intcon3	equ	0xFF0
  4338                           postinc0	equ	0xFEE
  4339                           wreg	equ	0xFE8
  4340                           postdec1	equ	0xFE5
  4341                           fsr1l	equ	0xFE1
  4342                           indf2	equ	0xFDF
  4343                           postinc2	equ	0xFDE
  4344                           postdec2	equ	0xFDD
  4345                           fsr2h	equ	0xFDA
  4346                           fsr2l	equ	0xFD9
  4347                           status	equ	0xFD8
  4348                           
  4349 ;; *************** function _ScheduleTasks *****************
  4350 ;; Defined at:
  4351 ;;		line 99 in file "../Source/c/02_Osl/os_sched.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  ActiveTaskIn    1  143[BANK0 ] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4366 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4367 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4368 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4369 ;;Total ram usage:        5 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:   21
  4372 ;; This function calls:
  4373 ;;		_I2cSlv_MainTask
  4374 ;;		_Led_MainTask
  4375 ;;		_MdmWifiCmd_MainTask
  4376 ;;		_MdmWifiHttp_MainTask
  4377 ;;		_MdmWifi_DrvMainFn
  4378 ;;		_MdmWifi_MainTask
  4379 ;;		_Rtcm_MainTask
  4380 ;;		_Term_MainTask
  4381 ;;		_UsbDevice_MainTask
  4382 ;; This function is called by:
  4383 ;;		_Sch_MainScheduler
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           
  4387                           	psect	text14
  4388  00223A                     __ptext14:
  4389                           	opt stack 0
  4390  00223A                     _ScheduleTasks:
  4391                           	opt stack 8
  4392                           
  4393                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  4394                           
  4395                           ; BSR set to: 1
  4396                           ;incstack = 0
  4397  00223A  0E00               	movlw	0
  4398  00223C  0100               	movlb	0	; () banked
  4399  00223E  6FEF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4400                           
  4401                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  4402  002240  0E00               	movlw	0
  4403  002242  6FEF               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4404  002244                     l9106:
  4405                           
  4406                           ; BSR set to: 0
  4407  002244  0EDF               	movlw	low _TaskNumber
  4408  002246  6EF6               	movwf	tblptrl,c
  4409  002248                     	if	1	;There is more than 1 active tblptr byte
  4410  002248  0EFC               	movlw	high _TaskNumber
  4411  00224A  6EF7               	movwf	tblptrh,c
  4412  00224C                     	endif
  4413  00224C                     	if	1	;There are 3 active tblptr bytes
  4414  00224C  0E00               	movlw	low (_TaskNumber shr (0+16))
  4415  00224E  6EF8               	movwf	tblptru,c
  4416  002250                     	endif
  4417  002250  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4418  002252  6FEB               	movwf	??_ScheduleTasks& (0+255),b
  4419  002254  6BEC               	clrf	(??_ScheduleTasks+1)& (0+255),b
  4420  002256  0009               	tblrd		*+
  4421  002258  50F5               	movf	tablat,w,c
  4422  00225A  5DEB               	subwf	??_ScheduleTasks& (0+255),w,b
  4423  00225C  0009               	tblrd		*+
  4424  00225E  50F5               	movf	tablat,w,c
  4425  002260  59EC               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  4426  002262  B0D8               	btfsc	status,0,c
  4427  002264  0012               	return	
  4428                           
  4429                           ; BSR set to: 0
  4430                           ;os_sched.c: 106: {
  4431                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  4432                           
  4433                           ; BSR set to: 0
  4434                           
  4435                           ; BSR set to: 0
  4436  002266  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4437  002268  0D08               	mullw	8
  4438  00226A  0E03               	movlw	3
  4439  00226C  26F3               	addwf	prodl,f,c
  4440  00226E  0E00               	movlw	0
  4441  002270  22F4               	addwfc	prodh,f,c
  4442  002272  0E8B               	movlw	low _TaskTable
  4443  002274  24F3               	addwf	prodl,w,c
  4444  002276  6ED9               	movwf	fsr2l,c
  4445  002278  0E02               	movlw	high _TaskTable
  4446  00227A  20F4               	addwfc	prodh,w,c
  4447  00227C  6EDA               	movwf	fsr2h,c
  4448  00227E  2ADE               	incf	postinc2,f,c
  4449  002280  0E00               	movlw	0
  4450  002282  22DD               	addwfc	postdec2,f,c
  4451                           
  4452                           ; BSR set to: 0
  4453                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  4454  002284  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4455  002286  0D08               	mullw	8
  4456  002288  0E05               	movlw	5
  4457  00228A  26F3               	addwf	prodl,f,c
  4458  00228C  0E00               	movlw	0
  4459  00228E  22F4               	addwfc	prodh,f,c
  4460  002290  0E8B               	movlw	low _TaskTable
  4461  002292  24F3               	addwf	prodl,w,c
  4462  002294  6ED9               	movwf	fsr2l,c
  4463  002296  0E02               	movlw	high _TaskTable
  4464  002298  20F4               	addwfc	prodh,w,c
  4465  00229A  6EDA               	movwf	fsr2h,c
  4466  00229C  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4467  00229E  0D08               	mullw	8
  4468  0022A0  0E03               	movlw	3
  4469  0022A2  26F3               	addwf	prodl,f,c
  4470  0022A4  0E00               	movlw	0
  4471  0022A6  22F4               	addwfc	prodh,f,c
  4472  0022A8  0E8B               	movlw	low _TaskTable
  4473  0022AA  24F3               	addwf	prodl,w,c
  4474  0022AC  6EE1               	movwf	fsr1l,c
  4475  0022AE  0E02               	movlw	high _TaskTable
  4476  0022B0  20F4               	addwfc	prodh,w,c
  4477  0022B2  6EE2               	movwf	fsr1h,c
  4478  0022B4  50DE               	movf	postinc2,w,c
  4479  0022B6  5CE6               	subwf	postinc1,w,c
  4480  0022B8  50DE               	movf	postinc2,w,c
  4481  0022BA  58E6               	subwfb	postinc1,w,c
  4482  0022BC  A0D8               	btfss	status,0,c
  4483  0022BE  D051               	goto	l706
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;os_sched.c: 111: {
  4487                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  4488  0022C0  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4489  0022C2  0D08               	mullw	8
  4490  0022C4  0E03               	movlw	3
  4491  0022C6  26F3               	addwf	prodl,f,c
  4492  0022C8  0E00               	movlw	0
  4493  0022CA  22F4               	addwfc	prodh,f,c
  4494  0022CC  0E8B               	movlw	low _TaskTable
  4495  0022CE  24F3               	addwf	prodl,w,c
  4496  0022D0  6ED9               	movwf	fsr2l,c
  4497  0022D2  0E02               	movlw	high _TaskTable
  4498  0022D4  20F4               	addwfc	prodh,w,c
  4499  0022D6  6EDA               	movwf	fsr2h,c
  4500  0022D8  0E00               	movlw	0
  4501  0022DA  6EDE               	movwf	postinc2,c
  4502  0022DC  0E00               	movlw	0
  4503  0022DE  6EDD               	movwf	postdec2,c
  4504                           
  4505                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  4506  0022E0  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4507  0022E2  0D08               	mullw	8
  4508  0022E4  0E02               	movlw	2
  4509  0022E6  26F3               	addwf	prodl,f,c
  4510  0022E8  0E00               	movlw	0
  4511  0022EA  22F4               	addwfc	prodh,f,c
  4512  0022EC  0E8B               	movlw	low _TaskTable
  4513  0022EE  24F3               	addwf	prodl,w,c
  4514  0022F0  6ED9               	movwf	fsr2l,c
  4515  0022F2  0E02               	movlw	high _TaskTable
  4516  0022F4  20F4               	addwfc	prodh,w,c
  4517  0022F6  6EDA               	movwf	fsr2h,c
  4518  0022F8  0E01               	movlw	1
  4519  0022FA  6EDF               	movwf	indf2,c
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4523  0022FC  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4524  0022FE  0D08               	mullw	8
  4525  002300  0E8B               	movlw	low _TaskTable
  4526  002302  24F3               	addwf	prodl,w,c
  4527  002304  6ED9               	movwf	fsr2l,c
  4528  002306  0E02               	movlw	high _TaskTable
  4529  002308  20F4               	addwfc	prodh,w,c
  4530  00230A  6EDA               	movwf	fsr2h,c
  4531  00230C  CFDE F0EB          	movff	postinc2,??_ScheduleTasks
  4532  002310  CFDD F0EC          	movff	postdec2,??_ScheduleTasks+1
  4533  002314  D801               	call	u7928
  4534  002316  D016               	goto	u7929
  4535  002318                     u7928:
  4536  002318  0005               	push	
  4537  00231A  6EFA               	movwf	pclath,c
  4538  00231C  51EB               	movf	??_ScheduleTasks& (0+255),w,b
  4539  00231E  6EFD               	movwf	tosl,c
  4540  002320  51EC               	movf	(??_ScheduleTasks+1)& (0+255),w,b
  4541  002322  6EFE               	movwf	tosh,c
  4542  002324  6AFF               	clrf	tosu,c
  4543  002326  50FA               	movf	pclath,w,c
  4544  002328  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4545  00232A  0D08               	mullw	8
  4546  00232C  0E07               	movlw	7
  4547  00232E  26F3               	addwf	prodl,f,c
  4548  002330  0E00               	movlw	0
  4549  002332  22F4               	addwfc	prodh,f,c
  4550  002334  0E8B               	movlw	low _TaskTable
  4551  002336  24F3               	addwf	prodl,w,c
  4552  002338  6ED9               	movwf	fsr2l,c
  4553  00233A  0E02               	movlw	high _TaskTable
  4554  00233C  20F4               	addwfc	prodh,w,c
  4555  00233E  6EDA               	movwf	fsr2h,c
  4556  002340  50DF               	movf	indf2,w,c
  4557  002342  0012               	return		;indir
  4558  002344                     u7929:
  4559                           
  4560                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  4561  002344  0100               	movlb	0	; () banked
  4562  002346  51EF               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4563  002348  0D08               	mullw	8
  4564  00234A  0E02               	movlw	2
  4565  00234C  26F3               	addwf	prodl,f,c
  4566  00234E  0E00               	movlw	0
  4567  002350  22F4               	addwfc	prodh,f,c
  4568  002352  0E8B               	movlw	low _TaskTable
  4569  002354  24F3               	addwf	prodl,w,c
  4570  002356  6ED9               	movwf	fsr2l,c
  4571  002358  0E02               	movlw	high _TaskTable
  4572  00235A  20F4               	addwfc	prodh,w,c
  4573  00235C  6EDA               	movwf	fsr2h,c
  4574  00235E  0E00               	movlw	0
  4575  002360  6EDF               	movwf	indf2,c
  4576  002362                     l706:
  4577                           
  4578                           ; BSR set to: 0
  4579                           
  4580                           ; BSR set to: 0
  4581                           
  4582                           ;os_sched.c: 117: else
  4583                           ;os_sched.c: 118: {
  4584                           
  4585                           ; BSR set to: 0
  4586  002362  2BEF               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  4587  002364  D76F               	goto	l9106
  4588  002366                     __end_of_ScheduleTasks:
  4589                           	opt stack 0
  4590                           tosu	equ	0xFFF
  4591                           tosh	equ	0xFFE
  4592                           tosl	equ	0xFFD
  4593                           pclath	equ	0xFFA
  4594                           tblptru	equ	0xFF8
  4595                           tblptrh	equ	0xFF7
  4596                           tblptrl	equ	0xFF6
  4597                           tablat	equ	0xFF5
  4598                           prodh	equ	0xFF4
  4599                           prodl	equ	0xFF3
  4600                           intcon	equ	0xFF2
  4601                           intcon2	equ	0xFF1
  4602                           intcon3	equ	0xFF0
  4603                           postinc0	equ	0xFEE
  4604                           wreg	equ	0xFE8
  4605                           postinc1	equ	0xFE6
  4606                           postdec1	equ	0xFE5
  4607                           fsr1h	equ	0xFE2
  4608                           fsr1l	equ	0xFE1
  4609                           indf2	equ	0xFDF
  4610                           postinc2	equ	0xFDE
  4611                           postdec2	equ	0xFDD
  4612                           fsr2h	equ	0xFDA
  4613                           fsr2l	equ	0xFD9
  4614                           status	equ	0xFD8
  4615                           
  4616 ;; *************** function _InitializeTasks *****************
  4617 ;; Defined at:
  4618 ;;		line 79 in file "../Source/c/02_Osl/os_sched.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;  ActiveTaskIn    1  141[BANK0 ] unsigned char 
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4634 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4635 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4636 ;;Total ram usage:        3 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:   21
  4639 ;; This function calls:
  4640 ;;		_I2cSlv_MainTask
  4641 ;;		_Led_MainTask
  4642 ;;		_MdmWifiCmd_MainTask
  4643 ;;		_MdmWifiHttp_MainTask
  4644 ;;		_MdmWifi_DrvMainFn
  4645 ;;		_MdmWifi_MainTask
  4646 ;;		_Rtcm_MainTask
  4647 ;;		_Term_MainTask
  4648 ;;		_UsbDevice_MainTask
  4649 ;; This function is called by:
  4650 ;;		_Sch_MainScheduler
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text15
  4655  003C4E                     __ptext15:
  4656                           	opt stack 0
  4657  003C4E                     _InitializeTasks:
  4658                           	opt stack 8
  4659                           
  4660                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;incstack = 0
  4664  003C4E  0E00               	movlw	0
  4665  003C50  0100               	movlb	0	; () banked
  4666  003C52  6FED               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4667                           
  4668                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  4669  003C54  0E00               	movlw	0
  4670  003C56  6FED               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4671  003C58                     l9094:
  4672                           
  4673                           ; BSR set to: 0
  4674  003C58  0EDF               	movlw	low _TaskNumber
  4675  003C5A  6EF6               	movwf	tblptrl,c
  4676  003C5C                     	if	1	;There is more than 1 active tblptr byte
  4677  003C5C  0EFC               	movlw	high _TaskNumber
  4678  003C5E  6EF7               	movwf	tblptrh,c
  4679  003C60                     	endif
  4680  003C60                     	if	1	;There are 3 active tblptr bytes
  4681  003C60  0E00               	movlw	low (_TaskNumber shr (0+16))
  4682  003C62  6EF8               	movwf	tblptru,c
  4683  003C64                     	endif
  4684  003C64  51ED               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4685  003C66  6FEB               	movwf	??_InitializeTasks& (0+255),b
  4686  003C68  6BEC               	clrf	(??_InitializeTasks+1)& (0+255),b
  4687  003C6A  0009               	tblrd		*+
  4688  003C6C  50F5               	movf	tablat,w,c
  4689  003C6E  5DEB               	subwf	??_InitializeTasks& (0+255),w,b
  4690  003C70  0009               	tblrd		*+
  4691  003C72  50F5               	movf	tablat,w,c
  4692  003C74  59EC               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  4693  003C76  B0D8               	btfsc	status,0,c
  4694  003C78  0012               	return	
  4695                           
  4696                           ; BSR set to: 0
  4697                           ;os_sched.c: 86: {
  4698                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4699                           
  4700                           ; BSR set to: 0
  4701                           
  4702                           ; BSR set to: 0
  4703  003C7A  51ED               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4704  003C7C  0D08               	mullw	8
  4705  003C7E  0E8B               	movlw	low _TaskTable
  4706  003C80  24F3               	addwf	prodl,w,c
  4707  003C82  6ED9               	movwf	fsr2l,c
  4708  003C84  0E02               	movlw	high _TaskTable
  4709  003C86  20F4               	addwfc	prodh,w,c
  4710  003C88  6EDA               	movwf	fsr2h,c
  4711  003C8A  CFDE F0EB          	movff	postinc2,??_InitializeTasks
  4712  003C8E  CFDD F0EC          	movff	postdec2,??_InitializeTasks+1
  4713  003C92  D801               	call	u7888
  4714  003C94  D016               	goto	u7889
  4715  003C96                     u7888:
  4716  003C96  0005               	push	
  4717  003C98  6EFA               	movwf	pclath,c
  4718  003C9A  51EB               	movf	??_InitializeTasks& (0+255),w,b
  4719  003C9C  6EFD               	movwf	tosl,c
  4720  003C9E  51EC               	movf	(??_InitializeTasks+1)& (0+255),w,b
  4721  003CA0  6EFE               	movwf	tosh,c
  4722  003CA2  6AFF               	clrf	tosu,c
  4723  003CA4  50FA               	movf	pclath,w,c
  4724  003CA6  51ED               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4725  003CA8  0D08               	mullw	8
  4726  003CAA  0E07               	movlw	7
  4727  003CAC  26F3               	addwf	prodl,f,c
  4728  003CAE  0E00               	movlw	0
  4729  003CB0  22F4               	addwfc	prodh,f,c
  4730  003CB2  0E8B               	movlw	low _TaskTable
  4731  003CB4  24F3               	addwf	prodl,w,c
  4732  003CB6  6ED9               	movwf	fsr2l,c
  4733  003CB8  0E02               	movlw	high _TaskTable
  4734  003CBA  20F4               	addwfc	prodh,w,c
  4735  003CBC  6EDA               	movwf	fsr2h,c
  4736  003CBE  50DF               	movf	indf2,w,c
  4737  003CC0  0012               	return		;indir
  4738  003CC2                     u7889:
  4739  003CC2  0100               	movlb	0	; () banked
  4740  003CC4  2BED               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  4741  003CC6  D7C8               	goto	l9094
  4742  003CC8                     __end_of_InitializeTasks:
  4743                           	opt stack 0
  4744                           tosu	equ	0xFFF
  4745                           tosh	equ	0xFFE
  4746                           tosl	equ	0xFFD
  4747                           pclath	equ	0xFFA
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           prodh	equ	0xFF4
  4753                           prodl	equ	0xFF3
  4754                           intcon	equ	0xFF2
  4755                           intcon2	equ	0xFF1
  4756                           intcon3	equ	0xFF0
  4757                           postinc0	equ	0xFEE
  4758                           wreg	equ	0xFE8
  4759                           postinc1	equ	0xFE6
  4760                           postdec1	equ	0xFE5
  4761                           fsr1h	equ	0xFE2
  4762                           fsr1l	equ	0xFE1
  4763                           indf2	equ	0xFDF
  4764                           postinc2	equ	0xFDE
  4765                           postdec2	equ	0xFDD
  4766                           fsr2h	equ	0xFDA
  4767                           fsr2l	equ	0xFD9
  4768                           status	equ	0xFD8
  4769                           
  4770 ;; *************** function _Term_MainTask *****************
  4771 ;; Defined at:
  4772 ;;		line 816 in file "../Source/c/03_Sml/02_Ssl/term.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  Options         1    wreg     unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  Options         1    0[COMRAM] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4790 ;;Total ram usage:        0 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:   16
  4793 ;; This function calls:
  4794 ;;		_Term_MainSm
  4795 ;; This function is called by:
  4796 ;;		_InitializeTasks
  4797 ;;		_ScheduleTasks
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text16
  4802  004D78                     __ptext16:
  4803                           	opt stack 0
  4804  004D78                     _Term_MainTask:
  4805                           	opt stack 12
  4806                           
  4807                           ;term.c: 818: switch (SystemState)
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;incstack = 0
  4811  004D78  D003               	goto	l2113
  4812  004D7A                     
  4813                           ;term.c: 829: Term_MainSm();
  4814  004D7A  EC72  F002         	call	_Term_MainSm
  4815                           
  4816                           ;term.c: 836: }
  4817                           
  4818                           ;term.c: 835: break;
  4819                           
  4820                           ;term.c: 834: default:
  4821                           
  4822                           ;term.c: 831: break;
  4823  004D7E  0012               	return	
  4824  004D80                     l2113:
  4825  004D80  0100               	movlb	0	; () banked
  4826  004D82  51FE               	movf	_SystemState& (0+255),w,b
  4827                           
  4828                           ; Switch size 1, requested type "space"
  4829                           ; Number of cases is 2, Range of values is 0 to 1
  4830                           ; switch strategies available:
  4831                           ; Name         Instructions Cycles
  4832                           ; simple_byte            7     4 (average)
  4833                           ;	Chosen strategy is simple_byte
  4834  004D84  0A00               	xorlw	0	; case 0
  4835  004D86  B4D8               	btfsc	status,2,c
  4836  004D88  0012               	return	
  4837  004D8A  0A01               	xorlw	1	; case 1
  4838  004D8C  A4D8               	btfss	status,2,c
  4839  004D8E  0012               	return	
  4840  004D90  D7F4               	goto	l2116
  4841  004D92                     __end_of_Term_MainTask:
  4842                           	opt stack 0
  4843                           tosu	equ	0xFFF
  4844                           tosh	equ	0xFFE
  4845                           tosl	equ	0xFFD
  4846                           pclath	equ	0xFFA
  4847                           tblptru	equ	0xFF8
  4848                           tblptrh	equ	0xFF7
  4849                           tblptrl	equ	0xFF6
  4850                           tablat	equ	0xFF5
  4851                           prodh	equ	0xFF4
  4852                           prodl	equ	0xFF3
  4853                           intcon	equ	0xFF2
  4854                           intcon2	equ	0xFF1
  4855                           intcon3	equ	0xFF0
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           postinc1	equ	0xFE6
  4859                           postdec1	equ	0xFE5
  4860                           fsr1h	equ	0xFE2
  4861                           fsr1l	equ	0xFE1
  4862                           indf2	equ	0xFDF
  4863                           postinc2	equ	0xFDE
  4864                           postdec2	equ	0xFDD
  4865                           fsr2h	equ	0xFDA
  4866                           fsr2l	equ	0xFD9
  4867                           status	equ	0xFD8
  4868                           
  4869 ;; *************** function _Rtcm_MainTask *****************
  4870 ;; Defined at:
  4871 ;;		line 99 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  Options         1    wreg     unsigned char 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;  Options         1    0[COMRAM] unsigned char 
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4889 ;;Total ram usage:        0 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:   14
  4892 ;; This function calls:
  4893 ;;		_Rtcc_AlarmConfig
  4894 ;;		_Rtcc_LockRtc
  4895 ;;		_Rtcc_RtcConfig
  4896 ;;		_Rtcc_SetRtcStatus
  4897 ;;		_Rtcc_UnlockRtc
  4898 ;;		_Rtcm_GetRtccDate
  4899 ;;		_Rtcm_SetAlarmAction
  4900 ;;		_Rtcm_SetRtccDate
  4901 ;; This function is called by:
  4902 ;;		_InitializeTasks
  4903 ;;		_ScheduleTasks
  4904 ;; This function uses a non-reentrant model
  4905 ;;
  4906                           
  4907                           	psect	text17
  4908  003506                     __ptext17:
  4909                           	opt stack 0
  4910  003506                     _Rtcm_MainTask:
  4911                           	opt stack 14
  4912                           
  4913                           ;rtcm.c: 101: switch (SystemState)
  4914                           
  4915                           ;incstack = 0
  4916  003506  D044               	goto	l1856
  4917  003508                     l1857:
  4918                           
  4919                           ; BSR set to: 0
  4920                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  4921  003508  86CD               	bsf	4045,3,c	;volatile
  4922                           
  4923                           ; BSR set to: 0
  4924                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  4925  00350A  0E00               	movlw	0
  4926  00350C  0101               	movlb	1	; () banked
  4927  00350E  6FBD               	movwf	_RtcConfig& (0+255),b
  4928                           
  4929                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  4930  003510  0E00               	movlw	0
  4931  003512  6FBE               	movwf	(_RtcConfig+1)& (0+255),b
  4932                           
  4933                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  4934  003514  0E01               	movlw	1
  4935  003516  6FBF               	movwf	(_RtcConfig+2)& (0+255),b
  4936                           
  4937                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  4938  003518  0E01               	movlw	1
  4939  00351A  6FC0               	movwf	(_RtcConfig+3)& (0+255),b
  4940                           
  4941                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  4942  00351C  0E01               	movlw	1
  4943  00351E  6FB9               	movwf	_AlCfg& (0+255),b
  4944                           
  4945                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  4946  003520  0E01               	movlw	1
  4947  003522  6FBA               	movwf	(_AlCfg+1)& (0+255),b
  4948                           
  4949                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  4950  003524  0E01               	movlw	1
  4951  003526  6FBB               	movwf	(_AlCfg+2)& (0+255),b
  4952                           
  4953                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  4954  003528  0E00               	movlw	0
  4955  00352A  6FBC               	movwf	(_AlCfg+3)& (0+255),b
  4956                           
  4957                           ; BSR set to: 1
  4958                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  4959  00352C  EC28  F027         	call	_Rtcc_UnlockRtc	;wreg free
  4960                           
  4961                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  4962  003530  0EBD               	movlw	low _RtcConfig
  4963  003532  0100               	movlb	0	; () banked
  4964  003534  6F61               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  4965  003536  0E01               	movlw	high _RtcConfig
  4966  003538  6F62               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  4967  00353A  EC33  F01A         	call	_Rtcc_RtcConfig	;wreg free
  4968                           
  4969                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  4970  00353E  0EB9               	movlw	low _AlCfg
  4971  003540  0100               	movlb	0	; () banked
  4972  003542  6F60               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  4973  003544  0E01               	movlw	high _AlCfg
  4974  003546  6F61               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  4975  003548  EC44  F01F         	call	_Rtcc_AlarmConfig	;wreg free
  4976                           
  4977                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  4978  00354C  0E01               	movlw	1
  4979  00354E  ECE1  F026         	call	_Rtcc_SetRtcStatus
  4980                           
  4981                           ;rtcm.c: 127: Rtcc_LockRtc();
  4982  003552  EC30  F027         	call	_Rtcc_LockRtc	;wreg free
  4983                           
  4984                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  4985  003556  EE21  F00A         	lfsr	2,_Rtcm_SystemDate
  4986  00355A  EE00  F06C         	lfsr	0,Rtcm_SetRtccDate@Date
  4987  00355E  0E07               	movlw	7
  4988  003560                     u7781:
  4989  003560  CFDB FFEB          	movff	plusw2,plusw0
  4990  003564  06E8               	decf	wreg,f,c
  4991  003566  E2FC               	bc	u7781
  4992  003568  EC7D  F021         	call	_Rtcm_SetRtccDate	;wreg free
  4993                           
  4994                           ;rtcm.c: 131: Rtcm_SetAlarmAction(&Alarm);
  4995  00356C  0E6C               	movlw	low _Alarm
  4996  00356E  0100               	movlb	0	; () banked
  4997  003570  6F62               	movwf	Rtcm_SetAlarmAction@Action& (0+255),b
  4998  003572  0E4B               	movlw	high _Alarm
  4999  003574  6F63               	movwf	(Rtcm_SetAlarmAction@Action+1)& (0+255),b
  5000  003576  EC57  F027         	call	_Rtcm_SetAlarmAction	;wreg free
  5001                           
  5002                           ;rtcm.c: 156: break;
  5003  00357A  0012               	return	
  5004  00357C                     
  5005                           ;rtcm.c: 161: Rtcm_SystemDate = Rtcm_GetRtccDate();
  5006  00357C  ECB0  F01F         	call	_Rtcm_GetRtccDate	;wreg free
  5007  003580  EE21  F00A         	lfsr	2,_Rtcm_SystemDate
  5008  003584  0E07               	movlw	7
  5009  003586                     u7791:
  5010  003586  CFEB FFDB          	movff	plusw0,plusw2
  5011  00358A  06E8               	decf	wreg,f,c
  5012  00358C  E2FC               	bc	u7791
  5013                           
  5014                           ;rtcm.c: 167: }
  5015                           
  5016                           ;rtcm.c: 166: break;
  5017                           
  5018                           ;rtcm.c: 165: default:
  5019                           
  5020                           ;rtcm.c: 162: break;
  5021  00358E  0012               	return	
  5022  003590                     l1856:
  5023  003590  0100               	movlb	0	; () banked
  5024  003592  51FE               	movf	_SystemState& (0+255),w,b
  5025                           
  5026                           ; Switch size 1, requested type "space"
  5027                           ; Number of cases is 2, Range of values is 0 to 1
  5028                           ; switch strategies available:
  5029                           ; Name         Instructions Cycles
  5030                           ; simple_byte            7     4 (average)
  5031                           ;	Chosen strategy is simple_byte
  5032  003594  0A00               	xorlw	0	; case 0
  5033  003596  B4D8               	btfsc	status,2,c
  5034  003598  D7B7               	goto	l1857
  5035  00359A  0A01               	xorlw	1	; case 1
  5036  00359C  A4D8               	btfss	status,2,c
  5037  00359E  0012               	return	
  5038  0035A0  D7ED               	goto	l1859
  5039  0035A2                     __end_of_Rtcm_MainTask:
  5040                           	opt stack 0
  5041                           tosu	equ	0xFFF
  5042                           tosh	equ	0xFFE
  5043                           tosl	equ	0xFFD
  5044                           pclath	equ	0xFFA
  5045                           tblptru	equ	0xFF8
  5046                           tblptrh	equ	0xFF7
  5047                           tblptrl	equ	0xFF6
  5048                           tablat	equ	0xFF5
  5049                           prodh	equ	0xFF4
  5050                           prodl	equ	0xFF3
  5051                           intcon	equ	0xFF2
  5052                           intcon2	equ	0xFF1
  5053                           intcon3	equ	0xFF0
  5054                           postinc0	equ	0xFEE
  5055                           plusw0	equ	0xFEB
  5056                           wreg	equ	0xFE8
  5057                           postinc1	equ	0xFE6
  5058                           postdec1	equ	0xFE5
  5059                           fsr1h	equ	0xFE2
  5060                           fsr1l	equ	0xFE1
  5061                           indf2	equ	0xFDF
  5062                           postinc2	equ	0xFDE
  5063                           postdec2	equ	0xFDD
  5064                           plusw2	equ	0xFDB
  5065                           fsr2h	equ	0xFDA
  5066                           fsr2l	equ	0xFD9
  5067                           status	equ	0xFD8
  5068                           
  5069 ;; *************** function _Led_MainTask *****************
  5070 ;; Defined at:
  5071 ;;		line 169 in file "../Source/c/03_Sml/02_Ssl/led.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  Options         1    wreg     unsigned char 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  Options         1    0[COMRAM] unsigned char 
  5076 ;; Return value:  Size  Location     Type
  5077 ;;                  1    wreg      void 
  5078 ;; Registers used:
  5079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5080 ;; Tracked objects:
  5081 ;;		On entry : 0/0
  5082 ;;		On exit  : 0/0
  5083 ;;		Unchanged: 0/0
  5084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;Total ram usage:        0 bytes
  5090 ;; Hardware stack levels used:    1
  5091 ;; Hardware stack levels required when called:   13
  5092 ;; This function calls:
  5093 ;;		_OsTmr_StartTimer
  5094 ;; This function is called by:
  5095 ;;		_InitializeTasks
  5096 ;;		_ScheduleTasks
  5097 ;; This function uses a non-reentrant model
  5098 ;;
  5099                           
  5100                           	psect	text18
  5101  004800                     __ptext18:
  5102                           	opt stack 0
  5103  004800                     _Led_MainTask:
  5104                           	opt stack 15
  5105                           
  5106                           ;led.c: 171: static SwTimerType LedTimer1 = { 1u, SwTimerExpired, 0, 0, };
  5107                           ;led.c: 172: static SwTimerType LedTimer2 = { 1u, SwTimerExpired, 0, 0, };
  5108                           ;led.c: 174: switch (SystemState)
  5109                           
  5110                           ;incstack = 0
  5111  004800  D015               	goto	l1795
  5112  004802                     l1796:
  5113                           
  5114                           ; BSR set to: 0
  5115                           ;led.c: 179: TRISDbits.TRISD4 = ((UINT8)(0));
  5116  004802  9895               	bcf	3989,4,c	;volatile
  5117                           
  5118                           ;led.c: 180: TRISDbits.TRISD5 = ((UINT8)(0));
  5119  004804  9A95               	bcf	3989,5,c	;volatile
  5120                           
  5121                           ;led.c: 181: TRISDbits.TRISD6 = ((UINT8)(0));
  5122  004806  9C95               	bcf	3989,6,c	;volatile
  5123                           
  5124                           ;led.c: 182: PORTDbits.RD4 = ((UINT8)(0));
  5125  004808  9883               	bcf	3971,4,c	;volatile
  5126                           
  5127                           ;led.c: 183: PORTDbits.RD5 = ((UINT8)(0));
  5128  00480A  9A83               	bcf	3971,5,c	;volatile
  5129                           
  5130                           ;led.c: 184: PORTDbits.RD6 = ((UINT8)(0));
  5131  00480C  9C83               	bcf	3971,6,c	;volatile
  5132                           
  5133                           ; BSR set to: 0
  5134                           ;led.c: 186: OsTmr_StartTimer(&LedTimer1,((UINT16)(1000)));
  5135  00480E  0EEC               	movlw	low Led_MainTask@LedTimer1
  5136  004810  6F64               	movwf	OsTmr_StartTimer@Timer& (0+255),b
  5137  004812  0E01               	movlw	high Led_MainTask@LedTimer1
  5138  004814  6F65               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
  5139  004816  0EE8               	movlw	232
  5140  004818  6F66               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
  5141  00481A  0E03               	movlw	3
  5142  00481C  6F67               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
  5143  00481E  0E00               	movlw	0
  5144  004820  6F68               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
  5145  004822  0E00               	movlw	0
  5146  004824  6F69               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
  5147  004826  EC75  F020         	call	_OsTmr_StartTimer	;wreg free
  5148                           
  5149                           ;led.c: 206: }
  5150                           
  5151                           ;led.c: 205: break;
  5152                           
  5153                           ;led.c: 204: default:
  5154                           
  5155                           ;led.c: 201: break;
  5156                           
  5157                           ;led.c: 190: case RunningState:
  5158                           
  5159                           ;led.c: 187: break;
  5160  00482A  0012               	return	
  5161  00482C                     l1795:
  5162  00482C  0100               	movlb	0	; () banked
  5163  00482E  51FE               	movf	_SystemState& (0+255),w,b
  5164                           
  5165                           ; Switch size 1, requested type "space"
  5166                           ; Number of cases is 2, Range of values is 0 to 1
  5167                           ; switch strategies available:
  5168                           ; Name         Instructions Cycles
  5169                           ; simple_byte            7     4 (average)
  5170                           ;	Chosen strategy is simple_byte
  5171  004830  0A00               	xorlw	0	; case 0
  5172  004832  B4D8               	btfsc	status,2,c
  5173  004834  D7E6               	goto	l1796
  5174  004836  0A01               	xorlw	1	; case 1
  5175  004838  0012               	return	
  5176  00483A                     __end_of_Led_MainTask:
  5177                           	opt stack 0
  5178                           tosu	equ	0xFFF
  5179                           tosh	equ	0xFFE
  5180                           tosl	equ	0xFFD
  5181                           pclath	equ	0xFFA
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           prodh	equ	0xFF4
  5187                           prodl	equ	0xFF3
  5188                           intcon	equ	0xFF2
  5189                           intcon2	equ	0xFF1
  5190                           intcon3	equ	0xFF0
  5191                           postinc0	equ	0xFEE
  5192                           plusw0	equ	0xFEB
  5193                           wreg	equ	0xFE8
  5194                           postinc1	equ	0xFE6
  5195                           postdec1	equ	0xFE5
  5196                           fsr1h	equ	0xFE2
  5197                           fsr1l	equ	0xFE1
  5198                           indf2	equ	0xFDF
  5199                           postinc2	equ	0xFDE
  5200                           postdec2	equ	0xFDD
  5201                           plusw2	equ	0xFDB
  5202                           fsr2h	equ	0xFDA
  5203                           fsr2l	equ	0xFD9
  5204                           status	equ	0xFD8
  5205                           
  5206 ;; *************** function _MdmWifiHttp_MainTask *****************
  5207 ;; Defined at:
  5208 ;;		line 74 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_http.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  Options         1    wreg     unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  Options         1    0[COMRAM] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5226 ;;Total ram usage:        0 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:   11
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_InitializeTasks
  5233 ;;		_ScheduleTasks
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text19
  5238  004EA0                     __ptext19:
  5239                           	opt stack 0
  5240  004EA0                     _MdmWifiHttp_MainTask:
  5241                           	opt stack 17
  5242                           
  5243                           ;mdm_wifi_http.c: 91: }
  5244                           
  5245                           ;mdm_wifi_http.c: 90: break;
  5246                           
  5247                           ;mdm_wifi_http.c: 89: default:
  5248                           
  5249                           ;mdm_wifi_http.c: 86: break;
  5250                           
  5251                           ;mdm_wifi_http.c: 84: case RunningState:
  5252                           
  5253                           ;mdm_wifi_http.c: 81: break;
  5254                           
  5255                           ;mdm_wifi_http.c: 77: {
  5256                           ;mdm_wifi_http.c: 79: case InitializationState:
  5257                           
  5258                           ;mdm_wifi_http.c: 76: switch (SystemState)
  5259                           
  5260                           ;incstack = 0
  5261  004EA0  0100               	movlb	0	; () banked
  5262  004EA2  51FE               	movf	_SystemState& (0+255),w,b
  5263                           
  5264                           ; Switch size 1, requested type "space"
  5265                           ; Number of cases is 2, Range of values is 0 to 1
  5266                           ; switch strategies available:
  5267                           ; Name         Instructions Cycles
  5268                           ; simple_byte            7     4 (average)
  5269                           ;	Chosen strategy is simple_byte
  5270  004EA4  0A00               	xorlw	0	; case 0
  5271  004EA6  B4D8               	btfsc	status,2,c
  5272  004EA8  0012               	return	
  5273  004EAA  0A01               	xorlw	1	; case 1
  5274  004EAC  0012               	return	
  5275  004EAE                     __end_of_MdmWifiHttp_MainTask:
  5276                           	opt stack 0
  5277                           tosu	equ	0xFFF
  5278                           tosh	equ	0xFFE
  5279                           tosl	equ	0xFFD
  5280                           pclath	equ	0xFFA
  5281                           tblptru	equ	0xFF8
  5282                           tblptrh	equ	0xFF7
  5283                           tblptrl	equ	0xFF6
  5284                           tablat	equ	0xFF5
  5285                           prodh	equ	0xFF4
  5286                           prodl	equ	0xFF3
  5287                           intcon	equ	0xFF2
  5288                           intcon2	equ	0xFF1
  5289                           intcon3	equ	0xFF0
  5290                           postinc0	equ	0xFEE
  5291                           plusw0	equ	0xFEB
  5292                           wreg	equ	0xFE8
  5293                           postinc1	equ	0xFE6
  5294                           postdec1	equ	0xFE5
  5295                           fsr1h	equ	0xFE2
  5296                           fsr1l	equ	0xFE1
  5297                           indf2	equ	0xFDF
  5298                           postinc2	equ	0xFDE
  5299                           postdec2	equ	0xFDD
  5300                           plusw2	equ	0xFDB
  5301                           fsr2h	equ	0xFDA
  5302                           fsr2l	equ	0xFD9
  5303                           status	equ	0xFD8
  5304                           
  5305 ;; *************** function _MdmWifiCmd_MainTask *****************
  5306 ;; Defined at:
  5307 ;;		line 330 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
  5308 ;; Parameters:    Size  Location     Type
  5309 ;;  Options         1    wreg     unsigned char 
  5310 ;; Auto vars:     Size  Location     Type
  5311 ;;  Options         1    0[COMRAM] unsigned char 
  5312 ;; Return value:  Size  Location     Type
  5313 ;;                  1    wreg      void 
  5314 ;; Registers used:
  5315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5316 ;; Tracked objects:
  5317 ;;		On entry : 0/0
  5318 ;;		On exit  : 0/0
  5319 ;;		Unchanged: 0/0
  5320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5325 ;;Total ram usage:        0 bytes
  5326 ;; Hardware stack levels used:    1
  5327 ;; Hardware stack levels required when called:   15
  5328 ;; This function calls:
  5329 ;;		_ReceiveDataSm
  5330 ;;		_SendDataSm
  5331 ;;		_StartConnectionSm
  5332 ;; This function is called by:
  5333 ;;		_InitializeTasks
  5334 ;;		_ScheduleTasks
  5335 ;; This function uses a non-reentrant model
  5336 ;;
  5337                           
  5338                           	psect	text20
  5339  004BB6                     __ptext20:
  5340                           	opt stack 0
  5341  004BB6                     _MdmWifiCmd_MainTask:
  5342                           	opt stack 13
  5343                           
  5344                           ;mdm_wifi_cmd.c: 332: switch (SystemState)
  5345                           
  5346                           ;incstack = 0
  5347  004BB6  D007               	goto	l1022
  5348  004BB8                     
  5349                           ;mdm_wifi_cmd.c: 342: StartConnectionSm();
  5350  004BB8  ECE5  F005         	call	_StartConnectionSm	;wreg free
  5351                           
  5352                           ;mdm_wifi_cmd.c: 344: SendDataSm();
  5353  004BBC  ECB1  F009         	call	_SendDataSm	;wreg free
  5354                           
  5355                           ;mdm_wifi_cmd.c: 346: ReceiveDataSm();
  5356  004BC0  ECD6  F022         	call	_ReceiveDataSm	;wreg free
  5357                           
  5358                           ;mdm_wifi_cmd.c: 352: }
  5359                           
  5360                           ;mdm_wifi_cmd.c: 351: break;
  5361                           
  5362                           ;mdm_wifi_cmd.c: 350: default:
  5363                           
  5364                           ;mdm_wifi_cmd.c: 347: break;
  5365  004BC4  0012               	return	
  5366  004BC6                     l1022:
  5367  004BC6  0100               	movlb	0	; () banked
  5368  004BC8  51FE               	movf	_SystemState& (0+255),w,b
  5369                           
  5370                           ; Switch size 1, requested type "space"
  5371                           ; Number of cases is 2, Range of values is 0 to 1
  5372                           ; switch strategies available:
  5373                           ; Name         Instructions Cycles
  5374                           ; simple_byte            7     4 (average)
  5375                           ;	Chosen strategy is simple_byte
  5376  004BCA  0A00               	xorlw	0	; case 0
  5377  004BCC  B4D8               	btfsc	status,2,c
  5378  004BCE  0012               	return	
  5379  004BD0  0A01               	xorlw	1	; case 1
  5380  004BD2  A4D8               	btfss	status,2,c
  5381  004BD4  0012               	return	
  5382  004BD6  D7F0               	goto	l1025
  5383  004BD8                     __end_of_MdmWifiCmd_MainTask:
  5384                           	opt stack 0
  5385                           tosu	equ	0xFFF
  5386                           tosh	equ	0xFFE
  5387                           tosl	equ	0xFFD
  5388                           pclath	equ	0xFFA
  5389                           tblptru	equ	0xFF8
  5390                           tblptrh	equ	0xFF7
  5391                           tblptrl	equ	0xFF6
  5392                           tablat	equ	0xFF5
  5393                           prodh	equ	0xFF4
  5394                           prodl	equ	0xFF3
  5395                           intcon	equ	0xFF2
  5396                           intcon2	equ	0xFF1
  5397                           intcon3	equ	0xFF0
  5398                           postinc0	equ	0xFEE
  5399                           plusw0	equ	0xFEB
  5400                           wreg	equ	0xFE8
  5401                           postinc1	equ	0xFE6
  5402                           postdec1	equ	0xFE5
  5403                           fsr1h	equ	0xFE2
  5404                           fsr1l	equ	0xFE1
  5405                           indf2	equ	0xFDF
  5406                           postinc2	equ	0xFDE
  5407                           postdec2	equ	0xFDD
  5408                           plusw2	equ	0xFDB
  5409                           fsr2h	equ	0xFDA
  5410                           fsr2l	equ	0xFD9
  5411                           status	equ	0xFD8
  5412                           
  5413 ;; *************** function _MdmWifi_MainTask *****************
  5414 ;; Defined at:
  5415 ;;		line 283 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  Options         1    wreg     unsigned char 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  Options         1    0[COMRAM] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  1    wreg      void 
  5422 ;; Registers used:
  5423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5433 ;;Total ram usage:        0 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:   14
  5436 ;; This function calls:
  5437 ;;		_MdmWifiEvtParser
  5438 ;;		_MdmWifiGetUartData
  5439 ;;		_UartSetConfig
  5440 ;;		_Uart_InitUartModule
  5441 ;; This function is called by:
  5442 ;;		_InitializeTasks
  5443 ;;		_ScheduleTasks
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text21
  5448  00491A                     __ptext21:
  5449                           	opt stack 0
  5450  00491A                     _MdmWifi_MainTask:
  5451                           	opt stack 14
  5452                           
  5453                           ;mdm_wifi.c: 285: switch (SystemState)
  5454                           
  5455                           ;incstack = 0
  5456  00491A  D010               	goto	l884
  5457  00491C                     
  5458                           ;mdm_wifi.c: 290: UartSetConfig();
  5459  00491C  ECD0  F020         	call	_UartSetConfig	;wreg free
  5460                           
  5461                           ;mdm_wifi.c: 292: Uart_InitUartModule(((UINT8)(1)),&UartConfig);
  5462  004920  0E78               	movlw	low _UartConfig
  5463  004922  0100               	movlb	0	; () banked
  5464  004924  6F80               	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  5465  004926  0E01               	movlw	high _UartConfig
  5466  004928  6F81               	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  5467  00492A  0E01               	movlw	1
  5468  00492C  EC6B  F004         	call	_Uart_InitUartModule
  5469                           
  5470                           ;mdm_wifi.c: 293: break;
  5471  004930  0012               	return	
  5472  004932                     
  5473                           ;mdm_wifi.c: 298: MdmWifiGetUartData();
  5474  004932  EC76  F015         	call	_MdmWifiGetUartData	;wreg free
  5475                           
  5476                           ;mdm_wifi.c: 300: MdmWifiEvtParser();
  5477  004936  ECD6  F01E         	call	_MdmWifiEvtParser	;wreg free
  5478                           
  5479                           ;mdm_wifi.c: 310: }
  5480                           
  5481                           ;mdm_wifi.c: 309: break;
  5482                           
  5483                           ;mdm_wifi.c: 308: default:
  5484                           
  5485                           ;mdm_wifi.c: 305: break;
  5486  00493A  0012               	return	
  5487  00493C                     l884:
  5488  00493C  0100               	movlb	0	; () banked
  5489  00493E  51FE               	movf	_SystemState& (0+255),w,b
  5490                           
  5491                           ; Switch size 1, requested type "space"
  5492                           ; Number of cases is 2, Range of values is 0 to 1
  5493                           ; switch strategies available:
  5494                           ; Name         Instructions Cycles
  5495                           ; simple_byte            7     4 (average)
  5496                           ;	Chosen strategy is simple_byte
  5497  004940  0A00               	xorlw	0	; case 0
  5498  004942  B4D8               	btfsc	status,2,c
  5499  004944  D7EB               	goto	l885
  5500  004946  0A01               	xorlw	1	; case 1
  5501  004948  A4D8               	btfss	status,2,c
  5502  00494A  0012               	return	
  5503  00494C  D7F2               	goto	l887
  5504  00494E                     __end_of_MdmWifi_MainTask:
  5505                           	opt stack 0
  5506                           tosu	equ	0xFFF
  5507                           tosh	equ	0xFFE
  5508                           tosl	equ	0xFFD
  5509                           pclath	equ	0xFFA
  5510                           tblptru	equ	0xFF8
  5511                           tblptrh	equ	0xFF7
  5512                           tblptrl	equ	0xFF6
  5513                           tablat	equ	0xFF5
  5514                           prodh	equ	0xFF4
  5515                           prodl	equ	0xFF3
  5516                           intcon	equ	0xFF2
  5517                           intcon2	equ	0xFF1
  5518                           intcon3	equ	0xFF0
  5519                           postinc0	equ	0xFEE
  5520                           plusw0	equ	0xFEB
  5521                           wreg	equ	0xFE8
  5522                           postinc1	equ	0xFE6
  5523                           postdec1	equ	0xFE5
  5524                           fsr1h	equ	0xFE2
  5525                           fsr1l	equ	0xFE1
  5526                           indf2	equ	0xFDF
  5527                           postinc2	equ	0xFDE
  5528                           postdec2	equ	0xFDD
  5529                           plusw2	equ	0xFDB
  5530                           fsr2h	equ	0xFDA
  5531                           fsr2l	equ	0xFD9
  5532                           status	equ	0xFD8
  5533                           
  5534 ;; *************** function _I2cSlv_MainTask *****************
  5535 ;; Defined at:
  5536 ;;		line 199 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;  Options         1    wreg     unsigned char 
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;  Options         1    0[COMRAM] unsigned char 
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      void 
  5543 ;; Registers used:
  5544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5554 ;;Total ram usage:        0 bytes
  5555 ;; Hardware stack levels used:    1
  5556 ;; Hardware stack levels required when called:   14
  5557 ;; This function calls:
  5558 ;;		_I2cSendMsgSm
  5559 ;;		_I2cSetConfig
  5560 ;;		_I2c_InitI2cModule
  5561 ;;		_OsAlrm_SetOsAlarm
  5562 ;; This function is called by:
  5563 ;;		_InitializeTasks
  5564 ;;		_ScheduleTasks
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text22
  5569  0042A6                     __ptext22:
  5570                           	opt stack 0
  5571  0042A6                     _I2cSlv_MainTask:
  5572                           	opt stack 14
  5573                           
  5574                           ;i2c_slv.c: 201: switch (SystemState)
  5575                           
  5576                           ;incstack = 0
  5577  0042A6  D020               	goto	l1174
  5578  0042A8                     
  5579                           ;i2c_slv.c: 206: I2cSetConfig();
  5580  0042A8  EC4F  F025         	call	_I2cSetConfig	;wreg free
  5581                           
  5582                           ;i2c_slv.c: 208: I2c_InitI2cModule(&I2cConfig);
  5583  0042AC  0E8D               	movlw	low _I2cConfig
  5584  0042AE  0100               	movlb	0	; () banked
  5585  0042B0  6F85               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  5586  0042B2  0E01               	movlw	high _I2cConfig
  5587  0042B4  6F86               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  5588  0042B6  EC9D  F01E         	call	_I2c_InitI2cModule	;wreg free
  5589                           
  5590                           ;i2c_slv.c: 210: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  5591  0042BA  0E00               	movlw	0
  5592  0042BC  0100               	movlb	0	; () banked
  5593  0042BE  6F67               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  5594  0042C0  0E00               	movlw	0
  5595  0042C2  6F66               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  5596  0042C4  0E32               	movlw	50
  5597  0042C6  6F68               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  5598  0042C8  0E00               	movlw	0
  5599  0042CA  6F69               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  5600  0042CC  0E00               	movlw	0
  5601  0042CE  6F6A               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  5602  0042D0  0E00               	movlw	0
  5603  0042D2  6F6B               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  5604  0042D4  0E5C               	movlw	low _I2cDummyTx
  5605  0042D6  6F6C               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  5606  0042D8  0E4D               	movlw	high _I2cDummyTx
  5607  0042DA  6F6D               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  5608  0042DC  EC0C  F017         	call	_OsAlrm_SetOsAlarm	;wreg free
  5609                           
  5610                           ;i2c_slv.c: 211: break;
  5611  0042E0  0012               	return	
  5612  0042E2                     
  5613                           ;i2c_slv.c: 216: I2cSendMsgSm();
  5614  0042E2  ECE0  F018         	call	_I2cSendMsgSm	;wreg free
  5615                           
  5616                           ;i2c_slv.c: 222: }
  5617                           
  5618                           ;i2c_slv.c: 221: break;
  5619                           
  5620                           ;i2c_slv.c: 220: default:
  5621                           
  5622                           ;i2c_slv.c: 217: break;
  5623  0042E6  0012               	return	
  5624  0042E8                     l1174:
  5625  0042E8  0100               	movlb	0	; () banked
  5626  0042EA  51FE               	movf	_SystemState& (0+255),w,b
  5627                           
  5628                           ; Switch size 1, requested type "space"
  5629                           ; Number of cases is 2, Range of values is 0 to 1
  5630                           ; switch strategies available:
  5631                           ; Name         Instructions Cycles
  5632                           ; simple_byte            7     4 (average)
  5633                           ;	Chosen strategy is simple_byte
  5634  0042EC  0A00               	xorlw	0	; case 0
  5635  0042EE  B4D8               	btfsc	status,2,c
  5636  0042F0  D7DB               	goto	l1175
  5637  0042F2  0A01               	xorlw	1	; case 1
  5638  0042F4  A4D8               	btfss	status,2,c
  5639  0042F6  0012               	return	
  5640  0042F8  D7F4               	goto	l1177
  5641  0042FA                     __end_of_I2cSlv_MainTask:
  5642                           	opt stack 0
  5643                           tosu	equ	0xFFF
  5644                           tosh	equ	0xFFE
  5645                           tosl	equ	0xFFD
  5646                           pclath	equ	0xFFA
  5647                           tblptru	equ	0xFF8
  5648                           tblptrh	equ	0xFF7
  5649                           tblptrl	equ	0xFF6
  5650                           tablat	equ	0xFF5
  5651                           prodh	equ	0xFF4
  5652                           prodl	equ	0xFF3
  5653                           intcon	equ	0xFF2
  5654                           intcon2	equ	0xFF1
  5655                           intcon3	equ	0xFF0
  5656                           postinc0	equ	0xFEE
  5657                           plusw0	equ	0xFEB
  5658                           wreg	equ	0xFE8
  5659                           postinc1	equ	0xFE6
  5660                           postdec1	equ	0xFE5
  5661                           fsr1h	equ	0xFE2
  5662                           fsr1l	equ	0xFE1
  5663                           indf2	equ	0xFDF
  5664                           postinc2	equ	0xFDE
  5665                           postdec2	equ	0xFDD
  5666                           plusw2	equ	0xFDB
  5667                           fsr2h	equ	0xFDA
  5668                           fsr2l	equ	0xFD9
  5669                           status	equ	0xFD8
  5670                           
  5671 ;; *************** function _MdmWifi_DrvMainFn *****************
  5672 ;; Defined at:
  5673 ;;		line 154 in file "../Source/c/01_Hal/02_Drv/mdm_wifi_drv.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  Options         1    wreg     unsigned char 
  5676 ;; Auto vars:     Size  Location     Type
  5677 ;;  Options         1    0[COMRAM] unsigned char 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5691 ;;Total ram usage:        0 bytes
  5692 ;; Hardware stack levels used:    1
  5693 ;; Hardware stack levels required when called:   13
  5694 ;; This function calls:
  5695 ;;		_MdmWifi_StartWifiModemSm
  5696 ;; This function is called by:
  5697 ;;		_InitializeTasks
  5698 ;;		_ScheduleTasks
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text23
  5703  004F18                     __ptext23:
  5704                           	opt stack 0
  5705  004F18                     _MdmWifi_DrvMainFn:
  5706                           	opt stack 15
  5707                           
  5708                           ;mdm_wifi_drv.c: 157: MdmWifi_StartWifiModemSm();
  5709                           
  5710                           ;incstack = 0
  5711  004F18  ECA2  F01D         	call	_MdmWifi_StartWifiModemSm	;wreg free
  5712  004F1C  0012               	return		;funcret
  5713  004F1E                     __end_of_MdmWifi_DrvMainFn:
  5714                           	opt stack 0
  5715                           tosu	equ	0xFFF
  5716                           tosh	equ	0xFFE
  5717                           tosl	equ	0xFFD
  5718                           pclath	equ	0xFFA
  5719                           tblptru	equ	0xFF8
  5720                           tblptrh	equ	0xFF7
  5721                           tblptrl	equ	0xFF6
  5722                           tablat	equ	0xFF5
  5723                           prodh	equ	0xFF4
  5724                           prodl	equ	0xFF3
  5725                           intcon	equ	0xFF2
  5726                           intcon2	equ	0xFF1
  5727                           intcon3	equ	0xFF0
  5728                           postinc0	equ	0xFEE
  5729                           plusw0	equ	0xFEB
  5730                           wreg	equ	0xFE8
  5731                           postinc1	equ	0xFE6
  5732                           postdec1	equ	0xFE5
  5733                           fsr1h	equ	0xFE2
  5734                           fsr1l	equ	0xFE1
  5735                           indf2	equ	0xFDF
  5736                           postinc2	equ	0xFDE
  5737                           postdec2	equ	0xFDD
  5738                           plusw2	equ	0xFDB
  5739                           fsr2h	equ	0xFDA
  5740                           fsr2l	equ	0xFD9
  5741                           status	equ	0xFD8
  5742                           
  5743 ;; *************** function _UsbDevice_MainTask *****************
  5744 ;; Defined at:
  5745 ;;		line 72 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  Options         1    wreg     unsigned char 
  5748 ;; Auto vars:     Size  Location     Type
  5749 ;;  Options         1    0[COMRAM] unsigned char 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  1    wreg      void 
  5752 ;; Registers used:
  5753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5763 ;;Total ram usage:        0 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; Hardware stack levels required when called:   20
  5766 ;; This function calls:
  5767 ;;		_CDCTxService
  5768 ;;		_USBDeviceInit
  5769 ;;		_USBDeviceTasks
  5770 ;; This function is called by:
  5771 ;;		_InitializeTasks
  5772 ;;		_ScheduleTasks
  5773 ;; This function uses a non-reentrant model
  5774 ;;
  5775                           
  5776                           	psect	text24
  5777  004B92                     __ptext24:
  5778                           	opt stack 0
  5779  004B92                     _UsbDevice_MainTask:
  5780                           	opt stack 8
  5781                           
  5782                           ;usb_device_mgr.c: 74: switch (SystemState)
  5783                           
  5784                           ;incstack = 0
  5785  004B92  D008               	goto	l1729
  5786  004B94                     
  5787                           ;usb_device_mgr.c: 79: USBDeviceInit();
  5788  004B94  EC9B  F00E         	call	_USBDeviceInit	;wreg free
  5789                           
  5790                           ;usb_device_mgr.c: 80: ;
  5791                           ;usb_device_mgr.c: 81: break;
  5792  004B98  0012               	return	
  5793  004B9A                     
  5794                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  5795  004B9A  ECB1  F00B         	call	_USBDeviceTasks	;wreg free
  5796                           
  5797                           ;usb_device_mgr.c: 90: CDCTxService();
  5798  004B9E  EC42  F00F         	call	_CDCTxService	;wreg free
  5799                           
  5800                           ;usb_device_mgr.c: 101: }
  5801                           
  5802                           ;usb_device_mgr.c: 100: break;
  5803                           
  5804                           ;usb_device_mgr.c: 99: default:
  5805                           
  5806                           ;usb_device_mgr.c: 96: break;
  5807  004BA2  0012               	return	
  5808  004BA4                     l1729:
  5809  004BA4  0100               	movlb	0	; () banked
  5810  004BA6  51FE               	movf	_SystemState& (0+255),w,b
  5811                           
  5812                           ; Switch size 1, requested type "space"
  5813                           ; Number of cases is 2, Range of values is 0 to 1
  5814                           ; switch strategies available:
  5815                           ; Name         Instructions Cycles
  5816                           ; simple_byte            7     4 (average)
  5817                           ;	Chosen strategy is simple_byte
  5818  004BA8  0A00               	xorlw	0	; case 0
  5819  004BAA  B4D8               	btfsc	status,2,c
  5820  004BAC  D7F3               	goto	l1730
  5821  004BAE  0A01               	xorlw	1	; case 1
  5822  004BB0  A4D8               	btfss	status,2,c
  5823  004BB2  0012               	return	
  5824  004BB4  D7F2               	goto	l1732
  5825  004BB6                     __end_of_UsbDevice_MainTask:
  5826                           	opt stack 0
  5827                           tosu	equ	0xFFF
  5828                           tosh	equ	0xFFE
  5829                           tosl	equ	0xFFD
  5830                           pclath	equ	0xFFA
  5831                           tblptru	equ	0xFF8
  5832                           tblptrh	equ	0xFF7
  5833                           tblptrl	equ	0xFF6
  5834                           tablat	equ	0xFF5
  5835                           prodh	equ	0xFF4
  5836                           prodl	equ	0xFF3
  5837                           intcon	equ	0xFF2
  5838                           intcon2	equ	0xFF1
  5839                           intcon3	equ	0xFF0
  5840                           postinc0	equ	0xFEE
  5841                           plusw0	equ	0xFEB
  5842                           wreg	equ	0xFE8
  5843                           postinc1	equ	0xFE6
  5844                           postdec1	equ	0xFE5
  5845                           fsr1h	equ	0xFE2
  5846                           fsr1l	equ	0xFE1
  5847                           indf2	equ	0xFDF
  5848                           postinc2	equ	0xFDE
  5849                           postdec2	equ	0xFDD
  5850                           plusw2	equ	0xFDB
  5851                           fsr2h	equ	0xFDA
  5852                           fsr2l	equ	0xFD9
  5853                           status	equ	0xFD8
  5854                           
  5855 ;; *************** function _USBDeviceTasks *****************
  5856 ;; Defined at:
  5857 ;;		line 495 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;		None
  5860 ;; Auto vars:     Size  Location     Type
  5861 ;;  i               1   27[BANK0 ] unsigned char 
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  1    wreg      void 
  5864 ;; Registers used:
  5865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5874 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5875 ;;Total ram usage:        1 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:   19
  5878 ;; This function calls:
  5879 ;;		_USBCtrlEPAllowStatusStage
  5880 ;;		_USBCtrlEPService
  5881 ;;		_USBDeviceInit
  5882 ;;		_USBIncrement1msInternalTimers
  5883 ;;		_USBStallHandler
  5884 ;;		_USBSuspend
  5885 ;;		_USBWakeFromSuspend
  5886 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5887 ;; This function is called by:
  5888 ;;		_UsbDevice_MainTask
  5889 ;; This function uses a non-reentrant model
  5890 ;;
  5891                           
  5892                           	psect	text25
  5893  001762                     __ptext25:
  5894                           	opt stack 0
  5895  001762                     _USBDeviceTasks:
  5896                           	opt stack 8
  5897                           
  5898                           ;usb_device.c: 562: }
  5899                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  5900                           
  5901                           ; BSR set to: 0
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;usb_device.c: 561: return;
  5905                           
  5906                           ; BSR set to: 0
  5907                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  5908                           
  5909                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  5910                           
  5911                           ;usb_device.c: 529: UIE = 0;
  5912                           
  5913                           ;usb_device.c: 524: {
  5914                           ;usb_device.c: 526: UCON = 0;
  5915                           
  5916                           ;usb_device.c: 497: uint8_t i;
  5917                           ;usb_device.c: 523: if (1 != 1)
  5918                           
  5919                           ;incstack = 0
  5920  001762  0100               	movlb	0	; () banked
  5921  001764  51FD               	movf	_USBDeviceState& (0+255),w,b
  5922  001766  A4D8               	btfss	status,2,c
  5923  001768  D012               	goto	l1352
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;usb_device.c: 585: {
  5927                           ;usb_device.c: 587: UCON = 0;
  5928  00176A  0E00               	movlw	0
  5929  00176C  6E65               	movwf	3941,c	;volatile
  5930                           
  5931                           ;usb_device.c: 590: UIE = 0;
  5932  00176E  0E00               	movlw	0
  5933  001770  010F               	movlb	15	; () banked
  5934  001772  6F36               	movwf	54,b	;volatile
  5935                           
  5936                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5937  001774  0E16               	movlw	22
  5938  001776  6F39               	movwf	57,b	;volatile
  5939  001778  0E9F               	movlw	159
  5940  00177A  6F37               	movwf	55,b	;volatile
  5941  00177C  0E7B               	movlw	123
  5942  00177E  6F36               	movwf	54,b	;volatile
  5943                           
  5944                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  5945  001780  D001               	goto	l1353
  5946  001782                     l1354:
  5947  001782  8665               	bsf	3941,3,c	;volatile
  5948  001784                     l1353:
  5949  001784  A665               	btfss	3941,3,c	;volatile
  5950  001786  D7FD               	goto	l1354
  5951                           
  5952                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  5953  001788  0E01               	movlw	1
  5954  00178A  0100               	movlb	0	; () banked
  5955  00178C  6FFD               	movwf	_USBDeviceState& (0+255),b
  5956  00178E                     l1352:
  5957                           
  5958                           ; BSR set to: 0
  5959                           ;usb_device.c: 605: }
  5960                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  5961                           
  5962                           ; BSR set to: 0
  5963  00178E  05FD               	decf	_USBDeviceState& (0+255),w,b
  5964  001790  B4D8               	btfsc	status,2,c
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;usb_device.c: 609: {
  5968                           ;usb_device.c: 619: if(!UCONbits.SE0)
  5969  001792  BA65               	btfsc	3941,5,c	;volatile
  5970  001794  D00A               	goto	l1357
  5971                           
  5972                           ; BSR set to: 0
  5973                           ;usb_device.c: 620: {
  5974                           ;usb_device.c: 626: {UIR = 0;};
  5975  001796  0E00               	movlw	0
  5976  001798  6E62               	movwf	3938,c	;volatile
  5977                           
  5978                           ;usb_device.c: 630: UIE=0;
  5979  00179A  0E00               	movlw	0
  5980  00179C  010F               	movlb	15	; () banked
  5981  00179E  6F36               	movwf	54,b	;volatile
  5982                           
  5983                           ; BSR set to: 15
  5984                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  5985  0017A0  8136               	bsf	54,0,b	;volatile
  5986                           
  5987                           ; BSR set to: 15
  5988                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  5989  0017A2  8936               	bsf	54,4,b	;volatile
  5990                           
  5991                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  5992  0017A4  0E02               	movlw	2
  5993  0017A6  0100               	movlb	0	; () banked
  5994  0017A8  6FFD               	movwf	_USBDeviceState& (0+255),b
  5995  0017AA                     l1357:
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;usb_device.c: 635: }
  5999                           ;usb_device.c: 636: }
  6000                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  6001                           
  6002                           ; BSR set to: 0
  6003                           
  6004                           ; BSR set to: 0
  6005  0017AA  A462               	btfss	3938,2,c	;volatile
  6006  0017AC  D006               	goto	l1358
  6007                           
  6008                           ; BSR set to: 0
  6009  0017AE  010F               	movlb	15	; () banked
  6010  0017B0  A536               	btfss	54,2,b	;volatile
  6011  0017B2  D003               	goto	l1358
  6012                           
  6013                           ; BSR set to: 15
  6014                           ;usb_device.c: 653: {
  6015                           ;usb_device.c: 654: (UIR &= 0xFB);
  6016  0017B4  9462               	bcf	3938,2,c	;volatile
  6017                           
  6018                           ; BSR set to: 15
  6019                           ;usb_device.c: 658: USBWakeFromSuspend();
  6020  0017B6  EC1D  F024         	call	_USBWakeFromSuspend	;wreg free
  6021  0017BA                     l1358:
  6022                           
  6023                           ;usb_device.c: 660: }
  6024                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  6025  0017BA  A265               	btfss	3941,1,c	;volatile
  6026  0017BC  D002               	goto	l1359
  6027                           
  6028                           ;usb_device.c: 666: {
  6029                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  6030  0017BE  98A1               	bcf	4001,4,c	;volatile
  6031                           
  6032                           ;usb_device.c: 668: return;
  6033  0017C0  0012               	return	
  6034  0017C2                     l1359:
  6035                           
  6036                           ;usb_device.c: 669: }
  6037                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  6038  0017C2  A062               	btfss	3938,0,c	;volatile
  6039  0017C4  D009               	goto	l1360
  6040  0017C6  010F               	movlb	15	; () banked
  6041  0017C8  A136               	btfss	54,0,b	;volatile
  6042  0017CA  D006               	goto	l1360
  6043                           
  6044                           ; BSR set to: 15
  6045                           ;usb_device.c: 682: {
  6046                           ;usb_device.c: 683: USBDeviceInit();
  6047  0017CC  EC9B  F00E         	call	_USBDeviceInit	;wreg free
  6048                           
  6049                           ;usb_device.c: 687: ;
  6050                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  6051  0017D0  0E04               	movlw	4
  6052  0017D2  0100               	movlb	0	; () banked
  6053  0017D4  6FFD               	movwf	_USBDeviceState& (0+255),b
  6054                           
  6055                           ; BSR set to: 0
  6056                           ;usb_device.c: 699: (UIR &= 0xFE);
  6057  0017D6  9062               	bcf	3938,0,c	;volatile
  6058  0017D8                     l1360:
  6059                           
  6060                           ;usb_device.c: 700: }
  6061                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  6062                           
  6063                           ; BSR set to: 0
  6064  0017D8  A862               	btfss	3938,4,c	;volatile
  6065  0017DA  D004               	goto	l1361
  6066  0017DC  010F               	movlb	15	; () banked
  6067  0017DE  B936               	btfsc	54,4,b	;volatile
  6068                           
  6069                           ; BSR set to: 15
  6070                           ;usb_device.c: 706: {
  6071                           ;usb_device.c: 712: USBSuspend();
  6072  0017E0  ECA7  F024         	call	_USBSuspend	;wreg free
  6073  0017E4                     l1361:
  6074                           
  6075                           ;usb_device.c: 714: }
  6076                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  6077  0017E4  AC62               	btfss	3938,6,c	;volatile
  6078  0017E6  D01C               	goto	l1365
  6079                           
  6080                           ;usb_device.c: 727: {
  6081                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  6082  0017E8  010F               	movlb	15	; () banked
  6083  0017EA  AD36               	btfss	54,6,b	;volatile
  6084  0017EC  D00F               	goto	l1363
  6085                           
  6086                           ; BSR set to: 15
  6087                           ;usb_device.c: 730: {
  6088                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  6089  0017EE  0E00               	movlw	0
  6090  0017F0  0100               	movlb	0	; () banked
  6091  0017F2  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6092  0017F4  0E73               	movlw	115
  6093  0017F6  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6094  0017F8  0E00               	movlw	0
  6095  0017FA  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6096  0017FC  0E00               	movlw	0
  6097  0017FE  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6098  001800  0E00               	movlw	0
  6099  001802  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6100  001804  0E01               	movlw	1
  6101  001806  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6102  001808  EC46  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6103  00180C                     l1363:
  6104                           
  6105                           ;usb_device.c: 732: }
  6106                           ;usb_device.c: 733: (UIR &= 0xBF);
  6107  00180C  9C62               	bcf	3938,6,c	;volatile
  6108                           
  6109                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  6110  00180E  EC62  F026         	call	_USBIncrement1msInternalTimers	;wreg free
  6111                           
  6112                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  6113  001812  504A               	movf	_USBStatusStageTimeoutCounter,w,c
  6114  001814  A4D8               	btfss	status,2,c
  6115                           
  6116                           ;usb_device.c: 754: {
  6117                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  6118  001816  064A               	decf	_USBStatusStageTimeoutCounter,f,c
  6119                           
  6120                           ;usb_device.c: 756: }
  6121                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  6122  001818  504A               	movf	_USBStatusStageTimeoutCounter,w,c
  6123  00181A  B4D8               	btfsc	status,2,c
  6124                           
  6125                           ;usb_device.c: 763: {
  6126                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  6127  00181C  ECDF  F015         	call	_USBCtrlEPAllowStatusStage	;wreg free
  6128  001820                     l1365:
  6129                           
  6130                           ;usb_device.c: 765: }
  6131                           ;usb_device.c: 767: }
  6132                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  6133  001820  AA62               	btfss	3938,5,c	;volatile
  6134  001822  D004               	goto	l1366
  6135  001824  010F               	movlb	15	; () banked
  6136  001826  BB36               	btfsc	54,5,b	;volatile
  6137                           
  6138                           ; BSR set to: 15
  6139                           ;usb_device.c: 770: {
  6140                           ;usb_device.c: 771: USBStallHandler();
  6141  001828  ECF9  F022         	call	_USBStallHandler	;wreg free
  6142  00182C                     l1366:
  6143                           
  6144                           ;usb_device.c: 772: }
  6145                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  6146  00182C  A262               	btfss	3938,1,c	;volatile
  6147  00182E  D013               	goto	l1367
  6148  001830  010F               	movlb	15	; () banked
  6149  001832  A336               	btfss	54,1,b	;volatile
  6150  001834  D010               	goto	l1367
  6151                           
  6152                           ; BSR set to: 15
  6153                           ;usb_device.c: 775: {
  6154                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  6155  001836  0E7F               	movlw	127
  6156  001838  0100               	movlb	0	; () banked
  6157  00183A  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6158  00183C  696C               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6159  00183E  0E00               	movlw	0
  6160  001840  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6161  001842  0E00               	movlw	0
  6162  001844  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6163  001846  0E00               	movlw	0
  6164  001848  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6165  00184A  0E01               	movlw	1
  6166  00184C  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6167  00184E  EC46  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6168                           
  6169                           ;usb_device.c: 777: {UEIR = 0;};
  6170  001852  0E00               	movlw	0
  6171  001854  6E63               	movwf	3939,c	;volatile
  6172  001856                     l1367:
  6173                           
  6174                           ;usb_device.c: 785: }
  6175                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  6176  001856  0E04               	movlw	4
  6177  001858  0100               	movlb	0	; () banked
  6178  00185A  61FD               	cpfslt	_USBDeviceState& (0+255),b
  6179  00185C  D002               	goto	l1368
  6180                           
  6181                           ; BSR set to: 0
  6182                           ;usb_device.c: 793: {
  6183                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  6184  00185E  98A1               	bcf	4001,4,c	;volatile
  6185                           
  6186                           ;usb_device.c: 795: return;
  6187  001860  0012               	return	
  6188  001862                     l1368:
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;usb_device.c: 796: }
  6192                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  6193  001862  010F               	movlb	15	; () banked
  6194  001864  A736               	btfss	54,3,b	;volatile
  6195  001866  D03C               	goto	u7450
  6196                           
  6197                           ; BSR set to: 15
  6198                           ;usb_device.c: 802: {
  6199                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  6200  001868  0E00               	movlw	0
  6201  00186A  0100               	movlb	0	; () banked
  6202  00186C  6F7B               	movwf	USBDeviceTasks@i& (0+255),b
  6203  00186E                     l8698:
  6204                           
  6205                           ; BSR set to: 0
  6206  00186E  0E03               	movlw	3
  6207  001870  657B               	cpfsgt	USBDeviceTasks@i& (0+255),b
  6208  001872  D001               	goto	l1370
  6209  001874  D035               	goto	u7450
  6210  001876                     l1370:
  6211                           
  6212                           ; BSR set to: 0
  6213                           ;usb_device.c: 804: {
  6214                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  6215  001876  A662               	btfss	3938,3,c	;volatile
  6216  001878  D033               	goto	u7450
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;usb_device.c: 806: {
  6220                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  6221  00187A  CF64 F0FF          	movff	3940,_USTATcopy	;volatile
  6222                           
  6223                           ; BSR set to: 0
  6224                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  6225  00187E  31FF               	rrcf	_USTATcopy& (0+255),w,b
  6226  001880  32E8               	rrcf	wreg,f,c
  6227  001882  32E8               	rrcf	wreg,f,c
  6228  001884  0B0F               	andlw	15
  6229  001886  6E4B               	movwf	_endpoint_number,c
  6230                           
  6231                           ; BSR set to: 0
  6232                           ;usb_device.c: 811: (UIR &= 0xF7);
  6233  001888  9662               	bcf	3938,3,c	;volatile
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  6237  00188A  B5FF               	btfsc	_USTATcopy& (0+255),2,b
  6238  00188C  D007               	goto	l1373
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;usb_device.c: 817: {
  6242                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  6243  00188E  504B               	movf	_endpoint_number,w,c
  6244  001890  0D01               	mullw	1
  6245  001892  0E38               	movlw	low _ep_data_out
  6246  001894  24F3               	addwf	prodl,w,c
  6247  001896  6ED9               	movwf	fsr2l,c
  6248  001898  0E01               	movlw	high _ep_data_out
  6249  00189A  D006               	goto	L3
  6250  00189C                     l1373:
  6251                           
  6252                           ;usb_device.c: 820: else
  6253                           ;usb_device.c: 821: {
  6254                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  6255                           
  6256                           ; BSR set to: 1
  6257  00189C  504B               	movf	_endpoint_number,w,c
  6258  00189E  0D01               	mullw	1
  6259  0018A0  0E3B               	movlw	low _ep_data_in
  6260  0018A2  24F3               	addwf	prodl,w,c
  6261  0018A4  6ED9               	movwf	fsr2l,c
  6262  0018A6  0E01               	movlw	high _ep_data_in
  6263  0018A8                     L3:
  6264  0018A8  20F4               	addwfc	prodh,w,c
  6265  0018AA  6EDA               	movwf	fsr2h,c
  6266  0018AC  0101               	movlb	1	; () banked
  6267  0018AE  70DF               	btg	indf2,0,c
  6268                           
  6269                           ; BSR set to: 1
  6270                           ;usb_device.c: 823: }
  6271                           ;usb_device.c: 828: if(endpoint_number == 0)
  6272                           
  6273                           ; BSR set to: 1
  6274  0018B0  504B               	movf	_endpoint_number,w,c
  6275  0018B2  A4D8               	btfss	status,2,c
  6276  0018B4  D003               	goto	l1375
  6277                           
  6278                           ; BSR set to: 1
  6279                           ;usb_device.c: 829: {
  6280                           ;usb_device.c: 830: USBCtrlEPService();
  6281  0018B6  EC68  F01B         	call	_USBCtrlEPService	;wreg free
  6282                           
  6283                           ;usb_device.c: 831: }
  6284  0018BA  D00F               	goto	l1377
  6285  0018BC                     l1375:
  6286                           
  6287                           ;usb_device.c: 832: else
  6288                           ;usb_device.c: 833: {
  6289                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  6290  0018BC  0E00               	movlw	0
  6291  0018BE  0100               	movlb	0	; () banked
  6292  0018C0  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6293  0018C2  0E72               	movlw	114
  6294  0018C4  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6295  0018C6  0EFF               	movlw	low _USTATcopy
  6296  0018C8  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6297  0018CA  0E00               	movlw	high _USTATcopy
  6298  0018CC  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6299  0018CE  0E00               	movlw	0
  6300  0018D0  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6301  0018D2  0E00               	movlw	0
  6302  0018D4  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6303  0018D6  EC46  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6304  0018DA                     l1377:
  6305  0018DA  0100               	movlb	0	; () banked
  6306  0018DC  2B7B               	incf	USBDeviceTasks@i& (0+255),f,b
  6307  0018DE  D7C7               	goto	l8698
  6308  0018E0                     u7450:
  6309                           
  6310                           ;usb_device.c: 840: }
  6311                           ;usb_device.c: 841: }
  6312                           ;usb_device.c: 842: }
  6313                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  6314                           
  6315                           ; BSR set to: 0
  6316  0018E0  98A1               	bcf	4001,4,c	;volatile
  6317  0018E2  0012               	return		;funcret
  6318  0018E4                     __end_of_USBDeviceTasks:
  6319                           	opt stack 0
  6320                           tosu	equ	0xFFF
  6321                           tosh	equ	0xFFE
  6322                           tosl	equ	0xFFD
  6323                           pclath	equ	0xFFA
  6324                           tblptru	equ	0xFF8
  6325                           tblptrh	equ	0xFF7
  6326                           tblptrl	equ	0xFF6
  6327                           tablat	equ	0xFF5
  6328                           prodh	equ	0xFF4
  6329                           prodl	equ	0xFF3
  6330                           intcon	equ	0xFF2
  6331                           intcon2	equ	0xFF1
  6332                           intcon3	equ	0xFF0
  6333                           postinc0	equ	0xFEE
  6334                           plusw0	equ	0xFEB
  6335                           wreg	equ	0xFE8
  6336                           postinc1	equ	0xFE6
  6337                           postdec1	equ	0xFE5
  6338                           fsr1h	equ	0xFE2
  6339                           fsr1l	equ	0xFE1
  6340                           indf2	equ	0xFDF
  6341                           postinc2	equ	0xFDE
  6342                           postdec2	equ	0xFDD
  6343                           plusw2	equ	0xFDB
  6344                           fsr2h	equ	0xFDA
  6345                           fsr2l	equ	0xFD9
  6346                           status	equ	0xFD8
  6347                           
  6348 ;; *************** function _USBWakeFromSuspend *****************
  6349 ;; Defined at:
  6350 ;;		line 2321 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6351 ;; Parameters:    Size  Location     Type
  6352 ;;		None
  6353 ;; Auto vars:     Size  Location     Type
  6354 ;;		None
  6355 ;; Return value:  Size  Location     Type
  6356 ;;                  1    wreg      void 
  6357 ;; Registers used:
  6358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6359 ;; Tracked objects:
  6360 ;;		On entry : 0/0
  6361 ;;		On exit  : 0/0
  6362 ;;		Unchanged: 0/0
  6363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6368 ;;Total ram usage:        0 bytes
  6369 ;; Hardware stack levels used:    1
  6370 ;; Hardware stack levels required when called:   15
  6371 ;; This function calls:
  6372 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6373 ;; This function is called by:
  6374 ;;		_USBDeviceTasks
  6375 ;; This function uses a non-reentrant model
  6376 ;;
  6377                           
  6378                           	psect	text26
  6379  00483A                     __ptext26:
  6380                           	opt stack 0
  6381  00483A                     _USBWakeFromSuspend:
  6382                           	opt stack 11
  6383                           
  6384                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  6385                           
  6386                           ;incstack = 0
  6387  00483A  0E00               	movlw	0
  6388  00483C  0101               	movlb	1	; () banked
  6389  00483E  6F61               	movwf	_USBBusIsSuspended& (0+255),b
  6390                           
  6391                           ; BSR set to: 1
  6392                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  6393  004840  0E00               	movlw	0
  6394  004842  0100               	movlb	0	; () banked
  6395  004844  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6396  004846  0E74               	movlw	116
  6397  004848  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6398  00484A  0E00               	movlw	0
  6399  00484C  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6400  00484E  0E00               	movlw	0
  6401  004850  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6402  004852  0E00               	movlw	0
  6403  004854  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6404  004856  0E00               	movlw	0
  6405  004858  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6406  00485A  EC46  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6407                           
  6408                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  6409  00485E  9265               	bcf	3941,1,c	;volatile
  6410                           
  6411                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  6412  004860  010F               	movlb	15	; () banked
  6413  004862  9536               	bcf	54,2,b	;volatile
  6414                           
  6415                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  6416  004864  D001               	goto	l1505
  6417  004866                     
  6418                           ;usb_device.c: 2361: {
  6419                           ;usb_device.c: 2362: (UIR &= 0xFB);
  6420                           
  6421                           ; BSR set to: 15
  6422  004866  9462               	bcf	3938,2,c	;volatile
  6423  004868                     l1505:
  6424  004868  B462               	btfsc	3938,2,c	;volatile
  6425  00486A  D7FD               	goto	l1506
  6426                           
  6427                           ;usb_device.c: 2363: }
  6428                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  6429  00486C  0E00               	movlw	0
  6430  00486E  0101               	movlb	1	; () banked
  6431  004870  6F5D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6432                           
  6433                           ; BSR set to: 1
  6434  004872  0012               	return		;funcret
  6435  004874                     __end_of_USBWakeFromSuspend:
  6436                           	opt stack 0
  6437                           tosu	equ	0xFFF
  6438                           tosh	equ	0xFFE
  6439                           tosl	equ	0xFFD
  6440                           pclath	equ	0xFFA
  6441                           tblptru	equ	0xFF8
  6442                           tblptrh	equ	0xFF7
  6443                           tblptrl	equ	0xFF6
  6444                           tablat	equ	0xFF5
  6445                           prodh	equ	0xFF4
  6446                           prodl	equ	0xFF3
  6447                           intcon	equ	0xFF2
  6448                           intcon2	equ	0xFF1
  6449                           intcon3	equ	0xFF0
  6450                           postinc0	equ	0xFEE
  6451                           plusw0	equ	0xFEB
  6452                           wreg	equ	0xFE8
  6453                           postinc1	equ	0xFE6
  6454                           postdec1	equ	0xFE5
  6455                           fsr1h	equ	0xFE2
  6456                           fsr1l	equ	0xFE1
  6457                           indf2	equ	0xFDF
  6458                           postinc2	equ	0xFDE
  6459                           postdec2	equ	0xFDD
  6460                           plusw2	equ	0xFDB
  6461                           fsr2h	equ	0xFDA
  6462                           fsr2l	equ	0xFD9
  6463                           status	equ	0xFD8
  6464                           
  6465 ;; *************** function _USBSuspend *****************
  6466 ;; Defined at:
  6467 ;;		line 2263 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;		None
  6470 ;; Auto vars:     Size  Location     Type
  6471 ;;		None
  6472 ;; Return value:  Size  Location     Type
  6473 ;;                  1    wreg      void 
  6474 ;; Registers used:
  6475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6476 ;; Tracked objects:
  6477 ;;		On entry : 0/0
  6478 ;;		On exit  : 0/0
  6479 ;;		Unchanged: 0/0
  6480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6485 ;;Total ram usage:        0 bytes
  6486 ;; Hardware stack levels used:    1
  6487 ;; Hardware stack levels required when called:   15
  6488 ;; This function calls:
  6489 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6490 ;; This function is called by:
  6491 ;;		_USBDeviceTasks
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text27
  6496  00494E                     __ptext27:
  6497                           	opt stack 0
  6498  00494E                     _USBSuspend:
  6499                           	opt stack 11
  6500                           
  6501                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  6502                           
  6503                           ; BSR set to: 1
  6504                           ;incstack = 0
  6505  00494E  010F               	movlb	15	; () banked
  6506  004950  8536               	bsf	54,2,b	;volatile
  6507                           
  6508                           ; BSR set to: 15
  6509                           ;usb_device.c: 2289: (UIR &= 0xEF);
  6510  004952  9862               	bcf	3938,4,c	;volatile
  6511                           
  6512                           ; BSR set to: 15
  6513                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  6514  004954  8265               	bsf	3941,1,c	;volatile
  6515                           
  6516                           ; BSR set to: 15
  6517                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  6518  004956  0E01               	movlw	1
  6519  004958  0101               	movlb	1	; () banked
  6520  00495A  6F61               	movwf	_USBBusIsSuspended& (0+255),b
  6521                           
  6522                           ; BSR set to: 1
  6523                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  6524  00495C  0E00               	movlw	0
  6525  00495E  6F5D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6526                           
  6527                           ; BSR set to: 1
  6528                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  6529  004960  0E00               	movlw	0
  6530  004962  0100               	movlb	0	; () banked
  6531  004964  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6532  004966  0E75               	movlw	117
  6533  004968  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6534  00496A  0E00               	movlw	0
  6535  00496C  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6536  00496E  0E00               	movlw	0
  6537  004970  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6538  004972  0E00               	movlw	0
  6539  004974  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6540  004976  0E00               	movlw	0
  6541  004978  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6542  00497A  EC46  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6543  00497E  0012               	return		;funcret
  6544  004980                     __end_of_USBSuspend:
  6545                           	opt stack 0
  6546                           tosu	equ	0xFFF
  6547                           tosh	equ	0xFFE
  6548                           tosl	equ	0xFFD
  6549                           pclath	equ	0xFFA
  6550                           tblptru	equ	0xFF8
  6551                           tblptrh	equ	0xFF7
  6552                           tblptrl	equ	0xFF6
  6553                           tablat	equ	0xFF5
  6554                           prodh	equ	0xFF4
  6555                           prodl	equ	0xFF3
  6556                           intcon	equ	0xFF2
  6557                           intcon2	equ	0xFF1
  6558                           intcon3	equ	0xFF0
  6559                           postinc0	equ	0xFEE
  6560                           plusw0	equ	0xFEB
  6561                           wreg	equ	0xFE8
  6562                           postinc1	equ	0xFE6
  6563                           postdec1	equ	0xFE5
  6564                           fsr1h	equ	0xFE2
  6565                           fsr1l	equ	0xFE1
  6566                           indf2	equ	0xFDF
  6567                           postinc2	equ	0xFDE
  6568                           postdec2	equ	0xFDD
  6569                           plusw2	equ	0xFDB
  6570                           fsr2h	equ	0xFDA
  6571                           fsr2l	equ	0xFD9
  6572                           status	equ	0xFD8
  6573                           
  6574 ;; *************** function _USBStallHandler *****************
  6575 ;; Defined at:
  6576 ;;		line 2220 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6577 ;; Parameters:    Size  Location     Type
  6578 ;;		None
  6579 ;; Auto vars:     Size  Location     Type
  6580 ;;		None
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  1    wreg      void 
  6583 ;; Registers used:
  6584 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6592 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6593 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6594 ;;Total ram usage:        1 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; Hardware stack levels required when called:   11
  6597 ;; This function calls:
  6598 ;;		Nothing
  6599 ;; This function is called by:
  6600 ;;		_USBDeviceTasks
  6601 ;; This function uses a non-reentrant model
  6602 ;;
  6603                           
  6604                           	psect	text28
  6605  0045F2                     __ptext28:
  6606                           	opt stack 0
  6607  0045F2                     _USBStallHandler:
  6608                           	opt stack 15
  6609                           
  6610                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  6611                           
  6612                           ;incstack = 0
  6613  0045F2  010F               	movlb	15	; () banked
  6614  0045F4  A126               	btfss	38,0,b	;volatile
  6615  0045F6  D01D               	goto	l1497
  6616                           
  6617                           ; BSR set to: 15
  6618                           ;usb_device.c: 2233: {
  6619                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  6620  0045F8  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6621  0045FC  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6622  004600  0E80               	movlw	128
  6623  004602  18DE               	xorwf	postinc2,w,c
  6624  004604  A4D8               	btfss	status,2,c
  6625  004606  D014               	goto	l1498
  6626                           
  6627                           ; BSR set to: 15
  6628  004608  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  6629  00460C  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6630  004610  0E84               	movlw	132
  6631  004612  18DE               	xorwf	postinc2,w,c
  6632  004614  A4D8               	btfss	status,2,c
  6633  004616  D00C               	goto	l1498
  6634                           
  6635                           ; BSR set to: 15
  6636                           ;usb_device.c: 2236: {
  6637                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6638  004618  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6639  00461C  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6640  004620  0E0C               	movlw	12
  6641  004622  6EDF               	movwf	indf2,c
  6642                           
  6643                           ; BSR set to: 15
  6644                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6645  004624  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6646  004628  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6647  00462C  0E00               	movlw	0
  6648  00462E  8EDB               	bsf	plusw2,7,c
  6649  004630                     l1498:
  6650                           
  6651                           ; BSR set to: 15
  6652                           ;usb_device.c: 2240: }
  6653                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  6654                           
  6655                           ; BSR set to: 15
  6656  004630  9126               	bcf	38,0,b	;volatile
  6657  004632                     l1497:
  6658                           
  6659                           ; BSR set to: 15
  6660                           ;usb_device.c: 2242: }
  6661                           ;usb_device.c: 2244: (UIR &= 0xDF);
  6662  004632  9A62               	bcf	3938,5,c	;volatile
  6663                           
  6664                           ; BSR set to: 15
  6665  004634  0012               	return		;funcret
  6666  004636                     __end_of_USBStallHandler:
  6667                           	opt stack 0
  6668                           tosu	equ	0xFFF
  6669                           tosh	equ	0xFFE
  6670                           tosl	equ	0xFFD
  6671                           pclath	equ	0xFFA
  6672                           tblptru	equ	0xFF8
  6673                           tblptrh	equ	0xFF7
  6674                           tblptrl	equ	0xFF6
  6675                           tablat	equ	0xFF5
  6676                           prodh	equ	0xFF4
  6677                           prodl	equ	0xFF3
  6678                           intcon	equ	0xFF2
  6679                           intcon2	equ	0xFF1
  6680                           intcon3	equ	0xFF0
  6681                           postinc0	equ	0xFEE
  6682                           plusw0	equ	0xFEB
  6683                           wreg	equ	0xFE8
  6684                           postinc1	equ	0xFE6
  6685                           postdec1	equ	0xFE5
  6686                           fsr1h	equ	0xFE2
  6687                           fsr1l	equ	0xFE1
  6688                           indf2	equ	0xFDF
  6689                           postinc2	equ	0xFDE
  6690                           postdec2	equ	0xFDD
  6691                           plusw2	equ	0xFDB
  6692                           fsr2h	equ	0xFDA
  6693                           fsr2l	equ	0xFD9
  6694                           status	equ	0xFD8
  6695                           
  6696 ;; *************** function _USBIncrement1msInternalTimers *****************
  6697 ;; Defined at:
  6698 ;;		line 3042 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;		None
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;		None
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      void 
  6705 ;; Registers used:
  6706 ;;		wreg, status,2, status,0
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6716 ;;Total ram usage:        0 bytes
  6717 ;; Hardware stack levels used:    1
  6718 ;; Hardware stack levels required when called:   11
  6719 ;; This function calls:
  6720 ;;		Nothing
  6721 ;; This function is called by:
  6722 ;;		_USBDeviceTasks
  6723 ;; This function uses a non-reentrant model
  6724 ;;
  6725                           
  6726                           	psect	text29
  6727  004CC4                     __ptext29:
  6728                           	opt stack 0
  6729  004CC4                     _USBIncrement1msInternalTimers:
  6730                           	opt stack 15
  6731                           
  6732                           ;usb_device.c: 3050: USB1msTickCount++;
  6733                           
  6734                           ; BSR set to: 15
  6735                           ;incstack = 0
  6736  004CC4  0E01               	movlw	1
  6737  004CC6  0101               	movlb	1	; () banked
  6738  004CC8  272A               	addwf	_USB1msTickCount& (0+255),f,b
  6739  004CCA  0E00               	movlw	0
  6740  004CCC  232B               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  6741  004CCE  232C               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  6742  004CD0  232D               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  6743                           
  6744                           ; BSR set to: 1
  6745                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  6746  004CD2  5161               	movf	_USBBusIsSuspended& (0+255),w,b
  6747  004CD4  A4D8               	btfss	status,2,c
  6748  004CD6  0012               	return	
  6749                           
  6750                           ; BSR set to: 1
  6751                           ;usb_device.c: 3052: {
  6752                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  6753  004CD8  2B5D               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  6754                           
  6755                           ; BSR set to: 1
  6756                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  6757  004CDA  515D               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  6758  004CDC  A4D8               	btfss	status,2,c
  6759  004CDE  0012               	return	
  6760                           
  6761                           ; BSR set to: 1
  6762                           ;usb_device.c: 3056: {
  6763                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  6764  004CE0  695D               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  6765                           
  6766                           ; BSR set to: 1
  6767  004CE2  0012               	return	
  6768  004CE4                     __end_of_USBIncrement1msInternalTimers:
  6769                           	opt stack 0
  6770                           tosu	equ	0xFFF
  6771                           tosh	equ	0xFFE
  6772                           tosl	equ	0xFFD
  6773                           pclath	equ	0xFFA
  6774                           tblptru	equ	0xFF8
  6775                           tblptrh	equ	0xFF7
  6776                           tblptrl	equ	0xFF6
  6777                           tablat	equ	0xFF5
  6778                           prodh	equ	0xFF4
  6779                           prodl	equ	0xFF3
  6780                           intcon	equ	0xFF2
  6781                           intcon2	equ	0xFF1
  6782                           intcon3	equ	0xFF0
  6783                           postinc0	equ	0xFEE
  6784                           plusw0	equ	0xFEB
  6785                           wreg	equ	0xFE8
  6786                           postinc1	equ	0xFE6
  6787                           postdec1	equ	0xFE5
  6788                           fsr1h	equ	0xFE2
  6789                           fsr1l	equ	0xFE1
  6790                           indf2	equ	0xFDF
  6791                           postinc2	equ	0xFDE
  6792                           postdec2	equ	0xFDD
  6793                           plusw2	equ	0xFDB
  6794                           fsr2h	equ	0xFDA
  6795                           fsr2l	equ	0xFD9
  6796                           status	equ	0xFD8
  6797                           
  6798 ;; *************** function _USBDeviceInit *****************
  6799 ;; Defined at:
  6800 ;;		line 295 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6801 ;; Parameters:    Size  Location     Type
  6802 ;;		None
  6803 ;; Auto vars:     Size  Location     Type
  6804 ;;  i               1    8[BANK0 ] unsigned char 
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      void 
  6807 ;; Registers used:
  6808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6815 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6817 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6818 ;;Total ram usage:        1 bytes
  6819 ;; Hardware stack levels used:    1
  6820 ;; Hardware stack levels required when called:   12
  6821 ;; This function calls:
  6822 ;;		_memset
  6823 ;; This function is called by:
  6824 ;;		_USBDeviceTasks
  6825 ;;		_UsbDevice_MainTask
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829                           	psect	text30
  6830  001D36                     __ptext30:
  6831                           	opt stack 0
  6832  001D36                     _USBDeviceInit:
  6833                           	opt stack 14
  6834                           
  6835                           ;usb_device.c: 297: uint8_t i;
  6836                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  6837                           
  6838                           ; BSR set to: 1
  6839                           ;incstack = 0
  6840  001D36  98A0               	bcf	4000,4,c	;volatile
  6841                           
  6842                           ;usb_device.c: 303: ;
  6843                           ;usb_device.c: 306: {UEIR = 0;};
  6844  001D38  0E00               	movlw	0
  6845  001D3A  6E63               	movwf	3939,c	;volatile
  6846                           
  6847                           ;usb_device.c: 309: {UIR = 0;};
  6848  001D3C  0E00               	movlw	0
  6849  001D3E  6E62               	movwf	3938,c	;volatile
  6850                           
  6851                           ;usb_device.c: 312: UEP0 = 0;
  6852  001D40  0E00               	movlw	0
  6853  001D42  010F               	movlb	15	; () banked
  6854  001D44  6F26               	movwf	38,b	;volatile
  6855                           
  6856                           ; BSR set to: 15
  6857                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  6858  001D46  0E27               	movlw	39
  6859  001D48  0100               	movlb	0	; () banked
  6860  001D4A  6F60               	movwf	memset@p1& (0+255),b
  6861  001D4C  0E0F               	movlw	15
  6862  001D4E  6F61               	movwf	(memset@p1+1)& (0+255),b
  6863  001D50  0E00               	movlw	0
  6864  001D52  6F63               	movwf	(memset@c+1)& (0+255),b
  6865  001D54  0E00               	movlw	0
  6866  001D56  6F62               	movwf	memset@c& (0+255),b
  6867  001D58  0E00               	movlw	0
  6868  001D5A  6F65               	movwf	(memset@n+1)& (0+255),b
  6869  001D5C  0E02               	movlw	2
  6870  001D5E  6F64               	movwf	memset@n& (0+255),b
  6871  001D60  ECF1  F024         	call	_memset	;wreg free
  6872                           
  6873                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6874  001D64  0E16               	movlw	22
  6875  001D66  010F               	movlb	15	; () banked
  6876  001D68  6F39               	movwf	57,b	;volatile
  6877                           
  6878                           ; BSR set to: 15
  6879  001D6A  0E9F               	movlw	159
  6880  001D6C  6F37               	movwf	55,b	;volatile
  6881                           
  6882                           ; BSR set to: 15
  6883  001D6E  0E7B               	movlw	123
  6884  001D70  6F36               	movwf	54,b	;volatile
  6885                           
  6886                           ; BSR set to: 15
  6887                           ;usb_device.c: 319: ;
  6888                           ;usb_device.c: 322: ;
  6889                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  6890  001D72  0E00               	movlw	0
  6891  001D74  0100               	movlb	0	; () banked
  6892  001D76  6F68               	movwf	USBDeviceInit@i& (0+255),b
  6893  001D78                     l7950:
  6894                           
  6895                           ; BSR set to: 0
  6896  001D78  0E0B               	movlw	11
  6897  001D7A  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  6898  001D7C  D001               	goto	l1341
  6899  001D7E  D00E               	goto	u6320
  6900  001D80                     l1341:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;usb_device.c: 326: {
  6904                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  6905                           
  6906                           ; BSR set to: 0
  6907  001D80  5168               	movf	USBDeviceInit@i& (0+255),w,b
  6908  001D82  0D04               	mullw	4
  6909  001D84  0E00               	movlw	0
  6910  001D86  24F3               	addwf	prodl,w,c
  6911  001D88  6ED9               	movwf	fsr2l,c
  6912  001D8A  0E04               	movlw	4
  6913  001D8C  20F4               	addwfc	prodh,w,c
  6914  001D8E  6EDA               	movwf	fsr2h,c
  6915  001D90  6ADE               	clrf	postinc2,c
  6916  001D92  6ADE               	clrf	postinc2,c
  6917  001D94  6ADE               	clrf	postinc2,c
  6918  001D96  6ADD               	clrf	postdec2,c
  6919                           
  6920                           ; BSR set to: 0
  6921  001D98  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  6922  001D9A  D7EE               	goto	l7950
  6923  001D9C                     u6320:
  6924                           
  6925                           ; BSR set to: 0
  6926                           ;usb_device.c: 328: }
  6927                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  6928  001D9C  8C65               	bsf	3941,6,c	;volatile
  6929                           
  6930                           ; BSR set to: 0
  6931                           ;usb_device.c: 334: UADDR = 0x00;
  6932  001D9E  0E00               	movlw	0
  6933  001DA0  010F               	movlb	15	; () banked
  6934  001DA2  6F38               	movwf	56,b	;volatile
  6935                           
  6936                           ; BSR set to: 15
  6937                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  6938  001DA4  9865               	bcf	3941,4,c	;volatile
  6939                           
  6940                           ; BSR set to: 15
  6941                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  6942  001DA6  9C65               	bcf	3941,6,c	;volatile
  6943  001DA8                     
  6944                           ;usb_device.c: 344: {
  6945                           ;usb_device.c: 345: (UIR &= 0xF7);
  6946                           
  6947                           ; BSR set to: 15
  6948  001DA8  9662               	bcf	3938,3,c	;volatile
  6949                           
  6950                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  6951  001DAA  0E00               	movlw	0
  6952  001DAC  0100               	movlb	0	; () banked
  6953  001DAE  6FF3               	movwf	(_inPipes+3)& (0+255),b
  6954                           
  6955                           ; BSR set to: 0
  6956                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  6957  001DB0  0E00               	movlw	0
  6958  001DB2  0101               	movlb	1	; () banked
  6959  001DB4  6F15               	movwf	(_outPipes+3)& (0+255),b
  6960                           
  6961                           ; BSR set to: 1
  6962                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  6963  001DB6  0E00               	movlw	0
  6964  001DB8  6F17               	movwf	(_outPipes+5)& (0+255),b
  6965  001DBA  0E00               	movlw	0
  6966  001DBC  6F16               	movwf	(_outPipes+4)& (0+255),b
  6967                           
  6968                           ; BSR set to: 1
  6969                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  6970  001DBE  B662               	btfsc	3938,3,c	;volatile
  6971  001DC0  D7F3               	goto	l1343
  6972                           
  6973                           ; BSR set to: 1
  6974                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  6975                           
  6976                           ; BSR set to: 1
  6977  001DC2  0E01               	movlw	1
  6978  001DC4  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  6979                           
  6980                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  6981  001DC6  0E01               	movlw	1
  6982  001DC8  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  6983                           
  6984                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  6985  001DCA  0E00               	movlw	0
  6986  001DCC  6F5F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  6987                           
  6988                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  6989  001DCE  0E00               	movlw	0
  6990  001DD0  6F5E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6991                           
  6992                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  6993  001DD2  0E00               	movlw	0
  6994  001DD4  6F61               	movwf	_USBBusIsSuspended& (0+255),b
  6995                           
  6996                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  6997  001DD6  0E00               	movlw	0
  6998  001DD8  0100               	movlb	0	; () banked
  6999  001DDA  6F68               	movwf	USBDeviceInit@i& (0+255),b
  7000  001DDC                     l7978:
  7001                           
  7002                           ; BSR set to: 0
  7003  001DDC  0E02               	movlw	2
  7004  001DDE  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
  7005  001DE0  D001               	goto	l1345
  7006  001DE2  D02E               	goto	u6350
  7007  001DE4                     l1345:
  7008                           
  7009                           ; BSR set to: 0
  7010                           ;usb_device.c: 364: {
  7011                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  7012                           
  7013                           ; BSR set to: 0
  7014  001DE4  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7015  001DE6  0D02               	mullw	2
  7016  001DE8  0E3E               	movlw	low _pBDTEntryIn
  7017  001DEA  24F3               	addwf	prodl,w,c
  7018  001DEC  6ED9               	movwf	fsr2l,c
  7019  001DEE  0E00               	movlw	high _pBDTEntryIn
  7020  001DF0  20F4               	addwfc	prodh,w,c
  7021  001DF2  6EDA               	movwf	fsr2h,c
  7022  001DF4  0E00               	movlw	0
  7023  001DF6  6EDE               	movwf	postinc2,c
  7024  001DF8  0E00               	movlw	0
  7025  001DFA  6EDD               	movwf	postdec2,c
  7026                           
  7027                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  7028  001DFC  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7029  001DFE  0D02               	mullw	2
  7030  001E00  0E20               	movlw	low _pBDTEntryOut
  7031  001E02  24F3               	addwf	prodl,w,c
  7032  001E04  6ED9               	movwf	fsr2l,c
  7033  001E06  0E01               	movlw	high _pBDTEntryOut
  7034  001E08  20F4               	addwfc	prodh,w,c
  7035  001E0A  6EDA               	movwf	fsr2h,c
  7036  001E0C  0E00               	movlw	0
  7037  001E0E  6EDE               	movwf	postinc2,c
  7038  001E10  0E00               	movlw	0
  7039  001E12  6EDD               	movwf	postdec2,c
  7040                           
  7041                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  7042  001E14  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7043  001E16  0D01               	mullw	1
  7044  001E18  0E3B               	movlw	low _ep_data_in
  7045  001E1A  24F3               	addwf	prodl,w,c
  7046  001E1C  6ED9               	movwf	fsr2l,c
  7047  001E1E  0E01               	movlw	high _ep_data_in
  7048  001E20  20F4               	addwfc	prodh,w,c
  7049  001E22  6EDA               	movwf	fsr2h,c
  7050  001E24  0E00               	movlw	0
  7051  001E26  6EDF               	movwf	indf2,c
  7052                           
  7053                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  7054  001E28  5168               	movf	USBDeviceInit@i& (0+255),w,b
  7055  001E2A  0D01               	mullw	1
  7056  001E2C  0E38               	movlw	low _ep_data_out
  7057  001E2E  24F3               	addwf	prodl,w,c
  7058  001E30  6ED9               	movwf	fsr2l,c
  7059  001E32  0E01               	movlw	high _ep_data_out
  7060  001E34  20F4               	addwfc	prodh,w,c
  7061  001E36  6EDA               	movwf	fsr2h,c
  7062  001E38  0E00               	movlw	0
  7063  001E3A  6EDF               	movwf	indf2,c
  7064                           
  7065                           ; BSR set to: 0
  7066  001E3C  2B68               	incf	USBDeviceInit@i& (0+255),f,b
  7067  001E3E  D7CE               	goto	l7978
  7068  001E40                     u6350:
  7069                           
  7070                           ; BSR set to: 0
  7071                           ;usb_device.c: 369: }
  7072                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7073                           
  7074                           ; BSR set to: 0
  7075  001E40  0E08               	movlw	8
  7076  001E42  6E3E               	movwf	_pBDTEntryIn,c
  7077  001E44  0E04               	movlw	4
  7078  001E46  6E3F               	movwf	_pBDTEntryIn+1,c
  7079                           
  7080                           ; BSR set to: 0
  7081                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  7082  001E48  0E16               	movlw	22
  7083  001E4A  010F               	movlb	15	; () banked
  7084  001E4C  6F26               	movwf	38,b	;volatile
  7085                           
  7086                           ; BSR set to: 15
  7087                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7088  001E4E  0E04               	movlw	4
  7089  001E50  0104               	movlb	4	; () banked
  7090  001E52  6F03               	movwf	3,b	;volatile
  7091  001E54  0E30               	movlw	48
  7092  001E56  6F02               	movwf	2,b	;volatile
  7093                           
  7094                           ; BSR set to: 4
  7095                           ;usb_device.c: 377: BDT[0].CNT = 8;
  7096  001E58  0E08               	movlw	8
  7097  001E5A  6F01               	movwf	1,b	;volatile
  7098                           
  7099                           ; BSR set to: 4
  7100                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  7101  001E5C  0E04               	movlw	4
  7102  001E5E  6F00               	movwf	0,b	;volatile
  7103                           
  7104                           ; BSR set to: 4
  7105                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  7106  001E60  8F00               	bsf	0,7,b	;volatile
  7107                           
  7108                           ; BSR set to: 4
  7109                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  7110  001E62  0E00               	movlw	0
  7111  001E64  6E52               	movwf	_USBActiveConfiguration,c
  7112                           
  7113                           ; BSR set to: 4
  7114                           ;usb_device.c: 384: USB1msTickCount = 0;
  7115  001E66  0E00               	movlw	0
  7116  001E68  0101               	movlb	1	; () banked
  7117  001E6A  6F2A               	movwf	_USB1msTickCount& (0+255),b
  7118  001E6C  0E00               	movlw	0
  7119  001E6E  6F2B               	movwf	(_USB1msTickCount+1)& (0+255),b
  7120  001E70  0E00               	movlw	0
  7121  001E72  6F2C               	movwf	(_USB1msTickCount+2)& (0+255),b
  7122  001E74  0E00               	movlw	0
  7123  001E76  6F2D               	movwf	(_USB1msTickCount+3)& (0+255),b
  7124                           
  7125                           ; BSR set to: 1
  7126                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  7127  001E78  0E00               	movlw	0
  7128  001E7A  6F5D               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7129                           
  7130                           ; BSR set to: 1
  7131                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  7132  001E7C  0E00               	movlw	0
  7133  001E7E  0100               	movlb	0	; () banked
  7134  001E80  6FFD               	movwf	_USBDeviceState& (0+255),b
  7135                           
  7136                           ; BSR set to: 0
  7137  001E82  0012               	return		;funcret
  7138  001E84                     __end_of_USBDeviceInit:
  7139                           	opt stack 0
  7140                           tosu	equ	0xFFF
  7141                           tosh	equ	0xFFE
  7142                           tosl	equ	0xFFD
  7143                           pclath	equ	0xFFA
  7144                           tblptru	equ	0xFF8
  7145                           tblptrh	equ	0xFF7
  7146                           tblptrl	equ	0xFF6
  7147                           tablat	equ	0xFF5
  7148                           prodh	equ	0xFF4
  7149                           prodl	equ	0xFF3
  7150                           intcon	equ	0xFF2
  7151                           intcon2	equ	0xFF1
  7152                           intcon3	equ	0xFF0
  7153                           postinc0	equ	0xFEE
  7154                           plusw0	equ	0xFEB
  7155                           wreg	equ	0xFE8
  7156                           postinc1	equ	0xFE6
  7157                           postdec1	equ	0xFE5
  7158                           fsr1h	equ	0xFE2
  7159                           fsr1l	equ	0xFE1
  7160                           indf2	equ	0xFDF
  7161                           postinc2	equ	0xFDE
  7162                           postdec2	equ	0xFDD
  7163                           plusw2	equ	0xFDB
  7164                           fsr2h	equ	0xFDA
  7165                           fsr2l	equ	0xFD9
  7166                           status	equ	0xFD8
  7167                           
  7168 ;; *************** function _USBCtrlEPService *****************
  7169 ;; Defined at:
  7170 ;;		line 2390 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;		None
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7188 ;;Total ram usage:        1 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:   18
  7191 ;; This function calls:
  7192 ;;		_USBCtrlTrfInHandler
  7193 ;;		_USBCtrlTrfOutHandler
  7194 ;;		_USBCtrlTrfSetupHandler
  7195 ;;		_memcpy
  7196 ;; This function is called by:
  7197 ;;		_USBDeviceTasks
  7198 ;; This function uses a non-reentrant model
  7199 ;;
  7200                           
  7201                           	psect	text31
  7202  0036D0                     __ptext31:
  7203                           	opt stack 0
  7204  0036D0                     _USBCtrlEPService:
  7205                           	opt stack 8
  7206                           
  7207                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  7208                           
  7209                           ; BSR set to: 0
  7210                           ;incstack = 0
  7211  0036D0  0E2D               	movlw	45
  7212  0036D2  6E4A               	movwf	_USBStatusStageTimeoutCounter,c
  7213                           
  7214                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  7215  0036D4  C0FF  F07A         	movff	_USTATcopy,??_USBCtrlEPService
  7216  0036D8  0EFD               	movlw	253
  7217  0036DA  0100               	movlb	0	; () banked
  7218  0036DC  177A               	andwf	??_USBCtrlEPService& (0+255),f,b
  7219  0036DE  A4D8               	btfss	status,2,c
  7220  0036E0  D038               	goto	l1511
  7221                           
  7222                           ; BSR set to: 0
  7223                           ;usb_device.c: 2401: {
  7224                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  7225  0036E2  C0FF  F07A         	movff	_USTATcopy,??_USBCtrlEPService
  7226  0036E6  90D8               	bcf	status,0,c
  7227  0036E8  337A               	rrcf	??_USBCtrlEPService& (0+255),f,b
  7228  0036EA  0E3F               	movlw	63
  7229  0036EC  177A               	andwf	??_USBCtrlEPService& (0+255),f,b
  7230  0036EE  517A               	movf	??_USBCtrlEPService& (0+255),w,b
  7231  0036F0  0D04               	mullw	4
  7232  0036F2  0E00               	movlw	0
  7233  0036F4  24F3               	addwf	prodl,w,c
  7234  0036F6  6FF8               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  7235  0036F8  0E04               	movlw	4
  7236  0036FA  20F4               	addwfc	prodh,w,c
  7237  0036FC  6FF9               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  7238                           
  7239                           ; BSR set to: 0
  7240                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7241  0036FE  C0F8  F0F6         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  7242  003702  C0F9  F0F7         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  7246  003706  0E04               	movlw	4
  7247  003708  1BF6               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  7248                           
  7249                           ; BSR set to: 0
  7250                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  7251  00370A  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7252  00370E  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7253  003712  30DF               	rrcf	223,w,c
  7254  003714  32E8               	rrcf	wreg,f,c
  7255  003716  0B0F               	andlw	15
  7256  003718  0A0D               	xorlw	13
  7257  00371A  A4D8               	btfss	status,2,c
  7258  00371C  D017               	goto	l1512
  7259                           
  7260                           ; BSR set to: 0
  7261                           ;usb_device.c: 2418: {
  7262                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  7263  00371E  0E30               	movlw	48
  7264  003720  6F60               	movwf	memcpy@d1& (0+255),b
  7265  003722  0E04               	movlw	4
  7266  003724  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  7267  003726  EE20 F002          	lfsr	2,2
  7268  00372A  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  7269  00372C  26D9               	addwf	fsr2l,f,c
  7270  00372E  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  7271  003730  22DA               	addwfc	fsr2h,f,c
  7272  003732  CFDE F062          	movff	postinc2,memcpy@s1
  7273  003736  CFDD F063          	movff	postdec2,memcpy@s1+1
  7274  00373A  0E00               	movlw	0
  7275  00373C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  7276  00373E  0E08               	movlw	8
  7277  003740  6F64               	movwf	memcpy@n& (0+255),b
  7278  003742  EC8F  F022         	call	_memcpy	;wreg free
  7279                           
  7280                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  7281  003746  EC8E  F01C         	call	_USBCtrlTrfSetupHandler	;wreg free
  7282                           
  7283                           ;usb_device.c: 2427: }
  7284  00374A  0012               	return	
  7285  00374C                     l1512:
  7286                           
  7287                           ;usb_device.c: 2428: else
  7288                           ;usb_device.c: 2429: {
  7289                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  7290  00374C  EC15  F020         	call	_USBCtrlTrfOutHandler	;wreg free
  7291                           
  7292                           ;usb_device.c: 2432: }
  7293                           ;usb_device.c: 2433: }
  7294  003750  0012               	return	
  7295  003752                     l1511:
  7296                           
  7297                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  7298  003752  0100               	movlb	0	; () banked
  7299  003754  51FF               	movf	_USTATcopy& (0+255),w,b
  7300  003756  0BFD               	andlw	253
  7301  003758  0A04               	xorlw	4
  7302  00375A  A4D8               	btfss	status,2,c
  7303  00375C  0012               	return	
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;usb_device.c: 2435: {
  7307                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  7308  00375E  EC70  F017         	call	_USBCtrlTrfInHandler	;wreg free
  7309  003762  0012               	return	
  7310  003764                     __end_of_USBCtrlEPService:
  7311                           	opt stack 0
  7312                           tosu	equ	0xFFF
  7313                           tosh	equ	0xFFE
  7314                           tosl	equ	0xFFD
  7315                           pclath	equ	0xFFA
  7316                           tblptru	equ	0xFF8
  7317                           tblptrh	equ	0xFF7
  7318                           tblptrl	equ	0xFF6
  7319                           tablat	equ	0xFF5
  7320                           prodh	equ	0xFF4
  7321                           prodl	equ	0xFF3
  7322                           intcon	equ	0xFF2
  7323                           intcon2	equ	0xFF1
  7324                           intcon3	equ	0xFF0
  7325                           postinc0	equ	0xFEE
  7326                           plusw0	equ	0xFEB
  7327                           wreg	equ	0xFE8
  7328                           postinc1	equ	0xFE6
  7329                           postdec1	equ	0xFE5
  7330                           fsr1h	equ	0xFE2
  7331                           fsr1l	equ	0xFE1
  7332                           indf2	equ	0xFDF
  7333                           postinc2	equ	0xFDE
  7334                           postdec2	equ	0xFDD
  7335                           plusw2	equ	0xFDB
  7336                           fsr2h	equ	0xFDA
  7337                           fsr2l	equ	0xFD9
  7338                           status	equ	0xFD8
  7339                           
  7340 ;; *************** function _memcpy *****************
  7341 ;; Defined at:
  7342 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  d1              2    0[BANK0 ] PTR void 
  7345 ;;		 -> SetupPkt(8), 
  7346 ;;  s1              2    2[BANK0 ] PTR const void 
  7347 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  7348 ;;  n               2    4[BANK0 ] unsigned int 
  7349 ;; Auto vars:     Size  Location     Type
  7350 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  7351 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  7352 ;;  d               2    6[BANK0 ] PTR unsigned char 
  7353 ;;		 -> SetupPkt(8), 
  7354 ;;  tmp             1   10[BANK0 ] unsigned char 
  7355 ;; Return value:  Size  Location     Type
  7356 ;;                  2    0[BANK0 ] PTR void 
  7357 ;; Registers used:
  7358 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7359 ;; Tracked objects:
  7360 ;;		On entry : 0/0
  7361 ;;		On exit  : 0/0
  7362 ;;		Unchanged: 0/0
  7363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7364 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7365 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7367 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7368 ;;Total ram usage:       11 bytes
  7369 ;; Hardware stack levels used:    1
  7370 ;; Hardware stack levels required when called:   11
  7371 ;; This function calls:
  7372 ;;		Nothing
  7373 ;; This function is called by:
  7374 ;;		_USBCtrlEPService
  7375 ;; This function uses a non-reentrant model
  7376 ;;
  7377                           
  7378                           	psect	text32
  7379  00451E                     __ptext32:
  7380                           	opt stack 0
  7381  00451E                     _memcpy:
  7382                           	opt stack 14
  7383                           
  7384                           ;incstack = 0
  7385  00451E  C062  F068         	movff	memcpy@s1,memcpy@s
  7386  004522  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
  7387  004526  C060  F066         	movff	memcpy@d1,memcpy@d
  7388  00452A  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
  7389  00452E  D011               	goto	l2580
  7390  004530                     l7236:
  7391  004530  C068  FFD9         	movff	memcpy@s,fsr2l
  7392  004534  C069  FFDA         	movff	memcpy@s+1,fsr2h
  7393  004538  50DF               	movf	indf2,w,c
  7394  00453A  0100               	movlb	0	; () banked
  7395  00453C  6F6A               	movwf	memcpy@tmp& (0+255),b
  7396                           
  7397                           ; BSR set to: 0
  7398  00453E  4B68               	infsnz	memcpy@s& (0+255),f,b
  7399  004540  2B69               	incf	(memcpy@s+1)& (0+255),f,b
  7400                           
  7401                           ; BSR set to: 0
  7402  004542  C066  FFD9         	movff	memcpy@d,fsr2l
  7403  004546  C067  FFDA         	movff	memcpy@d+1,fsr2h
  7404  00454A  C06A  FFDF         	movff	memcpy@tmp,indf2
  7405                           
  7406                           ; BSR set to: 0
  7407  00454E  4B66               	infsnz	memcpy@d& (0+255),f,b
  7408  004550  2B67               	incf	(memcpy@d+1)& (0+255),f,b
  7409  004552                     l2580:
  7410                           
  7411                           ; BSR set to: 0
  7412  004552  0100               	movlb	0	; () banked
  7413  004554  0764               	decf	memcpy@n& (0+255),f,b
  7414  004556  A0D8               	btfss	status,0,c
  7415  004558  0765               	decf	(memcpy@n+1)& (0+255),f,b
  7416  00455A  2964               	incf	memcpy@n& (0+255),w,b
  7417  00455C  E1E9               	bnz	l7236
  7418  00455E  2965               	incf	(memcpy@n+1)& (0+255),w,b
  7419  004560  B4D8               	btfsc	status,2,c
  7420  004562  0012               	return	
  7421  004564  D7E5               	goto	l2581
  7422  004566                     __end_of_memcpy:
  7423                           	opt stack 0
  7424                           tosu	equ	0xFFF
  7425                           tosh	equ	0xFFE
  7426                           tosl	equ	0xFFD
  7427                           pclath	equ	0xFFA
  7428                           tblptru	equ	0xFF8
  7429                           tblptrh	equ	0xFF7
  7430                           tblptrl	equ	0xFF6
  7431                           tablat	equ	0xFF5
  7432                           prodh	equ	0xFF4
  7433                           prodl	equ	0xFF3
  7434                           intcon	equ	0xFF2
  7435                           intcon2	equ	0xFF1
  7436                           intcon3	equ	0xFF0
  7437                           postinc0	equ	0xFEE
  7438                           plusw0	equ	0xFEB
  7439                           wreg	equ	0xFE8
  7440                           postinc1	equ	0xFE6
  7441                           postdec1	equ	0xFE5
  7442                           fsr1h	equ	0xFE2
  7443                           fsr1l	equ	0xFE1
  7444                           indf2	equ	0xFDF
  7445                           postinc2	equ	0xFDE
  7446                           postdec2	equ	0xFDD
  7447                           plusw2	equ	0xFDB
  7448                           fsr2h	equ	0xFDA
  7449                           fsr2l	equ	0xFD9
  7450                           status	equ	0xFD8
  7451                           
  7452 ;; *************** function _USBCtrlTrfSetupHandler *****************
  7453 ;; Defined at:
  7454 ;;		line 2483 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;		None
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;		None
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7472 ;;Total ram usage:        0 bytes
  7473 ;; Hardware stack levels used:    1
  7474 ;; Hardware stack levels required when called:   17
  7475 ;; This function calls:
  7476 ;;		_USBCheckStdRequest
  7477 ;;		_USBCtrlEPServiceComplete
  7478 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7479 ;; This function is called by:
  7480 ;;		_USBCtrlEPService
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           	psect	text33
  7485  00391C                     __ptext33:
  7486                           	opt stack 0
  7487  00391C                     _USBCtrlTrfSetupHandler:
  7488                           	opt stack 8
  7489                           
  7490                           ;usb_device.c: 2488: shortPacketStatus = 0;
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;incstack = 0
  7494  00391C  0E00               	movlw	0
  7495  00391E  6E4D               	movwf	_shortPacketStatus,c
  7496                           
  7497                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  7498  003920  0E00               	movlw	0
  7499  003922  0100               	movlb	0	; () banked
  7500  003924  6FFC               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  7501                           
  7502                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  7503  003926  0E00               	movlw	0
  7504  003928  0101               	movlb	1	; () banked
  7505  00392A  6F5F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7506                           
  7507                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  7508  00392C  0E00               	movlw	0
  7509  00392E  6F5E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7510                           
  7511                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  7512  003930  0E00               	movlw	0
  7513  003932  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  7514                           
  7515                           ;usb_device.c: 2493: controlTransferState = 0;
  7516  003934  0E00               	movlw	0
  7517  003936  6E4C               	movwf	_controlTransferState,c
  7518                           
  7519                           ; BSR set to: 1
  7520                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7521  003938  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7522  00393C  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7523  003940  0E7F               	movlw	127
  7524  003942  16DF               	andwf	indf2,f,c
  7525                           
  7526                           ; BSR set to: 1
  7527                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7528  003944  0E04               	movlw	4
  7529  003946  1A3E               	xorwf	_pBDTEntryIn,f,c
  7530                           
  7531                           ; BSR set to: 1
  7532                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7533  003948  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7534  00394C  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7535  003950  0E7F               	movlw	127
  7536  003952  16DF               	andwf	indf2,f,c
  7537                           
  7538                           ; BSR set to: 1
  7539                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7540  003954  0E04               	movlw	4
  7541  003956  1A3E               	xorwf	_pBDTEntryIn,f,c
  7542                           
  7543                           ; BSR set to: 1
  7544                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  7545  003958  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7546  00395C  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7547  003960  0E7F               	movlw	127
  7548  003962  16DF               	andwf	indf2,f,c
  7549                           
  7550                           ; BSR set to: 1
  7551                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  7552  003964  0E00               	movlw	0
  7553  003966  0100               	movlb	0	; () banked
  7554  003968  6FF3               	movwf	(_inPipes+3)& (0+255),b
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  7558  00396A  0E00               	movlw	0
  7559  00396C  6FF5               	movwf	(_inPipes+5)& (0+255),b
  7560  00396E  0E00               	movlw	0
  7561  003970  6FF4               	movwf	(_inPipes+4)& (0+255),b
  7562                           
  7563                           ; BSR set to: 0
  7564                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  7565  003972  0E00               	movlw	0
  7566  003974  0101               	movlb	1	; () banked
  7567  003976  6F15               	movwf	(_outPipes+3)& (0+255),b
  7568                           
  7569                           ; BSR set to: 1
  7570                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  7571  003978  0E00               	movlw	0
  7572  00397A  6F17               	movwf	(_outPipes+5)& (0+255),b
  7573  00397C  0E00               	movlw	0
  7574  00397E  6F16               	movwf	(_outPipes+4)& (0+255),b
  7575                           
  7576                           ; BSR set to: 1
  7577                           ;usb_device.c: 2517: USBCheckStdRequest();
  7578  003980  EC2C  F014         	call	_USBCheckStdRequest	;wreg free
  7579                           
  7580                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  7581  003984  0E00               	movlw	0
  7582  003986  0100               	movlb	0	; () banked
  7583  003988  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7584  00398A  0E03               	movlw	3
  7585  00398C  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7586  00398E  0E00               	movlw	0
  7587  003990  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7588  003992  0E00               	movlw	0
  7589  003994  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7590  003996  0E00               	movlw	0
  7591  003998  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7592  00399A  0E00               	movlw	0
  7593  00399C  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7594  00399E  EC46  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7595                           
  7596                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  7597  0039A2  ECC4  F012         	call	_USBCtrlEPServiceComplete	;wreg free
  7598  0039A6  0012               	return		;funcret
  7599  0039A8                     __end_of_USBCtrlTrfSetupHandler:
  7600                           	opt stack 0
  7601                           tosu	equ	0xFFF
  7602                           tosh	equ	0xFFE
  7603                           tosl	equ	0xFFD
  7604                           pclath	equ	0xFFA
  7605                           tblptru	equ	0xFF8
  7606                           tblptrh	equ	0xFF7
  7607                           tblptrl	equ	0xFF6
  7608                           tablat	equ	0xFF5
  7609                           prodh	equ	0xFF4
  7610                           prodl	equ	0xFF3
  7611                           intcon	equ	0xFF2
  7612                           intcon2	equ	0xFF1
  7613                           intcon3	equ	0xFF0
  7614                           postinc0	equ	0xFEE
  7615                           plusw0	equ	0xFEB
  7616                           wreg	equ	0xFE8
  7617                           postinc1	equ	0xFE6
  7618                           postdec1	equ	0xFE5
  7619                           fsr1h	equ	0xFE2
  7620                           fsr1l	equ	0xFE1
  7621                           indf2	equ	0xFDF
  7622                           postinc2	equ	0xFDE
  7623                           postdec2	equ	0xFDD
  7624                           plusw2	equ	0xFDB
  7625                           fsr2h	equ	0xFDA
  7626                           fsr2l	equ	0xFD9
  7627                           status	equ	0xFD8
  7628                           
  7629 ;; *************** function _USBCtrlEPServiceComplete *****************
  7630 ;; Defined at:
  7631 ;;		line 1634 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:   13
  7652 ;; This function calls:
  7653 ;;		_USBCtrlEPAllowDataStage
  7654 ;;		_USBCtrlEPAllowStatusStage
  7655 ;; This function is called by:
  7656 ;;		_USBCtrlTrfSetupHandler
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text34
  7661  002588                     __ptext34:
  7662                           	opt stack 0
  7663  002588                     _USBCtrlEPServiceComplete:
  7664                           	opt stack 11
  7665                           
  7666                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  7667                           
  7668                           ;incstack = 0
  7669  002588  9865               	bcf	3941,4,c	;volatile
  7670                           
  7671                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  7672  00258A  0100               	movlb	0	; () banked
  7673  00258C  BFF3               	btfsc	(_inPipes+3)& (0+255),7,b
  7674  00258E  D03A               	goto	l1421
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;usb_device.c: 1647: {
  7678                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  7679  002590  0101               	movlb	1	; () banked
  7680  002592  AF15               	btfss	(_outPipes+3)& (0+255),7,b
  7681  002594  D00B               	goto	l1422
  7682                           
  7683                           ; BSR set to: 1
  7684                           ;usb_device.c: 1649: {
  7685                           ;usb_device.c: 1650: controlTransferState = 2;
  7686  002596  0E02               	movlw	2
  7687  002598  6E4C               	movwf	_controlTransferState,c
  7688                           
  7689                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  7690  00259A  515E               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  7691  00259C  B4D8               	btfsc	status,2,c
  7692                           
  7693                           ; BSR set to: 1
  7694                           ;usb_device.c: 1662: {
  7695                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  7696  00259E  ECE3  F019         	call	_USBCtrlEPAllowDataStage	;wreg free
  7697                           
  7698                           ;usb_device.c: 1664: }
  7699                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  7700  0025A2  0E00               	movlw	0
  7701  0025A4  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7702                           
  7703                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  7704  0025A6  0E00               	movlw	0
  7705  0025A8  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7706                           
  7707                           ;usb_device.c: 1670: }
  7708  0025AA  0012               	return	
  7709  0025AC                     l1422:
  7710                           
  7711                           ;usb_device.c: 1671: else
  7712                           ;usb_device.c: 1672: {
  7713                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  7714  0025AC  0100               	movlb	0	; () banked
  7715  0025AE  EE20 F001          	lfsr	2,1
  7716  0025B2  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7717  0025B4  26D9               	addwf	fsr2l,f,c
  7718  0025B6  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7719  0025B8  22DA               	addwfc	fsr2h,f,c
  7720  0025BA  0E08               	movlw	8
  7721  0025BC  6EDF               	movwf	indf2,c
  7722                           
  7723                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7724  0025BE  EE20 F002          	lfsr	2,2
  7725  0025C2  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7726  0025C4  26D9               	addwf	fsr2l,f,c
  7727  0025C6  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7728  0025C8  22DA               	addwfc	fsr2h,f,c
  7729  0025CA  0E30               	movlw	48
  7730  0025CC  6EDE               	movwf	postinc2,c
  7731  0025CE  0E04               	movlw	4
  7732  0025D0  6EDD               	movwf	postdec2,c
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7736  0025D2  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7737  0025D6  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7738  0025DA  0E0C               	movlw	12
  7739  0025DC  6EDF               	movwf	indf2,c
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7743  0025DE  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7744  0025E2  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7745  0025E6  0E00               	movlw	0
  7746  0025E8  8EDB               	bsf	plusw2,7,c
  7747                           
  7748                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  7749  0025EA  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7750  0025EE  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7751  0025F2  0E04               	movlw	4
  7752  0025F4  6EDF               	movwf	indf2,c
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7756  0025F6  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  7757  0025FA  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7758  0025FE  0E00               	movlw	0
  7759  002600  8EDB               	bsf	plusw2,7,c
  7760                           
  7761                           ; BSR set to: 0
  7762                           ;usb_device.c: 1683: }
  7763                           ;usb_device.c: 1684: }
  7764  002602  0012               	return	
  7765  002604                     l1421:
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;usb_device.c: 1685: else
  7769                           ;usb_device.c: 1686: {
  7770                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  7771  002604  0104               	movlb	4	; () banked
  7772  002606  AF30               	btfss	48,7,b	;volatile
  7773  002608  D012               	goto	l1426
  7774                           
  7775                           ; BSR set to: 4
  7776                           ;usb_device.c: 1688: {
  7777                           ;usb_device.c: 1689: controlTransferState = 1;
  7778  00260A  0E01               	movlw	1
  7779  00260C  6E4C               	movwf	_controlTransferState,c
  7780                           
  7781                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  7782  00260E  0101               	movlb	1	; () banked
  7783  002610  515F               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  7784  002612  B4D8               	btfsc	status,2,c
  7785                           
  7786                           ; BSR set to: 1
  7787                           ;usb_device.c: 1704: {
  7788                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  7789  002614  ECE3  F019         	call	_USBCtrlEPAllowDataStage	;wreg free
  7790                           
  7791                           ;usb_device.c: 1706: }
  7792                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  7793  002618  0E00               	movlw	0
  7794  00261A  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7795                           
  7796                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  7797  00261C  0E00               	movlw	0
  7798  00261E  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7799                           
  7800                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  7801  002620  0100               	movlb	0	; () banked
  7802  002622  51FC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  7803  002624  A4D8               	btfss	status,2,c
  7804  002626  0012               	return	
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;usb_device.c: 1731: {
  7808                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  7809  002628  ECDF  F015         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7810                           
  7811                           ;usb_device.c: 1733: }
  7812                           ;usb_device.c: 1734: }
  7813  00262C  0012               	return	
  7814  00262E                     l1426:
  7815                           
  7816                           ;usb_device.c: 1735: else
  7817                           ;usb_device.c: 1736: {
  7818                           ;usb_device.c: 1747: controlTransferState = 2;
  7819  00262E  0E02               	movlw	2
  7820  002630  6E4C               	movwf	_controlTransferState,c
  7821                           
  7822                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  7823  002632  0100               	movlb	0	; () banked
  7824  002634  EE20 F001          	lfsr	2,1
  7825  002638  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7826  00263A  26D9               	addwf	fsr2l,f,c
  7827  00263C  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7828  00263E  22DA               	addwfc	fsr2h,f,c
  7829  002640  0E08               	movlw	8
  7830  002642  6EDF               	movwf	indf2,c
  7831                           
  7832                           ; BSR set to: 0
  7833                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7834  002644  EE20 F002          	lfsr	2,2
  7835  002648  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7836  00264A  26D9               	addwf	fsr2l,f,c
  7837  00264C  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7838  00264E  22DA               	addwfc	fsr2h,f,c
  7839  002650  0E30               	movlw	48
  7840  002652  6EDE               	movwf	postinc2,c
  7841  002654  0E04               	movlw	4
  7842  002656  6EDD               	movwf	postdec2,c
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7846  002658  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7847  00265C  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7848  002660  0E04               	movlw	4
  7849  002662  6EDF               	movwf	indf2,c
  7850                           
  7851                           ; BSR set to: 0
  7852                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7853  002664  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7854  002668  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7855  00266C  0E00               	movlw	0
  7856  00266E  8EDB               	bsf	plusw2,7,c
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  7860  002670  0E00               	movlw	0
  7861  002672  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  7862                           
  7863                           ; BSR set to: 0
  7864                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  7865  002674  0E00               	movlw	0
  7866  002676  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  7870  002678  51FC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  7871  00267A  A4D8               	btfss	status,2,c
  7872  00267C  0012               	return	
  7873                           
  7874                           ; BSR set to: 0
  7875                           ;usb_device.c: 1759: {
  7876                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  7877  00267E  ECDF  F015         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7878  002682  0012               	return	
  7879  002684                     __end_of_USBCtrlEPServiceComplete:
  7880                           	opt stack 0
  7881                           tosu	equ	0xFFF
  7882                           tosh	equ	0xFFE
  7883                           tosl	equ	0xFFD
  7884                           pclath	equ	0xFFA
  7885                           tblptru	equ	0xFF8
  7886                           tblptrh	equ	0xFF7
  7887                           tblptrl	equ	0xFF6
  7888                           tablat	equ	0xFF5
  7889                           prodh	equ	0xFF4
  7890                           prodl	equ	0xFF3
  7891                           intcon	equ	0xFF2
  7892                           intcon2	equ	0xFF1
  7893                           intcon3	equ	0xFF0
  7894                           postinc0	equ	0xFEE
  7895                           plusw0	equ	0xFEB
  7896                           wreg	equ	0xFE8
  7897                           postinc1	equ	0xFE6
  7898                           postdec1	equ	0xFE5
  7899                           fsr1h	equ	0xFE2
  7900                           fsr1l	equ	0xFE1
  7901                           indf2	equ	0xFDF
  7902                           postinc2	equ	0xFDE
  7903                           postdec2	equ	0xFDD
  7904                           plusw2	equ	0xFDB
  7905                           fsr2h	equ	0xFDA
  7906                           fsr2l	equ	0xFD9
  7907                           status	equ	0xFD8
  7908                           
  7909 ;; *************** function _USBCtrlEPAllowDataStage *****************
  7910 ;; Defined at:
  7911 ;;		line 1506 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;		None
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;		None
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7929 ;;Total ram usage:        0 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:   12
  7932 ;; This function calls:
  7933 ;;		_USBCtrlTrfTxService
  7934 ;; This function is called by:
  7935 ;;		_USBCtrlEPServiceComplete
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text35
  7940  0033C6                     __ptext35:
  7941                           	opt stack 0
  7942  0033C6                     _USBCtrlEPAllowDataStage:
  7943                           	opt stack 11
  7944                           
  7945                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  7946                           
  7947                           ;incstack = 0
  7948  0033C6  0E00               	movlw	0
  7949  0033C8  0101               	movlb	1	; () banked
  7950  0033CA  6F5F               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7951                           
  7952                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  7953  0033CC  0E00               	movlw	0
  7954  0033CE  6F5E               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7955                           
  7956                           ; BSR set to: 1
  7957                           ;usb_device.c: 1511: if(controlTransferState == 2)
  7958  0033D0  0E02               	movlw	2
  7959  0033D2  184C               	xorwf	_controlTransferState,w,c
  7960  0033D4  A4D8               	btfss	status,2,c
  7961  0033D6  D020               	goto	l1410
  7962                           
  7963                           ; BSR set to: 1
  7964                           ;usb_device.c: 1512: {
  7965                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  7966  0033D8  0100               	movlb	0	; () banked
  7967  0033DA  EE20 F001          	lfsr	2,1
  7968  0033DE  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7969  0033E0  26D9               	addwf	fsr2l,f,c
  7970  0033E2  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7971  0033E4  22DA               	addwfc	fsr2h,f,c
  7972  0033E6  0E08               	movlw	8
  7973  0033E8  6EDF               	movwf	indf2,c
  7974                           
  7975                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  7976  0033EA  EE20 F002          	lfsr	2,2
  7977  0033EE  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7978  0033F0  26D9               	addwf	fsr2l,f,c
  7979  0033F2  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7980  0033F4  22DA               	addwfc	fsr2h,f,c
  7981  0033F6  0E38               	movlw	56
  7982  0033F8  6EDE               	movwf	postinc2,c
  7983  0033FA  0E04               	movlw	4
  7984  0033FC  6EDD               	movwf	postdec2,c
  7985                           
  7986                           ; BSR set to: 0
  7987                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7988  0033FE  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7989  003402  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7990  003406  0E48               	movlw	72
  7991  003408  6EDF               	movwf	indf2,c
  7992                           
  7993                           ; BSR set to: 0
  7994                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7995  00340A  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7996  00340E  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7997  003412  0E00               	movlw	0
  7998  003414  8EDB               	bsf	plusw2,7,c
  7999                           
  8000                           ;usb_device.c: 1518: }
  8001  003416  0012               	return	
  8002  003418                     l1410:
  8003                           
  8004                           ;usb_device.c: 1519: else
  8005                           ;usb_device.c: 1520: {
  8006                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  8007                           
  8008                           ; BSR set to: 0
  8009  003418  0100               	movlb	0	; () banked
  8010  00341A  51F4               	movf	(_inPipes+4)& (0+255),w,b
  8011  00341C  0104               	movlb	4	; () banked
  8012  00341E  5D36               	subwf	54,w,b	;volatile
  8013  003420  0100               	movlb	0	; () banked
  8014  003422  51F5               	movf	(_inPipes+5)& (0+255),w,b
  8015  003424  0104               	movlb	4	; () banked
  8016  003426  5937               	subwfb	55,w,b	;volatile
  8017  003428  B0D8               	btfsc	status,0,c
  8018  00342A  D004               	goto	l1412
  8019                           
  8020                           ; BSR set to: 4
  8021                           ;usb_device.c: 1524: {
  8022                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  8023  00342C  C436 F0F4          	movff	1078,_inPipes+4	;volatile
  8024  003430  C437 F0F5          	movff	1079,_inPipes+5	;volatile
  8025  003434                     l1412:
  8026                           
  8027                           ; BSR set to: 4
  8028                           ;usb_device.c: 1526: }
  8029                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  8030                           
  8031                           ; BSR set to: 4
  8032  003434  EC9E  F014         	call	_USBCtrlTrfTxService	;wreg free
  8033                           
  8034                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  8035  003438  EE20 F002          	lfsr	2,2
  8036  00343C  503E               	movf	_pBDTEntryIn,w,c
  8037  00343E  26D9               	addwf	fsr2l,f,c
  8038  003440  503F               	movf	_pBDTEntryIn+1,w,c
  8039  003442  22DA               	addwfc	fsr2h,f,c
  8040  003444  0E38               	movlw	56
  8041  003446  6EDE               	movwf	postinc2,c
  8042  003448  0E04               	movlw	4
  8043  00344A  6EDD               	movwf	postdec2,c
  8044                           
  8045                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8046  00344C  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8047  003450  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8048  003454  0E48               	movlw	72
  8049  003456  6EDF               	movwf	indf2,c
  8050                           
  8051                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8052  003458  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
  8053  00345C  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8054  003460  0E00               	movlw	0
  8055  003462  8EDB               	bsf	plusw2,7,c
  8056  003464  0012               	return	
  8057  003466                     __end_of_USBCtrlEPAllowDataStage:
  8058                           	opt stack 0
  8059                           tosu	equ	0xFFF
  8060                           tosh	equ	0xFFE
  8061                           tosl	equ	0xFFD
  8062                           pclath	equ	0xFFA
  8063                           tblptru	equ	0xFF8
  8064                           tblptrh	equ	0xFF7
  8065                           tblptrl	equ	0xFF6
  8066                           tablat	equ	0xFF5
  8067                           prodh	equ	0xFF4
  8068                           prodl	equ	0xFF3
  8069                           intcon	equ	0xFF2
  8070                           intcon2	equ	0xFF1
  8071                           intcon3	equ	0xFF0
  8072                           postinc0	equ	0xFEE
  8073                           plusw0	equ	0xFEB
  8074                           wreg	equ	0xFE8
  8075                           postinc1	equ	0xFE6
  8076                           postdec1	equ	0xFE5
  8077                           fsr1h	equ	0xFE2
  8078                           fsr1l	equ	0xFE1
  8079                           indf2	equ	0xFDF
  8080                           postinc2	equ	0xFDE
  8081                           postdec2	equ	0xFDD
  8082                           plusw2	equ	0xFDB
  8083                           fsr2h	equ	0xFDA
  8084                           fsr2l	equ	0xFD9
  8085                           status	equ	0xFD8
  8086                           
  8087 ;; *************** function _USBCheckStdRequest *****************
  8088 ;; Defined at:
  8089 ;;		line 2703 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;		None
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1    wreg      void 
  8096 ;; Registers used:
  8097 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8107 ;;Total ram usage:        0 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:   16
  8110 ;; This function calls:
  8111 ;;		_USBStdFeatureReqHandler
  8112 ;;		_USBStdGetDscHandler
  8113 ;;		_USBStdGetStatusHandler
  8114 ;;		_USBStdSetCfgHandler
  8115 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8116 ;; This function is called by:
  8117 ;;		_USBCtrlTrfSetupHandler
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           	psect	text36
  8122  002858                     __ptext36:
  8123                           	opt stack 0
  8124  002858                     _USBCheckStdRequest:
  8125                           	opt stack 8
  8126                           
  8127                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  8128                           
  8129                           ;incstack = 0
  8130  002858  0104               	movlb	4	; () banked
  8131  00285A  3930               	swapf	48,w,b	;volatile
  8132  00285C  32E8               	rrcf	wreg,f,c
  8133  00285E  0B03               	andlw	3
  8134  002860  0900               	iorlw	0
  8135  002862  A4D8               	btfss	status,2,c
  8136  002864  0012               	return	
  8137  002866  D048               	goto	l1545
  8138  002868                     l1546:
  8139                           
  8140                           ; BSR set to: 4
  8141                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  8142  002868  0100               	movlb	0	; () banked
  8143  00286A  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  8147  00286C  0E08               	movlw	8
  8148  00286E  6FFD               	movwf	_USBDeviceState& (0+255),b
  8149                           
  8150                           ;usb_device.c: 2713: break;
  8151  002870  0012               	return	
  8152  002872                     
  8153                           ;usb_device.c: 2715: USBStdGetDscHandler();
  8154                           
  8155                           ; BSR set to: 0
  8156  002872  ECE4  F00F         	call	_USBStdGetDscHandler	;wreg free
  8157                           
  8158                           ;usb_device.c: 2716: break;
  8159  002876  0012               	return	
  8160  002878                     
  8161                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  8162  002878  ECB9  F013         	call	_USBStdSetCfgHandler	;wreg free
  8163                           
  8164                           ;usb_device.c: 2719: break;
  8165  00287C  0012               	return	
  8166  00287E                     
  8167                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  8168  00287E  0E52               	movlw	low _USBActiveConfiguration
  8169  002880  0100               	movlb	0	; () banked
  8170  002882  6FF0               	movwf	_inPipes& (0+255),b
  8171  002884  0E00               	movlw	high _USBActiveConfiguration
  8172  002886  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8176  002888  81F3               	bsf	(_inPipes+3)& (0+255),0,b
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  8180  00288A  0E01               	movlw	1
  8181  00288C  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8182                           
  8183                           ; BSR set to: 0
  8184                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  8185  00288E  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8186                           
  8187                           ;usb_device.c: 2725: break;
  8188  002890  0012               	return	
  8189  002892                     
  8190                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  8191                           
  8192                           ; BSR set to: 0
  8193  002892  EC2F  F018         	call	_USBStdGetStatusHandler	;wreg free
  8194                           
  8195                           ;usb_device.c: 2728: break;
  8196  002896  0012               	return	
  8197  002898                     
  8198                           ;usb_device.c: 2730: case 3:
  8199                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  8200  002898  EC50  F007         	call	_USBStdFeatureReqHandler	;wreg free
  8201                           
  8202                           ;usb_device.c: 2732: break;
  8203  00289C  0012               	return	
  8204  00289E                     
  8205                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  8206  00289E  0104               	movlb	4	; () banked
  8207  0028A0  5134               	movf	52,w,b	;volatile
  8208  0028A2  0D01               	mullw	1
  8209  0028A4  0EC1               	movlw	low _USBAlternateInterface
  8210  0028A6  24F3               	addwf	prodl,w,c
  8211  0028A8  0100               	movlb	0	; () banked
  8212  0028AA  6FF0               	movwf	_inPipes& (0+255),b
  8213  0028AC  0E01               	movlw	high _USBAlternateInterface
  8214  0028AE  20F4               	addwfc	prodh,w,c
  8215  0028B0  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8219  0028B2  81F3               	bsf	(_inPipes+3)& (0+255),0,b
  8220                           
  8221                           ; BSR set to: 0
  8222                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  8223  0028B4  0E01               	movlw	1
  8224  0028B6  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8225                           
  8226                           ; BSR set to: 0
  8227                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  8228  0028B8  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8229                           
  8230                           ;usb_device.c: 2738: break;
  8231  0028BA  0012               	return	
  8232  0028BC                     l1555:
  8233                           
  8234                           ; BSR set to: 4
  8235                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  8236  0028BC  0100               	movlb	0	; () banked
  8237  0028BE  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8238                           
  8239                           ; BSR set to: 0
  8240                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  8241  0028C0  0104               	movlb	4	; () banked
  8242  0028C2  5134               	movf	52,w,b	;volatile
  8243  0028C4  0D01               	mullw	1
  8244  0028C6  0EC1               	movlw	low _USBAlternateInterface
  8245  0028C8  24F3               	addwf	prodl,w,c
  8246  0028CA  6ED9               	movwf	fsr2l,c
  8247  0028CC  0E01               	movlw	high _USBAlternateInterface
  8248  0028CE  20F4               	addwfc	prodh,w,c
  8249  0028D0  6EDA               	movwf	fsr2h,c
  8250  0028D2  C432 FFDF          	movff	1074,indf2	;volatile
  8251                           
  8252                           ;usb_device.c: 2742: break;
  8253  0028D6  0012               	return	
  8254  0028D8                     
  8255                           ; BSR set to: 4
  8256                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  8257                           
  8258                           ; BSR set to: 4
  8259  0028D8  0E00               	movlw	0
  8260  0028DA  0100               	movlb	0	; () banked
  8261  0028DC  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8262  0028DE  0E02               	movlw	2
  8263  0028E0  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8264  0028E2  0E00               	movlw	0
  8265  0028E4  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8266  0028E6  0E00               	movlw	0
  8267  0028E8  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8268  0028EA  0E00               	movlw	0
  8269  0028EC  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8270  0028EE  0E00               	movlw	0
  8271  0028F0  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8272  0028F2  EC46  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8273                           
  8274                           ;usb_device.c: 2749: }
  8275                           
  8276                           ;usb_device.c: 2748: break;
  8277                           
  8278                           ;usb_device.c: 2747: default:
  8279                           
  8280                           ;usb_device.c: 2746: case 12:
  8281                           
  8282                           ;usb_device.c: 2745: break;
  8283  0028F6  0012               	return	
  8284  0028F8                     l1545:
  8285  0028F8  0104               	movlb	4	; () banked
  8286  0028FA  5131               	movf	49,w,b	;volatile
  8287                           
  8288                           ; Switch size 1, requested type "space"
  8289                           ; Number of cases is 11, Range of values is 0 to 12
  8290                           ; switch strategies available:
  8291                           ; Name         Instructions Cycles
  8292                           ; simple_byte           34    18 (average)
  8293                           ;	Chosen strategy is simple_byte
  8294  0028FC  0A00               	xorlw	0	; case 0
  8295  0028FE  B4D8               	btfsc	status,2,c
  8296  002900  D7C8               	goto	l1551
  8297  002902  0A01               	xorlw	1	; case 1
  8298  002904  B4D8               	btfsc	status,2,c
  8299  002906  D7C8               	goto	l1552
  8300  002908  0A02               	xorlw	2	; case 3
  8301  00290A  B4D8               	btfsc	status,2,c
  8302  00290C  D7C5               	goto	l1552
  8303  00290E  0A06               	xorlw	6	; case 5
  8304  002910  B4D8               	btfsc	status,2,c
  8305  002912  D7AA               	goto	l1546
  8306  002914  0A03               	xorlw	3	; case 6
  8307  002916  B4D8               	btfsc	status,2,c
  8308  002918  D7AC               	goto	l1548
  8309  00291A  0A01               	xorlw	1	; case 7
  8310  00291C  B4D8               	btfsc	status,2,c
  8311  00291E  D7DC               	goto	l1556
  8312  002920  0A0F               	xorlw	15	; case 8
  8313  002922  B4D8               	btfsc	status,2,c
  8314  002924  D7AC               	goto	l1550
  8315  002926  0A01               	xorlw	1	; case 9
  8316  002928  B4D8               	btfsc	status,2,c
  8317  00292A  D7A6               	goto	l1549
  8318  00292C  0A03               	xorlw	3	; case 10
  8319  00292E  B4D8               	btfsc	status,2,c
  8320  002930  D7B6               	goto	l1554
  8321  002932  0A01               	xorlw	1	; case 11
  8322  002934  B4D8               	btfsc	status,2,c
  8323  002936  D7C2               	goto	l1555
  8324  002938  0A07               	xorlw	7	; case 12
  8325  00293A  0012               	return	
  8326  00293C                     __end_of_USBCheckStdRequest:
  8327                           	opt stack 0
  8328                           tosu	equ	0xFFF
  8329                           tosh	equ	0xFFE
  8330                           tosl	equ	0xFFD
  8331                           pclath	equ	0xFFA
  8332                           tblptru	equ	0xFF8
  8333                           tblptrh	equ	0xFF7
  8334                           tblptrl	equ	0xFF6
  8335                           tablat	equ	0xFF5
  8336                           prodh	equ	0xFF4
  8337                           prodl	equ	0xFF3
  8338                           intcon	equ	0xFF2
  8339                           intcon2	equ	0xFF1
  8340                           intcon3	equ	0xFF0
  8341                           postinc0	equ	0xFEE
  8342                           plusw0	equ	0xFEB
  8343                           wreg	equ	0xFE8
  8344                           postinc1	equ	0xFE6
  8345                           postdec1	equ	0xFE5
  8346                           fsr1h	equ	0xFE2
  8347                           fsr1l	equ	0xFE1
  8348                           indf2	equ	0xFDF
  8349                           postinc2	equ	0xFDE
  8350                           postdec2	equ	0xFDD
  8351                           plusw2	equ	0xFDB
  8352                           fsr2h	equ	0xFDA
  8353                           fsr2l	equ	0xFD9
  8354                           status	equ	0xFD8
  8355                           
  8356 ;; *************** function _USBStdSetCfgHandler *****************
  8357 ;; Defined at:
  8358 ;;		line 1986 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;		None
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;  i               1   20[BANK0 ] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      void 
  8365 ;; Registers used:
  8366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8375 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8376 ;;Total ram usage:        1 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:   15
  8379 ;; This function calls:
  8380 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8381 ;;		_memset
  8382 ;; This function is called by:
  8383 ;;		_USBCheckStdRequest
  8384 ;; This function uses a non-reentrant model
  8385 ;;
  8386                           
  8387                           	psect	text37
  8388  002772                     __ptext37:
  8389                           	opt stack 0
  8390  002772                     _USBStdSetCfgHandler:
  8391                           	opt stack 8
  8392                           
  8393                           ;usb_device.c: 1988: uint8_t i;
  8394                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  8395                           
  8396                           ;incstack = 0
  8397  002772  0100               	movlb	0	; () banked
  8398  002774  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  8402  002776  0E27               	movlw	39
  8403  002778  6F60               	movwf	memset@p1& (0+255),b
  8404  00277A  0E0F               	movlw	15
  8405  00277C  6F61               	movwf	(memset@p1+1)& (0+255),b
  8406  00277E  0E00               	movlw	0
  8407  002780  6F63               	movwf	(memset@c+1)& (0+255),b
  8408  002782  0E00               	movlw	0
  8409  002784  6F62               	movwf	memset@c& (0+255),b
  8410  002786  0E00               	movlw	0
  8411  002788  6F65               	movwf	(memset@n+1)& (0+255),b
  8412  00278A  0E02               	movlw	2
  8413  00278C  6F64               	movwf	memset@n& (0+255),b
  8414  00278E  ECF1  F024         	call	_memset	;wreg free
  8415                           
  8416                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  8417  002792  0E00               	movlw	0
  8418  002794  0100               	movlb	0	; () banked
  8419  002796  6F60               	movwf	memset@p1& (0+255),b
  8420  002798  0E04               	movlw	4
  8421  00279A  6F61               	movwf	(memset@p1+1)& (0+255),b
  8422  00279C  0E00               	movlw	0
  8423  00279E  6F63               	movwf	(memset@c+1)& (0+255),b
  8424  0027A0  0E00               	movlw	0
  8425  0027A2  6F62               	movwf	memset@c& (0+255),b
  8426  0027A4  0E00               	movlw	0
  8427  0027A6  6F65               	movwf	(memset@n+1)& (0+255),b
  8428  0027A8  0E30               	movlw	48
  8429  0027AA  6F64               	movwf	memset@n& (0+255),b
  8430  0027AC  ECF1  F024         	call	_memset	;wreg free
  8431                           
  8432                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  8433  0027B0  8C65               	bsf	3941,6,c	;volatile
  8434                           
  8435                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  8436  0027B2  0E00               	movlw	0
  8437  0027B4  0100               	movlb	0	; () banked
  8438  0027B6  6F74               	movwf	USBStdSetCfgHandler@i& (0+255),b
  8439  0027B8                     l6622:
  8440                           
  8441                           ; BSR set to: 0
  8442  0027B8  0E02               	movlw	2
  8443  0027BA  6574               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  8444  0027BC  D001               	goto	l1462
  8445  0027BE  D016               	goto	u4520
  8446  0027C0                     l1462:
  8447                           
  8448                           ; BSR set to: 0
  8449                           ;usb_device.c: 2006: {
  8450                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  8451                           
  8452                           ; BSR set to: 0
  8453  0027C0  5174               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8454  0027C2  0D01               	mullw	1
  8455  0027C4  0E3B               	movlw	low _ep_data_in
  8456  0027C6  24F3               	addwf	prodl,w,c
  8457  0027C8  6ED9               	movwf	fsr2l,c
  8458  0027CA  0E01               	movlw	high _ep_data_in
  8459  0027CC  20F4               	addwfc	prodh,w,c
  8460  0027CE  6EDA               	movwf	fsr2h,c
  8461  0027D0  0E00               	movlw	0
  8462  0027D2  6EDF               	movwf	indf2,c
  8463                           
  8464                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  8465  0027D4  5174               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8466  0027D6  0D01               	mullw	1
  8467  0027D8  0E38               	movlw	low _ep_data_out
  8468  0027DA  24F3               	addwf	prodl,w,c
  8469  0027DC  6ED9               	movwf	fsr2l,c
  8470  0027DE  0E01               	movlw	high _ep_data_out
  8471  0027E0  20F4               	addwfc	prodh,w,c
  8472  0027E2  6EDA               	movwf	fsr2h,c
  8473  0027E4  0E00               	movlw	0
  8474  0027E6  6EDF               	movwf	indf2,c
  8475                           
  8476                           ; BSR set to: 0
  8477  0027E8  2B74               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  8478  0027EA  D7E6               	goto	l6622
  8479  0027EC                     u4520:
  8480                           
  8481                           ; BSR set to: 0
  8482                           ;usb_device.c: 2009: }
  8483                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  8484                           
  8485                           ; BSR set to: 0
  8486  0027EC  0EC1               	movlw	low _USBAlternateInterface
  8487  0027EE  6F60               	movwf	memset@p1& (0+255),b
  8488  0027F0  0E01               	movlw	high _USBAlternateInterface
  8489  0027F2  6F61               	movwf	(memset@p1+1)& (0+255),b
  8490  0027F4  0E00               	movlw	0
  8491  0027F6  6F63               	movwf	(memset@c+1)& (0+255),b
  8492  0027F8  0E00               	movlw	0
  8493  0027FA  6F62               	movwf	memset@c& (0+255),b
  8494  0027FC  0E00               	movlw	0
  8495  0027FE  6F65               	movwf	(memset@n+1)& (0+255),b
  8496  002800  0E02               	movlw	2
  8497  002802  6F64               	movwf	memset@n& (0+255),b
  8498  002804  ECF1  F024         	call	_memset	;wreg free
  8499                           
  8500                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  8501  002808  9C65               	bcf	3941,6,c	;volatile
  8502                           
  8503                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8504  00280A  0E08               	movlw	8
  8505  00280C  6E3E               	movwf	_pBDTEntryIn,c
  8506  00280E  0E04               	movlw	4
  8507  002810  6E3F               	movwf	_pBDTEntryIn+1,c
  8508                           
  8509                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  8510  002812  0E00               	movlw	0
  8511  002814  0100               	movlb	0	; () banked
  8512  002816  6FF8               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8513  002818  0E04               	movlw	4
  8514  00281A  6FF9               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8515                           
  8516                           ; BSR set to: 0
  8517                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8518  00281C  C0F8  F0F6         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8519  002820  C0F9  F0F7         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8520                           
  8521                           ; BSR set to: 0
  8522                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  8523  002824  C432 F052          	movff	1074,_USBActiveConfiguration	;volatile
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  8527  002828  5052               	movf	_USBActiveConfiguration,w,c
  8528  00282A  A4D8               	btfss	status,2,c
  8529  00282C  D003               	goto	l1464
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;usb_device.c: 2028: {
  8533                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  8534  00282E  0E10               	movlw	16
  8535  002830  6FFD               	movwf	_USBDeviceState& (0+255),b
  8536                           
  8537                           ;usb_device.c: 2031: }
  8538  002832  0012               	return	
  8539  002834                     l1464:
  8540                           
  8541                           ; BSR set to: 0
  8542                           ;usb_device.c: 2032: else
  8543                           ;usb_device.c: 2033: {
  8544                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  8545                           
  8546                           ; BSR set to: 0
  8547  002834  0E00               	movlw	0
  8548  002836  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8549  002838  0E01               	movlw	1
  8550  00283A  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8551  00283C  0E52               	movlw	low _USBActiveConfiguration
  8552  00283E  6F6E               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8553  002840  0E00               	movlw	high _USBActiveConfiguration
  8554  002842  6F6F               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8555  002844  0E00               	movlw	0
  8556  002846  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8557  002848  0E01               	movlw	1
  8558  00284A  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8559  00284C  EC46  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8560                           
  8561                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  8562  002850  0E20               	movlw	32
  8563  002852  0100               	movlb	0	; () banked
  8564  002854  6FFD               	movwf	_USBDeviceState& (0+255),b
  8565  002856  0012               	return	
  8566  002858                     __end_of_USBStdSetCfgHandler:
  8567                           	opt stack 0
  8568                           tosu	equ	0xFFF
  8569                           tosh	equ	0xFFE
  8570                           tosl	equ	0xFFD
  8571                           pclath	equ	0xFFA
  8572                           tblptru	equ	0xFF8
  8573                           tblptrh	equ	0xFF7
  8574                           tblptrl	equ	0xFF6
  8575                           tablat	equ	0xFF5
  8576                           prodh	equ	0xFF4
  8577                           prodl	equ	0xFF3
  8578                           intcon	equ	0xFF2
  8579                           intcon2	equ	0xFF1
  8580                           intcon3	equ	0xFF0
  8581                           postinc0	equ	0xFEE
  8582                           plusw0	equ	0xFEB
  8583                           wreg	equ	0xFE8
  8584                           postinc1	equ	0xFE6
  8585                           postdec1	equ	0xFE5
  8586                           fsr1h	equ	0xFE2
  8587                           fsr1l	equ	0xFE1
  8588                           indf2	equ	0xFDF
  8589                           postinc2	equ	0xFDE
  8590                           postdec2	equ	0xFDD
  8591                           plusw2	equ	0xFDB
  8592                           fsr2h	equ	0xFDA
  8593                           fsr2l	equ	0xFD9
  8594                           status	equ	0xFD8
  8595                           
  8596 ;; *************** function _USBStdGetStatusHandler *****************
  8597 ;; Defined at:
  8598 ;;		line 2147 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8599 ;; Parameters:    Size  Location     Type
  8600 ;;		None
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;  p               2    1[BANK0 ] PTR struct __BDT
  8603 ;;		 -> BDT(48), NULL(0), 
  8604 ;; Return value:  Size  Location     Type
  8605 ;;                  1    wreg      void 
  8606 ;; Registers used:
  8607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8608 ;; Tracked objects:
  8609 ;;		On entry : 0/0
  8610 ;;		On exit  : 0/0
  8611 ;;		Unchanged: 0/0
  8612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8614 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8615 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8616 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8617 ;;Total ram usage:        3 bytes
  8618 ;; Hardware stack levels used:    1
  8619 ;; Hardware stack levels required when called:   11
  8620 ;; This function calls:
  8621 ;;		Nothing
  8622 ;; This function is called by:
  8623 ;;		_USBCheckStdRequest
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           	psect	text38
  8628  00305E                     __ptext38:
  8629                           	opt stack 0
  8630  00305E                     _USBStdGetStatusHandler:
  8631                           	opt stack 12
  8632                           
  8633                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;incstack = 0
  8637  00305E  0E00               	movlw	0
  8638  003060  0104               	movlb	4	; () banked
  8639  003062  6F38               	movwf	56,b	;volatile
  8640                           
  8641                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  8642  003064  0E00               	movlw	0
  8643  003066  6F39               	movwf	57,b	;volatile
  8644                           
  8645                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  8646  003068  D03D               	goto	l1483
  8647  00306A                     l1484:
  8648                           
  8649                           ; BSR set to: 4
  8650                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  8651  00306A  0100               	movlb	0	; () banked
  8652  00306C  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8653                           
  8654                           ;usb_device.c: 2163: }
  8655                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  8656                           
  8657                           ; BSR set to: 4
  8658                           
  8659                           ; BSR set to: 0
  8660                           ;usb_device.c: 2161: {
  8661                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  8662                           
  8663                           ;usb_device.c: 2160: if(0 == 1)
  8664  00306E  0101               	movlb	1	; () banked
  8665  003070  0562               	decf	_RemoteWakeup& (0+255),w,b
  8666  003072  A4D8               	btfss	status,2,c
  8667  003074  D042               	goto	l1487
  8668                           
  8669                           ; BSR set to: 1
  8670                           ;usb_device.c: 2166: {
  8671                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  8672  003076  0104               	movlb	4	; () banked
  8673  003078  8338               	bsf	56,1,b	;volatile
  8674                           
  8675                           ; BSR set to: 4
  8676                           ;usb_device.c: 2168: }
  8677                           ;usb_device.c: 2169: break;
  8678  00307A  D03F               	goto	l1487
  8679  00307C                     l1488:
  8680                           
  8681                           ; BSR set to: 4
  8682                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  8683  00307C  0100               	movlb	0	; () banked
  8684  00307E  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8685                           
  8686                           ;usb_device.c: 2172: break;
  8687  003080  D03C               	goto	l1487
  8688  003082                     l1489:
  8689                           
  8690                           ; BSR set to: 4
  8691                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  8692  003082  0100               	movlb	0	; () banked
  8693  003084  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  8694                           
  8695                           ;usb_device.c: 2178: {
  8696                           ;usb_device.c: 2179: BDT_ENTRY *p;
  8697                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  8698  003086  0104               	movlb	4	; () banked
  8699  003088  BF34               	btfsc	52,7,b	;volatile
  8700  00308A  D00B               	goto	l1490
  8701                           
  8702                           ; BSR set to: 4
  8703                           ;usb_device.c: 2182: {
  8704                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8705  00308C  5134               	movf	52,w,b	;volatile
  8706  00308E  0B0F               	andlw	15
  8707  003090  0100               	movlb	0	; () banked
  8708  003092  6F60               	movwf	??_USBStdGetStatusHandler& (0+255),b
  8709  003094  5160               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8710  003096  0D02               	mullw	2
  8711  003098  0E20               	movlw	low _pBDTEntryOut
  8712  00309A  24F3               	addwf	prodl,w,c
  8713  00309C  6ED9               	movwf	fsr2l,c
  8714  00309E  0E01               	movlw	high _pBDTEntryOut
  8715  0030A0  D00B               	goto	L4
  8716  0030A2                     l1490:
  8717                           
  8718                           ;usb_device.c: 2185: else
  8719                           ;usb_device.c: 2186: {
  8720                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  8721                           
  8722                           ; BSR set to: 0
  8723  0030A2  0104               	movlb	4	; () banked
  8724  0030A4  5134               	movf	52,w,b	;volatile
  8725  0030A6  0B0F               	andlw	15
  8726  0030A8  0100               	movlb	0	; () banked
  8727  0030AA  6F60               	movwf	??_USBStdGetStatusHandler& (0+255),b
  8728  0030AC  5160               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8729  0030AE  0D02               	mullw	2
  8730  0030B0  0E3E               	movlw	low _pBDTEntryIn
  8731  0030B2  24F3               	addwf	prodl,w,c
  8732  0030B4  6ED9               	movwf	fsr2l,c
  8733  0030B6  0E00               	movlw	high _pBDTEntryIn
  8734  0030B8                     L4:
  8735  0030B8  20F4               	addwfc	prodh,w,c
  8736  0030BA  6EDA               	movwf	fsr2h,c
  8737  0030BC  CFDE F061          	movff	postinc2,USBStdGetStatusHandler@p
  8738  0030C0  CFDD F062          	movff	postdec2,USBStdGetStatusHandler@p+1
  8739                           
  8740                           ; BSR set to: 0
  8741                           ;usb_device.c: 2188: }
  8742                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  8743                           
  8744                           ; BSR set to: 0
  8745  0030C4  C061  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8746  0030C8  C062  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8747  0030CC  AEDF               	btfss	indf2,7,c
  8748  0030CE  D015               	goto	l1487
  8749                           
  8750                           ; BSR set to: 0
  8751  0030D0  C061  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8752  0030D4  C062  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8753  0030D8  A4DF               	btfss	indf2,2,c
  8754  0030DA  D00F               	goto	l1487
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  8758  0030DC  0E01               	movlw	1
  8759  0030DE  0104               	movlb	4	; () banked
  8760  0030E0  6F38               	movwf	56,b	;volatile
  8761                           
  8762                           ; BSR set to: 4
  8763                           ;usb_device.c: 2193: }
  8764                           ;usb_device.c: 2194: }
  8765                           
  8766                           ; BSR set to: 4
  8767                           ;usb_device.c: 2192: break;
  8768  0030E2  D00B               	goto	l1487
  8769  0030E4                     l1483:
  8770                           
  8771                           ; BSR set to: 4
  8772                           
  8773                           ; BSR set to: 4
  8774  0030E4  5130               	movf	48,w,b	;volatile
  8775  0030E6  0B1F               	andlw	31
  8776                           
  8777                           ; Switch size 1, requested type "space"
  8778                           ; Number of cases is 3, Range of values is 0 to 2
  8779                           ; switch strategies available:
  8780                           ; Name         Instructions Cycles
  8781                           ; simple_byte           10     6 (average)
  8782                           ;	Chosen strategy is simple_byte
  8783  0030E8  0A00               	xorlw	0	; case 0
  8784  0030EA  B4D8               	btfsc	status,2,c
  8785  0030EC  D7BE               	goto	l1484
  8786  0030EE  0A01               	xorlw	1	; case 1
  8787  0030F0  B4D8               	btfsc	status,2,c
  8788  0030F2  D7C4               	goto	l1488
  8789  0030F4  0A03               	xorlw	3	; case 2
  8790  0030F6  B4D8               	btfsc	status,2,c
  8791  0030F8  D7C4               	goto	l1489
  8792  0030FA                     l1487:
  8793                           
  8794                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  8795  0030FA  0100               	movlb	0	; () banked
  8796  0030FC  AFF3               	btfss	(_inPipes+3)& (0+255),7,b
  8797  0030FE  0012               	return	
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;usb_device.c: 2197: {
  8801                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  8802  003100  0E38               	movlw	56
  8803  003102  6FF0               	movwf	_inPipes& (0+255),b
  8804  003104  0E04               	movlw	4
  8805  003106  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8809  003108  81F3               	bsf	(_inPipes+3)& (0+255),0,b
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
  8813  00310A  0E02               	movlw	2
  8814  00310C  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8815  00310E  0012               	return	
  8816  003110                     __end_of_USBStdGetStatusHandler:
  8817                           	opt stack 0
  8818                           tosu	equ	0xFFF
  8819                           tosh	equ	0xFFE
  8820                           tosl	equ	0xFFD
  8821                           pclath	equ	0xFFA
  8822                           tblptru	equ	0xFF8
  8823                           tblptrh	equ	0xFF7
  8824                           tblptrl	equ	0xFF6
  8825                           tablat	equ	0xFF5
  8826                           prodh	equ	0xFF4
  8827                           prodl	equ	0xFF3
  8828                           intcon	equ	0xFF2
  8829                           intcon2	equ	0xFF1
  8830                           intcon3	equ	0xFF0
  8831                           postinc0	equ	0xFEE
  8832                           plusw0	equ	0xFEB
  8833                           wreg	equ	0xFE8
  8834                           postinc1	equ	0xFE6
  8835                           postdec1	equ	0xFE5
  8836                           fsr1h	equ	0xFE2
  8837                           fsr1l	equ	0xFE1
  8838                           indf2	equ	0xFDF
  8839                           postinc2	equ	0xFDE
  8840                           postdec2	equ	0xFDD
  8841                           plusw2	equ	0xFDB
  8842                           fsr2h	equ	0xFDA
  8843                           fsr2l	equ	0xFD9
  8844                           status	equ	0xFD8
  8845                           
  8846 ;; *************** function _USBStdGetDscHandler *****************
  8847 ;; Defined at:
  8848 ;;		line 2061 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8849 ;; Parameters:    Size  Location     Type
  8850 ;;		None
  8851 ;; Auto vars:     Size  Location     Type
  8852 ;;		None
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  1    wreg      void 
  8855 ;; Registers used:
  8856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8857 ;; Tracked objects:
  8858 ;;		On entry : 0/0
  8859 ;;		On exit  : 0/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8864 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8865 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;Total ram usage:        2 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:   11
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_USBCheckStdRequest
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text39
  8877  001FC8                     __ptext39:
  8878                           	opt stack 0
  8879  001FC8                     _USBStdGetDscHandler:
  8880                           	opt stack 12
  8881                           
  8882                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;incstack = 0
  8886  001FC8  0E80               	movlw	128
  8887  001FCA  0104               	movlb	4	; () banked
  8888  001FCC  1930               	xorwf	48,w,b	;volatile
  8889  001FCE  A4D8               	btfss	status,2,c
  8890  001FD0  0012               	return	
  8891                           
  8892                           ; BSR set to: 4
  8893                           ;usb_device.c: 2064: {
  8894                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  8895  001FD2  0EC0               	movlw	192
  8896  001FD4  0100               	movlb	0	; () banked
  8897  001FD6  6FF3               	movwf	(_inPipes+3)& (0+255),b
  8898                           
  8899                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
  8900  001FD8  D088               	goto	l1470
  8901  001FDA                     
  8902                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  8903                           
  8904                           ; BSR set to: 0
  8905  001FDA  0EF4               	movlw	low _device_dsc
  8906  001FDC  0100               	movlb	0	; () banked
  8907  001FDE  6FF0               	movwf	_inPipes& (0+255),b
  8908  001FE0  0EFE               	movlw	high _device_dsc
  8909  001FE2  6FF1               	movwf	(_inPipes+1)& (0+255),b
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
  8913  001FE4  0E00               	movlw	0
  8914  001FE6  6FF5               	movwf	(_inPipes+5)& (0+255),b
  8915  001FE8  0E12               	movlw	18
  8916  001FEA  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8917                           
  8918                           ;usb_device.c: 2076: break;
  8919  001FEC  0012               	return	
  8920  001FEE                     
  8921                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
  8922                           
  8923                           ; BSR set to: 0
  8924  001FEE  0104               	movlb	4	; () banked
  8925  001FF0  5132               	movf	50,w,b	;volatile
  8926  001FF2  A4D8               	btfss	status,2,c
  8927  001FF4  D043               	goto	l1474
  8928                           
  8929                           ; BSR set to: 4
  8930                           ;usb_device.c: 2082: {
  8931                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  8932  001FF6  5132               	movf	50,w,b	;volatile
  8933  001FF8  0D02               	mullw	2
  8934  001FFA  0EDD               	movlw	low _USB_CD_Ptr
  8935  001FFC  24F3               	addwf	prodl,w,c
  8936  001FFE  6EF6               	movwf	tblptrl,c
  8937  002000  0EFC               	movlw	high _USB_CD_Ptr
  8938  002002  20F4               	addwfc	prodh,w,c
  8939  002004  6EF7               	movwf	tblptrh,c
  8940  002006                     	if	1	;There are 3 active tblptr bytes
  8941  002006  6AF8               	clrf	tblptru,c
  8942  002008  0E00               	movlw	low (__mediumconst shr (0+16))
  8943  00200A  22F8               	addwfc	tblptru,f,c
  8944  00200C                     	endif
  8945  00200C  0009               	tblrd		*+
  8946  00200E  CFF5 F0F0          	movff	tablat,_inPipes
  8947  002012  000A               	tblrd		*-
  8948  002014  CFF5 F0F1          	movff	tablat,_inPipes+1
  8949                           
  8950                           ; BSR set to: 4
  8951                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  8952  002018  0E02               	movlw	2
  8953  00201A  0100               	movlb	0	; () banked
  8954  00201C  25F0               	addwf	_inPipes& (0+255),w,b
  8955  00201E  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  8956  002020  0E00               	movlw	0
  8957  002022  21F1               	addwfc	(_inPipes+1)& (0+255),w,b
  8958  002024  6F61               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  8959  002026  C060  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  8960  00202A  C061  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  8961  00202E  6AF8               	clrf	tblptru,c
  8962  002030  0E0E               	movlw	(high __ramtop+-1)
  8963  002032  64F7               	cpfsgt	tblptrh,c
  8964  002034  D003               	bra	u4567
  8965  002036  0008               	tblrd		*
  8966  002038  50F5               	movf	tablat,w,c
  8967  00203A  D005               	bra	u4560
  8968  00203C                     u4567:
  8969  00203C  CFF6 FFE9          	movff	tblptrl,fsr0l
  8970  002040  CFF7 FFEA          	movff	tblptrh,fsr0h
  8971  002044  50EF               	movf	indf0,w,c
  8972  002046                     u4560:
  8973  002046  0100               	movlb	0	; () banked
  8974  002048  6FF4               	movwf	(_inPipes+4)& (0+255),b
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  8978  00204A  0E03               	movlw	3
  8979  00204C  25F0               	addwf	_inPipes& (0+255),w,b
  8980  00204E  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  8981  002050  0E00               	movlw	0
  8982  002052  21F1               	addwfc	(_inPipes+1)& (0+255),w,b
  8983  002054  6F61               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  8984  002056  C060  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  8985  00205A  C061  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  8986  00205E  6AF8               	clrf	tblptru,c
  8987  002060  0E0E               	movlw	(high __ramtop+-1)
  8988  002062  64F7               	cpfsgt	tblptrh,c
  8989  002064  D003               	bra	u4577
  8990  002066  0008               	tblrd		*
  8991  002068  50F5               	movf	tablat,w,c
  8992  00206A  D005               	bra	u4570
  8993  00206C                     u4577:
  8994  00206C  CFF6 FFE9          	movff	tblptrl,fsr0l
  8995  002070  CFF7 FFEA          	movff	tblptrh,fsr0h
  8996  002074  50EF               	movf	indf0,w,c
  8997  002076                     u4570:
  8998  002076  0100               	movlb	0	; () banked
  8999  002078  6FF5               	movwf	(_inPipes+5)& (0+255),b
  9000                           
  9001                           ;usb_device.c: 2094: }
  9002  00207A  0012               	return	
  9003  00207C                     l1474:
  9004                           
  9005                           ;usb_device.c: 2095: else
  9006                           ;usb_device.c: 2096: {
  9007                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
  9008                           
  9009                           ; BSR set to: 0
  9010  00207C  0E00               	movlw	0
  9011  00207E  0100               	movlb	0	; () banked
  9012  002080  6FF3               	movwf	(_inPipes+3)& (0+255),b
  9013                           
  9014                           ; BSR set to: 0
  9015                           ;usb_device.c: 2098: }
  9016                           ;usb_device.c: 2099: break;
  9017  002082  0012               	return	
  9018  002084                     
  9019                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
  9020                           
  9021                           ; BSR set to: 0
  9022  002084  0E03               	movlw	3
  9023  002086  0104               	movlb	4	; () banked
  9024  002088  6132               	cpfslt	50,b	;volatile
  9025  00208A  D027               	goto	l1477
  9026                           
  9027                           ; BSR set to: 4
  9028                           ;usb_device.c: 2105: {
  9029                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  9030  00208C  5132               	movf	50,w,b	;volatile
  9031  00208E  0D02               	mullw	2
  9032  002090  0ED7               	movlw	low _USB_SD_Ptr
  9033  002092  24F3               	addwf	prodl,w,c
  9034  002094  6EF6               	movwf	tblptrl,c
  9035  002096  0EFC               	movlw	high _USB_SD_Ptr
  9036  002098  20F4               	addwfc	prodh,w,c
  9037  00209A  6EF7               	movwf	tblptrh,c
  9038  00209C                     	if	1	;There are 3 active tblptr bytes
  9039  00209C  6AF8               	clrf	tblptru,c
  9040  00209E  0E00               	movlw	low (__mediumconst shr (0+16))
  9041  0020A0  22F8               	addwfc	tblptru,f,c
  9042  0020A2                     	endif
  9043  0020A2  0009               	tblrd		*+
  9044  0020A4  CFF5 F0F0          	movff	tablat,_inPipes
  9045  0020A8  000A               	tblrd		*-
  9046  0020AA  CFF5 F0F1          	movff	tablat,_inPipes+1
  9047                           
  9048                           ; BSR set to: 4
  9049                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  9050  0020AE  C0F0  FFF6         	movff	_inPipes,tblptrl
  9051  0020B2  C0F1  FFF7         	movff	_inPipes+1,tblptrh
  9052  0020B6  6AF8               	clrf	tblptru,c
  9053  0020B8  0E0E               	movlw	(high __ramtop+-1)
  9054  0020BA  64F7               	cpfsgt	tblptrh,c
  9055  0020BC  D003               	bra	u4597
  9056  0020BE  0008               	tblrd		*
  9057  0020C0  50F5               	movf	tablat,w,c
  9058  0020C2  D005               	bra	u4590
  9059  0020C4                     u4597:
  9060  0020C4  CFF6 FFE9          	movff	tblptrl,fsr0l
  9061  0020C8  CFF7 FFEA          	movff	tblptrh,fsr0h
  9062  0020CC  50EF               	movf	indf0,w,c
  9063  0020CE                     u4590:
  9064  0020CE  0100               	movlb	0	; () banked
  9065  0020D0  6F60               	movwf	??_USBStdGetDscHandler& (0+255),b
  9066  0020D2  5160               	movf	??_USBStdGetDscHandler& (0+255),w,b
  9067  0020D4  6FF4               	movwf	(_inPipes+4)& (0+255),b
  9068  0020D6  6BF5               	clrf	(_inPipes+5)& (0+255),b
  9069                           
  9070                           ;usb_device.c: 2110: }
  9071  0020D8  0012               	return	
  9072  0020DA                     l1477:
  9073                           
  9074                           ;usb_device.c: 2120: else
  9075                           ;usb_device.c: 2121: {
  9076                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
  9077                           
  9078                           ; BSR set to: 0
  9079  0020DA  0E00               	movlw	0
  9080  0020DC  0100               	movlb	0	; () banked
  9081  0020DE  6FF3               	movwf	(_inPipes+3)& (0+255),b
  9082                           
  9083                           ; BSR set to: 0
  9084                           ;usb_device.c: 2123: }
  9085                           ;usb_device.c: 2124: break;
  9086  0020E0  0012               	return	
  9087  0020E2                     
  9088                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
  9089                           
  9090                           ; BSR set to: 0
  9091  0020E2  0E00               	movlw	0
  9092  0020E4  0100               	movlb	0	; () banked
  9093  0020E6  6FF3               	movwf	(_inPipes+3)& (0+255),b
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;usb_device.c: 2128: }
  9097                           
  9098                           ;usb_device.c: 2127: break;
  9099  0020E8  0012               	return	
  9100  0020EA                     l1470:
  9101                           
  9102                           ; BSR set to: 0
  9103                           
  9104                           ; BSR set to: 0
  9105  0020EA  0104               	movlb	4	; () banked
  9106  0020EC  5133               	movf	51,w,b	;volatile
  9107                           
  9108                           ; Switch size 1, requested type "space"
  9109                           ; Number of cases is 3, Range of values is 1 to 3
  9110                           ; switch strategies available:
  9111                           ; Name         Instructions Cycles
  9112                           ; simple_byte           10     6 (average)
  9113                           ;	Chosen strategy is simple_byte
  9114  0020EE  0A01               	xorlw	1	; case 1
  9115  0020F0  B4D8               	btfsc	status,2,c
  9116  0020F2  D773               	goto	l1471
  9117  0020F4  0A03               	xorlw	3	; case 2
  9118  0020F6  B4D8               	btfsc	status,2,c
  9119  0020F8  D77A               	goto	l1473
  9120  0020FA  0A01               	xorlw	1	; case 3
  9121  0020FC  B4D8               	btfsc	status,2,c
  9122  0020FE  D7C2               	goto	l1476
  9123  002100  D7F0               	goto	l1479
  9124  002102                     __end_of_USBStdGetDscHandler:
  9125                           	opt stack 0
  9126                           tosu	equ	0xFFF
  9127                           tosh	equ	0xFFE
  9128                           tosl	equ	0xFFD
  9129                           pclath	equ	0xFFA
  9130                           tblptru	equ	0xFF8
  9131                           tblptrh	equ	0xFF7
  9132                           tblptrl	equ	0xFF6
  9133                           tablat	equ	0xFF5
  9134                           prodh	equ	0xFF4
  9135                           prodl	equ	0xFF3
  9136                           intcon	equ	0xFF2
  9137                           intcon2	equ	0xFF1
  9138                           intcon3	equ	0xFF0
  9139                           indf0	equ	0xFEF
  9140                           postinc0	equ	0xFEE
  9141                           plusw0	equ	0xFEB
  9142                           fsr0h	equ	0xFEA
  9143                           fsr0l	equ	0xFE9
  9144                           wreg	equ	0xFE8
  9145                           postinc1	equ	0xFE6
  9146                           postdec1	equ	0xFE5
  9147                           fsr1h	equ	0xFE2
  9148                           fsr1l	equ	0xFE1
  9149                           indf2	equ	0xFDF
  9150                           postinc2	equ	0xFDE
  9151                           postdec2	equ	0xFDD
  9152                           plusw2	equ	0xFDB
  9153                           fsr2h	equ	0xFDA
  9154                           fsr2l	equ	0xFD9
  9155                           status	equ	0xFD8
  9156                           
  9157 ;; *************** function _USBStdFeatureReqHandler *****************
  9158 ;; Defined at:
  9159 ;;		line 2771 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;  p               2   24[BANK0 ] PTR struct __BDT
  9164 ;;		 -> BDT(48), NULL(0), 
  9165 ;;  pUEP            2   21[BANK0 ] PTR unsigned char 
  9166 ;;		 -> UEP0(1), 
  9167 ;;  current_ep_d    1   23[BANK0 ] struct .
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  1    wreg      void 
  9170 ;; Registers used:
  9171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9178 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9179 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9180 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9181 ;;Total ram usage:        6 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; Hardware stack levels required when called:   15
  9184 ;; This function calls:
  9185 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9186 ;; This function is called by:
  9187 ;;		_USBCheckStdRequest
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text40
  9192  000EA0                     __ptext40:
  9193                           	opt stack 0
  9194  000EA0                     _USBStdFeatureReqHandler:
  9195                           	opt stack 8
  9196                           
  9197                           ;usb_device.c: 2773: BDT_ENTRY *p;
  9198                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
  9199                           ;usb_device.c: 2778: unsigned char* pUEP;
  9200                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
  9201                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
  9202                           
  9203                           ;incstack = 0
  9204  000EA0  0104               	movlb	4	; () banked
  9205  000EA2  0532               	decf	50,w,b	;volatile
  9206  000EA4  A4D8               	btfss	status,2,c
  9207  000EA6  D011               	goto	l1563
  9208                           
  9209                           ; BSR set to: 4
  9210  000EA8  5130               	movf	48,w,b	;volatile
  9211  000EAA  0B1F               	andlw	31
  9212  000EAC  0900               	iorlw	0
  9213  000EAE  A4D8               	btfss	status,2,c
  9214  000EB0  D00C               	goto	l1563
  9215                           
  9216                           ; BSR set to: 4
  9217                           ;usb_device.c: 2818: {
  9218                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
  9219  000EB2  0100               	movlb	0	; () banked
  9220  000EB4  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  9221                           
  9222                           ; BSR set to: 0
  9223                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
  9224  000EB6  0E03               	movlw	3
  9225  000EB8  0104               	movlb	4	; () banked
  9226  000EBA  1931               	xorwf	49,w,b	;volatile
  9227  000EBC  A4D8               	btfss	status,2,c
  9228  000EBE  D002               	goto	l1562
  9229                           
  9230                           ; BSR set to: 4
  9231                           ;usb_device.c: 2821: RemoteWakeup = 1;
  9232  000EC0  0E01               	movlw	1
  9233  000EC2  D001               	goto	L5
  9234  000EC4                     l1562:
  9235                           
  9236                           ;usb_device.c: 2822: else
  9237                           ;usb_device.c: 2823: RemoteWakeup = 0;
  9238                           
  9239                           ; BSR set to: 1
  9240  000EC4  0E00               	movlw	0
  9241  000EC6                     L5:
  9242  000EC6  0101               	movlb	1	; () banked
  9243  000EC8  6F62               	movwf	_RemoteWakeup& (0+255),b
  9244  000ECA                     l1563:
  9245                           
  9246                           ;usb_device.c: 2824: }
  9247                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
  9248                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
  9249                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  9250                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
  9251                           
  9252                           ; BSR set to: 1
  9253  000ECA  0104               	movlb	4	; () banked
  9254  000ECC  5132               	movf	50,w,b	;volatile
  9255  000ECE  A4D8               	btfss	status,2,c
  9256  000ED0  0012               	return	
  9257                           
  9258                           ; BSR set to: 4
  9259  000ED2  5130               	movf	48,w,b	;volatile
  9260  000ED4  0B1F               	andlw	31
  9261  000ED6  0A02               	xorlw	2
  9262  000ED8  A4D8               	btfss	status,2,c
  9263  000EDA  0012               	return	
  9264                           
  9265                           ; BSR set to: 4
  9266  000EDC  5134               	movf	52,w,b	;volatile
  9267  000EDE  0B0F               	andlw	15
  9268  000EE0  0900               	iorlw	0
  9269  000EE2  B4D8               	btfsc	status,2,c
  9270  000EE4  0012               	return	
  9271                           
  9272                           ; BSR set to: 4
  9273  000EE6  5134               	movf	52,w,b	;volatile
  9274  000EE8  0B0F               	andlw	15
  9275  000EEA  0100               	movlb	0	; () banked
  9276  000EEC  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9277  000EEE  0E03               	movlw	3
  9278  000EF0  6174               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
  9279  000EF2  0012               	return	
  9280                           
  9281                           ; BSR set to: 0
  9282  000EF4  0E20               	movlw	32
  9283  000EF6  19FD               	xorwf	_USBDeviceState& (0+255),w,b
  9284  000EF8  A4D8               	btfss	status,2,c
  9285  000EFA  0012               	return	
  9286                           
  9287                           ; BSR set to: 0
  9288                           ;usb_device.c: 2831: {
  9289                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
  9290  000EFC  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
  9291                           
  9292                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
  9293  000EFE  0104               	movlb	4	; () banked
  9294  000F00  BF34               	btfsc	52,7,b	;volatile
  9295  000F02  D01C               	goto	l1565
  9296                           
  9297                           ; BSR set to: 4
  9298                           ;usb_device.c: 2838: {
  9299                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9300  000F04  5134               	movf	52,w,b	;volatile
  9301  000F06  0B0F               	andlw	15
  9302  000F08  0100               	movlb	0	; () banked
  9303  000F0A  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9304  000F0C  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9305  000F0E  0D02               	mullw	2
  9306  000F10  0E20               	movlw	low _pBDTEntryOut
  9307  000F12  24F3               	addwf	prodl,w,c
  9308  000F14  6ED9               	movwf	fsr2l,c
  9309  000F16  0E01               	movlw	high _pBDTEntryOut
  9310  000F18  20F4               	addwfc	prodh,w,c
  9311  000F1A  6EDA               	movwf	fsr2h,c
  9312  000F1C  CFDE F078          	movff	postinc2,USBStdFeatureReqHandler@p
  9313  000F20  CFDD F079          	movff	postdec2,USBStdFeatureReqHandler@p+1
  9314                           
  9315                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  9316  000F24  0104               	movlb	4	; () banked
  9317  000F26  5134               	movf	52,w,b	;volatile
  9318  000F28  0B0F               	andlw	15
  9319  000F2A  0100               	movlb	0	; () banked
  9320  000F2C  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9321  000F2E  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9322  000F30  0D01               	mullw	1
  9323  000F32  0E38               	movlw	low _ep_data_out
  9324  000F34  24F3               	addwf	prodl,w,c
  9325  000F36  6ED9               	movwf	fsr2l,c
  9326  000F38  0E01               	movlw	high _ep_data_out
  9327  000F3A  D01C               	goto	L6
  9328  000F3C                     l1565:
  9329                           
  9330                           ;usb_device.c: 2842: else
  9331                           ;usb_device.c: 2843: {
  9332                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9333                           
  9334                           ; BSR set to: 0
  9335  000F3C  0104               	movlb	4	; () banked
  9336  000F3E  5134               	movf	52,w,b	;volatile
  9337  000F40  0B0F               	andlw	15
  9338  000F42  0100               	movlb	0	; () banked
  9339  000F44  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9340  000F46  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9341  000F48  0D02               	mullw	2
  9342  000F4A  0E3E               	movlw	low _pBDTEntryIn
  9343  000F4C  24F3               	addwf	prodl,w,c
  9344  000F4E  6ED9               	movwf	fsr2l,c
  9345  000F50  0E00               	movlw	high _pBDTEntryIn
  9346  000F52  20F4               	addwfc	prodh,w,c
  9347  000F54  6EDA               	movwf	fsr2h,c
  9348  000F56  CFDE F078          	movff	postinc2,USBStdFeatureReqHandler@p
  9349  000F5A  CFDD F079          	movff	postdec2,USBStdFeatureReqHandler@p+1
  9350                           
  9351                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  9352  000F5E  0104               	movlb	4	; () banked
  9353  000F60  5134               	movf	52,w,b	;volatile
  9354  000F62  0B0F               	andlw	15
  9355  000F64  0100               	movlb	0	; () banked
  9356  000F66  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9357  000F68  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9358  000F6A  0D01               	mullw	1
  9359  000F6C  0E3B               	movlw	low _ep_data_in
  9360  000F6E  24F3               	addwf	prodl,w,c
  9361  000F70  6ED9               	movwf	fsr2l,c
  9362  000F72  0E01               	movlw	high _ep_data_in
  9363  000F74                     L6:
  9364  000F74  20F4               	addwfc	prodh,w,c
  9365  000F76  6EDA               	movwf	fsr2h,c
  9366  000F78  50DF               	movf	indf2,w,c
  9367  000F7A  6F77               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;usb_device.c: 2846: }
  9371                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
  9372                           
  9373                           ; BSR set to: 0
  9374  000F7C  B177               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
  9375  000F7E  D002               	goto	l1567
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;usb_device.c: 2853: {
  9379                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  9380  000F80  9578               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
  9381                           
  9382                           ;usb_device.c: 2855: }
  9383  000F82  D001               	goto	l1568
  9384  000F84                     l1567:
  9385                           
  9386                           ; BSR set to: 0
  9387                           ;usb_device.c: 2856: else
  9388                           ;usb_device.c: 2857: {
  9389                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  9390                           
  9391                           ; BSR set to: 0
  9392  000F84  8578               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
  9393  000F86                     l1568:
  9394                           
  9395                           ; BSR set to: 0
  9396                           ;usb_device.c: 2859: }
  9397                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
  9398                           
  9399                           ; BSR set to: 0
  9400  000F86  0104               	movlb	4	; () banked
  9401  000F88  BF34               	btfsc	52,7,b	;volatile
  9402  000F8A  D00B               	goto	l1569
  9403                           
  9404                           ; BSR set to: 4
  9405                           ;usb_device.c: 2865: {
  9406                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9407  000F8C  5134               	movf	52,w,b	;volatile
  9408  000F8E  0B0F               	andlw	15
  9409  000F90  0100               	movlb	0	; () banked
  9410  000F92  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9411  000F94  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9412  000F96  0D02               	mullw	2
  9413  000F98  0E20               	movlw	low _pBDTEntryOut
  9414  000F9A  24F3               	addwf	prodl,w,c
  9415  000F9C  6ED9               	movwf	fsr2l,c
  9416  000F9E  0E01               	movlw	high _pBDTEntryOut
  9417  000FA0  D00B               	goto	L7
  9418  000FA2                     l1569:
  9419                           
  9420                           ;usb_device.c: 2868: else
  9421                           ;usb_device.c: 2869: {
  9422                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9423                           
  9424                           ; BSR set to: 0
  9425  000FA2  0104               	movlb	4	; () banked
  9426  000FA4  5134               	movf	52,w,b	;volatile
  9427  000FA6  0B0F               	andlw	15
  9428  000FA8  0100               	movlb	0	; () banked
  9429  000FAA  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9430  000FAC  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9431  000FAE  0D02               	mullw	2
  9432  000FB0  0E3E               	movlw	low _pBDTEntryIn
  9433  000FB2  24F3               	addwf	prodl,w,c
  9434  000FB4  6ED9               	movwf	fsr2l,c
  9435  000FB6  0E00               	movlw	high _pBDTEntryIn
  9436  000FB8                     L7:
  9437  000FB8  20F4               	addwfc	prodh,w,c
  9438  000FBA  6EDA               	movwf	fsr2h,c
  9439  000FBC  C078  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  9440  000FC0  C079  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  9441                           
  9442                           ; BSR set to: 0
  9443                           ;usb_device.c: 2871: }
  9444                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
  9445                           
  9446                           ; BSR set to: 0
  9447  000FC4  0E03               	movlw	3
  9448  000FC6  0104               	movlb	4	; () banked
  9449  000FC8  1931               	xorwf	49,w,b	;volatile
  9450  000FCA  A4D8               	btfss	status,2,c
  9451  000FCC  D031               	goto	l1571
  9452                           
  9453                           ; BSR set to: 4
  9454                           ;usb_device.c: 2875: {
  9455                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
  9456  000FCE  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9457  000FD2  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9458  000FD6  0100               	movlb	0	; () banked
  9459  000FD8  AEDF               	btfss	indf2,7,c
  9460  000FDA  D01D               	goto	l1574
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;usb_device.c: 2877: {
  9464                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
  9465  000FDC  0104               	movlb	4	; () banked
  9466  000FDE  BF34               	btfsc	52,7,b	;volatile
  9467  000FE0  D00B               	goto	l1573
  9468                           
  9469                           ; BSR set to: 4
  9470                           ;usb_device.c: 2881: {
  9471                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9472  000FE2  5134               	movf	52,w,b	;volatile
  9473  000FE4  0B0F               	andlw	15
  9474  000FE6  0100               	movlb	0	; () banked
  9475  000FE8  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9476  000FEA  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9477  000FEC  0D01               	mullw	1
  9478  000FEE  0E38               	movlw	low _ep_data_out
  9479  000FF0  24F3               	addwf	prodl,w,c
  9480  000FF2  6ED9               	movwf	fsr2l,c
  9481  000FF4  0E01               	movlw	high _ep_data_out
  9482  000FF6  D00B               	goto	L8
  9483  000FF8                     l1573:
  9484                           
  9485                           ;usb_device.c: 2884: else
  9486                           ;usb_device.c: 2885: {
  9487                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9488                           
  9489                           ; BSR set to: 1
  9490  000FF8  0104               	movlb	4	; () banked
  9491  000FFA  5134               	movf	52,w,b	;volatile
  9492  000FFC  0B0F               	andlw	15
  9493  000FFE  0100               	movlb	0	; () banked
  9494  001000  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9495  001002  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9496  001004  0D01               	mullw	1
  9497  001006  0E3B               	movlw	low _ep_data_in
  9498  001008  24F3               	addwf	prodl,w,c
  9499  00100A  6ED9               	movwf	fsr2l,c
  9500  00100C  0E01               	movlw	high _ep_data_in
  9501  00100E                     L8:
  9502  00100E  20F4               	addwfc	prodh,w,c
  9503  001010  6EDA               	movwf	fsr2h,c
  9504  001012  0101               	movlb	1	; () banked
  9505  001014  82DF               	bsf	indf2,1,c
  9506  001016                     l1574:
  9507                           
  9508                           ;usb_device.c: 2887: }
  9509                           ;usb_device.c: 2888: }
  9510                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
  9511                           
  9512                           ; BSR set to: 1
  9513                           
  9514                           ; BSR set to: 1
  9515  001016  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9516  00101A  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9517  00101E  0E00               	movlw	0
  9518  001020  84DB               	bsf	plusw2,2,c
  9519                           
  9520                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
  9521  001022  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9522  001026  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9523  00102A  0E00               	movlw	0
  9524  00102C  8EDB               	bsf	plusw2,7,c
  9525                           
  9526                           ;usb_device.c: 2893: }
  9527  00102E  0012               	return	
  9528  001030                     l1571:
  9529                           
  9530                           ;usb_device.c: 2894: else
  9531                           ;usb_device.c: 2895: {
  9532                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9533  001030  0E04               	movlw	4
  9534  001032  0100               	movlb	0	; () banked
  9535  001034  1B78               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
  9539  001036  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9540  00103A  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9541  00103E  AEDF               	btfss	indf2,7,c
  9542  001040  D01B               	goto	l1576
  9543                           
  9544                           ; BSR set to: 0
  9545                           ;usb_device.c: 2902: {
  9546                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
  9547  001042  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9548  001046  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9549  00104A  0E7F               	movlw	127
  9550  00104C  16DF               	andwf	indf2,f,c
  9551                           
  9552                           ; BSR set to: 0
  9553                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
  9554  00104E  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9555  001052  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9556  001056  0E00               	movlw	0
  9557  001058  8CDB               	bsf	plusw2,6,c
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9561  00105A  0E00               	movlw	0
  9562  00105C  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9563  00105E  0E05               	movlw	5
  9564  001060  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9565  001062  C078  F06E         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9566  001066  C079  F06F         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9567  00106A  0E00               	movlw	0
  9568  00106C  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9569  00106E  0E02               	movlw	2
  9570  001070  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9571  001072  EC46  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9572                           
  9573                           ;usb_device.c: 2908: }
  9574  001076  D006               	goto	l1577
  9575  001078                     l1576:
  9576                           
  9577                           ;usb_device.c: 2909: else
  9578                           ;usb_device.c: 2910: {
  9579                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
  9580  001078  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9581  00107C  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9582  001080  0E00               	movlw	0
  9583  001082  8CDB               	bsf	plusw2,6,c
  9584  001084                     l1577:
  9585                           
  9586                           ;usb_device.c: 2913: }
  9587                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9588  001084  0E04               	movlw	4
  9589  001086  0100               	movlb	0	; () banked
  9590  001088  1B78               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9591                           
  9592                           ; BSR set to: 0
  9593                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  9594  00108A  B377               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
  9595  00108C  D006               	goto	u4810
  9596                           
  9597                           ; BSR set to: 0
  9598  00108E  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9599  001092  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9600  001096  AEDF               	btfss	indf2,7,c
  9601  001098  D033               	goto	l1578
  9602  00109A                     u4810:
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;usb_device.c: 2924: {
  9606                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
  9607  00109A  0104               	movlb	4	; () banked
  9608  00109C  BF34               	btfsc	52,7,b	;volatile
  9609  00109E  D00B               	goto	l1581
  9610                           
  9611                           ; BSR set to: 4
  9612                           ;usb_device.c: 2926: {
  9613                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9614  0010A0  5134               	movf	52,w,b	;volatile
  9615  0010A2  0B0F               	andlw	15
  9616  0010A4  0100               	movlb	0	; () banked
  9617  0010A6  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9618  0010A8  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9619  0010AA  0D01               	mullw	1
  9620  0010AC  0E38               	movlw	low _ep_data_out
  9621  0010AE  24F3               	addwf	prodl,w,c
  9622  0010B0  6ED9               	movwf	fsr2l,c
  9623  0010B2  0E01               	movlw	high _ep_data_out
  9624  0010B4  D00B               	goto	L9
  9625  0010B6                     l1581:
  9626                           
  9627                           ;usb_device.c: 2929: else
  9628                           ;usb_device.c: 2930: {
  9629                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9630                           
  9631                           ; BSR set to: 1
  9632  0010B6  0104               	movlb	4	; () banked
  9633  0010B8  5134               	movf	52,w,b	;volatile
  9634  0010BA  0B0F               	andlw	15
  9635  0010BC  0100               	movlb	0	; () banked
  9636  0010BE  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9637  0010C0  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9638  0010C2  0D01               	mullw	1
  9639  0010C4  0E3B               	movlw	low _ep_data_in
  9640  0010C6  24F3               	addwf	prodl,w,c
  9641  0010C8  6ED9               	movwf	fsr2l,c
  9642  0010CA  0E01               	movlw	high _ep_data_in
  9643  0010CC                     L9:
  9644  0010CC  20F4               	addwfc	prodh,w,c
  9645  0010CE  6EDA               	movwf	fsr2h,c
  9646  0010D0  0101               	movlb	1	; () banked
  9647  0010D2  92DF               	bcf	indf2,1,c
  9648                           
  9649                           ; BSR set to: 1
  9650                           ;usb_device.c: 2932: }
  9651                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9652                           
  9653                           ; BSR set to: 1
  9654  0010D4  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9655  0010D8  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9656  0010DC  0E3B               	movlw	59
  9657  0010DE  16DF               	andwf	indf2,f,c
  9658                           
  9659                           ; BSR set to: 1
  9660                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9661  0010E0  0E00               	movlw	0
  9662  0010E2  0100               	movlb	0	; () banked
  9663  0010E4  6F6D               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9664  0010E6  0E05               	movlw	5
  9665  0010E8  6F6C               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9666  0010EA  C078  F06E         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9667  0010EE  C079  F06F         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9668  0010F2  0E00               	movlw	0
  9669  0010F4  6F71               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9670  0010F6  0E02               	movlw	2
  9671  0010F8  6F70               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9672  0010FA  EC46  F020         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9673                           
  9674                           ;usb_device.c: 2938: }
  9675  0010FE  D006               	goto	l1583
  9676  001100                     l1578:
  9677                           
  9678                           ;usb_device.c: 2939: else
  9679                           ;usb_device.c: 2940: {
  9680                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9681  001100  C078  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9682  001104  C079  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9683  001108  0E3B               	movlw	59
  9684  00110A  16DF               	andwf	indf2,f,c
  9685  00110C                     l1583:
  9686                           
  9687                           ;usb_device.c: 2943: }
  9688                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  9689  00110C  0104               	movlb	4	; () banked
  9690  00110E  5134               	movf	52,w,b	;volatile
  9691  001110  0B0F               	andlw	15
  9692  001112  0100               	movlb	0	; () banked
  9693  001114  6F74               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9694  001116  5174               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9695  001118  0D01               	mullw	1
  9696  00111A  0E26               	movlw	38
  9697  00111C  24F3               	addwf	prodl,w,c
  9698  00111E  6F75               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
  9699  001120  0E0F               	movlw	15
  9700  001122  20F4               	addwfc	prodh,w,c
  9701  001124  6F76               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
  9705  001126  C075  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  9706  00112A  C076  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  9707  00112E  0EFE               	movlw	254
  9708  001130  16DF               	andwf	indf2,f,c
  9709                           
  9710                           ; BSR set to: 0
  9711  001132  0012               	return	
  9712  001134                     __end_of_USBStdFeatureReqHandler:
  9713                           	opt stack 0
  9714                           tosu	equ	0xFFF
  9715                           tosh	equ	0xFFE
  9716                           tosl	equ	0xFFD
  9717                           pclath	equ	0xFFA
  9718                           tblptru	equ	0xFF8
  9719                           tblptrh	equ	0xFF7
  9720                           tblptrl	equ	0xFF6
  9721                           tablat	equ	0xFF5
  9722                           prodh	equ	0xFF4
  9723                           prodl	equ	0xFF3
  9724                           intcon	equ	0xFF2
  9725                           intcon2	equ	0xFF1
  9726                           intcon3	equ	0xFF0
  9727                           indf0	equ	0xFEF
  9728                           postinc0	equ	0xFEE
  9729                           plusw0	equ	0xFEB
  9730                           fsr0h	equ	0xFEA
  9731                           fsr0l	equ	0xFE9
  9732                           wreg	equ	0xFE8
  9733                           postinc1	equ	0xFE6
  9734                           postdec1	equ	0xFE5
  9735                           fsr1h	equ	0xFE2
  9736                           fsr1l	equ	0xFE1
  9737                           indf2	equ	0xFDF
  9738                           postinc2	equ	0xFDE
  9739                           postdec2	equ	0xFDD
  9740                           plusw2	equ	0xFDB
  9741                           fsr2h	equ	0xFDA
  9742                           fsr2l	equ	0xFD9
  9743                           status	equ	0xFD8
  9744                           
  9745 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  9746 ;; Defined at:
  9747 ;;		line 104 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  9748 ;; Parameters:    Size  Location     Type
  9749 ;;  event           2   12[BANK0 ] enum E8257
  9750 ;;  pdata           2   14[BANK0 ] PTR void 
  9751 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
  9752 ;;  size            2   16[BANK0 ] unsigned int 
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;		None
  9755 ;; Return value:  Size  Location     Type
  9756 ;;                  1    wreg      unsigned char 
  9757 ;; Registers used:
  9758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9759 ;; Tracked objects:
  9760 ;;		On entry : 0/0
  9761 ;;		On exit  : 0/0
  9762 ;;		Unchanged: 0/0
  9763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9764 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9766 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9767 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9768 ;;Total ram usage:        8 bytes
  9769 ;; Hardware stack levels used:    1
  9770 ;; Hardware stack levels required when called:   14
  9771 ;; This function calls:
  9772 ;;		_CDCInitEP
  9773 ;;		_USBCheckCDCRequest
  9774 ;; This function is called by:
  9775 ;;		_USBDeviceTasks
  9776 ;;		_USBStdSetCfgHandler
  9777 ;;		_USBSuspend
  9778 ;;		_USBWakeFromSuspend
  9779 ;;		_USBCtrlTrfSetupHandler
  9780 ;;		_USBCheckStdRequest
  9781 ;;		_USBStdFeatureReqHandler
  9782 ;; This function uses a non-reentrant model
  9783 ;;
  9784                           
  9785                           	psect	text41
  9786  00408C                     __ptext41:
  9787                           	opt stack 0
  9788  00408C                     _USER_USB_CALLBACK_EVENT_HANDLER:
  9789                           	opt stack 12
  9790                           
  9791                           ;usb_device_mgr.c: 106: switch( (int) event )
  9792                           
  9793                           ;incstack = 0
  9794  00408C  D006               	goto	l1737
  9795  00408E                     
  9796                           ;usb_device_mgr.c: 134: CDCInitEP();
  9797  00408E  EC0E  F01F         	call	_CDCInitEP	;wreg free
  9798                           
  9799                           ;usb_device_mgr.c: 142: break;
  9800                           
  9801                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
  9802                           
  9803                           ;usb_device_mgr.c: 139: break;
  9804  004092  0012               	return	
  9805  004094                     
  9806                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
  9807  004094  EC88  F018         	call	_USBCheckCDCRequest	;wreg free
  9808                           
  9809                           ;usb_device_mgr.c: 163: }
  9810                           
  9811                           ;usb_device_mgr.c: 162: break;
  9812                           
  9813                           ;usb_device_mgr.c: 161: default:
  9814                           
  9815                           ;usb_device_mgr.c: 159: break;
  9816                           
  9817                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
  9818                           
  9819                           ;usb_device_mgr.c: 156: break;
  9820                           
  9821                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
  9822                           
  9823                           ;usb_device_mgr.c: 153: break;
  9824  004098  0012               	return	
  9825  00409A                     l1737:
  9826  00409A  C06C  F072         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  9827  00409E  C06D  F073         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  9828                           
  9829                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9830                           ; Switch size 1, requested type "space"
  9831                           ; Number of cases is 2, Range of values is 0 to 127
  9832                           ; switch strategies available:
  9833                           ; Name         Instructions Cycles
  9834                           ; simple_byte            7     4 (average)
  9835                           ;	Chosen strategy is simple_byte
  9836  0040A2  0100               	movlb	0	; () banked
  9837  0040A4  5173               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
  9838  0040A6  0A00               	xorlw	0	; case 0
  9839  0040A8  B4D8               	btfsc	status,2,c
  9840  0040AA  D004               	goto	l9706
  9841  0040AC  0A7F               	xorlw	127	; case 127
  9842  0040AE  A4D8               	btfss	status,2,c
  9843  0040B0  0012               	return	
  9844  0040B2  D018               	goto	l9708
  9845  0040B4                     l9706:
  9846                           
  9847                           ; BSR set to: 0
  9848                           ; Switch size 1, requested type "space"
  9849                           ; Number of cases is 8, Range of values is 1 to 117
  9850                           ; switch strategies available:
  9851                           ; Name         Instructions Cycles
  9852                           ; simple_byte           25    13 (average)
  9853                           ;	Chosen strategy is simple_byte
  9854  0040B4  5172               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9855  0040B6  0A01               	xorlw	1	; case 1
  9856  0040B8  B4D8               	btfsc	status,2,c
  9857  0040BA  D7E9               	goto	l1743
  9858  0040BC  0A03               	xorlw	3	; case 2
  9859  0040BE  B4D8               	btfsc	status,2,c
  9860  0040C0  0012               	return	
  9861  0040C2  0A01               	xorlw	1	; case 3
  9862  0040C4  B4D8               	btfsc	status,2,c
  9863  0040C6  D7E6               	goto	l1745
  9864  0040C8  0A06               	xorlw	6	; case 5
  9865  0040CA  B4D8               	btfsc	status,2,c
  9866  0040CC  0012               	return	
  9867  0040CE  0A77               	xorlw	119	; case 114
  9868  0040D0  B4D8               	btfsc	status,2,c
  9869  0040D2  0012               	return	
  9870  0040D4  0A01               	xorlw	1	; case 115
  9871  0040D6  B4D8               	btfsc	status,2,c
  9872  0040D8  0012               	return	
  9873  0040DA  0A07               	xorlw	7	; case 116
  9874  0040DC  B4D8               	btfsc	status,2,c
  9875  0040DE  0012               	return	
  9876  0040E0  0A01               	xorlw	1	; case 117
  9877  0040E2  0012               	return	
  9878  0040E4                     l9708:
  9879                           
  9880                           ; BSR set to: 0
  9881                           ; Switch size 1, requested type "space"
  9882                           ; Number of cases is 1, Range of values is 255 to 255
  9883                           ; switch strategies available:
  9884                           ; Name         Instructions Cycles
  9885                           ; simple_byte            4     3 (average)
  9886                           ;	Chosen strategy is simple_byte
  9887  0040E4  5172               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9888  0040E6  0AFF               	xorlw	255	; case 255
  9889  0040E8  0012               	return	
  9890  0040EA                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  9891                           	opt stack 0
  9892                           tosu	equ	0xFFF
  9893                           tosh	equ	0xFFE
  9894                           tosl	equ	0xFFD
  9895                           pclath	equ	0xFFA
  9896                           tblptru	equ	0xFF8
  9897                           tblptrh	equ	0xFF7
  9898                           tblptrl	equ	0xFF6
  9899                           tablat	equ	0xFF5
  9900                           prodh	equ	0xFF4
  9901                           prodl	equ	0xFF3
  9902                           intcon	equ	0xFF2
  9903                           intcon2	equ	0xFF1
  9904                           intcon3	equ	0xFF0
  9905                           indf0	equ	0xFEF
  9906                           postinc0	equ	0xFEE
  9907                           plusw0	equ	0xFEB
  9908                           fsr0h	equ	0xFEA
  9909                           fsr0l	equ	0xFE9
  9910                           wreg	equ	0xFE8
  9911                           postinc1	equ	0xFE6
  9912                           postdec1	equ	0xFE5
  9913                           fsr1h	equ	0xFE2
  9914                           fsr1l	equ	0xFE1
  9915                           indf2	equ	0xFDF
  9916                           postinc2	equ	0xFDE
  9917                           postdec2	equ	0xFDD
  9918                           plusw2	equ	0xFDB
  9919                           fsr2h	equ	0xFDA
  9920                           fsr2l	equ	0xFD9
  9921                           status	equ	0xFD8
  9922                           
  9923 ;; *************** function _USBCheckCDCRequest *****************
  9924 ;; Defined at:
  9925 ;;		line 150 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;		None
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;		None
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  1    wreg      void 
  9932 ;; Registers used:
  9933 ;;		wreg, status,2, status,0
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/0
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9943 ;;Total ram usage:        0 bytes
  9944 ;; Hardware stack levels used:    1
  9945 ;; Hardware stack levels required when called:   11
  9946 ;; This function calls:
  9947 ;;		Nothing
  9948 ;; This function is called by:
  9949 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9950 ;; This function uses a non-reentrant model
  9951 ;;
  9952                           
  9953                           	psect	text42
  9954  003110                     __ptext42:
  9955                           	opt stack 0
  9956  003110                     _USBCheckCDCRequest:
  9957                           	opt stack 14
  9958                           
  9959                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
  9960                           
  9961                           ;incstack = 0
  9962  003110  0104               	movlb	4	; () banked
  9963  003112  5130               	movf	48,w,b	;volatile
  9964  003114  0B1F               	andlw	31
  9965  003116  06E8               	decf	wreg,f,c
  9966  003118  A4D8               	btfss	status,2,c
  9967  00311A  0012               	return	
  9968                           
  9969                           ; BSR set to: 4
  9970                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
  9971                           
  9972                           ; BSR set to: 4
  9973                           
  9974                           ; BSR set to: 4
  9975  00311C  3930               	swapf	48,w,b	;volatile
  9976  00311E  32E8               	rrcf	wreg,f,c
  9977  003120  0B03               	andlw	3
  9978  003122  06E8               	decf	wreg,f,c
  9979  003124  A4D8               	btfss	status,2,c
  9980  003126  0012               	return	
  9981                           
  9982                           ; BSR set to: 4
  9983                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
  9984                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
  9985                           
  9986                           ; BSR set to: 4
  9987                           
  9988                           ; BSR set to: 4
  9989  003128  5134               	movf	52,w,b	;volatile
  9990  00312A  B4D8               	btfsc	status,2,c
  9991  00312C  D037               	goto	l1639
  9992                           
  9993                           ; BSR set to: 4
  9994  00312E  0534               	decf	52,w,b	;volatile
  9995  003130  A4D8               	btfss	status,2,c
  9996  003132  0012               	return	
  9997  003134  D033               	goto	l1639
  9998  003136                     
  9999                           ; BSR set to: 4
 10000                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 10001                           
 10002                           ; BSR set to: 4
 10003  003136  0E97               	movlw	low _dummy_encapsulated_cmd_response
 10004  003138  0100               	movlb	0	; () banked
 10005  00313A  6FF0               	movwf	_inPipes& (0+255),b
 10006  00313C  0E01               	movlw	high _dummy_encapsulated_cmd_response
 10007  00313E  6FF1               	movwf	(_inPipes+1)& (0+255),b
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 10011  003140  0E00               	movlw	0
 10012  003142  6FF5               	movwf	(_inPipes+5)& (0+255),b
 10013  003144  0E08               	movlw	8
 10014  003146  6FF4               	movwf	(_inPipes+4)& (0+255),b
 10015                           
 10016                           ; BSR set to: 0
 10017                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10018  003148  81F3               	bsf	(_inPipes+3)& (0+255),0,b
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 10022  00314A  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
 10023                           
 10024                           ;usb_device_cdc.c: 178: break;
 10025  00314C  0012               	return	
 10026  00314E                     
 10027                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 10028                           
 10029                           ; BSR set to: 0
 10030  00314E  0E97               	movlw	low _dummy_encapsulated_cmd_response
 10031  003150  0100               	movlb	0	; () banked
 10032  003152  6FF0               	movwf	_inPipes& (0+255),b
 10033  003154  0E01               	movlw	high _dummy_encapsulated_cmd_response
 10034  003156  6FF1               	movwf	(_inPipes+1)& (0+255),b
 10035                           
 10036                           ; BSR set to: 0
 10037                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 10038  003158  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
 10039                           
 10040                           ;usb_device_cdc.c: 183: break;
 10041  00315A  0012               	return	
 10042  00315C                     l1643:
 10043                           
 10044                           ; BSR set to: 4
 10045                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 10046  00315C  C436 F116          	movff	1078,_outPipes+4	;volatile
 10047  003160  C437 F117          	movff	1079,_outPipes+5	;volatile
 10048                           
 10049                           ; BSR set to: 4
 10050                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 10051  003164  0E9F               	movlw	low _line_coding
 10052  003166  0101               	movlb	1	; () banked
 10053  003168  6F12               	movwf	_outPipes& (0+255),b
 10054  00316A  0E01               	movlw	high _line_coding
 10055  00316C  6F13               	movwf	(_outPipes+1)& (0+255),b
 10056                           
 10057                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 10058  00316E  0E00               	movlw	0
 10059  003170  6F18               	movwf	(_outPipes+6)& (0+255),b
 10060  003172  0E00               	movlw	0
 10061  003174  6F19               	movwf	(_outPipes+7)& (0+255),b
 10062                           
 10063                           ; BSR set to: 1
 10064                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 10065  003176  8F15               	bsf	(_outPipes+3)& (0+255),7,b
 10066                           
 10067                           ;usb_device_cdc.c: 192: break;
 10068  003178  0012               	return	
 10069  00317A                     
 10070                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 10071                           
 10072                           ; BSR set to: 1
 10073  00317A  0E9F               	movlw	low _line_coding
 10074  00317C  0100               	movlb	0	; () banked
 10075  00317E  6FF0               	movwf	_inPipes& (0+255),b
 10076  003180  0E01               	movlw	high _line_coding
 10077  003182  6FF1               	movwf	(_inPipes+1)& (0+255),b
 10078                           
 10079                           ; BSR set to: 0
 10080  003184  0E00               	movlw	0
 10081  003186  6FF5               	movwf	(_inPipes+5)& (0+255),b
 10082  003188  0E07               	movlw	7
 10083  00318A  6FF4               	movwf	(_inPipes+4)& (0+255),b
 10084                           
 10085                           ; BSR set to: 0
 10086  00318C  0EC1               	movlw	193
 10087  00318E  6FF3               	movwf	(_inPipes+3)& (0+255),b
 10088                           
 10089                           ;usb_device_cdc.c: 199: break;
 10090  003190  0012               	return	
 10091  003192                     l1645:
 10092                           
 10093                           ; BSR set to: 4
 10094                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 10095  003192  C432 F15B          	movff	1074,_control_signal_bitmap	;volatile
 10096                           
 10097                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 10098  003196  0100               	movlb	0	; () banked
 10099  003198  8FF3               	bsf	(_inPipes+3)& (0+255),7,b
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;usb_device_cdc.c: 261: }
 10103                           
 10104                           ; BSR set to: 0
 10105                           ;usb_device_cdc.c: 260: break;
 10106                           
 10107                           ;usb_device_cdc.c: 259: default:
 10108                           
 10109                           ;usb_device_cdc.c: 235: break;
 10110  00319A  0012               	return	
 10111  00319C                     l1639:
 10112                           
 10113                           ; BSR set to: 0
 10114  00319C  0104               	movlb	4	; () banked
 10115  00319E  5131               	movf	49,w,b	;volatile
 10116                           
 10117                           ; Switch size 1, requested type "space"
 10118                           ; Number of cases is 5, Range of values is 0 to 34
 10119                           ; switch strategies available:
 10120                           ; Name         Instructions Cycles
 10121                           ; simple_byte           16     9 (average)
 10122                           ;	Chosen strategy is simple_byte
 10123  0031A0  0A00               	xorlw	0	; case 0
 10124  0031A2  B4D8               	btfsc	status,2,c
 10125  0031A4  D7C8               	goto	l1640
 10126  0031A6  0A01               	xorlw	1	; case 1
 10127  0031A8  B4D8               	btfsc	status,2,c
 10128  0031AA  D7D1               	goto	l1642
 10129  0031AC  0A21               	xorlw	33	; case 32
 10130  0031AE  B4D8               	btfsc	status,2,c
 10131  0031B0  D7D5               	goto	l1643
 10132  0031B2  0A01               	xorlw	1	; case 33
 10133  0031B4  B4D8               	btfsc	status,2,c
 10134  0031B6  D7E1               	goto	l1644
 10135  0031B8  0A03               	xorlw	3	; case 34
 10136  0031BA  A4D8               	btfss	status,2,c
 10137  0031BC  0012               	return	
 10138  0031BE  D7E9               	goto	l1645
 10139  0031C0                     __end_of_USBCheckCDCRequest:
 10140                           	opt stack 0
 10141                           tosu	equ	0xFFF
 10142                           tosh	equ	0xFFE
 10143                           tosl	equ	0xFFD
 10144                           pclath	equ	0xFFA
 10145                           tblptru	equ	0xFF8
 10146                           tblptrh	equ	0xFF7
 10147                           tblptrl	equ	0xFF6
 10148                           tablat	equ	0xFF5
 10149                           prodh	equ	0xFF4
 10150                           prodl	equ	0xFF3
 10151                           intcon	equ	0xFF2
 10152                           intcon2	equ	0xFF1
 10153                           intcon3	equ	0xFF0
 10154                           indf0	equ	0xFEF
 10155                           postinc0	equ	0xFEE
 10156                           plusw0	equ	0xFEB
 10157                           fsr0h	equ	0xFEA
 10158                           fsr0l	equ	0xFE9
 10159                           wreg	equ	0xFE8
 10160                           postinc1	equ	0xFE6
 10161                           postdec1	equ	0xFE5
 10162                           fsr1h	equ	0xFE2
 10163                           fsr1l	equ	0xFE1
 10164                           indf2	equ	0xFDF
 10165                           postinc2	equ	0xFDE
 10166                           postdec2	equ	0xFDD
 10167                           plusw2	equ	0xFDB
 10168                           fsr2h	equ	0xFDA
 10169                           fsr2l	equ	0xFD9
 10170                           status	equ	0xFD8
 10171                           
 10172 ;; *************** function _CDCInitEP *****************
 10173 ;; Defined at:
 10174 ;;		line 297 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;		None
 10177 ;; Auto vars:     Size  Location     Type
 10178 ;;		None
 10179 ;; Return value:  Size  Location     Type
 10180 ;;                  1    wreg      void 
 10181 ;; Registers used:
 10182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10183 ;; Tracked objects:
 10184 ;;		On entry : 0/0
 10185 ;;		On exit  : 0/0
 10186 ;;		Unchanged: 0/0
 10187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10192 ;;Total ram usage:        0 bytes
 10193 ;; Hardware stack levels used:    1
 10194 ;; Hardware stack levels required when called:   13
 10195 ;; This function calls:
 10196 ;;		_USBEnableEndpoint
 10197 ;;		_USBTransferOnePacket
 10198 ;; This function is called by:
 10199 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text43
 10204  003E1C                     __ptext43:
 10205                           	opt stack 0
 10206  003E1C                     _CDCInitEP:
 10207                           	opt stack 12
 10208                           
 10209                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 10210                           
 10211                           ;incstack = 0
 10212  003E1C  0E80               	movlw	128
 10213  003E1E  0101               	movlb	1	; () banked
 10214  003E20  6F9F               	movwf	_line_coding& (0+255),b
 10215  003E22  0E25               	movlw	37
 10216  003E24  6FA0               	movwf	(_line_coding+1)& (0+255),b
 10217  003E26  0E00               	movlw	0
 10218  003E28  6FA1               	movwf	(_line_coding+2)& (0+255),b
 10219  003E2A  0E00               	movlw	0
 10220  003E2C  6FA2               	movwf	(_line_coding+3)& (0+255),b
 10221                           
 10222                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 10223  003E2E  0E00               	movlw	0
 10224  003E30  6FA3               	movwf	(_line_coding+4)& (0+255),b
 10225                           
 10226                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 10227  003E32  0E00               	movlw	0
 10228  003E34  6FA4               	movwf	(_line_coding+5)& (0+255),b
 10229                           
 10230                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 10231  003E36  0E08               	movlw	8
 10232  003E38  6FA5               	movwf	(_line_coding+6)& (0+255),b
 10233                           
 10234                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 10235  003E3A  0E00               	movlw	0
 10236  003E3C  6E47               	movwf	_cdc_rx_len,c
 10237                           
 10238                           ; BSR set to: 1
 10239                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 10240  003E3E  0E1A               	movlw	26
 10241  003E40  0100               	movlb	0	; () banked
 10242  003E42  6F68               	movwf	USBEnableEndpoint@options& (0+255),b
 10243  003E44  0E01               	movlw	1
 10244  003E46  EC1B  F023         	call	_USBEnableEndpoint
 10245                           
 10246                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 10247  003E4A  0E1E               	movlw	30
 10248  003E4C  0100               	movlb	0	; () banked
 10249  003E4E  6F68               	movwf	USBEnableEndpoint@options& (0+255),b
 10250  003E50  0E02               	movlw	2
 10251  003E52  EC1B  F023         	call	_USBEnableEndpoint
 10252                           
 10253                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 10254  003E56  0E00               	movlw	0
 10255  003E58  0100               	movlb	0	; () banked
 10256  003E5A  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 10257  003E5C  0E00               	movlw	low _cdc_data_rx
 10258  003E5E  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 10259  003E60  0E02               	movlw	high _cdc_data_rx
 10260  003E62  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10261  003E64  0E40               	movlw	64
 10262  003E66  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 10263  003E68  0E02               	movlw	2
 10264  003E6A  ECD0  F017         	call	_USBTransferOnePacket
 10265  003E6E  C060  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 10266  003E72  C061  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 10267                           
 10268                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 10269  003E76  0E00               	movlw	0
 10270  003E78  0101               	movlb	1	; () banked
 10271  003E7A  6F40               	movwf	_CDCDataInHandle& (0+255),b
 10272  003E7C  0E00               	movlw	0
 10273  003E7E  6F41               	movwf	(_CDCDataInHandle+1)& (0+255),b
 10274                           
 10275                           ; BSR set to: 1
 10276                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 10277  003E80  0E00               	movlw	0
 10278  003E82  0100               	movlb	0	; () banked
 10279  003E84  6FFB               	movwf	_cdc_trf_state& (0+255),b
 10280                           
 10281                           ; BSR set to: 0
 10282  003E86  0012               	return		;funcret
 10283  003E88                     __end_of_CDCInitEP:
 10284                           	opt stack 0
 10285                           tosu	equ	0xFFF
 10286                           tosh	equ	0xFFE
 10287                           tosl	equ	0xFFD
 10288                           pclath	equ	0xFFA
 10289                           tblptru	equ	0xFF8
 10290                           tblptrh	equ	0xFF7
 10291                           tblptrl	equ	0xFF6
 10292                           tablat	equ	0xFF5
 10293                           prodh	equ	0xFF4
 10294                           prodl	equ	0xFF3
 10295                           intcon	equ	0xFF2
 10296                           intcon2	equ	0xFF1
 10297                           intcon3	equ	0xFF0
 10298                           indf0	equ	0xFEF
 10299                           postinc0	equ	0xFEE
 10300                           plusw0	equ	0xFEB
 10301                           fsr0h	equ	0xFEA
 10302                           fsr0l	equ	0xFE9
 10303                           wreg	equ	0xFE8
 10304                           postinc1	equ	0xFE6
 10305                           postdec1	equ	0xFE5
 10306                           fsr1h	equ	0xFE2
 10307                           fsr1l	equ	0xFE1
 10308                           indf2	equ	0xFDF
 10309                           postinc2	equ	0xFDE
 10310                           postdec2	equ	0xFDD
 10311                           plusw2	equ	0xFDB
 10312                           fsr2h	equ	0xFDA
 10313                           fsr2l	equ	0xFD9
 10314                           status	equ	0xFD8
 10315                           
 10316 ;; *************** function _USBEnableEndpoint *****************
 10317 ;; Defined at:
 10318 ;;		line 896 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;  ep              1    wreg     unsigned char 
 10321 ;;  options         1    8[BANK0 ] unsigned char 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;  ep              1   11[BANK0 ] unsigned char 
 10324 ;;  p               2    9[BANK0 ] PTR unsigned char 
 10325 ;;		 -> UEP0(1), 
 10326 ;; Return value:  Size  Location     Type
 10327 ;;                  1    wreg      void 
 10328 ;; Registers used:
 10329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10330 ;; Tracked objects:
 10331 ;;		On entry : 0/0
 10332 ;;		On exit  : 0/0
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10335 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10336 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10338 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10339 ;;Total ram usage:        4 bytes
 10340 ;; Hardware stack levels used:    1
 10341 ;; Hardware stack levels required when called:   12
 10342 ;; This function calls:
 10343 ;;		_USBConfigureEndpoint
 10344 ;; This function is called by:
 10345 ;;		_CDCInitEP
 10346 ;; This function uses a non-reentrant model
 10347 ;;
 10348                           
 10349                           	psect	text44
 10350  004636                     __ptext44:
 10351                           	opt stack 0
 10352  004636                     _USBEnableEndpoint:
 10353                           	opt stack 12
 10354                           
 10355                           ; BSR set to: 0
 10356                           ;incstack = 0
 10357                           ;USBEnableEndpoint@ep stored from wreg
 10358  004636  0100               	movlb	0	; () banked
 10359  004638  6F6B               	movwf	USBEnableEndpoint@ep& (0+255),b
 10360                           
 10361                           ;usb_device.c: 898: unsigned char* p;
 10362                           ;usb_device.c: 902: if(options & 0x04)
 10363  00463A  0100               	movlb	0	; () banked
 10364  00463C  A568               	btfss	USBEnableEndpoint@options& (0+255),2,b
 10365  00463E  D005               	goto	l1380
 10366                           
 10367                           ; BSR set to: 0
 10368                           ;usb_device.c: 903: {
 10369                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 10370  004640  0E00               	movlw	0
 10371  004642  6F60               	movwf	USBConfigureEndpoint@direction& (0+255),b
 10372  004644  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10373  004646  ECD1  F01A         	call	_USBConfigureEndpoint
 10374  00464A                     l1380:
 10375                           
 10376                           ;usb_device.c: 905: }
 10377                           ;usb_device.c: 906: if(options & 0x02)
 10378  00464A  0100               	movlb	0	; () banked
 10379  00464C  A368               	btfss	USBEnableEndpoint@options& (0+255),1,b
 10380  00464E  D005               	goto	l1381
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;usb_device.c: 907: {
 10384                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 10385  004650  0E01               	movlw	1
 10386  004652  6F60               	movwf	USBConfigureEndpoint@direction& (0+255),b
 10387  004654  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10388  004656  ECD1  F01A         	call	_USBConfigureEndpoint
 10389  00465A                     l1381:
 10390                           
 10391                           ;usb_device.c: 909: }
 10392                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 10393  00465A  0100               	movlb	0	; () banked
 10394  00465C  516B               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10395  00465E  0D01               	mullw	1
 10396  004660  0E26               	movlw	38
 10397  004662  24F3               	addwf	prodl,w,c
 10398  004664  6F69               	movwf	USBEnableEndpoint@p& (0+255),b
 10399  004666  0E0F               	movlw	15
 10400  004668  20F4               	addwfc	prodh,w,c
 10401  00466A  6F6A               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 10402                           
 10403                           ; BSR set to: 0
 10404                           ;usb_device.c: 919: *p = options;
 10405  00466C  C069  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 10406  004670  C06A  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 10407  004674  C068  FFDF         	movff	USBEnableEndpoint@options,indf2
 10408                           
 10409                           ; BSR set to: 0
 10410  004678  0012               	return		;funcret
 10411  00467A                     __end_of_USBEnableEndpoint:
 10412                           	opt stack 0
 10413                           tosu	equ	0xFFF
 10414                           tosh	equ	0xFFE
 10415                           tosl	equ	0xFFD
 10416                           pclath	equ	0xFFA
 10417                           tblptru	equ	0xFF8
 10418                           tblptrh	equ	0xFF7
 10419                           tblptrl	equ	0xFF6
 10420                           tablat	equ	0xFF5
 10421                           prodh	equ	0xFF4
 10422                           prodl	equ	0xFF3
 10423                           intcon	equ	0xFF2
 10424                           intcon2	equ	0xFF1
 10425                           intcon3	equ	0xFF0
 10426                           indf0	equ	0xFEF
 10427                           postinc0	equ	0xFEE
 10428                           plusw0	equ	0xFEB
 10429                           fsr0h	equ	0xFEA
 10430                           fsr0l	equ	0xFE9
 10431                           wreg	equ	0xFE8
 10432                           postinc1	equ	0xFE6
 10433                           postdec1	equ	0xFE5
 10434                           fsr1h	equ	0xFE2
 10435                           fsr1l	equ	0xFE1
 10436                           indf2	equ	0xFDF
 10437                           postinc2	equ	0xFDE
 10438                           postdec2	equ	0xFDD
 10439                           plusw2	equ	0xFDB
 10440                           fsr2h	equ	0xFDA
 10441                           fsr2l	equ	0xFD9
 10442                           status	equ	0xFD8
 10443                           
 10444 ;; *************** function _USBConfigureEndpoint *****************
 10445 ;; Defined at:
 10446 ;;		line 1561 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10447 ;; Parameters:    Size  Location     Type
 10448 ;;  EPNum           1    wreg     unsigned char 
 10449 ;;  direction       1    0[BANK0 ] unsigned char 
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;  EPNum           1    5[BANK0 ] unsigned char 
 10452 ;;  handle          2    6[BANK0 ] PTR volatile struct __BD
 10453 ;;		 -> BDT(48), 
 10454 ;; Return value:  Size  Location     Type
 10455 ;;                  1    wreg      void 
 10456 ;; Registers used:
 10457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10458 ;; Tracked objects:
 10459 ;;		On entry : 0/0
 10460 ;;		On exit  : 0/0
 10461 ;;		Unchanged: 0/0
 10462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10463 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10464 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10465 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10466 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10467 ;;Total ram usage:        8 bytes
 10468 ;; Hardware stack levels used:    1
 10469 ;; Hardware stack levels required when called:   11
 10470 ;; This function calls:
 10471 ;;		Nothing
 10472 ;; This function is called by:
 10473 ;;		_USBEnableEndpoint
 10474 ;; This function uses a non-reentrant model
 10475 ;;
 10476                           
 10477                           	psect	text45
 10478  0035A2                     __ptext45:
 10479                           	opt stack 0
 10480  0035A2                     _USBConfigureEndpoint:
 10481                           	opt stack 12
 10482                           
 10483                           ; BSR set to: 0
 10484                           ;incstack = 0
 10485                           ;USBConfigureEndpoint@EPNum stored from wreg
 10486  0035A2  0100               	movlb	0	; () banked
 10487  0035A4  6F65               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 10488                           
 10489                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 10490                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 10491  0035A6  0E00               	movlw	0
 10492  0035A8  0100               	movlb	0	; () banked
 10493  0035AA  6F66               	movwf	USBConfigureEndpoint@handle& (0+255),b
 10494  0035AC  0E04               	movlw	4
 10495  0035AE  6F67               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 10496                           
 10497                           ; BSR set to: 0
 10498                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 10499  0035B0  5160               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10500  0035B2  6F61               	movwf	??_USBConfigureEndpoint& (0+255),b
 10501  0035B4  6B62               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 10502  0035B6  90D8               	bcf	status,0,c
 10503  0035B8  3761               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 10504  0035BA  3762               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 10505  0035BC  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10506  0035BE  6F63               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 10507  0035C0  6B64               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 10508  0035C2  90D8               	bcf	status,0,c
 10509  0035C4  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10510  0035C6  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10511  0035C8  90D8               	bcf	status,0,c
 10512  0035CA  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10513  0035CC  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10514  0035CE  5161               	movf	??_USBConfigureEndpoint& (0+255),w,b
 10515  0035D0  2763               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10516  0035D2  5162               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 10517  0035D4  2364               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10518  0035D6  90D8               	bcf	status,0,c
 10519  0035D8  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10520  0035DA  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10521  0035DC  90D8               	bcf	status,0,c
 10522  0035DE  3763               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10523  0035E0  3764               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10524  0035E2  5163               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 10525  0035E4  2766               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 10526  0035E6  5164               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 10527  0035E8  2367               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 10528                           
 10529                           ; BSR set to: 0
 10530                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 10531  0035EA  C066  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10532  0035EE  C067  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10533  0035F2  9EDF               	bcf	indf2,7,c
 10534                           
 10535                           ; BSR set to: 0
 10536                           ;usb_device.c: 1575: if(direction == 0)
 10537  0035F4  5160               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10538  0035F6  A4D8               	btfss	status,2,c
 10539  0035F8  D007               	goto	l1416
 10540                           
 10541                           ; BSR set to: 0
 10542                           ;usb_device.c: 1576: {
 10543                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 10544  0035FA  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10545  0035FC  0D02               	mullw	2
 10546  0035FE  0E20               	movlw	low _pBDTEntryOut
 10547  003600  24F3               	addwf	prodl,w,c
 10548  003602  6ED9               	movwf	fsr2l,c
 10549  003604  0E01               	movlw	high _pBDTEntryOut
 10550  003606  D006               	goto	L10
 10551  003608                     l1416:
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;usb_device.c: 1579: else
 10555                           ;usb_device.c: 1580: {
 10556                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 10557                           
 10558                           ; BSR set to: 0
 10559  003608  5165               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10560  00360A  0D02               	mullw	2
 10561  00360C  0E3E               	movlw	low _pBDTEntryIn
 10562  00360E  24F3               	addwf	prodl,w,c
 10563  003610  6ED9               	movwf	fsr2l,c
 10564  003612  0E00               	movlw	high _pBDTEntryIn
 10565  003614                     L10:
 10566  003614  20F4               	addwfc	prodh,w,c
 10567  003616  6EDA               	movwf	fsr2h,c
 10568  003618  C066  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 10569  00361C  C067  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 10570                           
 10571                           ; BSR set to: 0
 10572                           ;usb_device.c: 1582: }
 10573                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 10574                           
 10575                           ; BSR set to: 0
 10576  003620  C066  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10577  003624  C067  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10578  003628  9CDF               	bcf	indf2,6,c
 10579                           
 10580                           ; BSR set to: 0
 10581                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 10582  00362A  EE20 F004          	lfsr	2,4
 10583  00362E  5166               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 10584  003630  26D9               	addwf	fsr2l,f,c
 10585  003632  5167               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 10586  003634  22DA               	addwfc	fsr2h,f,c
 10587  003636  8CDF               	bsf	indf2,6,c
 10588                           
 10589                           ; BSR set to: 0
 10590  003638  0012               	return		;funcret
 10591  00363A                     __end_of_USBConfigureEndpoint:
 10592                           	opt stack 0
 10593                           tosu	equ	0xFFF
 10594                           tosh	equ	0xFFE
 10595                           tosl	equ	0xFFD
 10596                           pclath	equ	0xFFA
 10597                           tblptru	equ	0xFF8
 10598                           tblptrh	equ	0xFF7
 10599                           tblptrl	equ	0xFF6
 10600                           tablat	equ	0xFF5
 10601                           prodh	equ	0xFF4
 10602                           prodl	equ	0xFF3
 10603                           intcon	equ	0xFF2
 10604                           intcon2	equ	0xFF1
 10605                           intcon3	equ	0xFF0
 10606                           indf0	equ	0xFEF
 10607                           postinc0	equ	0xFEE
 10608                           plusw0	equ	0xFEB
 10609                           fsr0h	equ	0xFEA
 10610                           fsr0l	equ	0xFE9
 10611                           wreg	equ	0xFE8
 10612                           postinc1	equ	0xFE6
 10613                           postdec1	equ	0xFE5
 10614                           fsr1h	equ	0xFE2
 10615                           fsr1l	equ	0xFE1
 10616                           indf2	equ	0xFDF
 10617                           postinc2	equ	0xFDE
 10618                           postdec2	equ	0xFDD
 10619                           plusw2	equ	0xFDB
 10620                           fsr2h	equ	0xFDA
 10621                           fsr2l	equ	0xFD9
 10622                           status	equ	0xFD8
 10623                           
 10624 ;; *************** function _USBCtrlTrfOutHandler *****************
 10625 ;; Defined at:
 10626 ;;		line 2555 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10627 ;; Parameters:    Size  Location     Type
 10628 ;;		None
 10629 ;; Auto vars:     Size  Location     Type
 10630 ;;		None
 10631 ;; Return value:  Size  Location     Type
 10632 ;;                  1    wreg      void 
 10633 ;; Registers used:
 10634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10635 ;; Tracked objects:
 10636 ;;		On entry : 0/0
 10637 ;;		On exit  : 0/0
 10638 ;;		Unchanged: 0/0
 10639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10644 ;;Total ram usage:        0 bytes
 10645 ;; Hardware stack levels used:    1
 10646 ;; Hardware stack levels required when called:   13
 10647 ;; This function calls:
 10648 ;;		_USBCtrlTrfRxService
 10649 ;; This function is called by:
 10650 ;;		_USBCtrlEPService
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           	psect	text46
 10655  00402A                     __ptext46:
 10656                           	opt stack 0
 10657  00402A                     _USBCtrlTrfOutHandler:
 10658                           	opt stack 12
 10659                           
 10660                           ;usb_device.c: 2557: if(controlTransferState == 2)
 10661                           
 10662                           ; BSR set to: 0
 10663                           ;incstack = 0
 10664  00402A  0E02               	movlw	2
 10665  00402C  184C               	xorwf	_controlTransferState,w,c
 10666  00402E  A4D8               	btfss	status,2,c
 10667  004030  D003               	goto	l1522
 10668                           
 10669                           ;usb_device.c: 2558: {
 10670                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 10671  004032  ECB3  F011         	call	_USBCtrlTrfRxService	;wreg free
 10672                           
 10673                           ;usb_device.c: 2560: }
 10674  004036  0012               	return	
 10675  004038                     l1522:
 10676                           
 10677                           ;usb_device.c: 2561: else
 10678                           ;usb_device.c: 2562: {
 10679                           ;usb_device.c: 2565: controlTransferState = 0;
 10680  004038  0E00               	movlw	0
 10681  00403A  6E4C               	movwf	_controlTransferState,c
 10682                           
 10683                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 10684  00403C  0101               	movlb	1	; () banked
 10685  00403E  5160               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 10686  004040  A4D8               	btfss	status,2,c
 10687  004042  D020               	goto	l1524
 10688                           
 10689                           ; BSR set to: 1
 10690                           ;usb_device.c: 2573: {
 10691                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 10692  004044  0100               	movlb	0	; () banked
 10693  004046  EE20 F001          	lfsr	2,1
 10694  00404A  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10695  00404C  26D9               	addwf	fsr2l,f,c
 10696  00404E  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10697  004050  22DA               	addwfc	fsr2h,f,c
 10698  004052  0E08               	movlw	8
 10699  004054  6EDF               	movwf	indf2,c
 10700                           
 10701                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10702  004056  EE20 F002          	lfsr	2,2
 10703  00405A  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10704  00405C  26D9               	addwf	fsr2l,f,c
 10705  00405E  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10706  004060  22DA               	addwfc	fsr2h,f,c
 10707  004062  0E30               	movlw	48
 10708  004064  6EDE               	movwf	postinc2,c
 10709  004066  0E04               	movlw	4
 10710  004068  6EDD               	movwf	postdec2,c
 10711                           
 10712                           ; BSR set to: 0
 10713                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10714  00406A  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10715  00406E  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10716  004072  0E0C               	movlw	12
 10717  004074  6EDF               	movwf	indf2,c
 10718                           
 10719                           ; BSR set to: 0
 10720                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10721  004076  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10722  00407A  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10723  00407E  0E00               	movlw	0
 10724  004080  8EDB               	bsf	plusw2,7,c
 10725                           
 10726                           ;usb_device.c: 2578: }
 10727  004082  0012               	return	
 10728  004084                     l1524:
 10729                           
 10730                           ;usb_device.c: 2579: else
 10731                           ;usb_device.c: 2580: {
 10732                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 10733                           
 10734                           ; BSR set to: 0
 10735  004084  0E00               	movlw	0
 10736  004086  0101               	movlb	1	; () banked
 10737  004088  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 10738                           
 10739                           ; BSR set to: 1
 10740  00408A  0012               	return	
 10741  00408C                     __end_of_USBCtrlTrfOutHandler:
 10742                           	opt stack 0
 10743                           tosu	equ	0xFFF
 10744                           tosh	equ	0xFFE
 10745                           tosl	equ	0xFFD
 10746                           pclath	equ	0xFFA
 10747                           tblptru	equ	0xFF8
 10748                           tblptrh	equ	0xFF7
 10749                           tblptrl	equ	0xFF6
 10750                           tablat	equ	0xFF5
 10751                           prodh	equ	0xFF4
 10752                           prodl	equ	0xFF3
 10753                           intcon	equ	0xFF2
 10754                           intcon2	equ	0xFF1
 10755                           intcon3	equ	0xFF0
 10756                           indf0	equ	0xFEF
 10757                           postinc0	equ	0xFEE
 10758                           plusw0	equ	0xFEB
 10759                           fsr0h	equ	0xFEA
 10760                           fsr0l	equ	0xFE9
 10761                           wreg	equ	0xFE8
 10762                           postinc1	equ	0xFE6
 10763                           postdec1	equ	0xFE5
 10764                           fsr1h	equ	0xFE2
 10765                           fsr1l	equ	0xFE1
 10766                           indf2	equ	0xFDF
 10767                           postinc2	equ	0xFDE
 10768                           postdec2	equ	0xFDD
 10769                           plusw2	equ	0xFDB
 10770                           fsr2h	equ	0xFDA
 10771                           fsr2l	equ	0xFD9
 10772                           status	equ	0xFD8
 10773                           
 10774 ;; *************** function _USBCtrlTrfRxService *****************
 10775 ;; Defined at:
 10776 ;;		line 1870 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;		None
 10779 ;; Auto vars:     Size  Location     Type
 10780 ;;  byteToRead      1    1[BANK0 ] unsigned char 
 10781 ;;  i               1    0[BANK0 ] unsigned char 
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  1    wreg      void 
 10784 ;; Registers used:
 10785 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/0
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10792 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10794 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10795 ;;Total ram usage:        2 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; Hardware stack levels required when called:   12
 10798 ;; This function calls:
 10799 ;;		_USBCtrlEPAllowStatusStage
 10800 ;; This function is called by:
 10801 ;;		_USBCtrlTrfOutHandler
 10802 ;; This function uses a non-reentrant model
 10803 ;;
 10804                           
 10805                           	psect	text47
 10806  002366                     __ptext47:
 10807                           	opt stack 0
 10808  002366                     _USBCtrlTrfRxService:
 10809                           	opt stack 12
 10810                           
 10811                           ;usb_device.c: 1872: uint8_t byteToRead;
 10812                           ;usb_device.c: 1873: uint8_t i;
 10813                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 10814                           
 10815                           ;incstack = 0
 10816  002366  0100               	movlb	0	; () banked
 10817  002368  EE20 F001          	lfsr	2,1
 10818  00236C  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 10819  00236E  26D9               	addwf	fsr2l,f,c
 10820  002370  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 10821  002372  22DA               	addwfc	fsr2h,f,c
 10822  002374  50DF               	movf	indf2,w,c
 10823  002376  6F61               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 10827  002378  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10828  00237A  0101               	movlb	1	; () banked
 10829  00237C  5D16               	subwf	(_outPipes+4)& (0+255),w,b
 10830  00237E  0E00               	movlw	0
 10831  002380  5917               	subwfb	(_outPipes+5)& (0+255),w,b
 10832  002382  A0D8               	btfss	status,0,c
 10833                           
 10834                           ; BSR set to: 1
 10835                           ;usb_device.c: 1884: {
 10836                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 10837  002384  C116  F061         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 10838                           
 10839                           ; BSR set to: 1
 10840                           ;usb_device.c: 1886: }
 10841                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 10842                           
 10843                           ; BSR set to: 1
 10844  002388  0100               	movlb	0	; () banked
 10845  00238A  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10846  00238C  0101               	movlb	1	; () banked
 10847  00238E  5F16               	subwf	(_outPipes+4)& (0+255),f,b
 10848  002390  0E00               	movlw	0
 10849  002392  5B17               	subwfb	(_outPipes+5)& (0+255),f,b
 10850                           
 10851                           ; BSR set to: 1
 10852                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 10853  002394  0E00               	movlw	0
 10854  002396  0100               	movlb	0	; () banked
 10855  002398  6F60               	movwf	USBCtrlTrfRxService@i& (0+255),b
 10856  00239A  D013               	goto	l1450
 10857  00239C                     
 10858                           ; BSR set to: 0
 10859                           ;usb_device.c: 1893: {
 10860                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 10861                           
 10862                           ; BSR set to: 0
 10863  00239C  5160               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 10864  00239E  0D01               	mullw	1
 10865  0023A0  0E38               	movlw	56
 10866  0023A2  24F3               	addwf	prodl,w,c
 10867  0023A4  6ED9               	movwf	fsr2l,c
 10868  0023A6  0E04               	movlw	4
 10869  0023A8  20F4               	addwfc	prodh,w,c
 10870  0023AA  6EDA               	movwf	fsr2h,c
 10871  0023AC  C112  FFE1         	movff	_outPipes,fsr1l
 10872  0023B0  C113  FFE2         	movff	_outPipes+1,fsr1h
 10873  0023B4  CFDF FFE7          	movff	indf2,indf1
 10874                           
 10875                           ; BSR set to: 0
 10876  0023B8  0101               	movlb	1	; () banked
 10877  0023BA  4B12               	infsnz	_outPipes& (0+255),f,b
 10878  0023BC  2B13               	incf	(_outPipes+1)& (0+255),f,b
 10879                           
 10880                           ; BSR set to: 1
 10881  0023BE  0100               	movlb	0	; () banked
 10882  0023C0  2B60               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 10883  0023C2                     l1450:
 10884                           
 10885                           ; BSR set to: 0
 10886                           
 10887                           ; BSR set to: 0
 10888  0023C2  5161               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10889  0023C4  5D60               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 10890  0023C6  A0D8               	btfss	status,0,c
 10891  0023C8  D7E9               	goto	l1451
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;usb_device.c: 1895: }
 10895                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 10896                           
 10897                           ; BSR set to: 0
 10898  0023CA  0101               	movlb	1	; () banked
 10899  0023CC  5116               	movf	(_outPipes+4)& (0+255),w,b
 10900  0023CE  1117               	iorwf	(_outPipes+5)& (0+255),w,b
 10901  0023D0  B4D8               	btfsc	status,2,c
 10902  0023D2  D033               	goto	l1453
 10903                           
 10904                           ; BSR set to: 1
 10905                           ;usb_device.c: 1900: {
 10906                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 10907  0023D4  0100               	movlb	0	; () banked
 10908  0023D6  EE20 F001          	lfsr	2,1
 10909  0023DA  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10910  0023DC  26D9               	addwf	fsr2l,f,c
 10911  0023DE  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10912  0023E0  22DA               	addwfc	fsr2h,f,c
 10913  0023E2  0E08               	movlw	8
 10914  0023E4  6EDF               	movwf	indf2,c
 10915                           
 10916                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 10917  0023E6  EE20 F002          	lfsr	2,2
 10918  0023EA  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10919  0023EC  26D9               	addwf	fsr2l,f,c
 10920  0023EE  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10921  0023F0  22DA               	addwfc	fsr2h,f,c
 10922  0023F2  0E38               	movlw	56
 10923  0023F4  6EDE               	movwf	postinc2,c
 10924  0023F6  0E04               	movlw	4
 10925  0023F8  6EDD               	movwf	postdec2,c
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 10929  0023FA  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10930  0023FE  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10931  002402  BCDF               	btfsc	indf2,6,c
 10932  002404  D00D               	goto	l1454
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;usb_device.c: 1904: {
 10936                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10937  002406  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10938  00240A  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10939  00240E  0E48               	movlw	72
 10940  002410  6EDF               	movwf	indf2,c
 10941                           
 10942                           ; BSR set to: 0
 10943                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10944  002412  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10945  002416  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10946  00241A  0E00               	movlw	0
 10947  00241C  8EDB               	bsf	plusw2,7,c
 10948                           
 10949                           ;usb_device.c: 1907: }
 10950  00241E  0012               	return	
 10951  002420                     l1454:
 10952                           
 10953                           ; BSR set to: 0
 10954                           ;usb_device.c: 1908: else
 10955                           ;usb_device.c: 1909: {
 10956                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 10957                           
 10958                           ; BSR set to: 0
 10959  002420  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10960  002424  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10961  002428  0E08               	movlw	8
 10962  00242A  6EDF               	movwf	indf2,c
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10966  00242C  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10967  002430  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10968  002434  0E00               	movlw	0
 10969  002436  8EDB               	bsf	plusw2,7,c
 10970                           
 10971                           ; BSR set to: 0
 10972                           ;usb_device.c: 1912: }
 10973                           ;usb_device.c: 1913: }
 10974  002438  0012               	return	
 10975  00243A                     l1453:
 10976                           
 10977                           ;usb_device.c: 1914: else
 10978                           ;usb_device.c: 1915: {
 10979                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 10980                           
 10981                           ; BSR set to: 0
 10982  00243A  0100               	movlb	0	; () banked
 10983  00243C  EE20 F001          	lfsr	2,1
 10984  002440  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10985  002442  26D9               	addwf	fsr2l,f,c
 10986  002444  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10987  002446  22DA               	addwfc	fsr2h,f,c
 10988  002448  0E08               	movlw	8
 10989  00244A  6EDF               	movwf	indf2,c
 10990                           
 10991                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10992  00244C  EE20 F002          	lfsr	2,2
 10993  002450  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10994  002452  26D9               	addwf	fsr2l,f,c
 10995  002454  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10996  002456  22DA               	addwfc	fsr2h,f,c
 10997  002458  0E30               	movlw	48
 10998  00245A  6EDE               	movwf	postinc2,c
 10999  00245C  0E04               	movlw	4
 11000  00245E  6EDD               	movwf	postdec2,c
 11001                           
 11002                           ; BSR set to: 0
 11003                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 11004  002460  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11005  002464  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11006  002468  0E04               	movlw	4
 11007  00246A  6EDF               	movwf	indf2,c
 11008                           
 11009                           ; BSR set to: 0
 11010                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11011  00246C  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11012  002470  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11013  002474  0E00               	movlw	0
 11014  002476  8EDB               	bsf	plusw2,7,c
 11015                           
 11016                           ; BSR set to: 0
 11017                           ;usb_device.c: 1944: }
 11018                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 11019                           
 11020                           ; BSR set to: 0
 11021  002478  0101               	movlb	1	; () banked
 11022  00247A  9F15               	bcf	(_outPipes+3)& (0+255),7,b
 11023                           
 11024                           ; BSR set to: 1
 11025                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 11026  00247C  0100               	movlb	0	; () banked
 11027  00247E  51FC               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 11028  002480  A4D8               	btfss	status,2,c
 11029  002482  0012               	return	
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;usb_device.c: 1960: {
 11033                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 11034  002484  ECDF  F015         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11035  002488  0012               	return	
 11036  00248A                     __end_of_USBCtrlTrfRxService:
 11037                           	opt stack 0
 11038                           tosu	equ	0xFFF
 11039                           tosh	equ	0xFFE
 11040                           tosl	equ	0xFFD
 11041                           pclath	equ	0xFFA
 11042                           tblptru	equ	0xFF8
 11043                           tblptrh	equ	0xFF7
 11044                           tblptrl	equ	0xFF6
 11045                           tablat	equ	0xFF5
 11046                           prodh	equ	0xFF4
 11047                           prodl	equ	0xFF3
 11048                           intcon	equ	0xFF2
 11049                           intcon2	equ	0xFF1
 11050                           intcon3	equ	0xFF0
 11051                           indf0	equ	0xFEF
 11052                           postinc0	equ	0xFEE
 11053                           plusw0	equ	0xFEB
 11054                           fsr0h	equ	0xFEA
 11055                           fsr0l	equ	0xFE9
 11056                           wreg	equ	0xFE8
 11057                           indf1	equ	0xFE7
 11058                           postinc1	equ	0xFE6
 11059                           postdec1	equ	0xFE5
 11060                           fsr1h	equ	0xFE2
 11061                           fsr1l	equ	0xFE1
 11062                           indf2	equ	0xFDF
 11063                           postinc2	equ	0xFDE
 11064                           postdec2	equ	0xFDD
 11065                           plusw2	equ	0xFDB
 11066                           fsr2h	equ	0xFDA
 11067                           fsr2l	equ	0xFD9
 11068                           status	equ	0xFD8
 11069                           
 11070 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 11071 ;; Defined at:
 11072 ;;		line 1434 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11073 ;; Parameters:    Size  Location     Type
 11074 ;;		None
 11075 ;; Auto vars:     Size  Location     Type
 11076 ;;		None
 11077 ;; Return value:  Size  Location     Type
 11078 ;;                  1    wreg      void 
 11079 ;; Registers used:
 11080 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11090 ;;Total ram usage:        0 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:   11
 11093 ;; This function calls:
 11094 ;;		Nothing
 11095 ;; This function is called by:
 11096 ;;		_USBDeviceTasks
 11097 ;;		_USBCtrlEPServiceComplete
 11098 ;;		_USBCtrlTrfRxService
 11099 ;; This function uses a non-reentrant model
 11100 ;;
 11101                           
 11102                           	psect	text48
 11103  002BBE                     __ptext48:
 11104                           	opt stack 0
 11105  002BBE                     _USBCtrlEPAllowStatusStage:
 11106                           	opt stack 12
 11107                           
 11108                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 11109                           
 11110                           ;incstack = 0
 11111  002BBE  5049               	movf	_USBStatusStageEnabledFlag1,w,c	;volatile
 11112  002BC0  A4D8               	btfss	status,2,c
 11113  002BC2  0012               	return	
 11114                           
 11115                           ;usb_device.c: 1442: {
 11116                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 11117  002BC4  0E01               	movlw	1
 11118  002BC6  6E49               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
 11119                           
 11120                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 11121  002BC8  5048               	movf	_USBStatusStageEnabledFlag2,w,c	;volatile
 11122  002BCA  A4D8               	btfss	status,2,c
 11123  002BCC  0012               	return	
 11124                           
 11125                           ;usb_device.c: 1445: {
 11126                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 11127  002BCE  0E01               	movlw	1
 11128  002BD0  6E48               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
 11129                           
 11130                           ;usb_device.c: 1450: if(controlTransferState == 2)
 11131  002BD2  0E02               	movlw	2
 11132  002BD4  184C               	xorwf	_controlTransferState,w,c
 11133  002BD6  A4D8               	btfss	status,2,c
 11134  002BD8  D015               	goto	l1404
 11135                           
 11136                           ;usb_device.c: 1451: {
 11137                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 11138  002BDA  EE20 F001          	lfsr	2,1
 11139  002BDE  503E               	movf	_pBDTEntryIn,w,c
 11140  002BE0  26D9               	addwf	fsr2l,f,c
 11141  002BE2  503F               	movf	_pBDTEntryIn+1,w,c
 11142  002BE4  22DA               	addwfc	fsr2h,f,c
 11143  002BE6  0E00               	movlw	0
 11144  002BE8  6EDF               	movwf	indf2,c
 11145                           
 11146                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11147  002BEA  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11148  002BEE  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11149  002BF2  0E48               	movlw	72
 11150  002BF4  6EDF               	movwf	indf2,c
 11151                           
 11152                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11153  002BF6  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11154  002BFA  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11155  002BFE  0E00               	movlw	0
 11156  002C00  8EDB               	bsf	plusw2,7,c
 11157                           
 11158                           ;usb_device.c: 1455: }
 11159  002C02  0012               	return	
 11160  002C04                     l1404:
 11161                           
 11162                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 11163  002C04  044C               	decf	_controlTransferState,w,c
 11164  002C06  A4D8               	btfss	status,2,c
 11165  002C08  0012               	return	
 11166                           
 11167                           ;usb_device.c: 1457: {
 11168                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 11169  002C0A  0E00               	movlw	0
 11170  002C0C  0101               	movlb	1	; () banked
 11171  002C0E  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11172                           
 11173                           ; BSR set to: 1
 11174                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 11175  002C10  0100               	movlb	0	; () banked
 11176  002C12  EE20 F001          	lfsr	2,1
 11177  002C16  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 11178  002C18  26D9               	addwf	fsr2l,f,c
 11179  002C1A  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 11180  002C1C  22DA               	addwfc	fsr2h,f,c
 11181  002C1E  0E08               	movlw	8
 11182  002C20  6EDF               	movwf	indf2,c
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 11186  002C22  EE20 F002          	lfsr	2,2
 11187  002C26  51F8               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 11188  002C28  26D9               	addwf	fsr2l,f,c
 11189  002C2A  51F9               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 11190  002C2C  22DA               	addwfc	fsr2h,f,c
 11191  002C2E  0E30               	movlw	48
 11192  002C30  6EDE               	movwf	postinc2,c
 11193  002C32  0E04               	movlw	4
 11194  002C34  6EDD               	movwf	postdec2,c
 11195                           
 11196                           ; BSR set to: 0
 11197                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 11198  002C36  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11199  002C3A  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11200  002C3E  0E04               	movlw	4
 11201  002C40  6EDF               	movwf	indf2,c
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11205  002C42  C0F8  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11206  002C46  C0F9  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11207  002C4A  0E00               	movlw	0
 11208  002C4C  8EDB               	bsf	plusw2,7,c
 11209                           
 11210                           ; BSR set to: 0
 11211                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 11212  002C4E  0E01               	movlw	1
 11213  002C50  0101               	movlb	1	; () banked
 11214  002C52  6F60               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11215                           
 11216                           ; BSR set to: 1
 11217                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 11218  002C54  0100               	movlb	0	; () banked
 11219  002C56  EE20 F001          	lfsr	2,1
 11220  002C5A  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11221  002C5C  26D9               	addwf	fsr2l,f,c
 11222  002C5E  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11223  002C60  22DA               	addwfc	fsr2h,f,c
 11224  002C62  0E08               	movlw	8
 11225  002C64  6EDF               	movwf	indf2,c
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 11229  002C66  EE20 F002          	lfsr	2,2
 11230  002C6A  51F6               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 11231  002C6C  26D9               	addwf	fsr2l,f,c
 11232  002C6E  51F7               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 11233  002C70  22DA               	addwfc	fsr2h,f,c
 11234  002C72  0E30               	movlw	48
 11235  002C74  6EDE               	movwf	postinc2,c
 11236  002C76  0E04               	movlw	4
 11237  002C78  6EDD               	movwf	postdec2,c
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 11241  002C7A  C0F6  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11242  002C7E  C0F7  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11243  002C82  0E80               	movlw	128
 11244  002C84  6EDF               	movwf	indf2,c
 11245                           
 11246                           ; BSR set to: 0
 11247                           
 11248                           ; BSR set to: 0
 11249                           
 11250                           ; BSR set to: 0
 11251  002C86  0012               	return	
 11252  002C88                     __end_of_USBCtrlEPAllowStatusStage:
 11253                           	opt stack 0
 11254                           tosu	equ	0xFFF
 11255                           tosh	equ	0xFFE
 11256                           tosl	equ	0xFFD
 11257                           pclath	equ	0xFFA
 11258                           tblptru	equ	0xFF8
 11259                           tblptrh	equ	0xFF7
 11260                           tblptrl	equ	0xFF6
 11261                           tablat	equ	0xFF5
 11262                           prodh	equ	0xFF4
 11263                           prodl	equ	0xFF3
 11264                           intcon	equ	0xFF2
 11265                           intcon2	equ	0xFF1
 11266                           intcon3	equ	0xFF0
 11267                           indf0	equ	0xFEF
 11268                           postinc0	equ	0xFEE
 11269                           plusw0	equ	0xFEB
 11270                           fsr0h	equ	0xFEA
 11271                           fsr0l	equ	0xFE9
 11272                           wreg	equ	0xFE8
 11273                           indf1	equ	0xFE7
 11274                           postinc1	equ	0xFE6
 11275                           postdec1	equ	0xFE5
 11276                           fsr1h	equ	0xFE2
 11277                           fsr1l	equ	0xFE1
 11278                           indf2	equ	0xFDF
 11279                           postinc2	equ	0xFDE
 11280                           postdec2	equ	0xFDD
 11281                           plusw2	equ	0xFDB
 11282                           fsr2h	equ	0xFDA
 11283                           fsr2l	equ	0xFD9
 11284                           status	equ	0xFD8
 11285                           
 11286 ;; *************** function _USBCtrlTrfInHandler *****************
 11287 ;; Defined at:
 11288 ;;		line 2609 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11289 ;; Parameters:    Size  Location     Type
 11290 ;;		None
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;  lastDTS         1    1[BANK0 ] unsigned char 
 11293 ;; Return value:  Size  Location     Type
 11294 ;;                  1    wreg      void 
 11295 ;; Registers used:
 11296 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11297 ;; Tracked objects:
 11298 ;;		On entry : 0/0
 11299 ;;		On exit  : 0/0
 11300 ;;		Unchanged: 0/0
 11301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11303 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11305 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11306 ;;Total ram usage:        1 bytes
 11307 ;; Hardware stack levels used:    1
 11308 ;; Hardware stack levels required when called:   12
 11309 ;; This function calls:
 11310 ;;		_USBCtrlTrfTxService
 11311 ;; This function is called by:
 11312 ;;		_USBCtrlEPService
 11313 ;; This function uses a non-reentrant model
 11314 ;;
 11315                           
 11316                           	psect	text49
 11317  002EE0                     __ptext49:
 11318                           	opt stack 0
 11319  002EE0                     _USBCtrlTrfInHandler:
 11320                           	opt stack 13
 11321                           
 11322                           ;usb_device.c: 2611: uint8_t lastDTS;
 11323                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 11324                           
 11325                           ;incstack = 0
 11326  002EE0  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11327  002EE4  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11328  002EE8  0E00               	movlw	0
 11329  002EEA  BCDF               	btfsc	indf2,6,c
 11330  002EEC  0E01               	movlw	1
 11331  002EEE  0100               	movlb	0	; () banked
 11332  002EF0  6F61               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 11336  002EF2  0E04               	movlw	4
 11337  002EF4  1A3E               	xorwf	_pBDTEntryIn,f,c
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 11341  002EF6  0E08               	movlw	8
 11342  002EF8  19FD               	xorwf	_USBDeviceState& (0+255),w,b
 11343  002EFA  A4D8               	btfss	status,2,c
 11344  002EFC  D00D               	goto	l1531
 11345                           
 11346                           ; BSR set to: 0
 11347                           ;usb_device.c: 2622: {
 11348                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 11349  002EFE  0104               	movlb	4	; () banked
 11350  002F00  5132               	movf	50,w,b	;volatile
 11351  002F02  0B7F               	andlw	127
 11352  002F04  010F               	movlb	15	; () banked
 11353  002F06  6F38               	movwf	56,b	;volatile
 11354                           
 11355                           ; BSR set to: 15
 11356                           ;usb_device.c: 2624: if(UADDR != 0u)
 11357  002F08  5138               	movf	56,w,b	;volatile
 11358  002F0A  B4D8               	btfsc	status,2,c
 11359  002F0C  D002               	goto	l1530
 11360                           
 11361                           ; BSR set to: 15
 11362                           ;usb_device.c: 2625: {
 11363                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 11364  002F0E  0E10               	movlw	16
 11365  002F10  D001               	goto	L11
 11366  002F12                     l1530:
 11367                           
 11368                           ;usb_device.c: 2628: else
 11369                           ;usb_device.c: 2629: {
 11370                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 11371                           
 11372                           ; BSR set to: 0
 11373  002F12  0E04               	movlw	4
 11374  002F14                     L11:
 11375  002F14  0100               	movlb	0	; () banked
 11376  002F16  6FFD               	movwf	_USBDeviceState& (0+255),b
 11377  002F18                     l1531:
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;usb_device.c: 2631: }
 11381                           ;usb_device.c: 2632: }
 11382                           ;usb_device.c: 2635: if(controlTransferState == 1)
 11383                           
 11384                           ; BSR set to: 0
 11385                           
 11386                           ; BSR set to: 0
 11387  002F18  044C               	decf	_controlTransferState,w,c
 11388  002F1A  A4D8               	btfss	status,2,c
 11389  002F1C  D03B               	goto	l1532
 11390                           
 11391                           ; BSR set to: 0
 11392                           ;usb_device.c: 2636: {
 11393                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 11394  002F1E  EE20 F002          	lfsr	2,2
 11395  002F22  503E               	movf	_pBDTEntryIn,w,c
 11396  002F24  26D9               	addwf	fsr2l,f,c
 11397  002F26  503F               	movf	_pBDTEntryIn+1,w,c
 11398  002F28  22DA               	addwfc	fsr2h,f,c
 11399  002F2A  0E38               	movlw	56
 11400  002F2C  6EDE               	movwf	postinc2,c
 11401  002F2E  0E04               	movlw	4
 11402  002F30  6EDD               	movwf	postdec2,c
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 11406  002F32  EC9E  F014         	call	_USBCtrlTrfTxService	;wreg free
 11407                           
 11408                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 11409  002F36  0E02               	movlw	2
 11410  002F38  184D               	xorwf	_shortPacketStatus,w,c
 11411  002F3A  A4D8               	btfss	status,2,c
 11412  002F3C  D00D               	goto	l1533
 11413                           
 11414                           ;usb_device.c: 2645: {
 11415                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 11416  002F3E  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11417  002F42  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11418  002F46  0E04               	movlw	4
 11419  002F48  6EDF               	movwf	indf2,c
 11420                           
 11421                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11422  002F4A  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11423  002F4E  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11424  002F52  0E00               	movlw	0
 11425  002F54  8EDB               	bsf	plusw2,7,c
 11426                           
 11427                           ;usb_device.c: 2650: }
 11428  002F56  0012               	return	
 11429  002F58                     l1533:
 11430                           
 11431                           ;usb_device.c: 2651: else
 11432                           ;usb_device.c: 2652: {
 11433                           ;usb_device.c: 2653: if(lastDTS == 0)
 11434  002F58  0100               	movlb	0	; () banked
 11435  002F5A  5161               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 11436  002F5C  A4D8               	btfss	status,2,c
 11437  002F5E  D00D               	goto	l1535
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;usb_device.c: 2654: {
 11441                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11442  002F60  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11443  002F64  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11444  002F68  0E48               	movlw	72
 11445  002F6A  6EDF               	movwf	indf2,c
 11446                           
 11447                           ; BSR set to: 0
 11448                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11449  002F6C  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11450  002F70  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11451  002F74  0E00               	movlw	0
 11452  002F76  8EDB               	bsf	plusw2,7,c
 11453                           
 11454                           ;usb_device.c: 2657: }
 11455  002F78  0012               	return	
 11456  002F7A                     l1535:
 11457                           
 11458                           ; BSR set to: 0
 11459                           ;usb_device.c: 2658: else
 11460                           ;usb_device.c: 2659: {
 11461                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 11462                           
 11463                           ; BSR set to: 0
 11464  002F7A  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11465  002F7E  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11466  002F82  0E08               	movlw	8
 11467  002F84  6EDF               	movwf	indf2,c
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11471  002F86  C03E  FFD9         	movff	_pBDTEntryIn,fsr2l
 11472  002F8A  C03F  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11473  002F8E  0E00               	movlw	0
 11474  002F90  8EDB               	bsf	plusw2,7,c
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;usb_device.c: 2662: }
 11478                           ;usb_device.c: 2663: }
 11479                           ;usb_device.c: 2664: }
 11480                           
 11481                           ; BSR set to: 0
 11482  002F92  0012               	return	
 11483  002F94                     l1532:
 11484                           
 11485                           ; BSR set to: 0
 11486                           ;usb_device.c: 2665: else
 11487                           ;usb_device.c: 2666: {
 11488                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 11489  002F94  0101               	movlb	1	; () banked
 11490  002F96  BF15               	btfsc	(_outPipes+3)& (0+255),7,b
 11491                           
 11492                           ; BSR set to: 1
 11493                           ;usb_device.c: 2675: }
 11494                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 11495                           
 11496                           ; BSR set to: 1
 11497  002F98  9F15               	bcf	(_outPipes+3)& (0+255),7,b
 11498                           
 11499                           ; BSR set to: 1
 11500                           ;usb_device.c: 2677: }
 11501                           ;usb_device.c: 2679: controlTransferState = 0;
 11502                           
 11503                           ; BSR set to: 1
 11504  002F9A  0E00               	movlw	0
 11505  002F9C  6E4C               	movwf	_controlTransferState,c
 11506  002F9E  0012               	return	
 11507  002FA0                     __end_of_USBCtrlTrfInHandler:
 11508                           	opt stack 0
 11509                           tosu	equ	0xFFF
 11510                           tosh	equ	0xFFE
 11511                           tosl	equ	0xFFD
 11512                           pclath	equ	0xFFA
 11513                           tblptru	equ	0xFF8
 11514                           tblptrh	equ	0xFF7
 11515                           tblptrl	equ	0xFF6
 11516                           tablat	equ	0xFF5
 11517                           prodh	equ	0xFF4
 11518                           prodl	equ	0xFF3
 11519                           intcon	equ	0xFF2
 11520                           intcon2	equ	0xFF1
 11521                           intcon3	equ	0xFF0
 11522                           indf0	equ	0xFEF
 11523                           postinc0	equ	0xFEE
 11524                           plusw0	equ	0xFEB
 11525                           fsr0h	equ	0xFEA
 11526                           fsr0l	equ	0xFE9
 11527                           wreg	equ	0xFE8
 11528                           indf1	equ	0xFE7
 11529                           postinc1	equ	0xFE6
 11530                           postdec1	equ	0xFE5
 11531                           fsr1h	equ	0xFE2
 11532                           fsr1l	equ	0xFE1
 11533                           indf2	equ	0xFDF
 11534                           postinc2	equ	0xFDE
 11535                           postdec2	equ	0xFDD
 11536                           plusw2	equ	0xFDB
 11537                           fsr2h	equ	0xFDA
 11538                           fsr2l	equ	0xFD9
 11539                           status	equ	0xFD8
 11540                           
 11541 ;; *************** function _USBCtrlTrfTxService *****************
 11542 ;; Defined at:
 11543 ;;		line 1789 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11544 ;; Parameters:    Size  Location     Type
 11545 ;;		None
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  byteToSend      1    0[BANK0 ] unsigned char 
 11548 ;; Return value:  Size  Location     Type
 11549 ;;                  1    wreg      void 
 11550 ;; Registers used:
 11551 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11552 ;; Tracked objects:
 11553 ;;		On entry : 0/0
 11554 ;;		On exit  : 0/0
 11555 ;;		Unchanged: 0/0
 11556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11558 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11560 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11561 ;;Total ram usage:        1 bytes
 11562 ;; Hardware stack levels used:    1
 11563 ;; Hardware stack levels required when called:   11
 11564 ;; This function calls:
 11565 ;;		Nothing
 11566 ;; This function is called by:
 11567 ;;		_USBCtrlEPAllowDataStage
 11568 ;;		_USBCtrlTrfInHandler
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           
 11572                           	psect	text50
 11573  00293C                     __ptext50:
 11574                           	opt stack 0
 11575  00293C                     _USBCtrlTrfTxService:
 11576                           	opt stack 11
 11577                           
 11578                           ;usb_device.c: 1791: uint8_t byteToSend;
 11579                           ;usb_device.c: 1795: byteToSend = 8;
 11580                           
 11581                           ;incstack = 0
 11582  00293C  0E08               	movlw	8
 11583  00293E  0100               	movlb	0	; () banked
 11584  002940  6F60               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 11585                           
 11586                           ; BSR set to: 0
 11587                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 11588  002942  51F5               	movf	(_inPipes+5)& (0+255),w,b
 11589  002944  E110               	bnz	l6528
 11590  002946  0E08               	movlw	8
 11591  002948  5DF4               	subwf	(_inPipes+4)& (0+255),w,b
 11592  00294A  B0D8               	btfsc	status,0,c
 11593  00294C  D00C               	goto	l1437
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;usb_device.c: 1797: {
 11597                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 11598  00294E  C0F4  F060         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 11602  002952  504D               	movf	_shortPacketStatus,w,c
 11603  002954  A4D8               	btfss	status,2,c
 11604  002956  D002               	goto	l1435
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;usb_device.c: 1806: {
 11608                           ;usb_device.c: 1807: shortPacketStatus = 1;
 11609  002958  0E01               	movlw	1
 11610  00295A  D004               	goto	L12
 11611  00295C                     l1435:
 11612                           
 11613                           ; BSR set to: 0
 11614                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 11615                           
 11616                           ; BSR set to: 0
 11617  00295C  044D               	decf	_shortPacketStatus,w,c
 11618  00295E  A4D8               	btfss	status,2,c
 11619  002960  D002               	goto	l1437
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;usb_device.c: 1810: {
 11623                           ;usb_device.c: 1811: shortPacketStatus = 2;
 11624  002962  0E02               	movlw	2
 11625  002964                     L12:
 11626  002964  6E4D               	movwf	_shortPacketStatus,c
 11627  002966                     l1437:
 11628  002966                     l6528:
 11629                           
 11630                           ; BSR set to: 0
 11631                           ;usb_device.c: 1812: }
 11632                           ;usb_device.c: 1813: }
 11633                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 11634  002966  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11635  002968  5FF4               	subwf	(_inPipes+4)& (0+255),f,b
 11636  00296A  0E00               	movlw	0
 11637  00296C  5BF5               	subwfb	(_inPipes+5)& (0+255),f,b
 11638                           
 11639                           ; BSR set to: 0
 11640                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 11641  00296E  EE20 F001          	lfsr	2,1
 11642  002972  503E               	movf	_pBDTEntryIn,w,c
 11643  002974  26D9               	addwf	fsr2l,f,c
 11644  002976  503F               	movf	_pBDTEntryIn+1,w,c
 11645  002978  22DA               	addwfc	fsr2h,f,c
 11646  00297A  C060  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 11647                           
 11648                           ; BSR set to: 0
 11649                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 11650  00297E  0E38               	movlw	56
 11651  002980  0101               	movlb	1	; () banked
 11652  002982  6F42               	movwf	_pDst& (0+255),b
 11653  002984  0E04               	movlw	4
 11654  002986  6F43               	movwf	(_pDst+1)& (0+255),b
 11655                           
 11656                           ; BSR set to: 1
 11657                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 11658  002988  0100               	movlb	0	; () banked
 11659  00298A  A1F3               	btfss	(_inPipes+3)& (0+255),0,b
 11660  00298C  D01E               	goto	l1439
 11661  00298E  D03E               	goto	l1443
 11662  002990                     
 11663                           ; BSR set to: 0
 11664                           ;usb_device.c: 1830: {
 11665                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 11666                           
 11667                           ; BSR set to: 0
 11668  002990  C0F0  FFF6         	movff	_inPipes,tblptrl
 11669  002994  C0F1  FFF7         	movff	_inPipes+1,tblptrh
 11670  002998  6AF8               	clrf	tblptru,c
 11671  00299A  C142  FFD9         	movff	_pDst,fsr2l
 11672  00299E  C143  FFDA         	movff	_pDst+1,fsr2h
 11673  0029A2  0E0E               	movlw	(high __ramtop+-1)
 11674  0029A4  64F7               	cpfsgt	tblptrh,c
 11675  0029A6  D003               	bra	u4417
 11676  0029A8  0008               	tblrd		*
 11677  0029AA  50F5               	movf	tablat,w,c
 11678  0029AC  D005               	bra	u4410
 11679  0029AE                     u4417:
 11680  0029AE  CFF6 FFE9          	movff	tblptrl,fsr0l
 11681  0029B2  CFF7 FFEA          	movff	tblptrh,fsr0h
 11682  0029B6  50EF               	movf	indf0,w,c
 11683  0029B8                     u4410:
 11684  0029B8  6EDF               	movwf	indf2,c
 11685  0029BA  0100               	movlb	0	; () banked
 11686  0029BC  4BF0               	infsnz	_inPipes& (0+255),f,b
 11687  0029BE  2BF1               	incf	(_inPipes+1)& (0+255),f,b
 11688                           
 11689                           ; BSR set to: 0
 11690  0029C0  0101               	movlb	1	; () banked
 11691  0029C2  4B42               	infsnz	_pDst& (0+255),f,b
 11692  0029C4  2B43               	incf	(_pDst+1)& (0+255),f,b
 11693                           
 11694                           ; BSR set to: 1
 11695                           ;usb_device.c: 1832: byteToSend--;
 11696  0029C6  0100               	movlb	0	; () banked
 11697  0029C8  0760               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11698  0029CA                     l1439:
 11699                           
 11700                           ; BSR set to: 0
 11701                           
 11702                           ; BSR set to: 0
 11703  0029CA  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11704  0029CC  B4D8               	btfsc	status,2,c
 11705  0029CE  0012               	return	
 11706  0029D0  D7DF               	goto	l1440
 11707  0029D2                     
 11708                           ; BSR set to: 0
 11709                           ;usb_device.c: 1838: {
 11710                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 11711                           
 11712                           ; BSR set to: 0
 11713  0029D2  C0F0  FFF6         	movff	_inPipes,tblptrl
 11714  0029D6  C0F1  FFF7         	movff	_inPipes+1,tblptrh
 11715  0029DA  6AF8               	clrf	tblptru,c
 11716  0029DC  C142  FFD9         	movff	_pDst,fsr2l
 11717  0029E0  C143  FFDA         	movff	_pDst+1,fsr2h
 11718  0029E4  0E0E               	movlw	(high __ramtop+-1)
 11719  0029E6  64F7               	cpfsgt	tblptrh,c
 11720  0029E8  D003               	bra	u4437
 11721  0029EA  0008               	tblrd		*
 11722  0029EC  50F5               	movf	tablat,w,c
 11723  0029EE  D005               	bra	u4430
 11724  0029F0                     u4437:
 11725  0029F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 11726  0029F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 11727  0029F8  50EF               	movf	indf0,w,c
 11728  0029FA                     u4430:
 11729  0029FA  6EDF               	movwf	indf2,c
 11730  0029FC  0100               	movlb	0	; () banked
 11731  0029FE  4BF0               	infsnz	_inPipes& (0+255),f,b
 11732  002A00  2BF1               	incf	(_inPipes+1)& (0+255),f,b
 11733                           
 11734                           ; BSR set to: 0
 11735  002A02  0101               	movlb	1	; () banked
 11736  002A04  4B42               	infsnz	_pDst& (0+255),f,b
 11737  002A06  2B43               	incf	(_pDst+1)& (0+255),f,b
 11738                           
 11739                           ; BSR set to: 1
 11740                           ;usb_device.c: 1840: byteToSend--;
 11741  002A08  0100               	movlb	0	; () banked
 11742  002A0A  0760               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11743  002A0C                     l1443:
 11744                           
 11745                           ; BSR set to: 0
 11746                           
 11747                           ; BSR set to: 0
 11748  002A0C  5160               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11749  002A0E  B4D8               	btfsc	status,2,c
 11750  002A10  0012               	return	
 11751  002A12  D7DF               	goto	l1444
 11752  002A14                     __end_of_USBCtrlTrfTxService:
 11753                           	opt stack 0
 11754                           tosu	equ	0xFFF
 11755                           tosh	equ	0xFFE
 11756                           tosl	equ	0xFFD
 11757                           pclath	equ	0xFFA
 11758                           tblptru	equ	0xFF8
 11759                           tblptrh	equ	0xFF7
 11760                           tblptrl	equ	0xFF6
 11761                           tablat	equ	0xFF5
 11762                           prodh	equ	0xFF4
 11763                           prodl	equ	0xFF3
 11764                           intcon	equ	0xFF2
 11765                           intcon2	equ	0xFF1
 11766                           intcon3	equ	0xFF0
 11767                           indf0	equ	0xFEF
 11768                           postinc0	equ	0xFEE
 11769                           plusw0	equ	0xFEB
 11770                           fsr0h	equ	0xFEA
 11771                           fsr0l	equ	0xFE9
 11772                           wreg	equ	0xFE8
 11773                           indf1	equ	0xFE7
 11774                           postinc1	equ	0xFE6
 11775                           postdec1	equ	0xFE5
 11776                           fsr1h	equ	0xFE2
 11777                           fsr1l	equ	0xFE1
 11778                           indf2	equ	0xFDF
 11779                           postinc2	equ	0xFDE
 11780                           postdec2	equ	0xFDD
 11781                           plusw2	equ	0xFDB
 11782                           fsr2h	equ	0xFDA
 11783                           fsr2l	equ	0xFD9
 11784                           status	equ	0xFD8
 11785                           
 11786 ;; *************** function _CDCTxService *****************
 11787 ;; Defined at:
 11788 ;;		line 839 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11789 ;; Parameters:    Size  Location     Type
 11790 ;;		None
 11791 ;; Auto vars:     Size  Location     Type
 11792 ;;  byte_to_send    1    8[BANK0 ] unsigned char 
 11793 ;;  i               1    7[BANK0 ] unsigned char 
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  1    wreg      void 
 11796 ;; Registers used:
 11797 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11798 ;; Tracked objects:
 11799 ;;		On entry : 0/0
 11800 ;;		On exit  : 0/0
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11804 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11806 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11807 ;;Total ram usage:        2 bytes
 11808 ;; Hardware stack levels used:    1
 11809 ;; Hardware stack levels required when called:   12
 11810 ;; This function calls:
 11811 ;;		_USBTransferOnePacket
 11812 ;; This function is called by:
 11813 ;;		_UsbDevice_MainTask
 11814 ;; This function uses a non-reentrant model
 11815 ;;
 11816                           
 11817                           	psect	text51
 11818  001E84                     __ptext51:
 11819                           	opt stack 0
 11820  001E84                     _CDCTxService:
 11821                           	opt stack 15
 11822                           
 11823                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 11824                           ;usb_device_cdc.c: 842: uint8_t i;
 11825                           ;usb_device_cdc.c: 844: ;
 11826                           ;usb_device_cdc.c: 846: {};
 11827                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 11828                           
 11829                           ; BSR set to: 0
 11830                           ;incstack = 0
 11831  001E84  0101               	movlb	1	; () banked
 11832  001E86  5140               	movf	_CDCDataInHandle& (0+255),w,b
 11833  001E88  1141               	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 11834  001E8A  B4D8               	btfsc	status,2,c
 11835  001E8C  D006               	goto	l1689
 11836                           
 11837                           ; BSR set to: 1
 11838  001E8E  C140  FFD9         	movff	_CDCDataInHandle,fsr2l
 11839  001E92  C141  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 11840  001E96  BEDF               	btfsc	indf2,7,c
 11841  001E98  0012               	return	
 11842  001E9A                     l1689:
 11843                           
 11844                           ; BSR set to: 1
 11845                           ;usb_device_cdc.c: 852: }
 11846                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 11847                           
 11848                           ; BSR set to: 1
 11849  001E9A  0E03               	movlw	3
 11850  001E9C  0100               	movlb	0	; () banked
 11851  001E9E  19FB               	xorwf	_cdc_trf_state& (0+255),w,b
 11852  001EA0  A4D8               	btfss	status,2,c
 11853  001EA2  D002               	goto	l1691
 11854                           
 11855                           ; BSR set to: 0
 11856                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 11857  001EA4  0E00               	movlw	0
 11858  001EA6  6FFB               	movwf	_cdc_trf_state& (0+255),b
 11859  001EA8                     l1691:
 11860                           
 11861                           ; BSR set to: 0
 11862                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 11863  001EA8  51FB               	movf	_cdc_trf_state& (0+255),w,b
 11864  001EAA  B4D8               	btfsc	status,2,c
 11865  001EAC  0012               	return	
 11866                           
 11867                           ; BSR set to: 0
 11868                           ;usb_device_cdc.c: 869: }
 11869                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 11870                           
 11871                           ; BSR set to: 0
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;usb_device_cdc.c: 866: {
 11875                           ;usb_device_cdc.c: 867: ;
 11876                           ;usb_device_cdc.c: 868: return;
 11877  001EAE  0E02               	movlw	2
 11878  001EB0  19FB               	xorwf	_cdc_trf_state& (0+255),w,b
 11879  001EB2  A4D8               	btfss	status,2,c
 11880  001EB4  D013               	goto	l1693
 11881                           
 11882                           ; BSR set to: 0
 11883                           ;usb_device_cdc.c: 875: {
 11884                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 11885  001EB6  0E01               	movlw	1
 11886  001EB8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 11887  001EBA  0E00               	movlw	0
 11888  001EBC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 11889  001EBE  0E00               	movlw	0
 11890  001EC0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11891  001EC2  0E00               	movlw	0
 11892  001EC4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 11893  001EC6  0E02               	movlw	2
 11894  001EC8  ECD0  F017         	call	_USBTransferOnePacket
 11895  001ECC  C060  F140         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11896  001ED0  C061  F141         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11897                           
 11898                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 11899  001ED4  0E03               	movlw	3
 11900  001ED6  0100               	movlb	0	; () banked
 11901  001ED8  6FFB               	movwf	_cdc_trf_state& (0+255),b
 11902                           
 11903                           ;usb_device_cdc.c: 879: }
 11904  001EDA  0012               	return	
 11905  001EDC                     l1693:
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 11909                           
 11910                           ; BSR set to: 0
 11911  001EDC  05FB               	decf	_cdc_trf_state& (0+255),w,b
 11912  001EDE  A4D8               	btfss	status,2,c
 11913  001EE0  0012               	return	
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;usb_device_cdc.c: 881: {
 11917                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 11918  001EE2  0E40               	movlw	64
 11919  001EE4  6446               	cpfsgt	_cdc_tx_len,c
 11920  001EE6  D003               	goto	l1696
 11921                           
 11922                           ; BSR set to: 0
 11923                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 11924  001EE8  0E40               	movlw	64
 11925  001EEA  6F68               	movwf	CDCTxService@byte_to_send& (0+255),b
 11926  001EEC  D002               	goto	l1697
 11927  001EEE                     l1696:
 11928                           
 11929                           ; BSR set to: 0
 11930                           ;usb_device_cdc.c: 887: else
 11931                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 11932  001EEE  C046  F068         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 11933  001EF2                     l1697:
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 11937                           
 11938                           ; BSR set to: 0
 11939  001EF2  5168               	movf	CDCTxService@byte_to_send& (0+255),w,b
 11940  001EF4  0800               	sublw	0
 11941  001EF6  2446               	addwf	_cdc_tx_len,w,c
 11942  001EF8  6E46               	movwf	_cdc_tx_len,c
 11943                           
 11944                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 11945  001EFA  0EA4               	movlw	low _cdc_data_tx
 11946  001EFC  0101               	movlb	1	; () banked
 11947  001EFE  6F32               	movwf	_pCDCDst& (0+255),b
 11948  001F00  0E04               	movlw	high _cdc_data_tx
 11949  001F02  6F33               	movwf	(_pCDCDst+1)& (0+255),b
 11950                           
 11951                           ; BSR set to: 1
 11952                           ;usb_device_cdc.c: 897: i = byte_to_send;
 11953  001F04  C068  F067         	movff	CDCTxService@byte_to_send,CDCTxService@i
 11954                           
 11955                           ; BSR set to: 1
 11956                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 11957  001F08  515C               	movf	_cdc_mem_type& (0+255),w,b
 11958  001F0A  B4D8               	btfsc	status,2,c
 11959  001F0C  D01D               	goto	l1699
 11960  001F0E  D03D               	goto	l1703
 11961  001F10                     
 11962                           ;usb_device_cdc.c: 901: {
 11963                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 11964                           
 11965                           ; BSR set to: 1
 11966  001F10  C135  FFF6         	movff	_pCDCSrc,tblptrl
 11967  001F14  C136  FFF7         	movff	_pCDCSrc+1,tblptrh
 11968  001F18  6AF8               	clrf	tblptru,c
 11969  001F1A  C132  FFD9         	movff	_pCDCDst,fsr2l
 11970  001F1E  C133  FFDA         	movff	_pCDCDst+1,fsr2h
 11971  001F22  0E0E               	movlw	(high __ramtop+-1)
 11972  001F24  64F7               	cpfsgt	tblptrh,c
 11973  001F26  D003               	bra	u7547
 11974  001F28  0008               	tblrd		*
 11975  001F2A  50F5               	movf	tablat,w,c
 11976  001F2C  D005               	bra	u7540
 11977  001F2E                     u7547:
 11978  001F2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 11979  001F32  CFF7 FFEA          	movff	tblptrh,fsr0h
 11980  001F36  50EF               	movf	indf0,w,c
 11981  001F38                     u7540:
 11982  001F38  6EDF               	movwf	indf2,c
 11983                           
 11984                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 11985  001F3A  0101               	movlb	1	; () banked
 11986  001F3C  4B32               	infsnz	_pCDCDst& (0+255),f,b
 11987  001F3E  2B33               	incf	(_pCDCDst+1)& (0+255),f,b
 11988                           
 11989                           ; BSR set to: 1
 11990                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 11991  001F40  4B35               	infsnz	_pCDCSrc& (0+255),f,b
 11992  001F42  2B36               	incf	(_pCDCSrc+1)& (0+255),f,b
 11993                           
 11994                           ; BSR set to: 1
 11995                           ;usb_device_cdc.c: 905: i--;
 11996  001F44  0100               	movlb	0	; () banked
 11997  001F46  0767               	decf	CDCTxService@i& (0+255),f,b
 11998  001F48                     l1699:
 11999                           
 12000                           ; BSR set to: 0
 12001  001F48  0100               	movlb	0	; () banked
 12002  001F4A  5167               	movf	CDCTxService@i& (0+255),w,b
 12003  001F4C  B4D8               	btfsc	status,2,c
 12004  001F4E  D021               	goto	u7570
 12005  001F50  D7DF               	goto	l1700
 12006  001F52                     
 12007                           ; BSR set to: 0
 12008                           ;usb_device_cdc.c: 911: {
 12009                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 12010                           
 12011                           ; BSR set to: 0
 12012  001F52  C135  FFF6         	movff	_pCDCSrc,tblptrl
 12013  001F56  C136  FFF7         	movff	_pCDCSrc+1,tblptrh
 12014  001F5A  6AF8               	clrf	tblptru,c
 12015  001F5C  C132  FFD9         	movff	_pCDCDst,fsr2l
 12016  001F60  C133  FFDA         	movff	_pCDCDst+1,fsr2h
 12017  001F64  0E0E               	movlw	(high __ramtop+-1)
 12018  001F66  64F7               	cpfsgt	tblptrh,c
 12019  001F68  D003               	bra	u7567
 12020  001F6A  0008               	tblrd		*
 12021  001F6C  50F5               	movf	tablat,w,c
 12022  001F6E  D005               	bra	u7560
 12023  001F70                     u7567:
 12024  001F70  CFF6 FFE9          	movff	tblptrl,fsr0l
 12025  001F74  CFF7 FFEA          	movff	tblptrh,fsr0h
 12026  001F78  50EF               	movf	indf0,w,c
 12027  001F7A                     u7560:
 12028  001F7A  6EDF               	movwf	indf2,c
 12029                           
 12030                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 12031  001F7C  0101               	movlb	1	; () banked
 12032  001F7E  4B32               	infsnz	_pCDCDst& (0+255),f,b
 12033  001F80  2B33               	incf	(_pCDCDst+1)& (0+255),f,b
 12034                           
 12035                           ; BSR set to: 1
 12036                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 12037  001F82  4B35               	infsnz	_pCDCSrc& (0+255),f,b
 12038  001F84  2B36               	incf	(_pCDCSrc+1)& (0+255),f,b
 12039                           
 12040                           ; BSR set to: 1
 12041                           ;usb_device_cdc.c: 915: i--;
 12042  001F86  0100               	movlb	0	; () banked
 12043  001F88  0767               	decf	CDCTxService@i& (0+255),f,b
 12044  001F8A                     l1703:
 12045                           
 12046                           ; BSR set to: 0
 12047  001F8A  0100               	movlb	0	; () banked
 12048  001F8C  5167               	movf	CDCTxService@i& (0+255),w,b
 12049  001F8E  A4D8               	btfss	status,2,c
 12050  001F90  D7E0               	goto	l1704
 12051  001F92                     u7570:
 12052                           
 12053                           ; BSR set to: 0
 12054                           ;usb_device_cdc.c: 916: }
 12055                           ;usb_device_cdc.c: 917: }
 12056                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 12057                           
 12058                           ; BSR set to: 0
 12059                           
 12060                           ; BSR set to: 0
 12061  001F92  5046               	movf	_cdc_tx_len,w,c
 12062  001F94  A4D8               	btfss	status,2,c
 12063  001F96  D008               	goto	l1708
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;usb_device_cdc.c: 924: {
 12067                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 12068  001F98  0E40               	movlw	64
 12069  001F9A  1968               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 12070  001F9C  A4D8               	btfss	status,2,c
 12071  001F9E  D002               	goto	l1707
 12072                           
 12073                           ; BSR set to: 0
 12074                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 12075  001FA0  0E02               	movlw	2
 12076  001FA2  D001               	goto	L13
 12077  001FA4                     l1707:
 12078                           
 12079                           ; BSR set to: 0
 12080                           ;usb_device_cdc.c: 927: else
 12081                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 12082                           
 12083                           ; BSR set to: 0
 12084  001FA4  0E03               	movlw	3
 12085  001FA6                     L13:
 12086  001FA6  6FFB               	movwf	_cdc_trf_state& (0+255),b
 12087  001FA8                     l1708:
 12088                           
 12089                           ; BSR set to: 0
 12090                           ;usb_device_cdc.c: 929: }
 12091                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 12092                           
 12093                           ; BSR set to: 0
 12094                           
 12095                           ; BSR set to: 0
 12096  001FA8  0E01               	movlw	1
 12097  001FAA  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 12098  001FAC  0EA4               	movlw	low _cdc_data_tx
 12099  001FAE  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 12100  001FB0  0E04               	movlw	high _cdc_data_tx
 12101  001FB2  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12102  001FB4  C068  F063         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 12103  001FB8  0E02               	movlw	2
 12104  001FBA  ECD0  F017         	call	_USBTransferOnePacket
 12105  001FBE  C060  F140         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12106  001FC2  C061  F141         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12107  001FC6  0012               	return	
 12108  001FC8                     __end_of_CDCTxService:
 12109                           	opt stack 0
 12110                           tosu	equ	0xFFF
 12111                           tosh	equ	0xFFE
 12112                           tosl	equ	0xFFD
 12113                           pclath	equ	0xFFA
 12114                           tblptru	equ	0xFF8
 12115                           tblptrh	equ	0xFF7
 12116                           tblptrl	equ	0xFF6
 12117                           tablat	equ	0xFF5
 12118                           prodh	equ	0xFF4
 12119                           prodl	equ	0xFF3
 12120                           intcon	equ	0xFF2
 12121                           intcon2	equ	0xFF1
 12122                           intcon3	equ	0xFF0
 12123                           indf0	equ	0xFEF
 12124                           postinc0	equ	0xFEE
 12125                           plusw0	equ	0xFEB
 12126                           fsr0h	equ	0xFEA
 12127                           fsr0l	equ	0xFE9
 12128                           wreg	equ	0xFE8
 12129                           indf1	equ	0xFE7
 12130                           postinc1	equ	0xFE6
 12131                           postdec1	equ	0xFE5
 12132                           fsr1h	equ	0xFE2
 12133                           fsr1l	equ	0xFE1
 12134                           indf2	equ	0xFDF
 12135                           postinc2	equ	0xFDE
 12136                           postdec2	equ	0xFDD
 12137                           plusw2	equ	0xFDB
 12138                           fsr2h	equ	0xFDA
 12139                           fsr2l	equ	0xFD9
 12140                           status	equ	0xFD8
 12141                           
 12142 ;; *************** function _Term_MainSm *****************
 12143 ;; Defined at:
 12144 ;;		line 669 in file "../Source/c/03_Sml/02_Ssl/term.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;		None
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;  Data           50   32[BANK0 ] unsigned char [50]
 12149 ;;  FwkBuildYear    4  102[BANK0 ] unsigned char [4]
 12150 ;;  FwkBuildMont    4   98[BANK0 ] unsigned char [4]
 12151 ;;  FwkBuildDayS    4   94[BANK0 ] unsigned char [4]
 12152 ;;  FwkBuildStr     4   90[BANK0 ] unsigned char [4]
 12153 ;;  FwkMinorStr     4   86[BANK0 ] unsigned char [4]
 12154 ;;  FwkMajorStr     4   82[BANK0 ] unsigned char [4]
 12155 ;; Return value:  Size  Location     Type
 12156 ;;                  1    wreg      void 
 12157 ;; Registers used:
 12158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12159 ;; Tracked objects:
 12160 ;;		On entry : 0/0
 12161 ;;		On exit  : 0/0
 12162 ;;		Unchanged: 0/0
 12163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12165 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12167 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12168 ;;Total ram usage:       74 bytes
 12169 ;; Hardware stack levels used:    1
 12170 ;; Hardware stack levels required when called:   15
 12171 ;; This function calls:
 12172 ;;		_OsTmr_GetTimerStatus
 12173 ;;		_OsTmr_StartTimer
 12174 ;;		_Terminal
 12175 ;;		_memset
 12176 ;;		_putUSBUSART
 12177 ;;		_strcat
 12178 ;;		_strcpy
 12179 ;;		_strlen
 12180 ;;		_utoa
 12181 ;; This function is called by:
 12182 ;;		_Term_MainTask
 12183 ;; This function uses a non-reentrant model
 12184 ;;
 12185                           
 12186                           	psect	text52
 12187  0004E4                     __ptext52:
 12188                           	opt stack 0
 12189  0004E4                     _Term_MainSm:
 12190                           	opt stack 12
 12191                           
 12192                           ;term.c: 671: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 12193                           ;term.c: 672: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, };
 12194                           ;term.c: 673: UINT8 Data[50];
 12195                           ;term.c: 674: UINT8 FwkMajorStr[4];
 12196                           ;term.c: 675: UINT8 FwkMinorStr[4];
 12197                           ;term.c: 676: UINT8 FwkBuildStr[4];
 12198                           ;term.c: 677: UINT8 FwkBuildDayStr[4];
 12199                           ;term.c: 678: UINT8 FwkBuildMonthStr[4];
 12200                           ;term.c: 679: UINT8 FwkBuildYearStr[4];
 12201                           ;term.c: 681: switch (TermMainSmState)
 12202                           
 12203                           ;incstack = 0
 12204  0004E4  D1DA               	goto	l2088
 12205  0004E6                     
 12206                           ;term.c: 685: OsTmr_StartTimer(&TermDelay,2000);
 12207  0004E6  0EE2               	movlw	low Term_MainSm@TermDelay
 12208  0004E8  0100               	movlb	0	; () banked
 12209  0004EA  6F64               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 12210  0004EC  0E01               	movlw	high Term_MainSm@TermDelay
 12211  0004EE  6F65               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 12212  0004F0  0ED0               	movlw	208
 12213  0004F2  6F66               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 12214  0004F4  0E07               	movlw	7
 12215  0004F6  6F67               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 12216  0004F8  0E00               	movlw	0
 12217  0004FA  6F68               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 12218  0004FC  0E00               	movlw	0
 12219  0004FE  6F69               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 12220  000500  EC75  F020         	call	_OsTmr_StartTimer	;wreg free
 12221                           
 12222                           ;term.c: 687: TermMainSmState = Term_InitDelay;
 12223  000504  0E01               	movlw	1
 12224  000506  0101               	movlb	1	; () banked
 12225  000508  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12226                           
 12227                           ;term.c: 688: break;
 12228  00050A  0012               	return	
 12229  00050C                     
 12230                           ; BSR set to: 1
 12231                           ;term.c: 692: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 12232                           
 12233                           ; BSR set to: 1
 12234  00050C  0EE2               	movlw	low Term_MainSm@TermDelay
 12235  00050E  0100               	movlb	0	; () banked
 12236  000510  6F78               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 12237  000512  0E01               	movlw	high Term_MainSm@TermDelay
 12238  000514  6F79               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 12239  000516  EC46  F01C         	call	_OsTmr_GetTimerStatus	;wreg free
 12240  00051A  06E8               	decf	wreg,f,c
 12241  00051C  A4D8               	btfss	status,2,c
 12242  00051E  0012               	return	
 12243                           
 12244                           ;term.c: 693: {
 12245                           ;term.c: 695: TermMainSmState = Term_InitState;
 12246  000520  0E02               	movlw	2
 12247  000522  0101               	movlb	1	; () banked
 12248  000524  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12249                           
 12250                           ; BSR set to: 1
 12251                           ;term.c: 696: }
 12252                           ;term.c: 697: break;
 12253  000526  0012               	return	
 12254  000528                     
 12255                           ; BSR set to: 1
 12256                           ;term.c: 701: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 12257                           
 12258                           ; BSR set to: 1
 12259  000528  0E1F               	movlw	31
 12260  00052A  0100               	movlb	0	; () banked
 12261  00052C  65FD               	cpfsgt	_USBDeviceState& (0+255),b
 12262  00052E  0012               	return	
 12263                           
 12264                           ; BSR set to: 0
 12265  000530  B265               	btfsc	3941,1,c	;volatile
 12266  000532  0012               	return	
 12267                           
 12268                           ; BSR set to: 0
 12269                           ;term.c: 705: else
 12270                           ;term.c: 706: {
 12271                           ;term.c: 708: TermMainSmState = Term_WelcomeState;
 12272                           
 12273                           ; BSR set to: 0
 12274                           
 12275                           ; BSR set to: 0
 12276                           ;term.c: 702: {
 12277                           ;term.c: 704: }
 12278  000534  0E03               	movlw	3
 12279  000536  0101               	movlb	1	; () banked
 12280  000538  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12281                           
 12282                           ; BSR set to: 1
 12283                           ;term.c: 709: }
 12284                           ;term.c: 710: break;
 12285  00053A  0012               	return	
 12286  00053C                     
 12287                           ; BSR set to: 1
 12288                           ;term.c: 714: if((cdc_trf_state == 0))
 12289                           
 12290                           ; BSR set to: 1
 12291  00053C  0100               	movlb	0	; () banked
 12292  00053E  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12293  000540  A4D8               	btfss	status,2,c
 12294  000542  0012               	return	
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;term.c: 715: {
 12298                           ;term.c: 717: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 12299  000544  0ECD               	movlw	low _Welcome
 12300  000546  6F66               	movwf	putUSBUSART@data& (0+255),b
 12301  000548  0EFD               	movlw	high _Welcome
 12302  00054A  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12303  00054C  0E88               	movlw	136
 12304  00054E  6F68               	movwf	putUSBUSART@length& (0+255),b
 12305  000550  ECFD  F025         	call	_putUSBUSART	;wreg free
 12306                           
 12307                           ;term.c: 719: TermMainSmState = Term_InstDescState;
 12308  000554  0E04               	movlw	4
 12309  000556  0101               	movlb	1	; () banked
 12310  000558  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12311                           
 12312                           ; BSR set to: 1
 12313                           ;term.c: 720: }
 12314                           ;term.c: 721: break;
 12315  00055A  0012               	return	
 12316  00055C                     
 12317                           ; BSR set to: 1
 12318                           ;term.c: 725: if((cdc_trf_state == 0))
 12319                           
 12320                           ; BSR set to: 1
 12321  00055C  0100               	movlb	0	; () banked
 12322  00055E  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12323  000560  A4D8               	btfss	status,2,c
 12324  000562  0012               	return	
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;term.c: 726: {
 12328                           ;term.c: 728: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 12329  000564  0EE1               	movlw	low _MsgFormat
 12330  000566  6F66               	movwf	putUSBUSART@data& (0+255),b
 12331  000568  0EFC               	movlw	high _MsgFormat
 12332  00056A  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12333  00056C  0EEB               	movlw	235
 12334  00056E  6F68               	movwf	putUSBUSART@length& (0+255),b
 12335  000570  ECFD  F025         	call	_putUSBUSART	;wreg free
 12336                           
 12337                           ;term.c: 730: TermMainSmState = Term_FwkVerState;
 12338  000574  0E05               	movlw	5
 12339  000576  0101               	movlb	1	; () banked
 12340  000578  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12341                           
 12342                           ; BSR set to: 1
 12343                           ;term.c: 731: }
 12344                           ;term.c: 732: break;
 12345  00057A  0012               	return	
 12346  00057C                     
 12347                           ; BSR set to: 1
 12348                           ;term.c: 736: if((cdc_trf_state == 0))
 12349                           
 12350                           ; BSR set to: 1
 12351  00057C  0100               	movlb	0	; () banked
 12352  00057E  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12353  000580  A4D8               	btfss	status,2,c
 12354  000582  0012               	return	
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;term.c: 737: {
 12358                           ;term.c: 739: memset(Data,0,50);
 12359  000584  0E80               	movlw	low Term_MainSm@Data
 12360  000586  6F60               	movwf	memset@p1& (0+255),b
 12361  000588  0E00               	movlw	high Term_MainSm@Data
 12362  00058A  6F61               	movwf	(memset@p1+1)& (0+255),b
 12363  00058C  0E00               	movlw	0
 12364  00058E  6F63               	movwf	(memset@c+1)& (0+255),b
 12365  000590  0E00               	movlw	0
 12366  000592  6F62               	movwf	memset@c& (0+255),b
 12367  000594  0E00               	movlw	0
 12368  000596  6F65               	movwf	(memset@n+1)& (0+255),b
 12369  000598  0E32               	movlw	50
 12370  00059A  6F64               	movwf	memset@n& (0+255),b
 12371  00059C  ECF1  F024         	call	_memset	;wreg free
 12372                           
 12373                           ;term.c: 741: utoa(FwkMajorStr,1,10);
 12374  0005A0  0EB2               	movlw	low Term_MainSm@FwkMajorStr
 12375  0005A2  0100               	movlb	0	; () banked
 12376  0005A4  6F67               	movwf	utoa@buf& (0+255),b
 12377  0005A6  0E00               	movlw	high Term_MainSm@FwkMajorStr
 12378  0005A8  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12379  0005AA  0E00               	movlw	0
 12380  0005AC  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12381  0005AE  0E01               	movlw	1
 12382  0005B0  6F69               	movwf	utoa@val& (0+255),b
 12383  0005B2  0E00               	movlw	0
 12384  0005B4  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12385  0005B6  0E0A               	movlw	10
 12386  0005B8  6F6B               	movwf	utoa@base& (0+255),b
 12387  0005BA  EC8E  F019         	call	_utoa	;wreg free
 12388                           
 12389                           ;term.c: 742: utoa(FwkMinorStr,0,10);
 12390  0005BE  0EB6               	movlw	low Term_MainSm@FwkMinorStr
 12391  0005C0  0100               	movlb	0	; () banked
 12392  0005C2  6F67               	movwf	utoa@buf& (0+255),b
 12393  0005C4  0E00               	movlw	high Term_MainSm@FwkMinorStr
 12394  0005C6  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12395  0005C8  0E00               	movlw	0
 12396  0005CA  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12397  0005CC  0E00               	movlw	0
 12398  0005CE  6F69               	movwf	utoa@val& (0+255),b
 12399  0005D0  0E00               	movlw	0
 12400  0005D2  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12401  0005D4  0E0A               	movlw	10
 12402  0005D6  6F6B               	movwf	utoa@base& (0+255),b
 12403  0005D8  EC8E  F019         	call	_utoa	;wreg free
 12404                           
 12405                           ;term.c: 743: utoa(FwkBuildStr,0,10);
 12406  0005DC  0EBA               	movlw	low Term_MainSm@FwkBuildStr
 12407  0005DE  0100               	movlb	0	; () banked
 12408  0005E0  6F67               	movwf	utoa@buf& (0+255),b
 12409  0005E2  0E00               	movlw	high Term_MainSm@FwkBuildStr
 12410  0005E4  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12411  0005E6  0E00               	movlw	0
 12412  0005E8  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12413  0005EA  0E00               	movlw	0
 12414  0005EC  6F69               	movwf	utoa@val& (0+255),b
 12415  0005EE  0E00               	movlw	0
 12416  0005F0  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12417  0005F2  0E0A               	movlw	10
 12418  0005F4  6F6B               	movwf	utoa@base& (0+255),b
 12419  0005F6  EC8E  F019         	call	_utoa	;wreg free
 12420                           
 12421                           ;term.c: 744: strcpy(Data,"Framework Version: ");
 12422  0005FA  0E80               	movlw	low Term_MainSm@Data
 12423  0005FC  0100               	movlb	0	; () banked
 12424  0005FE  6F60               	movwf	strcpy@to& (0+255),b
 12425  000600  0E00               	movlw	high Term_MainSm@Data
 12426  000602  6F61               	movwf	(strcpy@to+1)& (0+255),b
 12427  000604  0E1F               	movlw	low STR_58
 12428  000606  6F62               	movwf	strcpy@from& (0+255),b
 12429  000608  0EFF               	movlw	high STR_58
 12430  00060A  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12431  00060C  ECB3  F022         	call	_strcpy	;wreg free
 12432                           
 12433                           ;term.c: 745: strcat(Data,FwkMajorStr);
 12434  000610  0E80               	movlw	low Term_MainSm@Data
 12435  000612  0100               	movlb	0	; () banked
 12436  000614  6F60               	movwf	strcat@to& (0+255),b
 12437  000616  0E00               	movlw	high Term_MainSm@Data
 12438  000618  6F61               	movwf	(strcat@to+1)& (0+255),b
 12439  00061A  0EB2               	movlw	low Term_MainSm@FwkMajorStr
 12440  00061C  6F62               	movwf	strcat@from& (0+255),b
 12441  00061E  0E00               	movlw	high Term_MainSm@FwkMajorStr
 12442  000620  6F63               	movwf	(strcat@from+1)& (0+255),b
 12443  000622  5162               	movf	strcat@from& (0+255),w,b
 12444  000624  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12445  000626  A4D8               	btfss	status,2,c
 12446  000628  0E20               	movlw	32
 12447  00062A  6F64               	movwf	(strcat@from+2)& (0+255),b
 12448  00062C  ECE3  F01F         	call	_strcat	;wreg free
 12449                           
 12450                           ;term.c: 746: strcat(Data,".");
 12451  000630  0E80               	movlw	low Term_MainSm@Data
 12452  000632  0100               	movlb	0	; () banked
 12453  000634  6F60               	movwf	strcat@to& (0+255),b
 12454  000636  0E00               	movlw	high Term_MainSm@Data
 12455  000638  6F61               	movwf	(strcat@to+1)& (0+255),b
 12456  00063A  0EEB               	movlw	low STR_59
 12457  00063C  6F62               	movwf	strcat@from& (0+255),b
 12458  00063E  0EFF               	movlw	high STR_59
 12459  000640  6F63               	movwf	(strcat@from+1)& (0+255),b
 12460  000642  5162               	movf	strcat@from& (0+255),w,b
 12461  000644  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12462  000646  A4D8               	btfss	status,2,c
 12463  000648  0E00               	movlw	low (__mediumconst shr (0+16))
 12464  00064A  6F64               	movwf	(strcat@from+2)& (0+255),b
 12465  00064C  ECE3  F01F         	call	_strcat	;wreg free
 12466                           
 12467                           ;term.c: 747: strcat(Data,FwkMinorStr);
 12468  000650  0E80               	movlw	low Term_MainSm@Data
 12469  000652  0100               	movlb	0	; () banked
 12470  000654  6F60               	movwf	strcat@to& (0+255),b
 12471  000656  0E00               	movlw	high Term_MainSm@Data
 12472  000658  6F61               	movwf	(strcat@to+1)& (0+255),b
 12473  00065A  0EB6               	movlw	low Term_MainSm@FwkMinorStr
 12474  00065C  6F62               	movwf	strcat@from& (0+255),b
 12475  00065E  0E00               	movlw	high Term_MainSm@FwkMinorStr
 12476  000660  6F63               	movwf	(strcat@from+1)& (0+255),b
 12477  000662  5162               	movf	strcat@from& (0+255),w,b
 12478  000664  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12479  000666  A4D8               	btfss	status,2,c
 12480  000668  0E20               	movlw	32
 12481  00066A  6F64               	movwf	(strcat@from+2)& (0+255),b
 12482  00066C  ECE3  F01F         	call	_strcat	;wreg free
 12483                           
 12484                           ;term.c: 748: strcat(Data,".");
 12485  000670  0E80               	movlw	low Term_MainSm@Data
 12486  000672  0100               	movlb	0	; () banked
 12487  000674  6F60               	movwf	strcat@to& (0+255),b
 12488  000676  0E00               	movlw	high Term_MainSm@Data
 12489  000678  6F61               	movwf	(strcat@to+1)& (0+255),b
 12490  00067A  0EEB               	movlw	low STR_59
 12491  00067C  6F62               	movwf	strcat@from& (0+255),b
 12492  00067E  0EFF               	movlw	high STR_59
 12493  000680  6F63               	movwf	(strcat@from+1)& (0+255),b
 12494  000682  5162               	movf	strcat@from& (0+255),w,b
 12495  000684  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12496  000686  A4D8               	btfss	status,2,c
 12497  000688  0E00               	movlw	low (__mediumconst shr (0+16))
 12498  00068A  6F64               	movwf	(strcat@from+2)& (0+255),b
 12499  00068C  ECE3  F01F         	call	_strcat	;wreg free
 12500                           
 12501                           ;term.c: 749: strcat(Data,FwkBuildStr);
 12502  000690  0E80               	movlw	low Term_MainSm@Data
 12503  000692  0100               	movlb	0	; () banked
 12504  000694  6F60               	movwf	strcat@to& (0+255),b
 12505  000696  0E00               	movlw	high Term_MainSm@Data
 12506  000698  6F61               	movwf	(strcat@to+1)& (0+255),b
 12507  00069A  0EBA               	movlw	low Term_MainSm@FwkBuildStr
 12508  00069C  6F62               	movwf	strcat@from& (0+255),b
 12509  00069E  0E00               	movlw	high Term_MainSm@FwkBuildStr
 12510  0006A0  6F63               	movwf	(strcat@from+1)& (0+255),b
 12511  0006A2  5162               	movf	strcat@from& (0+255),w,b
 12512  0006A4  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12513  0006A6  A4D8               	btfss	status,2,c
 12514  0006A8  0E20               	movlw	32
 12515  0006AA  6F64               	movwf	(strcat@from+2)& (0+255),b
 12516  0006AC  ECE3  F01F         	call	_strcat	;wreg free
 12517                           
 12518                           ;term.c: 750: strcat(Data,"\r\n");
 12519  0006B0  0E80               	movlw	low Term_MainSm@Data
 12520  0006B2  0100               	movlb	0	; () banked
 12521  0006B4  6F60               	movwf	strcat@to& (0+255),b
 12522  0006B6  0E00               	movlw	high Term_MainSm@Data
 12523  0006B8  6F61               	movwf	(strcat@to+1)& (0+255),b
 12524  0006BA  0E87               	movlw	low (STR_31+8)
 12525  0006BC  6F62               	movwf	strcat@from& (0+255),b
 12526  0006BE  0EFF               	movlw	high (STR_31+8)
 12527  0006C0  6F63               	movwf	(strcat@from+1)& (0+255),b
 12528  0006C2  5162               	movf	strcat@from& (0+255),w,b
 12529  0006C4  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12530  0006C6  A4D8               	btfss	status,2,c
 12531  0006C8  0E00               	movlw	low (__mediumconst shr (0+16))
 12532  0006CA  6F64               	movwf	(strcat@from+2)& (0+255),b
 12533  0006CC  ECE3  F01F         	call	_strcat	;wreg free
 12534                           
 12535                           ;term.c: 752: putUSBUSART((void*)Data,strlen(Data));
 12536  0006D0  0E80               	movlw	low Term_MainSm@Data
 12537  0006D2  0100               	movlb	0	; () banked
 12538  0006D4  6F66               	movwf	putUSBUSART@data& (0+255),b
 12539  0006D6  0E00               	movlw	high Term_MainSm@Data
 12540  0006D8  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12541  0006DA  0E80               	movlw	low Term_MainSm@Data
 12542  0006DC  6F60               	movwf	strlen@s& (0+255),b
 12543  0006DE  0E00               	movlw	high Term_MainSm@Data
 12544  0006E0  6F61               	movwf	(strlen@s+1)& (0+255),b
 12545  0006E2  EC28  F021         	call	_strlen	;wreg free
 12546  0006E6  0100               	movlb	0	; () banked
 12547  0006E8  5160               	movf	?_strlen& (0+255),w,b
 12548  0006EA  6F68               	movwf	putUSBUSART@length& (0+255),b
 12549  0006EC  ECFD  F025         	call	_putUSBUSART	;wreg free
 12550                           
 12551                           ;term.c: 754: TermMainSmState = Term_FwkBuildDateState;
 12552  0006F0  0E06               	movlw	6
 12553  0006F2  0101               	movlb	1	; () banked
 12554  0006F4  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12555                           
 12556                           ; BSR set to: 1
 12557                           ;term.c: 755: }
 12558                           ;term.c: 756: break;
 12559  0006F6  0012               	return	
 12560  0006F8                     
 12561                           ; BSR set to: 1
 12562                           ;term.c: 760: if((cdc_trf_state == 0))
 12563                           
 12564                           ; BSR set to: 1
 12565  0006F8  0100               	movlb	0	; () banked
 12566  0006FA  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12567  0006FC  A4D8               	btfss	status,2,c
 12568  0006FE  0012               	return	
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;term.c: 761: {
 12572                           ;term.c: 763: memset(Data,0,50);
 12573  000700  0E80               	movlw	low Term_MainSm@Data
 12574  000702  6F60               	movwf	memset@p1& (0+255),b
 12575  000704  0E00               	movlw	high Term_MainSm@Data
 12576  000706  6F61               	movwf	(memset@p1+1)& (0+255),b
 12577  000708  0E00               	movlw	0
 12578  00070A  6F63               	movwf	(memset@c+1)& (0+255),b
 12579  00070C  0E00               	movlw	0
 12580  00070E  6F62               	movwf	memset@c& (0+255),b
 12581  000710  0E00               	movlw	0
 12582  000712  6F65               	movwf	(memset@n+1)& (0+255),b
 12583  000714  0E32               	movlw	50
 12584  000716  6F64               	movwf	memset@n& (0+255),b
 12585  000718  ECF1  F024         	call	_memset	;wreg free
 12586                           
 12587                           ;term.c: 765: utoa(FwkBuildDayStr,07,10);
 12588  00071C  0EBE               	movlw	low Term_MainSm@FwkBuildDayStr
 12589  00071E  0100               	movlb	0	; () banked
 12590  000720  6F67               	movwf	utoa@buf& (0+255),b
 12591  000722  0E00               	movlw	high Term_MainSm@FwkBuildDayStr
 12592  000724  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12593  000726  0E00               	movlw	0
 12594  000728  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12595  00072A  0E07               	movlw	7
 12596  00072C  6F69               	movwf	utoa@val& (0+255),b
 12597  00072E  0E00               	movlw	0
 12598  000730  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12599  000732  0E0A               	movlw	10
 12600  000734  6F6B               	movwf	utoa@base& (0+255),b
 12601  000736  EC8E  F019         	call	_utoa	;wreg free
 12602                           
 12603                           ;term.c: 766: utoa(FwkBuildMonthStr,10,10);
 12604  00073A  0EC2               	movlw	low Term_MainSm@FwkBuildMonthStr
 12605  00073C  0100               	movlb	0	; () banked
 12606  00073E  6F67               	movwf	utoa@buf& (0+255),b
 12607  000740  0E00               	movlw	high Term_MainSm@FwkBuildMonthStr
 12608  000742  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12609  000744  0E00               	movlw	0
 12610  000746  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12611  000748  0E0A               	movlw	10
 12612  00074A  6F69               	movwf	utoa@val& (0+255),b
 12613  00074C  0E00               	movlw	0
 12614  00074E  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12615  000750  0E0A               	movlw	10
 12616  000752  6F6B               	movwf	utoa@base& (0+255),b
 12617  000754  EC8E  F019         	call	_utoa	;wreg free
 12618                           
 12619                           ;term.c: 767: utoa(FwkBuildYearStr,18,10);
 12620  000758  0EC6               	movlw	low Term_MainSm@FwkBuildYearStr
 12621  00075A  0100               	movlb	0	; () banked
 12622  00075C  6F67               	movwf	utoa@buf& (0+255),b
 12623  00075E  0E00               	movlw	high Term_MainSm@FwkBuildYearStr
 12624  000760  6F68               	movwf	(utoa@buf+1)& (0+255),b
 12625  000762  0E00               	movlw	0
 12626  000764  6F6A               	movwf	(utoa@val+1)& (0+255),b
 12627  000766  0E12               	movlw	18
 12628  000768  6F69               	movwf	utoa@val& (0+255),b
 12629  00076A  0E00               	movlw	0
 12630  00076C  6F6C               	movwf	(utoa@base+1)& (0+255),b
 12631  00076E  0E0A               	movlw	10
 12632  000770  6F6B               	movwf	utoa@base& (0+255),b
 12633  000772  EC8E  F019         	call	_utoa	;wreg free
 12634                           
 12635                           ;term.c: 768: strcpy(Data,"Build Date (d-m-y): ");
 12636  000776  0E80               	movlw	low Term_MainSm@Data
 12637  000778  0100               	movlb	0	; () banked
 12638  00077A  6F60               	movwf	strcpy@to& (0+255),b
 12639  00077C  0E00               	movlw	high Term_MainSm@Data
 12640  00077E  6F61               	movwf	(strcpy@to+1)& (0+255),b
 12641  000780  0E0A               	movlw	low STR_62
 12642  000782  6F62               	movwf	strcpy@from& (0+255),b
 12643  000784  0EFF               	movlw	high STR_62
 12644  000786  6F63               	movwf	(strcpy@from+1)& (0+255),b
 12645  000788  ECB3  F022         	call	_strcpy	;wreg free
 12646                           
 12647                           ;term.c: 769: strcat(Data,FwkBuildDayStr);
 12648  00078C  0E80               	movlw	low Term_MainSm@Data
 12649  00078E  0100               	movlb	0	; () banked
 12650  000790  6F60               	movwf	strcat@to& (0+255),b
 12651  000792  0E00               	movlw	high Term_MainSm@Data
 12652  000794  6F61               	movwf	(strcat@to+1)& (0+255),b
 12653  000796  0EBE               	movlw	low Term_MainSm@FwkBuildDayStr
 12654  000798  6F62               	movwf	strcat@from& (0+255),b
 12655  00079A  0E00               	movlw	high Term_MainSm@FwkBuildDayStr
 12656  00079C  6F63               	movwf	(strcat@from+1)& (0+255),b
 12657  00079E  5162               	movf	strcat@from& (0+255),w,b
 12658  0007A0  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12659  0007A2  A4D8               	btfss	status,2,c
 12660  0007A4  0E20               	movlw	32
 12661  0007A6  6F64               	movwf	(strcat@from+2)& (0+255),b
 12662  0007A8  ECE3  F01F         	call	_strcat	;wreg free
 12663                           
 12664                           ;term.c: 770: strcat(Data,"-");
 12665  0007AC  0E80               	movlw	low Term_MainSm@Data
 12666  0007AE  0100               	movlb	0	; () banked
 12667  0007B0  6F60               	movwf	strcat@to& (0+255),b
 12668  0007B2  0E00               	movlw	high Term_MainSm@Data
 12669  0007B4  6F61               	movwf	(strcat@to+1)& (0+255),b
 12670  0007B6  0EE9               	movlw	low STR_63
 12671  0007B8  6F62               	movwf	strcat@from& (0+255),b
 12672  0007BA  0EFF               	movlw	high STR_63
 12673  0007BC  6F63               	movwf	(strcat@from+1)& (0+255),b
 12674  0007BE  5162               	movf	strcat@from& (0+255),w,b
 12675  0007C0  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12676  0007C2  A4D8               	btfss	status,2,c
 12677  0007C4  0E00               	movlw	low (__mediumconst shr (0+16))
 12678  0007C6  6F64               	movwf	(strcat@from+2)& (0+255),b
 12679  0007C8  ECE3  F01F         	call	_strcat	;wreg free
 12680                           
 12681                           ;term.c: 771: strcat(Data,FwkBuildMonthStr);
 12682  0007CC  0E80               	movlw	low Term_MainSm@Data
 12683  0007CE  0100               	movlb	0	; () banked
 12684  0007D0  6F60               	movwf	strcat@to& (0+255),b
 12685  0007D2  0E00               	movlw	high Term_MainSm@Data
 12686  0007D4  6F61               	movwf	(strcat@to+1)& (0+255),b
 12687  0007D6  0EC2               	movlw	low Term_MainSm@FwkBuildMonthStr
 12688  0007D8  6F62               	movwf	strcat@from& (0+255),b
 12689  0007DA  0E00               	movlw	high Term_MainSm@FwkBuildMonthStr
 12690  0007DC  6F63               	movwf	(strcat@from+1)& (0+255),b
 12691  0007DE  5162               	movf	strcat@from& (0+255),w,b
 12692  0007E0  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12693  0007E2  A4D8               	btfss	status,2,c
 12694  0007E4  0E20               	movlw	32
 12695  0007E6  6F64               	movwf	(strcat@from+2)& (0+255),b
 12696  0007E8  ECE3  F01F         	call	_strcat	;wreg free
 12697                           
 12698                           ;term.c: 772: strcat(Data,"-");
 12699  0007EC  0E80               	movlw	low Term_MainSm@Data
 12700  0007EE  0100               	movlb	0	; () banked
 12701  0007F0  6F60               	movwf	strcat@to& (0+255),b
 12702  0007F2  0E00               	movlw	high Term_MainSm@Data
 12703  0007F4  6F61               	movwf	(strcat@to+1)& (0+255),b
 12704  0007F6  0EE9               	movlw	low STR_63
 12705  0007F8  6F62               	movwf	strcat@from& (0+255),b
 12706  0007FA  0EFF               	movlw	high STR_63
 12707  0007FC  6F63               	movwf	(strcat@from+1)& (0+255),b
 12708  0007FE  5162               	movf	strcat@from& (0+255),w,b
 12709  000800  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12710  000802  A4D8               	btfss	status,2,c
 12711  000804  0E00               	movlw	low (__mediumconst shr (0+16))
 12712  000806  6F64               	movwf	(strcat@from+2)& (0+255),b
 12713  000808  ECE3  F01F         	call	_strcat	;wreg free
 12714                           
 12715                           ;term.c: 773: strcat(Data,FwkBuildYearStr);
 12716  00080C  0E80               	movlw	low Term_MainSm@Data
 12717  00080E  0100               	movlb	0	; () banked
 12718  000810  6F60               	movwf	strcat@to& (0+255),b
 12719  000812  0E00               	movlw	high Term_MainSm@Data
 12720  000814  6F61               	movwf	(strcat@to+1)& (0+255),b
 12721  000816  0EC6               	movlw	low Term_MainSm@FwkBuildYearStr
 12722  000818  6F62               	movwf	strcat@from& (0+255),b
 12723  00081A  0E00               	movlw	high Term_MainSm@FwkBuildYearStr
 12724  00081C  6F63               	movwf	(strcat@from+1)& (0+255),b
 12725  00081E  5162               	movf	strcat@from& (0+255),w,b
 12726  000820  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12727  000822  A4D8               	btfss	status,2,c
 12728  000824  0E20               	movlw	32
 12729  000826  6F64               	movwf	(strcat@from+2)& (0+255),b
 12730  000828  ECE3  F01F         	call	_strcat	;wreg free
 12731                           
 12732                           ;term.c: 774: strcat(Data,"\r\n");
 12733  00082C  0E80               	movlw	low Term_MainSm@Data
 12734  00082E  0100               	movlb	0	; () banked
 12735  000830  6F60               	movwf	strcat@to& (0+255),b
 12736  000832  0E00               	movlw	high Term_MainSm@Data
 12737  000834  6F61               	movwf	(strcat@to+1)& (0+255),b
 12738  000836  0E87               	movlw	low (STR_31+8)
 12739  000838  6F62               	movwf	strcat@from& (0+255),b
 12740  00083A  0EFF               	movlw	high (STR_31+8)
 12741  00083C  6F63               	movwf	(strcat@from+1)& (0+255),b
 12742  00083E  5162               	movf	strcat@from& (0+255),w,b
 12743  000840  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 12744  000842  A4D8               	btfss	status,2,c
 12745  000844  0E00               	movlw	low (__mediumconst shr (0+16))
 12746  000846  6F64               	movwf	(strcat@from+2)& (0+255),b
 12747  000848  ECE3  F01F         	call	_strcat	;wreg free
 12748                           
 12749                           ;term.c: 776: putUSBUSART((void*)Data,strlen(Data));
 12750  00084C  0E80               	movlw	low Term_MainSm@Data
 12751  00084E  0100               	movlb	0	; () banked
 12752  000850  6F66               	movwf	putUSBUSART@data& (0+255),b
 12753  000852  0E00               	movlw	high Term_MainSm@Data
 12754  000854  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12755  000856  0E80               	movlw	low Term_MainSm@Data
 12756  000858  6F60               	movwf	strlen@s& (0+255),b
 12757  00085A  0E00               	movlw	high Term_MainSm@Data
 12758  00085C  6F61               	movwf	(strlen@s+1)& (0+255),b
 12759  00085E  EC28  F021         	call	_strlen	;wreg free
 12760  000862  0100               	movlb	0	; () banked
 12761  000864  5160               	movf	?_strlen& (0+255),w,b
 12762  000866  6F68               	movwf	putUSBUSART@length& (0+255),b
 12763  000868  ECFD  F025         	call	_putUSBUSART	;wreg free
 12764                           
 12765                           ;term.c: 778: TermMainSmState = Term_SysInitState;
 12766  00086C  0E07               	movlw	7
 12767  00086E  0101               	movlb	1	; () banked
 12768  000870  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12769                           
 12770                           ; BSR set to: 1
 12771                           ;term.c: 779: }
 12772                           ;term.c: 780: break;
 12773  000872  0012               	return	
 12774  000874                     
 12775                           ; BSR set to: 1
 12776                           ;term.c: 784: if((cdc_trf_state == 0))
 12777                           
 12778                           ; BSR set to: 1
 12779  000874  0100               	movlb	0	; () banked
 12780  000876  51FB               	movf	_cdc_trf_state& (0+255),w,b
 12781  000878  A4D8               	btfss	status,2,c
 12782  00087A  0012               	return	
 12783                           
 12784                           ; BSR set to: 0
 12785                           ;term.c: 785: {
 12786                           ;term.c: 787: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 12787  00087C  0EDD               	movlw	low _MsgReady
 12788  00087E  6F66               	movwf	putUSBUSART@data& (0+255),b
 12789  000880  0EFE               	movlw	high _MsgReady
 12790  000882  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 12791  000884  0E16               	movlw	22
 12792  000886  6F68               	movwf	putUSBUSART@length& (0+255),b
 12793  000888  ECFD  F025         	call	_putUSBUSART	;wreg free
 12794                           
 12795                           ;term.c: 789: TermMainSmState = Term_FinalState;
 12796  00088C  0E08               	movlw	8
 12797  00088E  0101               	movlb	1	; () banked
 12798  000890  6F56               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12799                           
 12800                           ; BSR set to: 1
 12801                           ;term.c: 790: }
 12802                           ;term.c: 791: break;
 12803  000892  0012               	return	
 12804  000894                     
 12805                           ; BSR set to: 1
 12806                           ;term.c: 795: Terminal();
 12807                           
 12808                           ; BSR set to: 1
 12809  000894  EC68  F000         	call	_Terminal	;wreg free
 12810                           
 12811                           ;term.c: 800: }
 12812                           
 12813                           ;term.c: 799: break;
 12814                           
 12815                           ;term.c: 798: default:
 12816                           
 12817                           ;term.c: 796: break;
 12818  000898  0012               	return	
 12819  00089A                     l2088:
 12820  00089A  0101               	movlb	1	; () banked
 12821  00089C  5156               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 12822                           
 12823                           ; Switch size 1, requested type "space"
 12824                           ; Number of cases is 9, Range of values is 0 to 8
 12825                           ; switch strategies available:
 12826                           ; Name         Instructions Cycles
 12827                           ; simple_byte           28    15 (average)
 12828                           ;	Chosen strategy is simple_byte
 12829  00089E  0A00               	xorlw	0	; case 0
 12830  0008A0  B4D8               	btfsc	status,2,c
 12831  0008A2  D621               	goto	l2089
 12832  0008A4  0A01               	xorlw	1	; case 1
 12833  0008A6  B4D8               	btfsc	status,2,c
 12834  0008A8  D631               	goto	l2091
 12835  0008AA  0A03               	xorlw	3	; case 2
 12836  0008AC  B4D8               	btfsc	status,2,c
 12837  0008AE  D63C               	goto	l2093
 12838  0008B0  0A01               	xorlw	1	; case 3
 12839  0008B2  B4D8               	btfsc	status,2,c
 12840  0008B4  D643               	goto	l2098
 12841  0008B6  0A07               	xorlw	7	; case 4
 12842  0008B8  B4D8               	btfsc	status,2,c
 12843  0008BA  D650               	goto	l2100
 12844  0008BC  0A01               	xorlw	1	; case 5
 12845  0008BE  B4D8               	btfsc	status,2,c
 12846  0008C0  D65D               	goto	l2102
 12847  0008C2  0A03               	xorlw	3	; case 6
 12848  0008C4  B4D8               	btfsc	status,2,c
 12849  0008C6  D718               	goto	l2104
 12850  0008C8  0A01               	xorlw	1	; case 7
 12851  0008CA  B4D8               	btfsc	status,2,c
 12852  0008CC  D7D3               	goto	l2106
 12853  0008CE  0A0F               	xorlw	15	; case 8
 12854  0008D0  A4D8               	btfss	status,2,c
 12855  0008D2  0012               	return	
 12856  0008D4  D7DF               	goto	l2108
 12857  0008D6                     __end_of_Term_MainSm:
 12858                           	opt stack 0
 12859                           tosu	equ	0xFFF
 12860                           tosh	equ	0xFFE
 12861                           tosl	equ	0xFFD
 12862                           pclath	equ	0xFFA
 12863                           tblptru	equ	0xFF8
 12864                           tblptrh	equ	0xFF7
 12865                           tblptrl	equ	0xFF6
 12866                           tablat	equ	0xFF5
 12867                           prodh	equ	0xFF4
 12868                           prodl	equ	0xFF3
 12869                           intcon	equ	0xFF2
 12870                           intcon2	equ	0xFF1
 12871                           intcon3	equ	0xFF0
 12872                           indf0	equ	0xFEF
 12873                           postinc0	equ	0xFEE
 12874                           plusw0	equ	0xFEB
 12875                           fsr0h	equ	0xFEA
 12876                           fsr0l	equ	0xFE9
 12877                           wreg	equ	0xFE8
 12878                           indf1	equ	0xFE7
 12879                           postinc1	equ	0xFE6
 12880                           postdec1	equ	0xFE5
 12881                           fsr1h	equ	0xFE2
 12882                           fsr1l	equ	0xFE1
 12883                           indf2	equ	0xFDF
 12884                           postinc2	equ	0xFDE
 12885                           postdec2	equ	0xFDD
 12886                           plusw2	equ	0xFDB
 12887                           fsr2h	equ	0xFDA
 12888                           fsr2l	equ	0xFD9
 12889                           status	equ	0xFD8
 12890                           
 12891 ;; *************** function _memset *****************
 12892 ;; Defined at:
 12893 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 12894 ;; Parameters:    Size  Location     Type
 12895 ;;  p1              2    0[BANK0 ] PTR void 
 12896 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12897 ;;  c               2    2[BANK0 ] int 
 12898 ;;  n               2    4[BANK0 ] unsigned int 
 12899 ;; Auto vars:     Size  Location     Type
 12900 ;;  p               2    6[BANK0 ] PTR unsigned char 
 12901 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12902 ;; Return value:  Size  Location     Type
 12903 ;;                  2    0[BANK0 ] PTR void 
 12904 ;; Registers used:
 12905 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12906 ;; Tracked objects:
 12907 ;;		On entry : 0/0
 12908 ;;		On exit  : 0/0
 12909 ;;		Unchanged: 0/0
 12910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12911 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12912 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12914 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12915 ;;Total ram usage:        8 bytes
 12916 ;; Hardware stack levels used:    1
 12917 ;; Hardware stack levels required when called:   11
 12918 ;; This function calls:
 12919 ;;		Nothing
 12920 ;; This function is called by:
 12921 ;;		_USBDeviceInit
 12922 ;;		_USBStdSetCfgHandler
 12923 ;;		_Term_MainSm
 12924 ;; This function uses a non-reentrant model
 12925 ;;
 12926                           
 12927                           	psect	text53
 12928  0049E2                     __ptext53:
 12929                           	opt stack 0
 12930  0049E2                     _memset:
 12931                           	opt stack 14
 12932                           
 12933                           ;incstack = 0
 12934  0049E2  C060  F066         	movff	memset@p1,memset@p
 12935  0049E6  C061  F067         	movff	memset@p1+1,memset@p+1
 12936  0049EA  D009               	goto	l2586
 12937  0049EC                     l6490:
 12938  0049EC  C066  FFD9         	movff	memset@p,fsr2l
 12939  0049F0  C067  FFDA         	movff	memset@p+1,fsr2h
 12940  0049F4  C062  FFDF         	movff	memset@c,indf2
 12941  0049F8  0100               	movlb	0	; () banked
 12942  0049FA  4B66               	infsnz	memset@p& (0+255),f,b
 12943  0049FC  2B67               	incf	(memset@p+1)& (0+255),f,b
 12944  0049FE                     l2586:
 12945                           
 12946                           ; BSR set to: 0
 12947  0049FE  0100               	movlb	0	; () banked
 12948  004A00  0764               	decf	memset@n& (0+255),f,b
 12949  004A02  A0D8               	btfss	status,0,c
 12950  004A04  0765               	decf	(memset@n+1)& (0+255),f,b
 12951  004A06  2964               	incf	memset@n& (0+255),w,b
 12952  004A08  E1F1               	bnz	l6490
 12953  004A0A  2965               	incf	(memset@n+1)& (0+255),w,b
 12954  004A0C  B4D8               	btfsc	status,2,c
 12955  004A0E  0012               	return	
 12956  004A10  D7ED               	goto	l2587
 12957  004A12                     __end_of_memset:
 12958                           	opt stack 0
 12959                           tosu	equ	0xFFF
 12960                           tosh	equ	0xFFE
 12961                           tosl	equ	0xFFD
 12962                           pclath	equ	0xFFA
 12963                           tblptru	equ	0xFF8
 12964                           tblptrh	equ	0xFF7
 12965                           tblptrl	equ	0xFF6
 12966                           tablat	equ	0xFF5
 12967                           prodh	equ	0xFF4
 12968                           prodl	equ	0xFF3
 12969                           intcon	equ	0xFF2
 12970                           intcon2	equ	0xFF1
 12971                           intcon3	equ	0xFF0
 12972                           indf0	equ	0xFEF
 12973                           postinc0	equ	0xFEE
 12974                           plusw0	equ	0xFEB
 12975                           fsr0h	equ	0xFEA
 12976                           fsr0l	equ	0xFE9
 12977                           wreg	equ	0xFE8
 12978                           indf1	equ	0xFE7
 12979                           postinc1	equ	0xFE6
 12980                           postdec1	equ	0xFE5
 12981                           fsr1h	equ	0xFE2
 12982                           fsr1l	equ	0xFE1
 12983                           indf2	equ	0xFDF
 12984                           postinc2	equ	0xFDE
 12985                           postdec2	equ	0xFDD
 12986                           plusw2	equ	0xFDB
 12987                           fsr2h	equ	0xFDA
 12988                           fsr2l	equ	0xFD9
 12989                           status	equ	0xFD8
 12990                           
 12991 ;; *************** function _Terminal *****************
 12992 ;; Defined at:
 12993 ;;		line 416 in file "../Source/c/03_Sml/02_Ssl/term.c"
 12994 ;; Parameters:    Size  Location     Type
 12995 ;;		None
 12996 ;; Auto vars:     Size  Location     Type
 12997 ;;  Index           1   31[BANK0 ] unsigned char 
 12998 ;;  ReceivedByte    1   30[BANK0 ] unsigned char 
 12999 ;; Return value:  Size  Location     Type
 13000 ;;                  1    wreg      void 
 13001 ;; Registers used:
 13002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13003 ;; Tracked objects:
 13004 ;;		On entry : 0/0
 13005 ;;		On exit  : 0/0
 13006 ;;		Unchanged: 0/0
 13007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13009 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13010 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13011 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13012 ;;Total ram usage:        4 bytes
 13013 ;; Hardware stack levels used:    1
 13014 ;; Hardware stack levels required when called:   14
 13015 ;; This function calls:
 13016 ;;		_I2cSlv_I2cReadMsgSts
 13017 ;;		_I2cSlv_ReceiveI2cMsg
 13018 ;;		_I2cSlv_SendI2cMsg
 13019 ;;		_atoi
 13020 ;;		_getsUSBUSART
 13021 ;;		_itoa
 13022 ;;		_putUSBUSART
 13023 ;;		_strtol
 13024 ;; This function is called by:
 13025 ;;		_Term_MainSm
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029                           	psect	text54
 13030  0000D0                     __ptext54:
 13031                           	opt stack 0
 13032  0000D0                     _Terminal:
 13033                           	opt stack 12
 13034                           
 13035                           ;term.c: 418: static TermStateType TermState = Term_GetData;
 13036                           ;term.c: 419: static UINT8 UsbRxBuffer[200u];
 13037                           ;term.c: 420: static UINT8 UsbTxBuffer[200u];
 13038                           ;term.c: 421: static UINT8 TermTxBuffer[50u];
 13039                           ;term.c: 422: static UINT8 TermRxBuffer[50u];
 13040                           ;term.c: 423: UINT8 Index;
 13041                           ;term.c: 424: static UINT8 Len[4];
 13042                           ;term.c: 425: static UINT8 PackageLen;
 13043                           ;term.c: 426: static UINT8 Addr[4];
 13044                           ;term.c: 427: static UINT8 SlaveAddr;
 13045                           ;term.c: 428: static PayloadType Payload[25];
 13046                           ;term.c: 429: UINT8 ReceivedBytes = 0;
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;incstack = 0
 13050  0000D0  0E00               	movlw	0
 13051  0000D2  0100               	movlb	0	; () banked
 13052  0000D4  6F7E               	movwf	Terminal@ReceivedBytes& (0+255),b
 13053                           
 13054                           ; BSR set to: 0
 13055                           ;term.c: 431: static UINT8 FormatOption = 0u;
 13056                           ;term.c: 432: static UINT8 EchoOption = 1u;
 13057                           ;term.c: 435: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 13058  0000D6  0E1F               	movlw	31
 13059  0000D8  65FD               	cpfsgt	_USBDeviceState& (0+255),b
 13060  0000DA  0012               	return	
 13061                           
 13062                           ; BSR set to: 0
 13063  0000DC  B265               	btfsc	3941,1,c	;volatile
 13064  0000DE  0012               	return	
 13065  0000E0  D1F4               	goto	l2038
 13066  0000E2                     
 13067                           ;term.c: 442: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 13068                           
 13069                           ; BSR set to: 0
 13070  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 13071  0000E4  0100               	movlb	0	; () banked
 13072  0000E6  6F67               	movwf	getsUSBUSART@buffer& (0+255),b
 13073  0000E8  0E03               	movlw	high Terminal@UsbRxBuffer
 13074  0000EA  6F68               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 13075  0000EC  0EC8               	movlw	200
 13076  0000EE  6F69               	movwf	getsUSBUSART@len& (0+255),b
 13077  0000F0  ECB2  F01B         	call	_getsUSBUSART	;wreg free
 13078  0000F4  0100               	movlb	0	; () banked
 13079  0000F6  6F7E               	movwf	Terminal@ReceivedBytes& (0+255),b
 13080                           
 13081                           ; BSR set to: 0
 13082                           ;term.c: 445: if (ReceivedBytes > 0)
 13083  0000F8  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13084  0000FA  B4D8               	btfsc	status,2,c
 13085  0000FC  0012               	return	
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;term.c: 446: {
 13089                           ;term.c: 448: if (EchoOption == 1u)
 13090  0000FE  0101               	movlb	1	; () banked
 13091  000100  05E0               	decf	Terminal@EchoOption& (0+255),w,b
 13092  000102  A4D8               	btfss	status,2,c
 13093  000104  D026               	goto	l2042
 13094                           
 13095                           ; BSR set to: 1
 13096                           ;term.c: 449: {
 13097                           ;term.c: 451: if((cdc_trf_state == 0))
 13098  000106  0100               	movlb	0	; () banked
 13099  000108  51FB               	movf	_cdc_trf_state& (0+255),w,b
 13100  00010A  A4D8               	btfss	status,2,c
 13101  00010C  D022               	goto	l2042
 13102                           
 13103                           ; BSR set to: 0
 13104                           ;term.c: 452: {
 13105                           ;term.c: 453: UsbRxBuffer[ReceivedBytes] = '\r';
 13106  00010E  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13107  000110  0D01               	mullw	1
 13108  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 13109  000114  24F3               	addwf	prodl,w,c
 13110  000116  6ED9               	movwf	fsr2l,c
 13111  000118  0E03               	movlw	high Terminal@UsbRxBuffer
 13112  00011A  20F4               	addwfc	prodh,w,c
 13113  00011C  6EDA               	movwf	fsr2h,c
 13114  00011E  0E0D               	movlw	13
 13115  000120  6EDF               	movwf	indf2,c
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;term.c: 454: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 13119  000122  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13120  000124  6F7C               	movwf	??_Terminal& (0+255),b
 13121  000126  6B7D               	clrf	(??_Terminal+1)& (0+255),b
 13122  000128  0E01               	movlw	1
 13123  00012A  277C               	addwf	??_Terminal& (0+255),f,b
 13124  00012C  0E00               	movlw	0
 13125  00012E  237D               	addwfc	(??_Terminal+1)& (0+255),f,b
 13126  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 13127  000132  257C               	addwf	??_Terminal& (0+255),w,b
 13128  000134  6ED9               	movwf	fsr2l,c
 13129  000136  0E03               	movlw	high Terminal@UsbRxBuffer
 13130  000138  217D               	addwfc	(??_Terminal+1)& (0+255),w,b
 13131  00013A  6EDA               	movwf	fsr2h,c
 13132  00013C  0E0A               	movlw	10
 13133  00013E  6EDF               	movwf	indf2,c
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;term.c: 455: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 13137  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 13138  000142  6F66               	movwf	putUSBUSART@data& (0+255),b
 13139  000144  0E03               	movlw	high Terminal@UsbRxBuffer
 13140  000146  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13141  000148  517E               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13142  00014A  0F02               	addlw	2
 13143  00014C  6F68               	movwf	putUSBUSART@length& (0+255),b
 13144  00014E  ECFD  F025         	call	_putUSBUSART	;wreg free
 13145  000152                     l2042:
 13146                           
 13147                           ;term.c: 456: }
 13148                           ;term.c: 457: }
 13149                           ;term.c: 460: if ((UsbRxBuffer[0u] == 'S') &&
 13150                           ;term.c: 461: (UsbRxBuffer[0u + 1u] == 'O') &&
 13151                           ;term.c: 462: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13152  000152  0E53               	movlw	83
 13153  000154  0103               	movlb	3	; () banked
 13154  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13155  000158  A4D8               	btfss	status,2,c
 13156  00015A  D043               	goto	l2043
 13157                           
 13158                           ; BSR set to: 3
 13159  00015C  0E4F               	movlw	79
 13160  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13161  000160  A4D8               	btfss	status,2,c
 13162  000162  D03F               	goto	l2043
 13163                           
 13164                           ; BSR set to: 3
 13165  000164  0E3A               	movlw	58
 13166  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13167  000168  A4D8               	btfss	status,2,c
 13168  00016A  D03B               	goto	l2043
 13169                           
 13170                           ; BSR set to: 3
 13171                           ;term.c: 463: {
 13172                           ;term.c: 465: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13173  00016C  0E47               	movlw	71
 13174  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13175  000170  A4D8               	btfss	status,2,c
 13176  000172  0012               	return	
 13177                           
 13178                           ; BSR set to: 3
 13179  000174  0E3A               	movlw	58
 13180  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13181  000178  A4D8               	btfss	status,2,c
 13182  00017A  0012               	return	
 13183                           
 13184                           ; BSR set to: 3
 13185                           ;term.c: 466: {
 13186                           ;term.c: 468: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 13187  00017C  0E44               	movlw	68
 13188  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13189  000180  A4D8               	btfss	status,2,c
 13190  000182  D015               	goto	l2045
 13191                           
 13192                           ; BSR set to: 3
 13193  000184  0E46               	movlw	70
 13194  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13195  000188  A4D8               	btfss	status,2,c
 13196  00018A  D011               	goto	l2045
 13197                           
 13198                           ; BSR set to: 3
 13199                           ;term.c: 469: {
 13200                           ;term.c: 470: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 13201  00018C  0E41               	movlw	65
 13202  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13203  000190  A4D8               	btfss	status,2,c
 13204  000192  D004               	goto	l2046
 13205                           
 13206                           ; BSR set to: 3
 13207                           ;term.c: 471: {
 13208                           ;term.c: 472: FormatOption = 1u;
 13209  000194  0E01               	movlw	1
 13210  000196  0101               	movlb	1	; () banked
 13211  000198  6F57               	movwf	Terminal@FormatOption& (0+255),b
 13212                           
 13213                           ;term.c: 473: }
 13214  00019A  0012               	return	
 13215  00019C                     l2046:
 13216                           
 13217                           ;term.c: 474: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 13218                           
 13219                           ; BSR set to: 1
 13220  00019C  0E42               	movlw	66
 13221  00019E  0103               	movlb	3	; () banked
 13222  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13223  0001A2  A4D8               	btfss	status,2,c
 13224  0001A4  0012               	return	
 13225                           
 13226                           ; BSR set to: 3
 13227                           ;term.c: 475: {
 13228                           ;term.c: 476: FormatOption = 0u;
 13229  0001A6  0E00               	movlw	0
 13230  0001A8  0101               	movlb	1	; () banked
 13231  0001AA  6F57               	movwf	Terminal@FormatOption& (0+255),b
 13232                           
 13233                           ; BSR set to: 1
 13234                           ;term.c: 477: }
 13235                           ;term.c: 478: }
 13236                           
 13237                           ; BSR set to: 1
 13238  0001AC  0012               	return	
 13239  0001AE                     l2045:
 13240                           
 13241                           ;term.c: 480: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 13242                           
 13243                           ; BSR set to: 1
 13244  0001AE  0E45               	movlw	69
 13245  0001B0  0103               	movlb	3	; () banked
 13246  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13247  0001B4  A4D8               	btfss	status,2,c
 13248  0001B6  0012               	return	
 13249                           
 13250                           ; BSR set to: 3
 13251  0001B8  0E4D               	movlw	77
 13252  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13253  0001BC  A4D8               	btfss	status,2,c
 13254  0001BE  0012               	return	
 13255                           
 13256                           ; BSR set to: 3
 13257                           ;term.c: 481: {
 13258                           ;term.c: 482: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 13259  0001C0  0E31               	movlw	49
 13260  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13261  0001C4  A4D8               	btfss	status,2,c
 13262  0001C6  D004               	goto	l2051
 13263                           
 13264                           ; BSR set to: 3
 13265                           ;term.c: 483: {
 13266                           ;term.c: 484: EchoOption = 1u;
 13267  0001C8  0E01               	movlw	1
 13268  0001CA  0101               	movlb	1	; () banked
 13269  0001CC  6FE0               	movwf	Terminal@EchoOption& (0+255),b
 13270                           
 13271                           ;term.c: 485: }
 13272  0001CE  0012               	return	
 13273  0001D0                     l2051:
 13274                           
 13275                           ;term.c: 486: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 13276                           
 13277                           ; BSR set to: 1
 13278  0001D0  0E30               	movlw	48
 13279  0001D2  0103               	movlb	3	; () banked
 13280  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13281  0001D6  A4D8               	btfss	status,2,c
 13282  0001D8  0012               	return	
 13283                           
 13284                           ; BSR set to: 3
 13285                           ;term.c: 487: {
 13286                           ;term.c: 488: EchoOption = 0u;
 13287  0001DA  0E00               	movlw	0
 13288  0001DC  0101               	movlb	1	; () banked
 13289  0001DE  6FE0               	movwf	Terminal@EchoOption& (0+255),b
 13290                           
 13291                           ; BSR set to: 1
 13292                           ;term.c: 494: }
 13293                           ;term.c: 495: }
 13294                           ;term.c: 496: }
 13295                           
 13296                           ; BSR set to: 1
 13297                           
 13298                           ; BSR set to: 1
 13299                           
 13300                           ;term.c: 491: else
 13301                           ;term.c: 492: {
 13302                           
 13303                           ; BSR set to: 1
 13304                           
 13305                           ; BSR set to: 1
 13306                           ;term.c: 489: }
 13307                           ;term.c: 490: }
 13308                           
 13309                           ; BSR set to: 1
 13310  0001E0  0012               	return	
 13311  0001E2                     l2043:
 13312                           
 13313                           ;term.c: 497: else if ((UsbRxBuffer[0u] == 'S') &&
 13314                           ;term.c: 498: (UsbRxBuffer[0u + 1u] == 'B') &&
 13315                           ;term.c: 499: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13316                           
 13317                           ; BSR set to: 1
 13318  0001E2  0E53               	movlw	83
 13319  0001E4  0103               	movlb	3	; () banked
 13320  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13321  0001E8  A4D8               	btfss	status,2,c
 13322  0001EA  0012               	return	
 13323                           
 13324                           ; BSR set to: 3
 13325  0001EC  0E42               	movlw	66
 13326  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13327  0001F0  A4D8               	btfss	status,2,c
 13328  0001F2  0012               	return	
 13329                           
 13330                           ; BSR set to: 3
 13331  0001F4  0E3A               	movlw	58
 13332  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13333  0001F8  A4D8               	btfss	status,2,c
 13334  0001FA  0012               	return	
 13335                           
 13336                           ; BSR set to: 3
 13337                           ;term.c: 500: {
 13338                           ;term.c: 501: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13339  0001FC  0E57               	movlw	87
 13340  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13341  000200  A4D8               	btfss	status,2,c
 13342  000202  D089               	goto	l2057
 13343                           
 13344                           ; BSR set to: 3
 13345  000204  0E3A               	movlw	58
 13346  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13347  000208  A4D8               	btfss	status,2,c
 13348  00020A  D085               	goto	l2057
 13349                           
 13350                           ; BSR set to: 3
 13351                           ;term.c: 502: {
 13352                           ;term.c: 504: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13353  00020C  C305  F1B5         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13354                           
 13355                           ;term.c: 505: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13356  000210  C306  F1B6         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13357                           
 13358                           ;term.c: 507: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13359  000214  C308  F1B1         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13360                           
 13361                           ;term.c: 508: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13362  000218  C309  F1B2         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13363                           
 13364                           ; BSR set to: 3
 13365                           ;term.c: 510: PackageLen = atoi((void*)Len);
 13366  00021C  0EB5               	movlw	low Terminal@Len
 13367  00021E  0100               	movlb	0	; () banked
 13368  000220  6F66               	movwf	atoi@s& (0+255),b
 13369  000222  0E01               	movlw	high Terminal@Len
 13370  000224  6F67               	movwf	(atoi@s+1)& (0+255),b
 13371  000226  EC0A  F015         	call	_atoi	;wreg free
 13372  00022A  0100               	movlb	0	; () banked
 13373  00022C  5166               	movf	?_atoi& (0+255),w,b
 13374  00022E  6FFA               	movwf	Terminal@PackageLen& (0+255),b
 13375                           
 13376                           ;term.c: 511: SlaveAddr = atoi((void*)Addr);
 13377  000230  0EB1               	movlw	low Terminal@Addr
 13378  000232  6F66               	movwf	atoi@s& (0+255),b
 13379  000234  0E01               	movlw	high Terminal@Addr
 13380  000236  6F67               	movwf	(atoi@s+1)& (0+255),b
 13381  000238  EC0A  F015         	call	_atoi	;wreg free
 13382  00023C  0100               	movlb	0	; () banked
 13383  00023E  5166               	movf	?_atoi& (0+255),w,b
 13384  000240  0101               	movlb	1	; () banked
 13385  000242  6F58               	movwf	Terminal@SlaveAddr& (0+255),b
 13386                           
 13387                           ; BSR set to: 1
 13388                           ;term.c: 513: for (Index = 0; Index <= PackageLen; Index++)
 13389  000244  0E00               	movlw	0
 13390  000246  0100               	movlb	0	; () banked
 13391  000248  6F7F               	movwf	Terminal@Index& (0+255),b
 13392  00024A  D031               	goto	l2058
 13393  00024C                     
 13394                           ; BSR set to: 0
 13395                           ;term.c: 514: {
 13396                           ;term.c: 515: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 13397                           
 13398                           ; BSR set to: 0
 13399  00024C  517F               	movf	Terminal@Index& (0+255),w,b
 13400  00024E  0D02               	mullw	2
 13401  000250  0E0B               	movlw	11
 13402  000252  26F3               	addwf	prodl,f,c
 13403  000254  0E00               	movlw	0
 13404  000256  22F4               	addwfc	prodh,f,c
 13405  000258  0E00               	movlw	low Terminal@UsbRxBuffer
 13406  00025A  24F3               	addwf	prodl,w,c
 13407  00025C  6ED9               	movwf	fsr2l,c
 13408  00025E  0E03               	movlw	high Terminal@UsbRxBuffer
 13409  000260  20F4               	addwfc	prodh,w,c
 13410  000262  6EDA               	movwf	fsr2h,c
 13411  000264  517F               	movf	Terminal@Index& (0+255),w,b
 13412  000266  0D04               	mullw	4
 13413  000268  0E40               	movlw	low Terminal@Payload
 13414  00026A  24F3               	addwf	prodl,w,c
 13415  00026C  6EE1               	movwf	fsr1l,c
 13416  00026E  0E04               	movlw	high Terminal@Payload
 13417  000270  20F4               	addwfc	prodh,w,c
 13418  000272  6EE2               	movwf	fsr1h,c
 13419  000274  CFDF FFE7          	movff	indf2,indf1
 13420                           
 13421                           ;term.c: 516: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 13422  000278  517F               	movf	Terminal@Index& (0+255),w,b
 13423  00027A  0D02               	mullw	2
 13424  00027C  0E0C               	movlw	12
 13425  00027E  26F3               	addwf	prodl,f,c
 13426  000280  0E00               	movlw	0
 13427  000282  22F4               	addwfc	prodh,f,c
 13428  000284  0E00               	movlw	low Terminal@UsbRxBuffer
 13429  000286  24F3               	addwf	prodl,w,c
 13430  000288  6ED9               	movwf	fsr2l,c
 13431  00028A  0E03               	movlw	high Terminal@UsbRxBuffer
 13432  00028C  20F4               	addwfc	prodh,w,c
 13433  00028E  6EDA               	movwf	fsr2h,c
 13434  000290  517F               	movf	Terminal@Index& (0+255),w,b
 13435  000292  0D04               	mullw	4
 13436  000294  0E01               	movlw	1
 13437  000296  26F3               	addwf	prodl,f,c
 13438  000298  0E00               	movlw	0
 13439  00029A  22F4               	addwfc	prodh,f,c
 13440  00029C  0E40               	movlw	low Terminal@Payload
 13441  00029E  24F3               	addwf	prodl,w,c
 13442  0002A0  6EE1               	movwf	fsr1l,c
 13443  0002A2  0E04               	movlw	high Terminal@Payload
 13444  0002A4  20F4               	addwfc	prodh,w,c
 13445  0002A6  6EE2               	movwf	fsr1h,c
 13446  0002A8  CFDF FFE7          	movff	indf2,indf1
 13447                           
 13448                           ; BSR set to: 0
 13449  0002AC  2B7F               	incf	Terminal@Index& (0+255),f,b
 13450  0002AE                     l2058:
 13451                           
 13452                           ; BSR set to: 0
 13453                           
 13454                           ; BSR set to: 0
 13455  0002AE  517F               	movf	Terminal@Index& (0+255),w,b
 13456  0002B0  5DFA               	subwf	Terminal@PackageLen& (0+255),w,b
 13457  0002B2  B0D8               	btfsc	status,0,c
 13458  0002B4  D7CB               	goto	l2059
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;term.c: 517: }
 13462                           ;term.c: 519: for (Index = 0; Index <= PackageLen; Index++)
 13463                           
 13464                           ; BSR set to: 0
 13465  0002B6  0E00               	movlw	0
 13466  0002B8  6F7F               	movwf	Terminal@Index& (0+255),b
 13467  0002BA  D01E               	goto	l2061
 13468  0002BC                     
 13469                           ; BSR set to: 0
 13470                           ;term.c: 520: {
 13471                           ;term.c: 524: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 13472                           
 13473                           ; BSR set to: 0
 13474  0002BC  517F               	movf	Terminal@Index& (0+255),w,b
 13475  0002BE  0D04               	mullw	4
 13476  0002C0  0E40               	movlw	low Terminal@Payload
 13477  0002C2  24F3               	addwf	prodl,w,c
 13478  0002C4  6F6C               	movwf	strtol@s& (0+255),b
 13479  0002C6  0E04               	movlw	high Terminal@Payload
 13480  0002C8  20F4               	addwfc	prodh,w,c
 13481  0002CA  6F6D               	movwf	(strtol@s+1)& (0+255),b
 13482  0002CC  0E00               	movlw	0
 13483  0002CE  6F6E               	movwf	strtol@endptr& (0+255),b
 13484  0002D0  0E00               	movlw	0
 13485  0002D2  6F6F               	movwf	(strtol@endptr+1)& (0+255),b
 13486  0002D4  0E00               	movlw	0
 13487  0002D6  6F71               	movwf	(strtol@base+1)& (0+255),b
 13488  0002D8  0E10               	movlw	16
 13489  0002DA  6F70               	movwf	strtol@base& (0+255),b
 13490  0002DC  ECC6  F00A         	call	_strtol	;wreg free
 13491  0002E0  0100               	movlb	0	; () banked
 13492  0002E2  517F               	movf	Terminal@Index& (0+255),w,b
 13493  0002E4  0D01               	mullw	1
 13494  0002E6  0EC8               	movlw	low Terminal@TermTxBuffer
 13495  0002E8  24F3               	addwf	prodl,w,c
 13496  0002EA  6ED9               	movwf	fsr2l,c
 13497  0002EC  0E03               	movlw	high Terminal@TermTxBuffer
 13498  0002EE  20F4               	addwfc	prodh,w,c
 13499  0002F0  6EDA               	movwf	fsr2h,c
 13500  0002F2  C06C  FFDF         	movff	?_strtol,indf2
 13501                           
 13502                           ; BSR set to: 0
 13503  0002F6  2B7F               	incf	Terminal@Index& (0+255),f,b
 13504  0002F8                     l2061:
 13505                           
 13506                           ; BSR set to: 0
 13507                           
 13508                           ; BSR set to: 0
 13509  0002F8  517F               	movf	Terminal@Index& (0+255),w,b
 13510  0002FA  5DFA               	subwf	Terminal@PackageLen& (0+255),w,b
 13511  0002FC  B0D8               	btfsc	status,0,c
 13512  0002FE  D7DE               	goto	l2062
 13513                           
 13514                           ; BSR set to: 0
 13515                           ;term.c: 526: }
 13516                           ;term.c: 529: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 13517                           
 13518                           ; BSR set to: 0
 13519  000300  0EC8               	movlw	low Terminal@TermTxBuffer
 13520  000302  6F63               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 13521  000304  0E03               	movlw	high Terminal@TermTxBuffer
 13522  000306  6F64               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 13523  000308  C158  F065         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 13524  00030C  C0FA  F066         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 13525  000310  ECC4  F023         	call	_I2cSlv_SendI2cMsg	;wreg free
 13526                           
 13527                           ;term.c: 530: }
 13528  000314  0012               	return	
 13529  000316                     l2057:
 13530                           
 13531                           ;term.c: 531: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 13532  000316  0E52               	movlw	82
 13533  000318  0103               	movlb	3	; () banked
 13534  00031A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13535  00031C  A4D8               	btfss	status,2,c
 13536  00031E  0012               	return	
 13537                           
 13538                           ; BSR set to: 3
 13539  000320  0E3A               	movlw	58
 13540  000322  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13541  000324  A4D8               	btfss	status,2,c
 13542  000326  0012               	return	
 13543                           
 13544                           ; BSR set to: 3
 13545                           ;term.c: 532: {
 13546                           ;term.c: 534: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13547  000328  C305  F1B5         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13548                           
 13549                           ;term.c: 535: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13550  00032C  C306  F1B6         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13551                           
 13552                           ;term.c: 537: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13553  000330  C308  F1B1         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13554                           
 13555                           ;term.c: 538: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13556  000334  C309  F1B2         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13557                           
 13558                           ; BSR set to: 3
 13559                           ;term.c: 540: PackageLen = atoi((void*)Len);
 13560  000338  0EB5               	movlw	low Terminal@Len
 13561  00033A  0100               	movlb	0	; () banked
 13562  00033C  6F66               	movwf	atoi@s& (0+255),b
 13563  00033E  0E01               	movlw	high Terminal@Len
 13564  000340  6F67               	movwf	(atoi@s+1)& (0+255),b
 13565  000342  EC0A  F015         	call	_atoi	;wreg free
 13566  000346  0100               	movlb	0	; () banked
 13567  000348  5166               	movf	?_atoi& (0+255),w,b
 13568  00034A  6FFA               	movwf	Terminal@PackageLen& (0+255),b
 13569                           
 13570                           ;term.c: 541: SlaveAddr = atoi((void*)Addr);
 13571  00034C  0EB1               	movlw	low Terminal@Addr
 13572  00034E  6F66               	movwf	atoi@s& (0+255),b
 13573  000350  0E01               	movlw	high Terminal@Addr
 13574  000352  6F67               	movwf	(atoi@s+1)& (0+255),b
 13575  000354  EC0A  F015         	call	_atoi	;wreg free
 13576  000358  0100               	movlb	0	; () banked
 13577  00035A  5166               	movf	?_atoi& (0+255),w,b
 13578  00035C  0101               	movlb	1	; () banked
 13579  00035E  6F58               	movwf	Terminal@SlaveAddr& (0+255),b
 13580                           
 13581                           ; BSR set to: 1
 13582                           ;term.c: 544: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 13583  000360  0E40               	movlw	low Terminal@TermRxBuffer
 13584  000362  0100               	movlb	0	; () banked
 13585  000364  6F63               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 13586  000366  0E02               	movlw	high Terminal@TermRxBuffer
 13587  000368  6F64               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 13588  00036A  C158  F065         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 13589  00036E  C0FA  F066         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 13590  000372  EC5F  F023         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 13591                           
 13592                           ;term.c: 547: TermState = Term_PrepSlvI2cResp;
 13593  000376  0E01               	movlw	1
 13594  000378  0101               	movlb	1	; () banked
 13595  00037A  6F59               	movwf	Terminal@TermState& (0+255),b
 13596                           
 13597                           ; BSR set to: 1
 13598                           ;term.c: 555: }
 13599                           ;term.c: 587: }
 13600                           ;term.c: 588: break;
 13601                           
 13602                           ; BSR set to: 1
 13603                           
 13604                           ; BSR set to: 1
 13605                           
 13606                           ; BSR set to: 1
 13607                           
 13608                           ;term.c: 553: {
 13609                           
 13610                           ; BSR set to: 1
 13611                           
 13612                           ; BSR set to: 1
 13613                           
 13614                           ; BSR set to: 1
 13615                           
 13616                           ; BSR set to: 1
 13617                           
 13618                           ; BSR set to: 1
 13619                           ;term.c: 548: }
 13620                           ;term.c: 549: }
 13621                           
 13622                           ; BSR set to: 1
 13623  00037C  0012               	return	
 13624  00037E                     
 13625                           ; BSR set to: 1
 13626                           ;term.c: 592: if((cdc_trf_state == 0))
 13627                           
 13628                           ; BSR set to: 1
 13629  00037E  0100               	movlb	0	; () banked
 13630  000380  51FB               	movf	_cdc_trf_state& (0+255),w,b
 13631  000382  A4D8               	btfss	status,2,c
 13632  000384  0012               	return	
 13633                           
 13634                           ; BSR set to: 0
 13635                           ;term.c: 593: {
 13636                           ;term.c: 594: UsbRxBuffer[0] = 'S';
 13637  000386  0E53               	movlw	83
 13638  000388  0103               	movlb	3	; () banked
 13639  00038A  6F00               	movwf	Terminal@UsbRxBuffer& (0+255),b
 13640                           
 13641                           ;term.c: 595: UsbRxBuffer[1] = 'B';
 13642  00038C  0E42               	movlw	66
 13643  00038E  6F01               	movwf	(Terminal@UsbRxBuffer+1)& (0+255),b
 13644                           
 13645                           ;term.c: 596: UsbRxBuffer[2] = '[';
 13646  000390  0E5B               	movlw	91
 13647  000392  6F02               	movwf	(Terminal@UsbRxBuffer+2)& (0+255),b
 13648                           
 13649                           ; BSR set to: 3
 13650                           ;term.c: 597: UsbRxBuffer[3] = Addr[0];
 13651  000394  C1B1  F303         	movff	Terminal@Addr,Terminal@UsbRxBuffer+3
 13652                           
 13653                           ; BSR set to: 3
 13654                           ;term.c: 598: UsbRxBuffer[4] = Addr[1];
 13655  000398  C1B2  F304         	movff	Terminal@Addr+1,Terminal@UsbRxBuffer+4
 13656                           
 13657                           ;term.c: 599: UsbRxBuffer[5] = ']';
 13658  00039C  0E5D               	movlw	93
 13659  00039E  6F05               	movwf	(Terminal@UsbRxBuffer+5)& (0+255),b
 13660                           
 13661                           ;term.c: 600: UsbRxBuffer[6] = ':';
 13662  0003A0  0E3A               	movlw	58
 13663  0003A2  6F06               	movwf	(Terminal@UsbRxBuffer+6)& (0+255),b
 13664                           
 13665                           ; BSR set to: 3
 13666                           ;term.c: 601: putUSBUSART(UsbRxBuffer,7);
 13667  0003A4  0E00               	movlw	low Terminal@UsbRxBuffer
 13668  0003A6  0100               	movlb	0	; () banked
 13669  0003A8  6F66               	movwf	putUSBUSART@data& (0+255),b
 13670  0003AA  0E03               	movlw	high Terminal@UsbRxBuffer
 13671  0003AC  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13672  0003AE  0E07               	movlw	7
 13673  0003B0  6F68               	movwf	putUSBUSART@length& (0+255),b
 13674  0003B2  ECFD  F025         	call	_putUSBUSART	;wreg free
 13675                           
 13676                           ;term.c: 604: TermState = Term_ReadSlvI2cData;
 13677  0003B6  0E02               	movlw	2
 13678  0003B8  0101               	movlb	1	; () banked
 13679  0003BA  6F59               	movwf	Terminal@TermState& (0+255),b
 13680                           
 13681                           ; BSR set to: 1
 13682                           ;term.c: 605: }
 13683                           ;term.c: 606: break;
 13684  0003BC  0012               	return	
 13685  0003BE                     
 13686                           ; BSR set to: 1
 13687                           ;term.c: 610: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 13688                           
 13689                           ; BSR set to: 1
 13690  0003BE  EC1F  F026         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 13691  0003C2  06E8               	decf	wreg,f,c
 13692  0003C4  A4D8               	btfss	status,2,c
 13693  0003C6  0012               	return	
 13694                           
 13695                           ;term.c: 611: {
 13696                           ;term.c: 613: if (FormatOption == 1u)
 13697  0003C8  0101               	movlb	1	; () banked
 13698  0003CA  0557               	decf	Terminal@FormatOption& (0+255),w,b
 13699  0003CC  A4D8               	btfss	status,2,c
 13700  0003CE  D025               	goto	u6750
 13701                           
 13702                           ; BSR set to: 1
 13703                           ;term.c: 614: {
 13704                           ;term.c: 616: for (Index = 0; Index <= PackageLen; Index++)
 13705  0003D0  0E00               	movlw	0
 13706  0003D2  0100               	movlb	0	; () banked
 13707  0003D4  6F7F               	movwf	Terminal@Index& (0+255),b
 13708  0003D6  D01D               	goto	l2074
 13709  0003D8                     
 13710                           ; BSR set to: 0
 13711                           ;term.c: 617: {
 13712                           ;term.c: 618: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 13713                           
 13714                           ; BSR set to: 0
 13715  0003D8  517F               	movf	Terminal@Index& (0+255),w,b
 13716  0003DA  0D04               	mullw	4
 13717  0003DC  0E40               	movlw	low Terminal@Payload
 13718  0003DE  24F3               	addwf	prodl,w,c
 13719  0003E0  6F70               	movwf	itoa@buf& (0+255),b
 13720  0003E2  0E04               	movlw	high Terminal@Payload
 13721  0003E4  20F4               	addwfc	prodh,w,c
 13722  0003E6  6F71               	movwf	(itoa@buf+1)& (0+255),b
 13723  0003E8  517F               	movf	Terminal@Index& (0+255),w,b
 13724  0003EA  0D01               	mullw	1
 13725  0003EC  0E40               	movlw	low Terminal@TermRxBuffer
 13726  0003EE  24F3               	addwf	prodl,w,c
 13727  0003F0  6ED9               	movwf	fsr2l,c
 13728  0003F2  0E02               	movlw	high Terminal@TermRxBuffer
 13729  0003F4  20F4               	addwfc	prodh,w,c
 13730  0003F6  6EDA               	movwf	fsr2h,c
 13731  0003F8  50DF               	movf	indf2,w,c
 13732  0003FA  6F7C               	movwf	??_Terminal& (0+255),b
 13733  0003FC  517C               	movf	??_Terminal& (0+255),w,b
 13734  0003FE  6F72               	movwf	itoa@val& (0+255),b
 13735  000400  6B73               	clrf	(itoa@val+1)& (0+255),b
 13736  000402  0E00               	movlw	0
 13737  000404  6F75               	movwf	(itoa@base+1)& (0+255),b
 13738  000406  0E0A               	movlw	10
 13739  000408  6F74               	movwf	itoa@base& (0+255),b
 13740  00040A  EC3D  F023         	call	_itoa	;wreg free
 13741  00040E  0100               	movlb	0	; () banked
 13742  000410  2B7F               	incf	Terminal@Index& (0+255),f,b
 13743  000412                     l2074:
 13744                           
 13745                           ; BSR set to: 0
 13746                           
 13747                           ; BSR set to: 0
 13748  000412  517F               	movf	Terminal@Index& (0+255),w,b
 13749  000414  5DFA               	subwf	Terminal@PackageLen& (0+255),w,b
 13750  000416  B0D8               	btfsc	status,0,c
 13751  000418  D7DF               	goto	l2075
 13752  00041A                     u6750:
 13753                           
 13754                           ;term.c: 619: }
 13755                           ;term.c: 620: }
 13756                           ;term.c: 623: if((cdc_trf_state == 0))
 13757                           
 13758                           ; BSR set to: 0
 13759                           
 13760                           ; BSR set to: 0
 13761  00041A  0100               	movlb	0	; () banked
 13762  00041C  51FB               	movf	_cdc_trf_state& (0+255),w,b
 13763  00041E  A4D8               	btfss	status,2,c
 13764  000420  0012               	return	
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;term.c: 624: {
 13768                           ;term.c: 626: if (FormatOption == 1u)
 13769  000422  0101               	movlb	1	; () banked
 13770  000424  0557               	decf	Terminal@FormatOption& (0+255),w,b
 13771  000426  A4D8               	btfss	status,2,c
 13772  000428  D029               	goto	l2078
 13773                           
 13774                           ; BSR set to: 1
 13775                           ;term.c: 627: {
 13776                           ;term.c: 628: Payload[(2*PackageLen)].Byte[3] = '\r';
 13777  00042A  0100               	movlb	0	; () banked
 13778  00042C  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13779  00042E  0D08               	mullw	8
 13780  000430  0E03               	movlw	3
 13781  000432  26F3               	addwf	prodl,f,c
 13782  000434  0E00               	movlw	0
 13783  000436  22F4               	addwfc	prodh,f,c
 13784  000438  0E40               	movlw	low Terminal@Payload
 13785  00043A  24F3               	addwf	prodl,w,c
 13786  00043C  6ED9               	movwf	fsr2l,c
 13787  00043E  0E04               	movlw	high Terminal@Payload
 13788  000440  20F4               	addwfc	prodh,w,c
 13789  000442  6EDA               	movwf	fsr2h,c
 13790  000444  0E0D               	movlw	13
 13791  000446  6EDF               	movwf	indf2,c
 13792                           
 13793                           ;term.c: 629: Payload[(2*PackageLen)].Byte[2] = '\n';
 13794  000448  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13795  00044A  0D08               	mullw	8
 13796  00044C  0E02               	movlw	2
 13797  00044E  26F3               	addwf	prodl,f,c
 13798  000450  0E00               	movlw	0
 13799  000452  22F4               	addwfc	prodh,f,c
 13800  000454  0E40               	movlw	low Terminal@Payload
 13801  000456  24F3               	addwf	prodl,w,c
 13802  000458  6ED9               	movwf	fsr2l,c
 13803  00045A  0E04               	movlw	high Terminal@Payload
 13804  00045C  20F4               	addwfc	prodh,w,c
 13805  00045E  6EDA               	movwf	fsr2h,c
 13806  000460  0E0A               	movlw	10
 13807  000462  6EDF               	movwf	indf2,c
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;term.c: 631: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 13811  000464  0E40               	movlw	low Terminal@Payload
 13812  000466  6F66               	movwf	putUSBUSART@data& (0+255),b
 13813  000468  0E04               	movlw	high Terminal@Payload
 13814  00046A  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13815  00046C  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13816  00046E  0D02               	mullw	2
 13817  000470  50F3               	movf	prodl,w,c
 13818  000472  0F04               	addlw	4
 13819  000474  6F68               	movwf	putUSBUSART@length& (0+255),b
 13820  000476  ECFD  F025         	call	_putUSBUSART	;wreg free
 13821                           
 13822                           ;term.c: 632: }
 13823  00047A  D023               	goto	l2079
 13824  00047C                     l2078:
 13825                           
 13826                           ;term.c: 633: else
 13827                           ;term.c: 634: {
 13828                           ;term.c: 635: TermRxBuffer[PackageLen] = '\r';
 13829  00047C  0100               	movlb	0	; () banked
 13830  00047E  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13831  000480  0D01               	mullw	1
 13832  000482  0E40               	movlw	low Terminal@TermRxBuffer
 13833  000484  24F3               	addwf	prodl,w,c
 13834  000486  6ED9               	movwf	fsr2l,c
 13835  000488  0E02               	movlw	high Terminal@TermRxBuffer
 13836  00048A  20F4               	addwfc	prodh,w,c
 13837  00048C  6EDA               	movwf	fsr2h,c
 13838  00048E  0E0D               	movlw	13
 13839  000490  6EDF               	movwf	indf2,c
 13840                           
 13841                           ; BSR set to: 0
 13842                           ;term.c: 636: TermRxBuffer[PackageLen + 1] = '\n';
 13843  000492  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13844  000494  6F7C               	movwf	??_Terminal& (0+255),b
 13845  000496  6B7D               	clrf	(??_Terminal+1)& (0+255),b
 13846  000498  0E01               	movlw	1
 13847  00049A  277C               	addwf	??_Terminal& (0+255),f,b
 13848  00049C  0E00               	movlw	0
 13849  00049E  237D               	addwfc	(??_Terminal+1)& (0+255),f,b
 13850  0004A0  0E40               	movlw	low Terminal@TermRxBuffer
 13851  0004A2  257C               	addwf	??_Terminal& (0+255),w,b
 13852  0004A4  6ED9               	movwf	fsr2l,c
 13853  0004A6  0E02               	movlw	high Terminal@TermRxBuffer
 13854  0004A8  217D               	addwfc	(??_Terminal+1)& (0+255),w,b
 13855  0004AA  6EDA               	movwf	fsr2h,c
 13856  0004AC  0E0A               	movlw	10
 13857  0004AE  6EDF               	movwf	indf2,c
 13858                           
 13859                           ; BSR set to: 0
 13860                           ;term.c: 638: putUSBUSART(TermRxBuffer,PackageLen + 2);
 13861  0004B0  0E40               	movlw	low Terminal@TermRxBuffer
 13862  0004B2  6F66               	movwf	putUSBUSART@data& (0+255),b
 13863  0004B4  0E02               	movlw	high Terminal@TermRxBuffer
 13864  0004B6  6F67               	movwf	(putUSBUSART@data+1)& (0+255),b
 13865  0004B8  51FA               	movf	Terminal@PackageLen& (0+255),w,b
 13866  0004BA  0F02               	addlw	2
 13867  0004BC  6F68               	movwf	putUSBUSART@length& (0+255),b
 13868  0004BE  ECFD  F025         	call	_putUSBUSART	;wreg free
 13869  0004C2                     l2079:
 13870                           
 13871                           ;term.c: 639: }
 13872                           ;term.c: 643: TermState = Term_GetData;
 13873  0004C2  0E00               	movlw	0
 13874  0004C4  0101               	movlb	1	; () banked
 13875  0004C6  6F59               	movwf	Terminal@TermState& (0+255),b
 13876                           
 13877                           ; BSR set to: 1
 13878                           ;term.c: 653: }
 13879                           
 13880                           ; BSR set to: 1
 13881                           ;term.c: 652: break;
 13882                           
 13883                           ;term.c: 651: default:
 13884                           
 13885                           ; BSR set to: 1
 13886                           ;term.c: 649: break;
 13887                           
 13888                           ;term.c: 648: case Term_ReadSlvUartData:
 13889                           
 13890                           ; BSR set to: 1
 13891                           ;term.c: 644: }
 13892                           ;term.c: 645: }
 13893                           ;term.c: 646: break;
 13894                           
 13895                           ; BSR set to: 1
 13896  0004C8  0012               	return	
 13897  0004CA                     l2038:
 13898                           
 13899                           ; BSR set to: 1
 13900  0004CA  0101               	movlb	1	; () banked
 13901  0004CC  5159               	movf	Terminal@TermState& (0+255),w,b
 13902                           
 13903                           ; Switch size 1, requested type "space"
 13904                           ; Number of cases is 4, Range of values is 0 to 3
 13905                           ; switch strategies available:
 13906                           ; Name         Instructions Cycles
 13907                           ; simple_byte           13     7 (average)
 13908                           ;	Chosen strategy is simple_byte
 13909  0004CE  0A00               	xorlw	0	; case 0
 13910  0004D0  B4D8               	btfsc	status,2,c
 13911  0004D2  D607               	goto	l2039
 13912  0004D4  0A01               	xorlw	1	; case 1
 13913  0004D6  B4D8               	btfsc	status,2,c
 13914  0004D8  D752               	goto	l2069
 13915  0004DA  0A03               	xorlw	3	; case 2
 13916  0004DC  B4D8               	btfsc	status,2,c
 13917  0004DE  D76F               	goto	l2071
 13918  0004E0  0A01               	xorlw	1	; case 3
 13919  0004E2  0012               	return	
 13920  0004E4                     __end_of_Terminal:
 13921                           	opt stack 0
 13922                           tosu	equ	0xFFF
 13923                           tosh	equ	0xFFE
 13924                           tosl	equ	0xFFD
 13925                           pclath	equ	0xFFA
 13926                           tblptru	equ	0xFF8
 13927                           tblptrh	equ	0xFF7
 13928                           tblptrl	equ	0xFF6
 13929                           tablat	equ	0xFF5
 13930                           prodh	equ	0xFF4
 13931                           prodl	equ	0xFF3
 13932                           intcon	equ	0xFF2
 13933                           intcon2	equ	0xFF1
 13934                           intcon3	equ	0xFF0
 13935                           indf0	equ	0xFEF
 13936                           postinc0	equ	0xFEE
 13937                           plusw0	equ	0xFEB
 13938                           fsr0h	equ	0xFEA
 13939                           fsr0l	equ	0xFE9
 13940                           wreg	equ	0xFE8
 13941                           indf1	equ	0xFE7
 13942                           postinc1	equ	0xFE6
 13943                           postdec1	equ	0xFE5
 13944                           fsr1h	equ	0xFE2
 13945                           fsr1l	equ	0xFE1
 13946                           indf2	equ	0xFDF
 13947                           postinc2	equ	0xFDE
 13948                           postdec2	equ	0xFDD
 13949                           plusw2	equ	0xFDB
 13950                           fsr2h	equ	0xFDA
 13951                           fsr2l	equ	0xFD9
 13952                           status	equ	0xFD8
 13953                           
 13954 ;; *************** function _strtol *****************
 13955 ;; Defined at:
 13956 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtol.c"
 13957 ;; Parameters:    Size  Location     Type
 13958 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 13959 ;;		 -> Terminal@Payload(100), 
 13960 ;;  endptr          2   14[BANK0 ] PTR PTR unsigned char 
 13961 ;;		 -> NULL(0), 
 13962 ;;  base            2   16[BANK0 ] int 
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;  a               4   23[BANK0 ] long 
 13965 ;;  c               1   27[BANK0 ] unsigned char 
 13966 ;;  sign            1   22[BANK0 ] unsigned char 
 13967 ;; Return value:  Size  Location     Type
 13968 ;;                  4   12[BANK0 ] long 
 13969 ;; Registers used:
 13970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13971 ;; Tracked objects:
 13972 ;;		On entry : 0/0
 13973 ;;		On exit  : 0/0
 13974 ;;		Unchanged: 0/0
 13975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13976 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13977 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13978 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13979 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13980 ;;Total ram usage:       16 bytes
 13981 ;; Hardware stack levels used:    1
 13982 ;; Hardware stack levels required when called:   13
 13983 ;; This function calls:
 13984 ;;		___lmul
 13985 ;;		_isalpha
 13986 ;;		_isdigit
 13987 ;;		_isspace
 13988 ;;		_toupper
 13989 ;; This function is called by:
 13990 ;;		_Terminal
 13991 ;; This function uses a non-reentrant model
 13992 ;;
 13993                           
 13994                           	psect	text55
 13995  00158C                     __ptext55:
 13996                           	opt stack 0
 13997  00158C                     _strtol:
 13998                           	opt stack 12
 13999                           
 14000                           ;incstack = 0
 14001  00158C  C06C  FFD9         	movff	strtol@s,fsr2l
 14002  001590  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14003  001594  50DF               	movf	indf2,w,c
 14004  001596  0100               	movlb	0	; () banked
 14005  001598  6F7B               	movwf	strtol@c& (0+255),b
 14006                           
 14007                           ; BSR set to: 0
 14008  00159A  4B6C               	infsnz	strtol@s& (0+255),f,b
 14009  00159C  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14010                           
 14011                           ; BSR set to: 0
 14012  00159E  517B               	movf	strtol@c& (0+255),w,b
 14013  0015A0  EC7A  F025         	call	_isspace
 14014  0015A4  B0D8               	btfsc	status,0,c
 14015  0015A6  D7F2               	goto	_strtol
 14016  0015A8  0E00               	movlw	0
 14017  0015AA  0100               	movlb	0	; () banked
 14018  0015AC  6F77               	movwf	strtol@a& (0+255),b
 14019  0015AE  0E00               	movlw	0
 14020  0015B0  6F78               	movwf	(strtol@a+1)& (0+255),b
 14021  0015B2  0E00               	movlw	0
 14022  0015B4  6F79               	movwf	(strtol@a+2)& (0+255),b
 14023  0015B6  0E00               	movlw	0
 14024  0015B8  6F7A               	movwf	(strtol@a+3)& (0+255),b
 14025  0015BA  0E00               	movlw	0
 14026  0015BC  6F76               	movwf	strtol@sign& (0+255),b
 14027                           
 14028                           ; BSR set to: 0
 14029  0015BE  0E2D               	movlw	45
 14030  0015C0  197B               	xorwf	strtol@c& (0+255),w,b
 14031  0015C2  A4D8               	btfss	status,2,c
 14032  0015C4  D003               	goto	l2758
 14033                           
 14034                           ; BSR set to: 0
 14035  0015C6  0E01               	movlw	1
 14036  0015C8  6F76               	movwf	strtol@sign& (0+255),b
 14037  0015CA  D004               	goto	u5600
 14038  0015CC                     l2758:
 14039                           
 14040                           ; BSR set to: 0
 14041                           
 14042                           ; BSR set to: 0
 14043  0015CC  0E2B               	movlw	43
 14044  0015CE  197B               	xorwf	strtol@c& (0+255),w,b
 14045  0015D0  A4D8               	btfss	status,2,c
 14046  0015D2  D008               	goto	l2760
 14047  0015D4                     u5600:
 14048                           
 14049                           ; BSR set to: 0
 14050  0015D4  C06C  FFD9         	movff	strtol@s,fsr2l
 14051  0015D8  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14052  0015DC  50DF               	movf	indf2,w,c
 14053  0015DE  6F7B               	movwf	strtol@c& (0+255),b
 14054                           
 14055                           ; BSR set to: 0
 14056  0015E0  4B6C               	infsnz	strtol@s& (0+255),f,b
 14057  0015E2  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14058  0015E4                     l2760:
 14059                           
 14060                           ; BSR set to: 0
 14061                           
 14062                           ; BSR set to: 0
 14063                           
 14064                           ; BSR set to: 0
 14065  0015E4  0E30               	movlw	48
 14066  0015E6  197B               	xorwf	strtol@c& (0+255),w,b
 14067  0015E8  A4D8               	btfss	status,2,c
 14068  0015EA  D02E               	goto	l2768
 14069                           
 14070                           ; BSR set to: 0
 14071  0015EC  C06C  FFD9         	movff	strtol@s,fsr2l
 14072  0015F0  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14073  0015F4  50DF               	movf	indf2,w,c
 14074  0015F6  6F7B               	movwf	strtol@c& (0+255),b
 14075                           
 14076                           ; BSR set to: 0
 14077  0015F8  4B6C               	infsnz	strtol@s& (0+255),f,b
 14078  0015FA  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14079                           
 14080                           ; BSR set to: 0
 14081  0015FC  5170               	movf	strtol@base& (0+255),w,b
 14082  0015FE  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14083  001600  B4D8               	btfsc	status,2,c
 14084  001602  D005               	goto	u5630
 14085                           
 14086                           ; BSR set to: 0
 14087  001604  0E10               	movlw	16
 14088  001606  1970               	xorwf	strtol@base& (0+255),w,b
 14089  001608  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14090  00160A  A4D8               	btfss	status,2,c
 14091  00160C  D015               	goto	l2762
 14092  00160E                     u5630:
 14093                           
 14094                           ; BSR set to: 0
 14095                           
 14096                           ; BSR set to: 0
 14097  00160E  0E78               	movlw	120
 14098  001610  197B               	xorwf	strtol@c& (0+255),w,b
 14099  001612  B4D8               	btfsc	status,2,c
 14100  001614  D004               	goto	u5650
 14101                           
 14102                           ; BSR set to: 0
 14103  001616  0E58               	movlw	88
 14104  001618  197B               	xorwf	strtol@c& (0+255),w,b
 14105  00161A  A4D8               	btfss	status,2,c
 14106  00161C  D00D               	goto	l2762
 14107  00161E                     u5650:
 14108                           
 14109                           ; BSR set to: 0
 14110                           
 14111                           ; BSR set to: 0
 14112  00161E  0E00               	movlw	0
 14113  001620  6F71               	movwf	(strtol@base+1)& (0+255),b
 14114  001622  0E10               	movlw	16
 14115  001624  6F70               	movwf	strtol@base& (0+255),b
 14116                           
 14117                           ; BSR set to: 0
 14118  001626  C06C  FFD9         	movff	strtol@s,fsr2l
 14119  00162A  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14120  00162E  50DF               	movf	indf2,w,c
 14121  001630  6F7B               	movwf	strtol@c& (0+255),b
 14122                           
 14123                           ; BSR set to: 0
 14124  001632  4B6C               	infsnz	strtol@s& (0+255),f,b
 14125  001634  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14126  001636  D008               	goto	l2768
 14127  001638                     l2762:
 14128                           
 14129                           ; BSR set to: 0
 14130                           
 14131                           ; BSR set to: 0
 14132  001638  5170               	movf	strtol@base& (0+255),w,b
 14133  00163A  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14134  00163C  A4D8               	btfss	status,2,c
 14135  00163E  D004               	goto	l2768
 14136                           
 14137                           ; BSR set to: 0
 14138  001640  0E00               	movlw	0
 14139  001642  6F71               	movwf	(strtol@base+1)& (0+255),b
 14140  001644  0E08               	movlw	8
 14141  001646  6F70               	movwf	strtol@base& (0+255),b
 14142  001648                     l2768:
 14143                           
 14144                           ; BSR set to: 0
 14145                           
 14146                           ; BSR set to: 0
 14147                           
 14148                           ; BSR set to: 0
 14149                           
 14150                           ; BSR set to: 0
 14151  001648  5170               	movf	strtol@base& (0+255),w,b
 14152  00164A  1171               	iorwf	(strtol@base+1)& (0+255),w,b
 14153  00164C  A4D8               	btfss	status,2,c
 14154  00164E  D004               	goto	l2769
 14155                           
 14156                           ; BSR set to: 0
 14157  001650  0E00               	movlw	0
 14158  001652  6F71               	movwf	(strtol@base+1)& (0+255),b
 14159  001654  0E0A               	movlw	10
 14160  001656  6F70               	movwf	strtol@base& (0+255),b
 14161  001658                     l2769:
 14162                           
 14163                           ; BSR set to: 0
 14164                           
 14165                           ; BSR set to: 0
 14166                           
 14167                           ; BSR set to: 0
 14168  001658  517B               	movf	strtol@c& (0+255),w,b
 14169  00165A  EC09  F025         	call	_isalpha
 14170  00165E  A0D8               	btfss	status,0,c
 14171  001660  D008               	goto	l2771
 14172  001662  0100               	movlb	0	; () banked
 14173  001664  517B               	movf	strtol@c& (0+255),w,b
 14174  001666  ECC9  F026         	call	_toupper
 14175  00166A  0FC9               	addlw	201
 14176  00166C  0100               	movlb	0	; () banked
 14177  00166E  6F7B               	movwf	strtol@c& (0+255),b
 14178  001670  D009               	goto	l2774
 14179  001672                     l2771:
 14180                           
 14181                           ; BSR set to: 0
 14182  001672  0100               	movlb	0	; () banked
 14183  001674  517B               	movf	strtol@c& (0+255),w,b
 14184  001676  EC0E  F026         	call	_isdigit
 14185  00167A  A0D8               	btfss	status,0,c
 14186  00167C  D039               	goto	l2775
 14187  00167E  0E30               	movlw	48
 14188  001680  0100               	movlb	0	; () banked
 14189  001682  5F7B               	subwf	strtol@c& (0+255),f,b
 14190  001684                     l2774:
 14191                           
 14192                           ; BSR set to: 0
 14193                           
 14194                           ; BSR set to: 0
 14195                           
 14196                           ; BSR set to: 0
 14197  001684  517B               	movf	strtol@c& (0+255),w,b
 14198  001686  6F72               	movwf	??_strtol& (0+255),b
 14199  001688  6B73               	clrf	(??_strtol+1)& (0+255),b
 14200  00168A  5170               	movf	strtol@base& (0+255),w,b
 14201  00168C  5D72               	subwf	??_strtol& (0+255),w,b
 14202  00168E  5173               	movf	(??_strtol+1)& (0+255),w,b
 14203  001690  0A80               	xorlw	128
 14204  001692  6F74               	movwf	(??_strtol+2)& (0+255),b
 14205  001694  5171               	movf	(strtol@base+1)& (0+255),w,b
 14206  001696  0A80               	xorlw	128
 14207  001698  5974               	subwfb	(??_strtol+2)& (0+255),w,b
 14208  00169A  B0D8               	btfsc	status,0,c
 14209  00169C  D029               	goto	l2775
 14210                           
 14211                           ; BSR set to: 0
 14212                           
 14213                           ; BSR set to: 0
 14214                           
 14215                           ; BSR set to: 0
 14216  00169E  C070  F060         	movff	strtol@base,___lmul@multiplier
 14217  0016A2  C071  F061         	movff	strtol@base+1,___lmul@multiplier+1
 14218  0016A6  0E00               	movlw	0
 14219  0016A8  BF61               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 14220  0016AA  0EFF               	movlw	-1
 14221  0016AC  6F62               	movwf	(___lmul@multiplier+2)& (0+255),b
 14222  0016AE  6F63               	movwf	(___lmul@multiplier+3)& (0+255),b
 14223  0016B0  C077  F064         	movff	strtol@a,___lmul@multiplicand
 14224  0016B4  C078  F065         	movff	strtol@a+1,___lmul@multiplicand+1
 14225  0016B8  C079  F066         	movff	strtol@a+2,___lmul@multiplicand+2
 14226  0016BC  C07A  F067         	movff	strtol@a+3,___lmul@multiplicand+3
 14227  0016C0  ECA4  F020         	call	___lmul	;wreg free
 14228  0016C4  0100               	movlb	0	; () banked
 14229  0016C6  517B               	movf	strtol@c& (0+255),w,b
 14230  0016C8  2560               	addwf	?___lmul& (0+255),w,b
 14231  0016CA  6F77               	movwf	strtol@a& (0+255),b
 14232  0016CC  0E00               	movlw	0
 14233  0016CE  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 14234  0016D0  6F78               	movwf	(strtol@a+1)& (0+255),b
 14235  0016D2  0E00               	movlw	0
 14236  0016D4  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 14237  0016D6  6F79               	movwf	(strtol@a+2)& (0+255),b
 14238  0016D8  0E00               	movlw	0
 14239  0016DA  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 14240  0016DC  6F7A               	movwf	(strtol@a+3)& (0+255),b
 14241                           
 14242                           ; BSR set to: 0
 14243  0016DE  C06C  FFD9         	movff	strtol@s,fsr2l
 14244  0016E2  C06D  FFDA         	movff	strtol@s+1,fsr2h
 14245  0016E6  50DF               	movf	indf2,w,c
 14246  0016E8  6F7B               	movwf	strtol@c& (0+255),b
 14247                           
 14248                           ; BSR set to: 0
 14249  0016EA  4B6C               	infsnz	strtol@s& (0+255),f,b
 14250  0016EC  2B6D               	incf	(strtol@s+1)& (0+255),f,b
 14251  0016EE  D7B4               	goto	l2769
 14252  0016F0                     l2775:
 14253                           
 14254                           ; BSR set to: 0
 14255  0016F0  0100               	movlb	0	; () banked
 14256  0016F2  516E               	movf	strtol@endptr& (0+255),w,b
 14257  0016F4  116F               	iorwf	(strtol@endptr+1)& (0+255),w,b
 14258  0016F6  B4D8               	btfsc	status,2,c
 14259  0016F8  D00E               	goto	l2777
 14260                           
 14261                           ; BSR set to: 0
 14262  0016FA  0EFF               	movlw	255
 14263  0016FC  256C               	addwf	strtol@s& (0+255),w,b
 14264  0016FE  6F72               	movwf	??_strtol& (0+255),b
 14265  001700  0EFF               	movlw	255
 14266  001702  216D               	addwfc	(strtol@s+1)& (0+255),w,b
 14267  001704  6F73               	movwf	(??_strtol+1)& (0+255),b
 14268  001706  C06E  FFD9         	movff	strtol@endptr,fsr2l
 14269  00170A  C06F  FFDA         	movff	strtol@endptr+1,fsr2h
 14270  00170E  C072  FFDE         	movff	??_strtol,postinc2
 14271  001712  C073  FFDD         	movff	??_strtol+1,postdec2
 14272  001716                     l2777:
 14273                           
 14274                           ; BSR set to: 0
 14275                           
 14276                           ; BSR set to: 0
 14277  001716  5176               	movf	strtol@sign& (0+255),w,b
 14278  001718  B4D8               	btfsc	status,2,c
 14279  00171A  D01A               	goto	l2778
 14280                           
 14281                           ; BSR set to: 0
 14282  00171C  C077  F072         	movff	strtol@a,??_strtol
 14283  001720  C078  F073         	movff	strtol@a+1,??_strtol+1
 14284  001724  C079  F074         	movff	strtol@a+2,??_strtol+2
 14285  001728  C07A  F075         	movff	strtol@a+3,??_strtol+3
 14286  00172C  1F72               	comf	??_strtol& (0+255),f,b
 14287  00172E  1F73               	comf	(??_strtol+1)& (0+255),f,b
 14288  001730  1F74               	comf	(??_strtol+2)& (0+255),f,b
 14289  001732  1F75               	comf	(??_strtol+3)& (0+255),f,b
 14290  001734  2B72               	incf	??_strtol& (0+255),f,b
 14291  001736  0E00               	movlw	0
 14292  001738  2373               	addwfc	(??_strtol+1)& (0+255),f,b
 14293  00173A  2374               	addwfc	(??_strtol+2)& (0+255),f,b
 14294  00173C  2375               	addwfc	(??_strtol+3)& (0+255),f,b
 14295  00173E  C072  F06C         	movff	??_strtol,?_strtol
 14296  001742  C073  F06D         	movff	??_strtol+1,?_strtol+1
 14297  001746  C074  F06E         	movff	??_strtol+2,?_strtol+2
 14298  00174A  C075  F06F         	movff	??_strtol+3,?_strtol+3
 14299                           
 14300                           ; BSR set to: 0
 14301  00174E  0012               	return	
 14302  001750                     l2778:
 14303                           
 14304                           ; BSR set to: 0
 14305  001750  C077  F06C         	movff	strtol@a,?_strtol
 14306  001754  C078  F06D         	movff	strtol@a+1,?_strtol+1
 14307  001758  C079  F06E         	movff	strtol@a+2,?_strtol+2
 14308  00175C  C07A  F06F         	movff	strtol@a+3,?_strtol+3
 14309                           
 14310                           ; BSR set to: 0
 14311  001760  0012               	return		;funcret
 14312  001762                     __end_of_strtol:
 14313                           	opt stack 0
 14314                           tosu	equ	0xFFF
 14315                           tosh	equ	0xFFE
 14316                           tosl	equ	0xFFD
 14317                           pclath	equ	0xFFA
 14318                           tblptru	equ	0xFF8
 14319                           tblptrh	equ	0xFF7
 14320                           tblptrl	equ	0xFF6
 14321                           tablat	equ	0xFF5
 14322                           prodh	equ	0xFF4
 14323                           prodl	equ	0xFF3
 14324                           intcon	equ	0xFF2
 14325                           intcon2	equ	0xFF1
 14326                           intcon3	equ	0xFF0
 14327                           indf0	equ	0xFEF
 14328                           postinc0	equ	0xFEE
 14329                           plusw0	equ	0xFEB
 14330                           fsr0h	equ	0xFEA
 14331                           fsr0l	equ	0xFE9
 14332                           wreg	equ	0xFE8
 14333                           indf1	equ	0xFE7
 14334                           postinc1	equ	0xFE6
 14335                           postdec1	equ	0xFE5
 14336                           fsr1h	equ	0xFE2
 14337                           fsr1l	equ	0xFE1
 14338                           indf2	equ	0xFDF
 14339                           postinc2	equ	0xFDE
 14340                           postdec2	equ	0xFDD
 14341                           plusw2	equ	0xFDB
 14342                           fsr2h	equ	0xFDA
 14343                           fsr2l	equ	0xFD9
 14344                           status	equ	0xFD8
 14345                           
 14346 ;; *************** function _toupper *****************
 14347 ;; Defined at:
 14348 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
 14349 ;; Parameters:    Size  Location     Type
 14350 ;;  c               1    wreg     unsigned char 
 14351 ;; Auto vars:     Size  Location     Type
 14352 ;;  c               1    0[BANK0 ] unsigned char 
 14353 ;; Return value:  Size  Location     Type
 14354 ;;                  1    wreg      unsigned char 
 14355 ;; Registers used:
 14356 ;;		wreg, status,2, status,0
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14363 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14365 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14366 ;;Total ram usage:        1 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:   11
 14369 ;; This function calls:
 14370 ;;		Nothing
 14371 ;; This function is called by:
 14372 ;;		_strtol
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376                           	psect	text56
 14377  004D92                     __ptext56:
 14378                           	opt stack 0
 14379  004D92                     _toupper:
 14380                           	opt stack 13
 14381                           
 14382                           ; BSR set to: 0
 14383                           ;incstack = 0
 14384                           ;toupper@c stored from wreg
 14385  004D92  0100               	movlb	0	; () banked
 14386  004D94  6F60               	movwf	toupper@c& (0+255),b
 14387  004D96  0E7B               	movlw	123
 14388  004D98  0100               	movlb	0	; () banked
 14389  004D9A  6160               	cpfslt	toupper@c& (0+255),b
 14390  004D9C  D004               	goto	l2782
 14391                           
 14392                           ; BSR set to: 0
 14393  004D9E  0E60               	movlw	96
 14394  004DA0  6560               	cpfsgt	toupper@c& (0+255),b
 14395  004DA2  D001               	goto	l2782
 14396                           
 14397                           ; BSR set to: 0
 14398  004DA4  9B60               	bcf	toupper@c& (0+255),5,b
 14399  004DA6                     l2782:
 14400                           
 14401                           ; BSR set to: 0
 14402                           
 14403                           ; BSR set to: 0
 14404  004DA6  5160               	movf	toupper@c& (0+255),w,b
 14405  004DA8  0012               	return	
 14406  004DAA                     __end_of_toupper:
 14407                           	opt stack 0
 14408                           tosu	equ	0xFFF
 14409                           tosh	equ	0xFFE
 14410                           tosl	equ	0xFFD
 14411                           pclath	equ	0xFFA
 14412                           tblptru	equ	0xFF8
 14413                           tblptrh	equ	0xFF7
 14414                           tblptrl	equ	0xFF6
 14415                           tablat	equ	0xFF5
 14416                           prodh	equ	0xFF4
 14417                           prodl	equ	0xFF3
 14418                           intcon	equ	0xFF2
 14419                           intcon2	equ	0xFF1
 14420                           intcon3	equ	0xFF0
 14421                           indf0	equ	0xFEF
 14422                           postinc0	equ	0xFEE
 14423                           plusw0	equ	0xFEB
 14424                           fsr0h	equ	0xFEA
 14425                           fsr0l	equ	0xFE9
 14426                           wreg	equ	0xFE8
 14427                           indf1	equ	0xFE7
 14428                           postinc1	equ	0xFE6
 14429                           postdec1	equ	0xFE5
 14430                           fsr1h	equ	0xFE2
 14431                           fsr1l	equ	0xFE1
 14432                           indf2	equ	0xFDF
 14433                           postinc2	equ	0xFDE
 14434                           postdec2	equ	0xFDD
 14435                           plusw2	equ	0xFDB
 14436                           fsr2h	equ	0xFDA
 14437                           fsr2l	equ	0xFD9
 14438                           status	equ	0xFD8
 14439                           
 14440 ;; *************** function _isspace *****************
 14441 ;; Defined at:
 14442 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isspace.c"
 14443 ;; Parameters:    Size  Location     Type
 14444 ;;  c               1    wreg     unsigned char 
 14445 ;; Auto vars:     Size  Location     Type
 14446 ;;  c               1    2[BANK0 ] unsigned char 
 14447 ;; Return value:  Size  Location     Type
 14448 ;;		None               void
 14449 ;; Registers used:
 14450 ;;		wreg, status,2, status,0
 14451 ;; Tracked objects:
 14452 ;;		On entry : 0/0
 14453 ;;		On exit  : 0/0
 14454 ;;		Unchanged: 0/0
 14455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14457 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14458 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14459 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14460 ;;Total ram usage:        3 bytes
 14461 ;; Hardware stack levels used:    1
 14462 ;; Hardware stack levels required when called:   11
 14463 ;; This function calls:
 14464 ;;		Nothing
 14465 ;; This function is called by:
 14466 ;;		_strtol
 14467 ;; This function uses a non-reentrant model
 14468 ;;
 14469                           
 14470                           	psect	text57
 14471  004AF4                     __ptext57:
 14472                           	opt stack 0
 14473  004AF4                     _isspace:
 14474                           	opt stack 13
 14475                           
 14476                           ; BSR set to: 0
 14477                           ;incstack = 0
 14478                           ;isspace@c stored from wreg
 14479  004AF4  0100               	movlb	0	; () banked
 14480  004AF6  6F62               	movwf	isspace@c& (0+255),b
 14481  004AF8  0E01               	movlw	1
 14482  004AFA  0100               	movlb	0	; () banked
 14483  004AFC  6F61               	movwf	_isspace$5860& (0+255),b
 14484                           
 14485                           ; BSR set to: 0
 14486  004AFE  0E20               	movlw	32
 14487  004B00  1962               	xorwf	isspace@c& (0+255),w,b
 14488  004B02  B4D8               	btfsc	status,2,c
 14489  004B04  D008               	goto	l2813
 14490                           
 14491                           ; BSR set to: 0
 14492  004B06  0E0E               	movlw	14
 14493  004B08  6162               	cpfslt	isspace@c& (0+255),b
 14494  004B0A  D003               	goto	u5220
 14495                           
 14496                           ; BSR set to: 0
 14497  004B0C  0E09               	movlw	9
 14498  004B0E  6162               	cpfslt	isspace@c& (0+255),b
 14499  004B10  D002               	goto	l2813
 14500  004B12                     u5220:
 14501                           
 14502                           ; BSR set to: 0
 14503                           
 14504                           ; BSR set to: 0
 14505  004B12  0E00               	movlw	0
 14506  004B14  6F61               	movwf	_isspace$5860& (0+255),b
 14507  004B16                     l2813:
 14508                           
 14509                           ; BSR set to: 0
 14510                           
 14511                           ; BSR set to: 0
 14512  004B16  C061  F060         	movff	_isspace$5860,??_isspace
 14513  004B1A  3160               	rrcf	??_isspace& (0+255),w,b
 14514  004B1C  0012               	return	
 14515  004B1E                     __end_of_isspace:
 14516                           	opt stack 0
 14517                           tosu	equ	0xFFF
 14518                           tosh	equ	0xFFE
 14519                           tosl	equ	0xFFD
 14520                           pclath	equ	0xFFA
 14521                           tblptru	equ	0xFF8
 14522                           tblptrh	equ	0xFF7
 14523                           tblptrl	equ	0xFF6
 14524                           tablat	equ	0xFF5
 14525                           prodh	equ	0xFF4
 14526                           prodl	equ	0xFF3
 14527                           intcon	equ	0xFF2
 14528                           intcon2	equ	0xFF1
 14529                           intcon3	equ	0xFF0
 14530                           indf0	equ	0xFEF
 14531                           postinc0	equ	0xFEE
 14532                           plusw0	equ	0xFEB
 14533                           fsr0h	equ	0xFEA
 14534                           fsr0l	equ	0xFE9
 14535                           wreg	equ	0xFE8
 14536                           indf1	equ	0xFE7
 14537                           postinc1	equ	0xFE6
 14538                           postdec1	equ	0xFE5
 14539                           fsr1h	equ	0xFE2
 14540                           fsr1l	equ	0xFE1
 14541                           indf2	equ	0xFDF
 14542                           postinc2	equ	0xFDE
 14543                           postdec2	equ	0xFDD
 14544                           plusw2	equ	0xFDB
 14545                           fsr2h	equ	0xFDA
 14546                           fsr2l	equ	0xFD9
 14547                           status	equ	0xFD8
 14548                           
 14549 ;; *************** function _isalpha *****************
 14550 ;; Defined at:
 14551 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isalpha.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;  c               1    wreg     unsigned char 
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;  c               1    5[BANK0 ] unsigned char 
 14556 ;; Return value:  Size  Location     Type
 14557 ;;		None               void
 14558 ;; Registers used:
 14559 ;;		wreg, status,2, status,0, cstack
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14568 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14569 ;;Total ram usage:        3 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:   12
 14572 ;; This function calls:
 14573 ;;		_isupper
 14574 ;; This function is called by:
 14575 ;;		_strtol
 14576 ;; This function uses a non-reentrant model
 14577 ;;
 14578                           
 14579                           	psect	text58
 14580  004A12                     __ptext58:
 14581                           	opt stack 0
 14582  004A12                     _isalpha:
 14583                           	opt stack 12
 14584                           
 14585                           ; BSR set to: 0
 14586                           ;incstack = 0
 14587                           ;isalpha@c stored from wreg
 14588  004A12  0100               	movlb	0	; () banked
 14589  004A14  6F65               	movwf	isalpha@c& (0+255),b
 14590  004A16  0E01               	movlw	1
 14591  004A18  0100               	movlb	0	; () banked
 14592  004A1A  6F64               	movwf	_isalpha$5857& (0+255),b
 14593                           
 14594                           ; BSR set to: 0
 14595  004A1C  0E7B               	movlw	123
 14596  004A1E  6165               	cpfslt	isalpha@c& (0+255),b
 14597  004A20  D003               	goto	u5240
 14598                           
 14599                           ; BSR set to: 0
 14600  004A22  0E61               	movlw	97
 14601  004A24  6165               	cpfslt	isalpha@c& (0+255),b
 14602  004A26  D008               	goto	l2808
 14603  004A28                     u5240:
 14604                           
 14605                           ; BSR set to: 0
 14606                           
 14607                           ; BSR set to: 0
 14608  004A28  5165               	movf	isalpha@c& (0+255),w,b
 14609  004A2A  ECEC  F025         	call	_isupper
 14610  004A2E  B0D8               	btfsc	status,0,c
 14611  004A30  D003               	goto	l2808
 14612  004A32  0E00               	movlw	0
 14613  004A34  0100               	movlb	0	; () banked
 14614  004A36  6F64               	movwf	_isalpha$5857& (0+255),b
 14615  004A38                     l2808:
 14616                           
 14617                           ; BSR set to: 0
 14618  004A38  C064  F063         	movff	_isalpha$5857,??_isalpha
 14619  004A3C  0100               	movlb	0	; () banked
 14620  004A3E  3163               	rrcf	??_isalpha& (0+255),w,b
 14621  004A40  0012               	return	
 14622  004A42                     __end_of_isalpha:
 14623                           	opt stack 0
 14624                           tosu	equ	0xFFF
 14625                           tosh	equ	0xFFE
 14626                           tosl	equ	0xFFD
 14627                           pclath	equ	0xFFA
 14628                           tblptru	equ	0xFF8
 14629                           tblptrh	equ	0xFF7
 14630                           tblptrl	equ	0xFF6
 14631                           tablat	equ	0xFF5
 14632                           prodh	equ	0xFF4
 14633                           prodl	equ	0xFF3
 14634                           intcon	equ	0xFF2
 14635                           intcon2	equ	0xFF1
 14636                           intcon3	equ	0xFF0
 14637                           indf0	equ	0xFEF
 14638                           postinc0	equ	0xFEE
 14639                           plusw0	equ	0xFEB
 14640                           fsr0h	equ	0xFEA
 14641                           fsr0l	equ	0xFE9
 14642                           wreg	equ	0xFE8
 14643                           indf1	equ	0xFE7
 14644                           postinc1	equ	0xFE6
 14645                           postdec1	equ	0xFE5
 14646                           fsr1h	equ	0xFE2
 14647                           fsr1l	equ	0xFE1
 14648                           indf2	equ	0xFDF
 14649                           postinc2	equ	0xFDE
 14650                           postdec2	equ	0xFDD
 14651                           plusw2	equ	0xFDB
 14652                           fsr2h	equ	0xFDA
 14653                           fsr2l	equ	0xFD9
 14654                           status	equ	0xFD8
 14655                           
 14656 ;; *************** function _isupper *****************
 14657 ;; Defined at:
 14658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isupper.c"
 14659 ;; Parameters:    Size  Location     Type
 14660 ;;  c               1    wreg     unsigned char 
 14661 ;; Auto vars:     Size  Location     Type
 14662 ;;  c               1    2[BANK0 ] unsigned char 
 14663 ;; Return value:  Size  Location     Type
 14664 ;;		None               void
 14665 ;; Registers used:
 14666 ;;		wreg, status,2, status,0
 14667 ;; Tracked objects:
 14668 ;;		On entry : 0/0
 14669 ;;		On exit  : 0/0
 14670 ;;		Unchanged: 0/0
 14671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14673 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14674 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14675 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14676 ;;Total ram usage:        3 bytes
 14677 ;; Hardware stack levels used:    1
 14678 ;; Hardware stack levels required when called:   11
 14679 ;; This function calls:
 14680 ;;		Nothing
 14681 ;; This function is called by:
 14682 ;;		_isalpha
 14683 ;; This function uses a non-reentrant model
 14684 ;;
 14685                           
 14686                           	psect	text59
 14687  004BD8                     __ptext59:
 14688                           	opt stack 0
 14689  004BD8                     _isupper:
 14690                           	opt stack 12
 14691                           
 14692                           ; BSR set to: 0
 14693                           ;incstack = 0
 14694                           ;isupper@c stored from wreg
 14695  004BD8  0100               	movlb	0	; () banked
 14696  004BDA  6F62               	movwf	isupper@c& (0+255),b
 14697  004BDC  0E00               	movlw	0
 14698  004BDE  0100               	movlb	0	; () banked
 14699  004BE0  6F61               	movwf	_isupper$5863& (0+255),b
 14700                           
 14701                           ; BSR set to: 0
 14702  004BE2  0E5B               	movlw	91
 14703  004BE4  6162               	cpfslt	isupper@c& (0+255),b
 14704  004BE6  D005               	goto	l2818
 14705                           
 14706                           ; BSR set to: 0
 14707  004BE8  0E40               	movlw	64
 14708  004BEA  6562               	cpfsgt	isupper@c& (0+255),b
 14709  004BEC  D002               	goto	l2818
 14710                           
 14711                           ; BSR set to: 0
 14712  004BEE  0E01               	movlw	1
 14713  004BF0  6F61               	movwf	_isupper$5863& (0+255),b
 14714  004BF2                     l2818:
 14715                           
 14716                           ; BSR set to: 0
 14717                           
 14718                           ; BSR set to: 0
 14719  004BF2  C061  F060         	movff	_isupper$5863,??_isupper
 14720  004BF6  3160               	rrcf	??_isupper& (0+255),w,b
 14721  004BF8  0012               	return	
 14722  004BFA                     __end_of_isupper:
 14723                           	opt stack 0
 14724                           tosu	equ	0xFFF
 14725                           tosh	equ	0xFFE
 14726                           tosl	equ	0xFFD
 14727                           pclath	equ	0xFFA
 14728                           tblptru	equ	0xFF8
 14729                           tblptrh	equ	0xFF7
 14730                           tblptrl	equ	0xFF6
 14731                           tablat	equ	0xFF5
 14732                           prodh	equ	0xFF4
 14733                           prodl	equ	0xFF3
 14734                           intcon	equ	0xFF2
 14735                           intcon2	equ	0xFF1
 14736                           intcon3	equ	0xFF0
 14737                           indf0	equ	0xFEF
 14738                           postinc0	equ	0xFEE
 14739                           plusw0	equ	0xFEB
 14740                           fsr0h	equ	0xFEA
 14741                           fsr0l	equ	0xFE9
 14742                           wreg	equ	0xFE8
 14743                           indf1	equ	0xFE7
 14744                           postinc1	equ	0xFE6
 14745                           postdec1	equ	0xFE5
 14746                           fsr1h	equ	0xFE2
 14747                           fsr1l	equ	0xFE1
 14748                           indf2	equ	0xFDF
 14749                           postinc2	equ	0xFDE
 14750                           postdec2	equ	0xFDD
 14751                           plusw2	equ	0xFDB
 14752                           fsr2h	equ	0xFDA
 14753                           fsr2l	equ	0xFD9
 14754                           status	equ	0xFD8
 14755                           
 14756 ;; *************** function _putUSBUSART *****************
 14757 ;; Defined at:
 14758 ;;		line 559 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 14759 ;; Parameters:    Size  Location     Type
 14760 ;;  data            2    6[BANK0 ] PTR unsigned char 
 14761 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(236), Welcome(137), 
 14762 ;;		 -> Terminal@TermRxBuffer(50), Terminal@Payload(100), Terminal@UsbRxBuffer(200), WifiTerminal@UartBuffer(200), 
 14763 ;;  length          1    8[BANK0 ] unsigned char 
 14764 ;; Auto vars:     Size  Location     Type
 14765 ;;		None
 14766 ;; Return value:  Size  Location     Type
 14767 ;;                  1    wreg      void 
 14768 ;; Registers used:
 14769 ;;		wreg, status,2, status,0
 14770 ;; Tracked objects:
 14771 ;;		On entry : 0/0
 14772 ;;		On exit  : 0/0
 14773 ;;		Unchanged: 0/0
 14774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14775 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14778 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14779 ;;Total ram usage:        3 bytes
 14780 ;; Hardware stack levels used:    1
 14781 ;; Hardware stack levels required when called:   11
 14782 ;; This function calls:
 14783 ;;		Nothing
 14784 ;; This function is called by:
 14785 ;;		_Terminal
 14786 ;;		_Term_MainSm
 14787 ;;		_WifiTerminal
 14788 ;; This function uses a non-reentrant model
 14789 ;;
 14790                           
 14791                           	psect	text60
 14792  004BFA                     __ptext60:
 14793                           	opt stack 0
 14794  004BFA                     _putUSBUSART:
 14795                           	opt stack 15
 14796                           
 14797                           ;usb_device_cdc.c: 584: ;
 14798                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 14799                           
 14800                           ; BSR set to: 0
 14801                           ;incstack = 0
 14802  004BFA  0100               	movlb	0	; () banked
 14803  004BFC  51FB               	movf	_cdc_trf_state& (0+255),w,b
 14804  004BFE  A4D8               	btfss	status,2,c
 14805  004C00  0012               	return	
 14806                           
 14807                           ; BSR set to: 0
 14808                           ;usb_device_cdc.c: 586: {
 14809                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 14810  004C02  C066  F135         	movff	putUSBUSART@data,_pCDCSrc
 14811  004C06  C067  F136         	movff	putUSBUSART@data+1,_pCDCSrc+1
 14812                           
 14813                           ; BSR set to: 0
 14814  004C0A  C068  F046         	movff	putUSBUSART@length,_cdc_tx_len
 14815                           
 14816                           ; BSR set to: 0
 14817  004C0E  0E01               	movlw	1
 14818  004C10  0101               	movlb	1	; () banked
 14819  004C12  6F5C               	movwf	_cdc_mem_type& (0+255),b
 14820                           
 14821                           ; BSR set to: 1
 14822  004C14  0E01               	movlw	1
 14823  004C16  0100               	movlb	0	; () banked
 14824  004C18  6FFB               	movwf	_cdc_trf_state& (0+255),b
 14825  004C1A  0012               	return	
 14826  004C1C                     __end_of_putUSBUSART:
 14827                           	opt stack 0
 14828                           tosu	equ	0xFFF
 14829                           tosh	equ	0xFFE
 14830                           tosl	equ	0xFFD
 14831                           pclath	equ	0xFFA
 14832                           tblptru	equ	0xFF8
 14833                           tblptrh	equ	0xFF7
 14834                           tblptrl	equ	0xFF6
 14835                           tablat	equ	0xFF5
 14836                           prodh	equ	0xFF4
 14837                           prodl	equ	0xFF3
 14838                           intcon	equ	0xFF2
 14839                           intcon2	equ	0xFF1
 14840                           intcon3	equ	0xFF0
 14841                           indf0	equ	0xFEF
 14842                           postinc0	equ	0xFEE
 14843                           plusw0	equ	0xFEB
 14844                           fsr0h	equ	0xFEA
 14845                           fsr0l	equ	0xFE9
 14846                           wreg	equ	0xFE8
 14847                           indf1	equ	0xFE7
 14848                           postinc1	equ	0xFE6
 14849                           postdec1	equ	0xFE5
 14850                           fsr1h	equ	0xFE2
 14851                           fsr1l	equ	0xFE1
 14852                           indf2	equ	0xFDF
 14853                           postinc2	equ	0xFDE
 14854                           postdec2	equ	0xFDD
 14855                           plusw2	equ	0xFDB
 14856                           fsr2h	equ	0xFDA
 14857                           fsr2l	equ	0xFD9
 14858                           status	equ	0xFD8
 14859                           
 14860 ;; *************** function _itoa *****************
 14861 ;; Defined at:
 14862 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 14863 ;; Parameters:    Size  Location     Type
 14864 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 14865 ;;		 -> Terminal@Payload(100), 
 14866 ;;  val             2   18[BANK0 ] int 
 14867 ;;  base            2   20[BANK0 ] int 
 14868 ;; Auto vars:     Size  Location     Type
 14869 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 14870 ;;		 -> Terminal@Payload(100), 
 14871 ;; Return value:  Size  Location     Type
 14872 ;;                  2   16[BANK0 ] PTR unsigned char 
 14873 ;; Registers used:
 14874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14875 ;; Tracked objects:
 14876 ;;		On entry : 0/0
 14877 ;;		On exit  : 0/0
 14878 ;;		Unchanged: 0/0
 14879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14880 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14881 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14883 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14884 ;;Total ram usage:        8 bytes
 14885 ;; Hardware stack levels used:    1
 14886 ;; Hardware stack levels required when called:   13
 14887 ;; This function calls:
 14888 ;;		_utoa
 14889 ;; This function is called by:
 14890 ;;		_Terminal
 14891 ;; This function uses a non-reentrant model
 14892 ;;
 14893                           
 14894                           	psect	text61
 14895  00467A                     __ptext61:
 14896                           	opt stack 0
 14897  00467A                     _itoa:
 14898                           	opt stack 12
 14899                           
 14900                           ; BSR set to: 0
 14901                           ;incstack = 0
 14902  00467A  C070  F076         	movff	itoa@buf,itoa@cp
 14903  00467E  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 14904  004682  0100               	movlb	0	; () banked
 14905  004684  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 14906  004686  D00C               	goto	l2469
 14907                           
 14908                           ; BSR set to: 0
 14909  004688  C070  FFD9         	movff	itoa@buf,fsr2l
 14910  00468C  C071  FFDA         	movff	itoa@buf+1,fsr2h
 14911  004690  0E2D               	movlw	45
 14912  004692  6EDF               	movwf	indf2,c
 14913                           
 14914                           ; BSR set to: 0
 14915  004694  4B70               	infsnz	itoa@buf& (0+255),f,b
 14916  004696  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 14917                           
 14918                           ; BSR set to: 0
 14919  004698  6D72               	negf	itoa@val& (0+255),b
 14920  00469A  1F73               	comf	(itoa@val+1)& (0+255),f,b
 14921  00469C  B0D8               	btfsc	status,0,c
 14922  00469E  2B73               	incf	(itoa@val+1)& (0+255),f,b
 14923  0046A0                     l2469:
 14924                           
 14925                           ; BSR set to: 0
 14926                           
 14927                           ; BSR set to: 0
 14928  0046A0  C070  F067         	movff	itoa@buf,utoa@buf
 14929  0046A4  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 14930  0046A8  C072  F069         	movff	itoa@val,utoa@val
 14931  0046AC  C073  F06A         	movff	itoa@val+1,utoa@val+1
 14932  0046B0  C074  F06B         	movff	itoa@base,utoa@base
 14933  0046B4  C075  F06C         	movff	itoa@base+1,utoa@base+1
 14934  0046B8  EC8E  F019         	call	_utoa	;wreg free
 14935  0046BC  0012               	return	
 14936  0046BE                     __end_of_itoa:
 14937                           	opt stack 0
 14938                           tosu	equ	0xFFF
 14939                           tosh	equ	0xFFE
 14940                           tosl	equ	0xFFD
 14941                           pclath	equ	0xFFA
 14942                           tblptru	equ	0xFF8
 14943                           tblptrh	equ	0xFF7
 14944                           tblptrl	equ	0xFF6
 14945                           tablat	equ	0xFF5
 14946                           prodh	equ	0xFF4
 14947                           prodl	equ	0xFF3
 14948                           intcon	equ	0xFF2
 14949                           intcon2	equ	0xFF1
 14950                           intcon3	equ	0xFF0
 14951                           indf0	equ	0xFEF
 14952                           postinc0	equ	0xFEE
 14953                           plusw0	equ	0xFEB
 14954                           fsr0h	equ	0xFEA
 14955                           fsr0l	equ	0xFE9
 14956                           wreg	equ	0xFE8
 14957                           indf1	equ	0xFE7
 14958                           postinc1	equ	0xFE6
 14959                           postdec1	equ	0xFE5
 14960                           fsr1h	equ	0xFE2
 14961                           fsr1l	equ	0xFE1
 14962                           indf2	equ	0xFDF
 14963                           postinc2	equ	0xFDE
 14964                           postdec2	equ	0xFDD
 14965                           plusw2	equ	0xFDB
 14966                           fsr2h	equ	0xFDA
 14967                           fsr2l	equ	0xFD9
 14968                           status	equ	0xFD8
 14969                           
 14970 ;; *************** function _getsUSBUSART *****************
 14971 ;; Defined at:
 14972 ;;		line 488 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 14973 ;; Parameters:    Size  Location     Type
 14974 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 14975 ;;		 -> Terminal@UsbRxBuffer(200), WifiTerminal@UsbBuffer(200), 
 14976 ;;  len             1    9[BANK0 ] unsigned char 
 14977 ;; Auto vars:     Size  Location     Type
 14978 ;;		None
 14979 ;; Return value:  Size  Location     Type
 14980 ;;                  1    wreg      unsigned char 
 14981 ;; Registers used:
 14982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14983 ;; Tracked objects:
 14984 ;;		On entry : 0/0
 14985 ;;		On exit  : 0/0
 14986 ;;		Unchanged: 0/0
 14987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14988 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14990 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14991 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14992 ;;Total ram usage:        4 bytes
 14993 ;; Hardware stack levels used:    1
 14994 ;; Hardware stack levels required when called:   12
 14995 ;; This function calls:
 14996 ;;		_USBTransferOnePacket
 14997 ;; This function is called by:
 14998 ;;		_Terminal
 14999 ;;		_WifiTerminal
 15000 ;; This function uses a non-reentrant model
 15001 ;;
 15002                           
 15003                           	psect	text62
 15004  003764                     __ptext62:
 15005                           	opt stack 0
 15006  003764                     _getsUSBUSART:
 15007                           	opt stack 13
 15008                           
 15009                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 15010                           
 15011                           ;incstack = 0
 15012  003764  0E00               	movlw	0
 15013  003766  6E47               	movwf	_cdc_rx_len,c
 15014                           
 15015                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 15016  003768  5044               	movf	_CDCDataOutHandle,w,c
 15017  00376A  1045               	iorwf	_CDCDataOutHandle+1,w,c
 15018  00376C  B4D8               	btfsc	status,2,c
 15019  00376E  D006               	goto	u5480
 15020  003770  C044  FFD9         	movff	_CDCDataOutHandle,fsr2l
 15021  003774  C045  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 15022  003778  BEDF               	btfsc	indf2,7,c
 15023  00377A  D03C               	goto	l1661
 15024  00377C                     u5480:
 15025                           
 15026                           ;usb_device_cdc.c: 493: {
 15027                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 15028  00377C  EE20 F001          	lfsr	2,1
 15029  003780  5044               	movf	_CDCDataOutHandle,w,c
 15030  003782  26D9               	addwf	fsr2l,f,c
 15031  003784  5045               	movf	_CDCDataOutHandle+1,w,c
 15032  003786  22DA               	addwfc	fsr2h,f,c
 15033  003788  0100               	movlb	0	; () banked
 15034  00378A  5169               	movf	getsUSBUSART@len& (0+255),w,b
 15035  00378C  5CDE               	subwf	postinc2,w,c
 15036  00378E  B0D8               	btfsc	status,0,c
 15037  003790  D008               	goto	l1664
 15038                           
 15039                           ; BSR set to: 0
 15040                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 15041  003792  EE20 F001          	lfsr	2,1
 15042  003796  5044               	movf	_CDCDataOutHandle,w,c
 15043  003798  26D9               	addwf	fsr2l,f,c
 15044  00379A  5045               	movf	_CDCDataOutHandle+1,w,c
 15045  00379C  22DA               	addwfc	fsr2h,f,c
 15046  00379E  50DF               	movf	indf2,w,c
 15047  0037A0  6F69               	movwf	getsUSBUSART@len& (0+255),b
 15048  0037A2                     l1664:
 15049                           
 15050                           ; BSR set to: 0
 15051                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 15052                           
 15053                           ; BSR set to: 0
 15054  0037A2  0E00               	movlw	0
 15055  0037A4  6E47               	movwf	_cdc_rx_len,c
 15056  0037A6  D013               	goto	l1665
 15057  0037A8                     
 15058                           ; BSR set to: 0
 15059                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 15060                           
 15061                           ; BSR set to: 0
 15062  0037A8  5047               	movf	_cdc_rx_len,w,c
 15063  0037AA  0D01               	mullw	1
 15064  0037AC  0E00               	movlw	low _cdc_data_rx
 15065  0037AE  24F3               	addwf	prodl,w,c
 15066  0037B0  6ED9               	movwf	fsr2l,c
 15067  0037B2  0E02               	movlw	high _cdc_data_rx
 15068  0037B4  20F4               	addwfc	prodh,w,c
 15069  0037B6  6EDA               	movwf	fsr2h,c
 15070  0037B8  5047               	movf	_cdc_rx_len,w,c
 15071  0037BA  0D01               	mullw	1
 15072  0037BC  50F3               	movf	prodl,w,c
 15073  0037BE  2567               	addwf	getsUSBUSART@buffer& (0+255),w,b
 15074  0037C0  6EE1               	movwf	fsr1l,c
 15075  0037C2  50F4               	movf	prodh,w,c
 15076  0037C4  2168               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 15077  0037C6  6EE2               	movwf	fsr1h,c
 15078  0037C8  CFDF FFE7          	movff	indf2,indf1
 15079                           
 15080                           ; BSR set to: 0
 15081  0037CC  2A47               	incf	_cdc_rx_len,f,c
 15082  0037CE                     l1665:
 15083                           
 15084                           ; BSR set to: 0
 15085                           
 15086                           ; BSR set to: 0
 15087  0037CE  5169               	movf	getsUSBUSART@len& (0+255),w,b
 15088  0037D0  5C47               	subwf	_cdc_rx_len,w,c
 15089  0037D2  A0D8               	btfss	status,0,c
 15090  0037D4  D7E9               	goto	l1666
 15091                           
 15092                           ; BSR set to: 0
 15093                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15094                           
 15095                           ; BSR set to: 0
 15096  0037D6  0E00               	movlw	0
 15097  0037D8  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 15098  0037DA  0E00               	movlw	low _cdc_data_rx
 15099  0037DC  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 15100  0037DE  0E02               	movlw	high _cdc_data_rx
 15101  0037E0  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 15102  0037E2  0E40               	movlw	64
 15103  0037E4  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 15104  0037E6  0E02               	movlw	2
 15105  0037E8  ECD0  F017         	call	_USBTransferOnePacket
 15106  0037EC  C060  F044         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 15107  0037F0  C061  F045         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 15108  0037F4                     l1661:
 15109                           
 15110                           ;usb_device_cdc.c: 513: }
 15111                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 15112  0037F4  5047               	movf	_cdc_rx_len,w,c
 15113  0037F6  0012               	return	
 15114  0037F8                     __end_of_getsUSBUSART:
 15115                           	opt stack 0
 15116                           tosu	equ	0xFFF
 15117                           tosh	equ	0xFFE
 15118                           tosl	equ	0xFFD
 15119                           pclath	equ	0xFFA
 15120                           tblptru	equ	0xFF8
 15121                           tblptrh	equ	0xFF7
 15122                           tblptrl	equ	0xFF6
 15123                           tablat	equ	0xFF5
 15124                           prodh	equ	0xFF4
 15125                           prodl	equ	0xFF3
 15126                           intcon	equ	0xFF2
 15127                           intcon2	equ	0xFF1
 15128                           intcon3	equ	0xFF0
 15129                           indf0	equ	0xFEF
 15130                           postinc0	equ	0xFEE
 15131                           plusw0	equ	0xFEB
 15132                           fsr0h	equ	0xFEA
 15133                           fsr0l	equ	0xFE9
 15134                           wreg	equ	0xFE8
 15135                           indf1	equ	0xFE7
 15136                           postinc1	equ	0xFE6
 15137                           postdec1	equ	0xFE5
 15138                           fsr1h	equ	0xFE2
 15139                           fsr1l	equ	0xFE1
 15140                           indf2	equ	0xFDF
 15141                           postinc2	equ	0xFDE
 15142                           postdec2	equ	0xFDD
 15143                           plusw2	equ	0xFDB
 15144                           fsr2h	equ	0xFDA
 15145                           fsr2l	equ	0xFD9
 15146                           status	equ	0xFD8
 15147                           
 15148 ;; *************** function _USBTransferOnePacket *****************
 15149 ;; Defined at:
 15150 ;;		line 1013 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 15151 ;; Parameters:    Size  Location     Type
 15152 ;;  ep              1    wreg     unsigned char 
 15153 ;;  dir             1    0[BANK0 ] unsigned char 
 15154 ;;  data            2    1[BANK0 ] PTR unsigned char 
 15155 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 15156 ;;  len             1    3[BANK0 ] unsigned char 
 15157 ;; Auto vars:     Size  Location     Type
 15158 ;;  ep              1    4[BANK0 ] unsigned char 
 15159 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 15160 ;;		 -> BDT(48), NULL(0), 
 15161 ;; Return value:  Size  Location     Type
 15162 ;;                  2    0[BANK0 ] PTR void 
 15163 ;; Registers used:
 15164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15165 ;; Tracked objects:
 15166 ;;		On entry : 0/0
 15167 ;;		On exit  : 0/0
 15168 ;;		Unchanged: 0/0
 15169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15170 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15171 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15173 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15174 ;;Total ram usage:        7 bytes
 15175 ;; Hardware stack levels used:    1
 15176 ;; Hardware stack levels required when called:   11
 15177 ;; This function calls:
 15178 ;;		Nothing
 15179 ;; This function is called by:
 15180 ;;		_CDCInitEP
 15181 ;;		_getsUSBUSART
 15182 ;;		_CDCTxService
 15183 ;;		_USBCDCEventHandler
 15184 ;; This function uses a non-reentrant model
 15185 ;;
 15186                           
 15187                           	psect	text63
 15188  002FA0                     __ptext63:
 15189                           	opt stack 0
 15190  002FA0                     _USBTransferOnePacket:
 15191                           	opt stack 13
 15192                           
 15193                           ;incstack = 0
 15194                           ;USBTransferOnePacket@ep stored from wreg
 15195  002FA0  0100               	movlb	0	; () banked
 15196  002FA2  6F64               	movwf	USBTransferOnePacket@ep& (0+255),b
 15197                           
 15198                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 15199                           ;usb_device.c: 1018: if(dir != 0)
 15200  002FA4  0100               	movlb	0	; () banked
 15201  002FA6  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 15202  002FA8  B4D8               	btfsc	status,2,c
 15203  002FAA  D007               	goto	l1385
 15204                           
 15205                           ; BSR set to: 0
 15206                           ;usb_device.c: 1019: {
 15207                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 15208  002FAC  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15209  002FAE  0D02               	mullw	2
 15210  002FB0  0E3E               	movlw	low _pBDTEntryIn
 15211  002FB2  24F3               	addwf	prodl,w,c
 15212  002FB4  6ED9               	movwf	fsr2l,c
 15213  002FB6  0E00               	movlw	high _pBDTEntryIn
 15214  002FB8  D006               	goto	L14
 15215  002FBA                     l1385:
 15216                           
 15217                           ; BSR set to: 0
 15218                           ;usb_device.c: 1023: else
 15219                           ;usb_device.c: 1024: {
 15220                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 15221                           
 15222                           ; BSR set to: 0
 15223  002FBA  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15224  002FBC  0D02               	mullw	2
 15225  002FBE  0E20               	movlw	low _pBDTEntryOut
 15226  002FC0  24F3               	addwf	prodl,w,c
 15227  002FC2  6ED9               	movwf	fsr2l,c
 15228  002FC4  0E01               	movlw	high _pBDTEntryOut
 15229  002FC6                     L14:
 15230  002FC6  20F4               	addwfc	prodh,w,c
 15231  002FC8  6EDA               	movwf	fsr2h,c
 15232  002FCA  CFDE F065          	movff	postinc2,USBTransferOnePacket@handle
 15233  002FCE  CFDD F066          	movff	postdec2,USBTransferOnePacket@handle+1
 15234                           
 15235                           ; BSR set to: 0
 15236                           ;usb_device.c: 1027: }
 15237                           ;usb_device.c: 1031: if(handle == 0)
 15238                           
 15239                           ; BSR set to: 0
 15240  002FD2  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15241  002FD4  1166               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15242  002FD6  A4D8               	btfss	status,2,c
 15243  002FD8  D005               	goto	l1387
 15244                           
 15245                           ; BSR set to: 0
 15246                           ;usb_device.c: 1032: {
 15247                           ;usb_device.c: 1033: return 0;
 15248  002FDA  0E00               	movlw	0
 15249  002FDC  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 15250  002FDE  0E00               	movlw	0
 15251  002FE0  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 15252                           
 15253                           ; BSR set to: 0
 15254  002FE2  0012               	return	
 15255  002FE4                     l1387:
 15256                           
 15257                           ; BSR set to: 0
 15258                           ;usb_device.c: 1034: }
 15259                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 15260                           
 15261                           ; BSR set to: 0
 15262  002FE4  EE20 F002          	lfsr	2,2
 15263  002FE8  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15264  002FEA  26D9               	addwf	fsr2l,f,c
 15265  002FEC  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15266  002FEE  22DA               	addwfc	fsr2h,f,c
 15267  002FF0  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 15268  002FF4  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 15269                           
 15270                           ;usb_device.c: 1048: handle->CNT = len;
 15271  002FF8  EE20 F001          	lfsr	2,1
 15272  002FFC  5165               	movf	USBTransferOnePacket@handle& (0+255),w,b
 15273  002FFE  26D9               	addwf	fsr2l,f,c
 15274  003000  5166               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15275  003002  22DA               	addwfc	fsr2h,f,c
 15276  003004  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 15277                           
 15278                           ; BSR set to: 0
 15279                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 15280  003008  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15281  00300C  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15282  003010  0E40               	movlw	64
 15283  003012  16DF               	andwf	indf2,f,c
 15284                           
 15285                           ; BSR set to: 0
 15286                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 15287  003014  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15288  003018  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15289  00301C  0E00               	movlw	0
 15290  00301E  86DB               	bsf	plusw2,3,c
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 15294  003020  C065  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15295  003024  C066  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15296  003028  0E00               	movlw	0
 15297  00302A  8EDB               	bsf	plusw2,7,c
 15298                           
 15299                           ; BSR set to: 0
 15300                           ;usb_device.c: 1054: if(dir != 0)
 15301  00302C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 15302  00302E  B4D8               	btfsc	status,2,c
 15303  003030  D007               	goto	l1389
 15304                           
 15305                           ; BSR set to: 0
 15306                           ;usb_device.c: 1055: {
 15307                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 15308  003032  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15309  003034  0D02               	mullw	2
 15310  003036  0E3E               	movlw	low _pBDTEntryIn
 15311  003038  24F3               	addwf	prodl,w,c
 15312  00303A  6ED9               	movwf	fsr2l,c
 15313  00303C  0E00               	movlw	high _pBDTEntryIn
 15314  00303E  D006               	goto	L15
 15315  003040                     l1389:
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;usb_device.c: 1059: else
 15319                           ;usb_device.c: 1060: {
 15320                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 15321                           
 15322                           ; BSR set to: 0
 15323  003040  5164               	movf	USBTransferOnePacket@ep& (0+255),w,b
 15324  003042  0D02               	mullw	2
 15325  003044  0E20               	movlw	low _pBDTEntryOut
 15326  003046  24F3               	addwf	prodl,w,c
 15327  003048  6ED9               	movwf	fsr2l,c
 15328  00304A  0E01               	movlw	high _pBDTEntryOut
 15329  00304C                     L15:
 15330  00304C  20F4               	addwfc	prodh,w,c
 15331  00304E  6EDA               	movwf	fsr2h,c
 15332  003050  0E04               	movlw	4
 15333  003052  1ADF               	xorwf	indf2,f,c
 15334                           
 15335                           ; BSR set to: 0
 15336                           ;usb_device.c: 1063: }
 15337                           ;usb_device.c: 1064: return (void*)handle;
 15338                           
 15339                           ; BSR set to: 0
 15340  003054  C065  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 15341  003058  C066  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 15342  00305C  0012               	return	
 15343  00305E                     __end_of_USBTransferOnePacket:
 15344                           	opt stack 0
 15345                           tosu	equ	0xFFF
 15346                           tosh	equ	0xFFE
 15347                           tosl	equ	0xFFD
 15348                           pclath	equ	0xFFA
 15349                           tblptru	equ	0xFF8
 15350                           tblptrh	equ	0xFF7
 15351                           tblptrl	equ	0xFF6
 15352                           tablat	equ	0xFF5
 15353                           prodh	equ	0xFF4
 15354                           prodl	equ	0xFF3
 15355                           intcon	equ	0xFF2
 15356                           intcon2	equ	0xFF1
 15357                           intcon3	equ	0xFF0
 15358                           indf0	equ	0xFEF
 15359                           postinc0	equ	0xFEE
 15360                           plusw0	equ	0xFEB
 15361                           fsr0h	equ	0xFEA
 15362                           fsr0l	equ	0xFE9
 15363                           wreg	equ	0xFE8
 15364                           indf1	equ	0xFE7
 15365                           postinc1	equ	0xFE6
 15366                           postdec1	equ	0xFE5
 15367                           fsr1h	equ	0xFE2
 15368                           fsr1l	equ	0xFE1
 15369                           indf2	equ	0xFDF
 15370                           postinc2	equ	0xFDE
 15371                           postdec2	equ	0xFDD
 15372                           plusw2	equ	0xFDB
 15373                           fsr2h	equ	0xFDA
 15374                           fsr2l	equ	0xFD9
 15375                           status	equ	0xFD8
 15376                           
 15377 ;; *************** function _atoi *****************
 15378 ;; Defined at:
 15379 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 15380 ;; Parameters:    Size  Location     Type
 15381 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 15382 ;;		 -> Terminal@Addr(4), Terminal@Len(4), 
 15383 ;; Auto vars:     Size  Location     Type
 15384 ;;  a               2   11[BANK0 ] int 
 15385 ;;  sign            1   10[BANK0 ] unsigned char 
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  2    6[BANK0 ] int 
 15388 ;; Registers used:
 15389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15396 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15397 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15398 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15399 ;;Total ram usage:        7 bytes
 15400 ;; Hardware stack levels used:    1
 15401 ;; Hardware stack levels required when called:   12
 15402 ;; This function calls:
 15403 ;;		___wmul
 15404 ;;		_isdigit
 15405 ;; This function is called by:
 15406 ;;		_Terminal
 15407 ;; This function uses a non-reentrant model
 15408 ;;
 15409                           
 15410                           	psect	text64
 15411  002A14                     __ptext64:
 15412                           	opt stack 0
 15413  002A14                     _atoi:
 15414                           	opt stack 13
 15415                           
 15416                           ; BSR set to: 0
 15417                           ;incstack = 0
 15418  002A14  D003               	goto	l2282
 15419  002A16  0100               	movlb	0	; () banked
 15420  002A18  4B66               	infsnz	atoi@s& (0+255),f,b
 15421  002A1A  2B67               	incf	(atoi@s+1)& (0+255),f,b
 15422  002A1C                     l2282:
 15423                           
 15424                           ; BSR set to: 0
 15425  002A1C  C066  FFD9         	movff	atoi@s,fsr2l
 15426  002A20  C067  FFDA         	movff	atoi@s+1,fsr2h
 15427  002A24  0E20               	movlw	32
 15428  002A26  18DE               	xorwf	postinc2,w,c
 15429  002A28  B4D8               	btfsc	status,2,c
 15430  002A2A  D7F5               	goto	l2283
 15431  002A2C  C066  FFD9         	movff	atoi@s,fsr2l
 15432  002A30  C067  FFDA         	movff	atoi@s+1,fsr2h
 15433  002A34  0E09               	movlw	9
 15434  002A36  18DE               	xorwf	postinc2,w,c
 15435  002A38  B4D8               	btfsc	status,2,c
 15436  002A3A  D7ED               	goto	l2283
 15437  002A3C  0E00               	movlw	0
 15438  002A3E  0100               	movlb	0	; () banked
 15439  002A40  6F6C               	movwf	(atoi@a+1)& (0+255),b
 15440  002A42  0E00               	movlw	0
 15441  002A44  6F6B               	movwf	atoi@a& (0+255),b
 15442  002A46  0E00               	movlw	0
 15443  002A48  6F6A               	movwf	atoi@sign& (0+255),b
 15444                           
 15445                           ; BSR set to: 0
 15446  002A4A  C066  FFD9         	movff	atoi@s,fsr2l
 15447  002A4E  C067  FFDA         	movff	atoi@s+1,fsr2h
 15448  002A52  0E2D               	movlw	45
 15449  002A54  18DE               	xorwf	postinc2,w,c
 15450  002A56  A4D8               	btfss	status,2,c
 15451  002A58  D002               	goto	l2285
 15452                           
 15453                           ; BSR set to: 0
 15454  002A5A  2B6A               	incf	atoi@sign& (0+255),f,b
 15455  002A5C  D026               	goto	l7380
 15456  002A5E                     l2285:
 15457                           
 15458                           ; BSR set to: 0
 15459                           
 15460                           ; BSR set to: 0
 15461  002A5E  C066  FFD9         	movff	atoi@s,fsr2l
 15462  002A62  C067  FFDA         	movff	atoi@s+1,fsr2h
 15463  002A66  0E2B               	movlw	43
 15464  002A68  18DE               	xorwf	postinc2,w,c
 15465  002A6A  A4D8               	btfss	status,2,c
 15466  002A6C  D020               	goto	l2288
 15467  002A6E  D01D               	goto	l7380
 15468  002A70                     
 15469                           ; BSR set to: 0
 15470  002A70  C06B  F060         	movff	atoi@a,___wmul@multiplier
 15471  002A74  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 15472  002A78  0E00               	movlw	0
 15473  002A7A  0100               	movlb	0	; () banked
 15474  002A7C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15475  002A7E  0E0A               	movlw	10
 15476  002A80  6F62               	movwf	___wmul@multiplicand& (0+255),b
 15477  002A82  EC8F  F025         	call	___wmul	;wreg free
 15478  002A86  C066  FFD9         	movff	atoi@s,fsr2l
 15479  002A8A  C067  FFDA         	movff	atoi@s+1,fsr2h
 15480  002A8E  50DF               	movf	indf2,w,c
 15481  002A90  0100               	movlb	0	; () banked
 15482  002A92  6F68               	movwf	??_atoi& (0+255),b
 15483  002A94  6B69               	clrf	(??_atoi+1)& (0+255),b
 15484  002A96  5160               	movf	?___wmul& (0+255),w,b
 15485  002A98  2768               	addwf	??_atoi& (0+255),f,b
 15486  002A9A  5161               	movf	(?___wmul+1)& (0+255),w,b
 15487  002A9C  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 15488  002A9E  0ED0               	movlw	208
 15489  002AA0  2568               	addwf	??_atoi& (0+255),w,b
 15490  002AA2  6F6B               	movwf	atoi@a& (0+255),b
 15491  002AA4  0EFF               	movlw	255
 15492  002AA6  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 15493  002AA8  6F6C               	movwf	(atoi@a+1)& (0+255),b
 15494  002AAA                     l7380:
 15495                           
 15496                           ; BSR set to: 0
 15497  002AAA  4B66               	infsnz	atoi@s& (0+255),f,b
 15498  002AAC  2B67               	incf	(atoi@s+1)& (0+255),f,b
 15499  002AAE                     l2288:
 15500                           
 15501                           ; BSR set to: 0
 15502                           
 15503                           ; BSR set to: 0
 15504  002AAE  C066  FFD9         	movff	atoi@s,fsr2l
 15505  002AB2  C067  FFDA         	movff	atoi@s+1,fsr2h
 15506  002AB6  50DF               	movf	indf2,w,c
 15507  002AB8  EC0E  F026         	call	_isdigit
 15508  002ABC  B0D8               	btfsc	status,0,c
 15509  002ABE  D7D8               	goto	l2289
 15510  002AC0  0100               	movlb	0	; () banked
 15511  002AC2  516A               	movf	atoi@sign& (0+255),w,b
 15512  002AC4  B4D8               	btfsc	status,2,c
 15513  002AC6  D00D               	goto	l2291
 15514                           
 15515                           ; BSR set to: 0
 15516  002AC8  C06B  F068         	movff	atoi@a,??_atoi
 15517  002ACC  C06C  F069         	movff	atoi@a+1,??_atoi+1
 15518  002AD0  1F68               	comf	??_atoi& (0+255),f,b
 15519  002AD2  1F69               	comf	(??_atoi+1)& (0+255),f,b
 15520  002AD4  4B68               	infsnz	??_atoi& (0+255),f,b
 15521  002AD6  2B69               	incf	(??_atoi+1)& (0+255),f,b
 15522  002AD8  C068  F066         	movff	??_atoi,?_atoi
 15523  002ADC  C069  F067         	movff	??_atoi+1,?_atoi+1
 15524  002AE0  0012               	return	
 15525  002AE2                     l2291:
 15526                           
 15527                           ; BSR set to: 0
 15528  002AE2  C06B  F066         	movff	atoi@a,?_atoi
 15529  002AE6  C06C  F067         	movff	atoi@a+1,?_atoi+1
 15530                           
 15531                           ; BSR set to: 0
 15532  002AEA  0012               	return		;funcret
 15533  002AEC                     __end_of_atoi:
 15534                           	opt stack 0
 15535                           tosu	equ	0xFFF
 15536                           tosh	equ	0xFFE
 15537                           tosl	equ	0xFFD
 15538                           pclath	equ	0xFFA
 15539                           tblptru	equ	0xFF8
 15540                           tblptrh	equ	0xFF7
 15541                           tblptrl	equ	0xFF6
 15542                           tablat	equ	0xFF5
 15543                           prodh	equ	0xFF4
 15544                           prodl	equ	0xFF3
 15545                           intcon	equ	0xFF2
 15546                           intcon2	equ	0xFF1
 15547                           intcon3	equ	0xFF0
 15548                           indf0	equ	0xFEF
 15549                           postinc0	equ	0xFEE
 15550                           plusw0	equ	0xFEB
 15551                           fsr0h	equ	0xFEA
 15552                           fsr0l	equ	0xFE9
 15553                           wreg	equ	0xFE8
 15554                           indf1	equ	0xFE7
 15555                           postinc1	equ	0xFE6
 15556                           postdec1	equ	0xFE5
 15557                           fsr1h	equ	0xFE2
 15558                           fsr1l	equ	0xFE1
 15559                           indf2	equ	0xFDF
 15560                           postinc2	equ	0xFDE
 15561                           postdec2	equ	0xFDD
 15562                           plusw2	equ	0xFDB
 15563                           fsr2h	equ	0xFDA
 15564                           fsr2l	equ	0xFD9
 15565                           status	equ	0xFD8
 15566                           
 15567 ;; *************** function _isdigit *****************
 15568 ;; Defined at:
 15569 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;  c               1    wreg     unsigned char 
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;  c               1    2[BANK0 ] unsigned char 
 15574 ;; Return value:  Size  Location     Type
 15575 ;;		None               void
 15576 ;; Registers used:
 15577 ;;		wreg, status,2, status,0
 15578 ;; Tracked objects:
 15579 ;;		On entry : 0/0
 15580 ;;		On exit  : 0/0
 15581 ;;		Unchanged: 0/0
 15582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15584 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15585 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15586 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15587 ;;Total ram usage:        3 bytes
 15588 ;; Hardware stack levels used:    1
 15589 ;; Hardware stack levels required when called:   11
 15590 ;; This function calls:
 15591 ;;		Nothing
 15592 ;; This function is called by:
 15593 ;;		_atoi
 15594 ;;		_strtol
 15595 ;; This function uses a non-reentrant model
 15596 ;;
 15597                           
 15598                           	psect	text65
 15599  004C1C                     __ptext65:
 15600                           	opt stack 0
 15601  004C1C                     _isdigit:
 15602                           	opt stack 13
 15603                           
 15604                           ; BSR set to: 0
 15605                           ;incstack = 0
 15606                           ;isdigit@c stored from wreg
 15607  004C1C  0100               	movlb	0	; () banked
 15608  004C1E  6F62               	movwf	isdigit@c& (0+255),b
 15609  004C20  0E00               	movlw	0
 15610  004C22  0100               	movlb	0	; () banked
 15611  004C24  6F61               	movwf	_isdigit$5592& (0+255),b
 15612                           
 15613                           ; BSR set to: 0
 15614  004C26  0E3A               	movlw	58
 15615  004C28  6162               	cpfslt	isdigit@c& (0+255),b
 15616  004C2A  D005               	goto	l2463
 15617                           
 15618                           ; BSR set to: 0
 15619  004C2C  0E2F               	movlw	47
 15620  004C2E  6562               	cpfsgt	isdigit@c& (0+255),b
 15621  004C30  D002               	goto	l2463
 15622                           
 15623                           ; BSR set to: 0
 15624  004C32  0E01               	movlw	1
 15625  004C34  6F61               	movwf	_isdigit$5592& (0+255),b
 15626  004C36                     l2463:
 15627                           
 15628                           ; BSR set to: 0
 15629                           
 15630                           ; BSR set to: 0
 15631  004C36  C061  F060         	movff	_isdigit$5592,??_isdigit
 15632  004C3A  3160               	rrcf	??_isdigit& (0+255),w,b
 15633  004C3C  0012               	return	
 15634  004C3E                     __end_of_isdigit:
 15635                           	opt stack 0
 15636                           tosu	equ	0xFFF
 15637                           tosh	equ	0xFFE
 15638                           tosl	equ	0xFFD
 15639                           pclath	equ	0xFFA
 15640                           tblptru	equ	0xFF8
 15641                           tblptrh	equ	0xFF7
 15642                           tblptrl	equ	0xFF6
 15643                           tablat	equ	0xFF5
 15644                           prodh	equ	0xFF4
 15645                           prodl	equ	0xFF3
 15646                           intcon	equ	0xFF2
 15647                           intcon2	equ	0xFF1
 15648                           intcon3	equ	0xFF0
 15649                           indf0	equ	0xFEF
 15650                           postinc0	equ	0xFEE
 15651                           plusw0	equ	0xFEB
 15652                           fsr0h	equ	0xFEA
 15653                           fsr0l	equ	0xFE9
 15654                           wreg	equ	0xFE8
 15655                           indf1	equ	0xFE7
 15656                           postinc1	equ	0xFE6
 15657                           postdec1	equ	0xFE5
 15658                           fsr1h	equ	0xFE2
 15659                           fsr1l	equ	0xFE1
 15660                           indf2	equ	0xFDF
 15661                           postinc2	equ	0xFDE
 15662                           postdec2	equ	0xFDD
 15663                           plusw2	equ	0xFDB
 15664                           fsr2h	equ	0xFDA
 15665                           fsr2l	equ	0xFD9
 15666                           status	equ	0xFD8
 15667                           
 15668 ;; *************** function _I2cSlv_SendI2cMsg *****************
 15669 ;; Defined at:
 15670 ;;		line 236 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 15671 ;; Parameters:    Size  Location     Type
 15672 ;;  TxBuffer        2    3[BANK0 ] PTR unsigned char 
 15673 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 15674 ;;  SlaveAddr       1    5[BANK0 ] unsigned char 
 15675 ;;  DataLenght      1    6[BANK0 ] unsigned char 
 15676 ;; Auto vars:     Size  Location     Type
 15677 ;;  TxSts           1    7[BANK0 ] unsigned char 
 15678 ;; Return value:  Size  Location     Type
 15679 ;;                  1    wreg      unsigned char 
 15680 ;; Registers used:
 15681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15682 ;; Tracked objects:
 15683 ;;		On entry : 0/0
 15684 ;;		On exit  : 0/0
 15685 ;;		Unchanged: 0/0
 15686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15687 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15690 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15691 ;;Total ram usage:        5 bytes
 15692 ;; Hardware stack levels used:    1
 15693 ;; Hardware stack levels required when called:   12
 15694 ;; This function calls:
 15695 ;;		_GenerateEvt
 15696 ;; This function is called by:
 15697 ;;		_Terminal
 15698 ;; This function uses a non-reentrant model
 15699 ;;
 15700                           
 15701                           	psect	text66
 15702  004788                     __ptext66:
 15703                           	opt stack 0
 15704  004788                     _I2cSlv_SendI2cMsg:
 15705                           	opt stack 13
 15706                           
 15707                           ;i2c_slv.c: 238: UINT8 TxSts = 0u;
 15708                           
 15709                           ; BSR set to: 0
 15710                           ;incstack = 0
 15711  004788  0E00               	movlw	0
 15712  00478A  0100               	movlb	0	; () banked
 15713  00478C  6F67               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15714                           
 15715                           ; BSR set to: 0
 15716                           ;i2c_slv.c: 240: if (I2cComSts != TxInProgress)
 15717  00478E  044E               	decf	_I2cComSts,w,c
 15718  004790  B4D8               	btfsc	status,2,c
 15719  004792  D016               	goto	l1182
 15720                           
 15721                           ; BSR set to: 0
 15722                           ;i2c_slv.c: 241: {
 15723                           ;i2c_slv.c: 243: I2cTxPacket.SlaveAddress = SlaveAddr;
 15724  004794  C065  F1AC         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 15725                           
 15726                           ; BSR set to: 0
 15727                           ;i2c_slv.c: 244: I2cTxPacket.ReadWrite = ((UINT8)(0));
 15728  004798  0E00               	movlw	0
 15729  00479A  0101               	movlb	1	; () banked
 15730  00479C  6FAD               	movwf	(_I2cTxPacket+1)& (0+255),b
 15731                           
 15732                           ; BSR set to: 1
 15733                           ;i2c_slv.c: 245: I2cTxPacket.Lenght = DataLenght;
 15734  00479E  C066  F1B0         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 15735                           
 15736                           ; BSR set to: 1
 15737                           ;i2c_slv.c: 246: I2cTxPacket.Buffer = TxBuffer;
 15738  0047A2  C063  F1AE         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 15739  0047A6  C064  F1AF         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 15740                           
 15741                           ; BSR set to: 1
 15742                           ;i2c_slv.c: 249: GenerateEvt(&I2cWriteDataEvt);
 15743  0047AA  0E54               	movlw	low _I2cWriteDataEvt
 15744  0047AC  0100               	movlb	0	; () banked
 15745  0047AE  6F60               	movwf	GenerateEvt@Event& (0+255),b
 15746  0047B0  0E00               	movlw	high _I2cWriteDataEvt
 15747  0047B2  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 15748  0047B4  ECD5  F026         	call	_GenerateEvt	;wreg free
 15749                           
 15750                           ;i2c_slv.c: 251: TxSts = 1u;
 15751  0047B8  0E01               	movlw	1
 15752  0047BA  0100               	movlb	0	; () banked
 15753  0047BC  6F67               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15754                           
 15755                           ;i2c_slv.c: 252: }
 15756  0047BE  0012               	return	
 15757  0047C0                     l1182:
 15758                           
 15759                           ; BSR set to: 0
 15760                           ;i2c_slv.c: 253: else
 15761                           ;i2c_slv.c: 254: {
 15762                           ;i2c_slv.c: 256: TxSts = 0u;
 15763                           
 15764                           ; BSR set to: 0
 15765  0047C0  0E00               	movlw	0
 15766  0047C2  6F67               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15767                           
 15768                           ; BSR set to: 0
 15769  0047C4  0012               	return	
 15770  0047C6                     __end_of_I2cSlv_SendI2cMsg:
 15771                           	opt stack 0
 15772                           tosu	equ	0xFFF
 15773                           tosh	equ	0xFFE
 15774                           tosl	equ	0xFFD
 15775                           pclath	equ	0xFFA
 15776                           tblptru	equ	0xFF8
 15777                           tblptrh	equ	0xFF7
 15778                           tblptrl	equ	0xFF6
 15779                           tablat	equ	0xFF5
 15780                           prodh	equ	0xFF4
 15781                           prodl	equ	0xFF3
 15782                           intcon	equ	0xFF2
 15783                           intcon2	equ	0xFF1
 15784                           intcon3	equ	0xFF0
 15785                           indf0	equ	0xFEF
 15786                           postinc0	equ	0xFEE
 15787                           plusw0	equ	0xFEB
 15788                           fsr0h	equ	0xFEA
 15789                           fsr0l	equ	0xFE9
 15790                           wreg	equ	0xFE8
 15791                           indf1	equ	0xFE7
 15792                           postinc1	equ	0xFE6
 15793                           postdec1	equ	0xFE5
 15794                           fsr1h	equ	0xFE2
 15795                           fsr1l	equ	0xFE1
 15796                           indf2	equ	0xFDF
 15797                           postinc2	equ	0xFDE
 15798                           postdec2	equ	0xFDD
 15799                           plusw2	equ	0xFDB
 15800                           fsr2h	equ	0xFDA
 15801                           fsr2l	equ	0xFD9
 15802                           status	equ	0xFD8
 15803                           
 15804 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 15805 ;; Defined at:
 15806 ;;		line 273 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 15807 ;; Parameters:    Size  Location     Type
 15808 ;;  RxBuffer        2    3[BANK0 ] PTR unsigned char 
 15809 ;;		 -> Terminal@TermRxBuffer(50), 
 15810 ;;  SlaveAddr       1    5[BANK0 ] unsigned char 
 15811 ;;  DataLenght      1    6[BANK0 ] unsigned char 
 15812 ;; Auto vars:     Size  Location     Type
 15813 ;;  RxSts           1    7[BANK0 ] unsigned char 
 15814 ;; Return value:  Size  Location     Type
 15815 ;;                  1    wreg      unsigned char 
 15816 ;; Registers used:
 15817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15818 ;; Tracked objects:
 15819 ;;		On entry : 0/0
 15820 ;;		On exit  : 0/0
 15821 ;;		Unchanged: 0/0
 15822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15823 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15824 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15826 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15827 ;;Total ram usage:        5 bytes
 15828 ;; Hardware stack levels used:    1
 15829 ;; Hardware stack levels required when called:   12
 15830 ;; This function calls:
 15831 ;;		_GenerateEvt
 15832 ;; This function is called by:
 15833 ;;		_Terminal
 15834 ;; This function uses a non-reentrant model
 15835 ;;
 15836                           
 15837                           	psect	text67
 15838  0046BE                     __ptext67:
 15839                           	opt stack 0
 15840  0046BE                     _I2cSlv_ReceiveI2cMsg:
 15841                           	opt stack 13
 15842                           
 15843                           ;i2c_slv.c: 275: UINT8 RxSts = 0u;
 15844                           
 15845                           ; BSR set to: 0
 15846                           ;incstack = 0
 15847  0046BE  0E00               	movlw	0
 15848  0046C0  0100               	movlb	0	; () banked
 15849  0046C2  6F67               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15850                           
 15851                           ; BSR set to: 0
 15852                           ;i2c_slv.c: 277: if (I2cComSts != RxInProgress)
 15853  0046C4  0E02               	movlw	2
 15854  0046C6  184E               	xorwf	_I2cComSts,w,c
 15855  0046C8  B4D8               	btfsc	status,2,c
 15856  0046CA  D018               	goto	l1187
 15857                           
 15858                           ; BSR set to: 0
 15859                           ;i2c_slv.c: 278: {
 15860                           ;i2c_slv.c: 280: I2cRxPacket.SlaveAddress = SlaveAddr;
 15861  0046CC  C065  F1A6         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 15862                           
 15863                           ; BSR set to: 0
 15864                           ;i2c_slv.c: 281: I2cRxPacket.ReadWrite = ((UINT8)(1));
 15865  0046D0  0E01               	movlw	1
 15866  0046D2  0101               	movlb	1	; () banked
 15867  0046D4  6FA7               	movwf	(_I2cRxPacket+1)& (0+255),b
 15868                           
 15869                           ; BSR set to: 1
 15870                           ;i2c_slv.c: 283: I2cRxPacket.Lenght = DataLenght + 1;
 15871  0046D6  0100               	movlb	0	; () banked
 15872  0046D8  2966               	incf	I2cSlv_ReceiveI2cMsg@DataLenght& (0+255),w,b
 15873  0046DA  0101               	movlb	1	; () banked
 15874  0046DC  6FAA               	movwf	(_I2cRxPacket+4)& (0+255),b
 15875                           
 15876                           ; BSR set to: 1
 15877                           ;i2c_slv.c: 284: I2cRxPacket.Buffer = RxBuffer;
 15878  0046DE  C063  F1A8         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 15879  0046E2  C064  F1A9         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 15880                           
 15881                           ; BSR set to: 1
 15882                           ;i2c_slv.c: 287: GenerateEvt(&I2cReadDataEvt);
 15883  0046E6  0E53               	movlw	low _I2cReadDataEvt
 15884  0046E8  0100               	movlb	0	; () banked
 15885  0046EA  6F60               	movwf	GenerateEvt@Event& (0+255),b
 15886  0046EC  0E00               	movlw	high _I2cReadDataEvt
 15887  0046EE  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 15888  0046F0  ECD5  F026         	call	_GenerateEvt	;wreg free
 15889                           
 15890                           ;i2c_slv.c: 289: RxSts = 1u;
 15891  0046F4  0E01               	movlw	1
 15892  0046F6  0100               	movlb	0	; () banked
 15893  0046F8  6F67               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15894                           
 15895                           ;i2c_slv.c: 290: }
 15896  0046FA  0012               	return	
 15897  0046FC                     l1187:
 15898                           
 15899                           ; BSR set to: 0
 15900                           ;i2c_slv.c: 291: else
 15901                           ;i2c_slv.c: 292: {
 15902                           ;i2c_slv.c: 294: RxSts = 0u;
 15903                           
 15904                           ; BSR set to: 0
 15905  0046FC  0E00               	movlw	0
 15906  0046FE  6F67               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15907                           
 15908                           ; BSR set to: 0
 15909  004700  0012               	return	
 15910  004702                     __end_of_I2cSlv_ReceiveI2cMsg:
 15911                           	opt stack 0
 15912                           tosu	equ	0xFFF
 15913                           tosh	equ	0xFFE
 15914                           tosl	equ	0xFFD
 15915                           pclath	equ	0xFFA
 15916                           tblptru	equ	0xFF8
 15917                           tblptrh	equ	0xFF7
 15918                           tblptrl	equ	0xFF6
 15919                           tablat	equ	0xFF5
 15920                           prodh	equ	0xFF4
 15921                           prodl	equ	0xFF3
 15922                           intcon	equ	0xFF2
 15923                           intcon2	equ	0xFF1
 15924                           intcon3	equ	0xFF0
 15925                           indf0	equ	0xFEF
 15926                           postinc0	equ	0xFEE
 15927                           plusw0	equ	0xFEB
 15928                           fsr0h	equ	0xFEA
 15929                           fsr0l	equ	0xFE9
 15930                           wreg	equ	0xFE8
 15931                           indf1	equ	0xFE7
 15932                           postinc1	equ	0xFE6
 15933                           postdec1	equ	0xFE5
 15934                           fsr1h	equ	0xFE2
 15935                           fsr1l	equ	0xFE1
 15936                           indf2	equ	0xFDF
 15937                           postinc2	equ	0xFDE
 15938                           postdec2	equ	0xFDD
 15939                           plusw2	equ	0xFDB
 15940                           fsr2h	equ	0xFDA
 15941                           fsr2l	equ	0xFD9
 15942                           status	equ	0xFD8
 15943                           
 15944 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 15945 ;; Defined at:
 15946 ;;		line 309 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 15947 ;; Parameters:    Size  Location     Type
 15948 ;;		None
 15949 ;; Auto vars:     Size  Location     Type
 15950 ;;  Result          1    4[BANK0 ] enum E8843
 15951 ;; Return value:  Size  Location     Type
 15952 ;;                  1    wreg      enum E8843
 15953 ;; Registers used:
 15954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15955 ;; Tracked objects:
 15956 ;;		On entry : 0/0
 15957 ;;		On exit  : 0/0
 15958 ;;		Unchanged: 0/0
 15959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15961 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15963 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15964 ;;Total ram usage:        1 bytes
 15965 ;; Hardware stack levels used:    1
 15966 ;; Hardware stack levels required when called:   12
 15967 ;; This function calls:
 15968 ;;		_ReceiveEvt
 15969 ;; This function is called by:
 15970 ;;		_Terminal
 15971 ;; This function uses a non-reentrant model
 15972 ;;
 15973                           
 15974                           	psect	text68
 15975  004C3E                     __ptext68:
 15976                           	opt stack 0
 15977  004C3E                     _I2cSlv_I2cReadMsgSts:
 15978                           	opt stack 13
 15979                           
 15980                           ;i2c_slv.c: 312: I2cReadMsgStsType Result;
 15981                           ;i2c_slv.c: 315: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 15982                           
 15983                           ; BSR set to: 0
 15984                           ;incstack = 0
 15985  004C3E  0EAB               	movlw	low (_I2cRxPacket+5)
 15986  004C40  0100               	movlb	0	; () banked
 15987  004C42  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 15988  004C44  0E01               	movlw	high (_I2cRxPacket+5)
 15989  004C46  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 15990  004C48  EC38  F025         	call	_ReceiveEvt	;wreg free
 15991  004C4C  0900               	iorlw	0
 15992  004C4E  B4D8               	btfsc	status,2,c
 15993  004C50  D002               	goto	l1192
 15994                           
 15995                           ;i2c_slv.c: 316: {
 15996                           ;i2c_slv.c: 317: Result = MessageReceived;
 15997  004C52  0E01               	movlw	1
 15998  004C54  D001               	goto	L16
 15999  004C56                     l1192:
 16000                           
 16001                           ;i2c_slv.c: 319: else
 16002                           ;i2c_slv.c: 320: {
 16003                           ;i2c_slv.c: 321: Result = MessageNotReceived;
 16004                           
 16005                           ; BSR set to: 0
 16006  004C56  0E00               	movlw	0
 16007  004C58                     L16:
 16008  004C58  0100               	movlb	0	; () banked
 16009  004C5A  6F64               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 16010                           
 16011                           ; BSR set to: 0
 16012                           ;i2c_slv.c: 322: }
 16013                           ;i2c_slv.c: 324: return Result;
 16014  004C5C  5164               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 16015  004C5E  0012               	return	
 16016  004C60                     __end_of_I2cSlv_I2cReadMsgSts:
 16017                           	opt stack 0
 16018                           tosu	equ	0xFFF
 16019                           tosh	equ	0xFFE
 16020                           tosl	equ	0xFFD
 16021                           pclath	equ	0xFFA
 16022                           tblptru	equ	0xFF8
 16023                           tblptrh	equ	0xFF7
 16024                           tblptrl	equ	0xFF6
 16025                           tablat	equ	0xFF5
 16026                           prodh	equ	0xFF4
 16027                           prodl	equ	0xFF3
 16028                           intcon	equ	0xFF2
 16029                           intcon2	equ	0xFF1
 16030                           intcon3	equ	0xFF0
 16031                           indf0	equ	0xFEF
 16032                           postinc0	equ	0xFEE
 16033                           plusw0	equ	0xFEB
 16034                           fsr0h	equ	0xFEA
 16035                           fsr0l	equ	0xFE9
 16036                           wreg	equ	0xFE8
 16037                           indf1	equ	0xFE7
 16038                           postinc1	equ	0xFE6
 16039                           postdec1	equ	0xFE5
 16040                           fsr1h	equ	0xFE2
 16041                           fsr1l	equ	0xFE1
 16042                           indf2	equ	0xFDF
 16043                           postinc2	equ	0xFDE
 16044                           postdec2	equ	0xFDD
 16045                           plusw2	equ	0xFDB
 16046                           fsr2h	equ	0xFDA
 16047                           fsr2l	equ	0xFD9
 16048                           status	equ	0xFD8
 16049                           
 16050 ;; *************** function _Rtcm_SetRtccDate *****************
 16051 ;; Defined at:
 16052 ;;		line 178 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 16053 ;; Parameters:    Size  Location     Type
 16054 ;;  Date            8   12[BANK0 ] struct _RtccDateType
 16055 ;; Auto vars:     Size  Location     Type
 16056 ;;		None
 16057 ;; Return value:  Size  Location     Type
 16058 ;;                  1    wreg      void 
 16059 ;; Registers used:
 16060 ;;		wreg, status,2, status,0, cstack
 16061 ;; Tracked objects:
 16062 ;;		On entry : 0/0
 16063 ;;		On exit  : 0/0
 16064 ;;		Unchanged: 0/0
 16065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16066 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16069 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16070 ;;Total ram usage:        8 bytes
 16071 ;; Hardware stack levels used:    1
 16072 ;; Hardware stack levels required when called:   13
 16073 ;; This function calls:
 16074 ;;		_Rtcc_LockRtc
 16075 ;;		_Rtcc_SetRtccValue
 16076 ;;		_Rtcc_UnlockRtc
 16077 ;; This function is called by:
 16078 ;;		_Rtcm_MainTask
 16079 ;; This function uses a non-reentrant model
 16080 ;;
 16081                           
 16082                           	psect	text69
 16083  0042FA                     __ptext69:
 16084                           	opt stack 0
 16085  0042FA                     _Rtcm_SetRtccDate:
 16086                           	opt stack 14
 16087                           
 16088                           ;rtcm.c: 181: Rtcc_UnlockRtc();
 16089                           
 16090                           ; BSR set to: 0
 16091                           ;incstack = 0
 16092  0042FA  EC28  F027         	call	_Rtcc_UnlockRtc	;wreg free
 16093                           
 16094                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 16095  0042FE  0100               	movlb	0	; () banked
 16096  004300  516C               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 16097  004302  0F30               	addlw	48
 16098  004304  6F68               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 16099  004306  0E00               	movlw	0
 16100  004308  EC9A  F008         	call	_Rtcc_SetRtccValue
 16101                           
 16102                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 16103  00430C  C06E  F068         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 16104  004310  0E01               	movlw	1
 16105  004312  EC9A  F008         	call	_Rtcc_SetRtccValue
 16106                           
 16107                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 16108  004316  C06F  F068         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 16109  00431A  0E02               	movlw	2
 16110  00431C  EC9A  F008         	call	_Rtcc_SetRtccValue
 16111                           
 16112                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 16113  004320  C070  F068         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 16114  004324  0E03               	movlw	3
 16115  004326  EC9A  F008         	call	_Rtcc_SetRtccValue
 16116                           
 16117                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 16118  00432A  C071  F068         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 16119  00432E  0E04               	movlw	4
 16120  004330  EC9A  F008         	call	_Rtcc_SetRtccValue
 16121                           
 16122                           ;rtcm.c: 189: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 16123  004334  C072  F068         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 16124  004338  0E05               	movlw	5
 16125  00433A  EC9A  F008         	call	_Rtcc_SetRtccValue
 16126                           
 16127                           ;rtcm.c: 190: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 16128  00433E  C073  F068         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 16129  004342  0E06               	movlw	6
 16130  004344  EC9A  F008         	call	_Rtcc_SetRtccValue
 16131                           
 16132                           ;rtcm.c: 193: Rtcc_LockRtc();
 16133  004348  EC30  F027         	call	_Rtcc_LockRtc	;wreg free
 16134  00434C  0012               	return		;funcret
 16135  00434E                     __end_of_Rtcm_SetRtccDate:
 16136                           	opt stack 0
 16137                           tosu	equ	0xFFF
 16138                           tosh	equ	0xFFE
 16139                           tosl	equ	0xFFD
 16140                           pclath	equ	0xFFA
 16141                           tblptru	equ	0xFF8
 16142                           tblptrh	equ	0xFF7
 16143                           tblptrl	equ	0xFF6
 16144                           tablat	equ	0xFF5
 16145                           prodh	equ	0xFF4
 16146                           prodl	equ	0xFF3
 16147                           intcon	equ	0xFF2
 16148                           intcon2	equ	0xFF1
 16149                           intcon3	equ	0xFF0
 16150                           indf0	equ	0xFEF
 16151                           postinc0	equ	0xFEE
 16152                           plusw0	equ	0xFEB
 16153                           fsr0h	equ	0xFEA
 16154                           fsr0l	equ	0xFE9
 16155                           wreg	equ	0xFE8
 16156                           indf1	equ	0xFE7
 16157                           postinc1	equ	0xFE6
 16158                           postdec1	equ	0xFE5
 16159                           fsr1h	equ	0xFE2
 16160                           fsr1l	equ	0xFE1
 16161                           indf2	equ	0xFDF
 16162                           postinc2	equ	0xFDE
 16163                           postdec2	equ	0xFDD
 16164                           plusw2	equ	0xFDB
 16165                           fsr2h	equ	0xFDA
 16166                           fsr2l	equ	0xFD9
 16167                           status	equ	0xFD8
 16168                           
 16169 ;; *************** function _Rtcc_UnlockRtc *****************
 16170 ;; Defined at:
 16171 ;;		line 163 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 16172 ;; Parameters:    Size  Location     Type
 16173 ;;		None
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;		None
 16176 ;; Return value:  Size  Location     Type
 16177 ;;                  1    wreg      void 
 16178 ;; Registers used:
 16179 ;;		None
 16180 ;; Tracked objects:
 16181 ;;		On entry : 0/0
 16182 ;;		On exit  : 0/0
 16183 ;;		Unchanged: 0/0
 16184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16189 ;;Total ram usage:        0 bytes
 16190 ;; Hardware stack levels used:    1
 16191 ;; Hardware stack levels required when called:   11
 16192 ;; This function calls:
 16193 ;;		Nothing
 16194 ;; This function is called by:
 16195 ;;		_Rtcm_MainTask
 16196 ;;		_Rtcm_SetRtccDate
 16197 ;;		_Rtcm_SetRtccAlarm
 16198 ;; This function uses a non-reentrant model
 16199 ;;
 16200                           
 16201                           	psect	text70
 16202  004E50                     __ptext70:
 16203                           	opt stack 0
 16204  004E50                     _Rtcc_UnlockRtc:
 16205                           	opt stack 15
 16206                           
 16207                           ;incstack = 0
 16208  004E50  010F               	movlb	15	;# 
 16209  004E52  0E55               	movlw	85	;# 
 16210  004E54  6EA7               	movwf	4007,c	;# 
 16211  004E56  0EAA               	movlw	170	;# 
 16212  004E58  6EA7               	movwf	4007,c	;# 
 16213                           
 16214                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1;
 16215  004E5A  010F               	movlb	15	; () banked
 16216  004E5C  8B3F               	bsf	63,5,b	;volatile
 16217                           
 16218                           ; BSR set to: 15
 16219  004E5E  0012               	return		;funcret
 16220  004E60                     __end_of_Rtcc_UnlockRtc:
 16221                           	opt stack 0
 16222                           tosu	equ	0xFFF
 16223                           tosh	equ	0xFFE
 16224                           tosl	equ	0xFFD
 16225                           pclath	equ	0xFFA
 16226                           tblptru	equ	0xFF8
 16227                           tblptrh	equ	0xFF7
 16228                           tblptrl	equ	0xFF6
 16229                           tablat	equ	0xFF5
 16230                           prodh	equ	0xFF4
 16231                           prodl	equ	0xFF3
 16232                           intcon	equ	0xFF2
 16233                           intcon2	equ	0xFF1
 16234                           intcon3	equ	0xFF0
 16235                           indf0	equ	0xFEF
 16236                           postinc0	equ	0xFEE
 16237                           plusw0	equ	0xFEB
 16238                           fsr0h	equ	0xFEA
 16239                           fsr0l	equ	0xFE9
 16240                           wreg	equ	0xFE8
 16241                           indf1	equ	0xFE7
 16242                           postinc1	equ	0xFE6
 16243                           postdec1	equ	0xFE5
 16244                           fsr1h	equ	0xFE2
 16245                           fsr1l	equ	0xFE1
 16246                           indf2	equ	0xFDF
 16247                           postinc2	equ	0xFDE
 16248                           postdec2	equ	0xFDD
 16249                           plusw2	equ	0xFDB
 16250                           fsr2h	equ	0xFDA
 16251                           fsr2l	equ	0xFD9
 16252                           status	equ	0xFD8
 16253                           
 16254 ;; *************** function _Rtcc_SetRtccValue *****************
 16255 ;; Defined at:
 16256 ;;		line 383 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 16257 ;; Parameters:    Size  Location     Type
 16258 ;;  RtccPtrVal      1    wreg     enum E7751
 16259 ;;  Value           1    8[BANK0 ] unsigned char 
 16260 ;; Auto vars:     Size  Location     Type
 16261 ;;  RtccPtrVal      1   11[BANK0 ] enum E7751
 16262 ;; Return value:  Size  Location     Type
 16263 ;;                  1    wreg      void 
 16264 ;; Registers used:
 16265 ;;		wreg, status,2, status,0, cstack
 16266 ;; Tracked objects:
 16267 ;;		On entry : 0/0
 16268 ;;		On exit  : 0/0
 16269 ;;		Unchanged: 0/0
 16270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16271 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16272 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16273 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16274 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16275 ;;Total ram usage:        4 bytes
 16276 ;; Hardware stack levels used:    1
 16277 ;; Hardware stack levels required when called:   12
 16278 ;; This function calls:
 16279 ;;		___awdiv
 16280 ;;		___awmod
 16281 ;; This function is called by:
 16282 ;;		_Rtcm_SetRtccDate
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286                           	psect	text71
 16287  001134                     __ptext71:
 16288                           	opt stack 0
 16289  001134                     _Rtcc_SetRtccValue:
 16290                           	opt stack 14
 16291                           
 16292                           ; BSR set to: 15
 16293                           ;incstack = 0
 16294                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 16295  001134  0100               	movlb	0	; () banked
 16296  001136  6F6B               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 16297                           
 16298                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 16299  001138  D0FC               	goto	l323
 16300  00113A                     l324:
 16301                           
 16302                           ; BSR set to: 0
 16303                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 16304  00113A  010F               	movlb	15	; () banked
 16305  00113C  833F               	bsf	63,1,b	;volatile
 16306                           
 16307                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 16308  00113E  813F               	bsf	63,0,b	;volatile
 16309                           
 16310                           ; BSR set to: 15
 16311                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16312  001140  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16313  001144  0100               	movlb	0	; () banked
 16314  001146  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16315  001148  0E00               	movlw	0
 16316  00114A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16317  00114C  0E0A               	movlw	10
 16318  00114E  6F62               	movwf	___awmod@divisor& (0+255),b
 16319  001150  EC64  F01E         	call	___awmod	;wreg free
 16320  001154  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16321  001158  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16322  00115C  0E0F               	movlw	15
 16323  00115E  0100               	movlb	0	; () banked
 16324  001160  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16325  001162  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16326  001166  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16327  001168  0E00               	movlw	0
 16328  00116A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16329  00116C  0E0A               	movlw	10
 16330  00116E  6F62               	movwf	___awdiv@divisor& (0+255),b
 16331  001170  EC5F  F01D         	call	___awdiv	;wreg free
 16332  001174  0100               	movlb	0	; () banked
 16333  001176  3960               	swapf	?___awdiv& (0+255),w,b
 16334  001178  0BF0               	andlw	240
 16335  00117A  0BF0               	andlw	240
 16336  00117C  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16337  00117E  6E98               	movwf	3992,c	;volatile
 16338                           
 16339                           ;rtcc_drv.c: 393: break;
 16340  001180  0012               	return	
 16341  001182                     l326:
 16342                           
 16343                           ; BSR set to: 0
 16344                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 16345  001182  010F               	movlb	15	; () banked
 16346  001184  833F               	bsf	63,1,b	;volatile
 16347                           
 16348                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 16349  001186  913F               	bcf	63,0,b	;volatile
 16350                           
 16351                           ; BSR set to: 15
 16352                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16353  001188  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16354  00118C  0100               	movlb	0	; () banked
 16355  00118E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16356  001190  0E00               	movlw	0
 16357  001192  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16358  001194  0E0A               	movlw	10
 16359  001196  6F62               	movwf	___awmod@divisor& (0+255),b
 16360  001198  EC64  F01E         	call	___awmod	;wreg free
 16361  00119C  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16362  0011A0  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16363  0011A4  0E0F               	movlw	15
 16364  0011A6  0100               	movlb	0	; () banked
 16365  0011A8  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16366  0011AA  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16367  0011AE  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16368  0011B0  0E00               	movlw	0
 16369  0011B2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16370  0011B4  0E0A               	movlw	10
 16371  0011B6  6F62               	movwf	___awdiv@divisor& (0+255),b
 16372  0011B8  EC5F  F01D         	call	___awdiv	;wreg free
 16373  0011BC  0100               	movlb	0	; () banked
 16374  0011BE  3960               	swapf	?___awdiv& (0+255),w,b
 16375  0011C0  0BF0               	andlw	240
 16376  0011C2  0BF0               	andlw	240
 16377  0011C4  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16378  0011C6  6E99               	movwf	3993,c	;volatile
 16379                           
 16380                           ;rtcc_drv.c: 401: break;
 16381  0011C8  0012               	return	
 16382  0011CA                     l327:
 16383                           
 16384                           ; BSR set to: 0
 16385                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 16386  0011CA  010F               	movlb	15	; () banked
 16387  0011CC  833F               	bsf	63,1,b	;volatile
 16388                           
 16389                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 16390  0011CE  913F               	bcf	63,0,b	;volatile
 16391                           
 16392                           ; BSR set to: 15
 16393                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16394  0011D0  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16395  0011D4  0100               	movlb	0	; () banked
 16396  0011D6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16397  0011D8  0E00               	movlw	0
 16398  0011DA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16399  0011DC  0E0A               	movlw	10
 16400  0011DE  6F62               	movwf	___awmod@divisor& (0+255),b
 16401  0011E0  EC64  F01E         	call	___awmod	;wreg free
 16402  0011E4  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16403  0011E8  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16404  0011EC  0E0F               	movlw	15
 16405  0011EE  0100               	movlb	0	; () banked
 16406  0011F0  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16407  0011F2  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16408  0011F6  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16409  0011F8  0E00               	movlw	0
 16410  0011FA  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16411  0011FC  0E0A               	movlw	10
 16412  0011FE  6F62               	movwf	___awdiv@divisor& (0+255),b
 16413  001200  EC5F  F01D         	call	___awdiv	;wreg free
 16414  001204  0100               	movlb	0	; () banked
 16415  001206  3960               	swapf	?___awdiv& (0+255),w,b
 16416  001208  0BF0               	andlw	240
 16417  00120A  0BF0               	andlw	240
 16418  00120C  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16419  00120E  6E98               	movwf	3992,c	;volatile
 16420                           
 16421                           ;rtcc_drv.c: 409: break;
 16422  001210  0012               	return	
 16423  001212                     l328:
 16424                           
 16425                           ; BSR set to: 0
 16426                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 16427  001212  010F               	movlb	15	; () banked
 16428  001214  933F               	bcf	63,1,b	;volatile
 16429                           
 16430                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 16431  001216  813F               	bsf	63,0,b	;volatile
 16432                           
 16433                           ; BSR set to: 15
 16434                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16435  001218  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16436  00121C  0100               	movlb	0	; () banked
 16437  00121E  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16438  001220  0E00               	movlw	0
 16439  001222  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16440  001224  0E0A               	movlw	10
 16441  001226  6F62               	movwf	___awmod@divisor& (0+255),b
 16442  001228  EC64  F01E         	call	___awmod	;wreg free
 16443  00122C  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16444  001230  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16445  001234  0E0F               	movlw	15
 16446  001236  0100               	movlb	0	; () banked
 16447  001238  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16448  00123A  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16449  00123E  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16450  001240  0E00               	movlw	0
 16451  001242  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16452  001244  0E0A               	movlw	10
 16453  001246  6F62               	movwf	___awdiv@divisor& (0+255),b
 16454  001248  EC5F  F01D         	call	___awdiv	;wreg free
 16455  00124C  0100               	movlb	0	; () banked
 16456  00124E  3960               	swapf	?___awdiv& (0+255),w,b
 16457  001250  0BF0               	andlw	240
 16458  001252  0BF0               	andlw	240
 16459  001254  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16460  001256  6E99               	movwf	3993,c	;volatile
 16461                           
 16462                           ;rtcc_drv.c: 417: break;
 16463  001258  0012               	return	
 16464  00125A                     l329:
 16465                           
 16466                           ; BSR set to: 0
 16467                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 16468  00125A  010F               	movlb	15	; () banked
 16469  00125C  933F               	bcf	63,1,b	;volatile
 16470                           
 16471                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 16472  00125E  813F               	bsf	63,0,b	;volatile
 16473                           
 16474                           ; BSR set to: 15
 16475                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16476  001260  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16477  001264  0100               	movlb	0	; () banked
 16478  001266  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16479  001268  0E00               	movlw	0
 16480  00126A  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16481  00126C  0E0A               	movlw	10
 16482  00126E  6F62               	movwf	___awmod@divisor& (0+255),b
 16483  001270  EC64  F01E         	call	___awmod	;wreg free
 16484  001274  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16485  001278  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16486  00127C  0E0F               	movlw	15
 16487  00127E  0100               	movlb	0	; () banked
 16488  001280  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16489  001282  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16490  001286  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16491  001288  0E00               	movlw	0
 16492  00128A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16493  00128C  0E0A               	movlw	10
 16494  00128E  6F62               	movwf	___awdiv@divisor& (0+255),b
 16495  001290  EC5F  F01D         	call	___awdiv	;wreg free
 16496  001294  0100               	movlb	0	; () banked
 16497  001296  3960               	swapf	?___awdiv& (0+255),w,b
 16498  001298  0BF0               	andlw	240
 16499  00129A  0BF0               	andlw	240
 16500  00129C  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16501  00129E  6E98               	movwf	3992,c	;volatile
 16502                           
 16503                           ;rtcc_drv.c: 425: break;
 16504  0012A0  0012               	return	
 16505  0012A2                     l330:
 16506                           
 16507                           ; BSR set to: 0
 16508                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 16509  0012A2  010F               	movlb	15	; () banked
 16510  0012A4  933F               	bcf	63,1,b	;volatile
 16511                           
 16512                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 16513  0012A6  913F               	bcf	63,0,b	;volatile
 16514                           
 16515                           ; BSR set to: 15
 16516                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16517  0012A8  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16518  0012AC  0100               	movlb	0	; () banked
 16519  0012AE  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16520  0012B0  0E00               	movlw	0
 16521  0012B2  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16522  0012B4  0E0A               	movlw	10
 16523  0012B6  6F62               	movwf	___awmod@divisor& (0+255),b
 16524  0012B8  EC64  F01E         	call	___awmod	;wreg free
 16525  0012BC  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16526  0012C0  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16527  0012C4  0E0F               	movlw	15
 16528  0012C6  0100               	movlb	0	; () banked
 16529  0012C8  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16530  0012CA  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16531  0012CE  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16532  0012D0  0E00               	movlw	0
 16533  0012D2  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16534  0012D4  0E0A               	movlw	10
 16535  0012D6  6F62               	movwf	___awdiv@divisor& (0+255),b
 16536  0012D8  EC5F  F01D         	call	___awdiv	;wreg free
 16537  0012DC  0100               	movlb	0	; () banked
 16538  0012DE  3960               	swapf	?___awdiv& (0+255),w,b
 16539  0012E0  0BF0               	andlw	240
 16540  0012E2  0BF0               	andlw	240
 16541  0012E4  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16542  0012E6  6E99               	movwf	3993,c	;volatile
 16543                           
 16544                           ;rtcc_drv.c: 433: break;
 16545  0012E8  0012               	return	
 16546  0012EA                     l331:
 16547                           
 16548                           ; BSR set to: 0
 16549                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 16550  0012EA  010F               	movlb	15	; () banked
 16551  0012EC  933F               	bcf	63,1,b	;volatile
 16552                           
 16553                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 16554  0012EE  913F               	bcf	63,0,b	;volatile
 16555                           
 16556                           ; BSR set to: 15
 16557                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16558  0012F0  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16559  0012F4  0100               	movlb	0	; () banked
 16560  0012F6  6B61               	clrf	(___awmod@dividend+1)& (0+255),b
 16561  0012F8  0E00               	movlw	0
 16562  0012FA  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
 16563  0012FC  0E0A               	movlw	10
 16564  0012FE  6F62               	movwf	___awmod@divisor& (0+255),b
 16565  001300  EC64  F01E         	call	___awmod	;wreg free
 16566  001304  C060  F069         	movff	?___awmod,??_Rtcc_SetRtccValue
 16567  001308  C061  F06A         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16568  00130C  0E0F               	movlw	15
 16569  00130E  0100               	movlb	0	; () banked
 16570  001310  1769               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16571  001312  C068  F060         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16572  001316  6B61               	clrf	(___awdiv@dividend+1)& (0+255),b
 16573  001318  0E00               	movlw	0
 16574  00131A  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
 16575  00131C  0E0A               	movlw	10
 16576  00131E  6F62               	movwf	___awdiv@divisor& (0+255),b
 16577  001320  EC5F  F01D         	call	___awdiv	;wreg free
 16578  001324  0100               	movlb	0	; () banked
 16579  001326  3960               	swapf	?___awdiv& (0+255),w,b
 16580  001328  0BF0               	andlw	240
 16581  00132A  0BF0               	andlw	240
 16582  00132C  1169               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16583  00132E  6E98               	movwf	3992,c	;volatile
 16584                           
 16585                           ; BSR set to: 0
 16586                           ;rtcc_drv.c: 445: }
 16587                           
 16588                           ; BSR set to: 0
 16589                           ;rtcc_drv.c: 444: break;
 16590                           
 16591                           ;rtcc_drv.c: 443: default:
 16592                           
 16593                           ;rtcc_drv.c: 441: break;
 16594  001330  0012               	return	
 16595  001332                     l323:
 16596                           
 16597                           ; BSR set to: 0
 16598  001332  0100               	movlb	0	; () banked
 16599  001334  516B               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 16600                           
 16601                           ; Switch size 1, requested type "space"
 16602                           ; Number of cases is 7, Range of values is 0 to 6
 16603                           ; switch strategies available:
 16604                           ; Name         Instructions Cycles
 16605                           ; simple_byte           22    12 (average)
 16606                           ;	Chosen strategy is simple_byte
 16607  001336  0A00               	xorlw	0	; case 0
 16608  001338  B4D8               	btfsc	status,2,c
 16609  00133A  D6FF               	goto	l324
 16610  00133C  0A01               	xorlw	1	; case 1
 16611  00133E  B4D8               	btfsc	status,2,c
 16612  001340  D720               	goto	l326
 16613  001342  0A03               	xorlw	3	; case 2
 16614  001344  B4D8               	btfsc	status,2,c
 16615  001346  D741               	goto	l327
 16616  001348  0A01               	xorlw	1	; case 3
 16617  00134A  B4D8               	btfsc	status,2,c
 16618  00134C  D762               	goto	l328
 16619  00134E  0A07               	xorlw	7	; case 4
 16620  001350  B4D8               	btfsc	status,2,c
 16621  001352  D783               	goto	l329
 16622  001354  0A01               	xorlw	1	; case 5
 16623  001356  B4D8               	btfsc	status,2,c
 16624  001358  D7A4               	goto	l330
 16625  00135A  0A03               	xorlw	3	; case 6
 16626  00135C  A4D8               	btfss	status,2,c
 16627  00135E  0012               	return	
 16628  001360  D7C4               	goto	l331
 16629  001362                     __end_of_Rtcc_SetRtccValue:
 16630                           	opt stack 0
 16631                           tosu	equ	0xFFF
 16632                           tosh	equ	0xFFE
 16633                           tosl	equ	0xFFD
 16634                           pclath	equ	0xFFA
 16635                           tblptru	equ	0xFF8
 16636                           tblptrh	equ	0xFF7
 16637                           tblptrl	equ	0xFF6
 16638                           tablat	equ	0xFF5
 16639                           prodh	equ	0xFF4
 16640                           prodl	equ	0xFF3
 16641                           intcon	equ	0xFF2
 16642                           intcon2	equ	0xFF1
 16643                           intcon3	equ	0xFF0
 16644                           indf0	equ	0xFEF
 16645                           postinc0	equ	0xFEE
 16646                           plusw0	equ	0xFEB
 16647                           fsr0h	equ	0xFEA
 16648                           fsr0l	equ	0xFE9
 16649                           wreg	equ	0xFE8
 16650                           indf1	equ	0xFE7
 16651                           postinc1	equ	0xFE6
 16652                           postdec1	equ	0xFE5
 16653                           fsr1h	equ	0xFE2
 16654                           fsr1l	equ	0xFE1
 16655                           indf2	equ	0xFDF
 16656                           postinc2	equ	0xFDE
 16657                           postdec2	equ	0xFDD
 16658                           plusw2	equ	0xFDB
 16659                           fsr2h	equ	0xFDA
 16660                           fsr2l	equ	0xFD9
 16661                           status	equ	0xFD8
 16662                           
 16663 ;; *************** function ___awmod *****************
 16664 ;; Defined at:
 16665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 16666 ;; Parameters:    Size  Location     Type
 16667 ;;  dividend        2    0[BANK0 ] int 
 16668 ;;  divisor         2    2[BANK0 ] int 
 16669 ;; Auto vars:     Size  Location     Type
 16670 ;;  sign            1    5[BANK0 ] unsigned char 
 16671 ;;  counter         1    4[BANK0 ] unsigned char 
 16672 ;; Return value:  Size  Location     Type
 16673 ;;                  2    0[BANK0 ] int 
 16674 ;; Registers used:
 16675 ;;		wreg, status,2, status,0
 16676 ;; Tracked objects:
 16677 ;;		On entry : 0/0
 16678 ;;		On exit  : 0/0
 16679 ;;		Unchanged: 0/0
 16680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16681 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16682 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16684 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16685 ;;Total ram usage:        6 bytes
 16686 ;; Hardware stack levels used:    1
 16687 ;; Hardware stack levels required when called:   11
 16688 ;; This function calls:
 16689 ;;		Nothing
 16690 ;; This function is called by:
 16691 ;;		_Rtcc_SetRtccValue
 16692 ;;		_Rtcc_SetRtccAlarm
 16693 ;; This function uses a non-reentrant model
 16694 ;;
 16695                           
 16696                           	psect	text72
 16697  003CC8                     __ptext72:
 16698                           	opt stack 0
 16699  003CC8                     ___awmod:
 16700                           	opt stack 14
 16701                           
 16702                           ; BSR set to: 0
 16703                           ;incstack = 0
 16704  003CC8  0E00               	movlw	0
 16705  003CCA  0100               	movlb	0	; () banked
 16706  003CCC  6F65               	movwf	___awmod@sign& (0+255),b
 16707                           
 16708                           ; BSR set to: 0
 16709  003CCE  AF61               	btfss	(___awmod@dividend+1)& (0+255),7,b
 16710  003CD0  D006               	goto	l2314
 16711                           
 16712                           ; BSR set to: 0
 16713  003CD2  6D60               	negf	___awmod@dividend& (0+255),b
 16714  003CD4  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 16715  003CD6  B0D8               	btfsc	status,0,c
 16716  003CD8  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 16717                           
 16718                           ; BSR set to: 0
 16719  003CDA  0E01               	movlw	1
 16720  003CDC  6F65               	movwf	___awmod@sign& (0+255),b
 16721  003CDE                     l2314:
 16722                           
 16723                           ; BSR set to: 0
 16724                           
 16725                           ; BSR set to: 0
 16726  003CDE  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16727  003CE0  D004               	goto	l2315
 16728                           
 16729                           ; BSR set to: 0
 16730  003CE2  6D62               	negf	___awmod@divisor& (0+255),b
 16731  003CE4  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
 16732  003CE6  B0D8               	btfsc	status,0,c
 16733  003CE8  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
 16734  003CEA                     l2315:
 16735                           
 16736                           ; BSR set to: 0
 16737                           
 16738                           ; BSR set to: 0
 16739  003CEA  5162               	movf	___awmod@divisor& (0+255),w,b
 16740  003CEC  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 16741  003CEE  B4D8               	btfsc	status,2,c
 16742  003CF0  D018               	goto	l2322
 16743                           
 16744                           ; BSR set to: 0
 16745  003CF2  0E01               	movlw	1
 16746  003CF4  6F64               	movwf	___awmod@counter& (0+255),b
 16747  003CF6  D004               	goto	l2317
 16748  003CF8                     
 16749                           ; BSR set to: 0
 16750                           
 16751                           ; BSR set to: 0
 16752  003CF8  90D8               	bcf	status,0,c
 16753  003CFA  3762               	rlcf	___awmod@divisor& (0+255),f,b
 16754  003CFC  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 16755  003CFE  2B64               	incf	___awmod@counter& (0+255),f,b
 16756  003D00                     l2317:
 16757                           
 16758                           ; BSR set to: 0
 16759                           
 16760                           ; BSR set to: 0
 16761  003D00  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
 16762  003D02  D7FA               	goto	l2318
 16763  003D04                     u5850:
 16764                           
 16765                           ; BSR set to: 0
 16766                           
 16767                           ; BSR set to: 0
 16768                           
 16769                           ; BSR set to: 0
 16770  003D04  5162               	movf	___awmod@divisor& (0+255),w,b
 16771  003D06  5D60               	subwf	___awmod@dividend& (0+255),w,b
 16772  003D08  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 16773  003D0A  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 16774  003D0C  A0D8               	btfss	status,0,c
 16775  003D0E  D004               	goto	l2321
 16776                           
 16777                           ; BSR set to: 0
 16778  003D10  5162               	movf	___awmod@divisor& (0+255),w,b
 16779  003D12  5F60               	subwf	___awmod@dividend& (0+255),f,b
 16780  003D14  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
 16781  003D16  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 16782  003D18                     l2321:
 16783                           
 16784                           ; BSR set to: 0
 16785                           
 16786                           ; BSR set to: 0
 16787  003D18  90D8               	bcf	status,0,c
 16788  003D1A  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 16789  003D1C  3362               	rrcf	___awmod@divisor& (0+255),f,b
 16790                           
 16791                           ; BSR set to: 0
 16792  003D1E  2F64               	decfsz	___awmod@counter& (0+255),f,b
 16793  003D20  D7F1               	goto	u5850
 16794  003D22                     l2322:
 16795                           
 16796                           ; BSR set to: 0
 16797                           
 16798                           ; BSR set to: 0
 16799                           
 16800                           ; BSR set to: 0
 16801  003D22  5165               	movf	___awmod@sign& (0+255),w,b
 16802  003D24  B4D8               	btfsc	status,2,c
 16803  003D26  D004               	goto	l2323
 16804                           
 16805                           ; BSR set to: 0
 16806  003D28  6D60               	negf	___awmod@dividend& (0+255),b
 16807  003D2A  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
 16808  003D2C  B0D8               	btfsc	status,0,c
 16809  003D2E  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
 16810  003D30                     l2323:
 16811                           
 16812                           ; BSR set to: 0
 16813                           
 16814                           ; BSR set to: 0
 16815  003D30  C060  F060         	movff	___awmod@dividend,?___awmod
 16816  003D34  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
 16817  003D38  0012               	return	
 16818  003D3A                     __end_of___awmod:
 16819                           	opt stack 0
 16820                           tosu	equ	0xFFF
 16821                           tosh	equ	0xFFE
 16822                           tosl	equ	0xFFD
 16823                           pclath	equ	0xFFA
 16824                           tblptru	equ	0xFF8
 16825                           tblptrh	equ	0xFF7
 16826                           tblptrl	equ	0xFF6
 16827                           tablat	equ	0xFF5
 16828                           prodh	equ	0xFF4
 16829                           prodl	equ	0xFF3
 16830                           intcon	equ	0xFF2
 16831                           intcon2	equ	0xFF1
 16832                           intcon3	equ	0xFF0
 16833                           indf0	equ	0xFEF
 16834                           postinc0	equ	0xFEE
 16835                           plusw0	equ	0xFEB
 16836                           fsr0h	equ	0xFEA
 16837                           fsr0l	equ	0xFE9
 16838                           wreg	equ	0xFE8
 16839                           indf1	equ	0xFE7
 16840                           postinc1	equ	0xFE6
 16841                           postdec1	equ	0xFE5
 16842                           fsr1h	equ	0xFE2
 16843                           fsr1l	equ	0xFE1
 16844                           indf2	equ	0xFDF
 16845                           postinc2	equ	0xFDE
 16846                           postdec2	equ	0xFDD
 16847                           plusw2	equ	0xFDB
 16848                           fsr2h	equ	0xFDA
 16849                           fsr2l	equ	0xFD9
 16850                           status	equ	0xFD8
 16851                           
 16852 ;; *************** function ___awdiv *****************
 16853 ;; Defined at:
 16854 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 16855 ;; Parameters:    Size  Location     Type
 16856 ;;  dividend        2    0[BANK0 ] int 
 16857 ;;  divisor         2    2[BANK0 ] int 
 16858 ;; Auto vars:     Size  Location     Type
 16859 ;;  quotient        2    6[BANK0 ] int 
 16860 ;;  sign            1    5[BANK0 ] unsigned char 
 16861 ;;  counter         1    4[BANK0 ] unsigned char 
 16862 ;; Return value:  Size  Location     Type
 16863 ;;                  2    0[BANK0 ] int 
 16864 ;; Registers used:
 16865 ;;		wreg, status,2, status,0
 16866 ;; Tracked objects:
 16867 ;;		On entry : 0/0
 16868 ;;		On exit  : 0/0
 16869 ;;		Unchanged: 0/0
 16870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16872 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16874 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16875 ;;Total ram usage:        8 bytes
 16876 ;; Hardware stack levels used:    1
 16877 ;; Hardware stack levels required when called:   11
 16878 ;; This function calls:
 16879 ;;		Nothing
 16880 ;; This function is called by:
 16881 ;;		_Rtcc_SetRtccValue
 16882 ;;		_Rtcc_SetRtccAlarm
 16883 ;; This function uses a non-reentrant model
 16884 ;;
 16885                           
 16886                           	psect	text73
 16887  003ABE                     __ptext73:
 16888                           	opt stack 0
 16889  003ABE                     ___awdiv:
 16890                           	opt stack 14
 16891                           
 16892                           ; BSR set to: 0
 16893                           ;incstack = 0
 16894  003ABE  0E00               	movlw	0
 16895  003AC0  0100               	movlb	0	; () banked
 16896  003AC2  6F65               	movwf	___awdiv@sign& (0+255),b
 16897                           
 16898                           ; BSR set to: 0
 16899  003AC4  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16900  003AC6  D006               	goto	l2301
 16901                           
 16902                           ; BSR set to: 0
 16903  003AC8  6D62               	negf	___awdiv@divisor& (0+255),b
 16904  003ACA  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
 16905  003ACC  B0D8               	btfsc	status,0,c
 16906  003ACE  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
 16907                           
 16908                           ; BSR set to: 0
 16909  003AD0  0E01               	movlw	1
 16910  003AD2  6F65               	movwf	___awdiv@sign& (0+255),b
 16911  003AD4                     l2301:
 16912                           
 16913                           ; BSR set to: 0
 16914                           
 16915                           ; BSR set to: 0
 16916  003AD4  AF61               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 16917  003AD6  D006               	goto	l2302
 16918                           
 16919                           ; BSR set to: 0
 16920  003AD8  6D60               	negf	___awdiv@dividend& (0+255),b
 16921  003ADA  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
 16922  003ADC  B0D8               	btfsc	status,0,c
 16923  003ADE  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
 16924                           
 16925                           ; BSR set to: 0
 16926  003AE0  0E01               	movlw	1
 16927  003AE2  1B65               	xorwf	___awdiv@sign& (0+255),f,b
 16928  003AE4                     l2302:
 16929                           
 16930                           ; BSR set to: 0
 16931                           
 16932                           ; BSR set to: 0
 16933  003AE4  0E00               	movlw	0
 16934  003AE6  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
 16935  003AE8  0E00               	movlw	0
 16936  003AEA  6F66               	movwf	___awdiv@quotient& (0+255),b
 16937                           
 16938                           ; BSR set to: 0
 16939  003AEC  5162               	movf	___awdiv@divisor& (0+255),w,b
 16940  003AEE  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 16941  003AF0  B4D8               	btfsc	status,2,c
 16942  003AF2  D01C               	goto	l2309
 16943                           
 16944                           ; BSR set to: 0
 16945  003AF4  0E01               	movlw	1
 16946  003AF6  6F64               	movwf	___awdiv@counter& (0+255),b
 16947  003AF8  D004               	goto	l2304
 16948  003AFA                     
 16949                           ; BSR set to: 0
 16950                           
 16951                           ; BSR set to: 0
 16952  003AFA  90D8               	bcf	status,0,c
 16953  003AFC  3762               	rlcf	___awdiv@divisor& (0+255),f,b
 16954  003AFE  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 16955  003B00  2B64               	incf	___awdiv@counter& (0+255),f,b
 16956  003B02                     l2304:
 16957                           
 16958                           ; BSR set to: 0
 16959                           
 16960                           ; BSR set to: 0
 16961  003B02  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16962  003B04  D7FA               	goto	l2305
 16963  003B06                     u5790:
 16964                           
 16965                           ; BSR set to: 0
 16966                           
 16967                           ; BSR set to: 0
 16968                           
 16969                           ; BSR set to: 0
 16970  003B06  90D8               	bcf	status,0,c
 16971  003B08  3766               	rlcf	___awdiv@quotient& (0+255),f,b
 16972  003B0A  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 16973                           
 16974                           ; BSR set to: 0
 16975  003B0C  5162               	movf	___awdiv@divisor& (0+255),w,b
 16976  003B0E  5D60               	subwf	___awdiv@dividend& (0+255),w,b
 16977  003B10  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16978  003B12  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 16979  003B14  A0D8               	btfss	status,0,c
 16980  003B16  D005               	goto	l2308
 16981                           
 16982                           ; BSR set to: 0
 16983  003B18  5162               	movf	___awdiv@divisor& (0+255),w,b
 16984  003B1A  5F60               	subwf	___awdiv@dividend& (0+255),f,b
 16985  003B1C  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
 16986  003B1E  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 16987                           
 16988                           ; BSR set to: 0
 16989  003B20  8166               	bsf	___awdiv@quotient& (0+255),0,b
 16990  003B22                     l2308:
 16991                           
 16992                           ; BSR set to: 0
 16993                           
 16994                           ; BSR set to: 0
 16995  003B22  90D8               	bcf	status,0,c
 16996  003B24  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 16997  003B26  3362               	rrcf	___awdiv@divisor& (0+255),f,b
 16998                           
 16999                           ; BSR set to: 0
 17000  003B28  2F64               	decfsz	___awdiv@counter& (0+255),f,b
 17001  003B2A  D7ED               	goto	u5790
 17002  003B2C                     l2309:
 17003                           
 17004                           ; BSR set to: 0
 17005                           
 17006                           ; BSR set to: 0
 17007                           
 17008                           ; BSR set to: 0
 17009  003B2C  5165               	movf	___awdiv@sign& (0+255),w,b
 17010  003B2E  B4D8               	btfsc	status,2,c
 17011  003B30  D004               	goto	l2310
 17012                           
 17013                           ; BSR set to: 0
 17014  003B32  6D66               	negf	___awdiv@quotient& (0+255),b
 17015  003B34  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
 17016  003B36  B0D8               	btfsc	status,0,c
 17017  003B38  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
 17018  003B3A                     l2310:
 17019                           
 17020                           ; BSR set to: 0
 17021                           
 17022                           ; BSR set to: 0
 17023  003B3A  C066  F060         	movff	___awdiv@quotient,?___awdiv
 17024  003B3E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
 17025  003B42  0012               	return	
 17026  003B44                     __end_of___awdiv:
 17027                           	opt stack 0
 17028                           tosu	equ	0xFFF
 17029                           tosh	equ	0xFFE
 17030                           tosl	equ	0xFFD
 17031                           pclath	equ	0xFFA
 17032                           tblptru	equ	0xFF8
 17033                           tblptrh	equ	0xFF7
 17034                           tblptrl	equ	0xFF6
 17035                           tablat	equ	0xFF5
 17036                           prodh	equ	0xFF4
 17037                           prodl	equ	0xFF3
 17038                           intcon	equ	0xFF2
 17039                           intcon2	equ	0xFF1
 17040                           intcon3	equ	0xFF0
 17041                           indf0	equ	0xFEF
 17042                           postinc0	equ	0xFEE
 17043                           plusw0	equ	0xFEB
 17044                           fsr0h	equ	0xFEA
 17045                           fsr0l	equ	0xFE9
 17046                           wreg	equ	0xFE8
 17047                           indf1	equ	0xFE7
 17048                           postinc1	equ	0xFE6
 17049                           postdec1	equ	0xFE5
 17050                           fsr1h	equ	0xFE2
 17051                           fsr1l	equ	0xFE1
 17052                           indf2	equ	0xFDF
 17053                           postinc2	equ	0xFDE
 17054                           postdec2	equ	0xFDD
 17055                           plusw2	equ	0xFDB
 17056                           fsr2h	equ	0xFDA
 17057                           fsr2l	equ	0xFD9
 17058                           status	equ	0xFD8
 17059                           
 17060 ;; *************** function _Rtcc_LockRtc *****************
 17061 ;; Defined at:
 17062 ;;		line 183 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17063 ;; Parameters:    Size  Location     Type
 17064 ;;		None
 17065 ;; Auto vars:     Size  Location     Type
 17066 ;;		None
 17067 ;; Return value:  Size  Location     Type
 17068 ;;                  1    wreg      void 
 17069 ;; Registers used:
 17070 ;;		None
 17071 ;; Tracked objects:
 17072 ;;		On entry : 0/0
 17073 ;;		On exit  : 0/0
 17074 ;;		Unchanged: 0/0
 17075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17080 ;;Total ram usage:        0 bytes
 17081 ;; Hardware stack levels used:    1
 17082 ;; Hardware stack levels required when called:   11
 17083 ;; This function calls:
 17084 ;;		Nothing
 17085 ;; This function is called by:
 17086 ;;		_Rtcm_MainTask
 17087 ;;		_Rtcm_SetRtccDate
 17088 ;;		_Rtcm_SetRtccAlarm
 17089 ;; This function uses a non-reentrant model
 17090 ;;
 17091                           
 17092                           	psect	text74
 17093  004E60                     __ptext74:
 17094                           	opt stack 0
 17095  004E60                     _Rtcc_LockRtc:
 17096                           	opt stack 15
 17097                           
 17098                           ; BSR set to: 0
 17099                           ;incstack = 0
 17100  004E60  010F               	movlb	15	;# 
 17101  004E62  0E55               	movlw	85	;# 
 17102  004E64  6EA7               	movwf	4007,c	;# 
 17103  004E66  0EAA               	movlw	170	;# 
 17104  004E68  6EA7               	movwf	4007,c	;# 
 17105                           
 17106                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0;
 17107  004E6A  010F               	movlb	15	; () banked
 17108  004E6C  9B3F               	bcf	63,5,b	;volatile
 17109                           
 17110                           ; BSR set to: 15
 17111  004E6E  0012               	return		;funcret
 17112  004E70                     __end_of_Rtcc_LockRtc:
 17113                           	opt stack 0
 17114                           tosu	equ	0xFFF
 17115                           tosh	equ	0xFFE
 17116                           tosl	equ	0xFFD
 17117                           pclath	equ	0xFFA
 17118                           tblptru	equ	0xFF8
 17119                           tblptrh	equ	0xFF7
 17120                           tblptrl	equ	0xFF6
 17121                           tablat	equ	0xFF5
 17122                           prodh	equ	0xFF4
 17123                           prodl	equ	0xFF3
 17124                           intcon	equ	0xFF2
 17125                           intcon2	equ	0xFF1
 17126                           intcon3	equ	0xFF0
 17127                           indf0	equ	0xFEF
 17128                           postinc0	equ	0xFEE
 17129                           plusw0	equ	0xFEB
 17130                           fsr0h	equ	0xFEA
 17131                           fsr0l	equ	0xFE9
 17132                           wreg	equ	0xFE8
 17133                           indf1	equ	0xFE7
 17134                           postinc1	equ	0xFE6
 17135                           postdec1	equ	0xFE5
 17136                           fsr1h	equ	0xFE2
 17137                           fsr1l	equ	0xFE1
 17138                           indf2	equ	0xFDF
 17139                           postinc2	equ	0xFDE
 17140                           postdec2	equ	0xFDD
 17141                           plusw2	equ	0xFDB
 17142                           fsr2h	equ	0xFDA
 17143                           fsr2l	equ	0xFD9
 17144                           status	equ	0xFD8
 17145                           
 17146 ;; *************** function _Rtcm_SetAlarmAction *****************
 17147 ;; Defined at:
 17148 ;;		line 278 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 17149 ;; Parameters:    Size  Location     Type
 17150 ;;  Action          2    2[BANK0 ] PTR FTN()void 
 17151 ;;		 -> Alarm(1), 
 17152 ;; Auto vars:     Size  Location     Type
 17153 ;;		None
 17154 ;; Return value:  Size  Location     Type
 17155 ;;                  1    wreg      void 
 17156 ;; Registers used:
 17157 ;;		wreg, status,2, status,0, cstack
 17158 ;; Tracked objects:
 17159 ;;		On entry : 0/0
 17160 ;;		On exit  : 0/0
 17161 ;;		Unchanged: 0/0
 17162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17163 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17166 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17167 ;;Total ram usage:        2 bytes
 17168 ;; Hardware stack levels used:    1
 17169 ;; Hardware stack levels required when called:   12
 17170 ;; This function calls:
 17171 ;;		_Rtcc_RegisterRtcIsrCallback
 17172 ;; This function is called by:
 17173 ;;		_Rtcm_MainTask
 17174 ;; This function uses a non-reentrant model
 17175 ;;
 17176                           
 17177                           	psect	text75
 17178  004EAE                     __ptext75:
 17179                           	opt stack 0
 17180  004EAE                     _Rtcm_SetAlarmAction:
 17181                           	opt stack 15
 17182                           
 17183                           ;rtcm.c: 281: Rtcc_RegisterRtcIsrCallback(Action);
 17184                           
 17185                           ; BSR set to: 15
 17186                           ;incstack = 0
 17187  004EAE  C062  F060         	movff	Rtcm_SetAlarmAction@Action,Rtcc_RegisterRtcIsrCallback@IsrCallback
 17188  004EB2  C063  F061         	movff	Rtcm_SetAlarmAction@Action+1,Rtcc_RegisterRtcIsrCallback@IsrCallback+1
 17189  004EB6  EC70  F027         	call	_Rtcc_RegisterRtcIsrCallback	;wreg free
 17190  004EBA  0012               	return		;funcret
 17191  004EBC                     __end_of_Rtcm_SetAlarmAction:
 17192                           	opt stack 0
 17193                           tosu	equ	0xFFF
 17194                           tosh	equ	0xFFE
 17195                           tosl	equ	0xFFD
 17196                           pclath	equ	0xFFA
 17197                           tblptru	equ	0xFF8
 17198                           tblptrh	equ	0xFF7
 17199                           tblptrl	equ	0xFF6
 17200                           tablat	equ	0xFF5
 17201                           prodh	equ	0xFF4
 17202                           prodl	equ	0xFF3
 17203                           intcon	equ	0xFF2
 17204                           intcon2	equ	0xFF1
 17205                           intcon3	equ	0xFF0
 17206                           indf0	equ	0xFEF
 17207                           postinc0	equ	0xFEE
 17208                           plusw0	equ	0xFEB
 17209                           fsr0h	equ	0xFEA
 17210                           fsr0l	equ	0xFE9
 17211                           wreg	equ	0xFE8
 17212                           indf1	equ	0xFE7
 17213                           postinc1	equ	0xFE6
 17214                           postdec1	equ	0xFE5
 17215                           fsr1h	equ	0xFE2
 17216                           fsr1l	equ	0xFE1
 17217                           indf2	equ	0xFDF
 17218                           postinc2	equ	0xFDE
 17219                           postdec2	equ	0xFDD
 17220                           plusw2	equ	0xFDB
 17221                           fsr2h	equ	0xFDA
 17222                           fsr2l	equ	0xFD9
 17223                           status	equ	0xFD8
 17224                           
 17225 ;; *************** function _Rtcc_RegisterRtcIsrCallback *****************
 17226 ;; Defined at:
 17227 ;;		line 558 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17228 ;; Parameters:    Size  Location     Type
 17229 ;;  IsrCallback     2    0[BANK0 ] PTR FTN()void 
 17230 ;;		 -> Alarm(1), 
 17231 ;; Auto vars:     Size  Location     Type
 17232 ;;		None
 17233 ;; Return value:  Size  Location     Type
 17234 ;;                  1    wreg      void 
 17235 ;; Registers used:
 17236 ;;		wreg, status,2, status,0
 17237 ;; Tracked objects:
 17238 ;;		On entry : 0/0
 17239 ;;		On exit  : 0/0
 17240 ;;		Unchanged: 0/0
 17241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17245 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17246 ;;Total ram usage:        2 bytes
 17247 ;; Hardware stack levels used:    1
 17248 ;; Hardware stack levels required when called:   11
 17249 ;; This function calls:
 17250 ;;		Nothing
 17251 ;; This function is called by:
 17252 ;;		_Rtcm_SetAlarmAction
 17253 ;; This function uses a non-reentrant model
 17254 ;;
 17255                           
 17256                           	psect	text76
 17257  004EE0                     __ptext76:
 17258                           	opt stack 0
 17259  004EE0                     _Rtcc_RegisterRtcIsrCallback:
 17260                           	opt stack 15
 17261                           
 17262                           ;rtcc_drv.c: 561: RtccIsrCallback = IsrCallback;
 17263                           
 17264                           ;incstack = 0
 17265  004EE0  C060  F150         	movff	Rtcc_RegisterRtcIsrCallback@IsrCallback,_RtccIsrCallback
 17266  004EE4  C061  F151         	movff	Rtcc_RegisterRtcIsrCallback@IsrCallback+1,_RtccIsrCallback+1
 17267  004EE8  0012               	return		;funcret
 17268  004EEA                     __end_of_Rtcc_RegisterRtcIsrCallback:
 17269                           	opt stack 0
 17270                           tosu	equ	0xFFF
 17271                           tosh	equ	0xFFE
 17272                           tosl	equ	0xFFD
 17273                           pclath	equ	0xFFA
 17274                           tblptru	equ	0xFF8
 17275                           tblptrh	equ	0xFF7
 17276                           tblptrl	equ	0xFF6
 17277                           tablat	equ	0xFF5
 17278                           prodh	equ	0xFF4
 17279                           prodl	equ	0xFF3
 17280                           intcon	equ	0xFF2
 17281                           intcon2	equ	0xFF1
 17282                           intcon3	equ	0xFF0
 17283                           indf0	equ	0xFEF
 17284                           postinc0	equ	0xFEE
 17285                           plusw0	equ	0xFEB
 17286                           fsr0h	equ	0xFEA
 17287                           fsr0l	equ	0xFE9
 17288                           wreg	equ	0xFE8
 17289                           indf1	equ	0xFE7
 17290                           postinc1	equ	0xFE6
 17291                           postdec1	equ	0xFE5
 17292                           fsr1h	equ	0xFE2
 17293                           fsr1l	equ	0xFE1
 17294                           indf2	equ	0xFDF
 17295                           postinc2	equ	0xFDE
 17296                           postdec2	equ	0xFDD
 17297                           plusw2	equ	0xFDB
 17298                           fsr2h	equ	0xFDA
 17299                           fsr2l	equ	0xFD9
 17300                           status	equ	0xFD8
 17301                           
 17302 ;; *************** function _Rtcm_GetRtccDate *****************
 17303 ;; Defined at:
 17304 ;;		line 204 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 17305 ;; Parameters:    Size  Location     Type
 17306 ;;		None
 17307 ;; Auto vars:     Size  Location     Type
 17308 ;;  LocalDate       8   13[BANK0 ] struct _RtccDateType
 17309 ;; Return value:  Size  Location     Type
 17310 ;;                  8    4[BANK0 ] struct _RtccDateType
 17311 ;; Registers used:
 17312 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17313 ;; Tracked objects:
 17314 ;;		On entry : 0/0
 17315 ;;		On exit  : 0/0
 17316 ;;		Unchanged: 0/0
 17317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17318 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17319 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17320 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17321 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17322 ;;Total ram usage:       17 bytes
 17323 ;; Hardware stack levels used:    1
 17324 ;; Hardware stack levels required when called:   12
 17325 ;; This function calls:
 17326 ;;		_Rtcc_GetRtccValue
 17327 ;; This function is called by:
 17328 ;;		_Rtcm_MainTask
 17329 ;; This function uses a non-reentrant model
 17330 ;;
 17331                           
 17332                           	psect	text77
 17333  003F60                     __ptext77:
 17334                           	opt stack 0
 17335  003F60                     _Rtcm_GetRtccDate:
 17336                           	opt stack 15
 17337                           
 17338                           ;rtcm.c: 206: RtccDateType LocalDate;
 17339                           ;rtcm.c: 209: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 17340                           
 17341                           ;incstack = 0
 17342  003F60  0E00               	movlw	0
 17343  003F62  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17344  003F66  0100               	movlb	0	; () banked
 17345  003F68  6F6C               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 17346  003F6A  0ED0               	movlw	208
 17347  003F6C  256C               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 17348  003F6E  6F6D               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 17349  003F70  6B6E               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 17350  003F72  0E07               	movlw	7
 17351  003F74  236E               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 17352                           
 17353                           ;rtcm.c: 210: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 17354  003F76  0E01               	movlw	1
 17355  003F78  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17356  003F7C  0100               	movlb	0	; () banked
 17357  003F7E  6F6F               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 17358                           
 17359                           ;rtcm.c: 211: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 17360  003F80  0E02               	movlw	2
 17361  003F82  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17362  003F86  0100               	movlb	0	; () banked
 17363  003F88  6F70               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 17364                           
 17365                           ;rtcm.c: 212: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 17366  003F8A  0E03               	movlw	3
 17367  003F8C  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17368  003F90  0100               	movlb	0	; () banked
 17369  003F92  6F71               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 17370                           
 17371                           ;rtcm.c: 213: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 17372  003F94  0E04               	movlw	4
 17373  003F96  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17374  003F9A  0100               	movlb	0	; () banked
 17375  003F9C  6F72               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 17376                           
 17377                           ;rtcm.c: 214: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 17378  003F9E  0E05               	movlw	5
 17379  003FA0  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17380  003FA4  0100               	movlb	0	; () banked
 17381  003FA6  6F73               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 17382                           
 17383                           ;rtcm.c: 215: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 17384  003FA8  0E06               	movlw	6
 17385  003FAA  ECFC  F01B         	call	_Rtcc_GetRtccValue
 17386  003FAE  0100               	movlb	0	; () banked
 17387  003FB0  6F74               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 17388                           
 17389                           ; BSR set to: 0
 17390                           ;rtcm.c: 218: return LocalDate;
 17391  003FB2  EE20  F06D         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 17392  003FB6  EE00  F064         	lfsr	0,?_Rtcm_GetRtccDate
 17393  003FBA  0E07               	movlw	7
 17394  003FBC                     u7601:
 17395  003FBC  CFDB FFEB          	movff	plusw2,plusw0
 17396  003FC0  06E8               	decf	wreg,f,c
 17397  003FC2  E2FC               	bc	u7601
 17398  003FC4  0012               	return	
 17399  003FC6                     __end_of_Rtcm_GetRtccDate:
 17400                           	opt stack 0
 17401                           tosu	equ	0xFFF
 17402                           tosh	equ	0xFFE
 17403                           tosl	equ	0xFFD
 17404                           pclath	equ	0xFFA
 17405                           tblptru	equ	0xFF8
 17406                           tblptrh	equ	0xFF7
 17407                           tblptrl	equ	0xFF6
 17408                           tablat	equ	0xFF5
 17409                           prodh	equ	0xFF4
 17410                           prodl	equ	0xFF3
 17411                           intcon	equ	0xFF2
 17412                           intcon2	equ	0xFF1
 17413                           intcon3	equ	0xFF0
 17414                           indf0	equ	0xFEF
 17415                           postinc0	equ	0xFEE
 17416                           plusw0	equ	0xFEB
 17417                           fsr0h	equ	0xFEA
 17418                           fsr0l	equ	0xFE9
 17419                           wreg	equ	0xFE8
 17420                           indf1	equ	0xFE7
 17421                           postinc1	equ	0xFE6
 17422                           postdec1	equ	0xFE5
 17423                           fsr1h	equ	0xFE2
 17424                           fsr1l	equ	0xFE1
 17425                           indf2	equ	0xFDF
 17426                           postinc2	equ	0xFDE
 17427                           postdec2	equ	0xFDD
 17428                           plusw2	equ	0xFDB
 17429                           fsr2h	equ	0xFDA
 17430                           fsr2l	equ	0xFD9
 17431                           status	equ	0xFD8
 17432                           
 17433 ;; *************** function _Rtcc_GetRtccValue *****************
 17434 ;; Defined at:
 17435 ;;		line 205 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17436 ;; Parameters:    Size  Location     Type
 17437 ;;  RtccPtrVal      1    wreg     enum E7751
 17438 ;; Auto vars:     Size  Location     Type
 17439 ;;  RtccPtrVal      1    1[BANK0 ] enum E7751
 17440 ;;  RegValue        1    3[BANK0 ] unsigned char 
 17441 ;;  RetValue        1    2[BANK0 ] unsigned char 
 17442 ;; Return value:  Size  Location     Type
 17443 ;;                  1    wreg      unsigned char 
 17444 ;; Registers used:
 17445 ;;		wreg, status,2, status,0, prodl, prodh
 17446 ;; Tracked objects:
 17447 ;;		On entry : 0/0
 17448 ;;		On exit  : 0/0
 17449 ;;		Unchanged: 0/0
 17450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17452 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17453 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17454 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17455 ;;Total ram usage:        4 bytes
 17456 ;; Hardware stack levels used:    1
 17457 ;; Hardware stack levels required when called:   11
 17458 ;; This function calls:
 17459 ;;		Nothing
 17460 ;; This function is called by:
 17461 ;;		_Rtcm_GetRtccDate
 17462 ;; This function uses a non-reentrant model
 17463 ;;
 17464                           
 17465                           	psect	text78
 17466  0037F8                     __ptext78:
 17467                           	opt stack 0
 17468  0037F8                     _Rtcc_GetRtccValue:
 17469                           	opt stack 15
 17470                           
 17471                           ; BSR set to: 0
 17472                           ;incstack = 0
 17473                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 17474  0037F8  0100               	movlb	0	; () banked
 17475  0037FA  6F61               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 17476                           
 17477                           ;rtcc_drv.c: 208: UINT8 RegValue;
 17478                           ;rtcc_drv.c: 209: UINT8 RetValue;
 17479                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 17480  0037FC  D02D               	goto	l298
 17481  0037FE                     l299:
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 17485  0037FE  010F               	movlb	15	; () banked
 17486  003800  833F               	bsf	63,1,b	;volatile
 17487  003802                     
 17488                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 17489  003802  813F               	bsf	63,0,b	;volatile
 17490  003804  D01C               	goto	L17
 17491  003806                     l301:
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 17495  003806  010F               	movlb	15	; () banked
 17496  003808  833F               	bsf	63,1,b	;volatile
 17497  00380A  D01E               	goto	L18
 17498  00380C                     l302:
 17499                           
 17500                           ; BSR set to: 0
 17501                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 17502  00380C  010F               	movlb	15	; () banked
 17503  00380E  833F               	bsf	63,1,b	;volatile
 17504  003810  D021               	goto	L21
 17505  003812                     l7780:
 17506                           
 17507                           ; BSR set to: 15
 17508                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 17509  003812  C063  F060         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 17510  003816  0E0F               	movlw	15
 17511  003818  0100               	movlb	0	; () banked
 17512  00381A  1760               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 17513  00381C  3963               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 17514  00381E  0B0F               	andlw	15
 17515  003820  0B0F               	andlw	15
 17516  003822  0D0A               	mullw	10
 17517  003824  50F3               	movf	prodl,w,c
 17518  003826  2560               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 17519  003828  6F62               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 17520                           
 17521                           ;rtcc_drv.c: 241: break;
 17522  00382A  D02D               	goto	l300
 17523  00382C                     l303:
 17524                           
 17525                           ; BSR set to: 0
 17526                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 17527  00382C  010F               	movlb	15	; () banked
 17528  00382E  933F               	bcf	63,1,b	;volatile
 17529                           
 17530                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 17531  003830  813F               	bsf	63,0,b	;volatile
 17532                           
 17533                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 17534  003832  CF99 F062          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 17535                           
 17536                           ;rtcc_drv.c: 249: break;
 17537  003836  D027               	goto	l300
 17538  003838                     l304:
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 17542  003838  010F               	movlb	15	; () banked
 17543  00383A  933F               	bcf	63,1,b	;volatile
 17544  00383C  D7E2               	goto	L19
 17545  00383E                     L17:
 17546                           
 17547                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 17548  00383E  CF98 F063          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 17549  003842  D7E7               	goto	l7780
 17550  003844                     l305:
 17551                           
 17552                           ; BSR set to: 0
 17553                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 17554  003844  010F               	movlb	15	; () banked
 17555  003846  933F               	bcf	63,1,b	;volatile
 17556  003848                     L18:
 17557                           
 17558                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 17559  003848  913F               	bcf	63,0,b	;volatile
 17560                           
 17561                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 17562  00384A  CF99 F063          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 17563  00384E  D7E1               	goto	l7780
 17564  003850                     l306:
 17565                           
 17566                           ; BSR set to: 0
 17567                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 17568  003850  010F               	movlb	15	; () banked
 17569  003852  933F               	bcf	63,1,b	;volatile
 17570  003854                     L21:
 17571                           
 17572                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 17573  003854  913F               	bcf	63,0,b	;volatile
 17574  003856  D7F3               	goto	L17
 17575  003858                     l298:
 17576                           
 17577                           ; BSR set to: 0
 17578  003858  0100               	movlb	0	; () banked
 17579  00385A  5161               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 17580                           
 17581                           ; Switch size 1, requested type "space"
 17582                           ; Number of cases is 7, Range of values is 0 to 6
 17583                           ; switch strategies available:
 17584                           ; Name         Instructions Cycles
 17585                           ; simple_byte           22    12 (average)
 17586                           ;	Chosen strategy is simple_byte
 17587  00385C  0A00               	xorlw	0	; case 0
 17588  00385E  B4D8               	btfsc	status,2,c
 17589  003860  D7CE               	goto	l299
 17590  003862  0A01               	xorlw	1	; case 1
 17591  003864  B4D8               	btfsc	status,2,c
 17592  003866  D7CF               	goto	l301
 17593  003868  0A03               	xorlw	3	; case 2
 17594  00386A  B4D8               	btfsc	status,2,c
 17595  00386C  D7CF               	goto	l302
 17596  00386E  0A01               	xorlw	1	; case 3
 17597  003870  B4D8               	btfsc	status,2,c
 17598  003872  D7DC               	goto	l303
 17599  003874  0A07               	xorlw	7	; case 4
 17600  003876  B4D8               	btfsc	status,2,c
 17601  003878  D7DF               	goto	l304
 17602  00387A  0A01               	xorlw	1	; case 5
 17603  00387C  B4D8               	btfsc	status,2,c
 17604  00387E  D7E2               	goto	l305
 17605  003880  0A03               	xorlw	3	; case 6
 17606  003882  B4D8               	btfsc	status,2,c
 17607  003884  D7E5               	goto	l306
 17608  003886                     l300:
 17609                           
 17610                           ;rtcc_drv.c: 286: return RetValue;
 17611                           
 17612                           ; BSR set to: 0
 17613  003886  0100               	movlb	0	; () banked
 17614  003888  5162               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 17615  00388A  0012               	return	
 17616  00388C                     __end_of_Rtcc_GetRtccValue:
 17617                           	opt stack 0
 17618                           tosu	equ	0xFFF
 17619                           tosh	equ	0xFFE
 17620                           tosl	equ	0xFFD
 17621                           pclath	equ	0xFFA
 17622                           tblptru	equ	0xFF8
 17623                           tblptrh	equ	0xFF7
 17624                           tblptrl	equ	0xFF6
 17625                           tablat	equ	0xFF5
 17626                           prodh	equ	0xFF4
 17627                           prodl	equ	0xFF3
 17628                           intcon	equ	0xFF2
 17629                           intcon2	equ	0xFF1
 17630                           intcon3	equ	0xFF0
 17631                           indf0	equ	0xFEF
 17632                           postinc0	equ	0xFEE
 17633                           plusw0	equ	0xFEB
 17634                           fsr0h	equ	0xFEA
 17635                           fsr0l	equ	0xFE9
 17636                           wreg	equ	0xFE8
 17637                           indf1	equ	0xFE7
 17638                           postinc1	equ	0xFE6
 17639                           postdec1	equ	0xFE5
 17640                           fsr1h	equ	0xFE2
 17641                           fsr1l	equ	0xFE1
 17642                           indf2	equ	0xFDF
 17643                           postinc2	equ	0xFDE
 17644                           postdec2	equ	0xFDD
 17645                           plusw2	equ	0xFDB
 17646                           fsr2h	equ	0xFDA
 17647                           fsr2l	equ	0xFD9
 17648                           status	equ	0xFD8
 17649                           
 17650 ;; *************** function _Rtcc_SetRtcStatus *****************
 17651 ;; Defined at:
 17652 ;;		line 149 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17653 ;; Parameters:    Size  Location     Type
 17654 ;;  Status          1    wreg     unsigned char 
 17655 ;; Auto vars:     Size  Location     Type
 17656 ;;  Status          1    0[BANK0 ] unsigned char 
 17657 ;; Return value:  Size  Location     Type
 17658 ;;                  1    wreg      void 
 17659 ;; Registers used:
 17660 ;;		wreg
 17661 ;; Tracked objects:
 17662 ;;		On entry : 0/0
 17663 ;;		On exit  : 0/0
 17664 ;;		Unchanged: 0/0
 17665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17667 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17669 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17670 ;;Total ram usage:        1 bytes
 17671 ;; Hardware stack levels used:    1
 17672 ;; Hardware stack levels required when called:   11
 17673 ;; This function calls:
 17674 ;;		Nothing
 17675 ;; This function is called by:
 17676 ;;		_Rtcm_MainTask
 17677 ;; This function uses a non-reentrant model
 17678 ;;
 17679                           
 17680                           	psect	text79
 17681  004DC2                     __ptext79:
 17682                           	opt stack 0
 17683  004DC2                     _Rtcc_SetRtcStatus:
 17684                           	opt stack 16
 17685                           
 17686                           ; BSR set to: 0
 17687                           ;incstack = 0
 17688                           ;Rtcc_SetRtcStatus@Status stored from wreg
 17689  004DC2  0100               	movlb	0	; () banked
 17690  004DC4  6F60               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 17691                           
 17692                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 17693  004DC6  0100               	movlb	0	; () banked
 17694  004DC8  B160               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 17695  004DCA  D003               	bra	u6815
 17696  004DCC  010F               	movlb	15	; () banked
 17697  004DCE  9F3F               	bcf	63,7,b	;volatile
 17698  004DD0  D002               	bra	u6816
 17699  004DD2                     u6815:
 17700  004DD2  010F               	movlb	15	; () banked
 17701  004DD4  8F3F               	bsf	63,7,b	;volatile
 17702  004DD6                     u6816:
 17703                           
 17704                           ; BSR set to: 15
 17705  004DD6  0012               	return		;funcret
 17706  004DD8                     __end_of_Rtcc_SetRtcStatus:
 17707                           	opt stack 0
 17708                           tosu	equ	0xFFF
 17709                           tosh	equ	0xFFE
 17710                           tosl	equ	0xFFD
 17711                           pclath	equ	0xFFA
 17712                           tblptru	equ	0xFF8
 17713                           tblptrh	equ	0xFF7
 17714                           tblptrl	equ	0xFF6
 17715                           tablat	equ	0xFF5
 17716                           prodh	equ	0xFF4
 17717                           prodl	equ	0xFF3
 17718                           intcon	equ	0xFF2
 17719                           intcon2	equ	0xFF1
 17720                           intcon3	equ	0xFF0
 17721                           indf0	equ	0xFEF
 17722                           postinc0	equ	0xFEE
 17723                           plusw0	equ	0xFEB
 17724                           fsr0h	equ	0xFEA
 17725                           fsr0l	equ	0xFE9
 17726                           wreg	equ	0xFE8
 17727                           indf1	equ	0xFE7
 17728                           postinc1	equ	0xFE6
 17729                           postdec1	equ	0xFE5
 17730                           fsr1h	equ	0xFE2
 17731                           fsr1l	equ	0xFE1
 17732                           indf2	equ	0xFDF
 17733                           postinc2	equ	0xFDE
 17734                           postdec2	equ	0xFDD
 17735                           plusw2	equ	0xFDB
 17736                           fsr2h	equ	0xFDA
 17737                           fsr2l	equ	0xFD9
 17738                           status	equ	0xFD8
 17739                           
 17740 ;; *************** function _Rtcc_RtcConfig *****************
 17741 ;; Defined at:
 17742 ;;		line 106 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17743 ;; Parameters:    Size  Location     Type
 17744 ;;  RtcConfig       2    1[BANK0 ] PTR struct _RtccConfigTy
 17745 ;;		 -> RtcConfig(4), 
 17746 ;; Auto vars:     Size  Location     Type
 17747 ;;		None
 17748 ;; Return value:  Size  Location     Type
 17749 ;;                  1    wreg      void 
 17750 ;; Registers used:
 17751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17752 ;; Tracked objects:
 17753 ;;		On entry : 0/0
 17754 ;;		On exit  : 0/0
 17755 ;;		Unchanged: 0/0
 17756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17760 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17761 ;;Total ram usage:        3 bytes
 17762 ;; Hardware stack levels used:    1
 17763 ;; Hardware stack levels required when called:   12
 17764 ;; This function calls:
 17765 ;;		_RtccIrqInit
 17766 ;; This function is called by:
 17767 ;;		_Rtcm_MainTask
 17768 ;; This function uses a non-reentrant model
 17769 ;;
 17770                           
 17771                           	psect	text80
 17772  003466                     __ptext80:
 17773                           	opt stack 0
 17774  003466                     _Rtcc_RtcConfig:
 17775                           	opt stack 15
 17776                           
 17777                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 17778                           
 17779                           ; BSR set to: 15
 17780                           ;incstack = 0
 17781  003466  C061  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 17782  00346A  C062  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 17783  00346E  50DF               	movf	indf2,w,c
 17784  003470  0100               	movlb	0	; () banked
 17785  003472  6F63               	movwf	??_Rtcc_RtcConfig& (0+255),b
 17786  003474  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17787  003476  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17788  003478  010F               	movlb	15	; () banked
 17789  00347A  513F               	movf	63,w,b	;volatile
 17790  00347C  0100               	movlb	0	; () banked
 17791  00347E  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17792  003480  0BFB               	andlw	-5
 17793  003482  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17794  003484  010F               	movlb	15	; () banked
 17795  003486  6F3F               	movwf	63,b	;volatile
 17796                           
 17797                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 17798  003488  0100               	movlb	0	; () banked
 17799  00348A  EE20 F001          	lfsr	2,1
 17800  00348E  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17801  003490  26D9               	addwf	fsr2l,f,c
 17802  003492  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17803  003494  22DA               	addwfc	fsr2h,f,c
 17804  003496  50DF               	movf	indf2,w,c
 17805  003498  6F63               	movwf	??_Rtcc_RtcConfig& (0+255),b
 17806  00349A  0E01               	movlw	1
 17807  00349C  1763               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 17808  00349E  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17809  0034A0  010F               	movlb	15	; () banked
 17810  0034A2  513C               	movf	60,w,b	;volatile
 17811  0034A4  0100               	movlb	0	; () banked
 17812  0034A6  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17813  0034A8  0BFD               	andlw	-3
 17814  0034AA  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17815  0034AC  010F               	movlb	15	; () banked
 17816  0034AE  6F3C               	movwf	60,b	;volatile
 17817                           
 17818                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 17819  0034B0  0100               	movlb	0	; () banked
 17820  0034B2  EE20 F001          	lfsr	2,1
 17821  0034B6  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17822  0034B8  26D9               	addwf	fsr2l,f,c
 17823  0034BA  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17824  0034BC  22DA               	addwfc	fsr2h,f,c
 17825  0034BE  50DF               	movf	indf2,w,c
 17826  0034C0  6F63               	movwf	??_Rtcc_RtcConfig& (0+255),b
 17827  0034C2  90D8               	bcf	status,0,c
 17828  0034C4  3363               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 17829  0034C6  0E01               	movlw	1
 17830  0034C8  1763               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 17831  0034CA  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17832  0034CC  4763               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17833  0034CE  010F               	movlb	15	; () banked
 17834  0034D0  513C               	movf	60,w,b	;volatile
 17835  0034D2  0100               	movlb	0	; () banked
 17836  0034D4  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17837  0034D6  0BFB               	andlw	-5
 17838  0034D8  1963               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17839  0034DA  010F               	movlb	15	; () banked
 17840  0034DC  6F3C               	movwf	60,b	;volatile
 17841                           
 17842                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 17843  0034DE  0100               	movlb	0	; () banked
 17844  0034E0  EE20 F002          	lfsr	2,2
 17845  0034E4  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17846  0034E6  26D9               	addwf	fsr2l,f,c
 17847  0034E8  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17848  0034EA  22DA               	addwfc	fsr2h,f,c
 17849  0034EC  04DE               	decf	postinc2,w,c
 17850  0034EE  A4D8               	btfss	status,2,c
 17851  0034F0  0012               	return	
 17852                           
 17853                           ; BSR set to: 0
 17854                           ;rtcc_drv.c: 115: {
 17855                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 17856  0034F2  EE20 F003          	lfsr	2,3
 17857  0034F6  5161               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17858  0034F8  26D9               	addwf	fsr2l,f,c
 17859  0034FA  5162               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17860  0034FC  22DA               	addwfc	fsr2h,f,c
 17861  0034FE  50DF               	movf	indf2,w,c
 17862  003500  ECEC  F026         	call	_RtccIrqInit
 17863  003504  0012               	return	
 17864  003506                     __end_of_Rtcc_RtcConfig:
 17865                           	opt stack 0
 17866                           tosu	equ	0xFFF
 17867                           tosh	equ	0xFFE
 17868                           tosl	equ	0xFFD
 17869                           pclath	equ	0xFFA
 17870                           tblptru	equ	0xFF8
 17871                           tblptrh	equ	0xFF7
 17872                           tblptrl	equ	0xFF6
 17873                           tablat	equ	0xFF5
 17874                           prodh	equ	0xFF4
 17875                           prodl	equ	0xFF3
 17876                           intcon	equ	0xFF2
 17877                           intcon2	equ	0xFF1
 17878                           intcon3	equ	0xFF0
 17879                           indf0	equ	0xFEF
 17880                           postinc0	equ	0xFEE
 17881                           plusw0	equ	0xFEB
 17882                           fsr0h	equ	0xFEA
 17883                           fsr0l	equ	0xFE9
 17884                           wreg	equ	0xFE8
 17885                           indf1	equ	0xFE7
 17886                           postinc1	equ	0xFE6
 17887                           postdec1	equ	0xFE5
 17888                           fsr1h	equ	0xFE2
 17889                           fsr1l	equ	0xFE1
 17890                           indf2	equ	0xFDF
 17891                           postinc2	equ	0xFDE
 17892                           postdec2	equ	0xFDD
 17893                           plusw2	equ	0xFDB
 17894                           fsr2h	equ	0xFDA
 17895                           fsr2l	equ	0xFD9
 17896                           status	equ	0xFD8
 17897                           
 17898 ;; *************** function _RtccIrqInit *****************
 17899 ;; Defined at:
 17900 ;;		line 84 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17901 ;; Parameters:    Size  Location     Type
 17902 ;;  Priority        1    wreg     enum E7710
 17903 ;; Auto vars:     Size  Location     Type
 17904 ;;  Priority        1    0[BANK0 ] enum E7710
 17905 ;; Return value:  Size  Location     Type
 17906 ;;                  1    wreg      void 
 17907 ;; Registers used:
 17908 ;;		wreg
 17909 ;; Tracked objects:
 17910 ;;		On entry : 0/0
 17911 ;;		On exit  : 0/0
 17912 ;;		Unchanged: 0/0
 17913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17917 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17918 ;;Total ram usage:        1 bytes
 17919 ;; Hardware stack levels used:    1
 17920 ;; Hardware stack levels required when called:   11
 17921 ;; This function calls:
 17922 ;;		Nothing
 17923 ;; This function is called by:
 17924 ;;		_Rtcc_RtcConfig
 17925 ;; This function uses a non-reentrant model
 17926 ;;
 17927                           
 17928                           	psect	text81
 17929  004DD8                     __ptext81:
 17930                           	opt stack 0
 17931  004DD8                     _RtccIrqInit:
 17932                           	opt stack 15
 17933                           
 17934                           ;incstack = 0
 17935                           ;RtccIrqInit@Priority stored from wreg
 17936  004DD8  0100               	movlb	0	; () banked
 17937  004DDA  6F60               	movwf	RtccIrqInit@Priority& (0+255),b
 17938                           
 17939                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 17940  004DDC  90A4               	bcf	4004,0,c	;volatile
 17941                           
 17942                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 17943  004DDE  0100               	movlb	0	; () banked
 17944  004DE0  B160               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 17945  004DE2  D002               	bra	u6085
 17946  004DE4  90A5               	bcf	4005,0,c	;volatile
 17947  004DE6  D001               	bra	u6086
 17948  004DE8                     u6085:
 17949  004DE8  80A5               	bsf	4005,0,c	;volatile
 17950  004DEA                     u6086:
 17951                           
 17952                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 17953  004DEA  80A3               	bsf	4003,0,c	;volatile
 17954  004DEC  0012               	return		;funcret
 17955  004DEE                     __end_of_RtccIrqInit:
 17956                           	opt stack 0
 17957                           tosu	equ	0xFFF
 17958                           tosh	equ	0xFFE
 17959                           tosl	equ	0xFFD
 17960                           pclath	equ	0xFFA
 17961                           tblptru	equ	0xFF8
 17962                           tblptrh	equ	0xFF7
 17963                           tblptrl	equ	0xFF6
 17964                           tablat	equ	0xFF5
 17965                           prodh	equ	0xFF4
 17966                           prodl	equ	0xFF3
 17967                           intcon	equ	0xFF2
 17968                           intcon2	equ	0xFF1
 17969                           intcon3	equ	0xFF0
 17970                           indf0	equ	0xFEF
 17971                           postinc0	equ	0xFEE
 17972                           plusw0	equ	0xFEB
 17973                           fsr0h	equ	0xFEA
 17974                           fsr0l	equ	0xFE9
 17975                           wreg	equ	0xFE8
 17976                           indf1	equ	0xFE7
 17977                           postinc1	equ	0xFE6
 17978                           postdec1	equ	0xFE5
 17979                           fsr1h	equ	0xFE2
 17980                           fsr1l	equ	0xFE1
 17981                           indf2	equ	0xFDF
 17982                           postinc2	equ	0xFDE
 17983                           postdec2	equ	0xFDD
 17984                           plusw2	equ	0xFDB
 17985                           fsr2h	equ	0xFDA
 17986                           fsr2l	equ	0xFD9
 17987                           status	equ	0xFD8
 17988                           
 17989 ;; *************** function _Rtcc_AlarmConfig *****************
 17990 ;; Defined at:
 17991 ;;		line 129 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17992 ;; Parameters:    Size  Location     Type
 17993 ;;  AlarmConfig     2    0[BANK0 ] PTR struct _RtccAlarmCon
 17994 ;;		 -> AlCfg(4), 
 17995 ;; Auto vars:     Size  Location     Type
 17996 ;;		None
 17997 ;; Return value:  Size  Location     Type
 17998 ;;                  1    wreg      void 
 17999 ;; Registers used:
 18000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18001 ;; Tracked objects:
 18002 ;;		On entry : 0/0
 18003 ;;		On exit  : 0/0
 18004 ;;		Unchanged: 0/0
 18005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18008 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18009 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18010 ;;Total ram usage:        3 bytes
 18011 ;; Hardware stack levels used:    1
 18012 ;; Hardware stack levels required when called:   11
 18013 ;; This function calls:
 18014 ;;		Nothing
 18015 ;; This function is called by:
 18016 ;;		_Rtcm_MainTask
 18017 ;; This function uses a non-reentrant model
 18018 ;;
 18019                           
 18020                           	psect	text82
 18021  003E88                     __ptext82:
 18022                           	opt stack 0
 18023  003E88                     _Rtcc_AlarmConfig:
 18024                           	opt stack 16
 18025                           
 18026                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 18027                           
 18028                           ;incstack = 0
 18029  003E88  C060  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 18030  003E8C  C061  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 18031  003E90  50DF               	movf	indf2,w,c
 18032  003E92  0100               	movlb	0	; () banked
 18033  003E94  6F62               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 18034  003E96  3362               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 18035  003E98  3362               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 18036  003E9A  5091               	movf	3985,w,c	;volatile
 18037  003E9C  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18038  003E9E  0B7F               	andlw	-129
 18039  003EA0  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18040  003EA2  6E91               	movwf	3985,c	;volatile
 18041                           
 18042                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 18043  003EA4  EE20 F001          	lfsr	2,1
 18044  003EA8  5160               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 18045  003EAA  26D9               	addwf	fsr2l,f,c
 18046  003EAC  5161               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 18047  003EAE  22DA               	addwfc	fsr2h,f,c
 18048  003EB0  50DF               	movf	indf2,w,c
 18049  003EB2  6F62               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 18050  003EB4  3B62               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 18051  003EB6  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18052  003EB8  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18053  003EBA  5091               	movf	3985,w,c	;volatile
 18054  003EBC  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18055  003EBE  0BBF               	andlw	-65
 18056  003EC0  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18057  003EC2  6E91               	movwf	3985,c	;volatile
 18058                           
 18059                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 18060  003EC4  EE20 F002          	lfsr	2,2
 18061  003EC8  5160               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 18062  003ECA  26D9               	addwf	fsr2l,f,c
 18063  003ECC  5161               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 18064  003ECE  22DA               	addwfc	fsr2h,f,c
 18065  003ED0  50DF               	movf	indf2,w,c
 18066  003ED2  6F62               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 18067  003ED4  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18068  003ED6  4762               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 18069  003ED8  5091               	movf	3985,w,c	;volatile
 18070  003EDA  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18071  003EDC  0BC3               	andlw	-61
 18072  003EDE  1962               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18073  003EE0  6E91               	movwf	3985,c	;volatile
 18074                           
 18075                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 18076  003EE2  EE20 F003          	lfsr	2,3
 18077  003EE6  5160               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 18078  003EE8  26D9               	addwf	fsr2l,f,c
 18079  003EEA  5161               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 18080  003EEC  22DA               	addwfc	fsr2h,f,c
 18081  003EEE  50DF               	movf	indf2,w,c
 18082  003EF0  6E90               	movwf	3984,c	;volatile
 18083                           
 18084                           ; BSR set to: 0
 18085  003EF2  0012               	return		;funcret
 18086  003EF4                     __end_of_Rtcc_AlarmConfig:
 18087                           	opt stack 0
 18088                           tosu	equ	0xFFF
 18089                           tosh	equ	0xFFE
 18090                           tosl	equ	0xFFD
 18091                           pclath	equ	0xFFA
 18092                           tblptru	equ	0xFF8
 18093                           tblptrh	equ	0xFF7
 18094                           tblptrl	equ	0xFF6
 18095                           tablat	equ	0xFF5
 18096                           prodh	equ	0xFF4
 18097                           prodl	equ	0xFF3
 18098                           intcon	equ	0xFF2
 18099                           intcon2	equ	0xFF1
 18100                           intcon3	equ	0xFF0
 18101                           indf0	equ	0xFEF
 18102                           postinc0	equ	0xFEE
 18103                           plusw0	equ	0xFEB
 18104                           fsr0h	equ	0xFEA
 18105                           fsr0l	equ	0xFE9
 18106                           wreg	equ	0xFE8
 18107                           indf1	equ	0xFE7
 18108                           postinc1	equ	0xFE6
 18109                           postdec1	equ	0xFE5
 18110                           fsr1h	equ	0xFE2
 18111                           fsr1l	equ	0xFE1
 18112                           indf2	equ	0xFDF
 18113                           postinc2	equ	0xFDE
 18114                           postdec2	equ	0xFDD
 18115                           plusw2	equ	0xFDB
 18116                           fsr2h	equ	0xFDA
 18117                           fsr2l	equ	0xFD9
 18118                           status	equ	0xFD8
 18119                           
 18120 ;; *************** function _Uart_InitUartModule *****************
 18121 ;; Defined at:
 18122 ;;		line 288 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 18123 ;; Parameters:    Size  Location     Type
 18124 ;;  Module          1    wreg     unsigned char 
 18125 ;;  UartConfig      2   32[BANK0 ] PTR struct _UartConfig
 18126 ;;		 -> UartConfig(21), 
 18127 ;; Auto vars:     Size  Location     Type
 18128 ;;  Module          1   36[BANK0 ] unsigned char 
 18129 ;; Return value:  Size  Location     Type
 18130 ;;                  1    wreg      void 
 18131 ;; Registers used:
 18132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18133 ;; Tracked objects:
 18134 ;;		On entry : 0/0
 18135 ;;		On exit  : 0/0
 18136 ;;		Unchanged: 0/0
 18137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18139 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18140 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18141 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18142 ;;Total ram usage:        5 bytes
 18143 ;; Hardware stack levels used:    1
 18144 ;; Hardware stack levels required when called:   13
 18145 ;; This function calls:
 18146 ;;		_SetUartBaudRate
 18147 ;; This function is called by:
 18148 ;;		_MdmWifi_MainTask
 18149 ;; This function uses a non-reentrant model
 18150 ;;
 18151                           
 18152                           	psect	text83
 18153  0008D6                     __ptext83:
 18154                           	opt stack 0
 18155  0008D6                     _Uart_InitUartModule:
 18156                           	opt stack 14
 18157                           
 18158                           ; BSR set to: 0
 18159                           ;incstack = 0
 18160                           ;Uart_InitUartModule@Module stored from wreg
 18161  0008D6  0100               	movlb	0	; () banked
 18162  0008D8  6F84               	movwf	Uart_InitUartModule@Module& (0+255),b
 18163                           
 18164                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 18165  0008DA  0100               	movlb	0	; () banked
 18166  0008DC  0584               	decf	Uart_InitUartModule@Module& (0+255),w,b
 18167  0008DE  A4D8               	btfss	status,2,c
 18168  0008E0  D0B8               	goto	l550
 18169                           
 18170                           ; BSR set to: 0
 18171                           ;uart_drv.c: 291: {
 18172                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 18173  0008E2  9C94               	bcf	3988,6,c	;volatile
 18174                           
 18175                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 18176  0008E4  8E94               	bsf	3988,7,c	;volatile
 18177                           
 18178                           ; BSR set to: 0
 18179                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 18180  0008E6  C080  F079         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 18181  0008EA  C081  F07A         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 18182  0008EE  0E01               	movlw	1
 18183  0008F0  EC81  F010         	call	_SetUartBaudRate
 18184                           
 18185                           ;uart_drv.c: 302: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 18186  0008F4  0100               	movlb	0	; () banked
 18187  0008F6  EE20 F004          	lfsr	2,4
 18188  0008FA  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18189  0008FC  26D9               	addwf	fsr2l,f,c
 18190  0008FE  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18191  000900  22DA               	addwfc	fsr2h,f,c
 18192  000902  50DF               	movf	indf2,w,c
 18193  000904  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18194  000906  0E06               	movlw	6
 18195  000908  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18196  00090A                     u6885:
 18197  00090A  90D8               	bcf	status,0,c
 18198  00090C  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18199  00090E  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18200  000910  D7FC               	goto	u6885
 18201  000912  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18202  000914  12AD               	iorwf	4013,f,c	;volatile
 18203                           
 18204                           ; BSR set to: 0
 18205                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 18206  000916  EE20 F006          	lfsr	2,6
 18207  00091A  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18208  00091C  26D9               	addwf	fsr2l,f,c
 18209  00091E  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18210  000920  22DA               	addwfc	fsr2h,f,c
 18211  000922  50DF               	movf	indf2,w,c
 18212  000924  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18213  000926  0E05               	movlw	5
 18214  000928  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18215  00092A                     u6895:
 18216  00092A  90D8               	bcf	status,0,c
 18217  00092C  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18218  00092E  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18219  000930  D7FC               	goto	u6895
 18220  000932  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18221  000934  12AD               	iorwf	4013,f,c	;volatile
 18222                           
 18223                           ; BSR set to: 0
 18224                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 18225  000936  EE20 F001          	lfsr	2,1
 18226  00093A  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18227  00093C  26D9               	addwf	fsr2l,f,c
 18228  00093E  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18229  000940  22DA               	addwfc	fsr2h,f,c
 18230  000942  50DF               	movf	indf2,w,c
 18231  000944  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18232  000946  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18233  000948  0BF0               	andlw	240
 18234  00094A  12AD               	iorwf	4013,f,c	;volatile
 18235                           
 18236                           ; BSR set to: 0
 18237                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 18238  00094C  EE20 F008          	lfsr	2,8
 18239  000950  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18240  000952  26D9               	addwf	fsr2l,f,c
 18241  000954  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18242  000956  22DA               	addwfc	fsr2h,f,c
 18243  000958  50DF               	movf	indf2,w,c
 18244  00095A  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18245  00095C  90D8               	bcf	status,0,c
 18246  00095E  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18247  000960  90D8               	bcf	status,0,c
 18248  000962  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18249  000964  90D8               	bcf	status,0,c
 18250  000966  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18251  000968  12AD               	iorwf	4013,f,c	;volatile
 18252                           
 18253                           ; BSR set to: 0
 18254                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 18255  00096A  EE20 F003          	lfsr	2,3
 18256  00096E  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18257  000970  26D9               	addwf	fsr2l,f,c
 18258  000972  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18259  000974  22DA               	addwfc	fsr2h,f,c
 18260  000976  50DF               	movf	indf2,w,c
 18261  000978  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18262  00097A  90D8               	bcf	status,0,c
 18263  00097C  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18264  00097E  90D8               	bcf	status,0,c
 18265  000980  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18266  000982  12AD               	iorwf	4013,f,c	;volatile
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;uart_drv.c: 309: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 18270  000984  C080  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 18271  000988  C081  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 18272  00098C  50DF               	movf	indf2,w,c
 18273  00098E  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18274  000990  0E00               	movlw	0
 18275  000992  B182               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 18276  000994  0E80               	movlw	128
 18277  000996  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18278  000998  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18279  00099A  12AC               	iorwf	4012,f,c	;volatile
 18280                           
 18281                           ; BSR set to: 0
 18282                           ;uart_drv.c: 310: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 18283  00099C  EE20 F005          	lfsr	2,5
 18284  0009A0  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18285  0009A2  26D9               	addwf	fsr2l,f,c
 18286  0009A4  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18287  0009A6  22DA               	addwfc	fsr2h,f,c
 18288  0009A8  50DF               	movf	indf2,w,c
 18289  0009AA  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18290  0009AC  0E06               	movlw	6
 18291  0009AE  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18292  0009B0                     u6905:
 18293  0009B0  90D8               	bcf	status,0,c
 18294  0009B2  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18295  0009B4  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18296  0009B6  D7FC               	goto	u6905
 18297  0009B8  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18298  0009BA  12AC               	iorwf	4012,f,c	;volatile
 18299                           
 18300                           ; BSR set to: 0
 18301                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 18302  0009BC  EE20 F007          	lfsr	2,7
 18303  0009C0  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18304  0009C2  26D9               	addwf	fsr2l,f,c
 18305  0009C4  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18306  0009C6  22DA               	addwfc	fsr2h,f,c
 18307  0009C8  50DF               	movf	indf2,w,c
 18308  0009CA  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18309  0009CC  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18310  0009CE  0BF0               	andlw	240
 18311  0009D0  12AC               	iorwf	4012,f,c	;volatile
 18312                           
 18313                           ; BSR set to: 0
 18314                           ;uart_drv.c: 314: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 18315  0009D2  EE20 F002          	lfsr	2,2
 18316  0009D6  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18317  0009D8  26D9               	addwf	fsr2l,f,c
 18318  0009DA  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18319  0009DC  22DA               	addwfc	fsr2h,f,c
 18320  0009DE  50DF               	movf	indf2,w,c
 18321  0009E0  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18322  0009E2  90D8               	bcf	status,0,c
 18323  0009E4  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18324  0009E6  90D8               	bcf	status,0,c
 18325  0009E8  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18326  0009EA  90D8               	bcf	status,0,c
 18327  0009EC  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18328  0009EE  127E               	iorwf	3966,f,c	;volatile
 18329                           
 18330                           ; BSR set to: 0
 18331                           ;uart_drv.c: 315: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 18332  0009F0  EE20 F00A          	lfsr	2,10
 18333  0009F4  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18334  0009F6  26D9               	addwf	fsr2l,f,c
 18335  0009F8  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18336  0009FA  22DA               	addwfc	fsr2h,f,c
 18337  0009FC  50DF               	movf	indf2,w,c
 18338  0009FE  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18339  000A00  90D8               	bcf	status,0,c
 18340  000A02  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18341  000A04  127E               	iorwf	3966,f,c	;volatile
 18342                           
 18343                           ; BSR set to: 0
 18344                           ;uart_drv.c: 316: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 18345  000A06  EE20 F009          	lfsr	2,9
 18346  000A0A  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18347  000A0C  26D9               	addwf	fsr2l,f,c
 18348  000A0E  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18349  000A10  22DA               	addwfc	fsr2h,f,c
 18350  000A12  50DF               	movf	indf2,w,c
 18351  000A14  127E               	iorwf	3966,f,c	;volatile
 18352                           
 18353                           ; BSR set to: 0
 18354                           ;uart_drv.c: 319: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 18355  000A16  EE20 F00B          	lfsr	2,11
 18356  000A1A  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18357  000A1C  26D9               	addwf	fsr2l,f,c
 18358  000A1E  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18359  000A20  22DA               	addwfc	fsr2h,f,c
 18360  000A22  50DF               	movf	indf2,w,c
 18361  000A24  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18362  000A26  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18363  000A28  509D               	movf	3997,w,c	;volatile
 18364  000A2A  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18365  000A2C  0BEF               	andlw	-17
 18366  000A2E  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18367  000A30  6E9D               	movwf	3997,c	;volatile
 18368                           
 18369                           ; BSR set to: 0
 18370                           ;uart_drv.c: 320: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 18371  000A32  EE20 F00C          	lfsr	2,12
 18372  000A36  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18373  000A38  26D9               	addwf	fsr2l,f,c
 18374  000A3A  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18375  000A3C  22DA               	addwfc	fsr2h,f,c
 18376  000A3E  50DF               	movf	indf2,w,c
 18377  000A40  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18378  000A42  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18379  000A44  4782               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 18380  000A46  509D               	movf	3997,w,c	;volatile
 18381  000A48  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18382  000A4A  0BDF               	andlw	-33
 18383  000A4C  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18384  000A4E  6E9D               	movwf	3997,c	;volatile
 18385                           
 18386                           ;uart_drv.c: 323: }
 18387  000A50  0012               	return	
 18388  000A52                     l550:
 18389                           
 18390                           ; BSR set to: 0
 18391                           ;uart_drv.c: 324: else if (Module == ((UINT8)(2)))
 18392                           
 18393                           ; BSR set to: 0
 18394  000A52  0E02               	movlw	2
 18395  000A54  1984               	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 18396  000A56  A4D8               	btfss	status,2,c
 18397  000A58  0012               	return	
 18398                           
 18399                           ; BSR set to: 0
 18400                           ;uart_drv.c: 325: {
 18401                           ;uart_drv.c: 327: TRISCbits.TRISC0 = ((UINT8)(0));
 18402  000A5A  9094               	bcf	3988,0,c	;volatile
 18403                           
 18404                           ;uart_drv.c: 328: TRISCbits.TRISC1 = ((UINT8)(1));
 18405  000A5C  8294               	bsf	3988,1,c	;volatile
 18406                           
 18407                           ; BSR set to: 0
 18408                           ;uart_drv.c: 331: SetUartBaudRate(((UINT8)(2)), UartConfig);
 18409  000A5E  C080  F079         	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 18410  000A62  C081  F07A         	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 18411  000A66  0E02               	movlw	2
 18412  000A68  EC81  F010         	call	_SetUartBaudRate
 18413                           
 18414                           ;uart_drv.c: 336: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 18415  000A6C  0100               	movlb	0	; () banked
 18416  000A6E  EE20 F004          	lfsr	2,4
 18417  000A72  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18418  000A74  26D9               	addwf	fsr2l,f,c
 18419  000A76  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18420  000A78  22DA               	addwfc	fsr2h,f,c
 18421  000A7A  50DF               	movf	indf2,w,c
 18422  000A7C  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18423  000A7E  0E06               	movlw	6
 18424  000A80  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18425  000A82                     u6925:
 18426  000A82  90D8               	bcf	status,0,c
 18427  000A84  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18428  000A86  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18429  000A88  D7FC               	goto	u6925
 18430  000A8A  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18431  000A8C  12A8               	iorwf	4008,f,c	;volatile
 18432                           
 18433                           ; BSR set to: 0
 18434                           ;uart_drv.c: 337: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 18435  000A8E  EE20 F006          	lfsr	2,6
 18436  000A92  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18437  000A94  26D9               	addwf	fsr2l,f,c
 18438  000A96  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18439  000A98  22DA               	addwfc	fsr2h,f,c
 18440  000A9A  50DF               	movf	indf2,w,c
 18441  000A9C  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18442  000A9E  0E05               	movlw	5
 18443  000AA0  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18444  000AA2                     u6935:
 18445  000AA2  90D8               	bcf	status,0,c
 18446  000AA4  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18447  000AA6  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18448  000AA8  D7FC               	goto	u6935
 18449  000AAA  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18450  000AAC  12A8               	iorwf	4008,f,c	;volatile
 18451                           
 18452                           ; BSR set to: 0
 18453                           ;uart_drv.c: 338: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 18454  000AAE  EE20 F001          	lfsr	2,1
 18455  000AB2  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18456  000AB4  26D9               	addwf	fsr2l,f,c
 18457  000AB6  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18458  000AB8  22DA               	addwfc	fsr2h,f,c
 18459  000ABA  50DF               	movf	indf2,w,c
 18460  000ABC  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18461  000ABE  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18462  000AC0  0BF0               	andlw	240
 18463  000AC2  12A8               	iorwf	4008,f,c	;volatile
 18464                           
 18465                           ; BSR set to: 0
 18466                           ;uart_drv.c: 339: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 18467  000AC4  EE20 F008          	lfsr	2,8
 18468  000AC8  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18469  000ACA  26D9               	addwf	fsr2l,f,c
 18470  000ACC  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18471  000ACE  22DA               	addwfc	fsr2h,f,c
 18472  000AD0  50DF               	movf	indf2,w,c
 18473  000AD2  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18474  000AD4  90D8               	bcf	status,0,c
 18475  000AD6  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18476  000AD8  90D8               	bcf	status,0,c
 18477  000ADA  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18478  000ADC  90D8               	bcf	status,0,c
 18479  000ADE  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18480  000AE0  12A8               	iorwf	4008,f,c	;volatile
 18481                           
 18482                           ; BSR set to: 0
 18483                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 18484  000AE2  EE20 F003          	lfsr	2,3
 18485  000AE6  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18486  000AE8  26D9               	addwf	fsr2l,f,c
 18487  000AEA  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18488  000AEC  22DA               	addwfc	fsr2h,f,c
 18489  000AEE  50DF               	movf	indf2,w,c
 18490  000AF0  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18491  000AF2  90D8               	bcf	status,0,c
 18492  000AF4  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18493  000AF6  90D8               	bcf	status,0,c
 18494  000AF8  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18495  000AFA  12A8               	iorwf	4008,f,c	;volatile
 18496                           
 18497                           ; BSR set to: 0
 18498                           ;uart_drv.c: 343: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 18499  000AFC  C080  FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 18500  000B00  C081  FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 18501  000B04  50DF               	movf	indf2,w,c
 18502  000B06  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18503  000B08  0E00               	movlw	0
 18504  000B0A  B182               	btfsc	??_Uart_InitUartModule& (0+255),0,b
 18505  000B0C  0E80               	movlw	128
 18506  000B0E  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18507  000B10  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18508  000B12  129C               	iorwf	3996,f,c	;volatile
 18509                           
 18510                           ; BSR set to: 0
 18511                           ;uart_drv.c: 344: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 18512  000B14  EE20 F005          	lfsr	2,5
 18513  000B18  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18514  000B1A  26D9               	addwf	fsr2l,f,c
 18515  000B1C  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18516  000B1E  22DA               	addwfc	fsr2h,f,c
 18517  000B20  50DF               	movf	indf2,w,c
 18518  000B22  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18519  000B24  0E06               	movlw	6
 18520  000B26  6F83               	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18521  000B28                     u6945:
 18522  000B28  90D8               	bcf	status,0,c
 18523  000B2A  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18524  000B2C  2F83               	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18525  000B2E  D7FC               	goto	u6945
 18526  000B30  5182               	movf	??_Uart_InitUartModule& (0+255),w,b
 18527  000B32  129C               	iorwf	3996,f,c	;volatile
 18528                           
 18529                           ; BSR set to: 0
 18530                           ;uart_drv.c: 345: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 18531  000B34  EE20 F007          	lfsr	2,7
 18532  000B38  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18533  000B3A  26D9               	addwf	fsr2l,f,c
 18534  000B3C  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18535  000B3E  22DA               	addwfc	fsr2h,f,c
 18536  000B40  50DF               	movf	indf2,w,c
 18537  000B42  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18538  000B44  3982               	swapf	??_Uart_InitUartModule& (0+255),w,b
 18539  000B46  0BF0               	andlw	240
 18540  000B48  129C               	iorwf	3996,f,c	;volatile
 18541                           
 18542                           ; BSR set to: 0
 18543                           ;uart_drv.c: 348: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 18544  000B4A  EE20 F002          	lfsr	2,2
 18545  000B4E  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18546  000B50  26D9               	addwf	fsr2l,f,c
 18547  000B52  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18548  000B54  22DA               	addwfc	fsr2h,f,c
 18549  000B56  50DF               	movf	indf2,w,c
 18550  000B58  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18551  000B5A  90D8               	bcf	status,0,c
 18552  000B5C  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18553  000B5E  90D8               	bcf	status,0,c
 18554  000B60  3782               	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18555  000B62  90D8               	bcf	status,0,c
 18556  000B64  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18557  000B66  127C               	iorwf	3964,f,c	;volatile
 18558                           
 18559                           ; BSR set to: 0
 18560                           ;uart_drv.c: 349: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 18561  000B68  EE20 F00A          	lfsr	2,10
 18562  000B6C  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18563  000B6E  26D9               	addwf	fsr2l,f,c
 18564  000B70  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18565  000B72  22DA               	addwfc	fsr2h,f,c
 18566  000B74  50DF               	movf	indf2,w,c
 18567  000B76  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18568  000B78  90D8               	bcf	status,0,c
 18569  000B7A  3582               	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18570  000B7C  127C               	iorwf	3964,f,c	;volatile
 18571                           
 18572                           ; BSR set to: 0
 18573                           ;uart_drv.c: 350: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 18574  000B7E  EE20 F009          	lfsr	2,9
 18575  000B82  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18576  000B84  26D9               	addwf	fsr2l,f,c
 18577  000B86  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18578  000B88  22DA               	addwfc	fsr2h,f,c
 18579  000B8A  50DF               	movf	indf2,w,c
 18580  000B8C  127C               	iorwf	3964,f,c	;volatile
 18581                           
 18582                           ; BSR set to: 0
 18583                           ;uart_drv.c: 353: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 18584  000B8E  EE20 F00B          	lfsr	2,11
 18585  000B92  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18586  000B94  26D9               	addwf	fsr2l,f,c
 18587  000B96  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18588  000B98  22DA               	addwfc	fsr2h,f,c
 18589  000B9A  50DF               	movf	indf2,w,c
 18590  000B9C  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18591  000B9E  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18592  000BA0  50A3               	movf	4003,w,c	;volatile
 18593  000BA2  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18594  000BA4  0BEF               	andlw	-17
 18595  000BA6  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18596  000BA8  6EA3               	movwf	4003,c	;volatile
 18597                           
 18598                           ; BSR set to: 0
 18599                           ;uart_drv.c: 354: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 18600  000BAA  EE20 F00C          	lfsr	2,12
 18601  000BAE  5180               	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18602  000BB0  26D9               	addwf	fsr2l,f,c
 18603  000BB2  5181               	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18604  000BB4  22DA               	addwfc	fsr2h,f,c
 18605  000BB6  50DF               	movf	indf2,w,c
 18606  000BB8  6F82               	movwf	??_Uart_InitUartModule& (0+255),b
 18607  000BBA  3B82               	swapf	??_Uart_InitUartModule& (0+255),f,b
 18608  000BBC  4782               	rlncf	??_Uart_InitUartModule& (0+255),f,b
 18609  000BBE  50A3               	movf	4003,w,c	;volatile
 18610  000BC0  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18611  000BC2  0BDF               	andlw	-33
 18612  000BC4  1982               	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18613  000BC6  6EA3               	movwf	4003,c	;volatile
 18614                           
 18615                           ; BSR set to: 0
 18616  000BC8  0012               	return	
 18617  000BCA                     __end_of_Uart_InitUartModule:
 18618                           	opt stack 0
 18619                           tosu	equ	0xFFF
 18620                           tosh	equ	0xFFE
 18621                           tosl	equ	0xFFD
 18622                           pclath	equ	0xFFA
 18623                           tblptru	equ	0xFF8
 18624                           tblptrh	equ	0xFF7
 18625                           tblptrl	equ	0xFF6
 18626                           tablat	equ	0xFF5
 18627                           prodh	equ	0xFF4
 18628                           prodl	equ	0xFF3
 18629                           intcon	equ	0xFF2
 18630                           intcon2	equ	0xFF1
 18631                           intcon3	equ	0xFF0
 18632                           indf0	equ	0xFEF
 18633                           postinc0	equ	0xFEE
 18634                           plusw0	equ	0xFEB
 18635                           fsr0h	equ	0xFEA
 18636                           fsr0l	equ	0xFE9
 18637                           wreg	equ	0xFE8
 18638                           indf1	equ	0xFE7
 18639                           postinc1	equ	0xFE6
 18640                           postdec1	equ	0xFE5
 18641                           fsr1h	equ	0xFE2
 18642                           fsr1l	equ	0xFE1
 18643                           indf2	equ	0xFDF
 18644                           postinc2	equ	0xFDE
 18645                           postdec2	equ	0xFDD
 18646                           plusw2	equ	0xFDB
 18647                           fsr2h	equ	0xFDA
 18648                           fsr2l	equ	0xFD9
 18649                           status	equ	0xFD8
 18650                           
 18651 ;; *************** function _SetUartBaudRate *****************
 18652 ;; Defined at:
 18653 ;;		line 121 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 18654 ;; Parameters:    Size  Location     Type
 18655 ;;  Module          1    wreg     unsigned char 
 18656 ;;  UartConfig      2   25[BANK0 ] PTR struct _UartConfig
 18657 ;;		 -> UartConfig(21), 
 18658 ;; Auto vars:     Size  Location     Type
 18659 ;;  Module          1   28[BANK0 ] unsigned char 
 18660 ;;  BaudRateRegi    2   29[BANK0 ] unsigned short 
 18661 ;;  DivisionFact    1   31[BANK0 ] unsigned char 
 18662 ;; Return value:  Size  Location     Type
 18663 ;;                  1    wreg      void 
 18664 ;; Registers used:
 18665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18666 ;; Tracked objects:
 18667 ;;		On entry : 0/0
 18668 ;;		On exit  : 0/0
 18669 ;;		Unchanged: 0/0
 18670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18671 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18672 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18673 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18674 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18675 ;;Total ram usage:        7 bytes
 18676 ;; Hardware stack levels used:    1
 18677 ;; Hardware stack levels required when called:   12
 18678 ;; This function calls:
 18679 ;;		___lldiv
 18680 ;;		___lmul
 18681 ;; This function is called by:
 18682 ;;		_Uart_InitUartModule
 18683 ;; This function uses a non-reentrant model
 18684 ;;
 18685                           
 18686                           	psect	text84
 18687  002102                     __ptext84:
 18688                           	opt stack 0
 18689  002102                     _SetUartBaudRate:
 18690                           	opt stack 14
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;incstack = 0
 18694                           ;SetUartBaudRate@Module stored from wreg
 18695  002102  0100               	movlb	0	; () banked
 18696  002104  6F7C               	movwf	SetUartBaudRate@Module& (0+255),b
 18697                           
 18698                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 18699  002106  0E00               	movlw	0
 18700  002108  0100               	movlb	0	; () banked
 18701  00210A  6F7E               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 18702  00210C  0E00               	movlw	0
 18703  00210E  6F7D               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 18704                           
 18705                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 18706  002110  0E00               	movlw	0
 18707  002112  6F7F               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 18708                           
 18709                           ; BSR set to: 0
 18710                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 18711  002114  EE20 F002          	lfsr	2,2
 18712  002118  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18713  00211A  26D9               	addwf	fsr2l,f,c
 18714  00211C  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18715  00211E  22DA               	addwfc	fsr2h,f,c
 18716  002120  50DF               	movf	indf2,w,c
 18717  002122  A4D8               	btfss	status,2,c
 18718  002124  D00B               	goto	l507
 18719                           
 18720                           ; BSR set to: 0
 18721  002126  EE20 F002          	lfsr	2,2
 18722  00212A  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18723  00212C  26D9               	addwf	fsr2l,f,c
 18724  00212E  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18725  002130  22DA               	addwfc	fsr2h,f,c
 18726  002132  50DF               	movf	indf2,w,c
 18727  002134  A4D8               	btfss	status,2,c
 18728  002136  D002               	goto	l507
 18729                           
 18730                           ; BSR set to: 0
 18731                           ;uart_drv.c: 128: {
 18732                           ;uart_drv.c: 129: DivisionFactor = 64;
 18733  002138  0E40               	movlw	64
 18734  00213A  D039               	goto	L23
 18735  00213C                     l507:
 18736                           
 18737                           ; BSR set to: 0
 18738                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 18739                           
 18740                           ; BSR set to: 0
 18741  00213C  EE20 F002          	lfsr	2,2
 18742  002140  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18743  002142  26D9               	addwf	fsr2l,f,c
 18744  002144  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18745  002146  22DA               	addwfc	fsr2h,f,c
 18746  002148  04DE               	decf	postinc2,w,c
 18747  00214A  A4D8               	btfss	status,2,c
 18748  00214C  D009               	goto	l509
 18749                           
 18750                           ; BSR set to: 0
 18751  00214E  EE20 F002          	lfsr	2,2
 18752  002152  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18753  002154  26D9               	addwf	fsr2l,f,c
 18754  002156  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18755  002158  22DA               	addwfc	fsr2h,f,c
 18756  00215A  50DF               	movf	indf2,w,c
 18757  00215C  B4D8               	btfsc	status,2,c
 18758  00215E  D012               	goto	u6140
 18759  002160                     l509:
 18760                           
 18761                           ; BSR set to: 0
 18762                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 18763                           
 18764                           ; BSR set to: 0
 18765  002160  EE20 F002          	lfsr	2,2
 18766  002164  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18767  002166  26D9               	addwf	fsr2l,f,c
 18768  002168  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18769  00216A  22DA               	addwfc	fsr2h,f,c
 18770  00216C  50DF               	movf	indf2,w,c
 18771  00216E  A4D8               	btfss	status,2,c
 18772  002170  D00B               	goto	l511
 18773                           
 18774                           ; BSR set to: 0
 18775  002172  EE20 F002          	lfsr	2,2
 18776  002176  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18777  002178  26D9               	addwf	fsr2l,f,c
 18778  00217A  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18779  00217C  22DA               	addwfc	fsr2h,f,c
 18780  00217E  04DE               	decf	postinc2,w,c
 18781  002180  A4D8               	btfss	status,2,c
 18782  002182  D002               	goto	l511
 18783  002184                     u6140:
 18784                           
 18785                           ; BSR set to: 0
 18786                           ;uart_drv.c: 136: {
 18787                           ;uart_drv.c: 137: DivisionFactor = 16;
 18788  002184  0E10               	movlw	16
 18789  002186  D013               	goto	L23
 18790  002188                     l511:
 18791                           
 18792                           ; BSR set to: 0
 18793                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 18794                           
 18795                           ; BSR set to: 0
 18796  002188  EE20 F002          	lfsr	2,2
 18797  00218C  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18798  00218E  26D9               	addwf	fsr2l,f,c
 18799  002190  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18800  002192  22DA               	addwfc	fsr2h,f,c
 18801  002194  04DE               	decf	postinc2,w,c
 18802  002196  A4D8               	btfss	status,2,c
 18803  002198  D00B               	goto	l513
 18804                           
 18805                           ; BSR set to: 0
 18806  00219A  EE20 F002          	lfsr	2,2
 18807  00219E  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18808  0021A0  26D9               	addwf	fsr2l,f,c
 18809  0021A2  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18810  0021A4  22DA               	addwfc	fsr2h,f,c
 18811  0021A6  04DE               	decf	postinc2,w,c
 18812  0021A8  A4D8               	btfss	status,2,c
 18813  0021AA  D002               	goto	l513
 18814                           
 18815                           ; BSR set to: 0
 18816                           ;uart_drv.c: 140: {
 18817                           ;uart_drv.c: 141: DivisionFactor = 4;
 18818  0021AC  0E04               	movlw	4
 18819  0021AE                     L23:
 18820  0021AE  6F7F               	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 18821  0021B0                     l513:
 18822                           
 18823                           ; BSR set to: 0
 18824                           ;uart_drv.c: 146: }
 18825                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 18826                           
 18827                           ; BSR set to: 0
 18828                           
 18829                           ; BSR set to: 0
 18830                           
 18831                           ; BSR set to: 0
 18832                           
 18833                           ; BSR set to: 0
 18834                           
 18835                           ;uart_drv.c: 143: else
 18836                           ;uart_drv.c: 144: {
 18837                           
 18838                           ; BSR set to: 0
 18839  0021B0  EE20 F00D          	lfsr	2,13
 18840  0021B4  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18841  0021B6  26D9               	addwf	fsr2l,f,c
 18842  0021B8  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18843  0021BA  22DA               	addwfc	fsr2h,f,c
 18844  0021BC  CFDE F06C          	movff	postinc2,___lldiv@dividend
 18845  0021C0  CFDE F06D          	movff	postinc2,___lldiv@dividend+1
 18846  0021C4  CFDE F06E          	movff	postinc2,___lldiv@dividend+2
 18847  0021C8  CFDE F06F          	movff	postinc2,___lldiv@dividend+3
 18848  0021CC  517F               	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 18849  0021CE  6F60               	movwf	___lmul@multiplier& (0+255),b
 18850  0021D0  6B61               	clrf	(___lmul@multiplier+1)& (0+255),b
 18851  0021D2  6B62               	clrf	(___lmul@multiplier+2)& (0+255),b
 18852  0021D4  6B63               	clrf	(___lmul@multiplier+3)& (0+255),b
 18853  0021D6  EE20 F011          	lfsr	2,17
 18854  0021DA  5179               	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18855  0021DC  26D9               	addwf	fsr2l,f,c
 18856  0021DE  517A               	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18857  0021E0  22DA               	addwfc	fsr2h,f,c
 18858  0021E2  CFDE F064          	movff	postinc2,___lmul@multiplicand
 18859  0021E6  CFDE F065          	movff	postinc2,___lmul@multiplicand+1
 18860  0021EA  CFDE F066          	movff	postinc2,___lmul@multiplicand+2
 18861  0021EE  CFDE F067          	movff	postinc2,___lmul@multiplicand+3
 18862  0021F2  ECA4  F020         	call	___lmul	;wreg free
 18863  0021F6  C060  F070         	movff	?___lmul,___lldiv@divisor
 18864  0021FA  C061  F071         	movff	?___lmul+1,___lldiv@divisor+1
 18865  0021FE  C062  F072         	movff	?___lmul+2,___lldiv@divisor+2
 18866  002202  C063  F073         	movff	?___lmul+3,___lldiv@divisor+3
 18867  002206  ECE5  F01D         	call	___lldiv	;wreg free
 18868  00220A  0EFF               	movlw	255
 18869  00220C  0100               	movlb	0	; () banked
 18870  00220E  256C               	addwf	?___lldiv& (0+255),w,b
 18871  002210  6F7D               	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 18872  002212  0EFF               	movlw	255
 18873  002214  216D               	addwfc	(?___lldiv+1)& (0+255),w,b
 18874  002216  6F7E               	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 18875                           
 18876                           ; BSR set to: 0
 18877                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 18878  002218  057C               	decf	SetUartBaudRate@Module& (0+255),w,b
 18879  00221A  A4D8               	btfss	status,2,c
 18880  00221C  D005               	goto	l515
 18881                           
 18882                           ; BSR set to: 0
 18883                           ;uart_drv.c: 152: {
 18884                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 18885  00221E  0E00               	movlw	0
 18886  002220  6E7F               	movwf	3967,c	;volatile
 18887                           
 18888                           ; BSR set to: 0
 18889                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 18890  002222  C07D  FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 18891                           
 18892                           ;uart_drv.c: 156: }
 18893  002226  0012               	return	
 18894  002228                     l515:
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 18898                           
 18899                           ; BSR set to: 0
 18900  002228  0E02               	movlw	2
 18901  00222A  197C               	xorwf	SetUartBaudRate@Module& (0+255),w,b
 18902  00222C  A4D8               	btfss	status,2,c
 18903  00222E  0012               	return	
 18904                           
 18905                           ; BSR set to: 0
 18906                           ;uart_drv.c: 158: {
 18907                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 18908  002230  0E00               	movlw	0
 18909  002232  6E7D               	movwf	3965,c	;volatile
 18910                           
 18911                           ; BSR set to: 0
 18912                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 18913  002234  C07D  FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 18914                           
 18915                           ; BSR set to: 0
 18916  002238  0012               	return	
 18917  00223A                     __end_of_SetUartBaudRate:
 18918                           	opt stack 0
 18919                           tosu	equ	0xFFF
 18920                           tosh	equ	0xFFE
 18921                           tosl	equ	0xFFD
 18922                           pclath	equ	0xFFA
 18923                           tblptru	equ	0xFF8
 18924                           tblptrh	equ	0xFF7
 18925                           tblptrl	equ	0xFF6
 18926                           tablat	equ	0xFF5
 18927                           prodh	equ	0xFF4
 18928                           prodl	equ	0xFF3
 18929                           intcon	equ	0xFF2
 18930                           intcon2	equ	0xFF1
 18931                           intcon3	equ	0xFF0
 18932                           indf0	equ	0xFEF
 18933                           postinc0	equ	0xFEE
 18934                           plusw0	equ	0xFEB
 18935                           fsr0h	equ	0xFEA
 18936                           fsr0l	equ	0xFE9
 18937                           wreg	equ	0xFE8
 18938                           indf1	equ	0xFE7
 18939                           postinc1	equ	0xFE6
 18940                           postdec1	equ	0xFE5
 18941                           fsr1h	equ	0xFE2
 18942                           fsr1l	equ	0xFE1
 18943                           indf2	equ	0xFDF
 18944                           postinc2	equ	0xFDE
 18945                           postdec2	equ	0xFDD
 18946                           plusw2	equ	0xFDB
 18947                           fsr2h	equ	0xFDA
 18948                           fsr2l	equ	0xFD9
 18949                           status	equ	0xFD8
 18950                           
 18951 ;; *************** function ___lmul *****************
 18952 ;; Defined at:
 18953 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 18954 ;; Parameters:    Size  Location     Type
 18955 ;;  multiplier      4    0[BANK0 ] unsigned long 
 18956 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 18957 ;; Auto vars:     Size  Location     Type
 18958 ;;  product         4    8[BANK0 ] unsigned long 
 18959 ;; Return value:  Size  Location     Type
 18960 ;;                  4    0[BANK0 ] unsigned long 
 18961 ;; Registers used:
 18962 ;;		wreg, status,2, status,0
 18963 ;; Tracked objects:
 18964 ;;		On entry : 0/0
 18965 ;;		On exit  : 0/0
 18966 ;;		Unchanged: 0/0
 18967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18968 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18969 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18971 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18972 ;;Total ram usage:       12 bytes
 18973 ;; Hardware stack levels used:    1
 18974 ;; Hardware stack levels required when called:   11
 18975 ;; This function calls:
 18976 ;;		Nothing
 18977 ;; This function is called by:
 18978 ;;		_Tmr_TmrBPrSet
 18979 ;;		_SetUartBaudRate
 18980 ;;		_strtol
 18981 ;; This function uses a non-reentrant model
 18982 ;;
 18983                           
 18984                           	psect	text85
 18985  004148                     __ptext85:
 18986                           	opt stack 0
 18987  004148                     ___lmul:
 18988                           	opt stack 15
 18989                           
 18990                           ; BSR set to: 0
 18991                           ;incstack = 0
 18992  004148  0E00               	movlw	0
 18993  00414A  0100               	movlb	0	; () banked
 18994  00414C  6F68               	movwf	___lmul@product& (0+255),b
 18995  00414E  0E00               	movlw	0
 18996  004150  6F69               	movwf	(___lmul@product+1)& (0+255),b
 18997  004152  0E00               	movlw	0
 18998  004154  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 18999  004156  0E00               	movlw	0
 19000  004158  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 19001  00415A                     
 19002                           ; BSR set to: 0
 19003                           
 19004                           ; BSR set to: 0
 19005  00415A  A160               	btfss	___lmul@multiplier& (0+255),0,b
 19006  00415C  D008               	goto	l2131
 19007                           
 19008                           ; BSR set to: 0
 19009  00415E  5164               	movf	___lmul@multiplicand& (0+255),w,b
 19010  004160  2768               	addwf	___lmul@product& (0+255),f,b
 19011  004162  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 19012  004164  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 19013  004166  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 19014  004168  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 19015  00416A  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 19016  00416C  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 19017  00416E                     l2131:
 19018                           
 19019                           ; BSR set to: 0
 19020                           
 19021                           ; BSR set to: 0
 19022  00416E  90D8               	bcf	status,0,c
 19023  004170  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 19024  004172  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 19025  004174  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 19026  004176  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 19027                           
 19028                           ; BSR set to: 0
 19029  004178  90D8               	bcf	status,0,c
 19030  00417A  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 19031  00417C  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 19032  00417E  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 19033  004180  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 19034  004182  5160               	movf	___lmul@multiplier& (0+255),w,b
 19035  004184  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 19036  004186  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 19037  004188  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 19038  00418A  A4D8               	btfss	status,2,c
 19039  00418C  D7E6               	goto	l2130
 19040                           
 19041                           ; BSR set to: 0
 19042  00418E  C068  F060         	movff	___lmul@product,?___lmul
 19043  004192  C069  F061         	movff	___lmul@product+1,?___lmul+1
 19044  004196  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 19045  00419A  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 19046                           
 19047                           ; BSR set to: 0
 19048  00419E  0012               	return		;funcret
 19049  0041A0                     __end_of___lmul:
 19050                           	opt stack 0
 19051                           tosu	equ	0xFFF
 19052                           tosh	equ	0xFFE
 19053                           tosl	equ	0xFFD
 19054                           pclath	equ	0xFFA
 19055                           tblptru	equ	0xFF8
 19056                           tblptrh	equ	0xFF7
 19057                           tblptrl	equ	0xFF6
 19058                           tablat	equ	0xFF5
 19059                           prodh	equ	0xFF4
 19060                           prodl	equ	0xFF3
 19061                           intcon	equ	0xFF2
 19062                           intcon2	equ	0xFF1
 19063                           intcon3	equ	0xFF0
 19064                           indf0	equ	0xFEF
 19065                           postinc0	equ	0xFEE
 19066                           plusw0	equ	0xFEB
 19067                           fsr0h	equ	0xFEA
 19068                           fsr0l	equ	0xFE9
 19069                           wreg	equ	0xFE8
 19070                           indf1	equ	0xFE7
 19071                           postinc1	equ	0xFE6
 19072                           postdec1	equ	0xFE5
 19073                           fsr1h	equ	0xFE2
 19074                           fsr1l	equ	0xFE1
 19075                           indf2	equ	0xFDF
 19076                           postinc2	equ	0xFDE
 19077                           postdec2	equ	0xFDD
 19078                           plusw2	equ	0xFDB
 19079                           fsr2h	equ	0xFDA
 19080                           fsr2l	equ	0xFD9
 19081                           status	equ	0xFD8
 19082                           
 19083 ;; *************** function _UartSetConfig *****************
 19084 ;; Defined at:
 19085 ;;		line 119 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19086 ;; Parameters:    Size  Location     Type
 19087 ;;		None
 19088 ;; Auto vars:     Size  Location     Type
 19089 ;;		None
 19090 ;; Return value:  Size  Location     Type
 19091 ;;                  1    wreg      void 
 19092 ;; Registers used:
 19093 ;;		wreg, status,2
 19094 ;; Tracked objects:
 19095 ;;		On entry : 0/0
 19096 ;;		On exit  : 0/0
 19097 ;;		Unchanged: 0/0
 19098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19103 ;;Total ram usage:        0 bytes
 19104 ;; Hardware stack levels used:    1
 19105 ;; Hardware stack levels required when called:   11
 19106 ;; This function calls:
 19107 ;;		Nothing
 19108 ;; This function is called by:
 19109 ;;		_MdmWifi_MainTask
 19110 ;; This function uses a non-reentrant model
 19111 ;;
 19112                           
 19113                           	psect	text86
 19114  0041A0                     __ptext86:
 19115                           	opt stack 0
 19116  0041A0                     _UartSetConfig:
 19117                           	opt stack 16
 19118                           
 19119                           ;mdm_wifi.c: 121: UartConfig.UartEnable = ((UINT8)(1));
 19120                           
 19121                           ; BSR set to: 0
 19122                           ;incstack = 0
 19123  0041A0  0E01               	movlw	1
 19124  0041A2  0101               	movlb	1	; () banked
 19125  0041A4  6F78               	movwf	_UartConfig& (0+255),b
 19126                           
 19127                           ;mdm_wifi.c: 122: UartConfig.UartMode = ((UINT8)(0));
 19128  0041A6  0E00               	movlw	0
 19129  0041A8  6F79               	movwf	(_UartConfig+1)& (0+255),b
 19130                           
 19131                           ;mdm_wifi.c: 123: UartConfig.BaudRateMode = ((UINT8)(1));
 19132  0041AA  0E01               	movlw	1
 19133  0041AC  6F7A               	movwf	(_UartConfig+2)& (0+255),b
 19134                           
 19135                           ;mdm_wifi.c: 124: UartConfig.HighBaudMode = ((UINT8)(1));
 19136  0041AE  0E01               	movlw	1
 19137  0041B0  6F7B               	movwf	(_UartConfig+3)& (0+255),b
 19138                           
 19139                           ;mdm_wifi.c: 125: UartConfig.Tx9bitMode = ((UINT8)(0));
 19140  0041B2  0E00               	movlw	0
 19141  0041B4  6F7C               	movwf	(_UartConfig+4)& (0+255),b
 19142                           
 19143                           ;mdm_wifi.c: 126: UartConfig.Rx9bitMode = ((UINT8)(0));
 19144  0041B6  0E00               	movlw	0
 19145  0041B8  6F7D               	movwf	(_UartConfig+5)& (0+255),b
 19146                           
 19147                           ;mdm_wifi.c: 127: UartConfig.TxEnable = ((UINT8)(1));
 19148  0041BA  0E01               	movlw	1
 19149  0041BC  6F7E               	movwf	(_UartConfig+6)& (0+255),b
 19150                           
 19151                           ;mdm_wifi.c: 128: UartConfig.RxEnable = ((UINT8)(1));
 19152  0041BE  0E01               	movlw	1
 19153  0041C0  6F7F               	movwf	(_UartConfig+7)& (0+255),b
 19154                           
 19155                           ;mdm_wifi.c: 129: UartConfig.SendBreakEnable = ((UINT8)(0));
 19156  0041C2  0E00               	movlw	0
 19157  0041C4  6F80               	movwf	(_UartConfig+8)& (0+255),b
 19158                           
 19159                           ;mdm_wifi.c: 130: UartConfig.AutobaudEnable = ((UINT8)(0));
 19160  0041C6  0E00               	movlw	0
 19161  0041C8  6F81               	movwf	(_UartConfig+9)& (0+255),b
 19162                           
 19163                           ;mdm_wifi.c: 131: UartConfig.WakeUpEnable = ((UINT8)(0));
 19164  0041CA  0E00               	movlw	0
 19165  0041CC  6F82               	movwf	(_UartConfig+10)& (0+255),b
 19166                           
 19167                           ;mdm_wifi.c: 132: UartConfig.TxInterruptEnable = ((UINT8)(0));
 19168  0041CE  0E00               	movlw	0
 19169  0041D0  6F83               	movwf	(_UartConfig+11)& (0+255),b
 19170                           
 19171                           ;mdm_wifi.c: 133: UartConfig.RxInterruptEnable = ((UINT8)(1));
 19172  0041D2  0E01               	movlw	1
 19173  0041D4  6F84               	movwf	(_UartConfig+12)& (0+255),b
 19174                           
 19175                           ;mdm_wifi.c: 134: UartConfig.McuBusClock = ((UINT32)(48000000));
 19176  0041D6  0E00               	movlw	0
 19177  0041D8  6F85               	movwf	(_UartConfig+13)& (0+255),b
 19178  0041DA  0E6C               	movlw	108
 19179  0041DC  6F86               	movwf	(_UartConfig+14)& (0+255),b
 19180  0041DE  0EDC               	movlw	220
 19181  0041E0  6F87               	movwf	(_UartConfig+15)& (0+255),b
 19182  0041E2  0E02               	movlw	2
 19183  0041E4  6F88               	movwf	(_UartConfig+16)& (0+255),b
 19184                           
 19185                           ;mdm_wifi.c: 135: UartConfig.DesiredBaudRate = 115200;
 19186  0041E6  0E00               	movlw	0
 19187  0041E8  6F89               	movwf	(_UartConfig+17)& (0+255),b
 19188  0041EA  0EC2               	movlw	194
 19189  0041EC  6F8A               	movwf	(_UartConfig+18)& (0+255),b
 19190  0041EE  0E01               	movlw	1
 19191  0041F0  6F8B               	movwf	(_UartConfig+19)& (0+255),b
 19192  0041F2  0E00               	movlw	0
 19193  0041F4  6F8C               	movwf	(_UartConfig+20)& (0+255),b
 19194                           
 19195                           ; BSR set to: 1
 19196  0041F6  0012               	return		;funcret
 19197  0041F8                     __end_of_UartSetConfig:
 19198                           	opt stack 0
 19199                           tosu	equ	0xFFF
 19200                           tosh	equ	0xFFE
 19201                           tosl	equ	0xFFD
 19202                           pclath	equ	0xFFA
 19203                           tblptru	equ	0xFF8
 19204                           tblptrh	equ	0xFF7
 19205                           tblptrl	equ	0xFF6
 19206                           tablat	equ	0xFF5
 19207                           prodh	equ	0xFF4
 19208                           prodl	equ	0xFF3
 19209                           intcon	equ	0xFF2
 19210                           intcon2	equ	0xFF1
 19211                           intcon3	equ	0xFF0
 19212                           indf0	equ	0xFEF
 19213                           postinc0	equ	0xFEE
 19214                           plusw0	equ	0xFEB
 19215                           fsr0h	equ	0xFEA
 19216                           fsr0l	equ	0xFE9
 19217                           wreg	equ	0xFE8
 19218                           indf1	equ	0xFE7
 19219                           postinc1	equ	0xFE6
 19220                           postdec1	equ	0xFE5
 19221                           fsr1h	equ	0xFE2
 19222                           fsr1l	equ	0xFE1
 19223                           indf2	equ	0xFDF
 19224                           postinc2	equ	0xFDE
 19225                           postdec2	equ	0xFDD
 19226                           plusw2	equ	0xFDB
 19227                           fsr2h	equ	0xFDA
 19228                           fsr2l	equ	0xFD9
 19229                           status	equ	0xFD8
 19230                           
 19231 ;; *************** function _MdmWifiGetUartData *****************
 19232 ;; Defined at:
 19233 ;;		line 146 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19234 ;; Parameters:    Size  Location     Type
 19235 ;;		None
 19236 ;; Auto vars:     Size  Location     Type
 19237 ;;		None
 19238 ;; Return value:  Size  Location     Type
 19239 ;;                  1    wreg      void 
 19240 ;; Registers used:
 19241 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19242 ;; Tracked objects:
 19243 ;;		On entry : 0/0
 19244 ;;		On exit  : 0/0
 19245 ;;		Unchanged: 0/0
 19246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19251 ;;Total ram usage:        0 bytes
 19252 ;; Hardware stack levels used:    1
 19253 ;; Hardware stack levels required when called:   12
 19254 ;; This function calls:
 19255 ;;		_ClearBuffer
 19256 ;;		_GenerateEvt
 19257 ;;		_ReceiveEvt
 19258 ;;		_StringCopy
 19259 ;; This function is called by:
 19260 ;;		_MdmWifi_MainTask
 19261 ;; This function uses a non-reentrant model
 19262 ;;
 19263                           
 19264                           	psect	text87
 19265  002AEC                     __ptext87:
 19266                           	opt stack 0
 19267  002AEC                     _MdmWifiGetUartData:
 19268                           	opt stack 15
 19269                           
 19270                           ;mdm_wifi.c: 148: static WifiUartGetDataStateType WifiUartGetDataState = WifiMdmUart_RxI
      +                          dle;
 19271                           ;mdm_wifi.c: 149: static UINT8 Counter = 0;
 19272                           ;mdm_wifi.c: 151: switch (WifiUartGetDataState)
 19273                           
 19274                           ; BSR set to: 1
 19275                           ;incstack = 0
 19276  002AEC  D05F               	goto	l864
 19277  002AEE                     
 19278                           ;mdm_wifi.c: 155: if (ReceiveEvt(&NewWifiUartData))
 19279  002AEE  0E5C               	movlw	low _NewWifiUartData
 19280  002AF0  0100               	movlb	0	; () banked
 19281  002AF2  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19282  002AF4  0E00               	movlw	high _NewWifiUartData
 19283  002AF6  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19284  002AF8  EC38  F025         	call	_ReceiveEvt	;wreg free
 19285  002AFC  0900               	iorlw	0
 19286  002AFE  B4D8               	btfsc	status,2,c
 19287  002B00  0012               	return	
 19288                           
 19289                           ;mdm_wifi.c: 156: {
 19290                           ;mdm_wifi.c: 158: WifiUartGetDataState = WifiMdmUart_Receiving;
 19291  002B02  0E01               	movlw	1
 19292  002B04  0101               	movlb	1	; () banked
 19293  002B06  6F6C               	movwf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),b
 19294                           
 19295                           ; BSR set to: 1
 19296                           ;mdm_wifi.c: 159: }
 19297                           ;mdm_wifi.c: 160: break;
 19298  002B08  0012               	return	
 19299  002B0A                     
 19300                           ; BSR set to: 1
 19301                           ;mdm_wifi.c: 164: if (ReceiveEvt(&NewWifiUartData))
 19302                           
 19303                           ; BSR set to: 1
 19304  002B0A  0E5C               	movlw	low _NewWifiUartData
 19305  002B0C  0100               	movlb	0	; () banked
 19306  002B0E  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19307  002B10  0E00               	movlw	high _NewWifiUartData
 19308  002B12  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19309  002B14  EC38  F025         	call	_ReceiveEvt	;wreg free
 19310  002B18  0900               	iorlw	0
 19311  002B1A  B4D8               	btfsc	status,2,c
 19312  002B1C  D004               	goto	l869
 19313                           
 19314                           ;mdm_wifi.c: 165: {
 19315                           ;mdm_wifi.c: 167: Counter = 0;
 19316  002B1E  0E00               	movlw	0
 19317  002B20  0101               	movlb	1	; () banked
 19318  002B22  6F6B               	movwf	MdmWifiGetUartData@Counter& (0+255),b
 19319                           
 19320                           ;mdm_wifi.c: 168: }
 19321  002B24  0012               	return	
 19322  002B26                     l869:
 19323                           
 19324                           ;mdm_wifi.c: 169: else
 19325                           ;mdm_wifi.c: 170: {
 19326                           ;mdm_wifi.c: 172: Counter++;
 19327                           
 19328                           ; BSR set to: 1
 19329  002B26  0101               	movlb	1	; () banked
 19330  002B28  2B6B               	incf	MdmWifiGetUartData@Counter& (0+255),f,b
 19331                           
 19332                           ; BSR set to: 1
 19333                           ;mdm_wifi.c: 174: if (Counter >= (((UINT16)(10))/((UINT16)(1))))
 19334  002B2A  0E09               	movlw	9
 19335  002B2C  656B               	cpfsgt	MdmWifiGetUartData@Counter& (0+255),b
 19336  002B2E  0012               	return	
 19337                           
 19338                           ; BSR set to: 1
 19339                           ;mdm_wifi.c: 175: {
 19340                           ;mdm_wifi.c: 177: Counter = 0;
 19341  002B30  0E00               	movlw	0
 19342  002B32  6F6B               	movwf	MdmWifiGetUartData@Counter& (0+255),b
 19343                           
 19344                           ; BSR set to: 1
 19345                           ;mdm_wifi.c: 179: StringCopy(MdmWifi_UartRxBuffer,WifiRxPacket.RxBuffer,MdmWifi_UartRxCo
      +                          unter);
 19346  002B34  0E00               	movlw	low _MdmWifi_UartRxBuffer
 19347  002B36  0100               	movlb	0	; () banked
 19348  002B38  6F60               	movwf	StringCopy@SourceStr& (0+255),b
 19349  002B3A  0E0B               	movlw	high _MdmWifi_UartRxBuffer
 19350  002B3C  6F61               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 19351  002B3E  0E00               	movlw	low _WifiRxPacket
 19352  002B40  6F62               	movwf	StringCopy@DestStr& (0+255),b
 19353  002B42  0E07               	movlw	high _WifiRxPacket
 19354  002B44  6F63               	movwf	(StringCopy@DestStr+1)& (0+255),b
 19355  002B46  C14A  F064         	movff	_MdmWifi_UartRxCounter,StringCopy@Len
 19356  002B4A  C14B  F065         	movff	_MdmWifi_UartRxCounter+1,StringCopy@Len+1
 19357  002B4E  ECA3  F023         	call	_StringCopy	;wreg free
 19358                           
 19359                           ;mdm_wifi.c: 180: WifiRxPacket.RxByteNum = MdmWifi_UartRxCounter;
 19360  002B52  C14A  F7FA         	movff	_MdmWifi_UartRxCounter,_WifiRxPacket+250
 19361  002B56  C14B  F7FB         	movff	_MdmWifi_UartRxCounter+1,_WifiRxPacket+251
 19362                           
 19363                           ;mdm_wifi.c: 182: ClearBuffer(MdmWifi_UartRxBuffer,sizeof(MdmWifi_UartRxBuffer));
 19364  002B5A  0E00               	movlw	low _MdmWifi_UartRxBuffer
 19365  002B5C  0100               	movlb	0	; () banked
 19366  002B5E  6F60               	movwf	ClearBuffer@Buffer& (0+255),b
 19367  002B60  0E0B               	movlw	high _MdmWifi_UartRxBuffer
 19368  002B62  6F61               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 19369  002B64  0E00               	movlw	0
 19370  002B66  6F63               	movwf	(ClearBuffer@Len+1)& (0+255),b
 19371  002B68  0EFA               	movlw	250
 19372  002B6A  6F62               	movwf	ClearBuffer@Len& (0+255),b
 19373  002B6C  EC72  F024         	call	_ClearBuffer	;wreg free
 19374                           
 19375                           ;mdm_wifi.c: 183: MdmWifi_UartRxCounter = 0;
 19376  002B70  0E00               	movlw	0
 19377  002B72  0101               	movlb	1	; () banked
 19378  002B74  6F4B               	movwf	(_MdmWifi_UartRxCounter+1)& (0+255),b
 19379  002B76  0E00               	movlw	0
 19380  002B78  6F4A               	movwf	_MdmWifi_UartRxCounter& (0+255),b
 19381                           
 19382                           ; BSR set to: 1
 19383                           ;mdm_wifi.c: 185: GenerateEvt(&(WifiRxPacket.PacketRxNotificationEvt));
 19384  002B7A  0EFC               	movlw	low (_WifiRxPacket+252)
 19385  002B7C  0100               	movlb	0	; () banked
 19386  002B7E  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19387  002B80  0E07               	movlw	high (_WifiRxPacket+252)
 19388  002B82  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19389  002B84  ECD5  F026         	call	_GenerateEvt	;wreg free
 19390                           
 19391                           ;mdm_wifi.c: 186: GenerateEvt(&NewWifiPacket);
 19392  002B88  0E5A               	movlw	low _NewWifiPacket
 19393  002B8A  0100               	movlb	0	; () banked
 19394  002B8C  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19395  002B8E  0E00               	movlw	high _NewWifiPacket
 19396  002B90  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19397  002B92  ECD5  F026         	call	_GenerateEvt	;wreg free
 19398                           
 19399                           ;mdm_wifi.c: 187: GenerateEvt(&NewWifiPacketParser);
 19400  002B96  0E59               	movlw	low _NewWifiPacketParser
 19401  002B98  0100               	movlb	0	; () banked
 19402  002B9A  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19403  002B9C  0E00               	movlw	high _NewWifiPacketParser
 19404  002B9E  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19405  002BA0  ECD5  F026         	call	_GenerateEvt	;wreg free
 19406                           
 19407                           ;mdm_wifi.c: 189: WifiUartGetDataState = WifiMdmUart_RxIdle;
 19408  002BA4  0E00               	movlw	0
 19409  002BA6  0101               	movlb	1	; () banked
 19410  002BA8  6F6C               	movwf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),b
 19411                           
 19412                           ; BSR set to: 1
 19413                           ;mdm_wifi.c: 196: }
 19414                           
 19415                           ; BSR set to: 1
 19416                           ;mdm_wifi.c: 195: break;
 19417                           
 19418                           ;mdm_wifi.c: 194: default:
 19419                           
 19420                           ; BSR set to: 1
 19421                           ;mdm_wifi.c: 190: }
 19422                           ;mdm_wifi.c: 191: }
 19423                           ;mdm_wifi.c: 192: break;
 19424                           
 19425                           ; BSR set to: 1
 19426  002BAA  0012               	return	
 19427  002BAC                     l864:
 19428                           
 19429                           ; BSR set to: 1
 19430  002BAC  0101               	movlb	1	; () banked
 19431  002BAE  516C               	movf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),w,b
 19432                           
 19433                           ; Switch size 1, requested type "space"
 19434                           ; Number of cases is 2, Range of values is 0 to 1
 19435                           ; switch strategies available:
 19436                           ; Name         Instructions Cycles
 19437                           ; simple_byte            7     4 (average)
 19438                           ;	Chosen strategy is simple_byte
 19439  002BB0  0A00               	xorlw	0	; case 0
 19440  002BB2  B4D8               	btfsc	status,2,c
 19441  002BB4  D79C               	goto	l865
 19442  002BB6  0A01               	xorlw	1	; case 1
 19443  002BB8  A4D8               	btfss	status,2,c
 19444  002BBA  0012               	return	
 19445  002BBC  D7A6               	goto	l868
 19446  002BBE                     __end_of_MdmWifiGetUartData:
 19447                           	opt stack 0
 19448                           tosu	equ	0xFFF
 19449                           tosh	equ	0xFFE
 19450                           tosl	equ	0xFFD
 19451                           pclath	equ	0xFFA
 19452                           tblptru	equ	0xFF8
 19453                           tblptrh	equ	0xFF7
 19454                           tblptrl	equ	0xFF6
 19455                           tablat	equ	0xFF5
 19456                           prodh	equ	0xFF4
 19457                           prodl	equ	0xFF3
 19458                           intcon	equ	0xFF2
 19459                           intcon2	equ	0xFF1
 19460                           intcon3	equ	0xFF0
 19461                           indf0	equ	0xFEF
 19462                           postinc0	equ	0xFEE
 19463                           plusw0	equ	0xFEB
 19464                           fsr0h	equ	0xFEA
 19465                           fsr0l	equ	0xFE9
 19466                           wreg	equ	0xFE8
 19467                           indf1	equ	0xFE7
 19468                           postinc1	equ	0xFE6
 19469                           postdec1	equ	0xFE5
 19470                           fsr1h	equ	0xFE2
 19471                           fsr1l	equ	0xFE1
 19472                           indf2	equ	0xFDF
 19473                           postinc2	equ	0xFDE
 19474                           postdec2	equ	0xFDD
 19475                           plusw2	equ	0xFDB
 19476                           fsr2h	equ	0xFDA
 19477                           fsr2l	equ	0xFD9
 19478                           status	equ	0xFD8
 19479                           
 19480 ;; *************** function _MdmWifiEvtParser *****************
 19481 ;; Defined at:
 19482 ;;		line 207 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19483 ;; Parameters:    Size  Location     Type
 19484 ;;		None
 19485 ;; Auto vars:     Size  Location     Type
 19486 ;;		None
 19487 ;; Return value:  Size  Location     Type
 19488 ;;                  1    wreg      void 
 19489 ;; Registers used:
 19490 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19491 ;; Tracked objects:
 19492 ;;		On entry : 0/0
 19493 ;;		On exit  : 0/0
 19494 ;;		Unchanged: 0/0
 19495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19500 ;;Total ram usage:        0 bytes
 19501 ;; Hardware stack levels used:    1
 19502 ;; Hardware stack levels required when called:   13
 19503 ;; This function calls:
 19504 ;;		_GenerateEvt
 19505 ;;		_ReceiveEvt
 19506 ;;		_strstr
 19507 ;; This function is called by:
 19508 ;;		_MdmWifi_MainTask
 19509 ;; This function uses a non-reentrant model
 19510 ;;
 19511                           
 19512                           	psect	text88
 19513  003DAC                     __ptext88:
 19514                           	opt stack 0
 19515  003DAC                     _MdmWifiEvtParser:
 19516                           	opt stack 14
 19517                           
 19518                           ;mdm_wifi.c: 210: if (ReceiveEvt(&NewWifiPacketParser))
 19519                           
 19520                           ;incstack = 0
 19521  003DAC  0E59               	movlw	low _NewWifiPacketParser
 19522  003DAE  0100               	movlb	0	; () banked
 19523  003DB0  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19524  003DB2  0E00               	movlw	high _NewWifiPacketParser
 19525  003DB4  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19526  003DB6  EC38  F025         	call	_ReceiveEvt	;wreg free
 19527  003DBA  0900               	iorlw	0
 19528  003DBC  B4D8               	btfsc	status,2,c
 19529  003DBE  0012               	return	
 19530                           
 19531                           ;mdm_wifi.c: 211: {
 19532                           ;mdm_wifi.c: 213: if (strstr(WifiRxPacket.RxBuffer,(void*)"ERROR") != (0))
 19533  003DC0  0E00               	movlw	low _WifiRxPacket
 19534  003DC2  0100               	movlb	0	; () banked
 19535  003DC4  6F6F               	movwf	strstr@s1& (0+255),b
 19536  003DC6  0E07               	movlw	high _WifiRxPacket
 19537  003DC8  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19538  003DCA  0ECF               	movlw	low STR_1
 19539  003DCC  6F71               	movwf	strstr@s2& (0+255),b
 19540  003DCE  0EFF               	movlw	high STR_1
 19541  003DD0  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19542  003DD2  EC1A  F01D         	call	_strstr	;wreg free
 19543  003DD6  0100               	movlb	0	; () banked
 19544  003DD8  516F               	movf	?_strstr& (0+255),w,b
 19545  003DDA  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19546  003DDC  B4D8               	btfsc	status,2,c
 19547  003DDE  D007               	goto	l877
 19548                           
 19549                           ; BSR set to: 0
 19550                           ;mdm_wifi.c: 214: {
 19551                           ;mdm_wifi.c: 216: GenerateEvt(&WifiGenericError);
 19552  003DE0  0EC5               	movlw	low _WifiGenericError
 19553  003DE2  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19554  003DE4  0E01               	movlw	high _WifiGenericError
 19555  003DE6  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19556  003DE8  ECD5  F026         	call	_GenerateEvt	;wreg free
 19557                           
 19558                           ;mdm_wifi.c: 217: }
 19559  003DEC  0012               	return	
 19560  003DEE                     l877:
 19561                           
 19562                           ;mdm_wifi.c: 219: else if (strstr(WifiRxPacket.RxBuffer,(void*)"+IPD") != (0))
 19563  003DEE  0E00               	movlw	low _WifiRxPacket
 19564  003DF0  0100               	movlb	0	; () banked
 19565  003DF2  6F6F               	movwf	strstr@s1& (0+255),b
 19566  003DF4  0E07               	movlw	high _WifiRxPacket
 19567  003DF6  6F70               	movwf	(strstr@s1+1)& (0+255),b
 19568  003DF8  0ED5               	movlw	low STR_2
 19569  003DFA  6F71               	movwf	strstr@s2& (0+255),b
 19570  003DFC  0EFF               	movlw	high STR_2
 19571  003DFE  6F72               	movwf	(strstr@s2+1)& (0+255),b
 19572  003E00  EC1A  F01D         	call	_strstr	;wreg free
 19573  003E04  0100               	movlb	0	; () banked
 19574  003E06  516F               	movf	?_strstr& (0+255),w,b
 19575  003E08  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 19576  003E0A  B4D8               	btfsc	status,2,c
 19577  003E0C  0012               	return	
 19578                           
 19579                           ; BSR set to: 0
 19580                           ;mdm_wifi.c: 220: {
 19581                           ;mdm_wifi.c: 222: GenerateEvt(&WifiReceiveNetData);
 19582  003E0E  0E58               	movlw	low _WifiReceiveNetData
 19583  003E10  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19584  003E12  0E00               	movlw	high _WifiReceiveNetData
 19585  003E14  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19586  003E16  ECD5  F026         	call	_GenerateEvt	;wreg free
 19587                           
 19588                           ;mdm_wifi.c: 224: else
 19589                           ;mdm_wifi.c: 225: {
 19590                           
 19591                           ;mdm_wifi.c: 223: }
 19592  003E1A  0012               	return	
 19593  003E1C                     __end_of_MdmWifiEvtParser:
 19594                           	opt stack 0
 19595                           tosu	equ	0xFFF
 19596                           tosh	equ	0xFFE
 19597                           tosl	equ	0xFFD
 19598                           pclath	equ	0xFFA
 19599                           tblptru	equ	0xFF8
 19600                           tblptrh	equ	0xFF7
 19601                           tblptrl	equ	0xFF6
 19602                           tablat	equ	0xFF5
 19603                           prodh	equ	0xFF4
 19604                           prodl	equ	0xFF3
 19605                           intcon	equ	0xFF2
 19606                           intcon2	equ	0xFF1
 19607                           intcon3	equ	0xFF0
 19608                           indf0	equ	0xFEF
 19609                           postinc0	equ	0xFEE
 19610                           plusw0	equ	0xFEB
 19611                           fsr0h	equ	0xFEA
 19612                           fsr0l	equ	0xFE9
 19613                           wreg	equ	0xFE8
 19614                           indf1	equ	0xFE7
 19615                           postinc1	equ	0xFE6
 19616                           postdec1	equ	0xFE5
 19617                           fsr1h	equ	0xFE2
 19618                           fsr1l	equ	0xFE1
 19619                           indf2	equ	0xFDF
 19620                           postinc2	equ	0xFDE
 19621                           postdec2	equ	0xFDD
 19622                           plusw2	equ	0xFDB
 19623                           fsr2h	equ	0xFDA
 19624                           fsr2l	equ	0xFD9
 19625                           status	equ	0xFD8
 19626                           
 19627 ;; *************** function _MdmWifi_StartWifiModemSm *****************
 19628 ;; Defined at:
 19629 ;;		line 84 in file "../Source/c/01_Hal/02_Drv/mdm_wifi_drv.c"
 19630 ;; Parameters:    Size  Location     Type
 19631 ;;		None
 19632 ;; Auto vars:     Size  Location     Type
 19633 ;;		None
 19634 ;; Return value:  Size  Location     Type
 19635 ;;                  1    wreg      void 
 19636 ;; Registers used:
 19637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19638 ;; Tracked objects:
 19639 ;;		On entry : 0/0
 19640 ;;		On exit  : 0/0
 19641 ;;		Unchanged: 0/0
 19642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19647 ;;Total ram usage:        0 bytes
 19648 ;; Hardware stack levels used:    1
 19649 ;; Hardware stack levels required when called:   12
 19650 ;; This function calls:
 19651 ;;		_GenerateEvt
 19652 ;;		_ReceiveEvt
 19653 ;; This function is called by:
 19654 ;;		_MdmWifi_DrvMainFn
 19655 ;; This function uses a non-reentrant model
 19656 ;;
 19657                           
 19658                           	psect	text89
 19659  003B44                     __ptext89:
 19660                           	opt stack 0
 19661  003B44                     _MdmWifi_StartWifiModemSm:
 19662                           	opt stack 15
 19663                           
 19664                           ;mdm_wifi_drv.c: 86: static WifiModeSmStateType WifiModeSmState = WifiMdm_Autostart;
 19665                           ;mdm_wifi_drv.c: 87: static UINT16 Counter = 0;
 19666                           ;mdm_wifi_drv.c: 89: switch (WifiModeSmState)
 19667                           
 19668                           ;incstack = 0
 19669  003B44  D033               	goto	l647
 19670  003B46                     l648:
 19671                           
 19672                           ; BSR set to: 1
 19673                           ;mdm_wifi_drv.c: 93: TRISEbits.TRISE0 = ((UINT8)(0));
 19674  003B46  9096               	bcf	3990,0,c	;volatile
 19675                           
 19676                           ;mdm_wifi_drv.c: 95: LATEbits.LATE0 = ((UINT8)(0));
 19677  003B48  908D               	bcf	3981,0,c	;volatile
 19678                           
 19679                           ; BSR set to: 1
 19680                           ;mdm_wifi_drv.c: 97: GenerateEvt(&StartWifiModem);
 19681  003B4A  0E5B               	movlw	low _StartWifiModem
 19682  003B4C  0100               	movlb	0	; () banked
 19683  003B4E  6F60               	movwf	GenerateEvt@Event& (0+255),b
 19684  003B50  0E00               	movlw	high _StartWifiModem
 19685  003B52  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 19686  003B54  ECD5  F026         	call	_GenerateEvt	;wreg free
 19687                           
 19688                           ;mdm_wifi_drv.c: 99: WifiModeSmState = WifiMdm_Idle;
 19689  003B58  0E01               	movlw	1
 19690  003B5A  0101               	movlb	1	; () banked
 19691  003B5C  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19692                           
 19693                           ;mdm_wifi_drv.c: 100: break;
 19694  003B5E  0012               	return	
 19695  003B60                     
 19696                           ; BSR set to: 1
 19697                           ;mdm_wifi_drv.c: 104: if (ReceiveEvt(&StartWifiModem))
 19698                           
 19699                           ; BSR set to: 1
 19700  003B60  0E5B               	movlw	low _StartWifiModem
 19701  003B62  0100               	movlb	0	; () banked
 19702  003B64  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19703  003B66  0E00               	movlw	high _StartWifiModem
 19704  003B68  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19705  003B6A  EC38  F025         	call	_ReceiveEvt	;wreg free
 19706  003B6E  0900               	iorlw	0
 19707  003B70  B4D8               	btfsc	status,2,c
 19708  003B72  0012               	return	
 19709                           
 19710                           ;mdm_wifi_drv.c: 105: {
 19711                           ;mdm_wifi_drv.c: 107: LATEbits.LATE0 = ((UINT8)(0));
 19712  003B74  908D               	bcf	3981,0,c	;volatile
 19713                           
 19714                           ;mdm_wifi_drv.c: 109: WifiMdmStatus = ((UINT8)(1));
 19715  003B76  0E01               	movlw	1
 19716  003B78  0101               	movlb	1	; () banked
 19717  003B7A  6F6E               	movwf	_WifiMdmStatus& (0+255),b
 19718                           
 19719                           ;mdm_wifi_drv.c: 111: WifiModeSmState = WifiMdm_Delay;
 19720  003B7C  0E03               	movlw	3
 19721  003B7E  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19722                           
 19723                           ; BSR set to: 1
 19724                           ;mdm_wifi_drv.c: 112: }
 19725                           ;mdm_wifi_drv.c: 113: break;
 19726  003B80  0012               	return	
 19727  003B82                     
 19728                           ; BSR set to: 1
 19729                           ;mdm_wifi_drv.c: 117: Counter++;
 19730                           
 19731                           ; BSR set to: 1
 19732  003B82  4B46               	infsnz	MdmWifi_StartWifiModemSm@Counter& (0+255),f,b
 19733  003B84  2B47               	incf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),f,b
 19734                           
 19735                           ; BSR set to: 1
 19736                           ;mdm_wifi_drv.c: 119: if (Counter >= (((UINT16)(200))/((UINT16)(10))))
 19737  003B86  5147               	movf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),w,b
 19738  003B88  E104               	bnz	u6960
 19739  003B8A  0E14               	movlw	20
 19740  003B8C  5D46               	subwf	MdmWifi_StartWifiModemSm@Counter& (0+255),w,b
 19741  003B8E  A0D8               	btfss	status,0,c
 19742  003B90  0012               	return	
 19743  003B92                     u6960:
 19744                           
 19745                           ; BSR set to: 1
 19746                           ;mdm_wifi_drv.c: 120: {
 19747                           ;mdm_wifi_drv.c: 122: Counter = 0;
 19748  003B92  0E00               	movlw	0
 19749  003B94  6F47               	movwf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),b
 19750  003B96  0E00               	movlw	0
 19751  003B98  6F46               	movwf	MdmWifi_StartWifiModemSm@Counter& (0+255),b
 19752                           
 19753                           ;mdm_wifi_drv.c: 124: WifiModeSmState = WifiMdm_RestartMdm;
 19754  003B9A  0E04               	movlw	4
 19755  003B9C  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19756                           
 19757                           ; BSR set to: 1
 19758                           ;mdm_wifi_drv.c: 125: }
 19759                           ;mdm_wifi_drv.c: 126: break;
 19760  003B9E  0012               	return	
 19761  003BA0                     l654:
 19762                           
 19763                           ; BSR set to: 1
 19764                           ;mdm_wifi_drv.c: 130: LATEbits.LATE0 = ((UINT8)(1));
 19765  003BA0  808D               	bsf	3981,0,c	;volatile
 19766                           
 19767                           ; BSR set to: 1
 19768                           ;mdm_wifi_drv.c: 132: WifiMdmStatus = ((UINT8)(2));
 19769  003BA2  0E02               	movlw	2
 19770  003BA4  6F6E               	movwf	_WifiMdmStatus& (0+255),b
 19771                           
 19772                           ;mdm_wifi_drv.c: 134: WifiModeSmState = WifiMdm_Idle;
 19773  003BA6  0E01               	movlw	1
 19774  003BA8  6F6D               	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19775                           
 19776                           ; BSR set to: 1
 19777                           ;mdm_wifi_drv.c: 139: }
 19778                           
 19779                           ; BSR set to: 1
 19780                           ;mdm_wifi_drv.c: 138: break;
 19781                           
 19782                           ;mdm_wifi_drv.c: 137: default:
 19783                           
 19784                           ;mdm_wifi_drv.c: 135: break;
 19785  003BAA  0012               	return	
 19786  003BAC                     l647:
 19787                           
 19788                           ; BSR set to: 1
 19789  003BAC  0101               	movlb	1	; () banked
 19790  003BAE  516D               	movf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),w,b
 19791                           
 19792                           ; Switch size 1, requested type "space"
 19793                           ; Number of cases is 4, Range of values is 0 to 4
 19794                           ; switch strategies available:
 19795                           ; Name         Instructions Cycles
 19796                           ; simple_byte           13     7 (average)
 19797                           ;	Chosen strategy is simple_byte
 19798  003BB0  0A00               	xorlw	0	; case 0
 19799  003BB2  B4D8               	btfsc	status,2,c
 19800  003BB4  D7C8               	goto	l648
 19801  003BB6  0A01               	xorlw	1	; case 1
 19802  003BB8  B4D8               	btfsc	status,2,c
 19803  003BBA  D7D2               	goto	l650
 19804  003BBC  0A02               	xorlw	2	; case 3
 19805  003BBE  B4D8               	btfsc	status,2,c
 19806  003BC0  D7E0               	goto	l652
 19807  003BC2  0A07               	xorlw	7	; case 4
 19808  003BC4  A4D8               	btfss	status,2,c
 19809  003BC6  0012               	return	
 19810  003BC8  D7EB               	goto	l654
 19811  003BCA                     __end_of_MdmWifi_StartWifiModemSm:
 19812                           	opt stack 0
 19813                           tosu	equ	0xFFF
 19814                           tosh	equ	0xFFE
 19815                           tosl	equ	0xFFD
 19816                           pclath	equ	0xFFA
 19817                           tblptru	equ	0xFF8
 19818                           tblptrh	equ	0xFF7
 19819                           tblptrl	equ	0xFF6
 19820                           tablat	equ	0xFF5
 19821                           prodh	equ	0xFF4
 19822                           prodl	equ	0xFF3
 19823                           intcon	equ	0xFF2
 19824                           intcon2	equ	0xFF1
 19825                           intcon3	equ	0xFF0
 19826                           indf0	equ	0xFEF
 19827                           postinc0	equ	0xFEE
 19828                           plusw0	equ	0xFEB
 19829                           fsr0h	equ	0xFEA
 19830                           fsr0l	equ	0xFE9
 19831                           wreg	equ	0xFE8
 19832                           indf1	equ	0xFE7
 19833                           postinc1	equ	0xFE6
 19834                           postdec1	equ	0xFE5
 19835                           fsr1h	equ	0xFE2
 19836                           fsr1l	equ	0xFE1
 19837                           indf2	equ	0xFDF
 19838                           postinc2	equ	0xFDE
 19839                           postdec2	equ	0xFDD
 19840                           plusw2	equ	0xFDB
 19841                           fsr2h	equ	0xFDA
 19842                           fsr2l	equ	0xFD9
 19843                           status	equ	0xFD8
 19844                           
 19845 ;; *************** function _StartConnectionSm *****************
 19846 ;; Defined at:
 19847 ;;		line 104 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 19848 ;; Parameters:    Size  Location     Type
 19849 ;;		None
 19850 ;; Auto vars:     Size  Location     Type
 19851 ;;  Data          100   19[BANK0 ] unsigned char [100]
 19852 ;;  PortAscii       4  119[BANK0 ] unsigned char [4]
 19853 ;;  IdAscii         1  124[BANK0 ] unsigned char [1]
 19854 ;;  DataIndex       1  123[BANK0 ] unsigned char 
 19855 ;; Return value:  Size  Location     Type
 19856 ;;                  1    wreg      void 
 19857 ;; Registers used:
 19858 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19859 ;; Tracked objects:
 19860 ;;		On entry : 0/0
 19861 ;;		On exit  : 0/0
 19862 ;;		Unchanged: 0/0
 19863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19865 ;;      Locals:         0     106       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19867 ;;      Totals:         0     106       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19868 ;;Total ram usage:      106 bytes
 19869 ;; Hardware stack levels used:    1
 19870 ;; Hardware stack levels required when called:   14
 19871 ;; This function calls:
 19872 ;;		_ClearBuffer
 19873 ;;		_MdmWifi_ReceiveWifiMsg
 19874 ;;		_MdmWifi_SendWifiMsg
 19875 ;;		_ReceiveEvt
 19876 ;;		_strcat
 19877 ;;		_strcpy
 19878 ;;		_strstr
 19879 ;;		_utoa
 19880 ;; This function is called by:
 19881 ;;		_MdmWifiCmd_MainTask
 19882 ;; This function uses a non-reentrant model
 19883 ;;
 19884                           
 19885                           	psect	text90
 19886  000BCA                     __ptext90:
 19887                           	opt stack 0
 19888  000BCA                     _StartConnectionSm:
 19889                           	opt stack 13
 19890                           
 19891                           ;mdm_wifi_cmd.c: 106: static StartConnStateType StartConnState = StCon_WaitEvt;
 19892                           ;mdm_wifi_cmd.c: 107: UINT8 Data[((UINT8)(100))];
 19893                           ;mdm_wifi_cmd.c: 108: UINT8 DataIndex;
 19894                           ;mdm_wifi_cmd.c: 109: UINT8 PortAscii[4];
 19895                           ;mdm_wifi_cmd.c: 110: UINT8 IdAscii[1];
 19896                           ;mdm_wifi_cmd.c: 112: switch (StartConnState)
 19897                           
 19898                           ;incstack = 0
 19899  000BCA  D15E               	goto	l974
 19900  000BCC                     
 19901                           ;mdm_wifi_cmd.c: 116: if (ReceiveEvt(&StartConnection))
 19902  000BCC  0E57               	movlw	low _StartConnection
 19903  000BCE  0100               	movlb	0	; () banked
 19904  000BD0  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 19905  000BD2  0E00               	movlw	high _StartConnection
 19906  000BD4  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19907  000BD6  EC38  F025         	call	_ReceiveEvt	;wreg free
 19908  000BDA  0900               	iorlw	0
 19909  000BDC  B4D8               	btfsc	status,2,c
 19910  000BDE  0012               	return	
 19911                           
 19912                           ;mdm_wifi_cmd.c: 117: {
 19913                           ;mdm_wifi_cmd.c: 118: StartConnState = StCon_SendStartCmd;
 19914  000BE0  0E01               	movlw	1
 19915  000BE2  0101               	movlb	1	; () banked
 19916  000BE4  6F67               	movwf	StartConnectionSm@StartConnState& (0+255),b
 19917                           
 19918                           ; BSR set to: 1
 19919                           ;mdm_wifi_cmd.c: 119: }
 19920                           ;mdm_wifi_cmd.c: 120: break;
 19921  000BE6  0012               	return	
 19922  000BE8                     
 19923                           ; BSR set to: 1
 19924                           ;mdm_wifi_cmd.c: 124: strcpy(Data,"AT+CIPSTART=");
 19925                           
 19926                           ; BSR set to: 1
 19927  000BE8  0E73               	movlw	low StartConnectionSm@Data
 19928  000BEA  0100               	movlb	0	; () banked
 19929  000BEC  6F60               	movwf	strcpy@to& (0+255),b
 19930  000BEE  0E00               	movlw	high StartConnectionSm@Data
 19931  000BF0  6F61               	movwf	(strcpy@to+1)& (0+255),b
 19932  000BF2  0E4E               	movlw	low STR_3
 19933  000BF4  6F62               	movwf	strcpy@from& (0+255),b
 19934  000BF6  0EFF               	movlw	high STR_3
 19935  000BF8  6F63               	movwf	(strcpy@from+1)& (0+255),b
 19936  000BFA  ECB3  F022         	call	_strcpy	;wreg free
 19937                           
 19938                           ;mdm_wifi_cmd.c: 126: if (ModeLocal == ((UINT8)(1)))
 19939  000BFE  0451               	decf	_ModeLocal,w,c
 19940  000C00  A4D8               	btfss	status,2,c
 19941  000C02  D02E               	goto	l979
 19942                           
 19943                           ;mdm_wifi_cmd.c: 127: {
 19944                           ;mdm_wifi_cmd.c: 128: utoa(IdAscii,IdLocal,10);
 19945  000C04  0EDC               	movlw	low StartConnectionSm@IdAscii
 19946  000C06  0100               	movlb	0	; () banked
 19947  000C08  6F67               	movwf	utoa@buf& (0+255),b
 19948  000C0A  0E00               	movlw	high StartConnectionSm@IdAscii
 19949  000C0C  6F68               	movwf	(utoa@buf+1)& (0+255),b
 19950  000C0E  C050  F069         	movff	_IdLocal,utoa@val
 19951  000C12  6B6A               	clrf	(utoa@val+1)& (0+255),b
 19952  000C14  0E00               	movlw	0
 19953  000C16  6F6C               	movwf	(utoa@base+1)& (0+255),b
 19954  000C18  0E0A               	movlw	10
 19955  000C1A  6F6B               	movwf	utoa@base& (0+255),b
 19956  000C1C  EC8E  F019         	call	_utoa	;wreg free
 19957                           
 19958                           ;mdm_wifi_cmd.c: 129: strcat(Data,IdAscii);
 19959  000C20  0E73               	movlw	low StartConnectionSm@Data
 19960  000C22  0100               	movlb	0	; () banked
 19961  000C24  6F60               	movwf	strcat@to& (0+255),b
 19962  000C26  0E00               	movlw	high StartConnectionSm@Data
 19963  000C28  6F61               	movwf	(strcat@to+1)& (0+255),b
 19964  000C2A  0EDC               	movlw	low StartConnectionSm@IdAscii
 19965  000C2C  6F62               	movwf	strcat@from& (0+255),b
 19966  000C2E  0E00               	movlw	high StartConnectionSm@IdAscii
 19967  000C30  6F63               	movwf	(strcat@from+1)& (0+255),b
 19968  000C32  5162               	movf	strcat@from& (0+255),w,b
 19969  000C34  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 19970  000C36  A4D8               	btfss	status,2,c
 19971  000C38  0E20               	movlw	32
 19972  000C3A  6F64               	movwf	(strcat@from+2)& (0+255),b
 19973  000C3C  ECE3  F01F         	call	_strcat	;wreg free
 19974                           
 19975                           ;mdm_wifi_cmd.c: 130: strcat(Data,",");
 19976  000C40  0E73               	movlw	low StartConnectionSm@Data
 19977  000C42  0100               	movlb	0	; () banked
 19978  000C44  6F60               	movwf	strcat@to& (0+255),b
 19979  000C46  0E00               	movlw	high StartConnectionSm@Data
 19980  000C48  6F61               	movwf	(strcat@to+1)& (0+255),b
 19981  000C4A  0EE7               	movlw	low (STR_46+1)
 19982  000C4C  6F62               	movwf	strcat@from& (0+255),b
 19983  000C4E  0EFF               	movlw	high (STR_46+1)
 19984  000C50  6F63               	movwf	(strcat@from+1)& (0+255),b
 19985  000C52  5162               	movf	strcat@from& (0+255),w,b
 19986  000C54  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 19987  000C56  A4D8               	btfss	status,2,c
 19988  000C58  0E00               	movlw	low (__mediumconst shr (0+16))
 19989  000C5A  6F64               	movwf	(strcat@from+2)& (0+255),b
 19990  000C5C  ECE3  F01F         	call	_strcat	;wreg free
 19991  000C60                     l979:
 19992                           
 19993                           ;mdm_wifi_cmd.c: 131: }
 19994                           ;mdm_wifi_cmd.c: 132: strcat(Data,"\"");
 19995  000C60  0E73               	movlw	low StartConnectionSm@Data
 19996  000C62  0100               	movlb	0	; () banked
 19997  000C64  6F60               	movwf	strcat@to& (0+255),b
 19998  000C66  0E00               	movlw	high StartConnectionSm@Data
 19999  000C68  6F61               	movwf	(strcat@to+1)& (0+255),b
 20000  000C6A  0EDC               	movlw	low (STR_28+2)
 20001  000C6C  6F62               	movwf	strcat@from& (0+255),b
 20002  000C6E  0EFF               	movlw	high (STR_28+2)
 20003  000C70  6F63               	movwf	(strcat@from+1)& (0+255),b
 20004  000C72  5162               	movf	strcat@from& (0+255),w,b
 20005  000C74  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20006  000C76  A4D8               	btfss	status,2,c
 20007  000C78  0E00               	movlw	low (__mediumconst shr (0+16))
 20008  000C7A  6F64               	movwf	(strcat@from+2)& (0+255),b
 20009  000C7C  ECE3  F01F         	call	_strcat	;wreg free
 20010                           
 20011                           ;mdm_wifi_cmd.c: 134: if (ProtocolLocal == ((UINT8)(0)))
 20012  000C80  0101               	movlb	1	; () banked
 20013  000C82  516A               	movf	_ProtocolLocal& (0+255),w,b
 20014  000C84  A4D8               	btfss	status,2,c
 20015  000C86  D011               	goto	l980
 20016                           
 20017                           ; BSR set to: 1
 20018                           ;mdm_wifi_cmd.c: 135: {
 20019                           ;mdm_wifi_cmd.c: 136: strcat(Data,"UDP");
 20020  000C88  0E73               	movlw	low StartConnectionSm@Data
 20021  000C8A  0100               	movlb	0	; () banked
 20022  000C8C  6F60               	movwf	strcat@to& (0+255),b
 20023  000C8E  0E00               	movlw	high StartConnectionSm@Data
 20024  000C90  6F61               	movwf	(strcat@to+1)& (0+255),b
 20025  000C92  0EE2               	movlw	low STR_6
 20026  000C94  6F62               	movwf	strcat@from& (0+255),b
 20027  000C96  0EFF               	movlw	high STR_6
 20028  000C98  6F63               	movwf	(strcat@from+1)& (0+255),b
 20029  000C9A  5162               	movf	strcat@from& (0+255),w,b
 20030  000C9C  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20031  000C9E  A4D8               	btfss	status,2,c
 20032  000CA0  0E00               	movlw	low (__mediumconst shr (0+16))
 20033  000CA2  6F64               	movwf	(strcat@from+2)& (0+255),b
 20034  000CA4  ECE3  F01F         	call	_strcat	;wreg free
 20035                           
 20036                           ;mdm_wifi_cmd.c: 137: }
 20037  000CA8  D010               	goto	l981
 20038  000CAA                     l980:
 20039                           
 20040                           ;mdm_wifi_cmd.c: 138: else
 20041                           ;mdm_wifi_cmd.c: 139: {
 20042                           ;mdm_wifi_cmd.c: 140: strcat(Data,"TCP");
 20043  000CAA  0E73               	movlw	low StartConnectionSm@Data
 20044  000CAC  0100               	movlb	0	; () banked
 20045  000CAE  6F60               	movwf	strcat@to& (0+255),b
 20046  000CB0  0E00               	movlw	high StartConnectionSm@Data
 20047  000CB2  6F61               	movwf	(strcat@to+1)& (0+255),b
 20048  000CB4  0EDE               	movlw	low STR_7
 20049  000CB6  6F62               	movwf	strcat@from& (0+255),b
 20050  000CB8  0EFF               	movlw	high STR_7
 20051  000CBA  6F63               	movwf	(strcat@from+1)& (0+255),b
 20052  000CBC  5162               	movf	strcat@from& (0+255),w,b
 20053  000CBE  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20054  000CC0  A4D8               	btfss	status,2,c
 20055  000CC2  0E00               	movlw	low (__mediumconst shr (0+16))
 20056  000CC4  6F64               	movwf	(strcat@from+2)& (0+255),b
 20057  000CC6  ECE3  F01F         	call	_strcat	;wreg free
 20058  000CCA                     l981:
 20059                           
 20060                           ;mdm_wifi_cmd.c: 141: }
 20061                           ;mdm_wifi_cmd.c: 142: strcat(Data,"\"");
 20062  000CCA  0E73               	movlw	low StartConnectionSm@Data
 20063  000CCC  0100               	movlb	0	; () banked
 20064  000CCE  6F60               	movwf	strcat@to& (0+255),b
 20065  000CD0  0E00               	movlw	high StartConnectionSm@Data
 20066  000CD2  6F61               	movwf	(strcat@to+1)& (0+255),b
 20067  000CD4  0EDC               	movlw	low (STR_28+2)
 20068  000CD6  6F62               	movwf	strcat@from& (0+255),b
 20069  000CD8  0EFF               	movlw	high (STR_28+2)
 20070  000CDA  6F63               	movwf	(strcat@from+1)& (0+255),b
 20071  000CDC  5162               	movf	strcat@from& (0+255),w,b
 20072  000CDE  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20073  000CE0  A4D8               	btfss	status,2,c
 20074  000CE2  0E00               	movlw	low (__mediumconst shr (0+16))
 20075  000CE4  6F64               	movwf	(strcat@from+2)& (0+255),b
 20076  000CE6  ECE3  F01F         	call	_strcat	;wreg free
 20077                           
 20078                           ;mdm_wifi_cmd.c: 143: strcat(Data,",");
 20079  000CEA  0E73               	movlw	low StartConnectionSm@Data
 20080  000CEC  0100               	movlb	0	; () banked
 20081  000CEE  6F60               	movwf	strcat@to& (0+255),b
 20082  000CF0  0E00               	movlw	high StartConnectionSm@Data
 20083  000CF2  6F61               	movwf	(strcat@to+1)& (0+255),b
 20084  000CF4  0EE7               	movlw	low (STR_46+1)
 20085  000CF6  6F62               	movwf	strcat@from& (0+255),b
 20086  000CF8  0EFF               	movlw	high (STR_46+1)
 20087  000CFA  6F63               	movwf	(strcat@from+1)& (0+255),b
 20088  000CFC  5162               	movf	strcat@from& (0+255),w,b
 20089  000CFE  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20090  000D00  A4D8               	btfss	status,2,c
 20091  000D02  0E00               	movlw	low (__mediumconst shr (0+16))
 20092  000D04  6F64               	movwf	(strcat@from+2)& (0+255),b
 20093  000D06  ECE3  F01F         	call	_strcat	;wreg free
 20094                           
 20095                           ;mdm_wifi_cmd.c: 144: strcat(Data,"\"");
 20096  000D0A  0E73               	movlw	low StartConnectionSm@Data
 20097  000D0C  0100               	movlb	0	; () banked
 20098  000D0E  6F60               	movwf	strcat@to& (0+255),b
 20099  000D10  0E00               	movlw	high StartConnectionSm@Data
 20100  000D12  6F61               	movwf	(strcat@to+1)& (0+255),b
 20101  000D14  0EDC               	movlw	low (STR_28+2)
 20102  000D16  6F62               	movwf	strcat@from& (0+255),b
 20103  000D18  0EFF               	movlw	high (STR_28+2)
 20104  000D1A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20105  000D1C  5162               	movf	strcat@from& (0+255),w,b
 20106  000D1E  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20107  000D20  A4D8               	btfss	status,2,c
 20108  000D22  0E00               	movlw	low (__mediumconst shr (0+16))
 20109  000D24  6F64               	movwf	(strcat@from+2)& (0+255),b
 20110  000D26  ECE3  F01F         	call	_strcat	;wreg free
 20111                           
 20112                           ;mdm_wifi_cmd.c: 145: strcat(Data,AddressLocal);
 20113  000D2A  0E73               	movlw	low StartConnectionSm@Data
 20114  000D2C  0100               	movlb	0	; () banked
 20115  000D2E  6F60               	movwf	strcat@to& (0+255),b
 20116  000D30  0E00               	movlw	high StartConnectionSm@Data
 20117  000D32  6F61               	movwf	(strcat@to+1)& (0+255),b
 20118  000D34  0E72               	movlw	low _AddressLocal
 20119  000D36  6F62               	movwf	strcat@from& (0+255),b
 20120  000D38  0E02               	movlw	high _AddressLocal
 20121  000D3A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20122  000D3C  5162               	movf	strcat@from& (0+255),w,b
 20123  000D3E  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20124  000D40  A4D8               	btfss	status,2,c
 20125  000D42  0E20               	movlw	32
 20126  000D44  6F64               	movwf	(strcat@from+2)& (0+255),b
 20127  000D46  ECE3  F01F         	call	_strcat	;wreg free
 20128                           
 20129                           ;mdm_wifi_cmd.c: 146: strcat(Data,"\"");
 20130  000D4A  0E73               	movlw	low StartConnectionSm@Data
 20131  000D4C  0100               	movlb	0	; () banked
 20132  000D4E  6F60               	movwf	strcat@to& (0+255),b
 20133  000D50  0E00               	movlw	high StartConnectionSm@Data
 20134  000D52  6F61               	movwf	(strcat@to+1)& (0+255),b
 20135  000D54  0EDC               	movlw	low (STR_28+2)
 20136  000D56  6F62               	movwf	strcat@from& (0+255),b
 20137  000D58  0EFF               	movlw	high (STR_28+2)
 20138  000D5A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20139  000D5C  5162               	movf	strcat@from& (0+255),w,b
 20140  000D5E  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20141  000D60  A4D8               	btfss	status,2,c
 20142  000D62  0E00               	movlw	low (__mediumconst shr (0+16))
 20143  000D64  6F64               	movwf	(strcat@from+2)& (0+255),b
 20144  000D66  ECE3  F01F         	call	_strcat	;wreg free
 20145                           
 20146                           ;mdm_wifi_cmd.c: 148: utoa(PortAscii,PortLocal,10);
 20147  000D6A  0ED7               	movlw	low StartConnectionSm@PortAscii
 20148  000D6C  0100               	movlb	0	; () banked
 20149  000D6E  6F67               	movwf	utoa@buf& (0+255),b
 20150  000D70  0E00               	movlw	high StartConnectionSm@PortAscii
 20151  000D72  6F68               	movwf	(utoa@buf+1)& (0+255),b
 20152  000D74  C169  F069         	movff	_PortLocal,utoa@val
 20153  000D78  6B6A               	clrf	(utoa@val+1)& (0+255),b
 20154  000D7A  0E00               	movlw	0
 20155  000D7C  6F6C               	movwf	(utoa@base+1)& (0+255),b
 20156  000D7E  0E0A               	movlw	10
 20157  000D80  6F6B               	movwf	utoa@base& (0+255),b
 20158  000D82  EC8E  F019         	call	_utoa	;wreg free
 20159                           
 20160                           ;mdm_wifi_cmd.c: 149: strcat(Data,",");
 20161  000D86  0E73               	movlw	low StartConnectionSm@Data
 20162  000D88  0100               	movlb	0	; () banked
 20163  000D8A  6F60               	movwf	strcat@to& (0+255),b
 20164  000D8C  0E00               	movlw	high StartConnectionSm@Data
 20165  000D8E  6F61               	movwf	(strcat@to+1)& (0+255),b
 20166  000D90  0EE7               	movlw	low (STR_46+1)
 20167  000D92  6F62               	movwf	strcat@from& (0+255),b
 20168  000D94  0EFF               	movlw	high (STR_46+1)
 20169  000D96  6F63               	movwf	(strcat@from+1)& (0+255),b
 20170  000D98  5162               	movf	strcat@from& (0+255),w,b
 20171  000D9A  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20172  000D9C  A4D8               	btfss	status,2,c
 20173  000D9E  0E00               	movlw	low (__mediumconst shr (0+16))
 20174  000DA0  6F64               	movwf	(strcat@from+2)& (0+255),b
 20175  000DA2  ECE3  F01F         	call	_strcat	;wreg free
 20176                           
 20177                           ;mdm_wifi_cmd.c: 150: strcat(Data,PortAscii);
 20178  000DA6  0E73               	movlw	low StartConnectionSm@Data
 20179  000DA8  0100               	movlb	0	; () banked
 20180  000DAA  6F60               	movwf	strcat@to& (0+255),b
 20181  000DAC  0E00               	movlw	high StartConnectionSm@Data
 20182  000DAE  6F61               	movwf	(strcat@to+1)& (0+255),b
 20183  000DB0  0ED7               	movlw	low StartConnectionSm@PortAscii
 20184  000DB2  6F62               	movwf	strcat@from& (0+255),b
 20185  000DB4  0E00               	movlw	high StartConnectionSm@PortAscii
 20186  000DB6  6F63               	movwf	(strcat@from+1)& (0+255),b
 20187  000DB8  5162               	movf	strcat@from& (0+255),w,b
 20188  000DBA  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20189  000DBC  A4D8               	btfss	status,2,c
 20190  000DBE  0E20               	movlw	32
 20191  000DC0  6F64               	movwf	(strcat@from+2)& (0+255),b
 20192  000DC2  ECE3  F01F         	call	_strcat	;wreg free
 20193                           
 20194                           ;mdm_wifi_cmd.c: 152: strcat(Data,"\r\n");
 20195  000DC6  0E73               	movlw	low StartConnectionSm@Data
 20196  000DC8  0100               	movlb	0	; () banked
 20197  000DCA  6F60               	movwf	strcat@to& (0+255),b
 20198  000DCC  0E00               	movlw	high StartConnectionSm@Data
 20199  000DCE  6F61               	movwf	(strcat@to+1)& (0+255),b
 20200  000DD0  0E87               	movlw	low (STR_31+8)
 20201  000DD2  6F62               	movwf	strcat@from& (0+255),b
 20202  000DD4  0EFF               	movlw	high (STR_31+8)
 20203  000DD6  6F63               	movwf	(strcat@from+1)& (0+255),b
 20204  000DD8  5162               	movf	strcat@from& (0+255),w,b
 20205  000DDA  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20206  000DDC  A4D8               	btfss	status,2,c
 20207  000DDE  0E00               	movlw	low (__mediumconst shr (0+16))
 20208  000DE0  6F64               	movwf	(strcat@from+2)& (0+255),b
 20209  000DE2  ECE3  F01F         	call	_strcat	;wreg free
 20210                           
 20211                           ;mdm_wifi_cmd.c: 153: strcat(Data,(0));
 20212  000DE6  0E73               	movlw	low StartConnectionSm@Data
 20213  000DE8  0100               	movlb	0	; () banked
 20214  000DEA  6F60               	movwf	strcat@to& (0+255),b
 20215  000DEC  0E00               	movlw	high StartConnectionSm@Data
 20216  000DEE  6F61               	movwf	(strcat@to+1)& (0+255),b
 20217  000DF0  0E00               	movlw	0
 20218  000DF2  6F62               	movwf	strcat@from& (0+255),b
 20219  000DF4  0E00               	movlw	0
 20220  000DF6  6F63               	movwf	(strcat@from+1)& (0+255),b
 20221  000DF8  0E00               	movlw	0
 20222  000DFA  6F64               	movwf	(strcat@from+2)& (0+255),b
 20223  000DFC  ECE3  F01F         	call	_strcat	;wreg free
 20224                           
 20225                           ;mdm_wifi_cmd.c: 155: MdmWifi_SendWifiMsg(Data);
 20226  000E00  0E73               	movlw	low StartConnectionSm@Data
 20227  000E02  0100               	movlb	0	; () banked
 20228  000E04  6F66               	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20229  000E06  0E00               	movlw	high StartConnectionSm@Data
 20230  000E08  6F67               	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20231  000E0A  EC38  F027         	call	_MdmWifi_SendWifiMsg	;wreg free
 20232                           
 20233                           ;mdm_wifi_cmd.c: 158: ClearBuffer(AddressLocal,sizeof(AddressLocal));
 20234  000E0E  0E72               	movlw	low _AddressLocal
 20235  000E10  0100               	movlb	0	; () banked
 20236  000E12  6F60               	movwf	ClearBuffer@Buffer& (0+255),b
 20237  000E14  0E02               	movlw	high _AddressLocal
 20238  000E16  6F61               	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 20239  000E18  0E00               	movlw	0
 20240  000E1A  6F63               	movwf	(ClearBuffer@Len+1)& (0+255),b
 20241  000E1C  0E19               	movlw	25
 20242  000E1E  6F62               	movwf	ClearBuffer@Len& (0+255),b
 20243  000E20  EC72  F024         	call	_ClearBuffer	;wreg free
 20244                           
 20245                           ;mdm_wifi_cmd.c: 161: StartConnState = StCon_CheckCmdRes;
 20246  000E24  0E02               	movlw	2
 20247  000E26  0101               	movlb	1	; () banked
 20248  000E28  6F67               	movwf	StartConnectionSm@StartConnState& (0+255),b
 20249                           
 20250                           ;mdm_wifi_cmd.c: 162: break;
 20251  000E2A  0012               	return	
 20252  000E2C                     
 20253                           ; BSR set to: 1
 20254                           ;mdm_wifi_cmd.c: 166: if (MdmWifi_ReceiveWifiMsg(Data,&DataIndex) == WifiMsg_Received)
 20255                           
 20256                           ; BSR set to: 1
 20257  000E2C  0E73               	movlw	low StartConnectionSm@Data
 20258  000E2E  0100               	movlb	0	; () banked
 20259  000E30  6F68               	movwf	MdmWifi_ReceiveWifiMsg@RxBuffer& (0+255),b
 20260  000E32  0E00               	movlw	high StartConnectionSm@Data
 20261  000E34  6F69               	movwf	(MdmWifi_ReceiveWifiMsg@RxBuffer+1)& (0+255),b
 20262  000E36  0EDB               	movlw	low StartConnectionSm@DataIndex
 20263  000E38  6F6A               	movwf	MdmWifi_ReceiveWifiMsg@DataLenght& (0+255),b
 20264  000E3A  0E00               	movlw	high StartConnectionSm@DataIndex
 20265  000E3C  6F6B               	movwf	(MdmWifi_ReceiveWifiMsg@DataLenght+1)& (0+255),b
 20266  000E3E  EC45  F022         	call	_MdmWifi_ReceiveWifiMsg	;wreg free
 20267  000E42  06E8               	decf	wreg,f,c
 20268  000E44  A4D8               	btfss	status,2,c
 20269  000E46  0012               	return	
 20270                           
 20271                           ;mdm_wifi_cmd.c: 167: {
 20272                           ;mdm_wifi_cmd.c: 169: if ((Data[0] != 'A') && (Data[1] != 'T'))
 20273  000E48  0E41               	movlw	65
 20274  000E4A  0100               	movlb	0	; () banked
 20275  000E4C  1973               	xorwf	StartConnectionSm@Data& (0+255),w,b
 20276  000E4E  B4D8               	btfsc	status,2,c
 20277  000E50  0012               	return	
 20278                           
 20279                           ; BSR set to: 0
 20280  000E52  0E54               	movlw	84
 20281  000E54  1974               	xorwf	(StartConnectionSm@Data+1)& (0+255),w,b
 20282  000E56  B4D8               	btfsc	status,2,c
 20283  000E58  0012               	return	
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;mdm_wifi_cmd.c: 170: {
 20287                           ;mdm_wifi_cmd.c: 172: if (strstr(Data,(void*)"CONNECT") != (0))
 20288  000E5A  0E73               	movlw	low StartConnectionSm@Data
 20289  000E5C  6F6F               	movwf	strstr@s1& (0+255),b
 20290  000E5E  0E00               	movlw	high StartConnectionSm@Data
 20291  000E60  6F70               	movwf	(strstr@s1+1)& (0+255),b
 20292  000E62  0EC7               	movlw	low STR_14
 20293  000E64  6F71               	movwf	strstr@s2& (0+255),b
 20294  000E66  0EFF               	movlw	high STR_14
 20295  000E68  6F72               	movwf	(strstr@s2+1)& (0+255),b
 20296  000E6A  EC1A  F01D         	call	_strstr	;wreg free
 20297  000E6E  0100               	movlb	0	; () banked
 20298  000E70  516F               	movf	?_strstr& (0+255),w,b
 20299  000E72  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 20300  000E74  B4D8               	btfsc	status,2,c
 20301  000E76  D002               	goto	l985
 20302                           
 20303                           ; BSR set to: 0
 20304                           ;mdm_wifi_cmd.c: 173: {
 20305                           ;mdm_wifi_cmd.c: 174: ConnStatus = ((UINT8)(1));
 20306  000E78  0E01               	movlw	1
 20307  000E7A  D001               	goto	L24
 20308  000E7C                     l985:
 20309                           
 20310                           ;mdm_wifi_cmd.c: 176: else
 20311                           ;mdm_wifi_cmd.c: 177: {
 20312                           ;mdm_wifi_cmd.c: 178: ConnStatus = ((UINT8)(0));
 20313                           
 20314                           ; BSR set to: 1
 20315  000E7C  0E00               	movlw	0
 20316  000E7E                     L24:
 20317  000E7E  0101               	movlb	1	; () banked
 20318  000E80  6F68               	movwf	_ConnStatus& (0+255),b
 20319                           
 20320                           ; BSR set to: 1
 20321                           ;mdm_wifi_cmd.c: 179: }
 20322                           ;mdm_wifi_cmd.c: 182: StartConnState = StCon_WaitEvt;
 20323  000E82  0E00               	movlw	0
 20324  000E84  6F67               	movwf	StartConnectionSm@StartConnState& (0+255),b
 20325                           
 20326                           ; BSR set to: 1
 20327                           ;mdm_wifi_cmd.c: 189: }
 20328                           
 20329                           ; BSR set to: 1
 20330                           ;mdm_wifi_cmd.c: 188: break;
 20331                           
 20332                           ;mdm_wifi_cmd.c: 187: default:
 20333                           
 20334                           ; BSR set to: 1
 20335                           ;mdm_wifi_cmd.c: 183: }
 20336                           ;mdm_wifi_cmd.c: 184: }
 20337                           ;mdm_wifi_cmd.c: 185: break;
 20338                           
 20339                           ; BSR set to: 1
 20340  000E86  0012               	return	
 20341  000E88                     l974:
 20342                           
 20343                           ; BSR set to: 1
 20344  000E88  0101               	movlb	1	; () banked
 20345  000E8A  5167               	movf	StartConnectionSm@StartConnState& (0+255),w,b
 20346                           
 20347                           ; Switch size 1, requested type "space"
 20348                           ; Number of cases is 3, Range of values is 0 to 2
 20349                           ; switch strategies available:
 20350                           ; Name         Instructions Cycles
 20351                           ; simple_byte           10     6 (average)
 20352                           ;	Chosen strategy is simple_byte
 20353  000E8C  0A00               	xorlw	0	; case 0
 20354  000E8E  B4D8               	btfsc	status,2,c
 20355  000E90  D69D               	goto	l975
 20356  000E92  0A01               	xorlw	1	; case 1
 20357  000E94  B4D8               	btfsc	status,2,c
 20358  000E96  D6A8               	goto	l978
 20359  000E98  0A03               	xorlw	3	; case 2
 20360  000E9A  A4D8               	btfss	status,2,c
 20361  000E9C  0012               	return	
 20362  000E9E  D7C6               	goto	l982
 20363  000EA0                     __end_of_StartConnectionSm:
 20364                           	opt stack 0
 20365                           tosu	equ	0xFFF
 20366                           tosh	equ	0xFFE
 20367                           tosl	equ	0xFFD
 20368                           pclath	equ	0xFFA
 20369                           tblptru	equ	0xFF8
 20370                           tblptrh	equ	0xFF7
 20371                           tblptrl	equ	0xFF6
 20372                           tablat	equ	0xFF5
 20373                           prodh	equ	0xFF4
 20374                           prodl	equ	0xFF3
 20375                           intcon	equ	0xFF2
 20376                           intcon2	equ	0xFF1
 20377                           intcon3	equ	0xFF0
 20378                           indf0	equ	0xFEF
 20379                           postinc0	equ	0xFEE
 20380                           plusw0	equ	0xFEB
 20381                           fsr0h	equ	0xFEA
 20382                           fsr0l	equ	0xFE9
 20383                           wreg	equ	0xFE8
 20384                           indf1	equ	0xFE7
 20385                           postinc1	equ	0xFE6
 20386                           postdec1	equ	0xFE5
 20387                           fsr1h	equ	0xFE2
 20388                           fsr1l	equ	0xFE1
 20389                           indf2	equ	0xFDF
 20390                           postinc2	equ	0xFDE
 20391                           postdec2	equ	0xFDD
 20392                           plusw2	equ	0xFDB
 20393                           fsr2h	equ	0xFDA
 20394                           fsr2l	equ	0xFD9
 20395                           status	equ	0xFD8
 20396                           
 20397 ;; *************** function _ClearBuffer *****************
 20398 ;; Defined at:
 20399 ;;		line 124 in file "../Source/c/03_Sml/02_Ssl/sf.c"
 20400 ;; Parameters:    Size  Location     Type
 20401 ;;  Buffer          2    0[BANK0 ] PTR unsigned char 
 20402 ;;		 -> WifiTerminal@UartBuffer(200), AddressLocal(25), MdmWifi_UartRxBuffer(250), 
 20403 ;;  Len             2    2[BANK0 ] unsigned short 
 20404 ;; Auto vars:     Size  Location     Type
 20405 ;;  Index           2    4[BANK0 ] unsigned short 
 20406 ;; Return value:  Size  Location     Type
 20407 ;;                  1    wreg      void 
 20408 ;; Registers used:
 20409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20410 ;; Tracked objects:
 20411 ;;		On entry : 0/0
 20412 ;;		On exit  : 0/0
 20413 ;;		Unchanged: 0/0
 20414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20415 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20416 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20418 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20419 ;;Total ram usage:        6 bytes
 20420 ;; Hardware stack levels used:    1
 20421 ;; Hardware stack levels required when called:   11
 20422 ;; This function calls:
 20423 ;;		Nothing
 20424 ;; This function is called by:
 20425 ;;		_MdmWifiGetUartData
 20426 ;;		_StartConnectionSm
 20427 ;;		_WifiTerminal
 20428 ;; This function uses a non-reentrant model
 20429 ;;
 20430                           
 20431                           	psect	text91
 20432  0048E4                     __ptext91:
 20433                           	opt stack 0
 20434  0048E4                     _ClearBuffer:
 20435                           	opt stack 15
 20436                           
 20437                           ;sf.c: 126: UINT16 Index = 0;
 20438                           
 20439                           ;incstack = 0
 20440  0048E4  0E00               	movlw	0
 20441  0048E6  0100               	movlb	0	; () banked
 20442  0048E8  6F65               	movwf	(ClearBuffer@Index+1)& (0+255),b
 20443  0048EA  0E00               	movlw	0
 20444  0048EC  6F64               	movwf	ClearBuffer@Index& (0+255),b
 20445                           
 20446                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 20447  0048EE  0E00               	movlw	0
 20448  0048F0  6F65               	movwf	(ClearBuffer@Index+1)& (0+255),b
 20449  0048F2  0E00               	movlw	0
 20450  0048F4  6F64               	movwf	ClearBuffer@Index& (0+255),b
 20451  0048F6  D00A               	goto	l1921
 20452  0048F8                     
 20453                           ; BSR set to: 0
 20454                           ;sf.c: 130: {
 20455                           ;sf.c: 131: *(Buffer + Index) = 0;
 20456                           
 20457                           ; BSR set to: 0
 20458  0048F8  5164               	movf	ClearBuffer@Index& (0+255),w,b
 20459  0048FA  2560               	addwf	ClearBuffer@Buffer& (0+255),w,b
 20460  0048FC  6ED9               	movwf	fsr2l,c
 20461  0048FE  5165               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 20462  004900  2161               	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 20463  004902  6EDA               	movwf	fsr2h,c
 20464  004904  0E00               	movlw	0
 20465  004906  6EDF               	movwf	indf2,c
 20466                           
 20467                           ; BSR set to: 0
 20468  004908  4B64               	infsnz	ClearBuffer@Index& (0+255),f,b
 20469  00490A  2B65               	incf	(ClearBuffer@Index+1)& (0+255),f,b
 20470  00490C                     l1921:
 20471                           
 20472                           ; BSR set to: 0
 20473                           
 20474                           ; BSR set to: 0
 20475  00490C  5164               	movf	ClearBuffer@Index& (0+255),w,b
 20476  00490E  5D62               	subwf	ClearBuffer@Len& (0+255),w,b
 20477  004910  5165               	movf	(ClearBuffer@Index+1)& (0+255),w,b
 20478  004912  5963               	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 20479  004914  A0D8               	btfss	status,0,c
 20480  004916  0012               	return	
 20481  004918  D7EF               	goto	l1922
 20482  00491A                     __end_of_ClearBuffer:
 20483                           	opt stack 0
 20484                           tosu	equ	0xFFF
 20485                           tosh	equ	0xFFE
 20486                           tosl	equ	0xFFD
 20487                           pclath	equ	0xFFA
 20488                           tblptru	equ	0xFF8
 20489                           tblptrh	equ	0xFF7
 20490                           tblptrl	equ	0xFF6
 20491                           tablat	equ	0xFF5
 20492                           prodh	equ	0xFF4
 20493                           prodl	equ	0xFF3
 20494                           intcon	equ	0xFF2
 20495                           intcon2	equ	0xFF1
 20496                           intcon3	equ	0xFF0
 20497                           indf0	equ	0xFEF
 20498                           postinc0	equ	0xFEE
 20499                           plusw0	equ	0xFEB
 20500                           fsr0h	equ	0xFEA
 20501                           fsr0l	equ	0xFE9
 20502                           wreg	equ	0xFE8
 20503                           indf1	equ	0xFE7
 20504                           postinc1	equ	0xFE6
 20505                           postdec1	equ	0xFE5
 20506                           fsr1h	equ	0xFE2
 20507                           fsr1l	equ	0xFE1
 20508                           indf2	equ	0xFDF
 20509                           postinc2	equ	0xFDE
 20510                           postdec2	equ	0xFDD
 20511                           plusw2	equ	0xFDB
 20512                           fsr2h	equ	0xFDA
 20513                           fsr2l	equ	0xFD9
 20514                           status	equ	0xFD8
 20515                           
 20516 ;; *************** function _SendDataSm *****************
 20517 ;; Defined at:
 20518 ;;		line 200 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 20519 ;; Parameters:    Size  Location     Type
 20520 ;;		None
 20521 ;; Auto vars:     Size  Location     Type
 20522 ;;  Data          103   30[BANK0 ] unsigned char [103]
 20523 ;;  LenAscii        4  133[BANK0 ] unsigned char [4]
 20524 ;;  IdAscii         1  138[BANK0 ] unsigned char [1]
 20525 ;;  DataIndex       1  137[BANK0 ] unsigned char 
 20526 ;; Return value:  Size  Location     Type
 20527 ;;                  1    wreg      void 
 20528 ;; Registers used:
 20529 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20530 ;; Tracked objects:
 20531 ;;		On entry : 0/0
 20532 ;;		On exit  : 0/0
 20533 ;;		Unchanged: 0/0
 20534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20536 ;;      Locals:         0     109       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20538 ;;      Totals:         0     109       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20539 ;;Total ram usage:      109 bytes
 20540 ;; Hardware stack levels used:    1
 20541 ;; Hardware stack levels required when called:   14
 20542 ;; This function calls:
 20543 ;;		_MdmWifi_ReceiveWifiMsg
 20544 ;;		_MdmWifi_SendWifiMsg
 20545 ;;		_OsTmr_GetTimerStatus
 20546 ;;		_OsTmr_StartTimer
 20547 ;;		_ReceiveEvt
 20548 ;;		_strcat
 20549 ;;		_strcpy
 20550 ;;		_strstr
 20551 ;;		_utoa
 20552 ;; This function is called by:
 20553 ;;		_MdmWifiCmd_MainTask
 20554 ;; This function uses a non-reentrant model
 20555 ;;
 20556                           
 20557                           	psect	text92
 20558  001362                     __ptext92:
 20559                           	opt stack 0
 20560  001362                     _SendDataSm:
 20561                           	opt stack 13
 20562                           
 20563                           ;mdm_wifi_cmd.c: 202: static WifiSendDataStateType WifiSendDataState = WiFiSnd_WaitEvt;
 20564                           ;mdm_wifi_cmd.c: 203: UINT8 Data[((UINT8)(100)) + 3];
 20565                           ;mdm_wifi_cmd.c: 204: UINT8 DataIndex;
 20566                           ;mdm_wifi_cmd.c: 205: UINT8 IdAscii[1];
 20567                           ;mdm_wifi_cmd.c: 206: UINT8 LenAscii[4];
 20568                           ;mdm_wifi_cmd.c: 207: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, };
 20569                           ;mdm_wifi_cmd.c: 209: switch (WifiSendDataState)
 20570                           
 20571                           ; BSR set to: 0
 20572                           ;incstack = 0
 20573  001362  D105               	goto	l995
 20574  001364                     
 20575                           ;mdm_wifi_cmd.c: 213: if (ReceiveEvt(&WifiSendData))
 20576  001364  0E56               	movlw	low _WifiSendData
 20577  001366  0100               	movlb	0	; () banked
 20578  001368  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 20579  00136A  0E00               	movlw	high _WifiSendData
 20580  00136C  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 20581  00136E  EC38  F025         	call	_ReceiveEvt	;wreg free
 20582  001372  0900               	iorlw	0
 20583  001374  B4D8               	btfsc	status,2,c
 20584  001376  0012               	return	
 20585                           
 20586                           ;mdm_wifi_cmd.c: 214: {
 20587                           ;mdm_wifi_cmd.c: 215: WifiSendDataState = WiFiSnd_SendDataCmd;
 20588  001378  0E01               	movlw	1
 20589  00137A  0101               	movlb	1	; () banked
 20590  00137C  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20591                           
 20592                           ; BSR set to: 1
 20593                           ;mdm_wifi_cmd.c: 216: }
 20594                           ;mdm_wifi_cmd.c: 217: break;
 20595  00137E  0012               	return	
 20596  001380                     
 20597                           ; BSR set to: 1
 20598                           ;mdm_wifi_cmd.c: 221: strcpy(Data,"AT+CIPSEND=");
 20599                           
 20600                           ; BSR set to: 1
 20601  001380  0E7E               	movlw	low SendDataSm@Data
 20602  001382  0100               	movlb	0	; () banked
 20603  001384  6F60               	movwf	strcpy@to& (0+255),b
 20604  001386  0E00               	movlw	high SendDataSm@Data
 20605  001388  6F61               	movwf	(strcpy@to+1)& (0+255),b
 20606  00138A  0E5B               	movlw	low STR_15
 20607  00138C  6F62               	movwf	strcpy@from& (0+255),b
 20608  00138E  0EFF               	movlw	high STR_15
 20609  001390  6F63               	movwf	(strcpy@from+1)& (0+255),b
 20610  001392  ECB3  F022         	call	_strcpy	;wreg free
 20611                           
 20612                           ;mdm_wifi_cmd.c: 223: if (ModeLocal == ((UINT8)(1)))
 20613  001396  0451               	decf	_ModeLocal,w,c
 20614  001398  A4D8               	btfss	status,2,c
 20615  00139A  D02E               	goto	l1000
 20616                           
 20617                           ;mdm_wifi_cmd.c: 224: {
 20618                           ;mdm_wifi_cmd.c: 225: utoa(IdAscii,IdLocal,10);
 20619  00139C  0EEA               	movlw	low SendDataSm@IdAscii
 20620  00139E  0100               	movlb	0	; () banked
 20621  0013A0  6F67               	movwf	utoa@buf& (0+255),b
 20622  0013A2  0E00               	movlw	high SendDataSm@IdAscii
 20623  0013A4  6F68               	movwf	(utoa@buf+1)& (0+255),b
 20624  0013A6  C050  F069         	movff	_IdLocal,utoa@val
 20625  0013AA  6B6A               	clrf	(utoa@val+1)& (0+255),b
 20626  0013AC  0E00               	movlw	0
 20627  0013AE  6F6C               	movwf	(utoa@base+1)& (0+255),b
 20628  0013B0  0E0A               	movlw	10
 20629  0013B2  6F6B               	movwf	utoa@base& (0+255),b
 20630  0013B4  EC8E  F019         	call	_utoa	;wreg free
 20631                           
 20632                           ;mdm_wifi_cmd.c: 226: strcat(Data,IdAscii);
 20633  0013B8  0E7E               	movlw	low SendDataSm@Data
 20634  0013BA  0100               	movlb	0	; () banked
 20635  0013BC  6F60               	movwf	strcat@to& (0+255),b
 20636  0013BE  0E00               	movlw	high SendDataSm@Data
 20637  0013C0  6F61               	movwf	(strcat@to+1)& (0+255),b
 20638  0013C2  0EEA               	movlw	low SendDataSm@IdAscii
 20639  0013C4  6F62               	movwf	strcat@from& (0+255),b
 20640  0013C6  0E00               	movlw	high SendDataSm@IdAscii
 20641  0013C8  6F63               	movwf	(strcat@from+1)& (0+255),b
 20642  0013CA  5162               	movf	strcat@from& (0+255),w,b
 20643  0013CC  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20644  0013CE  A4D8               	btfss	status,2,c
 20645  0013D0  0E20               	movlw	32
 20646  0013D2  6F64               	movwf	(strcat@from+2)& (0+255),b
 20647  0013D4  ECE3  F01F         	call	_strcat	;wreg free
 20648                           
 20649                           ;mdm_wifi_cmd.c: 227: strcat(Data,",");
 20650  0013D8  0E7E               	movlw	low SendDataSm@Data
 20651  0013DA  0100               	movlb	0	; () banked
 20652  0013DC  6F60               	movwf	strcat@to& (0+255),b
 20653  0013DE  0E00               	movlw	high SendDataSm@Data
 20654  0013E0  6F61               	movwf	(strcat@to+1)& (0+255),b
 20655  0013E2  0EE7               	movlw	low (STR_46+1)
 20656  0013E4  6F62               	movwf	strcat@from& (0+255),b
 20657  0013E6  0EFF               	movlw	high (STR_46+1)
 20658  0013E8  6F63               	movwf	(strcat@from+1)& (0+255),b
 20659  0013EA  5162               	movf	strcat@from& (0+255),w,b
 20660  0013EC  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20661  0013EE  A4D8               	btfss	status,2,c
 20662  0013F0  0E00               	movlw	low (__mediumconst shr (0+16))
 20663  0013F2  6F64               	movwf	(strcat@from+2)& (0+255),b
 20664  0013F4  ECE3  F01F         	call	_strcat	;wreg free
 20665  0013F8                     l1000:
 20666                           
 20667                           ;mdm_wifi_cmd.c: 228: }
 20668                           ;mdm_wifi_cmd.c: 230: LenLocal = LenLocal + 2;
 20669  0013F8  504F               	movf	_LenLocal,w,c
 20670  0013FA  0F02               	addlw	2
 20671  0013FC  6E4F               	movwf	_LenLocal,c
 20672                           
 20673                           ;mdm_wifi_cmd.c: 231: utoa(LenAscii,LenLocal,10);
 20674  0013FE  0EE5               	movlw	low SendDataSm@LenAscii
 20675  001400  0100               	movlb	0	; () banked
 20676  001402  6F67               	movwf	utoa@buf& (0+255),b
 20677  001404  0E00               	movlw	high SendDataSm@LenAscii
 20678  001406  6F68               	movwf	(utoa@buf+1)& (0+255),b
 20679  001408  C04F  F069         	movff	_LenLocal,utoa@val
 20680  00140C  6B6A               	clrf	(utoa@val+1)& (0+255),b
 20681  00140E  0E00               	movlw	0
 20682  001410  6F6C               	movwf	(utoa@base+1)& (0+255),b
 20683  001412  0E0A               	movlw	10
 20684  001414  6F6B               	movwf	utoa@base& (0+255),b
 20685  001416  EC8E  F019         	call	_utoa	;wreg free
 20686                           
 20687                           ;mdm_wifi_cmd.c: 232: strcat(Data,LenAscii);
 20688  00141A  0E7E               	movlw	low SendDataSm@Data
 20689  00141C  0100               	movlb	0	; () banked
 20690  00141E  6F60               	movwf	strcat@to& (0+255),b
 20691  001420  0E00               	movlw	high SendDataSm@Data
 20692  001422  6F61               	movwf	(strcat@to+1)& (0+255),b
 20693  001424  0EE5               	movlw	low SendDataSm@LenAscii
 20694  001426  6F62               	movwf	strcat@from& (0+255),b
 20695  001428  0E00               	movlw	high SendDataSm@LenAscii
 20696  00142A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20697  00142C  5162               	movf	strcat@from& (0+255),w,b
 20698  00142E  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20699  001430  A4D8               	btfss	status,2,c
 20700  001432  0E20               	movlw	32
 20701  001434  6F64               	movwf	(strcat@from+2)& (0+255),b
 20702  001436  ECE3  F01F         	call	_strcat	;wreg free
 20703                           
 20704                           ;mdm_wifi_cmd.c: 235: strcat(Data,"\r\n");
 20705  00143A  0E7E               	movlw	low SendDataSm@Data
 20706  00143C  0100               	movlb	0	; () banked
 20707  00143E  6F60               	movwf	strcat@to& (0+255),b
 20708  001440  0E00               	movlw	high SendDataSm@Data
 20709  001442  6F61               	movwf	(strcat@to+1)& (0+255),b
 20710  001444  0E87               	movlw	low (STR_31+8)
 20711  001446  6F62               	movwf	strcat@from& (0+255),b
 20712  001448  0EFF               	movlw	high (STR_31+8)
 20713  00144A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20714  00144C  5162               	movf	strcat@from& (0+255),w,b
 20715  00144E  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20716  001450  A4D8               	btfss	status,2,c
 20717  001452  0E00               	movlw	low (__mediumconst shr (0+16))
 20718  001454  6F64               	movwf	(strcat@from+2)& (0+255),b
 20719  001456  ECE3  F01F         	call	_strcat	;wreg free
 20720                           
 20721                           ;mdm_wifi_cmd.c: 236: strcat(Data,(0));
 20722  00145A  0E7E               	movlw	low SendDataSm@Data
 20723  00145C  0100               	movlb	0	; () banked
 20724  00145E  6F60               	movwf	strcat@to& (0+255),b
 20725  001460  0E00               	movlw	high SendDataSm@Data
 20726  001462  6F61               	movwf	(strcat@to+1)& (0+255),b
 20727  001464  0E00               	movlw	0
 20728  001466  6F62               	movwf	strcat@from& (0+255),b
 20729  001468  0E00               	movlw	0
 20730  00146A  6F63               	movwf	(strcat@from+1)& (0+255),b
 20731  00146C  0E00               	movlw	0
 20732  00146E  6F64               	movwf	(strcat@from+2)& (0+255),b
 20733  001470  ECE3  F01F         	call	_strcat	;wreg free
 20734                           
 20735                           ;mdm_wifi_cmd.c: 238: MdmWifi_SendWifiMsg(Data);
 20736  001474  0E7E               	movlw	low SendDataSm@Data
 20737  001476  0100               	movlb	0	; () banked
 20738  001478  6F66               	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20739  00147A  0E00               	movlw	high SendDataSm@Data
 20740  00147C  6F67               	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20741  00147E  EC38  F027         	call	_MdmWifi_SendWifiMsg	;wreg free
 20742                           
 20743                           ;mdm_wifi_cmd.c: 240: OsTmr_StartTimer(&SwTimer,2000);
 20744  001482  0EF6               	movlw	low SendDataSm@SwTimer
 20745  001484  0100               	movlb	0	; () banked
 20746  001486  6F64               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 20747  001488  0E01               	movlw	high SendDataSm@SwTimer
 20748  00148A  6F65               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 20749  00148C  0ED0               	movlw	208
 20750  00148E  6F66               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 20751  001490  0E07               	movlw	7
 20752  001492  6F67               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 20753  001494  0E00               	movlw	0
 20754  001496  6F68               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 20755  001498  0E00               	movlw	0
 20756  00149A  6F69               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 20757  00149C  EC75  F020         	call	_OsTmr_StartTimer	;wreg free
 20758                           
 20759                           ;mdm_wifi_cmd.c: 243: WifiSendDataState = WiFiSnd_WaitPrompt;
 20760  0014A0  0E02               	movlw	2
 20761  0014A2  0101               	movlb	1	; () banked
 20762  0014A4  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20763                           
 20764                           ;mdm_wifi_cmd.c: 244: break;
 20765  0014A6  0012               	return	
 20766  0014A8                     
 20767                           ; BSR set to: 1
 20768                           ;mdm_wifi_cmd.c: 248: if (MdmWifi_ReceiveWifiMsg(Data,&DataIndex) == WifiMsg_Received)
 20769                           
 20770                           ; BSR set to: 1
 20771  0014A8  0E7E               	movlw	low SendDataSm@Data
 20772  0014AA  0100               	movlb	0	; () banked
 20773  0014AC  6F68               	movwf	MdmWifi_ReceiveWifiMsg@RxBuffer& (0+255),b
 20774  0014AE  0E00               	movlw	high SendDataSm@Data
 20775  0014B0  6F69               	movwf	(MdmWifi_ReceiveWifiMsg@RxBuffer+1)& (0+255),b
 20776  0014B2  0EE9               	movlw	low SendDataSm@DataIndex
 20777  0014B4  6F6A               	movwf	MdmWifi_ReceiveWifiMsg@DataLenght& (0+255),b
 20778  0014B6  0E00               	movlw	high SendDataSm@DataIndex
 20779  0014B8  6F6B               	movwf	(MdmWifi_ReceiveWifiMsg@DataLenght+1)& (0+255),b
 20780  0014BA  EC45  F022         	call	_MdmWifi_ReceiveWifiMsg	;wreg free
 20781  0014BE  06E8               	decf	wreg,f,c
 20782  0014C0  A4D8               	btfss	status,2,c
 20783  0014C2  D014               	goto	l1002
 20784                           
 20785                           ;mdm_wifi_cmd.c: 249: {
 20786                           ;mdm_wifi_cmd.c: 251: if (strstr(Data,(void*)">") != (0))
 20787  0014C4  0E7E               	movlw	low SendDataSm@Data
 20788  0014C6  0100               	movlb	0	; () banked
 20789  0014C8  6F6F               	movwf	strstr@s1& (0+255),b
 20790  0014CA  0E00               	movlw	high SendDataSm@Data
 20791  0014CC  6F70               	movwf	(strstr@s1+1)& (0+255),b
 20792  0014CE  0EF5               	movlw	low STR_18
 20793  0014D0  6F71               	movwf	strstr@s2& (0+255),b
 20794  0014D2  0EFF               	movlw	high STR_18
 20795  0014D4  6F72               	movwf	(strstr@s2+1)& (0+255),b
 20796  0014D6  EC1A  F01D         	call	_strstr	;wreg free
 20797  0014DA  0100               	movlb	0	; () banked
 20798  0014DC  516F               	movf	?_strstr& (0+255),w,b
 20799  0014DE  1170               	iorwf	(?_strstr+1)& (0+255),w,b
 20800  0014E0  B4D8               	btfsc	status,2,c
 20801  0014E2  0012               	return	
 20802                           
 20803                           ; BSR set to: 0
 20804                           ;mdm_wifi_cmd.c: 252: {
 20805                           ;mdm_wifi_cmd.c: 254: WifiSendDataState = WiFiSnd_SendPayload;
 20806  0014E4  0E03               	movlw	3
 20807  0014E6  0101               	movlb	1	; () banked
 20808  0014E8  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20809                           
 20810                           ; BSR set to: 1
 20811                           ;mdm_wifi_cmd.c: 255: }
 20812                           ;mdm_wifi_cmd.c: 256: }
 20813  0014EA  0012               	return	
 20814  0014EC                     l1002:
 20815                           
 20816                           ;mdm_wifi_cmd.c: 257: else if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 20817                           
 20818                           ; BSR set to: 1
 20819  0014EC  0EF6               	movlw	low SendDataSm@SwTimer
 20820  0014EE  0100               	movlb	0	; () banked
 20821  0014F0  6F78               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 20822  0014F2  0E01               	movlw	high SendDataSm@SwTimer
 20823  0014F4  6F79               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 20824  0014F6  EC46  F01C         	call	_OsTmr_GetTimerStatus	;wreg free
 20825  0014FA  06E8               	decf	wreg,f,c
 20826  0014FC  A4D8               	btfss	status,2,c
 20827  0014FE  0012               	return	
 20828                           
 20829                           ;mdm_wifi_cmd.c: 258: {
 20830                           ;mdm_wifi_cmd.c: 260: WifiSendDataState = WiFiSnd_WaitEvt;
 20831  001500  0E00               	movlw	0
 20832  001502  0101               	movlb	1	; () banked
 20833  001504  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20834                           
 20835                           ; BSR set to: 1
 20836                           ;mdm_wifi_cmd.c: 261: }
 20837                           ;mdm_wifi_cmd.c: 262: break;
 20838                           
 20839                           ; BSR set to: 1
 20840  001506  0012               	return	
 20841  001508                     
 20842                           ; BSR set to: 1
 20843                           ;mdm_wifi_cmd.c: 266: strcpy(Data,BufferLocal);
 20844                           
 20845                           ; BSR set to: 1
 20846  001508  0E7E               	movlw	low SendDataSm@Data
 20847  00150A  0100               	movlb	0	; () banked
 20848  00150C  6F60               	movwf	strcpy@to& (0+255),b
 20849  00150E  0E00               	movlw	high SendDataSm@Data
 20850  001510  6F61               	movwf	(strcpy@to+1)& (0+255),b
 20851  001512  0E64               	movlw	low _BufferLocal
 20852  001514  6F62               	movwf	strcpy@from& (0+255),b
 20853  001516  0E06               	movlw	high _BufferLocal
 20854  001518  6F63               	movwf	(strcpy@from+1)& (0+255),b
 20855  00151A  ECB3  F022         	call	_strcpy	;wreg free
 20856                           
 20857                           ;mdm_wifi_cmd.c: 268: strcat(Data,"\r\n");
 20858  00151E  0E7E               	movlw	low SendDataSm@Data
 20859  001520  0100               	movlb	0	; () banked
 20860  001522  6F60               	movwf	strcat@to& (0+255),b
 20861  001524  0E00               	movlw	high SendDataSm@Data
 20862  001526  6F61               	movwf	(strcat@to+1)& (0+255),b
 20863  001528  0E87               	movlw	low (STR_31+8)
 20864  00152A  6F62               	movwf	strcat@from& (0+255),b
 20865  00152C  0EFF               	movlw	high (STR_31+8)
 20866  00152E  6F63               	movwf	(strcat@from+1)& (0+255),b
 20867  001530  5162               	movf	strcat@from& (0+255),w,b
 20868  001532  1163               	iorwf	(strcat@from+1)& (0+255),w,b
 20869  001534  A4D8               	btfss	status,2,c
 20870  001536  0E00               	movlw	low (__mediumconst shr (0+16))
 20871  001538  6F64               	movwf	(strcat@from+2)& (0+255),b
 20872  00153A  ECE3  F01F         	call	_strcat	;wreg free
 20873                           
 20874                           ;mdm_wifi_cmd.c: 269: strcat(Data,(0));
 20875  00153E  0E7E               	movlw	low SendDataSm@Data
 20876  001540  0100               	movlb	0	; () banked
 20877  001542  6F60               	movwf	strcat@to& (0+255),b
 20878  001544  0E00               	movlw	high SendDataSm@Data
 20879  001546  6F61               	movwf	(strcat@to+1)& (0+255),b
 20880  001548  0E00               	movlw	0
 20881  00154A  6F62               	movwf	strcat@from& (0+255),b
 20882  00154C  0E00               	movlw	0
 20883  00154E  6F63               	movwf	(strcat@from+1)& (0+255),b
 20884  001550  0E00               	movlw	0
 20885  001552  6F64               	movwf	(strcat@from+2)& (0+255),b
 20886  001554  ECE3  F01F         	call	_strcat	;wreg free
 20887                           
 20888                           ;mdm_wifi_cmd.c: 272: MdmWifi_SendWifiMsg(Data);
 20889  001558  0E7E               	movlw	low SendDataSm@Data
 20890  00155A  0100               	movlb	0	; () banked
 20891  00155C  6F66               	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20892  00155E  0E00               	movlw	high SendDataSm@Data
 20893  001560  6F67               	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20894  001562  EC38  F027         	call	_MdmWifi_SendWifiMsg	;wreg free
 20895                           
 20896                           ;mdm_wifi_cmd.c: 275: WifiSendDataState = WiFiSnd_WaitEvt;
 20897  001566  0E00               	movlw	0
 20898  001568  0101               	movlb	1	; () banked
 20899  00156A  6F66               	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20900                           
 20901                           ; BSR set to: 1
 20902                           ;mdm_wifi_cmd.c: 280: }
 20903                           
 20904                           ; BSR set to: 1
 20905                           ;mdm_wifi_cmd.c: 279: break;
 20906                           
 20907                           ;mdm_wifi_cmd.c: 278: default:
 20908                           
 20909                           ;mdm_wifi_cmd.c: 276: break;
 20910  00156C  0012               	return	
 20911  00156E                     l995:
 20912                           
 20913                           ; BSR set to: 1
 20914  00156E  0101               	movlb	1	; () banked
 20915  001570  5166               	movf	SendDataSm@WifiSendDataState& (0+255),w,b
 20916                           
 20917                           ; Switch size 1, requested type "space"
 20918                           ; Number of cases is 4, Range of values is 0 to 3
 20919                           ; switch strategies available:
 20920                           ; Name         Instructions Cycles
 20921                           ; simple_byte           13     7 (average)
 20922                           ;	Chosen strategy is simple_byte
 20923  001572  0A00               	xorlw	0	; case 0
 20924  001574  B4D8               	btfsc	status,2,c
 20925  001576  D6F6               	goto	l996
 20926  001578  0A01               	xorlw	1	; case 1
 20927  00157A  B4D8               	btfsc	status,2,c
 20928  00157C  D701               	goto	l999
 20929  00157E  0A03               	xorlw	3	; case 2
 20930  001580  B4D8               	btfsc	status,2,c
 20931  001582  D792               	goto	l1001
 20932  001584  0A01               	xorlw	1	; case 3
 20933  001586  A4D8               	btfss	status,2,c
 20934  001588  0012               	return	
 20935  00158A  D7BE               	goto	l1006
 20936  00158C                     __end_of_SendDataSm:
 20937                           	opt stack 0
 20938                           tosu	equ	0xFFF
 20939                           tosh	equ	0xFFE
 20940                           tosl	equ	0xFFD
 20941                           pclath	equ	0xFFA
 20942                           tblptru	equ	0xFF8
 20943                           tblptrh	equ	0xFF7
 20944                           tblptrl	equ	0xFF6
 20945                           tablat	equ	0xFF5
 20946                           prodh	equ	0xFF4
 20947                           prodl	equ	0xFF3
 20948                           intcon	equ	0xFF2
 20949                           intcon2	equ	0xFF1
 20950                           intcon3	equ	0xFF0
 20951                           indf0	equ	0xFEF
 20952                           postinc0	equ	0xFEE
 20953                           plusw0	equ	0xFEB
 20954                           fsr0h	equ	0xFEA
 20955                           fsr0l	equ	0xFE9
 20956                           wreg	equ	0xFE8
 20957                           indf1	equ	0xFE7
 20958                           postinc1	equ	0xFE6
 20959                           postdec1	equ	0xFE5
 20960                           fsr1h	equ	0xFE2
 20961                           fsr1l	equ	0xFE1
 20962                           indf2	equ	0xFDF
 20963                           postinc2	equ	0xFDE
 20964                           postdec2	equ	0xFDD
 20965                           plusw2	equ	0xFDB
 20966                           fsr2h	equ	0xFDA
 20967                           fsr2l	equ	0xFD9
 20968                           status	equ	0xFD8
 20969                           
 20970 ;; *************** function _utoa *****************
 20971 ;; Defined at:
 20972 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 20973 ;; Parameters:    Size  Location     Type
 20974 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 20975 ;;		 -> Term_MainSm@FwkBuildYearStr(4), Term_MainSm@FwkBuildMonthStr(4), Term_MainSm@FwkBuildDayStr(4), Term_MainSm@FwkB
      +uildStr(4), 
 20976 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(100), MdmWifiCmd_ConfigureServer@PortAs
      +cii(10), 
 20977 ;;		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(5), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(5), MdmWifiCmd_CloseConnect
      +ion@IdAscii(1), SendDataSm@LenAscii(4), 
 20978 ;;		 -> SendDataSm@IdAscii(1), StartConnectionSm@PortAscii(4), StartConnectionSm@IdAscii(1), 
 20979 ;;  val             2    9[BANK0 ] unsigned int 
 20980 ;;  base            2   11[BANK0 ] int 
 20981 ;; Auto vars:     Size  Location     Type
 20982 ;;  v               2   13[BANK0 ] unsigned int 
 20983 ;;  c               1   15[BANK0 ] unsigned char 
 20984 ;; Return value:  Size  Location     Type
 20985 ;;                  2    7[BANK0 ] PTR unsigned char 
 20986 ;; Registers used:
 20987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20988 ;; Tracked objects:
 20989 ;;		On entry : 0/0
 20990 ;;		On exit  : 0/0
 20991 ;;		Unchanged: 0/0
 20992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20993 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20994 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20996 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20997 ;;Total ram usage:        9 bytes
 20998 ;; Hardware stack levels used:    1
 20999 ;; Hardware stack levels required when called:   12
 21000 ;; This function calls:
 21001 ;;		___lwdiv
 21002 ;;		___lwmod
 21003 ;; This function is called by:
 21004 ;;		_StartConnectionSm
 21005 ;;		_SendDataSm
 21006 ;;		_Term_MainSm
 21007 ;;		_itoa
 21008 ;;		_MdmWifiCmd_CloseConnection
 21009 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 21010 ;;		_MdmWifiCmd_ConfigureServer
 21011 ;; This function uses a non-reentrant model
 21012 ;;
 21013                           
 21014                           	psect	text93
 21015  00331C                     __ptext93:
 21016                           	opt stack 0
 21017  00331C                     _utoa:
 21018                           	opt stack 14
 21019                           
 21020                           ;incstack = 0
 21021  00331C  C069  F06D         	movff	utoa@val,utoa@v
 21022  003320  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 21023  003324  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 21024  003328  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 21025  00332C  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 21026  003330  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 21027  003334  ECA7  F021         	call	___lwdiv	;wreg free
 21028  003338  C060  F06D         	movff	?___lwdiv,utoa@v
 21029  00333C  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 21030  003340  0100               	movlb	0	; () banked
 21031  003342  4B67               	infsnz	utoa@buf& (0+255),f,b
 21032  003344  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 21033                           
 21034                           ; BSR set to: 0
 21035  003346  516D               	movf	utoa@v& (0+255),w,b
 21036  003348  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 21037  00334A  A4D8               	btfss	status,2,c
 21038  00334C  D7EB               	goto	l2473
 21039                           
 21040                           ; BSR set to: 0
 21041                           
 21042                           ; BSR set to: 0
 21043  00334E  C067  FFD9         	movff	utoa@buf,fsr2l
 21044  003352  C068  FFDA         	movff	utoa@buf+1,fsr2h
 21045  003356  0E00               	movlw	0
 21046  003358  6EDF               	movwf	indf2,c
 21047                           
 21048                           ; BSR set to: 0
 21049  00335A  0767               	decf	utoa@buf& (0+255),f,b
 21050  00335C  A0D8               	btfss	status,0,c
 21051  00335E  0768               	decf	(utoa@buf+1)& (0+255),f,b
 21052  003360                     
 21053                           ; BSR set to: 0
 21054                           
 21055                           ; BSR set to: 0
 21056  003360  C069  F060         	movff	utoa@val,___lwmod@dividend
 21057  003364  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 21058  003368  C06B  F062         	movff	utoa@base,___lwmod@divisor
 21059  00336C  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 21060  003370  EC81  F023         	call	___lwmod	;wreg free
 21061  003374  0100               	movlb	0	; () banked
 21062  003376  5160               	movf	?___lwmod& (0+255),w,b
 21063  003378  6F6F               	movwf	utoa@c& (0+255),b
 21064                           
 21065                           ; BSR set to: 0
 21066  00337A  C069  F060         	movff	utoa@val,___lwdiv@dividend
 21067  00337E  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 21068  003382  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 21069  003386  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 21070  00338A  ECA7  F021         	call	___lwdiv	;wreg free
 21071  00338E  C060  F069         	movff	?___lwdiv,utoa@val
 21072  003392  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 21073  003396  0E09               	movlw	9
 21074  003398  0100               	movlb	0	; () banked
 21075  00339A  656F               	cpfsgt	utoa@c& (0+255),b
 21076  00339C  D002               	goto	l2476
 21077                           
 21078                           ; BSR set to: 0
 21079  00339E  0E07               	movlw	7
 21080  0033A0  276F               	addwf	utoa@c& (0+255),f,b
 21081  0033A2                     l2476:
 21082                           
 21083                           ; BSR set to: 0
 21084  0033A2  0E30               	movlw	48
 21085  0033A4  276F               	addwf	utoa@c& (0+255),f,b
 21086                           
 21087                           ; BSR set to: 0
 21088  0033A6  C067  FFD9         	movff	utoa@buf,fsr2l
 21089  0033AA  C068  FFDA         	movff	utoa@buf+1,fsr2h
 21090  0033AE  C06F  FFDF         	movff	utoa@c,indf2
 21091                           
 21092                           ; BSR set to: 0
 21093  0033B2  0767               	decf	utoa@buf& (0+255),f,b
 21094  0033B4  A0D8               	btfss	status,0,c
 21095  0033B6  0768               	decf	(utoa@buf+1)& (0+255),f,b
 21096                           
 21097                           ; BSR set to: 0
 21098  0033B8  5169               	movf	utoa@val& (0+255),w,b
 21099  0033BA  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 21100  0033BC  A4D8               	btfss	status,2,c
 21101  0033BE  D7D0               	goto	l2475
 21102                           
 21103                           ; BSR set to: 0
 21104                           ;	Return value of _utoa is never used
 21105                           
 21106                           ; BSR set to: 0
 21107  0033C0  4B67               	infsnz	utoa@buf& (0+255),f,b
 21108  0033C2  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 21109  0033C4  0012               	return	
 21110  0033C6                     __end_of_utoa:
 21111                           	opt stack 0
 21112                           tosu	equ	0xFFF
 21113                           tosh	equ	0xFFE
 21114                           tosl	equ	0xFFD
 21115                           pclath	equ	0xFFA
 21116                           tblptru	equ	0xFF8
 21117                           tblptrh	equ	0xFF7
 21118                           tblptrl	equ	0xFF6
 21119                           tablat	equ	0xFF5
 21120                           prodh	equ	0xFF4
 21121                           prodl	equ	0xFF3
 21122                           intcon	equ	0xFF2
 21123                           intcon2	equ	0xFF1
 21124                           intcon3	equ	0xFF0
 21125                           indf0	equ	0xFEF
 21126                           postinc0	equ	0xFEE
 21127                           plusw0	equ	0xFEB
 21128                           fsr0h	equ	0xFEA
 21129                           fsr0l	equ	0xFE9
 21130                           wreg	equ	0xFE8
 21131                           indf1	equ	0xFE7
 21132                           postinc1	equ	0xFE6
 21133                           postdec1	equ	0xFE5
 21134                           fsr1h	equ	0xFE2
 21135                           fsr1l	equ	0xFE1
 21136                           indf2	equ	0xFDF
 21137                           postinc2	equ	0xFDE
 21138                           postdec2	equ	0xFDD
 21139                           plusw2	equ	0xFDB
 21140                           fsr2h	equ	0xFDA
 21141                           fsr2l	equ	0xFD9
 21142                           status	equ	0xFD8
 21143                           
 21144 ;; *************** function ___lwmod *****************
 21145 ;; Defined at:
 21146 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 21147 ;; Parameters:    Size  Location     Type
 21148 ;;  dividend        2    0[BANK0 ] unsigned int 
 21149 ;;  divisor         2    2[BANK0 ] unsigned int 
 21150 ;; Auto vars:     Size  Location     Type
 21151 ;;  counter         1    4[BANK0 ] unsigned char 
 21152 ;; Return value:  Size  Location     Type
 21153 ;;                  2    0[BANK0 ] unsigned int 
 21154 ;; Registers used:
 21155 ;;		wreg, status,2, status,0
 21156 ;; Tracked objects:
 21157 ;;		On entry : 0/0
 21158 ;;		On exit  : 0/0
 21159 ;;		Unchanged: 0/0
 21160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21161 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21162 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21164 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21165 ;;Total ram usage:        5 bytes
 21166 ;; Hardware stack levels used:    1
 21167 ;; Hardware stack levels required when called:   11
 21168 ;; This function calls:
 21169 ;;		Nothing
 21170 ;; This function is called by:
 21171 ;;		_utoa
 21172 ;; This function uses a non-reentrant model
 21173 ;;
 21174                           
 21175                           	psect	text94
 21176  004702                     __ptext94:
 21177                           	opt stack 0
 21178  004702                     ___lwmod:
 21179                           	opt stack 14
 21180                           
 21181                           ; BSR set to: 0
 21182                           ;incstack = 0
 21183  004702  0100               	movlb	0	; () banked
 21184  004704  5162               	movf	___lwmod@divisor& (0+255),w,b
 21185  004706  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 21186  004708  B4D8               	btfsc	status,2,c
 21187  00470A  D018               	goto	l2571
 21188                           
 21189                           ; BSR set to: 0
 21190  00470C  0E01               	movlw	1
 21191  00470E  6F64               	movwf	___lwmod@counter& (0+255),b
 21192  004710  D004               	goto	l2566
 21193  004712                     
 21194                           ; BSR set to: 0
 21195                           
 21196                           ; BSR set to: 0
 21197  004712  90D8               	bcf	status,0,c
 21198  004714  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 21199  004716  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21200  004718  2B64               	incf	___lwmod@counter& (0+255),f,b
 21201  00471A                     l2566:
 21202                           
 21203                           ; BSR set to: 0
 21204                           
 21205                           ; BSR set to: 0
 21206  00471A  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21207  00471C  D7FA               	goto	l2567
 21208  00471E                     u4870:
 21209                           
 21210                           ; BSR set to: 0
 21211                           
 21212                           ; BSR set to: 0
 21213                           
 21214                           ; BSR set to: 0
 21215  00471E  5162               	movf	___lwmod@divisor& (0+255),w,b
 21216  004720  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 21217  004722  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21218  004724  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21219  004726  A0D8               	btfss	status,0,c
 21220  004728  D004               	goto	l2570
 21221                           
 21222                           ; BSR set to: 0
 21223  00472A  5162               	movf	___lwmod@divisor& (0+255),w,b
 21224  00472C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 21225  00472E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 21226  004730  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21227  004732                     l2570:
 21228                           
 21229                           ; BSR set to: 0
 21230                           
 21231                           ; BSR set to: 0
 21232  004732  90D8               	bcf	status,0,c
 21233  004734  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 21234  004736  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 21235                           
 21236                           ; BSR set to: 0
 21237  004738  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 21238  00473A  D7F1               	goto	u4870
 21239  00473C                     l2571:
 21240                           
 21241                           ; BSR set to: 0
 21242                           
 21243                           ; BSR set to: 0
 21244  00473C  C060  F060         	movff	___lwmod@dividend,?___lwmod
 21245  004740  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 21246                           
 21247                           ; BSR set to: 0
 21248  004744  0012               	return		;funcret
 21249  004746                     __end_of___lwmod:
 21250                           	opt stack 0
 21251                           tosu	equ	0xFFF
 21252                           tosh	equ	0xFFE
 21253                           tosl	equ	0xFFD
 21254                           pclath	equ	0xFFA
 21255                           tblptru	equ	0xFF8
 21256                           tblptrh	equ	0xFF7
 21257                           tblptrl	equ	0xFF6
 21258                           tablat	equ	0xFF5
 21259                           prodh	equ	0xFF4
 21260                           prodl	equ	0xFF3
 21261                           intcon	equ	0xFF2
 21262                           intcon2	equ	0xFF1
 21263                           intcon3	equ	0xFF0
 21264                           indf0	equ	0xFEF
 21265                           postinc0	equ	0xFEE
 21266                           plusw0	equ	0xFEB
 21267                           fsr0h	equ	0xFEA
 21268                           fsr0l	equ	0xFE9
 21269                           wreg	equ	0xFE8
 21270                           indf1	equ	0xFE7
 21271                           postinc1	equ	0xFE6
 21272                           postdec1	equ	0xFE5
 21273                           fsr1h	equ	0xFE2
 21274                           fsr1l	equ	0xFE1
 21275                           indf2	equ	0xFDF
 21276                           postinc2	equ	0xFDE
 21277                           postdec2	equ	0xFDD
 21278                           plusw2	equ	0xFDB
 21279                           fsr2h	equ	0xFDA
 21280                           fsr2l	equ	0xFD9
 21281                           status	equ	0xFD8
 21282                           
 21283 ;; *************** function ___lwdiv *****************
 21284 ;; Defined at:
 21285 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 21286 ;; Parameters:    Size  Location     Type
 21287 ;;  dividend        2    0[BANK0 ] unsigned int 
 21288 ;;  divisor         2    2[BANK0 ] unsigned int 
 21289 ;; Auto vars:     Size  Location     Type
 21290 ;;  quotient        2    4[BANK0 ] unsigned int 
 21291 ;;  counter         1    6[BANK0 ] unsigned char 
 21292 ;; Return value:  Size  Location     Type
 21293 ;;                  2    0[BANK0 ] unsigned int 
 21294 ;; Registers used:
 21295 ;;		wreg, status,2, status,0
 21296 ;; Tracked objects:
 21297 ;;		On entry : 0/0
 21298 ;;		On exit  : 0/0
 21299 ;;		Unchanged: 0/0
 21300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21301 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21302 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21304 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21305 ;;Total ram usage:        7 bytes
 21306 ;; Hardware stack levels used:    1
 21307 ;; Hardware stack levels required when called:   11
 21308 ;; This function calls:
 21309 ;;		Nothing
 21310 ;; This function is called by:
 21311 ;;		_utoa
 21312 ;; This function uses a non-reentrant model
 21313 ;;
 21314                           
 21315                           	psect	text95
 21316  00434E                     __ptext95:
 21317                           	opt stack 0
 21318  00434E                     ___lwdiv:
 21319                           	opt stack 14
 21320                           
 21321                           ; BSR set to: 0
 21322                           ;incstack = 0
 21323  00434E  0E00               	movlw	0
 21324  004350  0100               	movlb	0	; () banked
 21325  004352  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 21326  004354  0E00               	movlw	0
 21327  004356  6F64               	movwf	___lwdiv@quotient& (0+255),b
 21328                           
 21329                           ; BSR set to: 0
 21330  004358  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21331  00435A  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 21332  00435C  B4D8               	btfsc	status,2,c
 21333  00435E  D01C               	goto	l2561
 21334                           
 21335                           ; BSR set to: 0
 21336  004360  0E01               	movlw	1
 21337  004362  6F66               	movwf	___lwdiv@counter& (0+255),b
 21338  004364  D004               	goto	l2556
 21339  004366                     
 21340                           ; BSR set to: 0
 21341                           
 21342                           ; BSR set to: 0
 21343  004366  90D8               	bcf	status,0,c
 21344  004368  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 21345  00436A  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 21346  00436C  2B66               	incf	___lwdiv@counter& (0+255),f,b
 21347  00436E                     l2556:
 21348                           
 21349                           ; BSR set to: 0
 21350                           
 21351                           ; BSR set to: 0
 21352  00436E  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 21353  004370  D7FA               	goto	l2557
 21354  004372                     u4840:
 21355                           
 21356                           ; BSR set to: 0
 21357                           
 21358                           ; BSR set to: 0
 21359                           
 21360                           ; BSR set to: 0
 21361  004372  90D8               	bcf	status,0,c
 21362  004374  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 21363  004376  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 21364                           
 21365                           ; BSR set to: 0
 21366  004378  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21367  00437A  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 21368  00437C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21369  00437E  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 21370  004380  A0D8               	btfss	status,0,c
 21371  004382  D005               	goto	l2560
 21372                           
 21373                           ; BSR set to: 0
 21374  004384  5162               	movf	___lwdiv@divisor& (0+255),w,b
 21375  004386  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 21376  004388  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 21377  00438A  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 21378                           
 21379                           ; BSR set to: 0
 21380  00438C  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 21381  00438E                     l2560:
 21382                           
 21383                           ; BSR set to: 0
 21384                           
 21385                           ; BSR set to: 0
 21386  00438E  90D8               	bcf	status,0,c
 21387  004390  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 21388  004392  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 21389                           
 21390                           ; BSR set to: 0
 21391  004394  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 21392  004396  D7ED               	goto	u4840
 21393  004398                     l2561:
 21394                           
 21395                           ; BSR set to: 0
 21396                           
 21397                           ; BSR set to: 0
 21398  004398  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 21399  00439C  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 21400                           
 21401                           ; BSR set to: 0
 21402  0043A0  0012               	return		;funcret
 21403  0043A2                     __end_of___lwdiv:
 21404                           	opt stack 0
 21405                           tosu	equ	0xFFF
 21406                           tosh	equ	0xFFE
 21407                           tosl	equ	0xFFD
 21408                           pclath	equ	0xFFA
 21409                           tblptru	equ	0xFF8
 21410                           tblptrh	equ	0xFF7
 21411                           tblptrl	equ	0xFF6
 21412                           tablat	equ	0xFF5
 21413                           prodh	equ	0xFF4
 21414                           prodl	equ	0xFF3
 21415                           intcon	equ	0xFF2
 21416                           intcon2	equ	0xFF1
 21417                           intcon3	equ	0xFF0
 21418                           indf0	equ	0xFEF
 21419                           postinc0	equ	0xFEE
 21420                           plusw0	equ	0xFEB
 21421                           fsr0h	equ	0xFEA
 21422                           fsr0l	equ	0xFE9
 21423                           wreg	equ	0xFE8
 21424                           indf1	equ	0xFE7
 21425                           postinc1	equ	0xFE6
 21426                           postdec1	equ	0xFE5
 21427                           fsr1h	equ	0xFE2
 21428                           fsr1l	equ	0xFE1
 21429                           indf2	equ	0xFDF
 21430                           postinc2	equ	0xFDE
 21431                           postdec2	equ	0xFDD
 21432                           plusw2	equ	0xFDB
 21433                           fsr2h	equ	0xFDA
 21434                           fsr2l	equ	0xFD9
 21435                           status	equ	0xFD8
 21436                           
 21437 ;; *************** function _strstr *****************
 21438 ;; Defined at:
 21439 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 21440 ;; Parameters:    Size  Location     Type
 21441 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 21442 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(250), 
 21443 ;;		 -> WifiRxPacket(253), 
 21444 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 21445 ;;		 -> STR_18(2), STR_14(8), STR_2(5), STR_1(6), 
 21446 ;; Auto vars:     Size  Location     Type
 21447 ;;		None
 21448 ;; Return value:  Size  Location     Type
 21449 ;;                  2   15[BANK0 ] PTR unsigned char 
 21450 ;; Registers used:
 21451 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21452 ;; Tracked objects:
 21453 ;;		On entry : 0/0
 21454 ;;		On exit  : 0/0
 21455 ;;		Unchanged: 0/0
 21456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21460 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21461 ;;Total ram usage:        4 bytes
 21462 ;; Hardware stack levels used:    1
 21463 ;; Hardware stack levels required when called:   12
 21464 ;; This function calls:
 21465 ;;		_strchr
 21466 ;;		_strlen
 21467 ;;		_strncmp
 21468 ;; This function is called by:
 21469 ;;		_MdmWifiEvtParser
 21470 ;;		_StartConnectionSm
 21471 ;;		_SendDataSm
 21472 ;; This function uses a non-reentrant model
 21473 ;;
 21474                           
 21475                           	psect	text96
 21476  003A34                     __ptext96:
 21477                           	opt stack 0
 21478  003A34                     _strstr:
 21479                           	opt stack 14
 21480                           
 21481                           ; BSR set to: 0
 21482                           ;incstack = 0
 21483  003A34  D033               	goto	l2739
 21484  003A36  C06F  F066         	movff	strstr@s1,strncmp@s1
 21485  003A3A  C070  F067         	movff	strstr@s1+1,strncmp@s1+1
 21486  003A3E  C071  F068         	movff	strstr@s2,strncmp@s2
 21487  003A42  C072  F069         	movff	strstr@s2+1,strncmp@s2+1
 21488  003A46  C071  F060         	movff	strstr@s2,strlen@s
 21489  003A4A  C072  F061         	movff	strstr@s2+1,strlen@s+1
 21490  003A4E  EC28  F021         	call	_strlen	;wreg free
 21491  003A52  C060  F06A         	movff	?_strlen,strncmp@len
 21492  003A56  C061  F06B         	movff	?_strlen+1,strncmp@len+1
 21493  003A5A  ECD4  F01C         	call	_strncmp	;wreg free
 21494  003A5E  0100               	movlb	0	; () banked
 21495  003A60  5166               	movf	?_strncmp& (0+255),w,b
 21496  003A62  1167               	iorwf	(?_strncmp+1)& (0+255),w,b
 21497  003A64  A4D8               	btfss	status,2,c
 21498  003A66  D005               	goto	l2741
 21499                           
 21500                           ; BSR set to: 0
 21501  003A68  C06F  F06F         	movff	strstr@s1,?_strstr
 21502  003A6C  C070  F070         	movff	strstr@s1+1,?_strstr+1
 21503                           
 21504                           ; BSR set to: 0
 21505  003A70  0012               	return	
 21506  003A72                     l2741:
 21507                           
 21508                           ; BSR set to: 0
 21509                           
 21510                           ; BSR set to: 0
 21511  003A72  0E01               	movlw	1
 21512  003A74  256F               	addwf	strstr@s1& (0+255),w,b
 21513  003A76  6F60               	movwf	strchr@ptr& (0+255),b
 21514  003A78  0E00               	movlw	0
 21515  003A7A  2170               	addwfc	(strstr@s1+1)& (0+255),w,b
 21516  003A7C  6F61               	movwf	(strchr@ptr+1)& (0+255),b
 21517  003A7E  C071  FFF6         	movff	strstr@s2,tblptrl
 21518  003A82  C072  FFF7         	movff	strstr@s2+1,tblptrh
 21519  003A86                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21520  003A86  6AF8               	clrf	tblptru,c
 21521  003A88                     	endif
 21522  003A88                     	if	0	;tblptru may be non-zero
 21523  003A88                     	endif
 21524  003A88  0008               	tblrd		*
 21525  003A8A  50F5               	movf	tablat,w,c
 21526  003A8C  6F62               	movwf	strchr@chr& (0+255),b
 21527  003A8E  6B63               	clrf	(strchr@chr+1)& (0+255),b
 21528  003A90  EC3A  F024         	call	_strchr	;wreg free
 21529  003A94  C060  F06F         	movff	?_strchr,strstr@s1
 21530  003A98  C061  F070         	movff	?_strchr+1,strstr@s1+1
 21531  003A9C                     l2739:
 21532  003A9C  0100               	movlb	0	; () banked
 21533  003A9E  516F               	movf	strstr@s1& (0+255),w,b
 21534  003AA0  1170               	iorwf	(strstr@s1+1)& (0+255),w,b
 21535  003AA2  B4D8               	btfsc	status,2,c
 21536  003AA4  D007               	goto	u6240
 21537                           
 21538                           ; BSR set to: 0
 21539  003AA6  C06F  FFD9         	movff	strstr@s1,fsr2l
 21540  003AAA  C070  FFDA         	movff	strstr@s1+1,fsr2h
 21541  003AAE  50DF               	movf	indf2,w,c
 21542  003AB0  A4D8               	btfss	status,2,c
 21543  003AB2  D7C1               	goto	l2740
 21544  003AB4                     u6240:
 21545                           
 21546                           ; BSR set to: 0
 21547                           
 21548                           ; BSR set to: 0
 21549                           
 21550                           ; BSR set to: 0
 21551  003AB4  0E00               	movlw	0
 21552  003AB6  6F6F               	movwf	?_strstr& (0+255),b
 21553  003AB8  0E00               	movlw	0
 21554  003ABA  6F70               	movwf	(?_strstr+1)& (0+255),b
 21555  003ABC  0012               	return	
 21556  003ABE                     __end_of_strstr:
 21557                           	opt stack 0
 21558                           tosu	equ	0xFFF
 21559                           tosh	equ	0xFFE
 21560                           tosl	equ	0xFFD
 21561                           pclath	equ	0xFFA
 21562                           tblptru	equ	0xFF8
 21563                           tblptrh	equ	0xFF7
 21564                           tblptrl	equ	0xFF6
 21565                           tablat	equ	0xFF5
 21566                           prodh	equ	0xFF4
 21567                           prodl	equ	0xFF3
 21568                           intcon	equ	0xFF2
 21569                           intcon2	equ	0xFF1
 21570                           intcon3	equ	0xFF0
 21571                           indf0	equ	0xFEF
 21572                           postinc0	equ	0xFEE
 21573                           plusw0	equ	0xFEB
 21574                           fsr0h	equ	0xFEA
 21575                           fsr0l	equ	0xFE9
 21576                           wreg	equ	0xFE8
 21577                           indf1	equ	0xFE7
 21578                           postinc1	equ	0xFE6
 21579                           postdec1	equ	0xFE5
 21580                           fsr1h	equ	0xFE2
 21581                           fsr1l	equ	0xFE1
 21582                           indf2	equ	0xFDF
 21583                           postinc2	equ	0xFDE
 21584                           postdec2	equ	0xFDD
 21585                           plusw2	equ	0xFDB
 21586                           fsr2h	equ	0xFDA
 21587                           fsr2l	equ	0xFD9
 21588                           status	equ	0xFD8
 21589                           
 21590 ;; *************** function _strncmp *****************
 21591 ;; Defined at:
 21592 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 21593 ;; Parameters:    Size  Location     Type
 21594 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 21595 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(250), 
 21596 ;;		 -> WifiRxPacket(253), 
 21597 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 21598 ;;		 -> STR_18(2), STR_14(8), STR_2(5), STR_1(6), 
 21599 ;;  len             2   10[BANK0 ] unsigned int 
 21600 ;; Auto vars:     Size  Location     Type
 21601 ;;		None
 21602 ;; Return value:  Size  Location     Type
 21603 ;;                  2    6[BANK0 ] int 
 21604 ;; Registers used:
 21605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21606 ;; Tracked objects:
 21607 ;;		On entry : 0/0
 21608 ;;		On exit  : 0/0
 21609 ;;		Unchanged: 0/0
 21610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21611 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21613 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21614 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21615 ;;Total ram usage:        9 bytes
 21616 ;; Hardware stack levels used:    1
 21617 ;; Hardware stack levels required when called:   11
 21618 ;; This function calls:
 21619 ;;		Nothing
 21620 ;; This function is called by:
 21621 ;;		_strstr
 21622 ;; This function uses a non-reentrant model
 21623 ;;
 21624                           
 21625                           	psect	text97
 21626  0039A8                     __ptext97:
 21627                           	opt stack 0
 21628  0039A8                     _strncmp:
 21629                           	opt stack 14
 21630                           
 21631                           ; BSR set to: 0
 21632                           ;incstack = 0
 21633  0039A8  D037               	goto	l2828
 21634  0039AA                     l7592:
 21635  0039AA  C066  FFD9         	movff	strncmp@s1,fsr2l
 21636  0039AE  C067  FFDA         	movff	strncmp@s1+1,fsr2h
 21637  0039B2  50DF               	movf	indf2,w,c
 21638  0039B4  B4D8               	btfsc	status,2,c
 21639  0039B6  D011               	goto	u5920
 21640  0039B8  C066  FFD9         	movff	strncmp@s1,fsr2l
 21641  0039BC  C067  FFDA         	movff	strncmp@s1+1,fsr2h
 21642  0039C0  50DF               	movf	indf2,w,c
 21643  0039C2  0100               	movlb	0	; () banked
 21644  0039C4  6F6C               	movwf	??_strncmp& (0+255),b
 21645  0039C6  C068  FFF6         	movff	strncmp@s2,tblptrl
 21646  0039CA  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21647  0039CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21648  0039CE  6AF8               	clrf	tblptru,c
 21649  0039D0                     	endif
 21650  0039D0                     	if	0	;tblptru may be non-zero
 21651  0039D0                     	endif
 21652  0039D0  0008               	tblrd		*
 21653  0039D2  50F5               	movf	tablat,w,c
 21654  0039D4  196C               	xorwf	??_strncmp& (0+255),w,b
 21655  0039D6  B4D8               	btfsc	status,2,c
 21656  0039D8  D01B               	goto	l2830
 21657  0039DA                     u5920:
 21658                           
 21659                           ; BSR set to: 0
 21660  0039DA  C068  FFF6         	movff	strncmp@s2,tblptrl
 21661  0039DE  C069  FFF7         	movff	strncmp@s2+1,tblptrh
 21662  0039E2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 21663  0039E2  6AF8               	clrf	tblptru,c
 21664  0039E4                     	endif
 21665  0039E4                     	if	0	;tblptru may be non-zero
 21666  0039E4                     	endif
 21667  0039E4  0008               	tblrd		*
 21668  0039E6  50F5               	movf	tablat,w,c
 21669  0039E8  0100               	movlb	0	; () banked
 21670  0039EA  6F6C               	movwf	??_strncmp& (0+255),b
 21671  0039EC  6B6D               	clrf	(??_strncmp+1)& (0+255),b
 21672  0039EE  1F6C               	comf	??_strncmp& (0+255),f,b
 21673  0039F0  1F6D               	comf	(??_strncmp+1)& (0+255),f,b
 21674  0039F2  4B6C               	infsnz	??_strncmp& (0+255),f,b
 21675  0039F4  2B6D               	incf	(??_strncmp+1)& (0+255),f,b
 21676  0039F6  C066  FFD9         	movff	strncmp@s1,fsr2l
 21677  0039FA  C067  FFDA         	movff	strncmp@s1+1,fsr2h
 21678  0039FE  50DF               	movf	indf2,w,c
 21679  003A00  6F6E               	movwf	(??_strncmp+2)& (0+255),b
 21680  003A02  516E               	movf	(??_strncmp+2)& (0+255),w,b
 21681  003A04  256C               	addwf	??_strncmp& (0+255),w,b
 21682  003A06  6F66               	movwf	?_strncmp& (0+255),b
 21683  003A08  0E00               	movlw	0
 21684  003A0A  216D               	addwfc	(??_strncmp+1)& (0+255),w,b
 21685  003A0C  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21686                           
 21687                           ; BSR set to: 0
 21688  003A0E  0012               	return	
 21689  003A10                     l2830:
 21690                           
 21691                           ; BSR set to: 0
 21692                           
 21693                           ; BSR set to: 0
 21694  003A10  4B66               	infsnz	strncmp@s1& (0+255),f,b
 21695  003A12  2B67               	incf	(strncmp@s1+1)& (0+255),f,b
 21696  003A14  4B68               	infsnz	strncmp@s2& (0+255),f,b
 21697  003A16  2B69               	incf	(strncmp@s2+1)& (0+255),f,b
 21698  003A18                     l2828:
 21699                           
 21700                           ; BSR set to: 0
 21701  003A18  0100               	movlb	0	; () banked
 21702  003A1A  076A               	decf	strncmp@len& (0+255),f,b
 21703  003A1C  A0D8               	btfss	status,0,c
 21704  003A1E  076B               	decf	(strncmp@len+1)& (0+255),f,b
 21705  003A20  296A               	incf	strncmp@len& (0+255),w,b
 21706  003A22  E1C3               	bnz	l7592
 21707  003A24  296B               	incf	(strncmp@len+1)& (0+255),w,b
 21708  003A26  A4D8               	btfss	status,2,c
 21709  003A28  D7C0               	goto	l2829
 21710                           
 21711                           ; BSR set to: 0
 21712                           
 21713                           ; BSR set to: 0
 21714  003A2A  0E00               	movlw	0
 21715  003A2C  6F67               	movwf	(?_strncmp+1)& (0+255),b
 21716  003A2E  0E00               	movlw	0
 21717  003A30  6F66               	movwf	?_strncmp& (0+255),b
 21718  003A32  0012               	return	
 21719  003A34                     __end_of_strncmp:
 21720                           	opt stack 0
 21721                           tosu	equ	0xFFF
 21722                           tosh	equ	0xFFE
 21723                           tosl	equ	0xFFD
 21724                           pclath	equ	0xFFA
 21725                           tblptru	equ	0xFF8
 21726                           tblptrh	equ	0xFF7
 21727                           tblptrl	equ	0xFF6
 21728                           tablat	equ	0xFF5
 21729                           prodh	equ	0xFF4
 21730                           prodl	equ	0xFF3
 21731                           intcon	equ	0xFF2
 21732                           intcon2	equ	0xFF1
 21733                           intcon3	equ	0xFF0
 21734                           indf0	equ	0xFEF
 21735                           postinc0	equ	0xFEE
 21736                           plusw0	equ	0xFEB
 21737                           fsr0h	equ	0xFEA
 21738                           fsr0l	equ	0xFE9
 21739                           wreg	equ	0xFE8
 21740                           indf1	equ	0xFE7
 21741                           postinc1	equ	0xFE6
 21742                           postdec1	equ	0xFE5
 21743                           fsr1h	equ	0xFE2
 21744                           fsr1l	equ	0xFE1
 21745                           indf2	equ	0xFDF
 21746                           postinc2	equ	0xFDE
 21747                           postdec2	equ	0xFDD
 21748                           plusw2	equ	0xFDB
 21749                           fsr2h	equ	0xFDA
 21750                           fsr2l	equ	0xFD9
 21751                           status	equ	0xFD8
 21752                           
 21753 ;; *************** function _strlen *****************
 21754 ;; Defined at:
 21755 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 21756 ;; Parameters:    Size  Location     Type
 21757 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 21758 ;;		 -> Term_MainSm@Data(50), STR_18(2), STR_14(8), STR_2(5), 
 21759 ;;		 -> STR_1(6), 
 21760 ;; Auto vars:     Size  Location     Type
 21761 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 21762 ;;		 -> Term_MainSm@Data(50), STR_18(2), STR_14(8), STR_2(5), 
 21763 ;;		 -> STR_1(6), 
 21764 ;; Return value:  Size  Location     Type
 21765 ;;                  2    0[BANK0 ] unsigned int 
 21766 ;; Registers used:
 21767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21768 ;; Tracked objects:
 21769 ;;		On entry : 0/0
 21770 ;;		On exit  : 0/0
 21771 ;;		Unchanged: 0/0
 21772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21773 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21774 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21775 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21776 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21777 ;;Total ram usage:        6 bytes
 21778 ;; Hardware stack levels used:    1
 21779 ;; Hardware stack levels required when called:   11
 21780 ;; This function calls:
 21781 ;;		Nothing
 21782 ;; This function is called by:
 21783 ;;		_Term_MainSm
 21784 ;;		_strstr
 21785 ;; This function uses a non-reentrant model
 21786 ;;
 21787                           
 21788                           	psect	text98
 21789  004250                     __ptext98:
 21790                           	opt stack 0
 21791  004250                     _strlen:
 21792                           	opt stack 15
 21793                           
 21794                           ; BSR set to: 0
 21795                           ;incstack = 0
 21796  004250  C060  F064         	movff	strlen@s,strlen@cp
 21797  004254  C061  F065         	movff	strlen@s+1,strlen@cp+1
 21798  004258  D003               	goto	l2727
 21799  00425A  0100               	movlb	0	; () banked
 21800  00425C  4B64               	infsnz	strlen@cp& (0+255),f,b
 21801  00425E  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 21802  004260                     l2727:
 21803                           
 21804                           ; BSR set to: 0
 21805  004260  C064  FFF6         	movff	strlen@cp,tblptrl
 21806  004264  C065  FFF7         	movff	strlen@cp+1,tblptrh
 21807  004268  6AF8               	clrf	tblptru,c
 21808  00426A  0E0E               	movlw	(high __ramtop+-1)
 21809  00426C  64F7               	cpfsgt	tblptrh,c
 21810  00426E  D003               	bra	u5747
 21811  004270  0008               	tblrd		*
 21812  004272  50F5               	movf	tablat,w,c
 21813  004274  D005               	bra	u5740
 21814  004276                     u5747:
 21815  004276  CFF6 FFE9          	movff	tblptrl,fsr0l
 21816  00427A  CFF7 FFEA          	movff	tblptrh,fsr0h
 21817  00427E  50EF               	movf	indf0,w,c
 21818  004280                     u5740:
 21819  004280  0900               	iorlw	0
 21820  004282  A4D8               	btfss	status,2,c
 21821  004284  D7EA               	goto	l2728
 21822  004286  C060  F062         	movff	strlen@s,??_strlen
 21823  00428A  C061  F063         	movff	strlen@s+1,??_strlen+1
 21824  00428E  0100               	movlb	0	; () banked
 21825  004290  1F62               	comf	??_strlen& (0+255),f,b
 21826  004292  1F63               	comf	(??_strlen+1)& (0+255),f,b
 21827  004294  4B62               	infsnz	??_strlen& (0+255),f,b
 21828  004296  2B63               	incf	(??_strlen+1)& (0+255),f,b
 21829  004298  5164               	movf	strlen@cp& (0+255),w,b
 21830  00429A  2562               	addwf	??_strlen& (0+255),w,b
 21831  00429C  6F60               	movwf	?_strlen& (0+255),b
 21832  00429E  5165               	movf	(strlen@cp+1)& (0+255),w,b
 21833  0042A0  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 21834  0042A2  6F61               	movwf	(?_strlen+1)& (0+255),b
 21835  0042A4  0012               	return	
 21836  0042A6                     __end_of_strlen:
 21837                           	opt stack 0
 21838                           tosu	equ	0xFFF
 21839                           tosh	equ	0xFFE
 21840                           tosl	equ	0xFFD
 21841                           pclath	equ	0xFFA
 21842                           tblptru	equ	0xFF8
 21843                           tblptrh	equ	0xFF7
 21844                           tblptrl	equ	0xFF6
 21845                           tablat	equ	0xFF5
 21846                           prodh	equ	0xFF4
 21847                           prodl	equ	0xFF3
 21848                           intcon	equ	0xFF2
 21849                           intcon2	equ	0xFF1
 21850                           intcon3	equ	0xFF0
 21851                           indf0	equ	0xFEF
 21852                           postinc0	equ	0xFEE
 21853                           plusw0	equ	0xFEB
 21854                           fsr0h	equ	0xFEA
 21855                           fsr0l	equ	0xFE9
 21856                           wreg	equ	0xFE8
 21857                           indf1	equ	0xFE7
 21858                           postinc1	equ	0xFE6
 21859                           postdec1	equ	0xFE5
 21860                           fsr1h	equ	0xFE2
 21861                           fsr1l	equ	0xFE1
 21862                           indf2	equ	0xFDF
 21863                           postinc2	equ	0xFDE
 21864                           postdec2	equ	0xFDD
 21865                           plusw2	equ	0xFDB
 21866                           fsr2h	equ	0xFDA
 21867                           fsr2l	equ	0xFD9
 21868                           status	equ	0xFD8
 21869                           
 21870 ;; *************** function _strchr *****************
 21871 ;; Defined at:
 21872 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 21873 ;; Parameters:    Size  Location     Type
 21874 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 21875 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(250), 
 21876 ;;		 -> WifiRxPacket(253), 
 21877 ;;  chr             2    2[BANK0 ] int 
 21878 ;; Auto vars:     Size  Location     Type
 21879 ;;		None
 21880 ;; Return value:  Size  Location     Type
 21881 ;;                  2    0[BANK0 ] PTR unsigned char 
 21882 ;; Registers used:
 21883 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21884 ;; Tracked objects:
 21885 ;;		On entry : 0/0
 21886 ;;		On exit  : 0/0
 21887 ;;		Unchanged: 0/0
 21888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21889 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21891 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21892 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21893 ;;Total ram usage:        5 bytes
 21894 ;; Hardware stack levels used:    1
 21895 ;; Hardware stack levels required when called:   11
 21896 ;; This function calls:
 21897 ;;		Nothing
 21898 ;; This function is called by:
 21899 ;;		_strstr
 21900 ;; This function uses a non-reentrant model
 21901 ;;
 21902                           
 21903                           	psect	text99
 21904  004874                     __ptext99:
 21905                           	opt stack 0
 21906  004874                     _strchr:
 21907                           	opt stack 14
 21908                           
 21909                           ; BSR set to: 0
 21910                           ;incstack = 0
 21911  004874  C060  FFD9         	movff	strchr@ptr,fsr2l
 21912  004878  C061  FFDA         	movff	strchr@ptr+1,fsr2h
 21913  00487C  0100               	movlb	0	; () banked
 21914  00487E  5162               	movf	strchr@chr& (0+255),w,b
 21915  004880  18DE               	xorwf	postinc2,w,c
 21916  004882  A4D8               	btfss	status,2,c
 21917  004884  D005               	goto	l2823
 21918                           
 21919                           ; BSR set to: 0
 21920  004886  C060  F060         	movff	strchr@ptr,?_strchr
 21921  00488A  C061  F061         	movff	strchr@ptr+1,?_strchr+1
 21922                           
 21923                           ; BSR set to: 0
 21924  00488E  0012               	return	
 21925  004890                     l2823:
 21926                           
 21927                           ; BSR set to: 0
 21928                           
 21929                           ; BSR set to: 0
 21930  004890  C060  FFD9         	movff	strchr@ptr,fsr2l
 21931  004894  C061  FFDA         	movff	strchr@ptr+1,fsr2h
 21932  004898  4B60               	infsnz	strchr@ptr& (0+255),f,b
 21933  00489A  2B61               	incf	(strchr@ptr+1)& (0+255),f,b
 21934  00489C  50DF               	movf	indf2,w,c
 21935  00489E  A4D8               	btfss	status,2,c
 21936  0048A0  D7E9               	goto	_strchr
 21937                           
 21938                           ; BSR set to: 0
 21939                           
 21940                           ; BSR set to: 0
 21941  0048A2  0E00               	movlw	0
 21942  0048A4  6F60               	movwf	?_strchr& (0+255),b
 21943  0048A6  0E00               	movlw	0
 21944  0048A8  6F61               	movwf	(?_strchr+1)& (0+255),b
 21945  0048AA  0012               	return	
 21946  0048AC                     __end_of_strchr:
 21947                           	opt stack 0
 21948                           tosu	equ	0xFFF
 21949                           tosh	equ	0xFFE
 21950                           tosl	equ	0xFFD
 21951                           pclath	equ	0xFFA
 21952                           tblptru	equ	0xFF8
 21953                           tblptrh	equ	0xFF7
 21954                           tblptrl	equ	0xFF6
 21955                           tablat	equ	0xFF5
 21956                           prodh	equ	0xFF4
 21957                           prodl	equ	0xFF3
 21958                           intcon	equ	0xFF2
 21959                           intcon2	equ	0xFF1
 21960                           intcon3	equ	0xFF0
 21961                           indf0	equ	0xFEF
 21962                           postinc0	equ	0xFEE
 21963                           plusw0	equ	0xFEB
 21964                           fsr0h	equ	0xFEA
 21965                           fsr0l	equ	0xFE9
 21966                           wreg	equ	0xFE8
 21967                           indf1	equ	0xFE7
 21968                           postinc1	equ	0xFE6
 21969                           postdec1	equ	0xFE5
 21970                           fsr1h	equ	0xFE2
 21971                           fsr1l	equ	0xFE1
 21972                           indf2	equ	0xFDF
 21973                           postinc2	equ	0xFDE
 21974                           postdec2	equ	0xFDD
 21975                           plusw2	equ	0xFDB
 21976                           fsr2h	equ	0xFDA
 21977                           fsr2l	equ	0xFD9
 21978                           status	equ	0xFD8
 21979                           
 21980 ;; *************** function _strcpy *****************
 21981 ;; Defined at:
 21982 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 21983 ;; Parameters:    Size  Location     Type
 21984 ;;  to              2    0[BANK0 ] PTR unsigned char 
 21985 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 21986 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 21987 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), BufferLocal(100), SendDataSm@Data(103), AddressLocal(25), 
 21988 ;;		 -> StartConnectionSm@Data(100), 
 21989 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 21990 ;;		 -> STR_62(21), STR_58(20), STR_53(14), STR_49(10), 
 21991 ;;		 -> STR_43(10), STR_41(13), STR_40(12), STR_36(11), 
 21992 ;;		 -> STR_32(12), STR_26(10), STR_21(11), BufferLocal(100), 
 21993 ;;		 -> STR_15(12), STR_3(13), 
 21994 ;; Auto vars:     Size  Location     Type
 21995 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 21996 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 21997 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 21998 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), BufferLocal(100), SendDataSm@Data(103), AddressLocal(25), 
 21999 ;;		 -> StartConnectionSm@Data(100), 
 22000 ;; Return value:  Size  Location     Type
 22001 ;;                  2    0[BANK0 ] PTR unsigned char 
 22002 ;; Registers used:
 22003 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22004 ;; Tracked objects:
 22005 ;;		On entry : 0/0
 22006 ;;		On exit  : 0/0
 22007 ;;		Unchanged: 0/0
 22008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22009 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22010 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22012 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22013 ;;Total ram usage:        6 bytes
 22014 ;; Hardware stack levels used:    1
 22015 ;; Hardware stack levels required when called:   11
 22016 ;; This function calls:
 22017 ;;		Nothing
 22018 ;; This function is called by:
 22019 ;;		_StartConnectionSm
 22020 ;;		_SendDataSm
 22021 ;;		_Term_MainSm
 22022 ;;		_MdmWifiCmd_SetWifiMode
 22023 ;;		_MdmWifiCmd_JoinAccessPoint
 22024 ;;		_MdmWifiCmd_SetTransferMode
 22025 ;;		_MdmWifiCmd_SetConnectionMode
 22026 ;;		_MdmWifiCmd_StartConnection
 22027 ;;		_MdmWifiCmd_SendData
 22028 ;;		_MdmWifiCmd_CloseConnection
 22029 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 22030 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 22031 ;;		_MdmWifiCmd_ConfigureServer
 22032 ;; This function uses a non-reentrant model
 22033 ;;
 22034                           
 22035                           	psect	text100
 22036  004566                     __ptext100:
 22037                           	opt stack 0
 22038  004566                     _strcpy:
 22039                           	opt stack 15
 22040                           
 22041                           ; BSR set to: 0
 22042                           ;incstack = 0
 22043  004566  C060  F064         	movff	strcpy@to,strcpy@cp
 22044  00456A  C061  F065         	movff	strcpy@to+1,strcpy@cp+1
 22045  00456E  D005               	goto	l2721
 22046  004570  0100               	movlb	0	; () banked
 22047  004572  4B64               	infsnz	strcpy@cp& (0+255),f,b
 22048  004574  2B65               	incf	(strcpy@cp+1)& (0+255),f,b
 22049  004576  4B62               	infsnz	strcpy@from& (0+255),f,b
 22050  004578  2B63               	incf	(strcpy@from+1)& (0+255),f,b
 22051  00457A                     l2721:
 22052                           
 22053                           ; BSR set to: 0
 22054  00457A  C062  FFF6         	movff	strcpy@from,tblptrl
 22055  00457E  C063  FFF7         	movff	strcpy@from+1,tblptrh
 22056  004582  6AF8               	clrf	tblptru,c
 22057  004584  C064  FFD9         	movff	strcpy@cp,fsr2l
 22058  004588  C065  FFDA         	movff	strcpy@cp+1,fsr2h
 22059  00458C  0E0E               	movlw	(high __ramtop+-1)
 22060  00458E  64F7               	cpfsgt	tblptrh,c
 22061  004590  D003               	bra	u6267
 22062  004592  0008               	tblrd		*
 22063  004594  50F5               	movf	tablat,w,c
 22064  004596  D005               	bra	u6260
 22065  004598                     u6267:
 22066  004598  CFF6 FFE9          	movff	tblptrl,fsr0l
 22067  00459C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22068  0045A0  50EF               	movf	indf0,w,c
 22069  0045A2                     u6260:
 22070  0045A2  6EDF               	movwf	indf2,c
 22071  0045A4  50DF               	movf	indf2,w,c
 22072  0045A6  B4D8               	btfsc	status,2,c
 22073  0045A8  0012               	return	
 22074  0045AA  D7E2               	goto	l2722
 22075  0045AC                     __end_of_strcpy:
 22076                           	opt stack 0
 22077                           tosu	equ	0xFFF
 22078                           tosh	equ	0xFFE
 22079                           tosl	equ	0xFFD
 22080                           pclath	equ	0xFFA
 22081                           tblptru	equ	0xFF8
 22082                           tblptrh	equ	0xFF7
 22083                           tblptrl	equ	0xFF6
 22084                           tablat	equ	0xFF5
 22085                           prodh	equ	0xFF4
 22086                           prodl	equ	0xFF3
 22087                           intcon	equ	0xFF2
 22088                           intcon2	equ	0xFF1
 22089                           intcon3	equ	0xFF0
 22090                           indf0	equ	0xFEF
 22091                           postinc0	equ	0xFEE
 22092                           plusw0	equ	0xFEB
 22093                           fsr0h	equ	0xFEA
 22094                           fsr0l	equ	0xFE9
 22095                           wreg	equ	0xFE8
 22096                           indf1	equ	0xFE7
 22097                           postinc1	equ	0xFE6
 22098                           postdec1	equ	0xFE5
 22099                           fsr1h	equ	0xFE2
 22100                           fsr1l	equ	0xFE1
 22101                           indf2	equ	0xFDF
 22102                           postinc2	equ	0xFDE
 22103                           postdec2	equ	0xFDD
 22104                           plusw2	equ	0xFDB
 22105                           fsr2h	equ	0xFDA
 22106                           fsr2l	equ	0xFD9
 22107                           status	equ	0xFD8
 22108                           
 22109 ;; *************** function _strcat *****************
 22110 ;; Defined at:
 22111 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 22112 ;; Parameters:    Size  Location     Type
 22113 ;;  to              2    0[BANK0 ] PTR unsigned char 
 22114 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 22115 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 22116 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22117 ;;  from            3    2[BANK0 ] PTR const unsigned char 
 22118 ;;		 -> STR_65(3), STR_64(2), STR_63(2), Term_MainSm@FwkBuildYearStr(4), 
 22119 ;;		 -> Term_MainSm@FwkBuildMonthStr(4), Term_MainSm@FwkBuildDayStr(4), STR_61(3), STR_60(2), 
 22120 ;;		 -> STR_59(2), Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 22121 ;;		 -> STR_57(3), MdmWifiCmd_ConfigureServer@PortAscii(10), STR_56(2), STR_55(2), 
 22122 ;;		 -> STR_54(2), STR_52(3), STR_51(2), STR_50(2), 
 22123 ;;		 -> STR_48(3), MdmWifiCmd_ConfigureSoftAPMode@EncAscii(5), STR_47(2), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(5), 
 22124 ;;		 -> STR_46(3), STR_45(4), STR_44(2), STR_42(3), 
 22125 ;;		 -> MdmWifiCmd_CloseConnection@IdAscii(1), STR_39(3), STR_38(2), STR_37(2), 
 22126 ;;		 -> STR_35(3), STR_34(2), STR_33(2), STR_30(3), 
 22127 ;;		 -> STR_29(2), STR_28(4), STR_27(2), STR_25(3), 
 22128 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_19(3), 
 22129 ;;		 -> STR_17(3), SendDataSm@LenAscii(4), STR_16(2), SendDataSm@IdAscii(1), 
 22130 ;;		 -> ROM(65527), STR_13(3), STR_12(2), StartConnectionSm@PortAscii(4), 
 22131 ;;		 -> STR_11(2), AddressLocal(25), STR_10(2), STR_9(2), 
 22132 ;;		 -> STR_8(2), STR_7(4), STR_6(4), STR_5(2), 
 22133 ;;		 -> STR_4(2), StartConnectionSm@IdAscii(1), 
 22134 ;; Auto vars:     Size  Location     Type
 22135 ;;  cp              2    5[BANK0 ] PTR unsigned char 
 22136 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 22137 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 22138 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22139 ;; Return value:  Size  Location     Type
 22140 ;;                  2    0[BANK0 ] PTR unsigned char 
 22141 ;; Registers used:
 22142 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22143 ;; Tracked objects:
 22144 ;;		On entry : 0/0
 22145 ;;		On exit  : 0/0
 22146 ;;		Unchanged: 0/0
 22147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22148 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22149 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22151 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22152 ;;Total ram usage:        7 bytes
 22153 ;; Hardware stack levels used:    1
 22154 ;; Hardware stack levels required when called:   11
 22155 ;; This function calls:
 22156 ;;		Nothing
 22157 ;; This function is called by:
 22158 ;;		_StartConnectionSm
 22159 ;;		_SendDataSm
 22160 ;;		_Term_MainSm
 22161 ;;		_MdmWifiCmd_SetWifiMode
 22162 ;;		_MdmWifiCmd_JoinAccessPoint
 22163 ;;		_MdmWifiCmd_SetTransferMode
 22164 ;;		_MdmWifiCmd_SetConnectionMode
 22165 ;;		_MdmWifiCmd_CloseConnection
 22166 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 22167 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 22168 ;;		_MdmWifiCmd_ConfigureServer
 22169 ;; This function uses a non-reentrant model
 22170 ;;
 22171                           
 22172                           	psect	text101
 22173  003FC6                     __ptext101:
 22174                           	opt stack 0
 22175  003FC6                     _strcat:
 22176                           	opt stack 15
 22177                           
 22178                           ;incstack = 0
 22179  003FC6  C060  F065         	movff	strcat@to,strcat@cp
 22180  003FCA  C061  F066         	movff	strcat@to+1,strcat@cp+1
 22181  003FCE  D003               	goto	l2712
 22182  003FD0  0100               	movlb	0	; () banked
 22183  003FD2  4B65               	infsnz	strcat@cp& (0+255),f,b
 22184  003FD4  2B66               	incf	(strcat@cp+1)& (0+255),f,b
 22185  003FD6                     l2712:
 22186                           
 22187                           ; BSR set to: 0
 22188  003FD6  C065  FFD9         	movff	strcat@cp,fsr2l
 22189  003FDA  C066  FFDA         	movff	strcat@cp+1,fsr2h
 22190  003FDE  50DF               	movf	indf2,w,c
 22191  003FE0  B4D8               	btfsc	status,2,c
 22192  003FE2  D00A               	goto	l2715
 22193  003FE4  D7F5               	goto	l2713
 22194  003FE6  0100               	movlb	0	; () banked
 22195  003FE8  4B65               	infsnz	strcat@cp& (0+255),f,b
 22196  003FEA  2B66               	incf	(strcat@cp+1)& (0+255),f,b
 22197                           
 22198                           ; BSR set to: 0
 22199  003FEC  0E01               	movlw	1
 22200  003FEE  2762               	addwf	strcat@from& (0+255),f,b
 22201  003FF0  0E00               	movlw	0
 22202  003FF2  2363               	addwfc	(strcat@from+1)& (0+255),f,b
 22203  003FF4  0E00               	movlw	0
 22204  003FF6  2364               	addwfc	(strcat@from+2)& (0+255),f,b
 22205  003FF8                     l2715:
 22206                           
 22207                           ; BSR set to: 0
 22208  003FF8  C062  FFF6         	movff	strcat@from,tblptrl
 22209  003FFC  C063  FFF7         	movff	strcat@from+1,tblptrh
 22210  004000  C064  FFF8         	movff	strcat@from+2,tblptru
 22211  004004  C065  FFD9         	movff	strcat@cp,fsr2l
 22212  004008  C066  FFDA         	movff	strcat@cp+1,fsr2h
 22213  00400C  BAF8               	btfsc	tblptru,5,c
 22214  00400E  D003               	bra	u6297
 22215  004010  0008               	tblrd		*
 22216  004012  50F5               	movf	tablat,w,c
 22217  004014  D005               	bra	u6290
 22218  004016                     u6297:
 22219  004016  CFF6 FFE9          	movff	tblptrl,fsr0l
 22220  00401A  CFF7 FFEA          	movff	tblptrh,fsr0h
 22221  00401E  50EF               	movf	indf0,w,c
 22222  004020                     u6290:
 22223  004020  6EDF               	movwf	indf2,c
 22224  004022  50DF               	movf	indf2,w,c
 22225  004024  B4D8               	btfsc	status,2,c
 22226  004026  0012               	return	
 22227  004028  D7DE               	goto	l2716
 22228  00402A                     __end_of_strcat:
 22229                           	opt stack 0
 22230                           tosu	equ	0xFFF
 22231                           tosh	equ	0xFFE
 22232                           tosl	equ	0xFFD
 22233                           pclath	equ	0xFFA
 22234                           tblptru	equ	0xFF8
 22235                           tblptrh	equ	0xFF7
 22236                           tblptrl	equ	0xFF6
 22237                           tablat	equ	0xFF5
 22238                           prodh	equ	0xFF4
 22239                           prodl	equ	0xFF3
 22240                           intcon	equ	0xFF2
 22241                           intcon2	equ	0xFF1
 22242                           intcon3	equ	0xFF0
 22243                           indf0	equ	0xFEF
 22244                           postinc0	equ	0xFEE
 22245                           plusw0	equ	0xFEB
 22246                           fsr0h	equ	0xFEA
 22247                           fsr0l	equ	0xFE9
 22248                           wreg	equ	0xFE8
 22249                           indf1	equ	0xFE7
 22250                           postinc1	equ	0xFE6
 22251                           postdec1	equ	0xFE5
 22252                           fsr1h	equ	0xFE2
 22253                           fsr1l	equ	0xFE1
 22254                           indf2	equ	0xFDF
 22255                           postinc2	equ	0xFDE
 22256                           postdec2	equ	0xFDD
 22257                           plusw2	equ	0xFDB
 22258                           fsr2h	equ	0xFDA
 22259                           fsr2l	equ	0xFD9
 22260                           status	equ	0xFD8
 22261                           
 22262 ;; *************** function _OsTmr_GetTimerStatus *****************
 22263 ;; Defined at:
 22264 ;;		line 151 in file "../Source/c/02_Osl/os_timers.c"
 22265 ;; Parameters:    Size  Location     Type
 22266 ;;  Timer           2   24[BANK0 ] PTR struct _SwTimerType
 22267 ;;		 -> Term_MainSm@TermDelay(10), SendDataSm@SwTimer(10), 
 22268 ;; Auto vars:     Size  Location     Type
 22269 ;;		None
 22270 ;; Return value:  Size  Location     Type
 22271 ;;                  1    wreg      enum E7734
 22272 ;; Registers used:
 22273 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22274 ;; Tracked objects:
 22275 ;;		On entry : 0/0
 22276 ;;		On exit  : 0/0
 22277 ;;		Unchanged: 0/0
 22278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22279 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22281 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22282 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22283 ;;Total ram usage:        6 bytes
 22284 ;; Hardware stack levels used:    1
 22285 ;; Hardware stack levels required when called:   13
 22286 ;; This function calls:
 22287 ;;		_GetElapsedTime
 22288 ;; This function is called by:
 22289 ;;		_SendDataSm
 22290 ;;		_Term_MainSm
 22291 ;; This function uses a non-reentrant model
 22292 ;;
 22293                           
 22294                           	psect	text102
 22295  00388C                     __ptext102:
 22296                           	opt stack 0
 22297  00388C                     _OsTmr_GetTimerStatus:
 22298                           	opt stack 13
 22299                           
 22300                           ;os_timers.c: 154: if (Timer->Enabled == 1u)
 22301                           
 22302                           ;incstack = 0
 22303  00388C  C078  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 22304  003890  C079  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 22305  003894  04DE               	decf	postinc2,w,c
 22306  003896  A4D8               	btfss	status,2,c
 22307  003898  D030               	goto	l782
 22308                           
 22309                           ;os_timers.c: 155: {
 22310                           ;os_timers.c: 157: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 22311  00389A  0100               	movlb	0	; () banked
 22312  00389C  EE20 F006          	lfsr	2,6
 22313  0038A0  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22314  0038A2  26D9               	addwf	fsr2l,f,c
 22315  0038A4  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22316  0038A6  22DA               	addwfc	fsr2h,f,c
 22317  0038A8  EE10 F002          	lfsr	1,2
 22318  0038AC  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22319  0038AE  26E1               	addwf	fsr1l,f,c
 22320  0038B0  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22321  0038B2  22E2               	addwfc	fsr1h,f,c
 22322  0038B4  CFE6 F064          	movff	postinc1,GetElapsedTime@StartTime
 22323  0038B8  CFE6 F065          	movff	postinc1,GetElapsedTime@StartTime+1
 22324  0038BC  CFE6 F066          	movff	postinc1,GetElapsedTime@StartTime+2
 22325  0038C0  CFE6 F067          	movff	postinc1,GetElapsedTime@StartTime+3
 22326  0038C4  ECA8  F016         	call	_GetElapsedTime	;wreg free
 22327  0038C8  50DE               	movf	postinc2,w,c
 22328  0038CA  0100               	movlb	0	; () banked
 22329  0038CC  5D64               	subwf	?_GetElapsedTime& (0+255),w,b
 22330  0038CE  50DE               	movf	postinc2,w,c
 22331  0038D0  5965               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 22332  0038D2  50DE               	movf	postinc2,w,c
 22333  0038D4  5966               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 22334  0038D6  50DE               	movf	postinc2,w,c
 22335  0038D8  5967               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 22336  0038DA  A0D8               	btfss	status,0,c
 22337  0038DC  D017               	goto	l785
 22338                           
 22339                           ; BSR set to: 0
 22340                           ;os_timers.c: 158: {
 22341                           ;os_timers.c: 160: Timer->Enabled = 0u;
 22342  0038DE  C078  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 22343  0038E2  C079  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 22344  0038E6  0E00               	movlw	0
 22345  0038E8  6EDF               	movwf	indf2,c
 22346                           
 22347                           ; BSR set to: 0
 22348                           ;os_timers.c: 162: Timer->Status = SwTimerExpired;
 22349  0038EA  EE20 F001          	lfsr	2,1
 22350  0038EE  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22351  0038F0  26D9               	addwf	fsr2l,f,c
 22352  0038F2  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22353  0038F4  22DA               	addwfc	fsr2h,f,c
 22354  0038F6  0E01               	movlw	1
 22355  0038F8  D008               	goto	L45
 22356  0038FA                     l782:
 22357                           
 22358                           ;os_timers.c: 169: else
 22359                           ;os_timers.c: 170: {
 22360                           ;os_timers.c: 172: Timer->Status = SwTimerDisabled;
 22361                           
 22362                           ; BSR set to: 0
 22363  0038FA  0100               	movlb	0	; () banked
 22364  0038FC  EE20 F001          	lfsr	2,1
 22365  003900  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22366  003902  26D9               	addwf	fsr2l,f,c
 22367  003904  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22368  003906  22DA               	addwfc	fsr2h,f,c
 22369  003908  0E02               	movlw	2
 22370  00390A                     L45:
 22371  00390A  6EDF               	movwf	indf2,c
 22372  00390C                     l785:
 22373                           
 22374                           ; BSR set to: 0
 22375                           ;os_timers.c: 173: }
 22376                           ;os_timers.c: 176: return Timer->Status;
 22377  00390C  EE20 F001          	lfsr	2,1
 22378  003910  5178               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22379  003912  26D9               	addwf	fsr2l,f,c
 22380  003914  5179               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22381  003916  22DA               	addwfc	fsr2h,f,c
 22382  003918  50DF               	movf	indf2,w,c
 22383  00391A  0012               	return	
 22384  00391C                     __end_of_OsTmr_GetTimerStatus:
 22385                           	opt stack 0
 22386                           tosu	equ	0xFFF
 22387                           tosh	equ	0xFFE
 22388                           tosl	equ	0xFFD
 22389                           pclath	equ	0xFFA
 22390                           tblptru	equ	0xFF8
 22391                           tblptrh	equ	0xFF7
 22392                           tblptrl	equ	0xFF6
 22393                           tablat	equ	0xFF5
 22394                           prodh	equ	0xFF4
 22395                           prodl	equ	0xFF3
 22396                           intcon	equ	0xFF2
 22397                           intcon2	equ	0xFF1
 22398                           intcon3	equ	0xFF0
 22399                           indf0	equ	0xFEF
 22400                           postinc0	equ	0xFEE
 22401                           plusw0	equ	0xFEB
 22402                           fsr0h	equ	0xFEA
 22403                           fsr0l	equ	0xFE9
 22404                           wreg	equ	0xFE8
 22405                           indf1	equ	0xFE7
 22406                           postinc1	equ	0xFE6
 22407                           postdec1	equ	0xFE5
 22408                           fsr1h	equ	0xFE2
 22409                           fsr1l	equ	0xFE1
 22410                           indf2	equ	0xFDF
 22411                           postinc2	equ	0xFDE
 22412                           postdec2	equ	0xFDD
 22413                           plusw2	equ	0xFDB
 22414                           fsr2h	equ	0xFDA
 22415                           fsr2l	equ	0xFD9
 22416                           status	equ	0xFD8
 22417                           
 22418 ;; *************** function _GetElapsedTime *****************
 22419 ;; Defined at:
 22420 ;;		line 83 in file "../Source/c/02_Osl/os_timers.c"
 22421 ;; Parameters:    Size  Location     Type
 22422 ;;  StartTime       4    4[BANK0 ] unsigned long 
 22423 ;; Auto vars:     Size  Location     Type
 22424 ;;  CurrentTimes    4   20[BANK0 ] unsigned long 
 22425 ;;  TimeValue       4   16[BANK0 ] unsigned long 
 22426 ;; Return value:  Size  Location     Type
 22427 ;;                  4    4[BANK0 ] unsigned long 
 22428 ;; Registers used:
 22429 ;;		wreg, status,2, status,0, cstack
 22430 ;; Tracked objects:
 22431 ;;		On entry : 0/0
 22432 ;;		On exit  : 0/0
 22433 ;;		Unchanged: 0/0
 22434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22435 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22436 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22437 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22438 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22439 ;;Total ram usage:       20 bytes
 22440 ;; Hardware stack levels used:    1
 22441 ;; Hardware stack levels required when called:   12
 22442 ;; This function calls:
 22443 ;;		_GetOsTickCounter
 22444 ;; This function is called by:
 22445 ;;		_OsTmr_GetTimerStatus
 22446 ;;		_OsTmr_GetRemainingTime
 22447 ;; This function uses a non-reentrant model
 22448 ;;
 22449                           
 22450                           	psect	text103
 22451  002D50                     __ptext103:
 22452                           	opt stack 0
 22453  002D50                     _GetElapsedTime:
 22454                           	opt stack 13
 22455                           
 22456                           ;os_timers.c: 85: UINT32 CurrentTimestamp;
 22457                           ;os_timers.c: 86: UINT32 TimeValue;
 22458                           ;os_timers.c: 89: CurrentTimestamp = GetOsTickCounter();
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;incstack = 0
 22462  002D50  EC17  F027         	call	_GetOsTickCounter	;wreg free
 22463  002D54  C060  F074         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 22464  002D58  C061  F075         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 22465  002D5C  C062  F076         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 22466  002D60  C063  F077         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 22467                           
 22468                           ;os_timers.c: 92: if (CurrentTimestamp >= StartTime)
 22469  002D64  0100               	movlb	0	; () banked
 22470  002D66  5164               	movf	GetElapsedTime@StartTime& (0+255),w,b
 22471  002D68  5D74               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 22472  002D6A  5165               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 22473  002D6C  5975               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 22474  002D6E  5166               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 22475  002D70  5976               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 22476  002D72  5167               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 22477  002D74  5977               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 22478  002D76  A0D8               	btfss	status,0,c
 22479  002D78  D01D               	goto	l771
 22480                           
 22481                           ; BSR set to: 0
 22482                           ;os_timers.c: 93: {
 22483                           ;os_timers.c: 94: TimeValue = (CurrentTimestamp - StartTime);
 22484  002D7A  C064  F068         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 22485  002D7E  C065  F069         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 22486  002D82  C066  F06A         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 22487  002D86  C067  F06B         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 22488  002D8A  1F68               	comf	??_GetElapsedTime& (0+255),f,b
 22489  002D8C  1F69               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 22490  002D8E  1F6A               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 22491  002D90  1F6B               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 22492  002D92  2B68               	incf	??_GetElapsedTime& (0+255),f,b
 22493  002D94  0E00               	movlw	0
 22494  002D96  2369               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 22495  002D98  236A               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 22496  002D9A  236B               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 22497  002D9C  5174               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 22498  002D9E  2568               	addwf	??_GetElapsedTime& (0+255),w,b
 22499  002DA0  6F70               	movwf	GetElapsedTime@TimeValue& (0+255),b
 22500  002DA2  5175               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 22501  002DA4  2169               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 22502  002DA6  6F71               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 22503  002DA8  5176               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 22504  002DAA  216A               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 22505  002DAC  6F72               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 22506  002DAE  5177               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 22507  002DB0  216B               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 22508  002DB2  D028               	goto	L25
 22509  002DB4                     l771:
 22510                           
 22511                           ; BSR set to: 0
 22512                           ;os_timers.c: 96: else
 22513                           ;os_timers.c: 97: {
 22514                           ;os_timers.c: 98: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 22515                           
 22516                           ; BSR set to: 0
 22517  002DB4  C064  F068         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 22518  002DB8  C065  F069         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 22519  002DBC  C066  F06A         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 22520  002DC0  C067  F06B         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 22521  002DC4  1F68               	comf	??_GetElapsedTime& (0+255),f,b
 22522  002DC6  1F69               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 22523  002DC8  1F6A               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 22524  002DCA  1F6B               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 22525  002DCC  2B68               	incf	??_GetElapsedTime& (0+255),f,b
 22526  002DCE  0E00               	movlw	0
 22527  002DD0  2369               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 22528  002DD2  236A               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 22529  002DD4  236B               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 22530  002DD6  5174               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 22531  002DD8  2568               	addwf	??_GetElapsedTime& (0+255),w,b
 22532  002DDA  6F6C               	movwf	(??_GetElapsedTime+4)& (0+255),b
 22533  002DDC  5175               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 22534  002DDE  2169               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 22535  002DE0  6F6D               	movwf	(??_GetElapsedTime+5)& (0+255),b
 22536  002DE2  5176               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 22537  002DE4  216A               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 22538  002DE6  6F6E               	movwf	(??_GetElapsedTime+6)& (0+255),b
 22539  002DE8  5177               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 22540  002DEA  216B               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 22541  002DEC  6F6F               	movwf	(??_GetElapsedTime+7)& (0+255),b
 22542  002DEE  0EFF               	movlw	255
 22543  002DF0  256C               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 22544  002DF2  6F70               	movwf	GetElapsedTime@TimeValue& (0+255),b
 22545  002DF4  0EFF               	movlw	255
 22546  002DF6  216D               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 22547  002DF8  6F71               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 22548  002DFA  0EFF               	movlw	255
 22549  002DFC  216E               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 22550  002DFE  6F72               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 22551  002E00  0EFF               	movlw	255
 22552  002E02  216F               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 22553  002E04                     L25:
 22554  002E04  6F73               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 22555                           
 22556                           ; BSR set to: 0
 22557                           ;os_timers.c: 99: }
 22558                           ;os_timers.c: 101: return TimeValue;
 22559                           
 22560                           ; BSR set to: 0
 22561  002E06  C070  F064         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 22562  002E0A  C071  F065         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 22563  002E0E  C072  F066         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 22564  002E12  C073  F067         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 22565  002E16  0012               	return	
 22566  002E18                     __end_of_GetElapsedTime:
 22567                           	opt stack 0
 22568                           tosu	equ	0xFFF
 22569                           tosh	equ	0xFFE
 22570                           tosl	equ	0xFFD
 22571                           pclath	equ	0xFFA
 22572                           tblptru	equ	0xFF8
 22573                           tblptrh	equ	0xFF7
 22574                           tblptrl	equ	0xFF6
 22575                           tablat	equ	0xFF5
 22576                           prodh	equ	0xFF4
 22577                           prodl	equ	0xFF3
 22578                           intcon	equ	0xFF2
 22579                           intcon2	equ	0xFF1
 22580                           intcon3	equ	0xFF0
 22581                           indf0	equ	0xFEF
 22582                           postinc0	equ	0xFEE
 22583                           plusw0	equ	0xFEB
 22584                           fsr0h	equ	0xFEA
 22585                           fsr0l	equ	0xFE9
 22586                           wreg	equ	0xFE8
 22587                           indf1	equ	0xFE7
 22588                           postinc1	equ	0xFE6
 22589                           postdec1	equ	0xFE5
 22590                           fsr1h	equ	0xFE2
 22591                           fsr1l	equ	0xFE1
 22592                           indf2	equ	0xFDF
 22593                           postinc2	equ	0xFDE
 22594                           postdec2	equ	0xFDD
 22595                           plusw2	equ	0xFDB
 22596                           fsr2h	equ	0xFDA
 22597                           fsr2l	equ	0xFD9
 22598                           status	equ	0xFD8
 22599                           
 22600 ;; *************** function _MdmWifi_SendWifiMsg *****************
 22601 ;; Defined at:
 22602 ;;		line 424 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 22603 ;; Parameters:    Size  Location     Type
 22604 ;;  TxBuffer        2    6[BANK0 ] PTR unsigned char 
 22605 ;;		 -> MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifiCmd_ConfigureSoftAPMod
      +e@Data(100), MdmWifiCmd_CloseConnection@Data(20), 
 22606 ;;		 -> MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20), STR_31(11), MdmWifiCmd_JoinAccessPoi
      +nt@Data(100), 
 22607 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), STR_20(9), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22608 ;; Auto vars:     Size  Location     Type
 22609 ;;		None
 22610 ;; Return value:  Size  Location     Type
 22611 ;;                  1    wreg      void 
 22612 ;; Registers used:
 22613 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22614 ;; Tracked objects:
 22615 ;;		On entry : 0/0
 22616 ;;		On exit  : 0/0
 22617 ;;		Unchanged: 0/0
 22618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22619 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22622 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22623 ;;Total ram usage:        2 bytes
 22624 ;; Hardware stack levels used:    1
 22625 ;; Hardware stack levels required when called:   13
 22626 ;; This function calls:
 22627 ;;		_Uart_WriteString
 22628 ;; This function is called by:
 22629 ;;		_StartConnectionSm
 22630 ;;		_SendDataSm
 22631 ;;		_MdmWifiCmd_RestartModem
 22632 ;;		_MdmWifiCmd_SetWifiMode
 22633 ;;		_MdmWifiCmd_JoinAccessPoint
 22634 ;;		_MdmWifiCmd_QuitAccessPoint
 22635 ;;		_MdmWifiCmd_SetTransferMode
 22636 ;;		_MdmWifiCmd_SetConnectionMode
 22637 ;;		_MdmWifiCmd_CloseConnection
 22638 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 22639 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 22640 ;;		_MdmWifiCmd_ConfigureServer
 22641 ;; This function uses a non-reentrant model
 22642 ;;
 22643                           
 22644                           	psect	text104
 22645  004E70                     __ptext104:
 22646                           	opt stack 0
 22647  004E70                     _MdmWifi_SendWifiMsg:
 22648                           	opt stack 13
 22649                           
 22650                           ;mdm_wifi.c: 427: Uart_WriteString(((UINT8)(1)), TxBuffer);
 22651                           
 22652                           ; BSR set to: 0
 22653                           ;incstack = 0
 22654  004E70  C066  F063         	movff	MdmWifi_SendWifiMsg@TxBuffer,Uart_WriteString@StringToWrite
 22655  004E74  C067  F064         	movff	MdmWifi_SendWifiMsg@TxBuffer+1,Uart_WriteString@StringToWrite+1
 22656  004E78  0E01               	movlw	1
 22657  004E7A  EC7A  F01F         	call	_Uart_WriteString
 22658  004E7E  0012               	return		;funcret
 22659  004E80                     __end_of_MdmWifi_SendWifiMsg:
 22660                           	opt stack 0
 22661                           tosu	equ	0xFFF
 22662                           tosh	equ	0xFFE
 22663                           tosl	equ	0xFFD
 22664                           pclath	equ	0xFFA
 22665                           tblptru	equ	0xFF8
 22666                           tblptrh	equ	0xFF7
 22667                           tblptrl	equ	0xFF6
 22668                           tablat	equ	0xFF5
 22669                           prodh	equ	0xFF4
 22670                           prodl	equ	0xFF3
 22671                           intcon	equ	0xFF2
 22672                           intcon2	equ	0xFF1
 22673                           intcon3	equ	0xFF0
 22674                           indf0	equ	0xFEF
 22675                           postinc0	equ	0xFEE
 22676                           plusw0	equ	0xFEB
 22677                           fsr0h	equ	0xFEA
 22678                           fsr0l	equ	0xFE9
 22679                           wreg	equ	0xFE8
 22680                           indf1	equ	0xFE7
 22681                           postinc1	equ	0xFE6
 22682                           postdec1	equ	0xFE5
 22683                           fsr1h	equ	0xFE2
 22684                           fsr1l	equ	0xFE1
 22685                           indf2	equ	0xFDF
 22686                           postinc2	equ	0xFDE
 22687                           postdec2	equ	0xFDD
 22688                           plusw2	equ	0xFDB
 22689                           fsr2h	equ	0xFDA
 22690                           fsr2l	equ	0xFD9
 22691                           status	equ	0xFD8
 22692                           
 22693 ;; *************** function _Uart_WriteString *****************
 22694 ;; Defined at:
 22695 ;;		line 506 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22696 ;; Parameters:    Size  Location     Type
 22697 ;;  Module          1    wreg     unsigned char 
 22698 ;;  StringToWrit    2    3[BANK0 ] PTR unsigned char 
 22699 ;;		 -> MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifiCmd_ConfigureSoftAPMod
      +e@Data(100), MdmWifiCmd_CloseConnection@Data(20), 
 22700 ;;		 -> MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20), STR_31(11), MdmWifiCmd_JoinAccessPoi
      +nt@Data(100), 
 22701 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), STR_20(9), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22702 ;; Auto vars:     Size  Location     Type
 22703 ;;  Module          1    5[BANK0 ] unsigned char 
 22704 ;; Return value:  Size  Location     Type
 22705 ;;                  1    wreg      void 
 22706 ;; Registers used:
 22707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22708 ;; Tracked objects:
 22709 ;;		On entry : 0/0
 22710 ;;		On exit  : 0/0
 22711 ;;		Unchanged: 0/0
 22712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22716 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22717 ;;Total ram usage:        3 bytes
 22718 ;; Hardware stack levels used:    1
 22719 ;; Hardware stack levels required when called:   12
 22720 ;; This function calls:
 22721 ;;		_UartTxBufferStatus
 22722 ;;		_UartWriteByte
 22723 ;; This function is called by:
 22724 ;;		_MdmWifi_SendWifiMsg
 22725 ;; This function uses a non-reentrant model
 22726 ;;
 22727                           
 22728                           	psect	text105
 22729  003EF4                     __ptext105:
 22730                           	opt stack 0
 22731  003EF4                     _Uart_WriteString:
 22732                           	opt stack 13
 22733                           
 22734                           ;incstack = 0
 22735                           ;Uart_WriteString@Module stored from wreg
 22736  003EF4  0100               	movlb	0	; () banked
 22737  003EF6  6F65               	movwf	Uart_WriteString@Module& (0+255),b
 22738                           
 22739                           ;uart_drv.c: 509: while (*StringToWrite)
 22740  003EF8  D01F               	goto	u5300
 22741  003EFA                     
 22742                           ;uart_drv.c: 510: {
 22743                           ;uart_drv.c: 512: UartWriteByte(Module, *StringToWrite);
 22744  003EFA  C063  FFF6         	movff	Uart_WriteString@StringToWrite,tblptrl
 22745  003EFE  C064  FFF7         	movff	Uart_WriteString@StringToWrite+1,tblptrh
 22746  003F02  6AF8               	clrf	tblptru,c
 22747  003F04  0E0E               	movlw	(high __ramtop+-1)
 22748  003F06  64F7               	cpfsgt	tblptrh,c
 22749  003F08  D003               	bra	u5297
 22750  003F0A  0008               	tblrd		*
 22751  003F0C  50F5               	movf	tablat,w,c
 22752  003F0E  D005               	bra	u5290
 22753  003F10                     u5297:
 22754  003F10  CFF6 FFE9          	movff	tblptrl,fsr0l
 22755  003F14  CFF7 FFEA          	movff	tblptrh,fsr0h
 22756  003F18  50EF               	movf	indf0,w,c
 22757  003F1A                     u5290:
 22758  003F1A  0100               	movlb	0	; () banked
 22759  003F1C  6F60               	movwf	UartWriteByte@ByteToWrite& (0+255),b
 22760  003F1E  5165               	movf	Uart_WriteString@Module& (0+255),w,b
 22761  003F20  EC72  F026         	call	_UartWriteByte
 22762                           
 22763                           ;uart_drv.c: 514: StringToWrite++;
 22764  003F24  0100               	movlb	0	; () banked
 22765  003F26  4B63               	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 22766  003F28  2B64               	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 22767  003F2A                     
 22768                           ; BSR set to: 0
 22769                           
 22770                           ; BSR set to: 0
 22771  003F2A  0100               	movlb	0	; () banked
 22772  003F2C  5165               	movf	Uart_WriteString@Module& (0+255),w,b
 22773  003F2E  ECD1  F021         	call	_UartTxBufferStatus
 22774  003F32  06E8               	decf	wreg,f,c
 22775  003F34  B4D8               	btfsc	status,2,c
 22776  003F36  D7F9               	goto	l572
 22777  003F38                     u5300:
 22778  003F38  C063  FFF6         	movff	Uart_WriteString@StringToWrite,tblptrl
 22779  003F3C  C064  FFF7         	movff	Uart_WriteString@StringToWrite+1,tblptrh
 22780  003F40  6AF8               	clrf	tblptru,c
 22781  003F42  0E0E               	movlw	(high __ramtop+-1)
 22782  003F44  64F7               	cpfsgt	tblptrh,c
 22783  003F46  D003               	bra	u5317
 22784  003F48  0008               	tblrd		*
 22785  003F4A  50F5               	movf	tablat,w,c
 22786  003F4C  D005               	bra	u5310
 22787  003F4E                     u5317:
 22788  003F4E  CFF6 FFE9          	movff	tblptrl,fsr0l
 22789  003F52  CFF7 FFEA          	movff	tblptrh,fsr0h
 22790  003F56  50EF               	movf	indf0,w,c
 22791  003F58                     u5310:
 22792  003F58  0900               	iorlw	0
 22793  003F5A  B4D8               	btfsc	status,2,c
 22794  003F5C  0012               	return	
 22795  003F5E  D7CD               	goto	l570
 22796  003F60                     __end_of_Uart_WriteString:
 22797                           	opt stack 0
 22798                           tosu	equ	0xFFF
 22799                           tosh	equ	0xFFE
 22800                           tosl	equ	0xFFD
 22801                           pclath	equ	0xFFA
 22802                           tblptru	equ	0xFF8
 22803                           tblptrh	equ	0xFF7
 22804                           tblptrl	equ	0xFF6
 22805                           tablat	equ	0xFF5
 22806                           prodh	equ	0xFF4
 22807                           prodl	equ	0xFF3
 22808                           intcon	equ	0xFF2
 22809                           intcon2	equ	0xFF1
 22810                           intcon3	equ	0xFF0
 22811                           indf0	equ	0xFEF
 22812                           postinc0	equ	0xFEE
 22813                           plusw0	equ	0xFEB
 22814                           fsr0h	equ	0xFEA
 22815                           fsr0l	equ	0xFE9
 22816                           wreg	equ	0xFE8
 22817                           indf1	equ	0xFE7
 22818                           postinc1	equ	0xFE6
 22819                           postdec1	equ	0xFE5
 22820                           fsr1h	equ	0xFE2
 22821                           fsr1l	equ	0xFE1
 22822                           indf2	equ	0xFDF
 22823                           postinc2	equ	0xFDE
 22824                           postdec2	equ	0xFDD
 22825                           plusw2	equ	0xFDB
 22826                           fsr2h	equ	0xFDA
 22827                           fsr2l	equ	0xFD9
 22828                           status	equ	0xFD8
 22829                           
 22830 ;; *************** function _UartWriteByte *****************
 22831 ;; Defined at:
 22832 ;;		line 173 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22833 ;; Parameters:    Size  Location     Type
 22834 ;;  Module          1    wreg     unsigned char 
 22835 ;;  ByteToWrite     1    0[BANK0 ] unsigned char 
 22836 ;; Auto vars:     Size  Location     Type
 22837 ;;  Module          1    1[BANK0 ] unsigned char 
 22838 ;; Return value:  Size  Location     Type
 22839 ;;                  1    wreg      void 
 22840 ;; Registers used:
 22841 ;;		wreg, status,2, status,0
 22842 ;; Tracked objects:
 22843 ;;		On entry : 0/0
 22844 ;;		On exit  : 0/0
 22845 ;;		Unchanged: 0/0
 22846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22847 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22848 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22850 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22851 ;;Total ram usage:        2 bytes
 22852 ;; Hardware stack levels used:    1
 22853 ;; Hardware stack levels required when called:   11
 22854 ;; This function calls:
 22855 ;;		Nothing
 22856 ;; This function is called by:
 22857 ;;		_Uart_WriteString
 22858 ;;		_Uart_WriteConstString
 22859 ;;		_Uart_WriteStringLen
 22860 ;; This function uses a non-reentrant model
 22861 ;;
 22862                           
 22863                           	psect	text106
 22864  004CE4                     __ptext106:
 22865                           	opt stack 0
 22866  004CE4                     _UartWriteByte:
 22867                           	opt stack 13
 22868                           
 22869                           ;incstack = 0
 22870                           ;UartWriteByte@Module stored from wreg
 22871  004CE4  0100               	movlb	0	; () banked
 22872  004CE6  6F61               	movwf	UartWriteByte@Module& (0+255),b
 22873                           
 22874                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 22875  004CE8  0100               	movlb	0	; () banked
 22876  004CEA  0561               	decf	UartWriteByte@Module& (0+255),w,b
 22877  004CEC  A4D8               	btfss	status,2,c
 22878  004CEE  D003               	goto	l521
 22879                           
 22880                           ; BSR set to: 0
 22881                           ;uart_drv.c: 176: {
 22882                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 22883  004CF0  C060  FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 22884                           
 22885                           ;uart_drv.c: 179: }
 22886  004CF4  0012               	return	
 22887  004CF6                     l521:
 22888                           
 22889                           ; BSR set to: 0
 22890                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 22891                           
 22892                           ; BSR set to: 0
 22893  004CF6  0E02               	movlw	2
 22894  004CF8  1961               	xorwf	UartWriteByte@Module& (0+255),w,b
 22895  004CFA  A4D8               	btfss	status,2,c
 22896  004CFC  0012               	return	
 22897                           
 22898                           ; BSR set to: 0
 22899                           ;uart_drv.c: 181: {
 22900                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 22901  004CFE  C060  FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 22902                           
 22903                           ; BSR set to: 0
 22904  004D02  0012               	return	
 22905  004D04                     __end_of_UartWriteByte:
 22906                           	opt stack 0
 22907                           tosu	equ	0xFFF
 22908                           tosh	equ	0xFFE
 22909                           tosl	equ	0xFFD
 22910                           pclath	equ	0xFFA
 22911                           tblptru	equ	0xFF8
 22912                           tblptrh	equ	0xFF7
 22913                           tblptrl	equ	0xFF6
 22914                           tablat	equ	0xFF5
 22915                           prodh	equ	0xFF4
 22916                           prodl	equ	0xFF3
 22917                           intcon	equ	0xFF2
 22918                           intcon2	equ	0xFF1
 22919                           intcon3	equ	0xFF0
 22920                           indf0	equ	0xFEF
 22921                           postinc0	equ	0xFEE
 22922                           plusw0	equ	0xFEB
 22923                           fsr0h	equ	0xFEA
 22924                           fsr0l	equ	0xFE9
 22925                           wreg	equ	0xFE8
 22926                           indf1	equ	0xFE7
 22927                           postinc1	equ	0xFE6
 22928                           postdec1	equ	0xFE5
 22929                           fsr1h	equ	0xFE2
 22930                           fsr1l	equ	0xFE1
 22931                           indf2	equ	0xFDF
 22932                           postinc2	equ	0xFDE
 22933                           postdec2	equ	0xFDD
 22934                           plusw2	equ	0xFDB
 22935                           fsr2h	equ	0xFDA
 22936                           fsr2l	equ	0xFD9
 22937                           status	equ	0xFD8
 22938                           
 22939 ;; *************** function _UartTxBufferStatus *****************
 22940 ;; Defined at:
 22941 ;;		line 223 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22942 ;; Parameters:    Size  Location     Type
 22943 ;;  Module          1    wreg     unsigned char 
 22944 ;; Auto vars:     Size  Location     Type
 22945 ;;  Module          1    1[BANK0 ] unsigned char 
 22946 ;;  TxBufferStat    1    2[BANK0 ] enum E8864
 22947 ;; Return value:  Size  Location     Type
 22948 ;;                  1    wreg      enum E8864
 22949 ;; Registers used:
 22950 ;;		wreg, status,2, status,0
 22951 ;; Tracked objects:
 22952 ;;		On entry : 0/0
 22953 ;;		On exit  : 0/0
 22954 ;;		Unchanged: 0/0
 22955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22957 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22958 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22959 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22960 ;;Total ram usage:        3 bytes
 22961 ;; Hardware stack levels used:    1
 22962 ;; Hardware stack levels required when called:   11
 22963 ;; This function calls:
 22964 ;;		Nothing
 22965 ;; This function is called by:
 22966 ;;		_Uart_WriteString
 22967 ;;		_Uart_WriteConstString
 22968 ;;		_Uart_WriteStringLen
 22969 ;; This function uses a non-reentrant model
 22970 ;;
 22971                           
 22972                           	psect	text107
 22973  0043A2                     __ptext107:
 22974                           	opt stack 0
 22975  0043A2                     _UartTxBufferStatus:
 22976                           	opt stack 13
 22977                           
 22978                           ; BSR set to: 0
 22979                           ;incstack = 0
 22980                           ;UartTxBufferStatus@Module stored from wreg
 22981  0043A2  0100               	movlb	0	; () banked
 22982  0043A4  6F61               	movwf	UartTxBufferStatus@Module& (0+255),b
 22983                           
 22984                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 22985  0043A6  0E00               	movlw	0
 22986  0043A8  0100               	movlb	0	; () banked
 22987  0043AA  6F62               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 22988                           
 22989                           ; BSR set to: 0
 22990                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 22991  0043AC  0561               	decf	UartTxBufferStatus@Module& (0+255),w,b
 22992  0043AE  A4D8               	btfss	status,2,c
 22993  0043B0  D00B               	goto	l533
 22994                           
 22995                           ; BSR set to: 0
 22996                           ;uart_drv.c: 228: {
 22997                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 22998  0043B2  CFAD F060          	movff	4013,??_UartTxBufferStatus	;volatile
 22999  0043B6  90D8               	bcf	status,0,c
 23000  0043B8  3360               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 23001  0043BA  B160               	btfsc	??_UartTxBufferStatus& (0+255),0,b
 23002  0043BC  D002               	goto	l534
 23003  0043BE                     u4940:
 23004                           
 23005                           ; BSR set to: 0
 23006                           ;uart_drv.c: 231: {
 23007                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 23008  0043BE  0E01               	movlw	1
 23009  0043C0  D014               	goto	L28
 23010  0043C2                     l534:
 23011                           
 23012                           ; BSR set to: 0
 23013                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 23014                           
 23015                           ; BSR set to: 0
 23016  0043C2  CFAD F060          	movff	4013,??_UartTxBufferStatus	;volatile
 23017  0043C6  D00C               	goto	L46
 23018  0043C8                     l533:
 23019                           
 23020                           ; BSR set to: 0
 23021                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 23022                           
 23023                           ; BSR set to: 0
 23024  0043C8  0E02               	movlw	2
 23025  0043CA  1961               	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 23026  0043CC  A4D8               	btfss	status,2,c
 23027  0043CE  D00E               	goto	l542
 23028                           
 23029                           ; BSR set to: 0
 23030                           ;uart_drv.c: 244: {
 23031                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 23032  0043D0  CFA8 F060          	movff	4008,??_UartTxBufferStatus	;volatile
 23033  0043D4  90D8               	bcf	status,0,c
 23034  0043D6  3360               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 23035  0043D8  A160               	btfss	??_UartTxBufferStatus& (0+255),0,b
 23036  0043DA  D7F1               	goto	u4940
 23037                           
 23038                           ; BSR set to: 0
 23039                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 23040                           
 23041                           ; BSR set to: 0
 23042                           
 23043                           ;uart_drv.c: 249: }
 23044                           
 23045                           ; BSR set to: 0
 23046                           ;uart_drv.c: 247: {
 23047                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 23048  0043DC  CFA8 F060          	movff	4008,??_UartTxBufferStatus	;volatile
 23049  0043E0                     L46:
 23050  0043E0  90D8               	bcf	status,0,c
 23051  0043E2  3360               	rrcf	??_UartTxBufferStatus& (0+255),f,b
 23052  0043E4  A160               	btfss	??_UartTxBufferStatus& (0+255),0,b
 23053  0043E6  D002               	goto	l542
 23054                           
 23055                           ; BSR set to: 0
 23056                           ;uart_drv.c: 251: {
 23057                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 23058  0043E8  0E02               	movlw	2
 23059  0043EA                     L28:
 23060  0043EA  6F62               	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 23061  0043EC                     l542:
 23062                           
 23063                           ; BSR set to: 0
 23064                           ;uart_drv.c: 257: }
 23065                           ;uart_drv.c: 258: }
 23066                           ;uart_drv.c: 260: return TxBufferStatus;
 23067                           
 23068                           ; BSR set to: 0
 23069                           
 23070                           ; BSR set to: 0
 23071                           
 23072                           ; BSR set to: 0
 23073                           
 23074                           ; BSR set to: 0
 23075                           
 23076                           ;uart_drv.c: 254: else
 23077                           ;uart_drv.c: 255: {
 23078                           
 23079                           ; BSR set to: 0
 23080  0043EC  5162               	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 23081  0043EE  0012               	return	
 23082  0043F0                     __end_of_UartTxBufferStatus:
 23083                           	opt stack 0
 23084                           tosu	equ	0xFFF
 23085                           tosh	equ	0xFFE
 23086                           tosl	equ	0xFFD
 23087                           pclath	equ	0xFFA
 23088                           tblptru	equ	0xFF8
 23089                           tblptrh	equ	0xFF7
 23090                           tblptrl	equ	0xFF6
 23091                           tablat	equ	0xFF5
 23092                           prodh	equ	0xFF4
 23093                           prodl	equ	0xFF3
 23094                           intcon	equ	0xFF2
 23095                           intcon2	equ	0xFF1
 23096                           intcon3	equ	0xFF0
 23097                           indf0	equ	0xFEF
 23098                           postinc0	equ	0xFEE
 23099                           plusw0	equ	0xFEB
 23100                           fsr0h	equ	0xFEA
 23101                           fsr0l	equ	0xFE9
 23102                           wreg	equ	0xFE8
 23103                           indf1	equ	0xFE7
 23104                           postinc1	equ	0xFE6
 23105                           postdec1	equ	0xFE5
 23106                           fsr1h	equ	0xFE2
 23107                           fsr1l	equ	0xFE1
 23108                           indf2	equ	0xFDF
 23109                           postinc2	equ	0xFDE
 23110                           postdec2	equ	0xFDD
 23111                           plusw2	equ	0xFDB
 23112                           fsr2h	equ	0xFDA
 23113                           fsr2l	equ	0xFD9
 23114                           status	equ	0xFD8
 23115                           
 23116 ;; *************** function _MdmWifi_ReceiveWifiMsg *****************
 23117 ;; Defined at:
 23118 ;;		line 343 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 23119 ;; Parameters:    Size  Location     Type
 23120 ;;  RxBuffer        2    8[BANK0 ] PTR unsigned char 
 23121 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), 
 23122 ;;  DataLenght      2   10[BANK0 ] PTR unsigned char 
 23123 ;;		 -> SendDataSm@DataIndex(1), StartConnectionSm@DataIndex(1), 
 23124 ;; Auto vars:     Size  Location     Type
 23125 ;;  Ret             1   12[BANK0 ] enum E8823
 23126 ;; Return value:  Size  Location     Type
 23127 ;;                  1    wreg      enum E8823
 23128 ;; Registers used:
 23129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23130 ;; Tracked objects:
 23131 ;;		On entry : 0/0
 23132 ;;		On exit  : 0/0
 23133 ;;		Unchanged: 0/0
 23134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23136 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23138 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23139 ;;Total ram usage:        5 bytes
 23140 ;; Hardware stack levels used:    1
 23141 ;; Hardware stack levels required when called:   12
 23142 ;; This function calls:
 23143 ;;		_ReceiveEvt
 23144 ;;		_StringCopy
 23145 ;; This function is called by:
 23146 ;;		_StartConnectionSm
 23147 ;;		_SendDataSm
 23148 ;; This function uses a non-reentrant model
 23149 ;;
 23150                           
 23151                           	psect	text108
 23152  00448A                     __ptext108:
 23153                           	opt stack 0
 23154  00448A                     _MdmWifi_ReceiveWifiMsg:
 23155                           	opt stack 14
 23156                           
 23157                           ;mdm_wifi.c: 345: WifiRxMsgStsType Ret;
 23158                           ;mdm_wifi.c: 348: if (ReceiveEvt(&WifiRxPacket.PacketRxNotificationEvt))
 23159                           
 23160                           ; BSR set to: 0
 23161                           ;incstack = 0
 23162  00448A  0EFC               	movlw	low (_WifiRxPacket+252)
 23163  00448C  0100               	movlb	0	; () banked
 23164  00448E  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 23165  004490  0E07               	movlw	high (_WifiRxPacket+252)
 23166  004492  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23167  004494  EC38  F025         	call	_ReceiveEvt	;wreg free
 23168  004498  0900               	iorlw	0
 23169  00449A  B4D8               	btfsc	status,2,c
 23170  00449C  D017               	goto	l892
 23171                           
 23172                           ;mdm_wifi.c: 349: {
 23173                           ;mdm_wifi.c: 351: StringCopy(WifiRxPacket.RxBuffer, RxBuffer, WifiRxPacket.RxByteNum);
 23174  00449E  0E00               	movlw	low _WifiRxPacket
 23175  0044A0  0100               	movlb	0	; () banked
 23176  0044A2  6F60               	movwf	StringCopy@SourceStr& (0+255),b
 23177  0044A4  0E07               	movlw	high _WifiRxPacket
 23178  0044A6  6F61               	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23179  0044A8  C068  F062         	movff	MdmWifi_ReceiveWifiMsg@RxBuffer,StringCopy@DestStr
 23180  0044AC  C069  F063         	movff	MdmWifi_ReceiveWifiMsg@RxBuffer+1,StringCopy@DestStr+1
 23181  0044B0  C7FA  F064         	movff	_WifiRxPacket+250,StringCopy@Len
 23182  0044B4  C7FB  F065         	movff	_WifiRxPacket+251,StringCopy@Len+1
 23183  0044B8  ECA3  F023         	call	_StringCopy	;wreg free
 23184                           
 23185                           ;mdm_wifi.c: 353: *DataLenght = WifiRxPacket.RxByteNum;
 23186  0044BC  C06A  FFD9         	movff	MdmWifi_ReceiveWifiMsg@DataLenght,fsr2l
 23187  0044C0  C06B  FFDA         	movff	MdmWifi_ReceiveWifiMsg@DataLenght+1,fsr2h
 23188  0044C4  C7FA  FFDF         	movff	_WifiRxPacket+250,indf2
 23189                           
 23190                           ;mdm_wifi.c: 355: Ret = WifiMsg_Received;
 23191  0044C8  0E01               	movlw	1
 23192  0044CA  D001               	goto	L29
 23193  0044CC                     l892:
 23194                           
 23195                           ;mdm_wifi.c: 357: else
 23196                           ;mdm_wifi.c: 358: {
 23197                           ;mdm_wifi.c: 360: Ret = WifiMsg_NotReceived;
 23198                           
 23199                           ; BSR set to: 0
 23200  0044CC  0E00               	movlw	0
 23201  0044CE                     L29:
 23202  0044CE  0100               	movlb	0	; () banked
 23203  0044D0  6F6C               	movwf	MdmWifi_ReceiveWifiMsg@Ret& (0+255),b
 23204                           
 23205                           ; BSR set to: 0
 23206                           ;mdm_wifi.c: 361: }
 23207                           ;mdm_wifi.c: 363: return Ret;
 23208  0044D2  516C               	movf	MdmWifi_ReceiveWifiMsg@Ret& (0+255),w,b
 23209  0044D4  0012               	return	
 23210  0044D6                     __end_of_MdmWifi_ReceiveWifiMsg:
 23211                           	opt stack 0
 23212                           tosu	equ	0xFFF
 23213                           tosh	equ	0xFFE
 23214                           tosl	equ	0xFFD
 23215                           pclath	equ	0xFFA
 23216                           tblptru	equ	0xFF8
 23217                           tblptrh	equ	0xFF7
 23218                           tblptrl	equ	0xFF6
 23219                           tablat	equ	0xFF5
 23220                           prodh	equ	0xFF4
 23221                           prodl	equ	0xFF3
 23222                           intcon	equ	0xFF2
 23223                           intcon2	equ	0xFF1
 23224                           intcon3	equ	0xFF0
 23225                           indf0	equ	0xFEF
 23226                           postinc0	equ	0xFEE
 23227                           plusw0	equ	0xFEB
 23228                           fsr0h	equ	0xFEA
 23229                           fsr0l	equ	0xFE9
 23230                           wreg	equ	0xFE8
 23231                           indf1	equ	0xFE7
 23232                           postinc1	equ	0xFE6
 23233                           postdec1	equ	0xFE5
 23234                           fsr1h	equ	0xFE2
 23235                           fsr1l	equ	0xFE1
 23236                           indf2	equ	0xFDF
 23237                           postinc2	equ	0xFDE
 23238                           postdec2	equ	0xFDD
 23239                           plusw2	equ	0xFDB
 23240                           fsr2h	equ	0xFDA
 23241                           fsr2l	equ	0xFD9
 23242                           status	equ	0xFD8
 23243                           
 23244 ;; *************** function _StringCopy *****************
 23245 ;; Defined at:
 23246 ;;		line 104 in file "../Source/c/03_Sml/02_Ssl/sf.c"
 23247 ;; Parameters:    Size  Location     Type
 23248 ;;  SourceStr       2    0[BANK0 ] PTR unsigned char 
 23249 ;;		 -> WifiRxPacket(253), MdmWifi_UartRxBuffer(250), 
 23250 ;;  DestStr         2    2[BANK0 ] PTR unsigned char 
 23251 ;;		 -> WifiTerminal@UartBuffer(200), SendDataSm@Data(103), StartConnectionSm@Data(100), WifiRxPacket(253), 
 23252 ;;  Len             2    4[BANK0 ] unsigned short 
 23253 ;; Auto vars:     Size  Location     Type
 23254 ;;  Index           2    6[BANK0 ] unsigned short 
 23255 ;; Return value:  Size  Location     Type
 23256 ;;                  1    wreg      void 
 23257 ;; Registers used:
 23258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23259 ;; Tracked objects:
 23260 ;;		On entry : 0/0
 23261 ;;		On exit  : 0/0
 23262 ;;		Unchanged: 0/0
 23263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23264 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23267 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23268 ;;Total ram usage:        8 bytes
 23269 ;; Hardware stack levels used:    1
 23270 ;; Hardware stack levels required when called:   11
 23271 ;; This function calls:
 23272 ;;		Nothing
 23273 ;; This function is called by:
 23274 ;;		_MdmWifiGetUartData
 23275 ;;		_MdmWifi_ReceiveWifiMsg
 23276 ;;		_MdmWifi_ReceiveWifiMsgTerminal
 23277 ;;		_MdmWifiCmd_ReceiveWifiMsg
 23278 ;; This function uses a non-reentrant model
 23279 ;;
 23280                           
 23281                           	psect	text109
 23282  004746                     __ptext109:
 23283                           	opt stack 0
 23284  004746                     _StringCopy:
 23285                           	opt stack 15
 23286                           
 23287                           ;sf.c: 106: UINT16 Index = 0;
 23288                           
 23289                           ; BSR set to: 0
 23290                           ;incstack = 0
 23291  004746  0E00               	movlw	0
 23292  004748  0100               	movlb	0	; () banked
 23293  00474A  6F67               	movwf	(StringCopy@Index+1)& (0+255),b
 23294  00474C  0E00               	movlw	0
 23295  00474E  6F66               	movwf	StringCopy@Index& (0+255),b
 23296                           
 23297                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 23298  004750  0E00               	movlw	0
 23299  004752  6F67               	movwf	(StringCopy@Index+1)& (0+255),b
 23300  004754  0E00               	movlw	0
 23301  004756  6F66               	movwf	StringCopy@Index& (0+255),b
 23302  004758  D010               	goto	l1915
 23303  00475A                     
 23304                           ; BSR set to: 0
 23305                           ;sf.c: 110: {
 23306                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 23307                           
 23308                           ; BSR set to: 0
 23309  00475A  5166               	movf	StringCopy@Index& (0+255),w,b
 23310  00475C  2560               	addwf	StringCopy@SourceStr& (0+255),w,b
 23311  00475E  6ED9               	movwf	fsr2l,c
 23312  004760  5167               	movf	(StringCopy@Index+1)& (0+255),w,b
 23313  004762  2161               	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 23314  004764  6EDA               	movwf	fsr2h,c
 23315  004766  5166               	movf	StringCopy@Index& (0+255),w,b
 23316  004768  2562               	addwf	StringCopy@DestStr& (0+255),w,b
 23317  00476A  6EE1               	movwf	fsr1l,c
 23318  00476C  5167               	movf	(StringCopy@Index+1)& (0+255),w,b
 23319  00476E  2163               	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 23320  004770  6EE2               	movwf	fsr1h,c
 23321  004772  CFDF FFE7          	movff	indf2,indf1
 23322                           
 23323                           ; BSR set to: 0
 23324  004776  4B66               	infsnz	StringCopy@Index& (0+255),f,b
 23325  004778  2B67               	incf	(StringCopy@Index+1)& (0+255),f,b
 23326  00477A                     l1915:
 23327                           
 23328                           ; BSR set to: 0
 23329                           
 23330                           ; BSR set to: 0
 23331  00477A  5164               	movf	StringCopy@Len& (0+255),w,b
 23332  00477C  5D66               	subwf	StringCopy@Index& (0+255),w,b
 23333  00477E  5165               	movf	(StringCopy@Len+1)& (0+255),w,b
 23334  004780  5967               	subwfb	(StringCopy@Index+1)& (0+255),w,b
 23335  004782  B0D8               	btfsc	status,0,c
 23336  004784  0012               	return	
 23337  004786  D7E9               	goto	l1916
 23338  004788                     __end_of_StringCopy:
 23339                           	opt stack 0
 23340                           tosu	equ	0xFFF
 23341                           tosh	equ	0xFFE
 23342                           tosl	equ	0xFFD
 23343                           pclath	equ	0xFFA
 23344                           tblptru	equ	0xFF8
 23345                           tblptrh	equ	0xFF7
 23346                           tblptrl	equ	0xFF6
 23347                           tablat	equ	0xFF5
 23348                           prodh	equ	0xFF4
 23349                           prodl	equ	0xFF3
 23350                           intcon	equ	0xFF2
 23351                           intcon2	equ	0xFF1
 23352                           intcon3	equ	0xFF0
 23353                           indf0	equ	0xFEF
 23354                           postinc0	equ	0xFEE
 23355                           plusw0	equ	0xFEB
 23356                           fsr0h	equ	0xFEA
 23357                           fsr0l	equ	0xFE9
 23358                           wreg	equ	0xFE8
 23359                           indf1	equ	0xFE7
 23360                           postinc1	equ	0xFE6
 23361                           postdec1	equ	0xFE5
 23362                           fsr1h	equ	0xFE2
 23363                           fsr1l	equ	0xFE1
 23364                           indf2	equ	0xFDF
 23365                           postinc2	equ	0xFDE
 23366                           postdec2	equ	0xFDD
 23367                           plusw2	equ	0xFDB
 23368                           fsr2h	equ	0xFDA
 23369                           fsr2l	equ	0xFD9
 23370                           status	equ	0xFD8
 23371                           
 23372 ;; *************** function _ReceiveDataSm *****************
 23373 ;; Defined at:
 23374 ;;		line 291 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 23375 ;; Parameters:    Size  Location     Type
 23376 ;;		None
 23377 ;; Auto vars:     Size  Location     Type
 23378 ;;		None
 23379 ;; Return value:  Size  Location     Type
 23380 ;;                  1    wreg      void 
 23381 ;; Registers used:
 23382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23383 ;; Tracked objects:
 23384 ;;		On entry : 0/0
 23385 ;;		On exit  : 0/0
 23386 ;;		Unchanged: 0/0
 23387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23392 ;;Total ram usage:        0 bytes
 23393 ;; Hardware stack levels used:    1
 23394 ;; Hardware stack levels required when called:   12
 23395 ;; This function calls:
 23396 ;;		_GenerateEvt
 23397 ;;		_ReceiveEvt
 23398 ;; This function is called by:
 23399 ;;		_MdmWifiCmd_MainTask
 23400 ;; This function uses a non-reentrant model
 23401 ;;
 23402                           
 23403                           	psect	text110
 23404  0045AC                     __ptext110:
 23405                           	opt stack 0
 23406  0045AC                     _ReceiveDataSm:
 23407                           	opt stack 15
 23408                           
 23409                           ;mdm_wifi_cmd.c: 293: static WifiReceiveDataStateType WifiReceiveDataState = WiFiRcv_Wai
      +                          tEvt;
 23410                           ;mdm_wifi_cmd.c: 296: switch (WifiReceiveDataState)
 23411                           
 23412                           ; BSR set to: 0
 23413                           ;incstack = 0
 23414  0045AC  D019               	goto	l1013
 23415  0045AE                     
 23416                           ;mdm_wifi_cmd.c: 300: if (ReceiveEvt(&WifiReceiveNetData))
 23417  0045AE  0E58               	movlw	low _WifiReceiveNetData
 23418  0045B0  0100               	movlb	0	; () banked
 23419  0045B2  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 23420  0045B4  0E00               	movlw	high _WifiReceiveNetData
 23421  0045B6  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23422  0045B8  EC38  F025         	call	_ReceiveEvt	;wreg free
 23423  0045BC  0900               	iorlw	0
 23424  0045BE  B4D8               	btfsc	status,2,c
 23425  0045C0  0012               	return	
 23426                           
 23427                           ;mdm_wifi_cmd.c: 301: {
 23428                           ;mdm_wifi_cmd.c: 302: WifiReceiveDataState = WiFiRcv_GetData;
 23429  0045C2  0E01               	movlw	1
 23430  0045C4  0101               	movlb	1	; () banked
 23431  0045C6  6F65               	movwf	ReceiveDataSm@WifiReceiveDataState& (0+255),b
 23432                           
 23433                           ; BSR set to: 1
 23434                           ;mdm_wifi_cmd.c: 303: }
 23435                           ;mdm_wifi_cmd.c: 304: break;
 23436  0045C8  0012               	return	
 23437  0045CA                     
 23438                           ; BSR set to: 1
 23439                           ;mdm_wifi_cmd.c: 308: GenerateEvt(&WifiReceiveData);
 23440                           
 23441                           ; BSR set to: 1
 23442  0045CA  0E55               	movlw	low _WifiReceiveData
 23443  0045CC  0100               	movlb	0	; () banked
 23444  0045CE  6F60               	movwf	GenerateEvt@Event& (0+255),b
 23445  0045D0  0E00               	movlw	high _WifiReceiveData
 23446  0045D2  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 23447  0045D4  ECD5  F026         	call	_GenerateEvt	;wreg free
 23448                           
 23449                           ;mdm_wifi_cmd.c: 310: WifiReceiveDataState = WiFiRcv_WaitEvt;
 23450  0045D8  0E00               	movlw	0
 23451  0045DA  0101               	movlb	1	; () banked
 23452  0045DC  6F65               	movwf	ReceiveDataSm@WifiReceiveDataState& (0+255),b
 23453                           
 23454                           ; BSR set to: 1
 23455                           ;mdm_wifi_cmd.c: 315: }
 23456                           
 23457                           ; BSR set to: 1
 23458                           ;mdm_wifi_cmd.c: 314: break;
 23459                           
 23460                           ;mdm_wifi_cmd.c: 313: default:
 23461                           
 23462                           ;mdm_wifi_cmd.c: 311: break;
 23463  0045DE  0012               	return	
 23464  0045E0                     l1013:
 23465                           
 23466                           ; BSR set to: 1
 23467  0045E0  0101               	movlb	1	; () banked
 23468  0045E2  5165               	movf	ReceiveDataSm@WifiReceiveDataState& (0+255),w,b
 23469                           
 23470                           ; Switch size 1, requested type "space"
 23471                           ; Number of cases is 2, Range of values is 0 to 1
 23472                           ; switch strategies available:
 23473                           ; Name         Instructions Cycles
 23474                           ; simple_byte            7     4 (average)
 23475                           ;	Chosen strategy is simple_byte
 23476  0045E4  0A00               	xorlw	0	; case 0
 23477  0045E6  B4D8               	btfsc	status,2,c
 23478  0045E8  D7E2               	goto	l1014
 23479  0045EA  0A01               	xorlw	1	; case 1
 23480  0045EC  A4D8               	btfss	status,2,c
 23481  0045EE  0012               	return	
 23482  0045F0  D7EC               	goto	l1017
 23483  0045F2                     __end_of_ReceiveDataSm:
 23484                           	opt stack 0
 23485                           tosu	equ	0xFFF
 23486                           tosh	equ	0xFFE
 23487                           tosl	equ	0xFFD
 23488                           pclath	equ	0xFFA
 23489                           tblptru	equ	0xFF8
 23490                           tblptrh	equ	0xFF7
 23491                           tblptrl	equ	0xFF6
 23492                           tablat	equ	0xFF5
 23493                           prodh	equ	0xFF4
 23494                           prodl	equ	0xFF3
 23495                           intcon	equ	0xFF2
 23496                           intcon2	equ	0xFF1
 23497                           intcon3	equ	0xFF0
 23498                           indf0	equ	0xFEF
 23499                           postinc0	equ	0xFEE
 23500                           plusw0	equ	0xFEB
 23501                           fsr0h	equ	0xFEA
 23502                           fsr0l	equ	0xFE9
 23503                           wreg	equ	0xFE8
 23504                           indf1	equ	0xFE7
 23505                           postinc1	equ	0xFE6
 23506                           postdec1	equ	0xFE5
 23507                           fsr1h	equ	0xFE2
 23508                           fsr1l	equ	0xFE1
 23509                           indf2	equ	0xFDF
 23510                           postinc2	equ	0xFDE
 23511                           postdec2	equ	0xFDD
 23512                           plusw2	equ	0xFDB
 23513                           fsr2h	equ	0xFDA
 23514                           fsr2l	equ	0xFD9
 23515                           status	equ	0xFD8
 23516                           
 23517 ;; *************** function _OsTmr_StartTimer *****************
 23518 ;; Defined at:
 23519 ;;		line 117 in file "../Source/c/02_Osl/os_timers.c"
 23520 ;; Parameters:    Size  Location     Type
 23521 ;;  Timer           2    4[BANK0 ] PTR struct _SwTimerType
 23522 ;;		 -> Term_MainSm@TermDelay(10), Led_MainTask@LedTimer1(10), SendDataSm@SwTimer(10), 
 23523 ;;  Timeout         4    6[BANK0 ] unsigned long 
 23524 ;; Auto vars:     Size  Location     Type
 23525 ;;		None
 23526 ;; Return value:  Size  Location     Type
 23527 ;;                  1    wreg      void 
 23528 ;; Registers used:
 23529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23530 ;; Tracked objects:
 23531 ;;		On entry : 0/0
 23532 ;;		On exit  : 0/0
 23533 ;;		Unchanged: 0/0
 23534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23535 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23538 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23539 ;;Total ram usage:        6 bytes
 23540 ;; Hardware stack levels used:    1
 23541 ;; Hardware stack levels required when called:   12
 23542 ;; This function calls:
 23543 ;;		_GetOsTickCounter
 23544 ;; This function is called by:
 23545 ;;		_SendDataSm
 23546 ;;		_Led_MainTask
 23547 ;;		_Term_MainSm
 23548 ;; This function uses a non-reentrant model
 23549 ;;
 23550                           
 23551                           	psect	text111
 23552  0040EA                     __ptext111:
 23553                           	opt stack 0
 23554  0040EA                     _OsTmr_StartTimer:
 23555                           	opt stack 14
 23556                           
 23557                           ;os_timers.c: 120: Timer->Status = SwTmrNotExpired;
 23558                           
 23559                           ;incstack = 0
 23560  0040EA  0100               	movlb	0	; () banked
 23561  0040EC  EE20 F001          	lfsr	2,1
 23562  0040F0  5164               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 23563  0040F2  26D9               	addwf	fsr2l,f,c
 23564  0040F4  5165               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 23565  0040F6  22DA               	addwfc	fsr2h,f,c
 23566  0040F8  0E00               	movlw	0
 23567  0040FA  6EDF               	movwf	indf2,c
 23568                           
 23569                           ; BSR set to: 0
 23570                           ;os_timers.c: 122: Timer->StartTime = GetOsTickCounter();
 23571  0040FC  EC17  F027         	call	_GetOsTickCounter	;wreg free
 23572  004100  0100               	movlb	0	; () banked
 23573  004102  EE20 F002          	lfsr	2,2
 23574  004106  5164               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 23575  004108  26D9               	addwf	fsr2l,f,c
 23576  00410A  5165               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 23577  00410C  22DA               	addwfc	fsr2h,f,c
 23578  00410E  C060  FFDE         	movff	?_GetOsTickCounter,postinc2
 23579  004112  C061  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 23580  004116  C062  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 23581  00411A  C063  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 23582                           
 23583                           ; BSR set to: 0
 23584                           ;os_timers.c: 124: Timer->TargetTime = Timeout;
 23585  00411E  EE20 F006          	lfsr	2,6
 23586  004122  5164               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 23587  004124  26D9               	addwf	fsr2l,f,c
 23588  004126  5165               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 23589  004128  22DA               	addwfc	fsr2h,f,c
 23590  00412A  C066  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 23591  00412E  C067  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 23592  004132  C068  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 23593  004136  C069  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 23594                           
 23595                           ; BSR set to: 0
 23596                           ;os_timers.c: 126: Timer->Enabled = 1u;
 23597  00413A  C064  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 23598  00413E  C065  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 23599  004142  0E01               	movlw	1
 23600  004144  6EDF               	movwf	indf2,c
 23601                           
 23602                           ; BSR set to: 0
 23603  004146  0012               	return		;funcret
 23604  004148                     __end_of_OsTmr_StartTimer:
 23605                           	opt stack 0
 23606                           tosu	equ	0xFFF
 23607                           tosh	equ	0xFFE
 23608                           tosl	equ	0xFFD
 23609                           pclath	equ	0xFFA
 23610                           tblptru	equ	0xFF8
 23611                           tblptrh	equ	0xFF7
 23612                           tblptrl	equ	0xFF6
 23613                           tablat	equ	0xFF5
 23614                           prodh	equ	0xFF4
 23615                           prodl	equ	0xFF3
 23616                           intcon	equ	0xFF2
 23617                           intcon2	equ	0xFF1
 23618                           intcon3	equ	0xFF0
 23619                           indf0	equ	0xFEF
 23620                           postinc0	equ	0xFEE
 23621                           plusw0	equ	0xFEB
 23622                           fsr0h	equ	0xFEA
 23623                           fsr0l	equ	0xFE9
 23624                           wreg	equ	0xFE8
 23625                           indf1	equ	0xFE7
 23626                           postinc1	equ	0xFE6
 23627                           postdec1	equ	0xFE5
 23628                           fsr1h	equ	0xFE2
 23629                           fsr1l	equ	0xFE1
 23630                           indf2	equ	0xFDF
 23631                           postinc2	equ	0xFDE
 23632                           postdec2	equ	0xFDD
 23633                           plusw2	equ	0xFDB
 23634                           fsr2h	equ	0xFDA
 23635                           fsr2l	equ	0xFD9
 23636                           status	equ	0xFD8
 23637                           
 23638 ;; *************** function _GetOsTickCounter *****************
 23639 ;; Defined at:
 23640 ;;		line 69 in file "../Source/c/02_Osl/os_timers.c"
 23641 ;; Parameters:    Size  Location     Type
 23642 ;;		None
 23643 ;; Auto vars:     Size  Location     Type
 23644 ;;		None
 23645 ;; Return value:  Size  Location     Type
 23646 ;;                  4    0[BANK0 ] unsigned long 
 23647 ;; Registers used:
 23648 ;;		None
 23649 ;; Tracked objects:
 23650 ;;		On entry : 0/0
 23651 ;;		On exit  : 0/0
 23652 ;;		Unchanged: 0/0
 23653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23654 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23657 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23658 ;;Total ram usage:        4 bytes
 23659 ;; Hardware stack levels used:    1
 23660 ;; Hardware stack levels required when called:   11
 23661 ;; This function calls:
 23662 ;;		Nothing
 23663 ;; This function is called by:
 23664 ;;		_GetElapsedTime
 23665 ;;		_OsTmr_StartTimer
 23666 ;;		_OsTmr_GetElapsedTime
 23667 ;; This function uses a non-reentrant model
 23668 ;;
 23669                           
 23670                           	psect	text112
 23671  004E2E                     __ptext112:
 23672                           	opt stack 0
 23673  004E2E                     _GetOsTickCounter:
 23674                           	opt stack 14
 23675                           
 23676                           ;os_timers.c: 72: return OsTmr_OsTickCounter;
 23677                           
 23678                           ; BSR set to: 0
 23679                           ;incstack = 0
 23680  004E2E  C12E  F060         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 23681  004E32  C12F  F061         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 23682  004E36  C130  F062         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 23683  004E3A  C131  F063         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 23684  004E3E  0012               	return		;funcret
 23685  004E40                     __end_of_GetOsTickCounter:
 23686                           	opt stack 0
 23687                           tosu	equ	0xFFF
 23688                           tosh	equ	0xFFE
 23689                           tosl	equ	0xFFD
 23690                           pclath	equ	0xFFA
 23691                           tblptru	equ	0xFF8
 23692                           tblptrh	equ	0xFF7
 23693                           tblptrl	equ	0xFF6
 23694                           tablat	equ	0xFF5
 23695                           prodh	equ	0xFF4
 23696                           prodl	equ	0xFF3
 23697                           intcon	equ	0xFF2
 23698                           intcon2	equ	0xFF1
 23699                           intcon3	equ	0xFF0
 23700                           indf0	equ	0xFEF
 23701                           postinc0	equ	0xFEE
 23702                           plusw0	equ	0xFEB
 23703                           fsr0h	equ	0xFEA
 23704                           fsr0l	equ	0xFE9
 23705                           wreg	equ	0xFE8
 23706                           indf1	equ	0xFE7
 23707                           postinc1	equ	0xFE6
 23708                           postdec1	equ	0xFE5
 23709                           fsr1h	equ	0xFE2
 23710                           fsr1l	equ	0xFE1
 23711                           indf2	equ	0xFDF
 23712                           postinc2	equ	0xFDE
 23713                           postdec2	equ	0xFDD
 23714                           plusw2	equ	0xFDB
 23715                           fsr2h	equ	0xFDA
 23716                           fsr2l	equ	0xFD9
 23717                           status	equ	0xFD8
 23718                           
 23719 ;; *************** function _OsAlrm_SetOsAlarm *****************
 23720 ;; Defined at:
 23721 ;;		line 76 in file "../Source/c/02_Osl/os_alarms.c"
 23722 ;; Parameters:    Size  Location     Type
 23723 ;;  OsAlarmId       2    6[BANK0 ] unsigned short 
 23724 ;;  OsAlarmTimeo    4    8[BANK0 ] unsigned long 
 23725 ;;  AlarmCallbac    2   12[BANK0 ] PTR FTN()void 
 23726 ;;		 -> I2cDummyTx(1), 
 23727 ;; Auto vars:     Size  Location     Type
 23728 ;;		None
 23729 ;; Return value:  Size  Location     Type
 23730 ;;                  1    wreg      void 
 23731 ;; Registers used:
 23732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23733 ;; Tracked objects:
 23734 ;;		On entry : 0/0
 23735 ;;		On exit  : 0/0
 23736 ;;		Unchanged: 0/0
 23737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23738 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23741 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23742 ;;Total ram usage:        8 bytes
 23743 ;; Hardware stack levels used:    1
 23744 ;; Hardware stack levels required when called:   12
 23745 ;; This function calls:
 23746 ;;		___wmul
 23747 ;; This function is called by:
 23748 ;;		_I2cSlv_MainTask
 23749 ;; This function uses a non-reentrant model
 23750 ;;
 23751                           
 23752                           	psect	text113
 23753  002E18                     __ptext113:
 23754                           	opt stack 0
 23755  002E18                     _OsAlrm_SetOsAlarm:
 23756                           	opt stack 15
 23757                           
 23758                           ;os_alarms.c: 79: OsAlarms[OsAlarmId].Enabled = 1u;
 23759                           
 23760                           ;incstack = 0
 23761  002E18  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23762  002E1C  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23763  002E20  0E00               	movlw	0
 23764  002E22  0100               	movlb	0	; () banked
 23765  002E24  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23766  002E26  0E0B               	movlw	11
 23767  002E28  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23768  002E2A  EC8F  F025         	call	___wmul	;wreg free
 23769  002E2E  0E00               	movlw	low _OsAlarms
 23770  002E30  0100               	movlb	0	; () banked
 23771  002E32  2560               	addwf	?___wmul& (0+255),w,b
 23772  002E34  6ED9               	movwf	fsr2l,c
 23773  002E36  0E05               	movlw	high _OsAlarms
 23774  002E38  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23775  002E3A  6EDA               	movwf	fsr2h,c
 23776  002E3C  0E01               	movlw	1
 23777  002E3E  6EDF               	movwf	indf2,c
 23778                           
 23779                           ;os_alarms.c: 81: OsAlarms[OsAlarmId].Counter = 0;
 23780  002E40  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23781  002E44  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23782  002E48  0E00               	movlw	0
 23783  002E4A  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23784  002E4C  0E0B               	movlw	11
 23785  002E4E  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23786  002E50  EC8F  F025         	call	___wmul	;wreg free
 23787  002E54  0E01               	movlw	1
 23788  002E56  0100               	movlb	0	; () banked
 23789  002E58  2760               	addwf	?___wmul& (0+255),f,b
 23790  002E5A  0E00               	movlw	0
 23791  002E5C  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 23792  002E5E  0E00               	movlw	low _OsAlarms
 23793  002E60  2560               	addwf	?___wmul& (0+255),w,b
 23794  002E62  6ED9               	movwf	fsr2l,c
 23795  002E64  0E05               	movlw	high _OsAlarms
 23796  002E66  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23797  002E68  6EDA               	movwf	fsr2h,c
 23798  002E6A  6ADE               	clrf	postinc2,c
 23799  002E6C  6ADE               	clrf	postinc2,c
 23800  002E6E  6ADE               	clrf	postinc2,c
 23801  002E70  6ADD               	clrf	postdec2,c
 23802                           
 23803                           ;os_alarms.c: 83: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 23804  002E72  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23805  002E76  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23806  002E7A  0E00               	movlw	0
 23807  002E7C  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23808  002E7E  0E0B               	movlw	11
 23809  002E80  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23810  002E82  EC8F  F025         	call	___wmul	;wreg free
 23811  002E86  0E05               	movlw	5
 23812  002E88  0100               	movlb	0	; () banked
 23813  002E8A  2760               	addwf	?___wmul& (0+255),f,b
 23814  002E8C  0E00               	movlw	0
 23815  002E8E  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 23816  002E90  0E00               	movlw	low _OsAlarms
 23817  002E92  2560               	addwf	?___wmul& (0+255),w,b
 23818  002E94  6ED9               	movwf	fsr2l,c
 23819  002E96  0E05               	movlw	high _OsAlarms
 23820  002E98  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23821  002E9A  6EDA               	movwf	fsr2h,c
 23822  002E9C  C068  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 23823  002EA0  C069  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 23824  002EA4  C06A  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 23825  002EA8  C06B  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 23826                           
 23827                           ;os_alarms.c: 85: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 23828  002EAC  C066  F060         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 23829  002EB0  C067  F061         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 23830  002EB4  0E00               	movlw	0
 23831  002EB6  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 23832  002EB8  0E0B               	movlw	11
 23833  002EBA  6F62               	movwf	___wmul@multiplicand& (0+255),b
 23834  002EBC  EC8F  F025         	call	___wmul	;wreg free
 23835  002EC0  0E09               	movlw	9
 23836  002EC2  0100               	movlb	0	; () banked
 23837  002EC4  2760               	addwf	?___wmul& (0+255),f,b
 23838  002EC6  0E00               	movlw	0
 23839  002EC8  2361               	addwfc	(?___wmul+1)& (0+255),f,b
 23840  002ECA  0E00               	movlw	low _OsAlarms
 23841  002ECC  2560               	addwf	?___wmul& (0+255),w,b
 23842  002ECE  6ED9               	movwf	fsr2l,c
 23843  002ED0  0E05               	movlw	high _OsAlarms
 23844  002ED2  2161               	addwfc	(?___wmul+1)& (0+255),w,b
 23845  002ED4  6EDA               	movwf	fsr2h,c
 23846  002ED6  C06C  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 23847  002EDA  C06D  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 23848                           
 23849                           ; BSR set to: 0
 23850  002EDE  0012               	return		;funcret
 23851  002EE0                     __end_of_OsAlrm_SetOsAlarm:
 23852                           	opt stack 0
 23853                           tosu	equ	0xFFF
 23854                           tosh	equ	0xFFE
 23855                           tosl	equ	0xFFD
 23856                           pclath	equ	0xFFA
 23857                           tblptru	equ	0xFF8
 23858                           tblptrh	equ	0xFF7
 23859                           tblptrl	equ	0xFF6
 23860                           tablat	equ	0xFF5
 23861                           prodh	equ	0xFF4
 23862                           prodl	equ	0xFF3
 23863                           intcon	equ	0xFF2
 23864                           intcon2	equ	0xFF1
 23865                           intcon3	equ	0xFF0
 23866                           indf0	equ	0xFEF
 23867                           postinc0	equ	0xFEE
 23868                           plusw0	equ	0xFEB
 23869                           fsr0h	equ	0xFEA
 23870                           fsr0l	equ	0xFE9
 23871                           wreg	equ	0xFE8
 23872                           indf1	equ	0xFE7
 23873                           postinc1	equ	0xFE6
 23874                           postdec1	equ	0xFE5
 23875                           fsr1h	equ	0xFE2
 23876                           fsr1l	equ	0xFE1
 23877                           indf2	equ	0xFDF
 23878                           postinc2	equ	0xFDE
 23879                           postdec2	equ	0xFDD
 23880                           plusw2	equ	0xFDB
 23881                           fsr2h	equ	0xFDA
 23882                           fsr2l	equ	0xFD9
 23883                           status	equ	0xFD8
 23884                           
 23885 ;; *************** function ___wmul *****************
 23886 ;; Defined at:
 23887 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 23888 ;; Parameters:    Size  Location     Type
 23889 ;;  multiplier      2    0[BANK0 ] unsigned int 
 23890 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 23891 ;; Auto vars:     Size  Location     Type
 23892 ;;  product         2    4[BANK0 ] unsigned int 
 23893 ;; Return value:  Size  Location     Type
 23894 ;;                  2    0[BANK0 ] unsigned int 
 23895 ;; Registers used:
 23896 ;;		wreg, status,2, status,0, prodl, prodh
 23897 ;; Tracked objects:
 23898 ;;		On entry : 0/0
 23899 ;;		On exit  : 0/0
 23900 ;;		Unchanged: 0/0
 23901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23902 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23903 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23905 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23906 ;;Total ram usage:        6 bytes
 23907 ;; Hardware stack levels used:    1
 23908 ;; Hardware stack levels required when called:   11
 23909 ;; This function calls:
 23910 ;;		Nothing
 23911 ;; This function is called by:
 23912 ;;		_OsAlrm_SetOsAlarm
 23913 ;;		_atoi
 23914 ;; This function uses a non-reentrant model
 23915 ;;
 23916                           
 23917                           	psect	text114
 23918  004B1E                     __ptext114:
 23919                           	opt stack 0
 23920  004B1E                     ___wmul:
 23921                           	opt stack 13
 23922                           
 23923                           ; BSR set to: 0
 23924                           ;incstack = 0
 23925  004B1E  0100               	movlb	0	; () banked
 23926  004B20  5160               	movf	___wmul@multiplier& (0+255),w,b
 23927  004B22  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23928  004B24  CFF3 F064          	movff	prodl,___wmul@product
 23929  004B28  CFF4 F065          	movff	prodh,___wmul@product+1
 23930  004B2C  5160               	movf	___wmul@multiplier& (0+255),w,b
 23931  004B2E  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 23932  004B30  50F3               	movf	prodl,w,c
 23933  004B32  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23934  004B34  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 23935  004B36  0362               	mulwf	___wmul@multiplicand& (0+255),b
 23936  004B38  50F3               	movf	prodl,w,c
 23937  004B3A  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 23938                           
 23939                           ; BSR set to: 0
 23940  004B3C  C064  F060         	movff	___wmul@product,?___wmul
 23941  004B40  C065  F061         	movff	___wmul@product+1,?___wmul+1
 23942  004B44  0012               	return	
 23943  004B46                     __end_of___wmul:
 23944                           	opt stack 0
 23945                           tosu	equ	0xFFF
 23946                           tosh	equ	0xFFE
 23947                           tosl	equ	0xFFD
 23948                           pclath	equ	0xFFA
 23949                           tblptru	equ	0xFF8
 23950                           tblptrh	equ	0xFF7
 23951                           tblptrl	equ	0xFF6
 23952                           tablat	equ	0xFF5
 23953                           prodh	equ	0xFF4
 23954                           prodl	equ	0xFF3
 23955                           intcon	equ	0xFF2
 23956                           intcon2	equ	0xFF1
 23957                           intcon3	equ	0xFF0
 23958                           indf0	equ	0xFEF
 23959                           postinc0	equ	0xFEE
 23960                           plusw0	equ	0xFEB
 23961                           fsr0h	equ	0xFEA
 23962                           fsr0l	equ	0xFE9
 23963                           wreg	equ	0xFE8
 23964                           indf1	equ	0xFE7
 23965                           postinc1	equ	0xFE6
 23966                           postdec1	equ	0xFE5
 23967                           fsr1h	equ	0xFE2
 23968                           fsr1l	equ	0xFE1
 23969                           indf2	equ	0xFDF
 23970                           postinc2	equ	0xFDE
 23971                           postdec2	equ	0xFDD
 23972                           plusw2	equ	0xFDB
 23973                           fsr2h	equ	0xFDA
 23974                           fsr2l	equ	0xFD9
 23975                           status	equ	0xFD8
 23976                           
 23977 ;; *************** function _I2c_InitI2cModule *****************
 23978 ;; Defined at:
 23979 ;;		line 228 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 23980 ;; Parameters:    Size  Location     Type
 23981 ;;  I2cConfig       2   37[BANK0 ] PTR struct _I2cConfig
 23982 ;;		 -> I2cConfig(10), 
 23983 ;; Auto vars:     Size  Location     Type
 23984 ;;		None
 23985 ;; Return value:  Size  Location     Type
 23986 ;;                  1    wreg      void 
 23987 ;; Registers used:
 23988 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23989 ;; Tracked objects:
 23990 ;;		On entry : 0/0
 23991 ;;		On exit  : 0/0
 23992 ;;		Unchanged: 0/0
 23993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23994 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23996 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23997 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23998 ;;Total ram usage:        4 bytes
 23999 ;; Hardware stack levels used:    1
 24000 ;; Hardware stack levels required when called:   13
 24001 ;; This function calls:
 24002 ;;		_SetBaudRate
 24003 ;; This function is called by:
 24004 ;;		_I2cSlv_MainTask
 24005 ;; This function uses a non-reentrant model
 24006 ;;
 24007                           
 24008                           	psect	text115
 24009  003D3A                     __ptext115:
 24010                           	opt stack 0
 24011  003D3A                     _I2c_InitI2cModule:
 24012                           	opt stack 14
 24013                           
 24014                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 24015                           
 24016                           ; BSR set to: 0
 24017                           ;incstack = 0
 24018  003D3A  8295               	bsf	3989,1,c	;volatile
 24019                           
 24020                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 24021  003D3C  8095               	bsf	3989,0,c	;volatile
 24022                           
 24023                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 24024  003D3E  C085  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 24025  003D42  C086  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 24026  003D46  CFDE F079          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 24027  003D4A  CFDE F07A          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 24028  003D4E  CFDE F07B          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 24029  003D52  CFDE F07C          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 24030  003D56  0100               	movlb	0	; () banked
 24031  003D58  EE20 F004          	lfsr	2,4
 24032  003D5C  5185               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24033  003D5E  26D9               	addwf	fsr2l,f,c
 24034  003D60  5186               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24035  003D62  22DA               	addwfc	fsr2h,f,c
 24036  003D64  CFDE F07D          	movff	postinc2,SetBaudRate@McuClockHz
 24037  003D68  CFDE F07E          	movff	postinc2,SetBaudRate@McuClockHz+1
 24038  003D6C  CFDE F07F          	movff	postinc2,SetBaudRate@McuClockHz+2
 24039  003D70  CFDE F080          	movff	postinc2,SetBaudRate@McuClockHz+3
 24040  003D74  ECF8  F021         	call	_SetBaudRate	;wreg free
 24041                           
 24042                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 24043  003D78  0100               	movlb	0	; () banked
 24044  003D7A  EE20 F008          	lfsr	2,8
 24045  003D7E  5185               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24046  003D80  26D9               	addwf	fsr2l,f,c
 24047  003D82  5186               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24048  003D84  22DA               	addwfc	fsr2h,f,c
 24049  003D86  50DF               	movf	indf2,w,c
 24050  003D88  1272               	iorwf	3954,f,c	;volatile
 24051                           
 24052                           ; BSR set to: 0
 24053                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 24054  003D8A  EE20 F009          	lfsr	2,9
 24055  003D8E  5185               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24056  003D90  26D9               	addwf	fsr2l,f,c
 24057  003D92  5186               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24058  003D94  22DA               	addwfc	fsr2h,f,c
 24059  003D96  50DF               	movf	indf2,w,c
 24060  003D98  6F87               	movwf	??_I2c_InitI2cModule& (0+255),b
 24061  003D9A  0E05               	movlw	5
 24062  003D9C  6F88               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 24063  003D9E                     u6795:
 24064  003D9E  90D8               	bcf	status,0,c
 24065  003DA0  3787               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 24066  003DA2  2F88               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 24067  003DA4  D7FC               	goto	u6795
 24068  003DA6  5187               	movf	??_I2c_InitI2cModule& (0+255),w,b
 24069  003DA8  1272               	iorwf	3954,f,c	;volatile
 24070                           
 24071                           ; BSR set to: 0
 24072  003DAA  0012               	return		;funcret
 24073  003DAC                     __end_of_I2c_InitI2cModule:
 24074                           	opt stack 0
 24075                           tosu	equ	0xFFF
 24076                           tosh	equ	0xFFE
 24077                           tosl	equ	0xFFD
 24078                           pclath	equ	0xFFA
 24079                           tblptru	equ	0xFF8
 24080                           tblptrh	equ	0xFF7
 24081                           tblptrl	equ	0xFF6
 24082                           tablat	equ	0xFF5
 24083                           prodh	equ	0xFF4
 24084                           prodl	equ	0xFF3
 24085                           intcon	equ	0xFF2
 24086                           intcon2	equ	0xFF1
 24087                           intcon3	equ	0xFF0
 24088                           indf0	equ	0xFEF
 24089                           postinc0	equ	0xFEE
 24090                           plusw0	equ	0xFEB
 24091                           fsr0h	equ	0xFEA
 24092                           fsr0l	equ	0xFE9
 24093                           wreg	equ	0xFE8
 24094                           indf1	equ	0xFE7
 24095                           postinc1	equ	0xFE6
 24096                           postdec1	equ	0xFE5
 24097                           fsr1h	equ	0xFE2
 24098                           fsr1l	equ	0xFE1
 24099                           indf2	equ	0xFDF
 24100                           postinc2	equ	0xFDE
 24101                           postdec2	equ	0xFDD
 24102                           plusw2	equ	0xFDB
 24103                           fsr2h	equ	0xFDA
 24104                           fsr2l	equ	0xFD9
 24105                           status	equ	0xFD8
 24106                           
 24107 ;; *************** function _SetBaudRate *****************
 24108 ;; Defined at:
 24109 ;;		line 78 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 24110 ;; Parameters:    Size  Location     Type
 24111 ;;  DesiredI2cBu    4   25[BANK0 ] unsigned long 
 24112 ;;  McuClockHz      4   29[BANK0 ] unsigned long 
 24113 ;; Auto vars:     Size  Location     Type
 24114 ;;		None
 24115 ;; Return value:  Size  Location     Type
 24116 ;;                  1    wreg      void 
 24117 ;; Registers used:
 24118 ;;		wreg, status,2, status,0, cstack
 24119 ;; Tracked objects:
 24120 ;;		On entry : 0/0
 24121 ;;		On exit  : 0/0
 24122 ;;		Unchanged: 0/0
 24123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24124 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24126 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24127 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24128 ;;Total ram usage:       12 bytes
 24129 ;; Hardware stack levels used:    1
 24130 ;; Hardware stack levels required when called:   12
 24131 ;; This function calls:
 24132 ;;		___lldiv
 24133 ;; This function is called by:
 24134 ;;		_I2c_InitI2cModule
 24135 ;; This function uses a non-reentrant model
 24136 ;;
 24137                           
 24138                           	psect	text116
 24139  0043F0                     __ptext116:
 24140                           	opt stack 0
 24141  0043F0                     _SetBaudRate:
 24142                           	opt stack 14
 24143                           
 24144                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 24145                           
 24146                           ; BSR set to: 0
 24147                           ;incstack = 0
 24148  0043F0  C07D  F06C         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 24149  0043F4  C07E  F06D         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 24150  0043F8  C07F  F06E         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 24151  0043FC  C080  F06F         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 24152  004400  C079  F081         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 24153  004404  C07A  F082         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 24154  004408  C07B  F083         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 24155  00440C  C07C  F084         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 24156  004410  0E02               	movlw	2
 24157  004412                     u5965:
 24158  004412  90D8               	bcf	status,0,c
 24159  004414  0100               	movlb	0	; () banked
 24160  004416  3781               	rlcf	??_SetBaudRate& (0+255),f,b
 24161  004418  3782               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 24162  00441A  3783               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 24163  00441C  3784               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 24164  00441E  2EE8               	decfsz	wreg,f,c
 24165  004420  D7F8               	goto	u5965
 24166  004422  C081  F070         	movff	??_SetBaudRate,___lldiv@divisor
 24167  004426  C082  F071         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 24168  00442A  C083  F072         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 24169  00442E  C084  F073         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 24170  004432  ECE5  F01D         	call	___lldiv	;wreg free
 24171  004436  0100               	movlb	0	; () banked
 24172  004438  056C               	decf	?___lldiv& (0+255),w,b
 24173  00443A  6E74               	movwf	3956,c	;volatile
 24174                           
 24175                           ; BSR set to: 0
 24176  00443C  0012               	return		;funcret
 24177  00443E                     __end_of_SetBaudRate:
 24178                           	opt stack 0
 24179                           tosu	equ	0xFFF
 24180                           tosh	equ	0xFFE
 24181                           tosl	equ	0xFFD
 24182                           pclath	equ	0xFFA
 24183                           tblptru	equ	0xFF8
 24184                           tblptrh	equ	0xFF7
 24185                           tblptrl	equ	0xFF6
 24186                           tablat	equ	0xFF5
 24187                           prodh	equ	0xFF4
 24188                           prodl	equ	0xFF3
 24189                           intcon	equ	0xFF2
 24190                           intcon2	equ	0xFF1
 24191                           intcon3	equ	0xFF0
 24192                           indf0	equ	0xFEF
 24193                           postinc0	equ	0xFEE
 24194                           plusw0	equ	0xFEB
 24195                           fsr0h	equ	0xFEA
 24196                           fsr0l	equ	0xFE9
 24197                           wreg	equ	0xFE8
 24198                           indf1	equ	0xFE7
 24199                           postinc1	equ	0xFE6
 24200                           postdec1	equ	0xFE5
 24201                           fsr1h	equ	0xFE2
 24202                           fsr1l	equ	0xFE1
 24203                           indf2	equ	0xFDF
 24204                           postinc2	equ	0xFDE
 24205                           postdec2	equ	0xFDD
 24206                           plusw2	equ	0xFDB
 24207                           fsr2h	equ	0xFDA
 24208                           fsr2l	equ	0xFD9
 24209                           status	equ	0xFD8
 24210                           
 24211 ;; *************** function ___lldiv *****************
 24212 ;; Defined at:
 24213 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 24214 ;; Parameters:    Size  Location     Type
 24215 ;;  dividend        4   12[BANK0 ] unsigned long 
 24216 ;;  divisor         4   16[BANK0 ] unsigned long 
 24217 ;; Auto vars:     Size  Location     Type
 24218 ;;  quotient        4   20[BANK0 ] unsigned long 
 24219 ;;  counter         1   24[BANK0 ] unsigned char 
 24220 ;; Return value:  Size  Location     Type
 24221 ;;                  4   12[BANK0 ] unsigned long 
 24222 ;; Registers used:
 24223 ;;		wreg, status,2, status,0
 24224 ;; Tracked objects:
 24225 ;;		On entry : 0/0
 24226 ;;		On exit  : 0/0
 24227 ;;		Unchanged: 0/0
 24228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24229 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24230 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24232 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24233 ;;Total ram usage:       13 bytes
 24234 ;; Hardware stack levels used:    1
 24235 ;; Hardware stack levels required when called:   11
 24236 ;; This function calls:
 24237 ;;		Nothing
 24238 ;; This function is called by:
 24239 ;;		_SetBaudRate
 24240 ;;		_Tmr_TmrBPrSet
 24241 ;;		_SetUartBaudRate
 24242 ;; This function uses a non-reentrant model
 24243 ;;
 24244                           
 24245                           	psect	text117
 24246  003BCA                     __ptext117:
 24247                           	opt stack 0
 24248  003BCA                     ___lldiv:
 24249                           	opt stack 15
 24250                           
 24251                           ; BSR set to: 0
 24252                           ;incstack = 0
 24253  003BCA  0E00               	movlw	0
 24254  003BCC  0100               	movlb	0	; () banked
 24255  003BCE  6F74               	movwf	___lldiv@quotient& (0+255),b
 24256  003BD0  0E00               	movlw	0
 24257  003BD2  6F75               	movwf	(___lldiv@quotient+1)& (0+255),b
 24258  003BD4  0E00               	movlw	0
 24259  003BD6  6F76               	movwf	(___lldiv@quotient+2)& (0+255),b
 24260  003BD8  0E00               	movlw	0
 24261  003BDA  6F77               	movwf	(___lldiv@quotient+3)& (0+255),b
 24262                           
 24263                           ; BSR set to: 0
 24264  003BDC  5170               	movf	___lldiv@divisor& (0+255),w,b
 24265  003BDE  1171               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 24266  003BE0  1172               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 24267  003BE2  1173               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 24268  003BE4  B4D8               	btfsc	status,2,c
 24269  003BE6  D02A               	goto	l2508
 24270                           
 24271                           ; BSR set to: 0
 24272  003BE8  0E01               	movlw	1
 24273  003BEA  6F78               	movwf	___lldiv@counter& (0+255),b
 24274  003BEC  D006               	goto	l2503
 24275  003BEE                     
 24276                           ; BSR set to: 0
 24277                           
 24278                           ; BSR set to: 0
 24279  003BEE  90D8               	bcf	status,0,c
 24280  003BF0  3770               	rlcf	___lldiv@divisor& (0+255),f,b
 24281  003BF2  3771               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 24282  003BF4  3772               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 24283  003BF6  3773               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 24284  003BF8  2B78               	incf	___lldiv@counter& (0+255),f,b
 24285  003BFA                     l2503:
 24286                           
 24287                           ; BSR set to: 0
 24288                           
 24289                           ; BSR set to: 0
 24290  003BFA  AF73               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 24291  003BFC  D7F8               	goto	l2504
 24292  003BFE                     u5890:
 24293                           
 24294                           ; BSR set to: 0
 24295                           
 24296                           ; BSR set to: 0
 24297                           
 24298                           ; BSR set to: 0
 24299  003BFE  90D8               	bcf	status,0,c
 24300  003C00  3774               	rlcf	___lldiv@quotient& (0+255),f,b
 24301  003C02  3775               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 24302  003C04  3776               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 24303  003C06  3777               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 24304                           
 24305                           ; BSR set to: 0
 24306  003C08  5170               	movf	___lldiv@divisor& (0+255),w,b
 24307  003C0A  5D6C               	subwf	___lldiv@dividend& (0+255),w,b
 24308  003C0C  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24309  003C0E  596D               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 24310  003C10  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24311  003C12  596E               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 24312  003C14  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24313  003C16  596F               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 24314  003C18  A0D8               	btfss	status,0,c
 24315  003C1A  D009               	goto	l2507
 24316                           
 24317                           ; BSR set to: 0
 24318  003C1C  5170               	movf	___lldiv@divisor& (0+255),w,b
 24319  003C1E  5F6C               	subwf	___lldiv@dividend& (0+255),f,b
 24320  003C20  5171               	movf	(___lldiv@divisor+1)& (0+255),w,b
 24321  003C22  5B6D               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 24322  003C24  5172               	movf	(___lldiv@divisor+2)& (0+255),w,b
 24323  003C26  5B6E               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 24324  003C28  5173               	movf	(___lldiv@divisor+3)& (0+255),w,b
 24325  003C2A  5B6F               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 24326                           
 24327                           ; BSR set to: 0
 24328  003C2C  8174               	bsf	___lldiv@quotient& (0+255),0,b
 24329  003C2E                     l2507:
 24330                           
 24331                           ; BSR set to: 0
 24332                           
 24333                           ; BSR set to: 0
 24334  003C2E  90D8               	bcf	status,0,c
 24335  003C30  3373               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 24336  003C32  3372               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 24337  003C34  3371               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 24338  003C36  3370               	rrcf	___lldiv@divisor& (0+255),f,b
 24339                           
 24340                           ; BSR set to: 0
 24341  003C38  2F78               	decfsz	___lldiv@counter& (0+255),f,b
 24342  003C3A  D7E1               	goto	u5890
 24343  003C3C                     l2508:
 24344                           
 24345                           ; BSR set to: 0
 24346                           
 24347                           ; BSR set to: 0
 24348  003C3C  C074  F06C         	movff	___lldiv@quotient,?___lldiv
 24349  003C40  C075  F06D         	movff	___lldiv@quotient+1,?___lldiv+1
 24350  003C44  C076  F06E         	movff	___lldiv@quotient+2,?___lldiv+2
 24351  003C48  C077  F06F         	movff	___lldiv@quotient+3,?___lldiv+3
 24352                           
 24353                           ; BSR set to: 0
 24354  003C4C  0012               	return		;funcret
 24355  003C4E                     __end_of___lldiv:
 24356                           	opt stack 0
 24357                           tosu	equ	0xFFF
 24358                           tosh	equ	0xFFE
 24359                           tosl	equ	0xFFD
 24360                           pclath	equ	0xFFA
 24361                           tblptru	equ	0xFF8
 24362                           tblptrh	equ	0xFF7
 24363                           tblptrl	equ	0xFF6
 24364                           tablat	equ	0xFF5
 24365                           prodh	equ	0xFF4
 24366                           prodl	equ	0xFF3
 24367                           intcon	equ	0xFF2
 24368                           intcon2	equ	0xFF1
 24369                           intcon3	equ	0xFF0
 24370                           indf0	equ	0xFEF
 24371                           postinc0	equ	0xFEE
 24372                           plusw0	equ	0xFEB
 24373                           fsr0h	equ	0xFEA
 24374                           fsr0l	equ	0xFE9
 24375                           wreg	equ	0xFE8
 24376                           indf1	equ	0xFE7
 24377                           postinc1	equ	0xFE6
 24378                           postdec1	equ	0xFE5
 24379                           fsr1h	equ	0xFE2
 24380                           fsr1l	equ	0xFE1
 24381                           indf2	equ	0xFDF
 24382                           postinc2	equ	0xFDE
 24383                           postdec2	equ	0xFDD
 24384                           plusw2	equ	0xFDB
 24385                           fsr2h	equ	0xFDA
 24386                           fsr2l	equ	0xFD9
 24387                           status	equ	0xFD8
 24388                           
 24389 ;; *************** function _I2cSetConfig *****************
 24390 ;; Defined at:
 24391 ;;		line 89 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24392 ;; Parameters:    Size  Location     Type
 24393 ;;		None
 24394 ;; Auto vars:     Size  Location     Type
 24395 ;;		None
 24396 ;; Return value:  Size  Location     Type
 24397 ;;                  1    wreg      void 
 24398 ;; Registers used:
 24399 ;;		wreg, status,2
 24400 ;; Tracked objects:
 24401 ;;		On entry : 0/0
 24402 ;;		On exit  : 0/0
 24403 ;;		Unchanged: 0/0
 24404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24409 ;;Total ram usage:        0 bytes
 24410 ;; Hardware stack levels used:    1
 24411 ;; Hardware stack levels required when called:   11
 24412 ;; This function calls:
 24413 ;;		Nothing
 24414 ;; This function is called by:
 24415 ;;		_I2cSlv_MainTask
 24416 ;; This function uses a non-reentrant model
 24417 ;;
 24418                           
 24419                           	psect	text118
 24420  004A9E                     __ptext118:
 24421                           	opt stack 0
 24422  004A9E                     _I2cSetConfig:
 24423                           	opt stack 16
 24424                           
 24425                           ;i2c_slv.c: 91: I2cConfig.I2cBaudRateHz = ((UINT32)(100000));
 24426                           
 24427                           ; BSR set to: 0
 24428                           ;incstack = 0
 24429  004A9E  0EA0               	movlw	160
 24430  004AA0  0101               	movlb	1	; () banked
 24431  004AA2  6F8D               	movwf	_I2cConfig& (0+255),b
 24432  004AA4  0E86               	movlw	134
 24433  004AA6  6F8E               	movwf	(_I2cConfig+1)& (0+255),b
 24434  004AA8  0E01               	movlw	1
 24435  004AAA  6F8F               	movwf	(_I2cConfig+2)& (0+255),b
 24436  004AAC  0E00               	movlw	0
 24437  004AAE  6F90               	movwf	(_I2cConfig+3)& (0+255),b
 24438                           
 24439                           ;i2c_slv.c: 92: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 24440  004AB0  0E00               	movlw	0
 24441  004AB2  6F91               	movwf	(_I2cConfig+4)& (0+255),b
 24442  004AB4  0E6C               	movlw	108
 24443  004AB6  6F92               	movwf	(_I2cConfig+5)& (0+255),b
 24444  004AB8  0EDC               	movlw	220
 24445  004ABA  6F93               	movwf	(_I2cConfig+6)& (0+255),b
 24446  004ABC  0E02               	movlw	2
 24447  004ABE  6F94               	movwf	(_I2cConfig+7)& (0+255),b
 24448                           
 24449                           ;i2c_slv.c: 93: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 24450  004AC0  0E08               	movlw	8
 24451  004AC2  6F95               	movwf	(_I2cConfig+8)& (0+255),b
 24452                           
 24453                           ;i2c_slv.c: 94: I2cConfig.EnableI2cModule = ((UINT8)(1));
 24454  004AC4  0E01               	movlw	1
 24455  004AC6  6F96               	movwf	(_I2cConfig+9)& (0+255),b
 24456                           
 24457                           ; BSR set to: 1
 24458  004AC8  0012               	return		;funcret
 24459  004ACA                     __end_of_I2cSetConfig:
 24460                           	opt stack 0
 24461                           tosu	equ	0xFFF
 24462                           tosh	equ	0xFFE
 24463                           tosl	equ	0xFFD
 24464                           pclath	equ	0xFFA
 24465                           tblptru	equ	0xFF8
 24466                           tblptrh	equ	0xFF7
 24467                           tblptrl	equ	0xFF6
 24468                           tablat	equ	0xFF5
 24469                           prodh	equ	0xFF4
 24470                           prodl	equ	0xFF3
 24471                           intcon	equ	0xFF2
 24472                           intcon2	equ	0xFF1
 24473                           intcon3	equ	0xFF0
 24474                           indf0	equ	0xFEF
 24475                           postinc0	equ	0xFEE
 24476                           plusw0	equ	0xFEB
 24477                           fsr0h	equ	0xFEA
 24478                           fsr0l	equ	0xFE9
 24479                           wreg	equ	0xFE8
 24480                           indf1	equ	0xFE7
 24481                           postinc1	equ	0xFE6
 24482                           postdec1	equ	0xFE5
 24483                           fsr1h	equ	0xFE2
 24484                           fsr1l	equ	0xFE1
 24485                           indf2	equ	0xFDF
 24486                           postinc2	equ	0xFDE
 24487                           postdec2	equ	0xFDD
 24488                           plusw2	equ	0xFDB
 24489                           fsr2h	equ	0xFDA
 24490                           fsr2l	equ	0xFD9
 24491                           status	equ	0xFD8
 24492                           
 24493 ;; *************** function _I2cSendMsgSm *****************
 24494 ;; Defined at:
 24495 ;;		line 105 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24496 ;; Parameters:    Size  Location     Type
 24497 ;;		None
 24498 ;; Auto vars:     Size  Location     Type
 24499 ;;		None
 24500 ;; Return value:  Size  Location     Type
 24501 ;;                  1    wreg      void 
 24502 ;; Registers used:
 24503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24504 ;; Tracked objects:
 24505 ;;		On entry : 0/0
 24506 ;;		On exit  : 0/0
 24507 ;;		Unchanged: 0/0
 24508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24513 ;;Total ram usage:        0 bytes
 24514 ;; Hardware stack levels used:    1
 24515 ;; Hardware stack levels required when called:   13
 24516 ;; This function calls:
 24517 ;;		_I2c_ReadData
 24518 ;;		_I2c_WriteData
 24519 ;;		_ReceiveEvt
 24520 ;; This function is called by:
 24521 ;;		_I2cSlv_MainTask
 24522 ;; This function uses a non-reentrant model
 24523 ;;
 24524                           
 24525                           	psect	text119
 24526  0031C0                     __ptext119:
 24527                           	opt stack 0
 24528  0031C0                     _I2cSendMsgSm:
 24529                           	opt stack 14
 24530                           
 24531                           ;i2c_slv.c: 108: static I2cComStateType I2cComState = I2cComIdle;
 24532                           ;i2c_slv.c: 110: switch(I2cComState)
 24533                           
 24534                           ; BSR set to: 1
 24535                           ;incstack = 0
 24536  0031C0  D045               	goto	l1152
 24537  0031C2                     
 24538                           ;i2c_slv.c: 114: if (ReceiveEvt(&I2cWriteDataEvt))
 24539  0031C2  0E54               	movlw	low _I2cWriteDataEvt
 24540  0031C4  0100               	movlb	0	; () banked
 24541  0031C6  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 24542  0031C8  0E00               	movlw	high _I2cWriteDataEvt
 24543  0031CA  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24544  0031CC  EC38  F025         	call	_ReceiveEvt	;wreg free
 24545  0031D0  0900               	iorlw	0
 24546  0031D2  B4D8               	btfsc	status,2,c
 24547  0031D4  D006               	goto	l1154
 24548                           
 24549                           ;i2c_slv.c: 115: {
 24550                           ;i2c_slv.c: 117: I2cComState = I2cComWriteData;
 24551  0031D6  0E01               	movlw	1
 24552  0031D8  0101               	movlb	1	; () banked
 24553  0031DA  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24554                           
 24555                           ;i2c_slv.c: 119: I2cComSts = TxInProgress;
 24556  0031DC  0E01               	movlw	1
 24557  0031DE  6E4E               	movwf	_I2cComSts,c
 24558                           
 24559                           ;i2c_slv.c: 120: }
 24560  0031E0  0012               	return	
 24561  0031E2                     l1154:
 24562                           
 24563                           ;i2c_slv.c: 121: else if (ReceiveEvt(&I2cReadDataEvt))
 24564                           
 24565                           ; BSR set to: 1
 24566  0031E2  0E53               	movlw	low _I2cReadDataEvt
 24567  0031E4  0100               	movlb	0	; () banked
 24568  0031E6  6F60               	movwf	ReceiveEvt@Event& (0+255),b
 24569  0031E8  0E00               	movlw	high _I2cReadDataEvt
 24570  0031EA  6F61               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 24571  0031EC  EC38  F025         	call	_ReceiveEvt	;wreg free
 24572  0031F0  0900               	iorlw	0
 24573  0031F2  B4D8               	btfsc	status,2,c
 24574  0031F4  D006               	goto	l1156
 24575                           
 24576                           ;i2c_slv.c: 122: {
 24577                           ;i2c_slv.c: 124: I2cComState = I2cComReadData;
 24578  0031F6  0E02               	movlw	2
 24579  0031F8  0101               	movlb	1	; () banked
 24580  0031FA  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24581                           
 24582                           ;i2c_slv.c: 126: I2cComSts = RxInProgress;
 24583  0031FC  0E02               	movlw	2
 24584  0031FE  6E4E               	movwf	_I2cComSts,c
 24585                           
 24586                           ;i2c_slv.c: 127: }
 24587  003200  0012               	return	
 24588  003202                     l1156:
 24589                           
 24590                           ;i2c_slv.c: 128: else
 24591                           ;i2c_slv.c: 129: {
 24592                           ;i2c_slv.c: 131: I2cComSts = TxRxIdle;
 24593                           
 24594                           ; BSR set to: 1
 24595  003202  0E00               	movlw	0
 24596  003204  6E4E               	movwf	_I2cComSts,c
 24597                           
 24598                           ;i2c_slv.c: 132: }
 24599                           ;i2c_slv.c: 133: break;
 24600  003206  0012               	return	
 24601  003208                     
 24602                           ;i2c_slv.c: 137: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 24603  003208  0EAC               	movlw	low _I2cTxPacket
 24604  00320A  0100               	movlb	0	; () banked
 24605  00320C  6F61               	movwf	I2c_WriteData@WritePacket& (0+255),b
 24606  00320E  0E01               	movlw	high _I2cTxPacket
 24607  003210  6F62               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 24608  003212  EC72  F00C         	call	_I2c_WriteData	;wreg free
 24609  003216  0900               	iorlw	0
 24610  003218  B4D8               	btfsc	status,2,c
 24611  00321A  0012               	return	
 24612                           
 24613                           ;i2c_slv.c: 138: {
 24614                           ;i2c_slv.c: 140: I2cComState = I2cComWriteComplete;
 24615  00321C  0E03               	movlw	3
 24616  00321E  0101               	movlb	1	; () banked
 24617  003220  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24618                           
 24619                           ; BSR set to: 1
 24620                           ;i2c_slv.c: 141: }
 24621                           ;i2c_slv.c: 142: break;
 24622  003222  0012               	return	
 24623  003224                     
 24624                           ; BSR set to: 1
 24625                           ;i2c_slv.c: 146: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 24626                           
 24627                           ; BSR set to: 1
 24628  003224  0EA6               	movlw	low _I2cRxPacket
 24629  003226  0100               	movlb	0	; () banked
 24630  003228  6F63               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 24631  00322A  0E01               	movlw	high _I2cRxPacket
 24632  00322C  6F64               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 24633  00322E  EC32  F00D         	call	_I2c_ReadData	;wreg free
 24634  003232  0900               	iorlw	0
 24635  003234  B4D8               	btfsc	status,2,c
 24636  003236  0012               	return	
 24637                           
 24638                           ;i2c_slv.c: 147: {
 24639                           ;i2c_slv.c: 149: I2cComState = I2cComReadComplete;
 24640  003238  0E04               	movlw	4
 24641  00323A  0101               	movlb	1	; () banked
 24642  00323C  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24643                           
 24644                           ; BSR set to: 1
 24645                           ;i2c_slv.c: 150: }
 24646                           ;i2c_slv.c: 152: break;
 24647  00323E  0012               	return	
 24648  003240                     
 24649                           ; BSR set to: 1
 24650                           ;i2c_slv.c: 156: I2cComState = I2cComIdle;
 24651                           
 24652                           ; BSR set to: 1
 24653  003240  0E00               	movlw	0
 24654  003242  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24655                           
 24656                           ;i2c_slv.c: 157: break;
 24657  003244  0012               	return	
 24658  003246                     
 24659                           ; BSR set to: 1
 24660                           ;i2c_slv.c: 161: I2cComState = I2cComIdle;
 24661                           
 24662                           ; BSR set to: 1
 24663  003246  0E00               	movlw	0
 24664  003248  6F63               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 24665                           
 24666                           ; BSR set to: 1
 24667                           ;i2c_slv.c: 166: }
 24668                           
 24669                           ; BSR set to: 1
 24670                           ;i2c_slv.c: 165: break;
 24671                           
 24672                           ;i2c_slv.c: 164: default:
 24673                           
 24674                           ;i2c_slv.c: 162: break;
 24675  00324A  0012               	return	
 24676  00324C                     l1152:
 24677                           
 24678                           ; BSR set to: 1
 24679  00324C  0101               	movlb	1	; () banked
 24680  00324E  5163               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 24681                           
 24682                           ; Switch size 1, requested type "space"
 24683                           ; Number of cases is 5, Range of values is 0 to 4
 24684                           ; switch strategies available:
 24685                           ; Name         Instructions Cycles
 24686                           ; simple_byte           16     9 (average)
 24687                           ;	Chosen strategy is simple_byte
 24688  003250  0A00               	xorlw	0	; case 0
 24689  003252  B4D8               	btfsc	status,2,c
 24690  003254  D7B6               	goto	l1153
 24691  003256  0A01               	xorlw	1	; case 1
 24692  003258  B4D8               	btfsc	status,2,c
 24693  00325A  D7D6               	goto	l1159
 24694  00325C  0A03               	xorlw	3	; case 2
 24695  00325E  B4D8               	btfsc	status,2,c
 24696  003260  D7E1               	goto	l1161
 24697  003262  0A01               	xorlw	1	; case 3
 24698  003264  B4D8               	btfsc	status,2,c
 24699  003266  D7EC               	goto	l1163
 24700  003268  0A07               	xorlw	7	; case 4
 24701  00326A  A4D8               	btfss	status,2,c
 24702  00326C  0012               	return	
 24703  00326E  D7EB               	goto	l1164
 24704  003270                     __end_of_I2cSendMsgSm:
 24705                           	opt stack 0
 24706                           tosu	equ	0xFFF
 24707                           tosh	equ	0xFFE
 24708                           tosl	equ	0xFFD
 24709                           pclath	equ	0xFFA
 24710                           tblptru	equ	0xFF8
 24711                           tblptrh	equ	0xFF7
 24712                           tblptrl	equ	0xFF6
 24713                           tablat	equ	0xFF5
 24714                           prodh	equ	0xFF4
 24715                           prodl	equ	0xFF3
 24716                           intcon	equ	0xFF2
 24717                           intcon2	equ	0xFF1
 24718                           intcon3	equ	0xFF0
 24719                           indf0	equ	0xFEF
 24720                           postinc0	equ	0xFEE
 24721                           plusw0	equ	0xFEB
 24722                           fsr0h	equ	0xFEA
 24723                           fsr0l	equ	0xFE9
 24724                           wreg	equ	0xFE8
 24725                           indf1	equ	0xFE7
 24726                           postinc1	equ	0xFE6
 24727                           postdec1	equ	0xFE5
 24728                           fsr1h	equ	0xFE2
 24729                           fsr1l	equ	0xFE1
 24730                           indf2	equ	0xFDF
 24731                           postinc2	equ	0xFDE
 24732                           postdec2	equ	0xFDD
 24733                           plusw2	equ	0xFDB
 24734                           fsr2h	equ	0xFDA
 24735                           fsr2l	equ	0xFD9
 24736                           status	equ	0xFD8
 24737                           
 24738 ;; *************** function _ReceiveEvt *****************
 24739 ;; Defined at:
 24740 ;;		line 95 in file "../Source/c/02_Osl/os_ser.c"
 24741 ;; Parameters:    Size  Location     Type
 24742 ;;  Event           2    0[BANK0 ] PTR struct EventStructur
 24743 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), WifiReceiveData(1), 
 24744 ;;		 -> WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), NewWifiPacketParser(1), 
 24745 ;;		 -> NewWifiPacket(1), WifiRxPacket(253), StartWifiModem(1), NewWifiUartData(1), 
 24746 ;; Auto vars:     Size  Location     Type
 24747 ;;  EventStatus     1    3[BANK0 ] enum E7721
 24748 ;; Return value:  Size  Location     Type
 24749 ;;                  1    wreg      enum E7693
 24750 ;; Registers used:
 24751 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24752 ;; Tracked objects:
 24753 ;;		On entry : 0/0
 24754 ;;		On exit  : 0/0
 24755 ;;		Unchanged: 0/0
 24756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24757 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24759 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24760 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24761 ;;Total ram usage:        4 bytes
 24762 ;; Hardware stack levels used:    1
 24763 ;; Hardware stack levels required when called:   11
 24764 ;; This function calls:
 24765 ;;		Nothing
 24766 ;; This function is called by:
 24767 ;;		_MdmWifi_StartWifiModemSm
 24768 ;;		_MdmWifiGetUartData
 24769 ;;		_MdmWifiEvtParser
 24770 ;;		_MdmWifi_ReceiveWifiMsg
 24771 ;;		_StartConnectionSm
 24772 ;;		_SendDataSm
 24773 ;;		_ReceiveDataSm
 24774 ;;		_I2cSendMsgSm
 24775 ;;		_I2cSlv_I2cReadMsgSts
 24776 ;;		_MdmWifi_ReceiveWifiMsgTerminal
 24777 ;;		_MdmWifiCmd_ReceiveWifiMsg
 24778 ;; This function uses a non-reentrant model
 24779 ;;
 24780                           
 24781                           	psect	text120
 24782  004A70                     __ptext120:
 24783                           	opt stack 0
 24784  004A70                     _ReceiveEvt:
 24785                           	opt stack 13
 24786                           
 24787                           ;os_ser.c: 98: EventStatusType EventStatus = EventIdle;
 24788                           
 24789                           ;incstack = 0
 24790  004A70  0E00               	movlw	0
 24791  004A72  0100               	movlb	0	; () banked
 24792  004A74  6F63               	movwf	ReceiveEvt@EventStatus& (0+255),b
 24793                           
 24794                           ; BSR set to: 0
 24795                           ;os_ser.c: 101: if (Event->EventStatus == EventSent)
 24796  004A76  C060  FFD9         	movff	ReceiveEvt@Event,fsr2l
 24797  004A7A  C061  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 24798  004A7E  0E02               	movlw	2
 24799  004A80  18DE               	xorwf	postinc2,w,c
 24800  004A82  A4D8               	btfss	status,2,c
 24801  004A84  D008               	goto	l761
 24802                           
 24803                           ; BSR set to: 0
 24804                           ;os_ser.c: 102: {
 24805                           ;os_ser.c: 104: Event->EventStatus = EventReceived;
 24806  004A86  C060  FFD9         	movff	ReceiveEvt@Event,fsr2l
 24807  004A8A  C061  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 24808  004A8E  0E01               	movlw	1
 24809  004A90  6EDF               	movwf	indf2,c
 24810                           
 24811                           ; BSR set to: 0
 24812                           ;os_ser.c: 106: EventStatus = EventReceived;
 24813  004A92  0E01               	movlw	1
 24814  004A94  D001               	goto	L30
 24815  004A96                     l761:
 24816                           
 24817                           ; BSR set to: 0
 24818                           ;os_ser.c: 108: else
 24819                           ;os_ser.c: 109: {
 24820                           ;os_ser.c: 111: EventStatus = EventIdle;
 24821                           
 24822                           ; BSR set to: 0
 24823  004A96  0E00               	movlw	0
 24824  004A98                     L30:
 24825  004A98  6F63               	movwf	ReceiveEvt@EventStatus& (0+255),b
 24826                           
 24827                           ; BSR set to: 0
 24828                           ;os_ser.c: 112: }
 24829                           ;os_ser.c: 115: return(EventStatus);
 24830  004A9A  5163               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 24831  004A9C  0012               	return	
 24832  004A9E                     __end_of_ReceiveEvt:
 24833                           	opt stack 0
 24834                           tosu	equ	0xFFF
 24835                           tosh	equ	0xFFE
 24836                           tosl	equ	0xFFD
 24837                           pclath	equ	0xFFA
 24838                           tblptru	equ	0xFF8
 24839                           tblptrh	equ	0xFF7
 24840                           tblptrl	equ	0xFF6
 24841                           tablat	equ	0xFF5
 24842                           prodh	equ	0xFF4
 24843                           prodl	equ	0xFF3
 24844                           intcon	equ	0xFF2
 24845                           intcon2	equ	0xFF1
 24846                           intcon3	equ	0xFF0
 24847                           indf0	equ	0xFEF
 24848                           postinc0	equ	0xFEE
 24849                           plusw0	equ	0xFEB
 24850                           fsr0h	equ	0xFEA
 24851                           fsr0l	equ	0xFE9
 24852                           wreg	equ	0xFE8
 24853                           indf1	equ	0xFE7
 24854                           postinc1	equ	0xFE6
 24855                           postdec1	equ	0xFE5
 24856                           fsr1h	equ	0xFE2
 24857                           fsr1l	equ	0xFE1
 24858                           indf2	equ	0xFDF
 24859                           postinc2	equ	0xFDE
 24860                           postdec2	equ	0xFDD
 24861                           plusw2	equ	0xFDB
 24862                           fsr2h	equ	0xFDA
 24863                           fsr2l	equ	0xFD9
 24864                           status	equ	0xFD8
 24865                           
 24866 ;; *************** function _I2c_WriteData *****************
 24867 ;; Defined at:
 24868 ;;		line 252 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 24869 ;; Parameters:    Size  Location     Type
 24870 ;;  WritePacket     2    1[BANK0 ] PTR struct _I2cWritePack
 24871 ;;		 -> I2cTxPacket(5), 
 24872 ;; Auto vars:     Size  Location     Type
 24873 ;;		None
 24874 ;; Return value:  Size  Location     Type
 24875 ;;                  1    wreg      enum E7734
 24876 ;; Registers used:
 24877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24878 ;; Tracked objects:
 24879 ;;		On entry : 0/0
 24880 ;;		On exit  : 0/0
 24881 ;;		Unchanged: 0/0
 24882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24885 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24886 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24887 ;;Total ram usage:        4 bytes
 24888 ;; Hardware stack levels used:    1
 24889 ;; Hardware stack levels required when called:   12
 24890 ;; This function calls:
 24891 ;;		_CheckAckStatus
 24892 ;;		_CheckTxStatus
 24893 ;;		_StartCondition
 24894 ;;		_StopCondition
 24895 ;;		_WriteByte
 24896 ;; This function is called by:
 24897 ;;		_I2cSendMsgSm
 24898 ;; This function uses a non-reentrant model
 24899 ;;
 24900                           
 24901                           	psect	text121
 24902  0018E4                     __ptext121:
 24903                           	opt stack 0
 24904  0018E4                     _I2c_WriteData:
 24905                           	opt stack 14
 24906                           
 24907                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 24908                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 24909                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 24910                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 24911                           ;i2c_drv.c: 260: switch (I2cWriteState)
 24912                           
 24913                           ; BSR set to: 0
 24914                           ;incstack = 0
 24915  0018E4  D09C               	goto	l160
 24916  0018E6                     
 24917                           ;i2c_drv.c: 264: StartCondition();
 24918  0018E6  EC91  F027         	call	_StartCondition	;wreg free
 24919                           
 24920                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 24921  0018EA  0E00               	movlw	0
 24922  0018EC  0101               	movlb	1	; () banked
 24923  0018EE  6F74               	movwf	I2c_WriteData@WriteStatus& (0+255),b
 24924                           
 24925                           ; BSR set to: 1
 24926                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 24927  0018F0  0E01               	movlw	1
 24928  0018F2  D06C               	goto	L34
 24929  0018F4                     
 24930                           ; BSR set to: 1
 24931                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 24932                           
 24933                           ; BSR set to: 1
 24934  0018F4  0100               	movlb	0	; () banked
 24935  0018F6  EE20 F001          	lfsr	2,1
 24936  0018FA  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 24937  0018FC  26D9               	addwf	fsr2l,f,c
 24938  0018FE  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 24939  001900  22DA               	addwfc	fsr2h,f,c
 24940  001902  50DF               	movf	indf2,w,c
 24941  001904  6F63               	movwf	??_I2c_WriteData& (0+255),b
 24942  001906  C061  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 24943  00190A  C062  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 24944  00190E  50DF               	movf	indf2,w,c
 24945  001910  6F64               	movwf	(??_I2c_WriteData+1)& (0+255),b
 24946  001912  90D8               	bcf	status,0,c
 24947  001914  3564               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 24948  001916  1163               	iorwf	??_I2c_WriteData& (0+255),w,b
 24949  001918  C061  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 24950  00191C  C062  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 24951  001920  6EDF               	movwf	indf2,c
 24952                           
 24953                           ; BSR set to: 0
 24954                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 24955  001922  C061  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 24956  001926  C062  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 24957  00192A  50DF               	movf	indf2,w,c
 24958  00192C  EC75  F027         	call	_WriteByte
 24959                           
 24960                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 24961  001930  0E02               	movlw	2
 24962  001932  0101               	movlb	1	; () banked
 24963  001934  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 24964  001936                     
 24965                           ; BSR set to: 1
 24966                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 24967                           
 24968                           ; BSR set to: 1
 24969  001936  EC7F  F027         	call	_CheckTxStatus	;wreg free
 24970  00193A  0900               	iorlw	0
 24971  00193C  A4D8               	btfss	status,2,c
 24972  00193E  D08F               	goto	l162
 24973                           
 24974                           ;i2c_drv.c: 282: {
 24975                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 24976  001940  0E03               	movlw	3
 24977  001942  D01B               	goto	L38
 24978  001944                     
 24979                           ; BSR set to: 1
 24980                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 24981                           
 24982                           ; BSR set to: 1
 24983  001944  0100               	movlb	0	; () banked
 24984  001946  EE20 F002          	lfsr	2,2
 24985  00194A  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 24986  00194C  26D9               	addwf	fsr2l,f,c
 24987  00194E  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 24988  001950  22DA               	addwfc	fsr2h,f,c
 24989  001952  CFDE F063          	movff	postinc2,??_I2c_WriteData
 24990  001956  CFDD F064          	movff	postdec2,??_I2c_WriteData+1
 24991  00195A  C063  FFD9         	movff	??_I2c_WriteData,fsr2l
 24992  00195E  C064  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 24993  001962  50DF               	movf	indf2,w,c
 24994  001964  EC75  F027         	call	_WriteByte
 24995                           
 24996                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 24997  001968  0E04               	movlw	4
 24998  00196A                     L37:
 24999  00196A  0101               	movlb	1	; () banked
 25000  00196C  D02F               	goto	L34
 25001  00196E                     
 25002                           ; BSR set to: 1
 25003                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 25004                           
 25005                           ; BSR set to: 1
 25006  00196E  EC7F  F027         	call	_CheckTxStatus	;wreg free
 25007  001972  0900               	iorlw	0
 25008  001974  A4D8               	btfss	status,2,c
 25009  001976  D073               	goto	l162
 25010                           
 25011                           ;i2c_drv.c: 300: {
 25012                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 25013  001978  0E05               	movlw	5
 25014  00197A                     L38:
 25015  00197A  0101               	movlb	1	; () banked
 25016  00197C  6F76               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25017                           
 25018                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 25019  00197E  0E08               	movlw	8
 25020  001980  D025               	goto	L34
 25021  001982                     
 25022                           ; BSR set to: 1
 25023                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 25024                           
 25025                           ; BSR set to: 1
 25026  001982  0100               	movlb	0	; () banked
 25027  001984  EE20 F004          	lfsr	2,4
 25028  001988  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25029  00198A  26D9               	addwf	fsr2l,f,c
 25030  00198C  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25031  00198E  22DA               	addwfc	fsr2h,f,c
 25032  001990  50DF               	movf	indf2,w,c
 25033  001992  B4D8               	btfsc	status,2,c
 25034  001994  D010               	goto	l170
 25035                           
 25036                           ; BSR set to: 0
 25037                           ;i2c_drv.c: 310: {
 25038                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 25039  001996  EE20 F004          	lfsr	2,4
 25040  00199A  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25041  00199C  26D9               	addwf	fsr2l,f,c
 25042  00199E  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25043  0019A0  22DA               	addwfc	fsr2h,f,c
 25044  0019A2  06DF               	decf	indf2,f,c
 25045                           
 25046                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 25047  0019A4  EE20 F002          	lfsr	2,2
 25048  0019A8  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25049  0019AA  26D9               	addwf	fsr2l,f,c
 25050  0019AC  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25051  0019AE  22DA               	addwfc	fsr2h,f,c
 25052  0019B0  2ADE               	incf	postinc2,f,c
 25053  0019B2  0E00               	movlw	0
 25054  0019B4  22DD               	addwfc	postdec2,f,c
 25055  0019B6                     l170:
 25056                           
 25057                           ; BSR set to: 0
 25058                           ;i2c_drv.c: 315: }
 25059                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 25060  0019B6  EE20 F004          	lfsr	2,4
 25061  0019BA  5161               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25062  0019BC  26D9               	addwf	fsr2l,f,c
 25063  0019BE  5162               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25064  0019C0  22DA               	addwfc	fsr2h,f,c
 25065  0019C2  50DF               	movf	indf2,w,c
 25066  0019C4  A4D8               	btfss	status,2,c
 25067  0019C6  D004               	goto	l171
 25068                           
 25069                           ; BSR set to: 0
 25070                           ;i2c_drv.c: 319: {
 25071                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 25072  0019C8  0E06               	movlw	6
 25073  0019CA  D7CF               	goto	L37
 25074  0019CC                     L34:
 25075  0019CC  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25076                           
 25077                           ;i2c_drv.c: 322: }
 25078  0019CE  D047               	goto	l162
 25079  0019D0                     l171:
 25080                           
 25081                           ;i2c_drv.c: 323: else
 25082                           ;i2c_drv.c: 324: {
 25083                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 25084                           
 25085                           ; BSR set to: 1
 25086  0019D0  0E03               	movlw	3
 25087  0019D2  D7CB               	goto	L37
 25088  0019D4                     
 25089                           ; BSR set to: 1
 25090                           ;i2c_drv.c: 332: StopCondition();
 25091                           
 25092                           ; BSR set to: 1
 25093  0019D4  EC8F  F027         	call	_StopCondition	;wreg free
 25094                           
 25095                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 25096  0019D8  0E07               	movlw	7
 25097  0019DA  D7C7               	goto	L37
 25098  0019DC                     
 25099                           ; BSR set to: 1
 25100                           ;i2c_drv.c: 339: TentativeCounter++;
 25101                           
 25102                           ; BSR set to: 1
 25103  0019DC  2B75               	incf	I2c_WriteData@TentativeCounter& (0+255),f,b
 25104                           
 25105                           ; BSR set to: 1
 25106                           ;i2c_drv.c: 341: if (CheckAckStatus() == ((UINT8)(0)))
 25107  0019DE  EC84  F027         	call	_CheckAckStatus	;wreg free
 25108  0019E2  0900               	iorlw	0
 25109  0019E4  A4D8               	btfss	status,2,c
 25110  0019E6  D006               	goto	l175
 25111                           
 25112                           ;i2c_drv.c: 342: {
 25113                           ;i2c_drv.c: 344: TentativeCounter = 0;
 25114  0019E8  0E00               	movlw	0
 25115  0019EA  0101               	movlb	1	; () banked
 25116  0019EC  6F75               	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 25117                           
 25118                           ; BSR set to: 1
 25119                           ;i2c_drv.c: 346: I2cWriteState = I2cNextState;
 25120  0019EE  C176  F177         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 25121                           
 25122                           ;i2c_drv.c: 347: }
 25123  0019F2  D035               	goto	l162
 25124  0019F4                     l175:
 25125                           
 25126                           ;i2c_drv.c: 348: else
 25127                           ;i2c_drv.c: 349: {
 25128                           ;i2c_drv.c: 351: if (TentativeCounter >= ((UINT8)(3)))
 25129                           
 25130                           ; BSR set to: 1
 25131  0019F4  0E02               	movlw	2
 25132  0019F6  0101               	movlb	1	; () banked
 25133  0019F8  6575               	cpfsgt	I2c_WriteData@TentativeCounter& (0+255),b
 25134  0019FA  D031               	goto	l162
 25135                           
 25136                           ; BSR set to: 1
 25137                           ;i2c_drv.c: 352: {
 25138                           ;i2c_drv.c: 354: I2cWriteState = TxErrorStatus;
 25139  0019FC  0E09               	movlw	9
 25140  0019FE  D7E6               	goto	L34
 25141  001A00                     
 25142                           ; BSR set to: 1
 25143                           ;i2c_drv.c: 361: I2cWriteState = TxAssertStart;
 25144                           
 25145                           ; BSR set to: 1
 25146  001A00  0E00               	movlw	0
 25147  001A02  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25148                           
 25149                           ;i2c_drv.c: 362: I2cNextState = TxAssertStart;
 25150  001A04  0E00               	movlw	0
 25151  001A06  6F76               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25152                           
 25153                           ;i2c_drv.c: 364: WriteStatus = I2cWriteOk;
 25154  001A08  0E02               	movlw	2
 25155  001A0A  D007               	goto	L36
 25156  001A0C                     
 25157                           ; BSR set to: 1
 25158                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 25159                           
 25160                           ; BSR set to: 1
 25161  001A0C  0E00               	movlw	0
 25162  001A0E  6F77               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25163                           
 25164                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 25165  001A10  0E00               	movlw	0
 25166  001A12  6F76               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25167                           
 25168                           ;i2c_drv.c: 372: TentativeCounter = 0;
 25169  001A14  0E00               	movlw	0
 25170  001A16  6F75               	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 25171                           
 25172                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 25173  001A18  0E01               	movlw	1
 25174  001A1A                     L36:
 25175  001A1A  6F74               	movwf	I2c_WriteData@WriteStatus& (0+255),b
 25176                           
 25177                           ; BSR set to: 1
 25178                           ;i2c_drv.c: 379: }
 25179                           
 25180                           ; BSR set to: 1
 25181                           ;i2c_drv.c: 378: break;
 25182                           
 25183                           ;i2c_drv.c: 377: default:
 25184                           
 25185                           ;i2c_drv.c: 375: break;
 25186  001A1C  D020               	goto	l162
 25187  001A1E                     l160:
 25188                           
 25189                           ; BSR set to: 1
 25190  001A1E  0101               	movlb	1	; () banked
 25191  001A20  5177               	movf	I2c_WriteData@I2cWriteState& (0+255),w,b
 25192                           
 25193                           ; Switch size 1, requested type "space"
 25194                           ; Number of cases is 10, Range of values is 0 to 9
 25195                           ; switch strategies available:
 25196                           ; Name         Instructions Cycles
 25197                           ; simple_byte           31    16 (average)
 25198                           ;	Chosen strategy is simple_byte
 25199  001A22  0A00               	xorlw	0	; case 0
 25200  001A24  B4D8               	btfsc	status,2,c
 25201  001A26  D75F               	goto	l161
 25202  001A28  0A01               	xorlw	1	; case 1
 25203  001A2A  B4D8               	btfsc	status,2,c
 25204  001A2C  D763               	goto	l163
 25205  001A2E  0A03               	xorlw	3	; case 2
 25206  001A30  B4D8               	btfsc	status,2,c
 25207  001A32  D781               	goto	l164
 25208  001A34  0A01               	xorlw	1	; case 3
 25209  001A36  B4D8               	btfsc	status,2,c
 25210  001A38  D785               	goto	l166
 25211  001A3A  0A07               	xorlw	7	; case 4
 25212  001A3C  B4D8               	btfsc	status,2,c
 25213  001A3E  D797               	goto	l167
 25214  001A40  0A01               	xorlw	1	; case 5
 25215  001A42  B4D8               	btfsc	status,2,c
 25216  001A44  D79E               	goto	l169
 25217  001A46  0A03               	xorlw	3	; case 6
 25218  001A48  B4D8               	btfsc	status,2,c
 25219  001A4A  D7C4               	goto	l173
 25220  001A4C  0A01               	xorlw	1	; case 7
 25221  001A4E  B4D8               	btfsc	status,2,c
 25222  001A50  D7D7               	goto	l178
 25223  001A52  0A0F               	xorlw	15	; case 8
 25224  001A54  B4D8               	btfsc	status,2,c
 25225  001A56  D7C2               	goto	l174
 25226  001A58  0A01               	xorlw	1	; case 9
 25227  001A5A  B4D8               	btfsc	status,2,c
 25228  001A5C  D7D7               	goto	l179
 25229  001A5E                     l162:
 25230                           
 25231                           ;i2c_drv.c: 382: return WriteStatus;
 25232                           
 25233                           ; BSR set to: 1
 25234  001A5E  0101               	movlb	1	; () banked
 25235  001A60  5174               	movf	I2c_WriteData@WriteStatus& (0+255),w,b
 25236  001A62  0012               	return	
 25237  001A64                     __end_of_I2c_WriteData:
 25238                           	opt stack 0
 25239                           tosu	equ	0xFFF
 25240                           tosh	equ	0xFFE
 25241                           tosl	equ	0xFFD
 25242                           pclath	equ	0xFFA
 25243                           tblptru	equ	0xFF8
 25244                           tblptrh	equ	0xFF7
 25245                           tblptrl	equ	0xFF6
 25246                           tablat	equ	0xFF5
 25247                           prodh	equ	0xFF4
 25248                           prodl	equ	0xFF3
 25249                           intcon	equ	0xFF2
 25250                           intcon2	equ	0xFF1
 25251                           intcon3	equ	0xFF0
 25252                           indf0	equ	0xFEF
 25253                           postinc0	equ	0xFEE
 25254                           plusw0	equ	0xFEB
 25255                           fsr0h	equ	0xFEA
 25256                           fsr0l	equ	0xFE9
 25257                           wreg	equ	0xFE8
 25258                           indf1	equ	0xFE7
 25259                           postinc1	equ	0xFE6
 25260                           postdec1	equ	0xFE5
 25261                           fsr1h	equ	0xFE2
 25262                           fsr1l	equ	0xFE1
 25263                           indf2	equ	0xFDF
 25264                           postinc2	equ	0xFDE
 25265                           postdec2	equ	0xFDD
 25266                           plusw2	equ	0xFDB
 25267                           fsr2h	equ	0xFDA
 25268                           fsr2l	equ	0xFD9
 25269                           status	equ	0xFD8
 25270                           
 25271 ;; *************** function _I2c_ReadData *****************
 25272 ;; Defined at:
 25273 ;;		line 393 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25274 ;; Parameters:    Size  Location     Type
 25275 ;;  ReadPacket      2    3[BANK0 ] PTR struct _I2cReadPacke
 25276 ;;		 -> I2cRxPacket(6), 
 25277 ;; Auto vars:     Size  Location     Type
 25278 ;;		None
 25279 ;; Return value:  Size  Location     Type
 25280 ;;                  1    wreg      enum E7781
 25281 ;; Registers used:
 25282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25283 ;; Tracked objects:
 25284 ;;		On entry : 0/0
 25285 ;;		On exit  : 0/0
 25286 ;;		Unchanged: 0/0
 25287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25288 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25290 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25291 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25292 ;;Total ram usage:        4 bytes
 25293 ;; Hardware stack levels used:    1
 25294 ;; Hardware stack levels required when called:   12
 25295 ;; This function calls:
 25296 ;;		_CheckAckStatus
 25297 ;;		_CheckTxStatus
 25298 ;;		_EnableReceiver
 25299 ;;		_GenerateEvt
 25300 ;;		_ReadByte
 25301 ;;		_SetAckStatus
 25302 ;;		_StartCondition
 25303 ;;		_StopCondition
 25304 ;;		_WriteByte
 25305 ;; This function is called by:
 25306 ;;		_I2cSendMsgSm
 25307 ;; This function uses a non-reentrant model
 25308 ;;
 25309                           
 25310                           	psect	text122
 25311  001A64                     __ptext122:
 25312                           	opt stack 0
 25313  001A64                     _I2c_ReadData:
 25314                           	opt stack 14
 25315                           
 25316                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 25317                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 25318                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 25319                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 25320                           ;i2c_drv.c: 402: switch (I2cReadState)
 25321                           
 25322                           ; BSR set to: 1
 25323                           ;incstack = 0
 25324  001A64  D09A               	goto	l192
 25325  001A66                     
 25326                           ;i2c_drv.c: 406: StartCondition();
 25327  001A66  EC91  F027         	call	_StartCondition	;wreg free
 25328                           
 25329                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 25330  001A6A  0E00               	movlw	0
 25331  001A6C  0101               	movlb	1	; () banked
 25332  001A6E  6F70               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 25333                           
 25334                           ; BSR set to: 1
 25335                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 25336  001A70  0E01               	movlw	1
 25337  001A72  D020               	goto	L39
 25338  001A74                     
 25339                           ; BSR set to: 1
 25340                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 25341                           
 25342                           ; BSR set to: 1
 25343  001A74  0100               	movlb	0	; () banked
 25344  001A76  EE20 F001          	lfsr	2,1
 25345  001A7A  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25346  001A7C  26D9               	addwf	fsr2l,f,c
 25347  001A7E  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25348  001A80  22DA               	addwfc	fsr2h,f,c
 25349  001A82  50DF               	movf	indf2,w,c
 25350  001A84  6F65               	movwf	??_I2c_ReadData& (0+255),b
 25351  001A86  C063  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 25352  001A8A  C064  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 25353  001A8E  50DF               	movf	indf2,w,c
 25354  001A90  6F66               	movwf	(??_I2c_ReadData+1)& (0+255),b
 25355  001A92  90D8               	bcf	status,0,c
 25356  001A94  3566               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 25357  001A96  1165               	iorwf	??_I2c_ReadData& (0+255),w,b
 25358  001A98  C063  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 25359  001A9C  C064  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 25360  001AA0  6EDF               	movwf	indf2,c
 25361                           
 25362                           ; BSR set to: 0
 25363                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 25364  001AA2  C063  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 25365  001AA6  C064  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 25366  001AAA  50DF               	movf	indf2,w,c
 25367  001AAC  EC75  F027         	call	_WriteByte
 25368                           
 25369                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 25370  001AB0  0E02               	movlw	2
 25371  001AB2  D06C               	goto	L43
 25372  001AB4                     L39:
 25373  001AB4  6F73               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 25374                           
 25375                           ;i2c_drv.c: 420: break;
 25376  001AB6  D08E               	goto	l194
 25377  001AB8                     
 25378                           ; BSR set to: 1
 25379                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 25380                           
 25381                           ; BSR set to: 1
 25382  001AB8  EC7F  F027         	call	_CheckTxStatus	;wreg free
 25383  001ABC  0900               	iorlw	0
 25384  001ABE  A4D8               	btfss	status,2,c
 25385  001AC0  D089               	goto	l194
 25386                           
 25387                           ;i2c_drv.c: 425: {
 25388                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 25389  001AC2  0E03               	movlw	3
 25390  001AC4  D063               	goto	L43
 25391  001AC6                     
 25392                           ; BSR set to: 1
 25393                           ;i2c_drv.c: 433: TentativeCounter++;
 25394                           
 25395                           ; BSR set to: 1
 25396  001AC6  2B71               	incf	I2c_ReadData@TentativeCounter& (0+255),f,b
 25397                           
 25398                           ; BSR set to: 1
 25399                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 25400  001AC8  EC84  F027         	call	_CheckAckStatus	;wreg free
 25401  001ACC  0900               	iorlw	0
 25402  001ACE  A4D8               	btfss	status,2,c
 25403  001AD0  D005               	goto	l199
 25404                           
 25405                           ;i2c_drv.c: 436: {
 25406                           ;i2c_drv.c: 438: TentativeCounter = 0;
 25407  001AD2  0E00               	movlw	0
 25408  001AD4  0101               	movlb	1	; () banked
 25409  001AD6  6F71               	movwf	I2c_ReadData@TentativeCounter& (0+255),b
 25410                           
 25411                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 25412  001AD8  0E04               	movlw	4
 25413  001ADA  D7EC               	goto	L39
 25414  001ADC                     l199:
 25415                           
 25416                           ;i2c_drv.c: 442: else
 25417                           ;i2c_drv.c: 443: {
 25418                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 25419                           
 25420                           ; BSR set to: 1
 25421  001ADC  0E02               	movlw	2
 25422  001ADE  0101               	movlb	1	; () banked
 25423  001AE0  6571               	cpfsgt	I2c_ReadData@TentativeCounter& (0+255),b
 25424  001AE2  D078               	goto	l194
 25425                           
 25426                           ; BSR set to: 1
 25427                           ;i2c_drv.c: 446: {
 25428                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 25429  001AE4  0E08               	movlw	8
 25430  001AE6  D7E6               	goto	L39
 25431  001AE8                     
 25432                           ; BSR set to: 1
 25433                           ;i2c_drv.c: 455: EnableReceiver();
 25434                           
 25435                           ; BSR set to: 1
 25436  001AE8  EC93  F027         	call	_EnableReceiver	;wreg free
 25437                           
 25438                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 25439  001AEC  0E05               	movlw	5
 25440  001AEE  D04E               	goto	L43
 25441  001AF0                     
 25442                           ; BSR set to: 1
 25443                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 25444                           
 25445                           ; BSR set to: 1
 25446  001AF0  EC7F  F027         	call	_CheckTxStatus	;wreg free
 25447  001AF4  0900               	iorlw	0
 25448  001AF6  A4D8               	btfss	status,2,c
 25449  001AF8  D06D               	goto	l194
 25450                           
 25451                           ;i2c_drv.c: 463: {
 25452                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 25453  001AFA  0100               	movlb	0	; () banked
 25454  001AFC  EE20 F002          	lfsr	2,2
 25455  001B00  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25456  001B02  26D9               	addwf	fsr2l,f,c
 25457  001B04  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25458  001B06  22DA               	addwfc	fsr2h,f,c
 25459  001B08  CFDE F065          	movff	postinc2,??_I2c_ReadData
 25460  001B0C  CFDD F066          	movff	postdec2,??_I2c_ReadData+1
 25461  001B10  C065  FFD9         	movff	??_I2c_ReadData,fsr2l
 25462  001B14  C066  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 25463  001B18  EC7A  F027         	call	_ReadByte	;wreg free
 25464  001B1C  6EDF               	movwf	indf2,c
 25465                           
 25466                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 25467  001B1E  0100               	movlb	0	; () banked
 25468  001B20  EE20 F002          	lfsr	2,2
 25469  001B24  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25470  001B26  26D9               	addwf	fsr2l,f,c
 25471  001B28  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25472  001B2A  22DA               	addwfc	fsr2h,f,c
 25473  001B2C  2ADE               	incf	postinc2,f,c
 25474  001B2E  0E00               	movlw	0
 25475  001B30  22DD               	addwfc	postdec2,f,c
 25476                           
 25477                           ; BSR set to: 0
 25478                           ;i2c_drv.c: 469: DataCounter++;
 25479  001B32  0101               	movlb	1	; () banked
 25480  001B34  2B72               	incf	I2c_ReadData@DataCounter& (0+255),f,b
 25481                           
 25482                           ; BSR set to: 1
 25483                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 25484  001B36  0E06               	movlw	6
 25485  001B38  D7BD               	goto	L39
 25486  001B3A                     
 25487                           ; BSR set to: 1
 25488                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 25489                           
 25490                           ; BSR set to: 1
 25491  001B3A  0100               	movlb	0	; () banked
 25492  001B3C  EE20 F004          	lfsr	2,4
 25493  001B40  5163               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 25494  001B42  26D9               	addwf	fsr2l,f,c
 25495  001B44  5164               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25496  001B46  22DA               	addwfc	fsr2h,f,c
 25497  001B48  50DE               	movf	postinc2,w,c
 25498  001B4A  0101               	movlb	1	; () banked
 25499  001B4C  5D72               	subwf	I2c_ReadData@DataCounter& (0+255),w,b
 25500  001B4E  A0D8               	btfss	status,0,c
 25501  001B50  D009               	goto	l206
 25502                           
 25503                           ; BSR set to: 1
 25504                           ;i2c_drv.c: 478: {
 25505                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 25506  001B52  0E01               	movlw	1
 25507  001B54  EC0D  F027         	call	_SetAckStatus
 25508                           
 25509                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 25510  001B58  0E07               	movlw	7
 25511  001B5A  0101               	movlb	1	; () banked
 25512  001B5C  6F73               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 25513                           
 25514                           ; BSR set to: 1
 25515                           ;i2c_drv.c: 484: DataCounter = 0;
 25516  001B5E  0E00               	movlw	0
 25517  001B60  6F72               	movwf	I2c_ReadData@DataCounter& (0+255),b
 25518                           
 25519                           ;i2c_drv.c: 485: }
 25520  001B62  D038               	goto	l194
 25521  001B64                     l206:
 25522                           
 25523                           ; BSR set to: 1
 25524                           ;i2c_drv.c: 486: else
 25525                           ;i2c_drv.c: 487: {
 25526                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 25527                           
 25528                           ; BSR set to: 1
 25529  001B64  0E00               	movlw	0
 25530  001B66  EC0D  F027         	call	_SetAckStatus
 25531                           
 25532                           ;i2c_drv.c: 491: I2cReadState = RxGetData;
 25533  001B6A  0E04               	movlw	4
 25534  001B6C  D00F               	goto	L43
 25535  001B6E                     
 25536                           ; BSR set to: 1
 25537                           ;i2c_drv.c: 497: StopCondition();
 25538                           
 25539                           ; BSR set to: 1
 25540  001B6E  EC8F  F027         	call	_StopCondition	;wreg free
 25541                           
 25542                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 25543  001B72  0E02               	movlw	2
 25544  001B74  0101               	movlb	1	; () banked
 25545  001B76  6F70               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 25546                           
 25547                           ; BSR set to: 1
 25548                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 25549  001B78  0E05               	movlw	5
 25550  001B7A  0100               	movlb	0	; () banked
 25551  001B7C  2563               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 25552  001B7E  6F60               	movwf	GenerateEvt@Event& (0+255),b
 25553  001B80  0E00               	movlw	0
 25554  001B82  2164               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 25555  001B84  6F61               	movwf	(GenerateEvt@Event+1)& (0+255),b
 25556  001B86  ECD5  F026         	call	_GenerateEvt	;wreg free
 25557                           
 25558                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 25559  001B8A  0E00               	movlw	0
 25560  001B8C                     L43:
 25561  001B8C  0101               	movlb	1	; () banked
 25562  001B8E  D792               	goto	L39
 25563  001B90                     
 25564                           ; BSR set to: 1
 25565                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 25566                           
 25567                           ; BSR set to: 1
 25568  001B90  0E00               	movlw	0
 25569  001B92  6F73               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 25570                           
 25571                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 25572  001B94  0E01               	movlw	1
 25573  001B96  6F70               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 25574                           
 25575                           ; BSR set to: 1
 25576                           ;i2c_drv.c: 515: }
 25577                           
 25578                           ; BSR set to: 1
 25579                           ;i2c_drv.c: 514: break;
 25580                           
 25581                           ;i2c_drv.c: 513: default:
 25582                           
 25583                           ;i2c_drv.c: 511: break;
 25584  001B98  D01D               	goto	l194
 25585  001B9A                     l192:
 25586                           
 25587                           ; BSR set to: 1
 25588  001B9A  0101               	movlb	1	; () banked
 25589  001B9C  5173               	movf	I2c_ReadData@I2cReadState& (0+255),w,b
 25590                           
 25591                           ; Switch size 1, requested type "space"
 25592                           ; Number of cases is 9, Range of values is 0 to 8
 25593                           ; switch strategies available:
 25594                           ; Name         Instructions Cycles
 25595                           ; simple_byte           28    15 (average)
 25596                           ;	Chosen strategy is simple_byte
 25597  001B9E  0A00               	xorlw	0	; case 0
 25598  001BA0  B4D8               	btfsc	status,2,c
 25599  001BA2  D761               	goto	l193
 25600  001BA4  0A01               	xorlw	1	; case 1
 25601  001BA6  B4D8               	btfsc	status,2,c
 25602  001BA8  D765               	goto	l195
 25603  001BAA  0A03               	xorlw	3	; case 2
 25604  001BAC  B4D8               	btfsc	status,2,c
 25605  001BAE  D784               	goto	l196
 25606  001BB0  0A01               	xorlw	1	; case 3
 25607  001BB2  B4D8               	btfsc	status,2,c
 25608  001BB4  D788               	goto	l198
 25609  001BB6  0A07               	xorlw	7	; case 4
 25610  001BB8  B4D8               	btfsc	status,2,c
 25611  001BBA  D796               	goto	l202
 25612  001BBC  0A01               	xorlw	1	; case 5
 25613  001BBE  B4D8               	btfsc	status,2,c
 25614  001BC0  D797               	goto	l203
 25615  001BC2  0A03               	xorlw	3	; case 6
 25616  001BC4  B4D8               	btfsc	status,2,c
 25617  001BC6  D7B9               	goto	l205
 25618  001BC8  0A01               	xorlw	1	; case 7
 25619  001BCA  B4D8               	btfsc	status,2,c
 25620  001BCC  D7D0               	goto	l208
 25621  001BCE  0A0F               	xorlw	15	; case 8
 25622  001BD0  B4D8               	btfsc	status,2,c
 25623  001BD2  D7DE               	goto	l209
 25624  001BD4                     l194:
 25625                           
 25626                           ;i2c_drv.c: 518: return ReadStatus;
 25627                           
 25628                           ; BSR set to: 1
 25629  001BD4  0101               	movlb	1	; () banked
 25630  001BD6  5170               	movf	I2c_ReadData@ReadStatus& (0+255),w,b
 25631  001BD8  0012               	return	
 25632  001BDA                     __end_of_I2c_ReadData:
 25633                           	opt stack 0
 25634                           tosu	equ	0xFFF
 25635                           tosh	equ	0xFFE
 25636                           tosl	equ	0xFFD
 25637                           pclath	equ	0xFFA
 25638                           tblptru	equ	0xFF8
 25639                           tblptrh	equ	0xFF7
 25640                           tblptrl	equ	0xFF6
 25641                           tablat	equ	0xFF5
 25642                           prodh	equ	0xFF4
 25643                           prodl	equ	0xFF3
 25644                           intcon	equ	0xFF2
 25645                           intcon2	equ	0xFF1
 25646                           intcon3	equ	0xFF0
 25647                           indf0	equ	0xFEF
 25648                           postinc0	equ	0xFEE
 25649                           plusw0	equ	0xFEB
 25650                           fsr0h	equ	0xFEA
 25651                           fsr0l	equ	0xFE9
 25652                           wreg	equ	0xFE8
 25653                           indf1	equ	0xFE7
 25654                           postinc1	equ	0xFE6
 25655                           postdec1	equ	0xFE5
 25656                           fsr1h	equ	0xFE2
 25657                           fsr1l	equ	0xFE1
 25658                           indf2	equ	0xFDF
 25659                           postinc2	equ	0xFDE
 25660                           postdec2	equ	0xFDD
 25661                           plusw2	equ	0xFDB
 25662                           fsr2h	equ	0xFDA
 25663                           fsr2l	equ	0xFD9
 25664                           status	equ	0xFD8
 25665                           
 25666 ;; *************** function _WriteByte *****************
 25667 ;; Defined at:
 25668 ;;		line 190 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25669 ;; Parameters:    Size  Location     Type
 25670 ;;  Byte            1    wreg     unsigned char 
 25671 ;; Auto vars:     Size  Location     Type
 25672 ;;  Byte            1    0[BANK0 ] unsigned char 
 25673 ;; Return value:  Size  Location     Type
 25674 ;;                  1    wreg      void 
 25675 ;; Registers used:
 25676 ;;		wreg
 25677 ;; Tracked objects:
 25678 ;;		On entry : 0/0
 25679 ;;		On exit  : 0/0
 25680 ;;		Unchanged: 0/0
 25681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25683 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25685 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25686 ;;Total ram usage:        1 bytes
 25687 ;; Hardware stack levels used:    1
 25688 ;; Hardware stack levels required when called:   11
 25689 ;; This function calls:
 25690 ;;		Nothing
 25691 ;; This function is called by:
 25692 ;;		_I2c_WriteData
 25693 ;;		_I2c_ReadData
 25694 ;; This function uses a non-reentrant model
 25695 ;;
 25696                           
 25697                           	psect	text123
 25698  004EEA                     __ptext123:
 25699                           	opt stack 0
 25700  004EEA                     _WriteByte:
 25701                           	opt stack 14
 25702                           
 25703                           ; BSR set to: 1
 25704                           ;incstack = 0
 25705                           ;WriteByte@Byte stored from wreg
 25706  004EEA  0100               	movlb	0	; () banked
 25707  004EEC  6F60               	movwf	WriteByte@Byte& (0+255),b
 25708                           
 25709                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 25710  004EEE  C060  FF75         	movff	WriteByte@Byte,3957	;volatile
 25711  004EF2  0012               	return		;funcret
 25712  004EF4                     __end_of_WriteByte:
 25713                           	opt stack 0
 25714                           tosu	equ	0xFFF
 25715                           tosh	equ	0xFFE
 25716                           tosl	equ	0xFFD
 25717                           pclath	equ	0xFFA
 25718                           tblptru	equ	0xFF8
 25719                           tblptrh	equ	0xFF7
 25720                           tblptrl	equ	0xFF6
 25721                           tablat	equ	0xFF5
 25722                           prodh	equ	0xFF4
 25723                           prodl	equ	0xFF3
 25724                           intcon	equ	0xFF2
 25725                           intcon2	equ	0xFF1
 25726                           intcon3	equ	0xFF0
 25727                           indf0	equ	0xFEF
 25728                           postinc0	equ	0xFEE
 25729                           plusw0	equ	0xFEB
 25730                           fsr0h	equ	0xFEA
 25731                           fsr0l	equ	0xFE9
 25732                           wreg	equ	0xFE8
 25733                           indf1	equ	0xFE7
 25734                           postinc1	equ	0xFE6
 25735                           postdec1	equ	0xFE5
 25736                           fsr1h	equ	0xFE2
 25737                           fsr1l	equ	0xFE1
 25738                           indf2	equ	0xFDF
 25739                           postinc2	equ	0xFDE
 25740                           postdec2	equ	0xFDD
 25741                           plusw2	equ	0xFDB
 25742                           fsr2h	equ	0xFDA
 25743                           fsr2l	equ	0xFD9
 25744                           status	equ	0xFD8
 25745                           
 25746 ;; *************** function _StopCondition *****************
 25747 ;; Defined at:
 25748 ;;		line 120 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25749 ;; Parameters:    Size  Location     Type
 25750 ;;		None
 25751 ;; Auto vars:     Size  Location     Type
 25752 ;;		None
 25753 ;; Return value:  Size  Location     Type
 25754 ;;                  1    wreg      void 
 25755 ;; Registers used:
 25756 ;;		status,2, status,0
 25757 ;; Tracked objects:
 25758 ;;		On entry : 0/0
 25759 ;;		On exit  : 0/0
 25760 ;;		Unchanged: 0/0
 25761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25766 ;;Total ram usage:        0 bytes
 25767 ;; Hardware stack levels used:    1
 25768 ;; Hardware stack levels required when called:   11
 25769 ;; This function calls:
 25770 ;;		Nothing
 25771 ;; This function is called by:
 25772 ;;		_I2c_WriteData
 25773 ;;		_I2c_ReadData
 25774 ;; This function uses a non-reentrant model
 25775 ;;
 25776                           
 25777                           	psect	text124
 25778  004F1E                     __ptext124:
 25779                           	opt stack 0
 25780  004F1E                     _StopCondition:
 25781                           	opt stack 14
 25782                           
 25783                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 25784                           
 25785                           ;incstack = 0
 25786  004F1E  8471               	bsf	3953,2,c	;volatile
 25787  004F20  0012               	return		;funcret
 25788  004F22                     __end_of_StopCondition:
 25789                           	opt stack 0
 25790                           tosu	equ	0xFFF
 25791                           tosh	equ	0xFFE
 25792                           tosl	equ	0xFFD
 25793                           pclath	equ	0xFFA
 25794                           tblptru	equ	0xFF8
 25795                           tblptrh	equ	0xFF7
 25796                           tblptrl	equ	0xFF6
 25797                           tablat	equ	0xFF5
 25798                           prodh	equ	0xFF4
 25799                           prodl	equ	0xFF3
 25800                           intcon	equ	0xFF2
 25801                           intcon2	equ	0xFF1
 25802                           intcon3	equ	0xFF0
 25803                           indf0	equ	0xFEF
 25804                           postinc0	equ	0xFEE
 25805                           plusw0	equ	0xFEB
 25806                           fsr0h	equ	0xFEA
 25807                           fsr0l	equ	0xFE9
 25808                           wreg	equ	0xFE8
 25809                           indf1	equ	0xFE7
 25810                           postinc1	equ	0xFE6
 25811                           postdec1	equ	0xFE5
 25812                           fsr1h	equ	0xFE2
 25813                           fsr1l	equ	0xFE1
 25814                           indf2	equ	0xFDF
 25815                           postinc2	equ	0xFDE
 25816                           postdec2	equ	0xFDD
 25817                           plusw2	equ	0xFDB
 25818                           fsr2h	equ	0xFDA
 25819                           fsr2l	equ	0xFD9
 25820                           status	equ	0xFD8
 25821                           
 25822 ;; *************** function _StartCondition *****************
 25823 ;; Defined at:
 25824 ;;		line 92 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25825 ;; Parameters:    Size  Location     Type
 25826 ;;		None
 25827 ;; Auto vars:     Size  Location     Type
 25828 ;;		None
 25829 ;; Return value:  Size  Location     Type
 25830 ;;                  1    wreg      void 
 25831 ;; Registers used:
 25832 ;;		status,2, status,0
 25833 ;; Tracked objects:
 25834 ;;		On entry : 0/0
 25835 ;;		On exit  : 0/0
 25836 ;;		Unchanged: 0/0
 25837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25842 ;;Total ram usage:        0 bytes
 25843 ;; Hardware stack levels used:    1
 25844 ;; Hardware stack levels required when called:   11
 25845 ;; This function calls:
 25846 ;;		Nothing
 25847 ;; This function is called by:
 25848 ;;		_I2c_WriteData
 25849 ;;		_I2c_ReadData
 25850 ;; This function uses a non-reentrant model
 25851 ;;
 25852                           
 25853                           	psect	text125
 25854  004F22                     __ptext125:
 25855                           	opt stack 0
 25856  004F22                     _StartCondition:
 25857                           	opt stack 14
 25858                           
 25859                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 25860                           
 25861                           ;incstack = 0
 25862  004F22  8071               	bsf	3953,0,c	;volatile
 25863  004F24  0012               	return		;funcret
 25864  004F26                     __end_of_StartCondition:
 25865                           	opt stack 0
 25866                           tosu	equ	0xFFF
 25867                           tosh	equ	0xFFE
 25868                           tosl	equ	0xFFD
 25869                           pclath	equ	0xFFA
 25870                           tblptru	equ	0xFF8
 25871                           tblptrh	equ	0xFF7
 25872                           tblptrl	equ	0xFF6
 25873                           tablat	equ	0xFF5
 25874                           prodh	equ	0xFF4
 25875                           prodl	equ	0xFF3
 25876                           intcon	equ	0xFF2
 25877                           intcon2	equ	0xFF1
 25878                           intcon3	equ	0xFF0
 25879                           indf0	equ	0xFEF
 25880                           postinc0	equ	0xFEE
 25881                           plusw0	equ	0xFEB
 25882                           fsr0h	equ	0xFEA
 25883                           fsr0l	equ	0xFE9
 25884                           wreg	equ	0xFE8
 25885                           indf1	equ	0xFE7
 25886                           postinc1	equ	0xFE6
 25887                           postdec1	equ	0xFE5
 25888                           fsr1h	equ	0xFE2
 25889                           fsr1l	equ	0xFE1
 25890                           indf2	equ	0xFDF
 25891                           postinc2	equ	0xFDE
 25892                           postdec2	equ	0xFDD
 25893                           plusw2	equ	0xFDB
 25894                           fsr2h	equ	0xFDA
 25895                           fsr2l	equ	0xFD9
 25896                           status	equ	0xFD8
 25897                           
 25898 ;; *************** function _SetAckStatus *****************
 25899 ;; Defined at:
 25900 ;;		line 162 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25901 ;; Parameters:    Size  Location     Type
 25902 ;;  AckSts          1    wreg     unsigned char 
 25903 ;; Auto vars:     Size  Location     Type
 25904 ;;  AckSts          1    0[BANK0 ] unsigned char 
 25905 ;; Return value:  Size  Location     Type
 25906 ;;                  1    wreg      void 
 25907 ;; Registers used:
 25908 ;;		wreg
 25909 ;; Tracked objects:
 25910 ;;		On entry : 0/0
 25911 ;;		On exit  : 0/0
 25912 ;;		Unchanged: 0/0
 25913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25915 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25917 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25918 ;;Total ram usage:        1 bytes
 25919 ;; Hardware stack levels used:    1
 25920 ;; Hardware stack levels required when called:   11
 25921 ;; This function calls:
 25922 ;;		Nothing
 25923 ;; This function is called by:
 25924 ;;		_I2c_ReadData
 25925 ;; This function uses a non-reentrant model
 25926 ;;
 25927                           
 25928                           	psect	text126
 25929  004E1A                     __ptext126:
 25930                           	opt stack 0
 25931  004E1A                     _SetAckStatus:
 25932                           	opt stack 14
 25933                           
 25934                           ;incstack = 0
 25935                           ;SetAckStatus@AckSts stored from wreg
 25936  004E1A  0100               	movlb	0	; () banked
 25937  004E1C  6F60               	movwf	SetAckStatus@AckSts& (0+255),b
 25938                           
 25939                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 25940  004E1E  0100               	movlb	0	; () banked
 25941  004E20  B160               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 25942  004E22  D002               	bra	u5285
 25943  004E24  9A71               	bcf	3953,5,c	;volatile
 25944  004E26  D001               	bra	u5286
 25945  004E28                     u5285:
 25946  004E28  8A71               	bsf	3953,5,c	;volatile
 25947  004E2A                     u5286:
 25948                           
 25949                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 25950  004E2A  8871               	bsf	3953,4,c	;volatile
 25951  004E2C  0012               	return		;funcret
 25952  004E2E                     __end_of_SetAckStatus:
 25953                           	opt stack 0
 25954                           tosu	equ	0xFFF
 25955                           tosh	equ	0xFFE
 25956                           tosl	equ	0xFFD
 25957                           pclath	equ	0xFFA
 25958                           tblptru	equ	0xFF8
 25959                           tblptrh	equ	0xFF7
 25960                           tblptrl	equ	0xFF6
 25961                           tablat	equ	0xFF5
 25962                           prodh	equ	0xFF4
 25963                           prodl	equ	0xFF3
 25964                           intcon	equ	0xFF2
 25965                           intcon2	equ	0xFF1
 25966                           intcon3	equ	0xFF0
 25967                           indf0	equ	0xFEF
 25968                           postinc0	equ	0xFEE
 25969                           plusw0	equ	0xFEB
 25970                           fsr0h	equ	0xFEA
 25971                           fsr0l	equ	0xFE9
 25972                           wreg	equ	0xFE8
 25973                           indf1	equ	0xFE7
 25974                           postinc1	equ	0xFE6
 25975                           postdec1	equ	0xFE5
 25976                           fsr1h	equ	0xFE2
 25977                           fsr1l	equ	0xFE1
 25978                           indf2	equ	0xFDF
 25979                           postinc2	equ	0xFDE
 25980                           postdec2	equ	0xFDD
 25981                           plusw2	equ	0xFDB
 25982                           fsr2h	equ	0xFDA
 25983                           fsr2l	equ	0xFD9
 25984                           status	equ	0xFD8
 25985                           
 25986 ;; *************** function _ReadByte *****************
 25987 ;; Defined at:
 25988 ;;		line 204 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25989 ;; Parameters:    Size  Location     Type
 25990 ;;		None
 25991 ;; Auto vars:     Size  Location     Type
 25992 ;;  Byte            1    0[BANK0 ] unsigned char 
 25993 ;; Return value:  Size  Location     Type
 25994 ;;                  1    wreg      unsigned char 
 25995 ;; Registers used:
 25996 ;;		wreg, status,2
 25997 ;; Tracked objects:
 25998 ;;		On entry : 0/0
 25999 ;;		On exit  : 0/0
 26000 ;;		Unchanged: 0/0
 26001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26003 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26005 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26006 ;;Total ram usage:        1 bytes
 26007 ;; Hardware stack levels used:    1
 26008 ;; Hardware stack levels required when called:   11
 26009 ;; This function calls:
 26010 ;;		Nothing
 26011 ;; This function is called by:
 26012 ;;		_I2c_ReadData
 26013 ;; This function uses a non-reentrant model
 26014 ;;
 26015                           
 26016                           	psect	text127
 26017  004EF4                     __ptext127:
 26018                           	opt stack 0
 26019  004EF4                     _ReadByte:
 26020                           	opt stack 14
 26021                           
 26022                           ;i2c_drv.c: 207: UINT8 Byte;
 26023                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 26024                           
 26025                           ;incstack = 0
 26026  004EF4  CF75 F060          	movff	3957,ReadByte@Byte	;volatile
 26027                           
 26028                           ;i2c_drv.c: 213: return Byte;
 26029  004EF8  0100               	movlb	0	; () banked
 26030  004EFA  5160               	movf	ReadByte@Byte& (0+255),w,b
 26031  004EFC  0012               	return	
 26032  004EFE                     __end_of_ReadByte:
 26033                           	opt stack 0
 26034                           tosu	equ	0xFFF
 26035                           tosh	equ	0xFFE
 26036                           tosl	equ	0xFFD
 26037                           pclath	equ	0xFFA
 26038                           tblptru	equ	0xFF8
 26039                           tblptrh	equ	0xFF7
 26040                           tblptrl	equ	0xFF6
 26041                           tablat	equ	0xFF5
 26042                           prodh	equ	0xFF4
 26043                           prodl	equ	0xFF3
 26044                           intcon	equ	0xFF2
 26045                           intcon2	equ	0xFF1
 26046                           intcon3	equ	0xFF0
 26047                           indf0	equ	0xFEF
 26048                           postinc0	equ	0xFEE
 26049                           plusw0	equ	0xFEB
 26050                           fsr0h	equ	0xFEA
 26051                           fsr0l	equ	0xFE9
 26052                           wreg	equ	0xFE8
 26053                           indf1	equ	0xFE7
 26054                           postinc1	equ	0xFE6
 26055                           postdec1	equ	0xFE5
 26056                           fsr1h	equ	0xFE2
 26057                           fsr1l	equ	0xFE1
 26058                           indf2	equ	0xFDF
 26059                           postinc2	equ	0xFDE
 26060                           postdec2	equ	0xFDD
 26061                           plusw2	equ	0xFDB
 26062                           fsr2h	equ	0xFDA
 26063                           fsr2l	equ	0xFD9
 26064                           status	equ	0xFD8
 26065                           
 26066 ;; *************** function _GenerateEvt *****************
 26067 ;; Defined at:
 26068 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 26069 ;; Parameters:    Size  Location     Type
 26070 ;;  Event           2    0[BANK0 ] PTR struct EventStructur
 26071 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 26072 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 26073 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(253), 
 26074 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 26075 ;; Auto vars:     Size  Location     Type
 26076 ;;  EventStatus     1    2[BANK0 ] enum E7721
 26077 ;; Return value:  Size  Location     Type
 26078 ;;                  1    wreg      enum E7693
 26079 ;; Registers used:
 26080 ;;		wreg, fsr2l, fsr2h, status,2
 26081 ;; Tracked objects:
 26082 ;;		On entry : 0/0
 26083 ;;		On exit  : 0/0
 26084 ;;		Unchanged: 0/0
 26085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26086 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26089 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26090 ;;Total ram usage:        3 bytes
 26091 ;; Hardware stack levels used:    1
 26092 ;; Hardware stack levels required when called:   11
 26093 ;; This function calls:
 26094 ;;		Nothing
 26095 ;; This function is called by:
 26096 ;;		_I2c_ReadData
 26097 ;;		_MdmWifi_StartWifiModemSm
 26098 ;;		_MdmWifiGetUartData
 26099 ;;		_MdmWifiEvtParser
 26100 ;;		_ReceiveDataSm
 26101 ;;		_I2cSlv_SendI2cMsg
 26102 ;;		_I2cSlv_ReceiveI2cMsg
 26103 ;;		_MdmWifi_RestartModem
 26104 ;;		_MdmWifiCmd_StartConnection
 26105 ;;		_MdmWifiCmd_SendData
 26106 ;; This function uses a non-reentrant model
 26107 ;;
 26108                           
 26109                           	psect	text128
 26110  004DAA                     __ptext128:
 26111                           	opt stack 0
 26112  004DAA                     _GenerateEvt:
 26113                           	opt stack 13
 26114                           
 26115                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 26116                           
 26117                           ; BSR set to: 0
 26118                           ;incstack = 0
 26119  004DAA  0E00               	movlw	0
 26120  004DAC  0100               	movlb	0	; () banked
 26121  004DAE  6F62               	movwf	GenerateEvt@EventStatus& (0+255),b
 26122                           
 26123                           ; BSR set to: 0
 26124                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 26125  004DB0  C060  FFD9         	movff	GenerateEvt@Event,fsr2l
 26126  004DB4  C061  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 26127  004DB8  0E02               	movlw	2
 26128  004DBA  6EDF               	movwf	indf2,c
 26129                           
 26130                           ; BSR set to: 0
 26131                           ;os_ser.c: 81: EventStatus = EventSent;
 26132  004DBC  0E02               	movlw	2
 26133  004DBE  6F62               	movwf	GenerateEvt@EventStatus& (0+255),b
 26134  004DC0  0012               	return	
 26135  004DC2                     __end_of_GenerateEvt:
 26136                           	opt stack 0
 26137                           tosu	equ	0xFFF
 26138                           tosh	equ	0xFFE
 26139                           tosl	equ	0xFFD
 26140                           pclath	equ	0xFFA
 26141                           tblptru	equ	0xFF8
 26142                           tblptrh	equ	0xFF7
 26143                           tblptrl	equ	0xFF6
 26144                           tablat	equ	0xFF5
 26145                           prodh	equ	0xFF4
 26146                           prodl	equ	0xFF3
 26147                           intcon	equ	0xFF2
 26148                           intcon2	equ	0xFF1
 26149                           intcon3	equ	0xFF0
 26150                           indf0	equ	0xFEF
 26151                           postinc0	equ	0xFEE
 26152                           plusw0	equ	0xFEB
 26153                           fsr0h	equ	0xFEA
 26154                           fsr0l	equ	0xFE9
 26155                           wreg	equ	0xFE8
 26156                           indf1	equ	0xFE7
 26157                           postinc1	equ	0xFE6
 26158                           postdec1	equ	0xFE5
 26159                           fsr1h	equ	0xFE2
 26160                           fsr1l	equ	0xFE1
 26161                           indf2	equ	0xFDF
 26162                           postinc2	equ	0xFDE
 26163                           postdec2	equ	0xFDD
 26164                           plusw2	equ	0xFDB
 26165                           fsr2h	equ	0xFDA
 26166                           fsr2l	equ	0xFD9
 26167                           status	equ	0xFD8
 26168                           
 26169 ;; *************** function _EnableReceiver *****************
 26170 ;; Defined at:
 26171 ;;		line 177 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26172 ;; Parameters:    Size  Location     Type
 26173 ;;		None
 26174 ;; Auto vars:     Size  Location     Type
 26175 ;;		None
 26176 ;; Return value:  Size  Location     Type
 26177 ;;                  1    wreg      void 
 26178 ;; Registers used:
 26179 ;;		status,2, status,0
 26180 ;; Tracked objects:
 26181 ;;		On entry : 0/0
 26182 ;;		On exit  : 0/0
 26183 ;;		Unchanged: 0/0
 26184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26189 ;;Total ram usage:        0 bytes
 26190 ;; Hardware stack levels used:    1
 26191 ;; Hardware stack levels required when called:   11
 26192 ;; This function calls:
 26193 ;;		Nothing
 26194 ;; This function is called by:
 26195 ;;		_I2c_ReadData
 26196 ;; This function uses a non-reentrant model
 26197 ;;
 26198                           
 26199                           	psect	text129
 26200  004F26                     __ptext129:
 26201                           	opt stack 0
 26202  004F26                     _EnableReceiver:
 26203                           	opt stack 14
 26204                           
 26205                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 26206                           
 26207                           ; BSR set to: 0
 26208                           ;incstack = 0
 26209  004F26  8671               	bsf	3953,3,c	;volatile
 26210  004F28  0012               	return		;funcret
 26211  004F2A                     __end_of_EnableReceiver:
 26212                           	opt stack 0
 26213                           tosu	equ	0xFFF
 26214                           tosh	equ	0xFFE
 26215                           tosl	equ	0xFFD
 26216                           pclath	equ	0xFFA
 26217                           tblptru	equ	0xFF8
 26218                           tblptrh	equ	0xFF7
 26219                           tblptrl	equ	0xFF6
 26220                           tablat	equ	0xFF5
 26221                           prodh	equ	0xFF4
 26222                           prodl	equ	0xFF3
 26223                           intcon	equ	0xFF2
 26224                           intcon2	equ	0xFF1
 26225                           intcon3	equ	0xFF0
 26226                           indf0	equ	0xFEF
 26227                           postinc0	equ	0xFEE
 26228                           plusw0	equ	0xFEB
 26229                           fsr0h	equ	0xFEA
 26230                           fsr0l	equ	0xFE9
 26231                           wreg	equ	0xFE8
 26232                           indf1	equ	0xFE7
 26233                           postinc1	equ	0xFE6
 26234                           postdec1	equ	0xFE5
 26235                           fsr1h	equ	0xFE2
 26236                           fsr1l	equ	0xFE1
 26237                           indf2	equ	0xFDF
 26238                           postinc2	equ	0xFDE
 26239                           postdec2	equ	0xFDD
 26240                           plusw2	equ	0xFDB
 26241                           fsr2h	equ	0xFDA
 26242                           fsr2l	equ	0xFD9
 26243                           status	equ	0xFD8
 26244                           
 26245 ;; *************** function _CheckTxStatus *****************
 26246 ;; Defined at:
 26247 ;;		line 148 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26248 ;; Parameters:    Size  Location     Type
 26249 ;;		None
 26250 ;; Auto vars:     Size  Location     Type
 26251 ;;		None
 26252 ;; Return value:  Size  Location     Type
 26253 ;;                  1    wreg      unsigned char 
 26254 ;; Registers used:
 26255 ;;		wreg, status,2, status,0
 26256 ;; Tracked objects:
 26257 ;;		On entry : 0/0
 26258 ;;		On exit  : 0/0
 26259 ;;		Unchanged: 0/0
 26260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26265 ;;Total ram usage:        0 bytes
 26266 ;; Hardware stack levels used:    1
 26267 ;; Hardware stack levels required when called:   11
 26268 ;; This function calls:
 26269 ;;		Nothing
 26270 ;; This function is called by:
 26271 ;;		_I2c_WriteData
 26272 ;;		_I2c_ReadData
 26273 ;; This function uses a non-reentrant model
 26274 ;;
 26275                           
 26276                           	psect	text130
 26277  004EFE                     __ptext130:
 26278                           	opt stack 0
 26279  004EFE                     _CheckTxStatus:
 26280                           	opt stack 14
 26281                           
 26282                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 26283                           
 26284                           ;incstack = 0
 26285  004EFE  4073               	rrncf	3955,w,c	;volatile
 26286  004F00  42E8               	rrncf	wreg,f,c
 26287  004F02  0B3F               	andlw	63
 26288  004F04  0B01               	andlw	1
 26289  004F06  0012               	return	
 26290  004F08                     __end_of_CheckTxStatus:
 26291                           	opt stack 0
 26292                           tosu	equ	0xFFF
 26293                           tosh	equ	0xFFE
 26294                           tosl	equ	0xFFD
 26295                           pclath	equ	0xFFA
 26296                           tblptru	equ	0xFF8
 26297                           tblptrh	equ	0xFF7
 26298                           tblptrl	equ	0xFF6
 26299                           tablat	equ	0xFF5
 26300                           prodh	equ	0xFF4
 26301                           prodl	equ	0xFF3
 26302                           intcon	equ	0xFF2
 26303                           intcon2	equ	0xFF1
 26304                           intcon3	equ	0xFF0
 26305                           indf0	equ	0xFEF
 26306                           postinc0	equ	0xFEE
 26307                           plusw0	equ	0xFEB
 26308                           fsr0h	equ	0xFEA
 26309                           fsr0l	equ	0xFE9
 26310                           wreg	equ	0xFE8
 26311                           indf1	equ	0xFE7
 26312                           postinc1	equ	0xFE6
 26313                           postdec1	equ	0xFE5
 26314                           fsr1h	equ	0xFE2
 26315                           fsr1l	equ	0xFE1
 26316                           indf2	equ	0xFDF
 26317                           postinc2	equ	0xFDE
 26318                           postdec2	equ	0xFDD
 26319                           plusw2	equ	0xFDB
 26320                           fsr2h	equ	0xFDA
 26321                           fsr2l	equ	0xFD9
 26322                           status	equ	0xFD8
 26323                           
 26324 ;; *************** function _CheckAckStatus *****************
 26325 ;; Defined at:
 26326 ;;		line 134 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26327 ;; Parameters:    Size  Location     Type
 26328 ;;		None
 26329 ;; Auto vars:     Size  Location     Type
 26330 ;;		None
 26331 ;; Return value:  Size  Location     Type
 26332 ;;                  1    wreg      unsigned char 
 26333 ;; Registers used:
 26334 ;;		wreg, status,2, status,0
 26335 ;; Tracked objects:
 26336 ;;		On entry : 0/0
 26337 ;;		On exit  : 0/0
 26338 ;;		Unchanged: 0/0
 26339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26344 ;;Total ram usage:        0 bytes
 26345 ;; Hardware stack levels used:    1
 26346 ;; Hardware stack levels required when called:   11
 26347 ;; This function calls:
 26348 ;;		Nothing
 26349 ;; This function is called by:
 26350 ;;		_I2c_WriteData
 26351 ;;		_I2c_ReadData
 26352 ;; This function uses a non-reentrant model
 26353 ;;
 26354                           
 26355                           	psect	text131
 26356  004F08                     __ptext131:
 26357                           	opt stack 0
 26358  004F08                     _CheckAckStatus:
 26359                           	opt stack 14
 26360                           
 26361                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 26362                           
 26363                           ;incstack = 0
 26364  004F08  4471               	rlncf	3953,w,c	;volatile
 26365  004F0A  46E8               	rlncf	wreg,f,c
 26366  004F0C  0B03               	andlw	3
 26367  004F0E  0B01               	andlw	1
 26368  004F10  0012               	return	
 26369  004F12                     __end_of_CheckAckStatus:
 26370                           	opt stack 0
 26371                           tosu	equ	0xFFF
 26372                           tosh	equ	0xFFE
 26373                           tosl	equ	0xFFD
 26374                           pclath	equ	0xFFA
 26375                           tblptru	equ	0xFF8
 26376                           tblptrh	equ	0xFF7
 26377                           tblptrl	equ	0xFF6
 26378                           tablat	equ	0xFF5
 26379                           prodh	equ	0xFF4
 26380                           prodl	equ	0xFF3
 26381                           intcon	equ	0xFF2
 26382                           intcon2	equ	0xFF1
 26383                           intcon3	equ	0xFF0
 26384                           indf0	equ	0xFEF
 26385                           postinc0	equ	0xFEE
 26386                           plusw0	equ	0xFEB
 26387                           fsr0h	equ	0xFEA
 26388                           fsr0l	equ	0xFE9
 26389                           wreg	equ	0xFE8
 26390                           indf1	equ	0xFE7
 26391                           postinc1	equ	0xFE6
 26392                           postdec1	equ	0xFE5
 26393                           fsr1h	equ	0xFE2
 26394                           fsr1l	equ	0xFE1
 26395                           indf2	equ	0xFDF
 26396                           postinc2	equ	0xFDE
 26397                           postdec2	equ	0xFDD
 26398                           plusw2	equ	0xFDB
 26399                           fsr2h	equ	0xFDA
 26400                           fsr2l	equ	0xFD9
 26401                           status	equ	0xFD8
 26402                           
 26403 ;; *************** function _LowPriorityIsr *****************
 26404 ;; Defined at:
 26405 ;;		line 236 in file "../Source/c/01_Hal/01_Sys/irq.c"
 26406 ;; Parameters:    Size  Location     Type
 26407 ;;		None
 26408 ;; Auto vars:     Size  Location     Type
 26409 ;;		None
 26410 ;; Return value:  Size  Location     Type
 26411 ;;                  1    wreg      void 
 26412 ;; Registers used:
 26413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26414 ;; Tracked objects:
 26415 ;;		On entry : 0/0
 26416 ;;		On exit  : 0/0
 26417 ;;		Unchanged: 0/0
 26418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26421 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26422 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26423 ;;Total ram usage:       21 bytes
 26424 ;; Hardware stack levels used:    1
 26425 ;; Hardware stack levels required when called:   10
 26426 ;; This function calls:
 26427 ;;		_Tmr_Tmr2Isr
 26428 ;; This function is called by:
 26429 ;;		Interrupt level 1
 26430 ;; This function uses a non-reentrant model
 26431 ;;
 26432                           
 26433                           	psect	intcodelo
 26434  000018                     __pintcodelo:
 26435                           	opt stack 0
 26436  000018                     _LowPriorityIsr:
 26437                           	opt stack 8
 26438                           
 26439                           ;incstack = 0
 26440  000018  805D               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 26441  00001A  CFD8 F029          	movff	status,??_LowPriorityIsr
 26442  00001E  CFE8 F02A          	movff	wreg,??_LowPriorityIsr+1
 26443  000022  CFE0 F02B          	movff	bsr,??_LowPriorityIsr+2
 26444  000026  CFFA F02C          	movff	pclath,??_LowPriorityIsr+3
 26445  00002A  CFFB F02D          	movff	pclatu,??_LowPriorityIsr+4
 26446  00002E  CFE9 F02E          	movff	fsr0l,??_LowPriorityIsr+5
 26447  000032  CFEA F02F          	movff	fsr0h,??_LowPriorityIsr+6
 26448  000036  CFE1 F030          	movff	fsr1l,??_LowPriorityIsr+7
 26449  00003A  CFE2 F031          	movff	fsr1h,??_LowPriorityIsr+8
 26450  00003E  CFD9 F032          	movff	fsr2l,??_LowPriorityIsr+9
 26451  000042  CFDA F033          	movff	fsr2h,??_LowPriorityIsr+10
 26452  000046  CFF3 F034          	movff	prodl,??_LowPriorityIsr+11
 26453  00004A  CFF4 F035          	movff	prodh,??_LowPriorityIsr+12
 26454  00004E  CFF6 F036          	movff	tblptrl,??_LowPriorityIsr+13
 26455  000052  CFF7 F037          	movff	tblptrh,??_LowPriorityIsr+14
 26456  000056  CFF8 F038          	movff	tblptru,??_LowPriorityIsr+15
 26457  00005A  CFF5 F039          	movff	tablat,??_LowPriorityIsr+16
 26458  00005E  C05D  F03A         	movff	btemp,??_LowPriorityIsr+17
 26459  000062  C05E  F03B         	movff	btemp+1,??_LowPriorityIsr+18
 26460  000066  C05F  F03C         	movff	btemp+2,??_LowPriorityIsr+19
 26461  00006A  C060  F03D         	movff	btemp+3,??_LowPriorityIsr+20
 26462                           
 26463                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 26464  00006E  B29E               	btfsc	3998,1,c	;volatile
 26465                           
 26466                           ;irq.c: 259: {
 26467                           ;irq.c: 261: Tmr_Tmr2Isr();
 26468  000070  EC30  F026         	call	_Tmr_Tmr2Isr	;wreg free
 26469  000074  C03D  F060         	movff	??_LowPriorityIsr+20,btemp+3
 26470  000078  C03C  F05F         	movff	??_LowPriorityIsr+19,btemp+2
 26471  00007C  C03B  F05E         	movff	??_LowPriorityIsr+18,btemp+1
 26472  000080  C03A  F05D         	movff	??_LowPriorityIsr+17,btemp
 26473  000084  C039  FFF5         	movff	??_LowPriorityIsr+16,tablat
 26474  000088  C038  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 26475  00008C  C037  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 26476  000090  C036  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 26477  000094  C035  FFF4         	movff	??_LowPriorityIsr+12,prodh
 26478  000098  C034  FFF3         	movff	??_LowPriorityIsr+11,prodl
 26479  00009C  C033  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 26480  0000A0  C032  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 26481  0000A4  C031  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 26482  0000A8  C030  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 26483  0000AC  C02F  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 26484  0000B0  C02E  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 26485  0000B4  C02D  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 26486  0000B8  C02C  FFFA         	movff	??_LowPriorityIsr+3,pclath
 26487  0000BC  C02B  FFE0         	movff	??_LowPriorityIsr+2,bsr
 26488  0000C0  C02A  FFE8         	movff	??_LowPriorityIsr+1,wreg
 26489  0000C4  C029  FFD8         	movff	??_LowPriorityIsr,status
 26490  0000C8  905D               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 26491  0000CA  0010               	retfie	
 26492  0000CC                     __end_of_LowPriorityIsr:
 26493                           	opt stack 0
 26494                           tosu	equ	0xFFF
 26495                           tosh	equ	0xFFE
 26496                           tosl	equ	0xFFD
 26497                           pclatu	equ	0xFFB
 26498                           pclath	equ	0xFFA
 26499                           tblptru	equ	0xFF8
 26500                           tblptrh	equ	0xFF7
 26501                           tblptrl	equ	0xFF6
 26502                           tablat	equ	0xFF5
 26503                           prodh	equ	0xFF4
 26504                           prodl	equ	0xFF3
 26505                           intcon	equ	0xFF2
 26506                           intcon2	equ	0xFF1
 26507                           intcon3	equ	0xFF0
 26508                           indf0	equ	0xFEF
 26509                           postinc0	equ	0xFEE
 26510                           plusw0	equ	0xFEB
 26511                           fsr0h	equ	0xFEA
 26512                           fsr0l	equ	0xFE9
 26513                           wreg	equ	0xFE8
 26514                           indf1	equ	0xFE7
 26515                           postinc1	equ	0xFE6
 26516                           postdec1	equ	0xFE5
 26517                           fsr1h	equ	0xFE2
 26518                           fsr1l	equ	0xFE1
 26519                           bsr	equ	0xFE0
 26520                           indf2	equ	0xFDF
 26521                           postinc2	equ	0xFDE
 26522                           postdec2	equ	0xFDD
 26523                           plusw2	equ	0xFDB
 26524                           fsr2h	equ	0xFDA
 26525                           fsr2l	equ	0xFD9
 26526                           status	equ	0xFD8
 26527                           
 26528 ;; *************** function _Tmr_Tmr2Isr *****************
 26529 ;; Defined at:
 26530 ;;		line 308 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
 26531 ;; Parameters:    Size  Location     Type
 26532 ;;		None
 26533 ;; Auto vars:     Size  Location     Type
 26534 ;;		None
 26535 ;; Return value:  Size  Location     Type
 26536 ;;                  1    wreg      void 
 26537 ;; Registers used:
 26538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26539 ;; Tracked objects:
 26540 ;;		On entry : 0/0
 26541 ;;		On exit  : 0/0
 26542 ;;		Unchanged: 0/0
 26543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26548 ;;Total ram usage:        0 bytes
 26549 ;; Hardware stack levels used:    1
 26550 ;; Hardware stack levels required when called:    9
 26551 ;; This function calls:
 26552 ;;		Absolute function
 26553 ;;		_Sch_SchmIntService
 26554 ;; This function is called by:
 26555 ;;		_LowPriorityIsr
 26556 ;; This function uses a non-reentrant model
 26557 ;;
 26558                           
 26559                           	psect	text133
 26560  004C60                     __ptext133:
 26561                           	opt stack 0
 26562  004C60                     _Tmr_Tmr2Isr:
 26563                           	opt stack 8
 26564                           
 26565                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 26566                           
 26567                           ;incstack = 0
 26568  004C60  929E               	bcf	3998,1,c	;volatile
 26569                           
 26570                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 26571  004C62  0101               	movlb	1	; () banked
 26572  004C64  5154               	movf	_Tmr2IsrCallback& (0+255),w,b
 26573  004C66  1155               	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 26574  004C68  B4D8               	btfsc	status,2,c
 26575  004C6A  0012               	return	
 26576                           
 26577                           ; BSR set to: 1
 26578                           ;tmr_drv.c: 315: {
 26579                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 26580  004C6C  D801               	call	i1u800_28
 26581  004C6E  0012               	return	
 26582  004C70                     i1u800_28:
 26583  004C70  0005               	push	
 26584  004C72  6EFA               	movwf	pclath,c
 26585  004C74  5154               	movf	_Tmr2IsrCallback& (0+255),w,b
 26586  004C76  6EFD               	movwf	tosl,c
 26587  004C78  5155               	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 26588  004C7A  6EFE               	movwf	tosh,c
 26589  004C7C  6AFF               	clrf	tosu,c
 26590  004C7E  50FA               	movf	pclath,w,c
 26591  004C80  0012               	return		;indir
 26592  004C82                     __end_of_Tmr_Tmr2Isr:
 26593                           	opt stack 0
 26594                           tosu	equ	0xFFF
 26595                           tosh	equ	0xFFE
 26596                           tosl	equ	0xFFD
 26597                           pclatu	equ	0xFFB
 26598                           pclath	equ	0xFFA
 26599                           tblptru	equ	0xFF8
 26600                           tblptrh	equ	0xFF7
 26601                           tblptrl	equ	0xFF6
 26602                           tablat	equ	0xFF5
 26603                           prodh	equ	0xFF4
 26604                           prodl	equ	0xFF3
 26605                           intcon	equ	0xFF2
 26606                           intcon2	equ	0xFF1
 26607                           intcon3	equ	0xFF0
 26608                           indf0	equ	0xFEF
 26609                           postinc0	equ	0xFEE
 26610                           plusw0	equ	0xFEB
 26611                           fsr0h	equ	0xFEA
 26612                           fsr0l	equ	0xFE9
 26613                           wreg	equ	0xFE8
 26614                           indf1	equ	0xFE7
 26615                           postinc1	equ	0xFE6
 26616                           postdec1	equ	0xFE5
 26617                           fsr1h	equ	0xFE2
 26618                           fsr1l	equ	0xFE1
 26619                           bsr	equ	0xFE0
 26620                           indf2	equ	0xFDF
 26621                           postinc2	equ	0xFDE
 26622                           postdec2	equ	0xFDD
 26623                           plusw2	equ	0xFDB
 26624                           fsr2h	equ	0xFDA
 26625                           fsr2l	equ	0xFD9
 26626                           status	equ	0xFD8
 26627                           
 26628 ;; *************** function _Sch_SchmIntService *****************
 26629 ;; Defined at:
 26630 ;;		line 214 in file "../Source/c/02_Osl/os_sched.c"
 26631 ;; Parameters:    Size  Location     Type
 26632 ;;		None
 26633 ;; Auto vars:     Size  Location     Type
 26634 ;;		None
 26635 ;; Return value:  Size  Location     Type
 26636 ;;                  1    wreg      void 
 26637 ;; Registers used:
 26638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26639 ;; Tracked objects:
 26640 ;;		On entry : 0/0
 26641 ;;		On exit  : 0/0
 26642 ;;		Unchanged: 0/0
 26643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26648 ;;Total ram usage:        0 bytes
 26649 ;; Hardware stack levels used:    1
 26650 ;; Hardware stack levels required when called:    8
 26651 ;; This function calls:
 26652 ;;		_OsAlrm_ProcessOsAlarms
 26653 ;;		_UpdateOsCounters
 26654 ;;		_UpdateSchFlag
 26655 ;; This function is called by:
 26656 ;;		_SystemInit
 26657 ;;		_Tmr_Tmr2Isr
 26658 ;; This function uses a non-reentrant model
 26659 ;;
 26660                           
 26661                           	psect	text134
 26662  004EBC                     __ptext134:
 26663                           	opt stack 0
 26664  004EBC                     _Sch_SchmIntService:
 26665                           	opt stack 8
 26666                           
 26667                           ;os_sched.c: 217: UpdateSchFlag();
 26668                           
 26669                           ;incstack = 0
 26670  004EBC  ECA0  F026         	call	_UpdateSchFlag	;wreg free
 26671                           
 26672                           ;os_sched.c: 219: UpdateOsCounters();
 26673  004EC0  EC40  F027         	call	_UpdateOsCounters	;wreg free
 26674                           
 26675                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 26676  004EC4  ECED  F00D         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 26677  004EC8  0012               	return		;funcret
 26678  004ECA                     __end_of_Sch_SchmIntService:
 26679                           	opt stack 0
 26680                           tosu	equ	0xFFF
 26681                           tosh	equ	0xFFE
 26682                           tosl	equ	0xFFD
 26683                           pclatu	equ	0xFFB
 26684                           pclath	equ	0xFFA
 26685                           tblptru	equ	0xFF8
 26686                           tblptrh	equ	0xFF7
 26687                           tblptrl	equ	0xFF6
 26688                           tablat	equ	0xFF5
 26689                           prodh	equ	0xFF4
 26690                           prodl	equ	0xFF3
 26691                           intcon	equ	0xFF2
 26692                           intcon2	equ	0xFF1
 26693                           intcon3	equ	0xFF0
 26694                           indf0	equ	0xFEF
 26695                           postinc0	equ	0xFEE
 26696                           plusw0	equ	0xFEB
 26697                           fsr0h	equ	0xFEA
 26698                           fsr0l	equ	0xFE9
 26699                           wreg	equ	0xFE8
 26700                           indf1	equ	0xFE7
 26701                           postinc1	equ	0xFE6
 26702                           postdec1	equ	0xFE5
 26703                           fsr1h	equ	0xFE2
 26704                           fsr1l	equ	0xFE1
 26705                           bsr	equ	0xFE0
 26706                           indf2	equ	0xFDF
 26707                           postinc2	equ	0xFDE
 26708                           postdec2	equ	0xFDD
 26709                           plusw2	equ	0xFDB
 26710                           fsr2h	equ	0xFDA
 26711                           fsr2l	equ	0xFD9
 26712                           status	equ	0xFD8
 26713                           
 26714 ;; *************** function _UpdateSchFlag *****************
 26715 ;; Defined at:
 26716 ;;		line 132 in file "../Source/c/02_Osl/os_sched.c"
 26717 ;; Parameters:    Size  Location     Type
 26718 ;;		None
 26719 ;; Auto vars:     Size  Location     Type
 26720 ;;		None
 26721 ;; Return value:  Size  Location     Type
 26722 ;;                  1    wreg      void 
 26723 ;; Registers used:
 26724 ;;		wreg, status,2, status,0
 26725 ;; Tracked objects:
 26726 ;;		On entry : 0/0
 26727 ;;		On exit  : 0/0
 26728 ;;		Unchanged: 0/0
 26729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26734 ;;Total ram usage:        0 bytes
 26735 ;; Hardware stack levels used:    1
 26736 ;; Hardware stack levels required when called:    4
 26737 ;; This function calls:
 26738 ;;		Nothing
 26739 ;; This function is called by:
 26740 ;;		_Sch_SchmIntService
 26741 ;; This function uses a non-reentrant model
 26742 ;;
 26743                           
 26744                           	psect	text135
 26745  004D40                     __ptext135:
 26746                           	opt stack 0
 26747  004D40                     _UpdateSchFlag:
 26748                           	opt stack 11
 26749                           
 26750                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 26751                           ;os_sched.c: 138: InterruptCounter++;
 26752                           
 26753                           ;incstack = 0
 26754  004D40  0101               	movlb	1	; () banked
 26755  004D42  4B44               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 26756  004D44  2B45               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 26757                           
 26758                           ; BSR set to: 1
 26759                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 26760  004D46  5144               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 26761  004D48  1145               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 26762  004D4A  B4D8               	btfsc	status,2,c
 26763  004D4C  0012               	return	
 26764                           
 26765                           ; BSR set to: 1
 26766                           ;os_sched.c: 141: {
 26767                           ;os_sched.c: 143: InterruptCounter = 0;
 26768  004D4E  0E00               	movlw	0
 26769  004D50  6F45               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 26770  004D52  0E00               	movlw	0
 26771  004D54  6F44               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 26772                           
 26773                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 26774  004D56  0E00               	movlw	0
 26775  004D58  6FE1               	movwf	_MainSystemTimebaseFlag& (0+255),b
 26776  004D5A  0012               	return	
 26777  004D5C                     __end_of_UpdateSchFlag:
 26778                           	opt stack 0
 26779                           tosu	equ	0xFFF
 26780                           tosh	equ	0xFFE
 26781                           tosl	equ	0xFFD
 26782                           pclatu	equ	0xFFB
 26783                           pclath	equ	0xFFA
 26784                           tblptru	equ	0xFF8
 26785                           tblptrh	equ	0xFF7
 26786                           tblptrl	equ	0xFF6
 26787                           tablat	equ	0xFF5
 26788                           prodh	equ	0xFF4
 26789                           prodl	equ	0xFF3
 26790                           intcon	equ	0xFF2
 26791                           intcon2	equ	0xFF1
 26792                           intcon3	equ	0xFF0
 26793                           indf0	equ	0xFEF
 26794                           postinc0	equ	0xFEE
 26795                           plusw0	equ	0xFEB
 26796                           fsr0h	equ	0xFEA
 26797                           fsr0l	equ	0xFE9
 26798                           wreg	equ	0xFE8
 26799                           indf1	equ	0xFE7
 26800                           postinc1	equ	0xFE6
 26801                           postdec1	equ	0xFE5
 26802                           fsr1h	equ	0xFE2
 26803                           fsr1l	equ	0xFE1
 26804                           bsr	equ	0xFE0
 26805                           indf2	equ	0xFDF
 26806                           postinc2	equ	0xFDE
 26807                           postdec2	equ	0xFDD
 26808                           plusw2	equ	0xFDB
 26809                           fsr2h	equ	0xFDA
 26810                           fsr2l	equ	0xFD9
 26811                           status	equ	0xFD8
 26812                           
 26813 ;; *************** function _UpdateOsCounters *****************
 26814 ;; Defined at:
 26815 ;;		line 157 in file "../Source/c/02_Osl/os_sched.c"
 26816 ;; Parameters:    Size  Location     Type
 26817 ;;		None
 26818 ;; Auto vars:     Size  Location     Type
 26819 ;;		None
 26820 ;; Return value:  Size  Location     Type
 26821 ;;                  1    wreg      void 
 26822 ;; Registers used:
 26823 ;;		wreg, status,2, status,0
 26824 ;; Tracked objects:
 26825 ;;		On entry : 0/0
 26826 ;;		On exit  : 0/0
 26827 ;;		Unchanged: 0/0
 26828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26833 ;;Total ram usage:        0 bytes
 26834 ;; Hardware stack levels used:    1
 26835 ;; Hardware stack levels required when called:    4
 26836 ;; This function calls:
 26837 ;;		Nothing
 26838 ;; This function is called by:
 26839 ;;		_Sch_SchmIntService
 26840 ;; This function uses a non-reentrant model
 26841 ;;
 26842                           
 26843                           	psect	text136
 26844  004E80                     __ptext136:
 26845                           	opt stack 0
 26846  004E80                     _UpdateOsCounters:
 26847                           	opt stack 11
 26848                           
 26849                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 26850                           
 26851                           ; BSR set to: 1
 26852                           ;incstack = 0
 26853  004E80  0E01               	movlw	1
 26854  004E82  0101               	movlb	1	; () banked
 26855  004E84  272E               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 26856  004E86  0E00               	movlw	0
 26857  004E88  232F               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 26858  004E8A  2330               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 26859  004E8C  2331               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 26860                           
 26861                           ; BSR set to: 1
 26862  004E8E  0012               	return		;funcret
 26863  004E90                     __end_of_UpdateOsCounters:
 26864                           	opt stack 0
 26865                           tosu	equ	0xFFF
 26866                           tosh	equ	0xFFE
 26867                           tosl	equ	0xFFD
 26868                           pclatu	equ	0xFFB
 26869                           pclath	equ	0xFFA
 26870                           tblptru	equ	0xFF8
 26871                           tblptrh	equ	0xFF7
 26872                           tblptrl	equ	0xFF6
 26873                           tablat	equ	0xFF5
 26874                           prodh	equ	0xFF4
 26875                           prodl	equ	0xFF3
 26876                           intcon	equ	0xFF2
 26877                           intcon2	equ	0xFF1
 26878                           intcon3	equ	0xFF0
 26879                           indf0	equ	0xFEF
 26880                           postinc0	equ	0xFEE
 26881                           plusw0	equ	0xFEB
 26882                           fsr0h	equ	0xFEA
 26883                           fsr0l	equ	0xFE9
 26884                           wreg	equ	0xFE8
 26885                           indf1	equ	0xFE7
 26886                           postinc1	equ	0xFE6
 26887                           postdec1	equ	0xFE5
 26888                           fsr1h	equ	0xFE2
 26889                           fsr1l	equ	0xFE1
 26890                           bsr	equ	0xFE0
 26891                           indf2	equ	0xFDF
 26892                           postinc2	equ	0xFDE
 26893                           postdec2	equ	0xFDD
 26894                           plusw2	equ	0xFDB
 26895                           fsr2h	equ	0xFDA
 26896                           fsr2l	equ	0xFD9
 26897                           status	equ	0xFD8
 26898                           
 26899 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 26900 ;; Defined at:
 26901 ;;		line 114 in file "../Source/c/02_Osl/os_alarms.c"
 26902 ;; Parameters:    Size  Location     Type
 26903 ;;		None
 26904 ;; Auto vars:     Size  Location     Type
 26905 ;;  AlarmIndex      2   38[COMRAM] unsigned short 
 26906 ;; Return value:  Size  Location     Type
 26907 ;;                  1    wreg      void 
 26908 ;; Registers used:
 26909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 26910 ;; Tracked objects:
 26911 ;;		On entry : 0/0
 26912 ;;		On exit  : 0/0
 26913 ;;		Unchanged: 0/0
 26914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26916 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26917 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26918 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26919 ;;Total ram usage:       10 bytes
 26920 ;; Hardware stack levels used:    1
 26921 ;; Hardware stack levels required when called:    7
 26922 ;; This function calls:
 26923 ;;		_I2cDummyTx
 26924 ;;		_OsAlrm_ClearOsAlarm
 26925 ;;		i1___wmul
 26926 ;; This function is called by:
 26927 ;;		_Sch_SchmIntService
 26928 ;; This function uses a non-reentrant model
 26929 ;;
 26930                           
 26931                           	psect	text137
 26932  001BDA                     __ptext137:
 26933                           	opt stack 0
 26934  001BDA                     _OsAlrm_ProcessOsAlarms:
 26935                           	opt stack 8
 26936                           
 26937                           ;os_alarms.c: 116: UINT16 AlarmIndex;
 26938                           ;os_alarms.c: 119: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 26939                           
 26940                           ; BSR set to: 1
 26941                           ;incstack = 0
 26942  001BDA  0E00               	movlw	0
 26943  001BDC  6E28               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 26944  001BDE  0E00               	movlw	0
 26945  001BE0  6E27               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 26946  001BE2  5028               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 26947  001BE4  E105               	bnz	i1u771_20
 26948  001BE6  0E14               	movlw	20
 26949  001BE8  5C27               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 26950  001BEA  B0D8               	btfsc	status,0,c
 26951  001BEC  0012               	return	
 26952  001BEE  D001               	goto	i1l673
 26953  001BF0                     i1u771_20:
 26954  001BF0  0012               	return	
 26955  001BF2                     i1l673:
 26956                           
 26957                           ;os_alarms.c: 120: {
 26958                           ;os_alarms.c: 122: if (OsAlarms[AlarmIndex].Enabled == 1u)
 26959  001BF2  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 26960  001BF6  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 26961  001BFA  0E00               	movlw	0
 26962  001BFC  6E1A               	movwf	i1___wmul@multiplicand+1,c
 26963  001BFE  0E0B               	movlw	11
 26964  001C00  6E19               	movwf	i1___wmul@multiplicand,c
 26965  001C02  ECA3  F025         	call	i1___wmul	;wreg free
 26966  001C06  0E00               	movlw	low _OsAlarms
 26967  001C08  2417               	addwf	?i1___wmul,w,c
 26968  001C0A  6ED9               	movwf	fsr2l,c
 26969  001C0C  0E05               	movlw	high _OsAlarms
 26970  001C0E  2018               	addwfc	?i1___wmul+1,w,c
 26971  001C10  6EDA               	movwf	fsr2h,c
 26972  001C12  04DE               	decf	postinc2,w,c
 26973  001C14  A4D8               	btfss	status,2,c
 26974  001C16  D089               	goto	i1u775_29
 26975                           
 26976                           ;os_alarms.c: 123: {
 26977                           ;os_alarms.c: 125: OsAlarms[AlarmIndex].Counter++;
 26978  001C18  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 26979  001C1C  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 26980  001C20  0E00               	movlw	0
 26981  001C22  6E1A               	movwf	i1___wmul@multiplicand+1,c
 26982  001C24  0E0B               	movlw	11
 26983  001C26  6E19               	movwf	i1___wmul@multiplicand,c
 26984  001C28  ECA3  F025         	call	i1___wmul	;wreg free
 26985  001C2C  0E01               	movlw	1
 26986  001C2E  2617               	addwf	?i1___wmul,f,c
 26987  001C30  0E00               	movlw	0
 26988  001C32  2218               	addwfc	?i1___wmul+1,f,c
 26989  001C34  0E00               	movlw	low _OsAlarms
 26990  001C36  2417               	addwf	?i1___wmul,w,c
 26991  001C38  6ED9               	movwf	fsr2l,c
 26992  001C3A  0E05               	movlw	high _OsAlarms
 26993  001C3C  2018               	addwfc	?i1___wmul+1,w,c
 26994  001C3E  6EDA               	movwf	fsr2h,c
 26995  001C40  2ADE               	incf	postinc2,f,c
 26996  001C42  0E00               	movlw	0
 26997  001C44  22DE               	addwfc	postinc2,f,c
 26998  001C46  22DE               	addwfc	postinc2,f,c
 26999  001C48  22DE               	addwfc	postinc2,f,c
 27000                           
 27001                           ;os_alarms.c: 127: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 27002  001C4A  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27003  001C4E  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27004  001C52  0E00               	movlw	0
 27005  001C54  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27006  001C56  0E0B               	movlw	11
 27007  001C58  6E19               	movwf	i1___wmul@multiplicand,c
 27008  001C5A  ECA3  F025         	call	i1___wmul	;wreg free
 27009  001C5E  0E05               	movlw	5
 27010  001C60  2617               	addwf	?i1___wmul,f,c
 27011  001C62  0E00               	movlw	0
 27012  001C64  2218               	addwfc	?i1___wmul+1,f,c
 27013  001C66  0E00               	movlw	low _OsAlarms
 27014  001C68  2417               	addwf	?i1___wmul,w,c
 27015  001C6A  6ED9               	movwf	fsr2l,c
 27016  001C6C  0E05               	movlw	high _OsAlarms
 27017  001C6E  2018               	addwfc	?i1___wmul+1,w,c
 27018  001C70  6EDA               	movwf	fsr2h,c
 27019  001C72  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27020  001C76  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27021  001C7A  0E00               	movlw	0
 27022  001C7C  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27023  001C7E  0E0B               	movlw	11
 27024  001C80  6E19               	movwf	i1___wmul@multiplicand,c
 27025  001C82  ECA3  F025         	call	i1___wmul	;wreg free
 27026  001C86  0E01               	movlw	1
 27027  001C88  2617               	addwf	?i1___wmul,f,c
 27028  001C8A  0E00               	movlw	0
 27029  001C8C  2218               	addwfc	?i1___wmul+1,f,c
 27030  001C8E  0E00               	movlw	low _OsAlarms
 27031  001C90  2417               	addwf	?i1___wmul,w,c
 27032  001C92  6EE1               	movwf	fsr1l,c
 27033  001C94  0E05               	movlw	high _OsAlarms
 27034  001C96  2018               	addwfc	?i1___wmul+1,w,c
 27035  001C98  6EE2               	movwf	fsr1h,c
 27036  001C9A  50DE               	movf	postinc2,w,c
 27037  001C9C  5CE6               	subwf	postinc1,w,c
 27038  001C9E  50DE               	movf	postinc2,w,c
 27039  001CA0  58E6               	subwfb	postinc1,w,c
 27040  001CA2  50DE               	movf	postinc2,w,c
 27041  001CA4  58E6               	subwfb	postinc1,w,c
 27042  001CA6  50DE               	movf	postinc2,w,c
 27043  001CA8  58E6               	subwfb	postinc1,w,c
 27044  001CAA  A0D8               	btfss	status,0,c
 27045  001CAC  D03E               	goto	i1u775_29
 27046                           
 27047                           ;os_alarms.c: 128: {
 27048                           ;os_alarms.c: 130: OsAlrm_ClearOsAlarm(AlarmIndex);
 27049  001CAE  5027               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 27050  001CB0  ECFC  F020         	call	_OsAlrm_ClearOsAlarm
 27051                           
 27052                           ;os_alarms.c: 132: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 27053  001CB4  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27054  001CB8  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27055  001CBC  0E00               	movlw	0
 27056  001CBE  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27057  001CC0  0E0B               	movlw	11
 27058  001CC2  6E19               	movwf	i1___wmul@multiplicand,c
 27059  001CC4  ECA3  F025         	call	i1___wmul	;wreg free
 27060  001CC8  0E09               	movlw	9
 27061  001CCA  2617               	addwf	?i1___wmul,f,c
 27062  001CCC  0E00               	movlw	0
 27063  001CCE  2218               	addwfc	?i1___wmul+1,f,c
 27064  001CD0  0E00               	movlw	low _OsAlarms
 27065  001CD2  2417               	addwf	?i1___wmul,w,c
 27066  001CD4  6ED9               	movwf	fsr2l,c
 27067  001CD6  0E05               	movlw	high _OsAlarms
 27068  001CD8  2018               	addwfc	?i1___wmul+1,w,c
 27069  001CDA  6EDA               	movwf	fsr2h,c
 27070  001CDC  50DE               	movf	postinc2,w,c
 27071  001CDE  10DE               	iorwf	postinc2,w,c
 27072  001CE0  B4D8               	btfsc	status,2,c
 27073  001CE2  D023               	goto	i1u775_29
 27074                           
 27075                           ;os_alarms.c: 133: {
 27076                           ;os_alarms.c: 135: OsAlarms[AlarmIndex].AlrmCbk();
 27077  001CE4  C027  F017         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27078  001CE8  C028  F018         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27079  001CEC  0E00               	movlw	0
 27080  001CEE  6E1A               	movwf	i1___wmul@multiplicand+1,c
 27081  001CF0  0E0B               	movlw	11
 27082  001CF2  6E19               	movwf	i1___wmul@multiplicand,c
 27083  001CF4  ECA3  F025         	call	i1___wmul	;wreg free
 27084  001CF8  0E09               	movlw	9
 27085  001CFA  2617               	addwf	?i1___wmul,f,c
 27086  001CFC  0E00               	movlw	0
 27087  001CFE  2218               	addwfc	?i1___wmul+1,f,c
 27088  001D00  0E00               	movlw	low _OsAlarms
 27089  001D02  2417               	addwf	?i1___wmul,w,c
 27090  001D04  6ED9               	movwf	fsr2l,c
 27091  001D06  0E05               	movlw	high _OsAlarms
 27092  001D08  2018               	addwfc	?i1___wmul+1,w,c
 27093  001D0A  6EDA               	movwf	fsr2h,c
 27094  001D0C  CFDE F01F          	movff	postinc2,??_OsAlrm_ProcessOsAlarms
 27095  001D10  CFDD F020          	movff	postdec2,??_OsAlrm_ProcessOsAlarms+1
 27096  001D14  D801               	call	i1u775_28
 27097  001D16  D009               	goto	i1u775_29
 27098  001D18                     i1u775_28:
 27099  001D18  0005               	push	
 27100  001D1A  6EFA               	movwf	pclath,c
 27101  001D1C  501F               	movf	??_OsAlrm_ProcessOsAlarms,w,c
 27102  001D1E  6EFD               	movwf	tosl,c
 27103  001D20  5020               	movf	??_OsAlrm_ProcessOsAlarms+1,w,c
 27104  001D22  6EFE               	movwf	tosh,c
 27105  001D24  6AFF               	clrf	tosu,c
 27106  001D26  50FA               	movf	pclath,w,c
 27107  001D28  0012               	return		;indir
 27108  001D2A                     i1u775_29:
 27109  001D2A  4A27               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 27110  001D2C  2A28               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 27111  001D2E  5028               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 27112  001D30  E101               	bnz	i1l678
 27113  001D32  D759               	goto	L44
 27114  001D34                     i1l678:
 27115  001D34  0012               	return		;funcret
 27116  001D36                     __end_of_OsAlrm_ProcessOsAlarms:
 27117                           	opt stack 0
 27118                           tosu	equ	0xFFF
 27119                           tosh	equ	0xFFE
 27120                           tosl	equ	0xFFD
 27121                           pclatu	equ	0xFFB
 27122                           pclath	equ	0xFFA
 27123                           tblptru	equ	0xFF8
 27124                           tblptrh	equ	0xFF7
 27125                           tblptrl	equ	0xFF6
 27126                           tablat	equ	0xFF5
 27127                           prodh	equ	0xFF4
 27128                           prodl	equ	0xFF3
 27129                           intcon	equ	0xFF2
 27130                           intcon2	equ	0xFF1
 27131                           intcon3	equ	0xFF0
 27132                           indf0	equ	0xFEF
 27133                           postinc0	equ	0xFEE
 27134                           plusw0	equ	0xFEB
 27135                           fsr0h	equ	0xFEA
 27136                           fsr0l	equ	0xFE9
 27137                           wreg	equ	0xFE8
 27138                           indf1	equ	0xFE7
 27139                           postinc1	equ	0xFE6
 27140                           postdec1	equ	0xFE5
 27141                           fsr1h	equ	0xFE2
 27142                           fsr1l	equ	0xFE1
 27143                           bsr	equ	0xFE0
 27144                           indf2	equ	0xFDF
 27145                           postinc2	equ	0xFDE
 27146                           postdec2	equ	0xFDD
 27147                           plusw2	equ	0xFDB
 27148                           fsr2h	equ	0xFDA
 27149                           fsr2l	equ	0xFD9
 27150                           status	equ	0xFD8
 27151                           
 27152 ;; *************** function i1___wmul *****************
 27153 ;; Defined at:
 27154 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 27155 ;; Parameters:    Size  Location     Type
 27156 ;;  multiplier      2   22[COMRAM] unsigned int 
 27157 ;;  multiplicand    2   24[COMRAM] unsigned int 
 27158 ;; Auto vars:     Size  Location     Type
 27159 ;;  __wmul          2   26[COMRAM] unsigned int 
 27160 ;; Return value:  Size  Location     Type
 27161 ;;                  2   22[COMRAM] unsigned int 
 27162 ;; Registers used:
 27163 ;;		wreg, status,2, status,0, prodl, prodh
 27164 ;; Tracked objects:
 27165 ;;		On entry : 0/0
 27166 ;;		On exit  : 0/0
 27167 ;;		Unchanged: 0/0
 27168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27172 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27173 ;;Total ram usage:        6 bytes
 27174 ;; Hardware stack levels used:    1
 27175 ;; Hardware stack levels required when called:    4
 27176 ;; This function calls:
 27177 ;;		Nothing
 27178 ;; This function is called by:
 27179 ;;		_OsAlrm_ProcessOsAlarms
 27180 ;; This function uses a non-reentrant model
 27181 ;;
 27182                           
 27183                           	psect	text138
 27184  004B46                     __ptext138:
 27185                           	opt stack 0
 27186  004B46                     i1___wmul:
 27187                           	opt stack 10
 27188                           
 27189                           ;incstack = 0
 27190  004B46  5017               	movf	i1___wmul@multiplier,w,c
 27191  004B48  0219               	mulwf	i1___wmul@multiplicand,c
 27192  004B4A  CFF3 F01B          	movff	prodl,i1___wmul@product
 27193  004B4E  CFF4 F01C          	movff	prodh,i1___wmul@product+1
 27194  004B52  5017               	movf	i1___wmul@multiplier,w,c
 27195  004B54  021A               	mulwf	i1___wmul@multiplicand+1,c
 27196  004B56  50F3               	movf	prodl,w,c
 27197  004B58  261C               	addwf	i1___wmul@product+1,f,c
 27198  004B5A  5018               	movf	i1___wmul@multiplier+1,w,c
 27199  004B5C  0219               	mulwf	i1___wmul@multiplicand,c
 27200  004B5E  50F3               	movf	prodl,w,c
 27201  004B60  261C               	addwf	i1___wmul@product+1,f,c
 27202  004B62  C01B  F017         	movff	i1___wmul@product,?i1___wmul
 27203  004B66  C01C  F018         	movff	i1___wmul@product+1,?i1___wmul+1
 27204  004B6A  0012               	return	
 27205  004B6C                     __end_ofi1___wmul:
 27206                           	opt stack 0
 27207                           tosu	equ	0xFFF
 27208                           tosh	equ	0xFFE
 27209                           tosl	equ	0xFFD
 27210                           pclatu	equ	0xFFB
 27211                           pclath	equ	0xFFA
 27212                           tblptru	equ	0xFF8
 27213                           tblptrh	equ	0xFF7
 27214                           tblptrl	equ	0xFF6
 27215                           tablat	equ	0xFF5
 27216                           prodh	equ	0xFF4
 27217                           prodl	equ	0xFF3
 27218                           intcon	equ	0xFF2
 27219                           intcon2	equ	0xFF1
 27220                           intcon3	equ	0xFF0
 27221                           indf0	equ	0xFEF
 27222                           postinc0	equ	0xFEE
 27223                           plusw0	equ	0xFEB
 27224                           fsr0h	equ	0xFEA
 27225                           fsr0l	equ	0xFE9
 27226                           wreg	equ	0xFE8
 27227                           indf1	equ	0xFE7
 27228                           postinc1	equ	0xFE6
 27229                           postdec1	equ	0xFE5
 27230                           fsr1h	equ	0xFE2
 27231                           fsr1l	equ	0xFE1
 27232                           bsr	equ	0xFE0
 27233                           indf2	equ	0xFDF
 27234                           postinc2	equ	0xFDE
 27235                           postdec2	equ	0xFDD
 27236                           plusw2	equ	0xFDB
 27237                           fsr2h	equ	0xFDA
 27238                           fsr2l	equ	0xFD9
 27239                           status	equ	0xFD8
 27240                           
 27241 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 27242 ;; Defined at:
 27243 ;;		line 96 in file "../Source/c/02_Osl/os_alarms.c"
 27244 ;; Parameters:    Size  Location     Type
 27245 ;;  OsAlarmId       1    wreg     unsigned char 
 27246 ;; Auto vars:     Size  Location     Type
 27247 ;;  OsAlarmId       1   22[COMRAM] unsigned char 
 27248 ;; Return value:  Size  Location     Type
 27249 ;;                  1    wreg      void 
 27250 ;; Registers used:
 27251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 27252 ;; Tracked objects:
 27253 ;;		On entry : 0/0
 27254 ;;		On exit  : 0/0
 27255 ;;		Unchanged: 0/0
 27256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27258 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27260 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27261 ;;Total ram usage:        1 bytes
 27262 ;; Hardware stack levels used:    1
 27263 ;; Hardware stack levels required when called:    4
 27264 ;; This function calls:
 27265 ;;		Nothing
 27266 ;; This function is called by:
 27267 ;;		_OsAlrm_ProcessOsAlarms
 27268 ;; This function uses a non-reentrant model
 27269 ;;
 27270                           
 27271                           	psect	text139
 27272  0041F8                     __ptext139:
 27273                           	opt stack 0
 27274  0041F8                     _OsAlrm_ClearOsAlarm:
 27275                           	opt stack 10
 27276                           
 27277                           ;incstack = 0
 27278                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 27279  0041F8  6E17               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 27280                           
 27281                           ;os_alarms.c: 99: OsAlarms[OsAlarmId].Enabled = 0u;
 27282  0041FA  5017               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 27283  0041FC  0D0B               	mullw	11
 27284  0041FE  0E00               	movlw	low _OsAlarms
 27285  004200  24F3               	addwf	prodl,w,c
 27286  004202  6ED9               	movwf	fsr2l,c
 27287  004204  0E05               	movlw	high _OsAlarms
 27288  004206  20F4               	addwfc	prodh,w,c
 27289  004208  6EDA               	movwf	fsr2h,c
 27290  00420A  0E00               	movlw	0
 27291  00420C  6EDF               	movwf	indf2,c
 27292                           
 27293                           ;os_alarms.c: 101: OsAlarms[OsAlarmId].Counter = 0;
 27294  00420E  5017               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 27295  004210  0D0B               	mullw	11
 27296  004212  0E01               	movlw	1
 27297  004214  26F3               	addwf	prodl,f,c
 27298  004216  0E00               	movlw	0
 27299  004218  22F4               	addwfc	prodh,f,c
 27300  00421A  0E00               	movlw	low _OsAlarms
 27301  00421C  24F3               	addwf	prodl,w,c
 27302  00421E  6ED9               	movwf	fsr2l,c
 27303  004220  0E05               	movlw	high _OsAlarms
 27304  004222  20F4               	addwfc	prodh,w,c
 27305  004224  6EDA               	movwf	fsr2h,c
 27306  004226  6ADE               	clrf	postinc2,c
 27307  004228  6ADE               	clrf	postinc2,c
 27308  00422A  6ADE               	clrf	postinc2,c
 27309  00422C  6ADD               	clrf	postdec2,c
 27310                           
 27311                           ;os_alarms.c: 103: OsAlarms[OsAlarmId].AlarmTime = 0;
 27312  00422E  5017               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 27313  004230  0D0B               	mullw	11
 27314  004232  0E05               	movlw	5
 27315  004234  26F3               	addwf	prodl,f,c
 27316  004236  0E00               	movlw	0
 27317  004238  22F4               	addwfc	prodh,f,c
 27318  00423A  0E00               	movlw	low _OsAlarms
 27319  00423C  24F3               	addwf	prodl,w,c
 27320  00423E  6ED9               	movwf	fsr2l,c
 27321  004240  0E05               	movlw	high _OsAlarms
 27322  004242  20F4               	addwfc	prodh,w,c
 27323  004244  6EDA               	movwf	fsr2h,c
 27324  004246  6ADE               	clrf	postinc2,c
 27325  004248  6ADE               	clrf	postinc2,c
 27326  00424A  6ADE               	clrf	postinc2,c
 27327  00424C  6ADD               	clrf	postdec2,c
 27328  00424E  0012               	return		;funcret
 27329  004250                     __end_of_OsAlrm_ClearOsAlarm:
 27330                           	opt stack 0
 27331                           tosu	equ	0xFFF
 27332                           tosh	equ	0xFFE
 27333                           tosl	equ	0xFFD
 27334                           pclatu	equ	0xFFB
 27335                           pclath	equ	0xFFA
 27336                           tblptru	equ	0xFF8
 27337                           tblptrh	equ	0xFF7
 27338                           tblptrl	equ	0xFF6
 27339                           tablat	equ	0xFF5
 27340                           prodh	equ	0xFF4
 27341                           prodl	equ	0xFF3
 27342                           intcon	equ	0xFF2
 27343                           intcon2	equ	0xFF1
 27344                           intcon3	equ	0xFF0
 27345                           indf0	equ	0xFEF
 27346                           postinc0	equ	0xFEE
 27347                           plusw0	equ	0xFEB
 27348                           fsr0h	equ	0xFEA
 27349                           fsr0l	equ	0xFE9
 27350                           wreg	equ	0xFE8
 27351                           indf1	equ	0xFE7
 27352                           postinc1	equ	0xFE6
 27353                           postdec1	equ	0xFE5
 27354                           fsr1h	equ	0xFE2
 27355                           fsr1l	equ	0xFE1
 27356                           bsr	equ	0xFE0
 27357                           indf2	equ	0xFDF
 27358                           postinc2	equ	0xFDE
 27359                           postdec2	equ	0xFDD
 27360                           plusw2	equ	0xFDB
 27361                           fsr2h	equ	0xFDA
 27362                           fsr2l	equ	0xFD9
 27363                           status	equ	0xFD8
 27364                           
 27365 ;; *************** function _I2cDummyTx *****************
 27366 ;; Defined at:
 27367 ;;		line 177 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 27368 ;; Parameters:    Size  Location     Type
 27369 ;;		None
 27370 ;; Auto vars:     Size  Location     Type
 27371 ;;		None
 27372 ;; Return value:  Size  Location     Type
 27373 ;;                  1    wreg      void 
 27374 ;; Registers used:
 27375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27376 ;; Tracked objects:
 27377 ;;		On entry : 0/0
 27378 ;;		On exit  : 0/0
 27379 ;;		Unchanged: 0/0
 27380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27385 ;;Total ram usage:        0 bytes
 27386 ;; Hardware stack levels used:    1
 27387 ;; Hardware stack levels required when called:    6
 27388 ;; This function calls:
 27389 ;;		i1_I2cSlv_SendI2cMsg
 27390 ;; This function is called by:
 27391 ;;		_I2cSlv_MainTask
 27392 ;;		_OsAlrm_ProcessOsAlarms
 27393 ;; This function uses a non-reentrant model
 27394 ;;
 27395                           
 27396                           	psect	text140
 27397  004D5C                     __ptext140:
 27398                           	opt stack 0
 27399  004D5C                     _I2cDummyTx:
 27400                           	opt stack 8
 27401                           
 27402                           ;i2c_slv.c: 179: static UINT8 DummyBuffer = 0x00;
 27403                           ;i2c_slv.c: 182: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 27404                           
 27405                           ;incstack = 0
 27406  004D5C  0EC4               	movlw	low I2cDummyTx@DummyBuffer
 27407  004D5E  6E1A               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 27408  004D60  0E01               	movlw	high I2cDummyTx@DummyBuffer
 27409  004D62  6E1B               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 27410  004D64  0E00               	movlw	0
 27411  004D66  6E1C               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 27412  004D68  0E01               	movlw	1
 27413  004D6A  6E1D               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 27414  004D6C  EC56  F024         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 27415                           
 27416                           ;i2c_slv.c: 184: I2cBusStatus = I2cBusReady;
 27417  004D70  0E01               	movlw	1
 27418  004D72  0101               	movlb	1	; () banked
 27419  004D74  6F64               	movwf	_I2cBusStatus& (0+255),b
 27420                           
 27421                           ; BSR set to: 1
 27422  004D76  0012               	return		;funcret
 27423  004D78                     __end_of_I2cDummyTx:
 27424                           	opt stack 0
 27425                           tosu	equ	0xFFF
 27426                           tosh	equ	0xFFE
 27427                           tosl	equ	0xFFD
 27428                           pclatu	equ	0xFFB
 27429                           pclath	equ	0xFFA
 27430                           tblptru	equ	0xFF8
 27431                           tblptrh	equ	0xFF7
 27432                           tblptrl	equ	0xFF6
 27433                           tablat	equ	0xFF5
 27434                           prodh	equ	0xFF4
 27435                           prodl	equ	0xFF3
 27436                           intcon	equ	0xFF2
 27437                           intcon2	equ	0xFF1
 27438                           intcon3	equ	0xFF0
 27439                           indf0	equ	0xFEF
 27440                           postinc0	equ	0xFEE
 27441                           plusw0	equ	0xFEB
 27442                           fsr0h	equ	0xFEA
 27443                           fsr0l	equ	0xFE9
 27444                           wreg	equ	0xFE8
 27445                           indf1	equ	0xFE7
 27446                           postinc1	equ	0xFE6
 27447                           postdec1	equ	0xFE5
 27448                           fsr1h	equ	0xFE2
 27449                           fsr1l	equ	0xFE1
 27450                           bsr	equ	0xFE0
 27451                           indf2	equ	0xFDF
 27452                           postinc2	equ	0xFDE
 27453                           postdec2	equ	0xFDD
 27454                           plusw2	equ	0xFDB
 27455                           fsr2h	equ	0xFDA
 27456                           fsr2l	equ	0xFD9
 27457                           status	equ	0xFD8
 27458                           
 27459 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 27460 ;; Defined at:
 27461 ;;		line 236 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 27462 ;; Parameters:    Size  Location     Type
 27463 ;;  TxBuffer        2   25[COMRAM] PTR unsigned char 
 27464 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 27465 ;;  SlaveAddr       1   27[COMRAM] unsigned char 
 27466 ;;  DataLenght      1   28[COMRAM] unsigned char 
 27467 ;; Auto vars:     Size  Location     Type
 27468 ;;  I2cSlv_SendI    1   29[COMRAM] unsigned char 
 27469 ;; Return value:  Size  Location     Type
 27470 ;;                  1    wreg      unsigned char 
 27471 ;; Registers used:
 27472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27473 ;; Tracked objects:
 27474 ;;		On entry : 0/0
 27475 ;;		On exit  : 0/0
 27476 ;;		Unchanged: 0/0
 27477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27478 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27479 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27481 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27482 ;;Total ram usage:        5 bytes
 27483 ;; Hardware stack levels used:    1
 27484 ;; Hardware stack levels required when called:    5
 27485 ;; This function calls:
 27486 ;;		i1_GenerateEvt
 27487 ;; This function is called by:
 27488 ;;		_I2cDummyTx
 27489 ;; This function uses a non-reentrant model
 27490 ;;
 27491                           
 27492                           	psect	text141
 27493  0048AC                     __ptext141:
 27494                           	opt stack 0
 27495  0048AC                     i1_I2cSlv_SendI2cMsg:
 27496                           	opt stack 8
 27497                           
 27498                           ;i2c_slv.c: 238: UINT8 TxSts = 0u;
 27499                           
 27500                           ; BSR set to: 1
 27501                           ;incstack = 0
 27502  0048AC  0E00               	movlw	0
 27503  0048AE  6E1E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 27504                           
 27505                           ;i2c_slv.c: 240: if (I2cComSts != TxInProgress)
 27506  0048B0  044E               	decf	_I2cComSts,w,c
 27507  0048B2  B4D8               	btfsc	status,2,c
 27508  0048B4  D014               	goto	i1l1182
 27509                           
 27510                           ;i2c_slv.c: 241: {
 27511                           ;i2c_slv.c: 243: I2cTxPacket.SlaveAddress = SlaveAddr;
 27512  0048B6  C01C  F1AC         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 27513                           
 27514                           ;i2c_slv.c: 244: I2cTxPacket.ReadWrite = ((UINT8)(0));
 27515  0048BA  0E00               	movlw	0
 27516  0048BC  0101               	movlb	1	; () banked
 27517  0048BE  6FAD               	movwf	(_I2cTxPacket+1)& (0+255),b
 27518                           
 27519                           ; BSR set to: 1
 27520                           ;i2c_slv.c: 245: I2cTxPacket.Lenght = DataLenght;
 27521  0048C0  C01D  F1B0         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 27522                           
 27523                           ; BSR set to: 1
 27524                           ;i2c_slv.c: 246: I2cTxPacket.Buffer = TxBuffer;
 27525  0048C4  C01A  F1AE         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 27526  0048C8  C01B  F1AF         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 27527                           
 27528                           ; BSR set to: 1
 27529                           ;i2c_slv.c: 249: GenerateEvt(&I2cWriteDataEvt);
 27530  0048CC  0E54               	movlw	low _I2cWriteDataEvt
 27531  0048CE  6E17               	movwf	i1GenerateEvt@Event,c
 27532  0048D0  0E00               	movlw	high _I2cWriteDataEvt
 27533  0048D2  6E18               	movwf	i1GenerateEvt@Event+1,c
 27534  0048D4  ECF7  F026         	call	i1_GenerateEvt	;wreg free
 27535                           
 27536                           ;i2c_slv.c: 251: TxSts = 1u;
 27537  0048D8  0E01               	movlw	1
 27538  0048DA  6E1E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 27539                           
 27540                           ;i2c_slv.c: 252: }
 27541  0048DC  0012               	return	
 27542  0048DE                     i1l1182:
 27543                           
 27544                           ;i2c_slv.c: 253: else
 27545                           ;i2c_slv.c: 254: {
 27546                           ;i2c_slv.c: 256: TxSts = 0u;
 27547  0048DE  0E00               	movlw	0
 27548  0048E0  6E1E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 27549  0048E2  0012               	return	
 27550  0048E4                     __end_ofi1_I2cSlv_SendI2cMsg:
 27551                           	opt stack 0
 27552                           tosu	equ	0xFFF
 27553                           tosh	equ	0xFFE
 27554                           tosl	equ	0xFFD
 27555                           pclatu	equ	0xFFB
 27556                           pclath	equ	0xFFA
 27557                           tblptru	equ	0xFF8
 27558                           tblptrh	equ	0xFF7
 27559                           tblptrl	equ	0xFF6
 27560                           tablat	equ	0xFF5
 27561                           prodh	equ	0xFF4
 27562                           prodl	equ	0xFF3
 27563                           intcon	equ	0xFF2
 27564                           intcon2	equ	0xFF1
 27565                           intcon3	equ	0xFF0
 27566                           indf0	equ	0xFEF
 27567                           postinc0	equ	0xFEE
 27568                           plusw0	equ	0xFEB
 27569                           fsr0h	equ	0xFEA
 27570                           fsr0l	equ	0xFE9
 27571                           wreg	equ	0xFE8
 27572                           indf1	equ	0xFE7
 27573                           postinc1	equ	0xFE6
 27574                           postdec1	equ	0xFE5
 27575                           fsr1h	equ	0xFE2
 27576                           fsr1l	equ	0xFE1
 27577                           bsr	equ	0xFE0
 27578                           indf2	equ	0xFDF
 27579                           postinc2	equ	0xFDE
 27580                           postdec2	equ	0xFDD
 27581                           plusw2	equ	0xFDB
 27582                           fsr2h	equ	0xFDA
 27583                           fsr2l	equ	0xFD9
 27584                           status	equ	0xFD8
 27585                           
 27586 ;; *************** function i1_GenerateEvt *****************
 27587 ;; Defined at:
 27588 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 27589 ;; Parameters:    Size  Location     Type
 27590 ;;  Event           2   22[COMRAM] PTR struct EventStructur
 27591 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 27592 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 27593 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(253), 
 27594 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 27595 ;; Auto vars:     Size  Location     Type
 27596 ;;  GenerateEvt     1   24[COMRAM] enum E7721
 27597 ;; Return value:  Size  Location     Type
 27598 ;;                  1    wreg      enum E7693
 27599 ;; Registers used:
 27600 ;;		wreg, fsr2l, fsr2h, status,2
 27601 ;; Tracked objects:
 27602 ;;		On entry : 0/0
 27603 ;;		On exit  : 0/0
 27604 ;;		Unchanged: 0/0
 27605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27609 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27610 ;;Total ram usage:        3 bytes
 27611 ;; Hardware stack levels used:    1
 27612 ;; Hardware stack levels required when called:    4
 27613 ;; This function calls:
 27614 ;;		Nothing
 27615 ;; This function is called by:
 27616 ;;		i1_I2cSlv_SendI2cMsg
 27617 ;; This function uses a non-reentrant model
 27618 ;;
 27619                           
 27620                           	psect	text142
 27621  004DEE                     __ptext142:
 27622                           	opt stack 0
 27623  004DEE                     i1_GenerateEvt:
 27624                           	opt stack 8
 27625                           
 27626                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 27627                           
 27628                           ;incstack = 0
 27629  004DEE  0E00               	movlw	0
 27630  004DF0  6E19               	movwf	i1GenerateEvt@EventStatus,c
 27631                           
 27632                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 27633  004DF2  C017  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 27634  004DF6  C018  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 27635  004DFA  0E02               	movlw	2
 27636  004DFC  6EDF               	movwf	indf2,c
 27637                           
 27638                           ;os_ser.c: 81: EventStatus = EventSent;
 27639  004DFE  0E02               	movlw	2
 27640  004E00  6E19               	movwf	i1GenerateEvt@EventStatus,c
 27641  004E02  0012               	return	
 27642  004E04                     __end_ofi1_GenerateEvt:
 27643                           	opt stack 0
 27644                           tosu	equ	0xFFF
 27645                           tosh	equ	0xFFE
 27646                           tosl	equ	0xFFD
 27647                           pclatu	equ	0xFFB
 27648                           pclath	equ	0xFFA
 27649                           tblptru	equ	0xFF8
 27650                           tblptrh	equ	0xFF7
 27651                           tblptrl	equ	0xFF6
 27652                           tablat	equ	0xFF5
 27653                           prodh	equ	0xFF4
 27654                           prodl	equ	0xFF3
 27655                           intcon	equ	0xFF2
 27656                           intcon2	equ	0xFF1
 27657                           intcon3	equ	0xFF0
 27658                           indf0	equ	0xFEF
 27659                           postinc0	equ	0xFEE
 27660                           plusw0	equ	0xFEB
 27661                           fsr0h	equ	0xFEA
 27662                           fsr0l	equ	0xFE9
 27663                           wreg	equ	0xFE8
 27664                           indf1	equ	0xFE7
 27665                           postinc1	equ	0xFE6
 27666                           postdec1	equ	0xFE5
 27667                           fsr1h	equ	0xFE2
 27668                           fsr1l	equ	0xFE1
 27669                           bsr	equ	0xFE0
 27670                           indf2	equ	0xFDF
 27671                           postinc2	equ	0xFDE
 27672                           postdec2	equ	0xFDD
 27673                           plusw2	equ	0xFDB
 27674                           fsr2h	equ	0xFDA
 27675                           fsr2l	equ	0xFD9
 27676                           status	equ	0xFD8
 27677                           
 27678 ;; *************** function _HighPriorityIsr *****************
 27679 ;; Defined at:
 27680 ;;		line 153 in file "../Source/c/01_Hal/01_Sys/irq.c"
 27681 ;; Parameters:    Size  Location     Type
 27682 ;;		None
 27683 ;; Auto vars:     Size  Location     Type
 27684 ;;		None
 27685 ;; Return value:  Size  Location     Type
 27686 ;;                  1    wreg      void 
 27687 ;; Registers used:
 27688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 27689 ;; Tracked objects:
 27690 ;;		On entry : 0/0
 27691 ;;		On exit  : 0/0
 27692 ;;		Unchanged: 0/0
 27693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27696 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27697 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27698 ;;Total ram usage:       18 bytes
 27699 ;; Hardware stack levels used:    1
 27700 ;; Hardware stack levels required when called:    3
 27701 ;; This function calls:
 27702 ;;		_Mcu_Int0Isr
 27703 ;;		_Mcu_Int1Isr
 27704 ;;		_Rtcc_RtcIsr
 27705 ;;		_Uart_Uart1RxIsr
 27706 ;; This function is called by:
 27707 ;;		Interrupt level 2
 27708 ;; This function uses a non-reentrant model
 27709 ;;
 27710                           
 27711                           	psect	intcode
 27712  000008                     __pintcode:
 27713                           	opt stack 0
 27714  000008                     _HighPriorityIsr:
 27715                           	opt stack 8
 27716                           
 27717                           ;incstack = 0
 27718  000008  825D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 27719  00000A  EF38  F019         	goto	int_func
 27720                           tosu	equ	0xFFF
 27721                           tosh	equ	0xFFE
 27722                           tosl	equ	0xFFD
 27723                           pclatu	equ	0xFFB
 27724                           pclath	equ	0xFFA
 27725                           tblptru	equ	0xFF8
 27726                           tblptrh	equ	0xFF7
 27727                           tblptrl	equ	0xFF6
 27728                           tablat	equ	0xFF5
 27729                           prodh	equ	0xFF4
 27730                           prodl	equ	0xFF3
 27731                           intcon	equ	0xFF2
 27732                           intcon2	equ	0xFF1
 27733                           intcon3	equ	0xFF0
 27734                           indf0	equ	0xFEF
 27735                           postinc0	equ	0xFEE
 27736                           plusw0	equ	0xFEB
 27737                           fsr0h	equ	0xFEA
 27738                           fsr0l	equ	0xFE9
 27739                           wreg	equ	0xFE8
 27740                           indf1	equ	0xFE7
 27741                           postinc1	equ	0xFE6
 27742                           postdec1	equ	0xFE5
 27743                           fsr1h	equ	0xFE2
 27744                           fsr1l	equ	0xFE1
 27745                           bsr	equ	0xFE0
 27746                           indf2	equ	0xFDF
 27747                           postinc2	equ	0xFDE
 27748                           postdec2	equ	0xFDD
 27749                           plusw2	equ	0xFDB
 27750                           fsr2h	equ	0xFDA
 27751                           fsr2l	equ	0xFD9
 27752                           status	equ	0xFD8
 27753                           
 27754                           	psect	intcode_body
 27755  003270                     __pintcode_body:
 27756                           	opt stack 8
 27757  003270                     int_func:
 27758                           	opt stack 8
 27759  003270  CFFA F005          	movff	pclath,??_HighPriorityIsr
 27760  003274  CFFB F006          	movff	pclatu,??_HighPriorityIsr+1
 27761  003278  CFE9 F007          	movff	fsr0l,??_HighPriorityIsr+2
 27762  00327C  CFEA F008          	movff	fsr0h,??_HighPriorityIsr+3
 27763  003280  CFE1 F009          	movff	fsr1l,??_HighPriorityIsr+4
 27764  003284  CFE2 F00A          	movff	fsr1h,??_HighPriorityIsr+5
 27765  003288  CFD9 F00B          	movff	fsr2l,??_HighPriorityIsr+6
 27766  00328C  CFDA F00C          	movff	fsr2h,??_HighPriorityIsr+7
 27767  003290  CFF3 F00D          	movff	prodl,??_HighPriorityIsr+8
 27768  003294  CFF4 F00E          	movff	prodh,??_HighPriorityIsr+9
 27769  003298  CFF6 F00F          	movff	tblptrl,??_HighPriorityIsr+10
 27770  00329C  CFF7 F010          	movff	tblptrh,??_HighPriorityIsr+11
 27771  0032A0  CFF8 F011          	movff	tblptru,??_HighPriorityIsr+12
 27772  0032A4  CFF5 F012          	movff	tablat,??_HighPriorityIsr+13
 27773  0032A8  C05D  F013         	movff	btemp,??_HighPriorityIsr+14
 27774  0032AC  C05E  F014         	movff	btemp+1,??_HighPriorityIsr+15
 27775  0032B0  C05F  F015         	movff	btemp+2,??_HighPriorityIsr+16
 27776  0032B4  C060  F016         	movff	btemp+3,??_HighPriorityIsr+17
 27777                           
 27778                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 27779  0032B8  B2F2               	btfsc	intcon,1,c	;volatile
 27780                           
 27781                           ;irq.c: 158: {
 27782                           ;irq.c: 160: Mcu_Int0Isr();
 27783  0032BA  EC97  F027         	call	_Mcu_Int0Isr	;wreg free
 27784                           
 27785                           ;irq.c: 161: }
 27786                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 27787  0032BE  B0F0               	btfsc	intcon3,0,c	;volatile
 27788                           
 27789                           ;irq.c: 167: {
 27790                           ;irq.c: 169: Mcu_Int1Isr();
 27791  0032C0  EC95  F027         	call	_Mcu_Int1Isr	;wreg free
 27792                           
 27793                           ;irq.c: 170: }
 27794                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 27795  0032C4  B0A4               	btfsc	4004,0,c	;volatile
 27796                           
 27797                           ;irq.c: 203: {
 27798                           ;irq.c: 205: Rtcc_RtcIsr();
 27799  0032C6  EC41  F026         	call	_Rtcc_RtcIsr	;wreg free
 27800                           
 27801                           ;irq.c: 206: }
 27802                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 27803  0032CA  BA9E               	btfsc	3998,5,c	;volatile
 27804                           
 27805                           ;irq.c: 212: {
 27806                           ;irq.c: 214: Uart_Uart1RxIsr();
 27807  0032CC  EC48  F027         	call	_Uart_Uart1RxIsr	;wreg free
 27808  0032D0  C016  F060         	movff	??_HighPriorityIsr+17,btemp+3
 27809  0032D4  C015  F05F         	movff	??_HighPriorityIsr+16,btemp+2
 27810  0032D8  C014  F05E         	movff	??_HighPriorityIsr+15,btemp+1
 27811  0032DC  C013  F05D         	movff	??_HighPriorityIsr+14,btemp
 27812  0032E0  C012  FFF5         	movff	??_HighPriorityIsr+13,tablat
 27813  0032E4  C011  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 27814  0032E8  C010  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 27815  0032EC  C00F  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 27816  0032F0  C00E  FFF4         	movff	??_HighPriorityIsr+9,prodh
 27817  0032F4  C00D  FFF3         	movff	??_HighPriorityIsr+8,prodl
 27818  0032F8  C00C  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 27819  0032FC  C00B  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 27820  003300  C00A  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 27821  003304  C009  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 27822  003308  C008  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 27823  00330C  C007  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 27824  003310  C006  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 27825  003314  C005  FFFA         	movff	??_HighPriorityIsr,pclath
 27826  003318  925D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 27827  00331A  0011               	retfie		f
 27828  00331C                     __end_of_HighPriorityIsr:
 27829                           	opt stack 0
 27830                           tosu	equ	0xFFF
 27831                           tosh	equ	0xFFE
 27832                           tosl	equ	0xFFD
 27833                           pclatu	equ	0xFFB
 27834                           pclath	equ	0xFFA
 27835                           tblptru	equ	0xFF8
 27836                           tblptrh	equ	0xFF7
 27837                           tblptrl	equ	0xFF6
 27838                           tablat	equ	0xFF5
 27839                           prodh	equ	0xFF4
 27840                           prodl	equ	0xFF3
 27841                           intcon	equ	0xFF2
 27842                           intcon2	equ	0xFF1
 27843                           intcon3	equ	0xFF0
 27844                           indf0	equ	0xFEF
 27845                           postinc0	equ	0xFEE
 27846                           plusw0	equ	0xFEB
 27847                           fsr0h	equ	0xFEA
 27848                           fsr0l	equ	0xFE9
 27849                           wreg	equ	0xFE8
 27850                           indf1	equ	0xFE7
 27851                           postinc1	equ	0xFE6
 27852                           postdec1	equ	0xFE5
 27853                           fsr1h	equ	0xFE2
 27854                           fsr1l	equ	0xFE1
 27855                           bsr	equ	0xFE0
 27856                           indf2	equ	0xFDF
 27857                           postinc2	equ	0xFDE
 27858                           postdec2	equ	0xFDD
 27859                           plusw2	equ	0xFDB
 27860                           fsr2h	equ	0xFDA
 27861                           fsr2l	equ	0xFD9
 27862                           status	equ	0xFD8
 27863                           
 27864 ;; *************** function _Uart_Uart1RxIsr *****************
 27865 ;; Defined at:
 27866 ;;		line 572 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 27867 ;; Parameters:    Size  Location     Type
 27868 ;;		None
 27869 ;; Auto vars:     Size  Location     Type
 27870 ;;		None
 27871 ;; Return value:  Size  Location     Type
 27872 ;;                  1    wreg      void 
 27873 ;; Registers used:
 27874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27875 ;; Tracked objects:
 27876 ;;		On entry : 0/0
 27877 ;;		On exit  : 0/0
 27878 ;;		Unchanged: 0/0
 27879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27884 ;;Total ram usage:        0 bytes
 27885 ;; Hardware stack levels used:    1
 27886 ;; Hardware stack levels required when called:    2
 27887 ;; This function calls:
 27888 ;;		_Uart_MdmWifiReadService
 27889 ;; This function is called by:
 27890 ;;		_HighPriorityIsr
 27891 ;; This function uses a non-reentrant model
 27892 ;;
 27893                           
 27894                           	psect	text144
 27895  004E90                     __ptext144:
 27896                           	opt stack 0
 27897  004E90                     _Uart_Uart1RxIsr:
 27898                           	opt stack 8
 27899                           
 27900                           ;uart_drv.c: 575: static UINT8 UartRxData = 0;
 27901                           ;uart_drv.c: 578: UartRxData = RCREG1;
 27902                           
 27903                           ;incstack = 0
 27904  004E90  CFAF F16F          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 27905                           
 27906                           ;uart_drv.c: 592: Uart_MdmWifiReadService(1,UartRxData);
 27907  004E94  C16F  F004         	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmWifiReadService@UartData
 27908  004E98  0E01               	movlw	1
 27909  004E9A  ECC0  F024         	call	_Uart_MdmWifiReadService
 27910  004E9E  0012               	return		;funcret
 27911  004EA0                     __end_of_Uart_Uart1RxIsr:
 27912                           	opt stack 0
 27913                           tosu	equ	0xFFF
 27914                           tosh	equ	0xFFE
 27915                           tosl	equ	0xFFD
 27916                           pclatu	equ	0xFFB
 27917                           pclath	equ	0xFFA
 27918                           tblptru	equ	0xFF8
 27919                           tblptrh	equ	0xFF7
 27920                           tblptrl	equ	0xFF6
 27921                           tablat	equ	0xFF5
 27922                           prodh	equ	0xFF4
 27923                           prodl	equ	0xFF3
 27924                           intcon	equ	0xFF2
 27925                           intcon2	equ	0xFF1
 27926                           intcon3	equ	0xFF0
 27927                           indf0	equ	0xFEF
 27928                           postinc0	equ	0xFEE
 27929                           plusw0	equ	0xFEB
 27930                           fsr0h	equ	0xFEA
 27931                           fsr0l	equ	0xFE9
 27932                           wreg	equ	0xFE8
 27933                           indf1	equ	0xFE7
 27934                           postinc1	equ	0xFE6
 27935                           postdec1	equ	0xFE5
 27936                           fsr1h	equ	0xFE2
 27937                           fsr1l	equ	0xFE1
 27938                           bsr	equ	0xFE0
 27939                           indf2	equ	0xFDF
 27940                           postinc2	equ	0xFDE
 27941                           postdec2	equ	0xFDD
 27942                           plusw2	equ	0xFDB
 27943                           fsr2h	equ	0xFDA
 27944                           fsr2l	equ	0xFD9
 27945                           status	equ	0xFD8
 27946                           
 27947 ;; *************** function _Uart_MdmWifiReadService *****************
 27948 ;; Defined at:
 27949 ;;		line 462 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 27950 ;; Parameters:    Size  Location     Type
 27951 ;;  Module          1    wreg     unsigned char 
 27952 ;;  UartData        1    3[COMRAM] unsigned char 
 27953 ;; Auto vars:     Size  Location     Type
 27954 ;;  Module          1    0[COMRAM] unsigned char 
 27955 ;; Return value:  Size  Location     Type
 27956 ;;                  1    wreg      void 
 27957 ;; Registers used:
 27958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 27959 ;; Tracked objects:
 27960 ;;		On entry : 0/0
 27961 ;;		On exit  : 0/0
 27962 ;;		Unchanged: 0/0
 27963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27964 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27967 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27968 ;;Total ram usage:        1 bytes
 27969 ;; Hardware stack levels used:    1
 27970 ;; Hardware stack levels required when called:    1
 27971 ;; This function calls:
 27972 ;;		i2_GenerateEvt
 27973 ;; This function is called by:
 27974 ;;		_Uart_Uart1RxIsr
 27975 ;; This function uses a non-reentrant model
 27976 ;;
 27977                           
 27978                           	psect	text145
 27979  004980                     __ptext145:
 27980                           	opt stack 0
 27981  004980                     _Uart_MdmWifiReadService:
 27982                           	opt stack 8
 27983                           
 27984                           ;uart_drv.c: 464: if (MdmWifi_UartRxCounter < sizeof(MdmWifi_UartRxBuffer))
 27985                           
 27986                           ;incstack = 0
 27987  004980  0101               	movlb	1	; () banked
 27988  004982  514B               	movf	(_MdmWifi_UartRxCounter+1)& (0+255),w,b
 27989  004984  E115               	bnz	i2l557
 27990  004986  0EFA               	movlw	250
 27991  004988  5D4A               	subwf	_MdmWifi_UartRxCounter& (0+255),w,b
 27992  00498A  B0D8               	btfsc	status,0,c
 27993  00498C  0012               	return	
 27994                           
 27995                           ; BSR set to: 1
 27996                           ;uart_drv.c: 465: {
 27997                           ;uart_drv.c: 467: MdmWifi_UartRxBuffer[MdmWifi_UartRxCounter] = UartData;
 27998  00498E  0E00               	movlw	low _MdmWifi_UartRxBuffer
 27999  004990  254A               	addwf	_MdmWifi_UartRxCounter& (0+255),w,b
 28000  004992  6ED9               	movwf	fsr2l,c
 28001  004994  0E0B               	movlw	high _MdmWifi_UartRxBuffer
 28002  004996  214B               	addwfc	(_MdmWifi_UartRxCounter+1)& (0+255),w,b
 28003  004998  6EDA               	movwf	fsr2h,c
 28004  00499A  C004  FFDF         	movff	Uart_MdmWifiReadService@UartData,indf2
 28005                           
 28006                           ; BSR set to: 1
 28007                           ;uart_drv.c: 469: MdmWifi_UartRxCounter++;
 28008  00499E  4B4A               	infsnz	_MdmWifi_UartRxCounter& (0+255),f,b
 28009  0049A0  2B4B               	incf	(_MdmWifi_UartRxCounter+1)& (0+255),f,b
 28010                           
 28011                           ; BSR set to: 1
 28012                           ;uart_drv.c: 471: GenerateEvt(&NewWifiUartData);
 28013  0049A2  0E5C               	movlw	low _NewWifiUartData
 28014  0049A4  6E01               	movwf	i2GenerateEvt@Event,c
 28015  0049A6  0E00               	movlw	high _NewWifiUartData
 28016  0049A8  6E02               	movwf	i2GenerateEvt@Event+1,c
 28017  0049AA  EC02  F027         	call	i2_GenerateEvt	;wreg free
 28018  0049AE  0012               	return	
 28019  0049B0                     i2l557:
 28020  0049B0  0012               	return		;funcret
 28021  0049B2                     __end_of_Uart_MdmWifiReadService:
 28022                           	opt stack 0
 28023                           tosu	equ	0xFFF
 28024                           tosh	equ	0xFFE
 28025                           tosl	equ	0xFFD
 28026                           pclatu	equ	0xFFB
 28027                           pclath	equ	0xFFA
 28028                           tblptru	equ	0xFF8
 28029                           tblptrh	equ	0xFF7
 28030                           tblptrl	equ	0xFF6
 28031                           tablat	equ	0xFF5
 28032                           prodh	equ	0xFF4
 28033                           prodl	equ	0xFF3
 28034                           intcon	equ	0xFF2
 28035                           intcon2	equ	0xFF1
 28036                           intcon3	equ	0xFF0
 28037                           indf0	equ	0xFEF
 28038                           postinc0	equ	0xFEE
 28039                           plusw0	equ	0xFEB
 28040                           fsr0h	equ	0xFEA
 28041                           fsr0l	equ	0xFE9
 28042                           wreg	equ	0xFE8
 28043                           indf1	equ	0xFE7
 28044                           postinc1	equ	0xFE6
 28045                           postdec1	equ	0xFE5
 28046                           fsr1h	equ	0xFE2
 28047                           fsr1l	equ	0xFE1
 28048                           bsr	equ	0xFE0
 28049                           indf2	equ	0xFDF
 28050                           postinc2	equ	0xFDE
 28051                           postdec2	equ	0xFDD
 28052                           plusw2	equ	0xFDB
 28053                           fsr2h	equ	0xFDA
 28054                           fsr2l	equ	0xFD9
 28055                           status	equ	0xFD8
 28056                           
 28057 ;; *************** function _Rtcc_RtcIsr *****************
 28058 ;; Defined at:
 28059 ;;		line 537 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 28060 ;; Parameters:    Size  Location     Type
 28061 ;;		None
 28062 ;; Auto vars:     Size  Location     Type
 28063 ;;		None
 28064 ;; Return value:  Size  Location     Type
 28065 ;;                  1    wreg      void 
 28066 ;; Registers used:
 28067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 28068 ;; Tracked objects:
 28069 ;;		On entry : 0/0
 28070 ;;		On exit  : 0/0
 28071 ;;		Unchanged: 0/0
 28072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28077 ;;Total ram usage:        0 bytes
 28078 ;; Hardware stack levels used:    1
 28079 ;; Hardware stack levels required when called:    2
 28080 ;; This function calls:
 28081 ;;		Absolute function
 28082 ;;		_Alarm
 28083 ;; This function is called by:
 28084 ;;		_HighPriorityIsr
 28085 ;; This function uses a non-reentrant model
 28086 ;;
 28087                           
 28088                           	psect	text146
 28089  004C82                     __ptext146:
 28090                           	opt stack 0
 28091  004C82                     _Rtcc_RtcIsr:
 28092                           	opt stack 8
 28093                           
 28094                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 28095                           
 28096                           ;incstack = 0
 28097  004C82  90A4               	bcf	4004,0,c	;volatile
 28098                           
 28099                           ;rtcc_drv.c: 543: if (RtccIsrCallback != (0))
 28100  004C84  0101               	movlb	1	; () banked
 28101  004C86  5150               	movf	_RtccIsrCallback& (0+255),w,b
 28102  004C88  1151               	iorwf	(_RtccIsrCallback+1)& (0+255),w,b
 28103  004C8A  B4D8               	btfsc	status,2,c
 28104  004C8C  0012               	return	
 28105                           
 28106                           ; BSR set to: 1
 28107                           ;rtcc_drv.c: 544: {
 28108                           ;rtcc_drv.c: 546: RtccIsrCallback();
 28109  004C8E  D801               	call	i2u798_48
 28110  004C90  0012               	return	
 28111  004C92                     i2u798_48:
 28112  004C92  0005               	push	
 28113  004C94  6EFA               	movwf	pclath,c
 28114  004C96  5150               	movf	_RtccIsrCallback& (0+255),w,b
 28115  004C98  6EFD               	movwf	tosl,c
 28116  004C9A  5151               	movf	(_RtccIsrCallback+1)& (0+255),w,b
 28117  004C9C  6EFE               	movwf	tosh,c
 28118  004C9E  6AFF               	clrf	tosu,c
 28119  004CA0  50FA               	movf	pclath,w,c
 28120  004CA2  0012               	return		;indir
 28121  004CA4                     __end_of_Rtcc_RtcIsr:
 28122                           	opt stack 0
 28123                           tosu	equ	0xFFF
 28124                           tosh	equ	0xFFE
 28125                           tosl	equ	0xFFD
 28126                           pclatu	equ	0xFFB
 28127                           pclath	equ	0xFFA
 28128                           tblptru	equ	0xFF8
 28129                           tblptrh	equ	0xFF7
 28130                           tblptrl	equ	0xFF6
 28131                           tablat	equ	0xFF5
 28132                           prodh	equ	0xFF4
 28133                           prodl	equ	0xFF3
 28134                           intcon	equ	0xFF2
 28135                           intcon2	equ	0xFF1
 28136                           intcon3	equ	0xFF0
 28137                           indf0	equ	0xFEF
 28138                           postinc0	equ	0xFEE
 28139                           plusw0	equ	0xFEB
 28140                           fsr0h	equ	0xFEA
 28141                           fsr0l	equ	0xFE9
 28142                           wreg	equ	0xFE8
 28143                           indf1	equ	0xFE7
 28144                           postinc1	equ	0xFE6
 28145                           postdec1	equ	0xFE5
 28146                           fsr1h	equ	0xFE2
 28147                           fsr1l	equ	0xFE1
 28148                           bsr	equ	0xFE0
 28149                           indf2	equ	0xFDF
 28150                           postinc2	equ	0xFDE
 28151                           postdec2	equ	0xFDD
 28152                           plusw2	equ	0xFDB
 28153                           fsr2h	equ	0xFDA
 28154                           fsr2l	equ	0xFD9
 28155                           status	equ	0xFD8
 28156                           
 28157 ;; *************** function _Alarm *****************
 28158 ;; Defined at:
 28159 ;;		line 80 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 28160 ;; Parameters:    Size  Location     Type
 28161 ;;		None
 28162 ;; Auto vars:     Size  Location     Type
 28163 ;;		None
 28164 ;; Return value:  Size  Location     Type
 28165 ;;                  1    wreg      void 
 28166 ;; Registers used:
 28167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28168 ;; Tracked objects:
 28169 ;;		On entry : 0/0
 28170 ;;		On exit  : 0/0
 28171 ;;		Unchanged: 0/0
 28172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28176 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28177 ;;Total ram usage:        1 bytes
 28178 ;; Hardware stack levels used:    1
 28179 ;; Hardware stack levels required when called:    1
 28180 ;; This function calls:
 28181 ;;		i2_GenerateEvt
 28182 ;; This function is called by:
 28183 ;;		_Rtcm_MainTask
 28184 ;;		_Rtcc_RtcIsr
 28185 ;; This function uses a non-reentrant model
 28186 ;;
 28187                           
 28188                           	psect	text147
 28189  004B6C                     __ptext147:
 28190                           	opt stack 0
 28191  004B6C                     _Alarm:
 28192                           	opt stack 8
 28193                           
 28194                           ;rtcm.c: 83: PORTDbits.RD4 = !PORTDbits.RD4;
 28195                           
 28196                           ;incstack = 0
 28197  004B6C  B883               	btfsc	3971,4,c	;volatile
 28198  004B6E  D003               	goto	i2u794_40
 28199  004B70  6A04               	clrf	??_Alarm& (0+255),c
 28200  004B72  2A04               	incf	??_Alarm& (0+255),f,c
 28201  004B74  D001               	goto	i2u795_48
 28202  004B76                     i2u794_40:
 28203  004B76  6A04               	clrf	??_Alarm& (0+255),c
 28204  004B78                     i2u795_48:
 28205  004B78  3A04               	swapf	??_Alarm,f,c
 28206  004B7A  5083               	movf	3971,w,c	;volatile
 28207  004B7C  1804               	xorwf	??_Alarm,w,c
 28208  004B7E  0BEF               	andlw	-17
 28209  004B80  1804               	xorwf	??_Alarm,w,c
 28210  004B82  6E83               	movwf	3971,c	;volatile
 28211                           
 28212                           ;rtcm.c: 85: GenerateEvt(&AlarmEvent);
 28213  004B84  0EC3               	movlw	low _AlarmEvent
 28214  004B86  6E01               	movwf	i2GenerateEvt@Event,c
 28215  004B88  0E01               	movlw	high _AlarmEvent
 28216  004B8A  6E02               	movwf	i2GenerateEvt@Event+1,c
 28217  004B8C  EC02  F027         	call	i2_GenerateEvt	;wreg free
 28218  004B90  0012               	return		;funcret
 28219  004B92                     __end_of_Alarm:
 28220                           	opt stack 0
 28221                           tosu	equ	0xFFF
 28222                           tosh	equ	0xFFE
 28223                           tosl	equ	0xFFD
 28224                           pclatu	equ	0xFFB
 28225                           pclath	equ	0xFFA
 28226                           tblptru	equ	0xFF8
 28227                           tblptrh	equ	0xFF7
 28228                           tblptrl	equ	0xFF6
 28229                           tablat	equ	0xFF5
 28230                           prodh	equ	0xFF4
 28231                           prodl	equ	0xFF3
 28232                           intcon	equ	0xFF2
 28233                           intcon2	equ	0xFF1
 28234                           intcon3	equ	0xFF0
 28235                           indf0	equ	0xFEF
 28236                           postinc0	equ	0xFEE
 28237                           plusw0	equ	0xFEB
 28238                           fsr0h	equ	0xFEA
 28239                           fsr0l	equ	0xFE9
 28240                           wreg	equ	0xFE8
 28241                           indf1	equ	0xFE7
 28242                           postinc1	equ	0xFE6
 28243                           postdec1	equ	0xFE5
 28244                           fsr1h	equ	0xFE2
 28245                           fsr1l	equ	0xFE1
 28246                           bsr	equ	0xFE0
 28247                           indf2	equ	0xFDF
 28248                           postinc2	equ	0xFDE
 28249                           postdec2	equ	0xFDD
 28250                           plusw2	equ	0xFDB
 28251                           fsr2h	equ	0xFDA
 28252                           fsr2l	equ	0xFD9
 28253                           status	equ	0xFD8
 28254                           
 28255 ;; *************** function i2_GenerateEvt *****************
 28256 ;; Defined at:
 28257 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 28258 ;; Parameters:    Size  Location     Type
 28259 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 28260 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 28261 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 28262 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(253), 
 28263 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 28264 ;; Auto vars:     Size  Location     Type
 28265 ;;  GenerateEvt     1    2[COMRAM] enum E7721
 28266 ;; Return value:  Size  Location     Type
 28267 ;;                  1    wreg      enum E7693
 28268 ;; Registers used:
 28269 ;;		wreg, fsr2l, fsr2h, status,2
 28270 ;; Tracked objects:
 28271 ;;		On entry : 0/0
 28272 ;;		On exit  : 0/0
 28273 ;;		Unchanged: 0/0
 28274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28275 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28276 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28278 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28279 ;;Total ram usage:        3 bytes
 28280 ;; Hardware stack levels used:    1
 28281 ;; This function calls:
 28282 ;;		Nothing
 28283 ;; This function is called by:
 28284 ;;		_Uart_MdmWifiReadService
 28285 ;;		_Alarm
 28286 ;; This function uses a non-reentrant model
 28287 ;;
 28288                           
 28289                           	psect	text148
 28290  004E04                     __ptext148:
 28291                           	opt stack 0
 28292  004E04                     i2_GenerateEvt:
 28293                           	opt stack 8
 28294                           
 28295                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 28296                           
 28297                           ;incstack = 0
 28298  004E04  0E00               	movlw	0
 28299  004E06  6E03               	movwf	i2GenerateEvt@EventStatus,c
 28300                           
 28301                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 28302  004E08  C001  FFD9         	movff	i2GenerateEvt@Event,fsr2l
 28303  004E0C  C002  FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 28304  004E10  0E02               	movlw	2
 28305  004E12  6EDF               	movwf	indf2,c
 28306                           
 28307                           ;os_ser.c: 81: EventStatus = EventSent;
 28308  004E14  0E02               	movlw	2
 28309  004E16  6E03               	movwf	i2GenerateEvt@EventStatus,c
 28310  004E18  0012               	return	
 28311  004E1A                     __end_ofi2_GenerateEvt:
 28312                           	opt stack 0
 28313                           tosu	equ	0xFFF
 28314                           tosh	equ	0xFFE
 28315                           tosl	equ	0xFFD
 28316                           pclatu	equ	0xFFB
 28317                           pclath	equ	0xFFA
 28318                           tblptru	equ	0xFF8
 28319                           tblptrh	equ	0xFF7
 28320                           tblptrl	equ	0xFF6
 28321                           tablat	equ	0xFF5
 28322                           prodh	equ	0xFF4
 28323                           prodl	equ	0xFF3
 28324                           intcon	equ	0xFF2
 28325                           intcon2	equ	0xFF1
 28326                           intcon3	equ	0xFF0
 28327                           indf0	equ	0xFEF
 28328                           postinc0	equ	0xFEE
 28329                           plusw0	equ	0xFEB
 28330                           fsr0h	equ	0xFEA
 28331                           fsr0l	equ	0xFE9
 28332                           wreg	equ	0xFE8
 28333                           indf1	equ	0xFE7
 28334                           postinc1	equ	0xFE6
 28335                           postdec1	equ	0xFE5
 28336                           fsr1h	equ	0xFE2
 28337                           fsr1l	equ	0xFE1
 28338                           bsr	equ	0xFE0
 28339                           indf2	equ	0xFDF
 28340                           postinc2	equ	0xFDE
 28341                           postdec2	equ	0xFDD
 28342                           plusw2	equ	0xFDB
 28343                           fsr2h	equ	0xFDA
 28344                           fsr2l	equ	0xFD9
 28345                           status	equ	0xFD8
 28346                           
 28347 ;; *************** function _Mcu_Int1Isr *****************
 28348 ;; Defined at:
 28349 ;;		line 155 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
 28350 ;; Parameters:    Size  Location     Type
 28351 ;;		None
 28352 ;; Auto vars:     Size  Location     Type
 28353 ;;		None
 28354 ;; Return value:  Size  Location     Type
 28355 ;;                  1    wreg      void 
 28356 ;; Registers used:
 28357 ;;		wreg, status,2, status,0
 28358 ;; Tracked objects:
 28359 ;;		On entry : 0/0
 28360 ;;		On exit  : 0/0
 28361 ;;		Unchanged: 0/0
 28362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28367 ;;Total ram usage:        0 bytes
 28368 ;; Hardware stack levels used:    1
 28369 ;; This function calls:
 28370 ;;		Nothing
 28371 ;; This function is called by:
 28372 ;;		_HighPriorityIsr
 28373 ;; This function uses a non-reentrant model
 28374 ;;
 28375                           
 28376                           	psect	text149
 28377  004F2A                     __ptext149:
 28378                           	opt stack 0
 28379  004F2A                     _Mcu_Int1Isr:
 28380                           	opt stack 10
 28381                           
 28382                           ;mcu_drv.c: 158: INTCON3bits.INT1IF = 0u;
 28383                           
 28384                           ;incstack = 0
 28385  004F2A  90F0               	bcf	intcon3,0,c	;volatile
 28386  004F2C  0012               	return	
 28387  004F2E                     __end_of_Mcu_Int1Isr:
 28388                           	opt stack 0
 28389                           tosu	equ	0xFFF
 28390                           tosh	equ	0xFFE
 28391                           tosl	equ	0xFFD
 28392                           pclatu	equ	0xFFB
 28393                           pclath	equ	0xFFA
 28394                           tblptru	equ	0xFF8
 28395                           tblptrh	equ	0xFF7
 28396                           tblptrl	equ	0xFF6
 28397                           tablat	equ	0xFF5
 28398                           prodh	equ	0xFF4
 28399                           prodl	equ	0xFF3
 28400                           intcon	equ	0xFF2
 28401                           intcon2	equ	0xFF1
 28402                           intcon3	equ	0xFF0
 28403                           indf0	equ	0xFEF
 28404                           postinc0	equ	0xFEE
 28405                           plusw0	equ	0xFEB
 28406                           fsr0h	equ	0xFEA
 28407                           fsr0l	equ	0xFE9
 28408                           wreg	equ	0xFE8
 28409                           indf1	equ	0xFE7
 28410                           postinc1	equ	0xFE6
 28411                           postdec1	equ	0xFE5
 28412                           fsr1h	equ	0xFE2
 28413                           fsr1l	equ	0xFE1
 28414                           bsr	equ	0xFE0
 28415                           indf2	equ	0xFDF
 28416                           postinc2	equ	0xFDE
 28417                           postdec2	equ	0xFDD
 28418                           plusw2	equ	0xFDB
 28419                           fsr2h	equ	0xFDA
 28420                           fsr2l	equ	0xFD9
 28421                           status	equ	0xFD8
 28422                           
 28423 ;; *************** function _Mcu_Int0Isr *****************
 28424 ;; Defined at:
 28425 ;;		line 120 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
 28426 ;; Parameters:    Size  Location     Type
 28427 ;;		None
 28428 ;; Auto vars:     Size  Location     Type
 28429 ;;		None
 28430 ;; Return value:  Size  Location     Type
 28431 ;;                  1    wreg      void 
 28432 ;; Registers used:
 28433 ;;		wreg, status,2, status,0
 28434 ;; Tracked objects:
 28435 ;;		On entry : 0/0
 28436 ;;		On exit  : 0/0
 28437 ;;		Unchanged: 0/0
 28438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28443 ;;Total ram usage:        0 bytes
 28444 ;; Hardware stack levels used:    1
 28445 ;; This function calls:
 28446 ;;		Nothing
 28447 ;; This function is called by:
 28448 ;;		_HighPriorityIsr
 28449 ;; This function uses a non-reentrant model
 28450 ;;
 28451                           
 28452                           	psect	text150
 28453  004F2E                     __ptext150:
 28454                           	opt stack 0
 28455  004F2E                     _Mcu_Int0Isr:
 28456                           	opt stack 10
 28457                           
 28458                           ;mcu_drv.c: 123: INTCONbits.INT0IF = 0u;
 28459                           
 28460                           ;incstack = 0
 28461  004F2E  92F2               	bcf	intcon,1,c	;volatile
 28462  004F30  0012               	return	
 28463  004F32                     __end_of_Mcu_Int0Isr:
 28464                           	opt stack 0
 28465                           tosu	equ	0xFFF
 28466                           tosh	equ	0xFFE
 28467                           tosl	equ	0xFFD
 28468                           pclatu	equ	0xFFB
 28469                           pclath	equ	0xFFA
 28470                           tblptru	equ	0xFF8
 28471                           tblptrh	equ	0xFF7
 28472                           tblptrl	equ	0xFF6
 28473                           tablat	equ	0xFF5
 28474                           prodh	equ	0xFF4
 28475                           prodl	equ	0xFF3
 28476                           intcon	equ	0xFF2
 28477                           intcon2	equ	0xFF1
 28478                           intcon3	equ	0xFF0
 28479                           indf0	equ	0xFEF
 28480                           postinc0	equ	0xFEE
 28481                           plusw0	equ	0xFEB
 28482                           fsr0h	equ	0xFEA
 28483                           fsr0l	equ	0xFE9
 28484                           wreg	equ	0xFE8
 28485                           indf1	equ	0xFE7
 28486                           postinc1	equ	0xFE6
 28487                           postdec1	equ	0xFE5
 28488                           fsr1h	equ	0xFE2
 28489                           fsr1l	equ	0xFE1
 28490                           bsr	equ	0xFE0
 28491                           indf2	equ	0xFDF
 28492                           postinc2	equ	0xFDE
 28493                           postdec2	equ	0xFDD
 28494                           plusw2	equ	0xFDB
 28495                           fsr2h	equ	0xFDA
 28496                           fsr2l	equ	0xFD9
 28497                           status	equ	0xFD8
 28498                           tosu	equ	0xFFF
 28499                           tosh	equ	0xFFE
 28500                           tosl	equ	0xFFD
 28501                           pclatu	equ	0xFFB
 28502                           pclath	equ	0xFFA
 28503                           tblptru	equ	0xFF8
 28504                           tblptrh	equ	0xFF7
 28505                           tblptrl	equ	0xFF6
 28506                           tablat	equ	0xFF5
 28507                           prodh	equ	0xFF4
 28508                           prodl	equ	0xFF3
 28509                           intcon	equ	0xFF2
 28510                           intcon2	equ	0xFF1
 28511                           intcon3	equ	0xFF0
 28512                           indf0	equ	0xFEF
 28513                           postinc0	equ	0xFEE
 28514                           plusw0	equ	0xFEB
 28515                           fsr0h	equ	0xFEA
 28516                           fsr0l	equ	0xFE9
 28517                           wreg	equ	0xFE8
 28518                           indf1	equ	0xFE7
 28519                           postinc1	equ	0xFE6
 28520                           postdec1	equ	0xFE5
 28521                           fsr1h	equ	0xFE2
 28522                           fsr1l	equ	0xFE1
 28523                           bsr	equ	0xFE0
 28524                           indf2	equ	0xFDF
 28525                           postinc2	equ	0xFDE
 28526                           postdec2	equ	0xFDD
 28527                           plusw2	equ	0xFDB
 28528                           fsr2h	equ	0xFDA
 28529                           fsr2l	equ	0xFD9
 28530                           status	equ	0xFD8
 28531                           
 28532                           	psect	text151
 28533  000000                     __ptext151:
 28534                           	opt stack 0
 28535                           tosu	equ	0xFFF
 28536                           tosh	equ	0xFFE
 28537                           tosl	equ	0xFFD
 28538                           pclatu	equ	0xFFB
 28539                           pclath	equ	0xFFA
 28540                           tblptru	equ	0xFF8
 28541                           tblptrh	equ	0xFF7
 28542                           tblptrl	equ	0xFF6
 28543                           tablat	equ	0xFF5
 28544                           prodh	equ	0xFF4
 28545                           prodl	equ	0xFF3
 28546                           intcon	equ	0xFF2
 28547                           intcon2	equ	0xFF1
 28548                           intcon3	equ	0xFF0
 28549                           indf0	equ	0xFEF
 28550                           postinc0	equ	0xFEE
 28551                           plusw0	equ	0xFEB
 28552                           fsr0h	equ	0xFEA
 28553                           fsr0l	equ	0xFE9
 28554                           wreg	equ	0xFE8
 28555                           indf1	equ	0xFE7
 28556                           postinc1	equ	0xFE6
 28557                           postdec1	equ	0xFE5
 28558                           fsr1h	equ	0xFE2
 28559                           fsr1l	equ	0xFE1
 28560                           bsr	equ	0xFE0
 28561                           indf2	equ	0xFDF
 28562                           postinc2	equ	0xFDE
 28563                           postdec2	equ	0xFDD
 28564                           plusw2	equ	0xFDB
 28565                           fsr2h	equ	0xFDA
 28566                           fsr2l	equ	0xFD9
 28567                           status	equ	0xFD8
 28568                           
 28569                           	psect	rparam
 28570  0000                     tosu	equ	0xFFF
 28571                           tosh	equ	0xFFE
 28572                           tosl	equ	0xFFD
 28573                           pclatu	equ	0xFFB
 28574                           pclath	equ	0xFFA
 28575                           tblptru	equ	0xFF8
 28576                           tblptrh	equ	0xFF7
 28577                           tblptrl	equ	0xFF6
 28578                           tablat	equ	0xFF5
 28579                           prodh	equ	0xFF4
 28580                           prodl	equ	0xFF3
 28581                           intcon	equ	0xFF2
 28582                           intcon2	equ	0xFF1
 28583                           intcon3	equ	0xFF0
 28584                           indf0	equ	0xFEF
 28585                           postinc0	equ	0xFEE
 28586                           plusw0	equ	0xFEB
 28587                           fsr0h	equ	0xFEA
 28588                           fsr0l	equ	0xFE9
 28589                           wreg	equ	0xFE8
 28590                           indf1	equ	0xFE7
 28591                           postinc1	equ	0xFE6
 28592                           postdec1	equ	0xFE5
 28593                           fsr1h	equ	0xFE2
 28594                           fsr1l	equ	0xFE1
 28595                           bsr	equ	0xFE0
 28596                           indf2	equ	0xFDF
 28597                           postinc2	equ	0xFDE
 28598                           postdec2	equ	0xFDD
 28599                           plusw2	equ	0xFDB
 28600                           fsr2h	equ	0xFDA
 28601                           fsr2l	equ	0xFD9
 28602                           status	equ	0xFD8
 28603                           
 28604                           	psect	temp
 28605  00005D                     btemp:
 28606                           	opt stack 0
 28607  00005D                     	ds	1
 28608  0000                     int$flags	set	btemp
 28609  0000                     wtemp6	set	btemp+1
 28610                           tosu	equ	0xFFF
 28611                           tosh	equ	0xFFE
 28612                           tosl	equ	0xFFD
 28613                           pclatu	equ	0xFFB
 28614                           pclath	equ	0xFFA
 28615                           tblptru	equ	0xFF8
 28616                           tblptrh	equ	0xFF7
 28617                           tblptrl	equ	0xFF6
 28618                           tablat	equ	0xFF5
 28619                           prodh	equ	0xFF4
 28620                           prodl	equ	0xFF3
 28621                           intcon	equ	0xFF2
 28622                           intcon2	equ	0xFF1
 28623                           intcon3	equ	0xFF0
 28624                           indf0	equ	0xFEF
 28625                           postinc0	equ	0xFEE
 28626                           plusw0	equ	0xFEB
 28627                           fsr0h	equ	0xFEA
 28628                           fsr0l	equ	0xFE9
 28629                           wreg	equ	0xFE8
 28630                           indf1	equ	0xFE7
 28631                           postinc1	equ	0xFE6
 28632                           postdec1	equ	0xFE5
 28633                           fsr1h	equ	0xFE2
 28634                           fsr1l	equ	0xFE1
 28635                           bsr	equ	0xFE0
 28636                           indf2	equ	0xFDF
 28637                           postinc2	equ	0xFDE
 28638                           postdec2	equ	0xFDD
 28639                           plusw2	equ	0xFDB
 28640                           fsr2h	equ	0xFDA
 28641                           fsr2l	equ	0xFD9
 28642                           status	equ	0xFD8


Data Sizes:
    Strings     237
    Constant    563
    Data        130
    BSS         2674
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      92
    BANK0           160    144     160
    BANK1           256      0     256
    BANK2           256      0     211
    BANK3           256      0     250
    BANK4           192      0     164
    BANK5           256      0     220
    BANK6           256      0     200
    BANK7           256      0     253
    BANK8           256      0     200
    BANK9           256      0     103
    BANK10          256      0     200
    BANK11          256      0     250
    BANK12          256      0     250
    BANK13          256      0     200
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), STR_1(CODE[6]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), STR_1(CODE[6]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_62(CODE[21]), STR_58(CODE[20]), STR_53(CODE[14]), STR_49(CODE[10]), 
		 -> STR_43(CODE[10]), STR_41(CODE[13]), STR_40(CODE[12]), STR_36(CODE[11]), 
		 -> STR_32(CODE[12]), STR_26(CODE[10]), STR_21(CODE[11]), BufferLocal(BANK6[100]), 
		 -> STR_15(CODE[12]), STR_3(CODE[13]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK2[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK2[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    strcat@from	PTR const unsigned char  size(3) Largest target is 65527
		 -> STR_65(CODE[3]), STR_64(CODE[2]), STR_63(CODE[2]), Term_MainSm@FwkBuildYearStr(BANK0[4]), 
		 -> Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), STR_61(CODE[3]), STR_60(CODE[2]), 
		 -> STR_59(CODE[2]), Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), 
		 -> STR_57(CODE[3]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), STR_56(CODE[2]), STR_55(CODE[2]), 
		 -> STR_54(CODE[2]), STR_52(CODE[3]), STR_51(CODE[2]), STR_50(CODE[2]), 
		 -> STR_48(CODE[3]), MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), STR_47(CODE[2]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), 
		 -> STR_46(CODE[3]), STR_45(CODE[4]), STR_44(CODE[2]), STR_42(CODE[3]), 
		 -> MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), STR_39(CODE[3]), STR_38(CODE[2]), STR_37(CODE[2]), 
		 -> STR_35(CODE[3]), STR_34(CODE[2]), STR_33(CODE[2]), STR_30(CODE[3]), 
		 -> STR_29(CODE[2]), STR_28(CODE[4]), STR_27(CODE[2]), STR_25(CODE[3]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), SendDataSm@LenAscii(BANK0[4]), STR_16(CODE[2]), SendDataSm@IdAscii(BANK0[1]), 
		 -> ROM(CODE[65527]), STR_13(CODE[3]), STR_12(CODE[2]), StartConnectionSm@PortAscii(BANK0[4]), 
		 -> STR_11(CODE[2]), AddressLocal(BANK2[25]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), StartConnectionSm@IdAscii(BANK0[1]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 100
		 -> Term_MainSm@FwkBuildYearStr(BANK0[4]), Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK4[100]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), 
		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), SendDataSm@LenAscii(BANK0[4]), 
		 -> SendDataSm@IdAscii(BANK0[1]), StartConnectionSm@PortAscii(BANK0[4]), StartConnectionSm@IdAscii(BANK0[1]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK1[4]), Terminal@Len(BANK1[4]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 100
		 -> Terminal@Payload(BANK4[100]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 250
		 -> WifiTerminal@UartBuffer(BANK8[200]), AddressLocal(BANK2[25]), MdmWifi_UartRxBuffer(BANK11[250]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 253
		 -> WifiRxPacket(BANK7[253]), MdmWifi_UartRxBuffer(BANK11[250]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 253
		 -> WifiTerminal@UartBuffer(BANK8[200]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), WifiRxPacket(BANK7[253]), 

    Rtcm_SetAlarmAction@Action	PTR FTN()void  size(2) Largest target is 1
		 -> Alarm(), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 236
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK0[50]), MsgFormat(CODE[236]), Welcome(CODE[137]), 
		 -> Terminal@TermRxBuffer(BANK2[50]), Terminal@Payload(BANK4[100]), Terminal@UsbRxBuffer(BANK3[200]), WifiTerminal@UartBuffer(BANK8[200]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK3[200]), WifiTerminal@UsbBuffer(BANK10[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4289$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4289$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4289$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4289$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK4[64]), cdc_data_rx(BANK2[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S2743$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2733$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2733$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2709$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2709$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2709$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2709$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK1[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 100
		 -> Term_MainSm@FwkBuildYearStr(BANK0[4]), Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK4[100]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), 
		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), SendDataSm@LenAscii(BANK0[4]), 
		 -> SendDataSm@IdAscii(BANK0[1]), StartConnectionSm@PortAscii(BANK0[4]), StartConnectionSm@IdAscii(BANK0[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK2[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    MdmWifi_SendWifiMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 103
		 -> MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), MdmWifiCmd_CloseConnection@Data(COMRAM[20]), 
		 -> MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), STR_31(CODE[11]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), STR_20(CODE[9]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    MdmWifi_ReceiveWifiMsg@DataLenght	PTR unsigned char  size(2) Largest target is 1
		 -> SendDataSm@DataIndex(BANK0[1]), StartConnectionSm@DataIndex(BANK0[1]), 

    MdmWifi_ReceiveWifiMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 103
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 253
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[250]), 
		 -> WifiRxPacket(BANK7[253]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 10
		 -> Term_MainSm@TermDelay(BANK1[10]), SendDataSm@SwTimer(BANK1[10]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 10
		 -> Term_MainSm@TermDelay(BANK1[10]), Led_MainTask@LedTimer1(BANK1[10]), SendDataSm@SwTimer(BANK1[10]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 253
		 -> I2cRxPacket(BANK1[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(COMRAM[1]), WifiReceiveData(COMRAM[1]), 
		 -> WifiSendData(COMRAM[1]), StartConnection(COMRAM[1]), WifiReceiveNetData(COMRAM[1]), NewWifiPacketParser(COMRAM[1]), 
		 -> NewWifiPacket(COMRAM[1]), WifiRxPacket(BANK7[253]), StartWifiModem(COMRAM[1]), NewWifiUartData(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 253
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK1[6]), I2cReadDataEvt(COMRAM[1]), I2cWriteDataEvt(COMRAM[1]), 
		 -> WifiReceiveData(COMRAM[1]), WifiSendData(COMRAM[1]), StartConnection(COMRAM[1]), WifiReceiveNetData(COMRAM[1]), 
		 -> WifiGenericError(BANK1[1]), NewWifiPacketParser(COMRAM[1]), NewWifiPacket(COMRAM[1]), WifiRxPacket(BANK7[253]), 
		 -> StartWifiModem(COMRAM[1]), NewWifiUartData(COMRAM[1]), 

    S1896_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), UsbDevice_MainTask(), 
		 -> MdmWifiHttp_MainTask(), MdmWifiCmd_MainTask(), MdmWifi_MainTask(), I2cSlv_MainTask(), 
		 -> MdmWifi_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), UsbDevice_MainTask(), 
		 -> MdmWifiHttp_MainTask(), MdmWifiCmd_MainTask(), MdmWifi_MainTask(), I2cSlv_MainTask(), 
		 -> MdmWifi_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S1861_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 103
		 -> MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), MdmWifiCmd_CloseConnection@Data(COMRAM[20]), 
		 -> MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), STR_31(CODE[11]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), STR_20(CODE[9]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK1[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK1[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    Rtcc_RegisterRtcIsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Alarm(), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Alarm(), Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK1[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK1[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK2[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK1[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK3[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK1[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK1[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmWifiReadService
    _Uart_MdmWifiReadService->i2_GenerateEvt
    _Rtcc_RtcIsr->_Alarm
    _Alarm->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Terminal->_strtol
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_SetAlarmAction->_Rtcc_RegisterRtcIsrCallback
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MdmWifi_MainTask->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _MdmWifiGetUartData->_StringCopy
    _MdmWifiEvtParser->_strstr
    _MdmWifi_StartWifiModemSm->_ReceiveEvt
    _MdmWifiCmd_MainTask->_SendDataSm
    _StartConnectionSm->_strstr
    _SendDataSm->_OsTmr_GetTimerStatus
    _utoa->___lwdiv
    _strstr->_strncmp
    _strncmp->_strlen
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _MdmWifi_SendWifiMsg->_Uart_WriteString
    _Uart_WriteString->_UartTxBufferStatus
    _MdmWifi_ReceiveWifiMsg->_StringCopy
    _ReceiveDataSm->_ReceiveEvt
    _Led_MainTask->_OsTmr_StartTimer
    _OsTmr_StartTimer->_GetOsTickCounter
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    None.

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  402041
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    3901
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    3523
                                             39 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3371
                                             35 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2109
                                             25 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  398140
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  199136
                                            139 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                _MdmWifiCmd_MainTask *
               _MdmWifiHttp_MainTask *
                  _MdmWifi_DrvMainFn *
                   _MdmWifi_MainTask *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  199004
                                            139 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                _MdmWifiCmd_MainTask *
               _MdmWifiHttp_MainTask *
                  _MdmWifi_DrvMainFn *
                   _MdmWifi_MainTask *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   44242
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   40538
                                             27 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    1900
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   23316
                                             26 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   22677
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   17493
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    6880
                                             20 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    5475
                                             20 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5092
                                             12 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2400
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                              8 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    1804
                                              7 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   53401
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         74    74      0   53401
                                             32 BANK0     74    74      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    1698
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                             4     4      0   25133
                                             28 BANK0      4     4      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strtol
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2033
                                             12 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0      90
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     158
                                              3 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    1824
                                              6 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    5592
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2090
                                              7 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    1667
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    8507
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    1844
                                              3 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    1655
                                              3 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    1250
                                              4 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7556
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                _Rtcm_SetAlarmAction
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             12 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                              8 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetAlarmAction                                  2     0      2     222
                                              2 BANK0      2     0      2
        _Rtcc_RegisterRtcIsrCallback
 ---------------------------------------------------------------------------------
 (5) _Rtcc_RegisterRtcIsrCallback                          2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                              4 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                              1 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MdmWifi_MainTask                                     1     1      0   11939
                   _MdmWifiEvtParser
                 _MdmWifiGetUartData
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    2942
                                             32 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2193
                                             25 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     702
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MdmWifiGetUartData                                   0     0      0    4545
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _MdmWifiEvtParser                                     0     0      0    4452
                        _GenerateEvt
                         _ReceiveEvt
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _MdmWifi_DrvMainFn                                    1     1      0    2539
           _MdmWifi_StartWifiModemSm
 ---------------------------------------------------------------------------------
 (4) _MdmWifi_StartWifiModemSm                             0     0      0    2539
                        _GenerateEvt
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _MdmWifiHttp_MainTask                                 1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmWifiCmd_MainTask                                  1     1      0   65783
                      _ReceiveDataSm
                         _SendDataSm
                  _StartConnectionSm
 ---------------------------------------------------------------------------------
 (4) _StartConnectionSm                                  106   106      0   31401
                                             19 BANK0    106   106      0
                        _ClearBuffer
             _MdmWifi_ReceiveWifiMsg
                _MdmWifi_SendWifiMsg
                         _ReceiveEvt
                             _strcat
                             _strcpy
                             _strstr
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4     803
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _SendDataSm                                         109   109      0   31843
                                             30 BANK0    109   109      0
             _MdmWifi_ReceiveWifiMsg
                _MdmWifi_SendWifiMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                             _strcat
                             _strcpy
                             _strstr
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    5162
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _strstr                                               4     0      4    1913
                                             15 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              9     3      6     401
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     357
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strchr                                               5     1      4     266
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4    3279
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _strcat                                               7     2      5   13804
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (5) _OsTmr_GetTimerStatus                                 6     4      2     756
                                             24 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (6) _GetElapsedTime                                      20    16      4     424
                                              4 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (5) _MdmWifi_SendWifiMsg                                  2     0      2    1783
                                              6 BANK0      2     0      2
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2     604
                                              3 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _UartWriteByte                                        2     1      1     355
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _UartTxBufferStatus                                   3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _MdmWifi_ReceiveWifiMsg                               5     1      4    2853
                                              8 BANK0      5     1      4
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                           8     2      6    1203
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) _ReceiveDataSm                                        0     0      0    2539
                        _GenerateEvt
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         1     1      0     644
                   _OsTmr_StartTimer
 ---------------------------------------------------------------------------------
 (5) _OsTmr_StartTimer                                     6     0      6     644
                                              4 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (6) _GetOsTickCounter                                     4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   12809
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    8254
                                              6 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    7855
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1375
                                             37 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1198
                                             25 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     976
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    3180
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    1226
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     309
                                              1 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    1645
                                              3 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    1313
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0     944
                                             40 COMRAM    21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0     944
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0     944
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0     944
                                             30 COMRAM    10    10      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             25 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             22 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (22) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     275
                                              4 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     193
            _Uart_MdmWifiReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmWifiReadService                             2     1      1     193
                                              3 COMRAM     1     0      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0      82
                   Absolute function *
                              _Alarm *
 ---------------------------------------------------------------------------------
 (22) _Alarm                                               1     1      0      82
                                              3 COMRAM     1     1      0
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2      82
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (22) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _OsTmr_StartTimer
           _GetOsTickCounter
       _MdmWifiCmd_MainTask *
         _ReceiveDataSm
           _GenerateEvt
           _ReceiveEvt
         _SendDataSm
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _StartConnectionSm
           _ClearBuffer
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _MdmWifiHttp_MainTask *
       _MdmWifi_DrvMainFn *
         _MdmWifi_StartWifiModemSm
           _GenerateEvt
           _ReceiveEvt
       _MdmWifi_MainTask *
         _MdmWifiEvtParser
           _GenerateEvt
           _ReceiveEvt
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
         _MdmWifiGetUartData
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetAlarmAction
           _Rtcc_RegisterRtcIsrCallback
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
           _memset
           _putUSBUSART
             _strlen (ARG)
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _OsTmr_StartTimer
           _GetOsTickCounter
       _MdmWifiCmd_MainTask *
         _ReceiveDataSm
           _GenerateEvt
           _ReceiveEvt
         _SendDataSm
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _StartConnectionSm
           _ClearBuffer
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _MdmWifiHttp_MainTask *
       _MdmWifi_DrvMainFn *
         _MdmWifi_StartWifiModemSm
           _GenerateEvt
           _ReceiveEvt
       _MdmWifi_MainTask *
         _MdmWifiEvtParser
           _GenerateEvt
           _ReceiveEvt
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
         _MdmWifiGetUartData
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetAlarmAction
           _Rtcc_RegisterRtcIsrCallback
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
           _memset
           _putUSBUSART
             _strlen (ARG)
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
     Absolute function(Fake) *
     _Alarm *
       i2_GenerateEvt
   _Uart_Uart1RxIsr
     _Uart_MdmWifiReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0       0      36        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0      C8      32       78.1%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0      FA      30       97.7%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0      FA      28       97.7%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      67      24       40.2%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      FD      20       98.8%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      DC      16       85.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FA      12       97.7%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      D3      10       82.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      A4      14       85.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      5C       1       97.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     BC1       8        0.0%
DATA                 0      0     BC1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Nov 12 20:43:13 2018

                     SendDataSm@DataIndex 00E9                                _USB_SD_Ptr FCD7  
                         ??_UpdateSchFlag 0017                        _Mcu_StartSystemPll 4D04  
                            ___awdiv@sign 0065                    I2c_ReadData@ReadPacket 0063  
                                      bsr 000FE0                             _USBDeviceInit 1D36  
                     ___wmul@multiplicand 0062            MdmWifi_ReceiveWifiMsg@RxBuffer 0068  
                        i1___wmul@product 001B                        __size_of_CDCInitEP 006C  
                      i2GenerateEvt@Event 0001                  InitSchedTimer@TmrBConfig 0087  
                     _MdmWifiCmd_MainTask 4BB6                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 0066      USER_USB_CALLBACK_EVENT_HANDLER@event 006C  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 006E                    I2c_ReadData@ReadStatus 0170  
                                     l202 1AE8                                       l203 1AF0  
                                     l300 3886                                       l205 1B3A  
                                     l301 3806                                       l206 1B64  
                                     l302 380C                                       l303 382C  
                                     l231 4D10                                       l208 1B6E  
                                     l160 1A1E                                       l304 3838  
                                     l209 1B90                                       l161 18E6  
                                     l305 3844                                       l162 1A5E  
                                     l170 19B6                                       l306 3850  
                                     l330 12A2                                       l402 4478  
                                     l410 276C                                       l171 19D0  
                                     l163 18F4                                       l323 1332  
                                     l331 12EA                                       l403 4444  
                                     l411 2758                                       l164 1936  
                                     l324 113A                                       l420 4CB2  
                                     l412 2700                                       l173 19D4  
                                     l421 4CAA                                       l405 445E  
                                     l413 2766                                       l174 19DC  
                                     l166 1944                                       l326 1182  
             __end_of_USBStdGetDscHandler 2102                                       l414 272C  
                                     l175 19F4                                       l167 196E  
                                     l511 2188                                       l327 11CA  
                                     l423 4CAE                                       l192 1B9A  
                                     l328 1212                                       l193 1A66  
                                     l169 1982                                       l521 4CF6  
                                     l513 21B0                                       l329 125A  
                                     l194 1BD4                                       l178 1A00  
                                     l195 1A74                                       l179 1A0C  
                                     l515 2228                                       l507 213C  
                                     l196 1AB8                                       l428 2CE0  
                                     l533 43C8                                       l509 2160  
                                     l429 2CFC                                       l198 1AC6  
                                     l542 43EC                                       l534 43C2  
                                     l550 0A52                                       l382 36BE  
                                     l199 1ADC                                       l392 3690  
                                     l384 3650                                       l721 4D2C  
                                     l393 3680                                       l385 3640  
                                     l570 3EFA                                       l650 3B60  
                                     l298 3858                                       l706 2362  
                                     l394 36A4                                       l386 3666  
                                     l299 37FE                                       l395 3684  
                                     l387 3644                                       l572 3F2A  
                                     l652 3B82                                       l396 368A  
                                     l388 364A                                       l654 3BA0  
                                     l647 3BAC                                       l648 3B46  
                                     l761 4A96                                       l771 2DB4  
                                     _BDT 000400                                       l782 38FA  
                                     l864 2BAC                                       l785 390C  
                                     l865 2AEE                                       l892 44CC  
                                     l980 0CAA                                       l868 2B0A  
                                     l884 493C                                       l981 0CCA  
                                     l877 3DEE                                       l869 2B26  
                                     l885 491C                                       l974 0E88  
                                     l982 0E2C                                       l975 0BCC  
                                     l887 4932                                       l985 0E7C  
                                     l978 0BE8                                       l995 156E  
                                     l979 0C60                                       l996 1364  
                                     l999 1380                                       _PR2 000FCB  
                                     _PR4 000F77                                       _UIE 000F36  
                                     _UIR 000F62                  i2GenerateEvt@EventStatus 0003  
                 __end_of_HighPriorityIsr 331C                       ?_Mcu_StartSystemPll 0001  
                              _USBSuspend 494E                              ___awmod@sign 0065  
                    USBStdSetCfgHandler@i 0074                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0063                            _USBDeviceTasks 1762  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00FD  
             Rtcc_AlarmConfig@AlarmConfig 0060              __end_of_I2cSlv_ReceiveI2cMsg 4702  
                           ??_Mcu_Int0Isr 0001                             ??_Mcu_Int1Isr 0001  
                   ??_USBCtrlTrfRxService 0060                            ??_getsUSBUSART 006A  
                USBEnableEndpoint@options 0068                   ?_MdmWifi_ReceiveWifiMsg 0068  
                   ??_Rtcm_SetAlarmAction 0064             ??_Tmr_RegisterTmr2IsrCallback 0062  
                                    l1000 13F8                                      l1001 14A8  
                                    l1002 14EC                                      l1013 45E0  
                                    l1014 45AE                                      l1006 1508  
                                    l1022 4BC6                                      l1017 45CA  
                                    l1025 4BB8                                      l2100 055C  
                                    l2102 057C                                      l1152 324C  
                                    l2104 06F8                                      l1161 3224  
                                    l1153 31C2                                      l2113 4D80  
                                    l1154 31E2                                      l2130 415A  
                                    l2042 0152                                      l2106 0874  
                                    l1410 3418                                      l1163 3240  
                                    l2131 416E                                      l2043 01E2  
                                    l2051 01D0                                      l1164 3246  
                                    l1156 3202                                      l2108 0894  
                                    l1404 2C04                                      l1412 3434  
                                    l2116 4D7A                                      l2301 3AD4  
                                    l2061 02F8                                      l2045 01AE  
                                    l1421 2604                                      l1341 1D80  
                                    l2310 3B3A                                      l2302 3AE4  
                                    l1182 47C0                                      l2038 04CA  
                                    l2062 02BC                                      l2046 019C  
                                    l1422 25AC                                      l1174 42E8  
                                    l1159 3208                                      l2071 03BE  
                                    l2039 00E2                                      l1511 3752  
                                    l1343 1DA8                                      l1175 42A8  
                                    l2304 3B02                                      l1192 4C56  
                                    l1440 2990                                      l1416 3608  
                                    l1512 374C                                      l1360 17D8  
                                    l1352 178E                                      l2305 3AFA  
                                    l2321 3D18                                      l2057 0316  
                                    l1345 1DE4                                      l1505 4868  
                                    l1361 17E4                                      l1353 1784  
                                    l1177 42E2                                      l2322 3D22  
                                    l2314 3CDE                                      l2074 0412  
                                    l2058 02AE                                      l1530 2F12  
                                    l1450 23C2                                      l1522 4038  
                                    l1426 262E                                      l1506 4866  
                                    l1370 1876                                      l1354 1782  
                                    l2323 3D30                                      l2315 3CEA  
                                    l1187 46FC                                      l2075 03D8  
                                    l2059 024C                                      l2091 050C  
                                    l1443 2A0C                                      l1435 295C  
                                    l1531 2F18                                      l1451 239C  
                                    l1363 180C                                      l2308 3B22  
                                    l1700 1F10                                      l1444 29D2  
                                    l1532 2F94                                      l1524 4084  
                                    l1380 464A                                      l2309 3B2C  
                                    l2317 3D00                                      l2069 037E  
                                    l2093 0528                                      l1437 2966  
                                    l1533 2F58                                      l1453 243A  
                                    l1381 465A                                      l1373 189C  
                                    l1365 1820                                      l1357 17AA  
                                    l2318 3CF8                                      l2078 047C  
                                    l1454 2420                                      l1470 20EA  
                                    l1462 27C0                                      l1550 287E  
                                    l1366 182C                                      l1358 17BA  
                                    l2503 3BFA                                      l2079 04C2  
                                    l1703 1F8A                                      l1439 29CA  
                                    l1535 2F7A                                      l1471 1FDA  
                                    l1551 2892                                      l1375 18BC  
                                    l1367 1856                                      l1359 17C2  
                                    l2504 3BEE                                      l2088 089A  
                                    l1704 1F52                                      l1640 3136  
                                    l1464 2834                                      l1552 2898  
                                    l1368 1862                                      l1385 2FBA  
                                    l2089 04E6                                      l1473 1FEE  
                                    l1545 28F8                                      l1377 18DA  
                                    l2282 2A1C                                      l2098 053C  
                                    l1642 314E                                      l1562 0EC4  
                                    l1474 207C                                      l1490 30A2  
                                    l1554 289E                                      l1546 2868  
                                    l1730 4B94                                      l2507 3C2E  
                                    l2291 2AE2                                      l2283 2A16  
                                    l1387 2FE4                                      l1707 1FA4  
                                    l1643 315C                                      l1571 1030  
                                    l1563 0ECA                                      l1483 30E4  
                                    l1555 28BC                                      l2508 3C3C  
                                    l1708 1FA8                                      l1644 317A  
                                    l1476 2084                                      l1484 306A  
                                    l1556 28D8                                      l1548 2872  
                                    l1732 4B9A                USBConfigureEndpoint@handle 0066  
                                    l2285 2A5E                                      l1389 3040  
                                    l1661 37F4                                      l1645 3192  
                                    l1581 10B6                                      l1573 0FF8  
                                    l1565 0F3C                                      l1477 20DA  
                                    l1549 2878                                      l1574 1016  
                                    l2463 4C36                                      l1639 319C  
                                    l1743 408E                                      l1583 110C  
                                    l1567 0F84                                      l1479 20E2  
                                    l1487 30FA                                      l2712 3FD6  
                                    l2560 438E                                      l2288 2AAE  
                                    l1664 37A2                                      l1576 1078  
                                    l1568 0F86                                      l1488 307C  
                                    l2713 3FD0                                      l2721 457A  
                                    l2561 4398                                      l2473 3324  
                                    l1921 490C                                      l2289 2A70  
                                    l1665 37CE                                      l1737 409A  
                                    l1745 4094                                      l1577 1084  
                                    l1569 0FA2                                      l1489 3082  
                                    l1497 4632                                      l1729 4BA4  
                                    l2722 4570                                      l2570 4732  
                                    l1922 48F8                                      l1666 37A8  
                                    l1578 1100                                      l1498 4630  
                                    l1915 477A                                      l2715 3FF8  
                                    l2571 473C                                      l2475 3360  
                                    l1691 1EA8                                      l1916 475A  
                                    l2716 3FE6                                      l2740 3A36  
                                    l2556 436E                                      l2476 33A2  
                                    l2580 4552                                      l2741 3A72  
                                    l2557 4366                                      l2469 46A0  
                                    l2813 4B16                                      l1693 1EDC  
                                    l2581 4530                                      l2830 3A10  
                                    l2566 471A                                      l2823 4890  
                                    l2727 4260                                      l2567 4712  
                                    l2728 425A                                      l2808 4A38  
                                    l2760 15E4                                      l1696 1EEE  
                                    l1856 3590                                      l1697 1EF2  
                                    l1689 1E9A                                      l1857 3508  
                                    l2818 4BF2                                      l2762 1638  
                                    l2586 49FE                                      l2739 3A9C  
                                    l2771 1672                                      l2587 49EC  
                                    l1699 1F48                                      l1795 482C  
                                    l1859 357C                                      l2828 3A18  
                                    l1796 4802                                      l2829 39AA  
                                    l2782 4DA6                                      l2774 1684  
                                    l2758 15CC                                      l2775 16F0  
                                    l2768 1648                                      l2777 1716  
                                    l2769 1658                                      l2778 1750  
                                    l7236 4530                                      l6622 27B8  
                                    l6528 2966                                      l8304 276C  
                                    l6490 49EC                                      l9106 2244  
                                    l7380 2AAA                                      l9066 4D10  
                                    l9094 3C58                                      l7592 39AA  
                                    l7780 3812                                      l7950 1D78  
                                    l9706 40B4                                      l9708 40E4  
                                    l7978 1DDC                                      l8698 186E  
                                    STR_1 FFCF                                      STR_2 FFD5  
                                    STR_3 FF4E                                      STR_4 FFE7  
                                    STR_5 FFDC                                      STR_6 FFE2  
                                    STR_7 FFDE                                      STR_8 FFDC  
                                    STR_9 FFE7                                      u4410 29B8  
                                    u5300 3F38                                      u5220 4B12  
                                    u5310 3F58                                      u4430 29FA  
                                    u5240 4A28                                      u4520 27EC  
                                    u4417 29AE                                      u6140 2184  
                                    u5317 3F4E                                      u4437 29F0  
                                    u6240 3AB4                                      u5600 15D4  
                                    u4560 2046                                      u6320 1D9C  
                                    u5290 3F1A                                      u4810 109A  
                                    u4570 2076                                      u6260 45A2  
                                    u5285 4E28                                      u6085 4DE8  
                                    u5286 4E2A                                      u6086 4DEA  
                                    u5630 160E                                      u4590 20CE  
                                    u6350 1E40                                      u4567 203C  
                                    u4840 4372                                      u5480 377C  
                                    u5297 3F10                                      u4577 206C  
                                    u6290 4020                                      u5650 161E  
                                    u6267 4598                                      u4940 43BE  
                                    u5740 4280                                      u4597 20C4  
                                    u4870 471E                     ??_USBCtrlTrfTxService 0060  
                                    u5920 39DA                                      u6297 4016  
                                    u7601 3FBC                                      u5850 3D04  
                                    u7450 18E0                                      u5747 4276  
                                    u7540 1F38                                      u5790 3B06  
                                    u6750 041A                                      u6815 4DD2  
                                    _UCFG 000F39                                      u6816 4DD6  
                                    u7560 1F7A                                      u6905 09B0  
                                    u6825 444E                                      u5890 3BFE  
                                    u7570 1F92                                      u6826 4450  
                                    u7547 1F2E                                      u6835 445A  
                                    u6836 445C                                      _UEP0 000F26  
                                    u5965 4412                                      u6925 0A82  
                                    u6845 4468                                      u7805 4AD8  
                                    _UEP1 000F27                                      u6846 446A  
                                    u7806 4ADA                                      u6935 0AA2  
                                    u7567 1F70                                      u6855 4474  
                                    u7815 4AE4                                      u6960 3B92  
                                    u6856 4476                                      u7816 4AE6  
                                    u6945 0B28                                      u7825 4AF0  
                                    u7826 4AF2                                      u6795 3D9E  
                                    _UEIE 000F37                                      u6885 090A  
                                    u7781 3560                  __size_of_Uart_Uart1RxIsr 0010  
                                    u6895 092A                                      u7791 3586  
                                    u7928 2318                                      u7929 2344  
                                    u7888 3C96                                      _UEIR 000F63  
                                    _UCON 000F65                                      u7889 3CC2  
                              _AlarmEvent 01C3                            ?_StopCondition 0001  
                                    _Led1 01D8                                      _Led2 01D0  
             __end_of_MdmWifi_SendWifiMsg 4E80                      ?_MdmWifiCmd_MainTask 0001  
                     _OsTmr_OsTickCounter 012E                             __CFG_FCMEN$ON 000000  
                         _CDCDataInHandle 0140              I2c_ReadData@TentativeCounter 0171  
  USBStdFeatureReqHandler@current_ep_data 0077                                      _pDst 0142  
                    _MdmWifiHttp_MainTask 4EA0                                      _atoi 2A14  
                                    _main 4ECA                                      _itoa 467A  
                        ?_SetUartBaudRate 0079                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0126  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 005D  
                                    _utoa 331C                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 4F12               __size_of_Sch_SchmIntService 000E  
                       _Rtcc_GetRtccValue 37F8               I2cSlv_SendI2cMsg@DataLenght 0066  
                    ??_Mcu_StartSystemPll 0060                                      prodh 000FF4  
                                    prodl 000FF3                                      start 00CC  
                     __end_of_GenerateEvt 4DC2                __end_of_USBCheckStdRequest 293C  
                         _Rtcm_SystemDate 010A                    ??_USBCtrlTrfOutHandler 0062  
                __end_of_GetOsTickCounter 4E40                        ?_Rtcc_GetRtccValue 0001  
         Uart_MdmWifiReadService@UartData 0004                            _GetElapsedTime 2D50  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 0065                              ___param_bank 000000  
               Term_MainSm@FwkBuildDayStr 00BE                 ??_USBStdFeatureReqHandler 0074  
                     StringCopy@SourceStr 0060               __end_of_OsAlrm_ClearOsAlarm 4250  
                                   EECON2 000FA7                  ??_USBStdGetStatusHandler 0060  
                     __size_of_I2cDummyTx 001C                            ?_USBDeviceInit 0001  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 3EF4  
                     ??_Rtcc_GetRtccValue 0060                           __end_of_Welcome FE56  
                       ?_UpdateOsCounters 0001                        _MdmWifiGetUartData 2AEC  
                                   ?_atoi 0066                                     ?_main 0001  
                                   ?_itoa 0070                           __end_of___awdiv 3B44  
                                   STR_10 FFDC                                     STR_11 FFDC  
                                   STR_12 FFE7                                     STR_20 FFBE  
                                   STR_13 FF87                                     STR_21 FF8A  
                                   STR_22 FFEF                                     STR_14 FFC7  
                                   STR_23 FFF1                                     STR_31 FF7F  
                                   STR_15 FF5B                                     STR_16 FFE7  
                                   STR_24 FFF3                                     STR_40 FF73  
                                   STR_32 FF67                                     STR_17 FF87  
                                   STR_33 FFED                                     STR_41 FF41  
                                   STR_18 FFF5                                     STR_26 FFA0  
                                   STR_19 FF87                                     STR_43 FFB4  
                                   STR_60 FFEB                                     STR_28 FFDA  
                                   STR_36 FF95                           __end_of___awmod 3D3A  
                                   STR_61 FF87                                     STR_53 FF33  
                                   STR_46 FFE6                                     STR_62 FF0A  
                                   STR_63 FFE9                                     STR_64 FFE9  
                                   STR_65 FF87                                     STR_49 FFAA  
                                   STR_58 FF1F                                     STR_59 FFEB  
       __size_of_USBCtrlEPServiceComplete 00FC                           __end_of___lldiv 3C4E  
                                   ?_utoa 0067                           ___awdiv@divisor 0062  
                  __end_of_USBDeviceTasks 18E4                 ?_USBCtrlEPServiceComplete 0001  
                         __end_of___lwdiv 43A2                           __end_of___lwmod 4746  
                      ??_UpdateOsCounters 0017                                     i1l673 1BF2  
                                   i1l678 1D34                                     i2l557 49B0  
                                   _UADDR 000F38                           ___awdiv@counter 0064  
                                   _AlCfg 01B9                   I2cSendMsgSm@I2cComState 0163  
                                   _USTAT 000F64                MdmWifiCmd_MainTask@Options 0001  
                                   _Alarm 4B6C                                _ConnStatus 0168  
      __size_of_USBCtrlEPAllowStatusStage 00CA                       ___lmul@multiplicand 0064  
               __size_of_MdmWifiEvtParser 0070                              _AddressLocal 0272  
          __end_of_MdmWifi_ReceiveWifiMsg 44D6                                     _RxLen 0148  
                     ?_MdmWifiGetUartData 0001           __end_of_USBCtrlEPAllowDataStage 3466  
                                   _sd000 FF06                                     _sd001 FEBF  
                                   _sd002 FE99            ?_USBIncrement1msInternalTimers 0001  
             Rtcc_GetRtccValue@RtccPtrVal 0061                      __end_of_Led_MainTask 483A  
                  ??_OsTmr_GetTimerStatus 007A                           __end_of_isalpha 4A42  
                         __end_of_isdigit 4C3E                                     atoi@a 006B  
                                   atoi@s 0066    MdmWifiGetUartData@WifiUartGetDataState 016C  
                             _ClearBuffer 48E4                           __end_of_isspace 4B1E  
               __size_of_MdmWifi_MainTask 0034                I2c_WriteData@I2cWriteState 0177  
               Rtcc_GetRtccValue@RegValue 0063                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 4BFA                                     pclath 000FFA  
                   ??_MdmWifiCmd_MainTask 00EB                                     tablat 000FF5  
                        __end_ofi1___wmul 4B6C                 __end_of_Rtcc_GetRtccValue 388C  
                   ?_MdmWifiHttp_MainTask 0001                                     plusw0 000FEB  
                                   plusw2 000FDB                         __end_of_CDCInitEP 3E88  
                                   utoa@c 006F                             ??_SetBaudRate 0081  
                                   utoa@v 006D                                     status 000FD8  
                         _I2cSlv_MainTask 42A6                 Rtcc_GetRtccValue@RetValue 0062  
                     i1___wmul@multiplier 0017                                     wtemp6 005E  
                     __end_of_Mcu_Int0Isr 4F32                       __end_of_Mcu_Int1Isr 4F2E  
                         __end_of_strncmp 3A34                           __end_of_toupper 4DAA  
                MdmWifi_DrvMainFn@Options 0001                    __end_of_GetElapsedTime 2E18  
                   __end_of_UartSetConfig 41F8          __end_of_MdmWifi_StartWifiModemSm 3BCA  
                ?_Uart_MdmWifiReadService 0004               Rtcc_SetRtccValue@RtccPtrVal 006B  
                   __end_of_Term_MainTask 4D92                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 0066              __size_of_USBStdSetCfgHandler 00E6  
                    ??_MdmWifiGetUartData 0068                   OsTmr_StartTimer@Timeout 0066  
                    __end_of_I2cSetConfig 4ACA                            _InitSchedTimer 4A42  
                         __initialization 248A                      __end_of_I2c_ReadData 1BDA  
                 Rtcc_RtcConfig@RtcConfig 0061                      __end_of_I2cSendMsgSm 3270  
                       _StartConnectionSm 0BCA                              __end_of_atoi 2AEC  
                            __end_of_main 4ED6                              __end_of_itoa 46BE  
                   _control_signal_bitmap 015B                              __end_of_utoa 33C6  
                __end_of_Rtcm_SetRtccDate 434E                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 0060                          __end_of_ReadByte 4EFE  
                      ?_StartConnectionSm 0001                      Term_MainSm@TermDelay 01E2  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady FEF4  
               __size_of_USBCtrlEPService 0094                                    ??_atoi 0068  
                                  ??_main 00F0              __size_of_Uart_InitUartModule 02F4  
                                  ??_itoa 0076                                    ??_utoa 006D  
                           __activetblptr 000003                           ?_USBDeviceTasks 0001  
              Term_MainSm@FwkBuildYearStr 00C6                          __end_of_TmrBInit 36D0  
                              _ReceiveEvt 4A70                    __size_of_ReceiveDataSm 0046  
                StartConnectionSm@IdAscii 00DC                               ?_USBSuspend 0001  
                       ?_Mcu_ConfigExtInt 0001                          ?_HighPriorityIsr 0001  
                     ??_StartConnectionSm 0073                                    ?_Alarm 0001  
                        __end_of_Terminal 04E4                             ?_SetAckStatus 0001  
                              _SendDataSm 1362                              _cdc_mem_type 015C  
                      ??_Mcu_ConfigExtInt 0060                           ReceiveEvt@Event 0060  
                        _CDCDataOutHandle 0044                           ??_StopCondition 0060  
                        ___awdiv@dividend 0060                __end_of_UsbDevice_MainTask 4BB6  
                         getsUSBUSART@len 0069                     __end_of_UartWriteByte 4D04  
                        ??_LowPriorityIsr 0029                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F        Irq_InitIntController@IntPriorityEn 0062  
                   __size_of_CDCTxService 0144                                    i1l1182 48DE  
                             _GenerateEvt 4DAA                            __CFG_WDTEN$OFF 000000  
                                  _RCREG1 000FAF                                    _RCREG2 000FAA  
                                  _RCSTA1 000FAC                                    _RCSTA2 000F9C  
                           _NewWifiPacket 005A                 Uart_Uart1RxIsr@UartRxData 016F  
                           CDCTxService@i 0067                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                              _TaskNumber FCDF                               _BufferLocal 0664  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                  __end_of_Rtcc_AlarmConfig 3EF4  
                  __end_of_InitSchedTimer 4A70                            __CFG_WPDIS$OFF 000000  
                         ?_GetElapsedTime 0064                            _EnableReceiver 4F26  
                              _UartConfig 0178                 __end_of_StartConnectionSm 0EA0  
                       ??_Uart_Uart1RxIsr 0005                         _shortPacketStatus 004D  
                           ??_Term_MainSm 0080                            __CFG_XINST$OFF 000000  
           __size_of_I2cSlv_I2cReadMsgSts 0022                           USBDeviceTasks@i 007B  
             USBStdFeatureReqHandler@pUEP 0075                  USBTransferOnePacket@data 0061  
              USBCtrlTrfInHandler@lastDTS 0061                             ??_RtccIrqInit 0060  
                ??_OsAlrm_ProcessOsAlarms 001F                           ??_USBDeviceInit 0068  
                     __end_of_SetBaudRate 443E                                    ___lmul 4148  
                    _I2cSlv_ReceiveI2cMsg 46BE                              ?_putUSBUSART 0066  
                                  ___wmul 4B1E                                 ??___awdiv 0064  
          GetElapsedTime@CurrentTimestamp 0074                            __CFG_STVREN$ON 000000  
                               ??___awmod 0064                         ?_Rtcm_GetRtccDate 0064  
                               ??___lldiv 0074                      __end_of_getsUSBUSART 37F8  
                               ??___lwdiv 0064                    Tmr_TmrBPrSet@IntFreqHz 0079  
                               ??___lwmod 0064                         _USBEnableEndpoint 4636  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0005  
                            ReadByte@Byte 0060                                    _memcpy 451E  
                                  _memset 49E2                                    clear_0 24D0  
                                  clear_1 24DC                                    clear_2 24E8  
                                  clear_3 24F4                                    clear_4 2500  
                                  clear_5 250C                                    clear_6 2518  
                                  clear_7 2524                                    clear_8 2530  
                                  clear_9 253C                          ___awdiv@quotient 0066  
                      ??_Rtcm_GetRtccDate 006C                           ___awmod@divisor 0062  
                      _ExtInt0IsrCallback 014E                         ?_OsTmr_StartTimer 0064  
                         ___awmod@counter 0064                       UartWriteByte@Module 0061  
                      ?_USBEnableEndpoint 0068                                    _strcat 3FC6  
            ?_Rtcc_RegisterRtcIsrCallback 0060                                    _strchr 4874  
                                  _strcpy 4566                                    _strlen 4250  
                                  _strtol 158C                                    _strstr 3A34  
                        ClearBuffer@Index 0064             __size_of_USBTransferOnePacket 00BE  
                      ??_OsTmr_StartTimer 006A                                    itoa@cp 0076  
                               ??_isalpha 0063                                 ??_isdigit 0060  
                          ??_SetAckStatus 0060                              _CDCTxService 1E84  
                            __mediumconst FCD6                                 ??_isspace 0060  
                  __size_of_CheckTxStatus 000A                                    tblptrh 000FF7  
                               ??_isupper 0060                                    tblptrl 000FF6  
                                  tblptru 000FF8                       ??_USBEnableEndpoint 0069  
                 __end_of_I2cSlv_MainTask 42FA                             ??_Tmr_Tmr2Isr 0029  
                            ??_I2cDummyTx 001F                 OsTmr_GetTimerStatus@Timer 0078  
                             _Mcu_Int0Isr 4F2E                               _Mcu_Int1Isr 4F2A  
               MdmWifiGetUartData@Counter 016B                    __size_of_ScheduleTasks 012C  
                             _CtrlTrfData 000438                                 ??_strncmp 006C  
                               ??_toupper 0060                    ??_MdmWifiHttp_MainTask 0060  
                    _controlTransferState 004C                     __end_ofi1_GenerateEvt 4E04  
         __end_of_Uart_MdmWifiReadService 49B2                     __end_of_Rtcm_MainTask 35A2  
              __size_of_Rtcc_GetRtccValue 0094                        _ExtInt1IsrCallback 014C  
                              __accesstop 0060                   __end_of__initialization 257E  
                  Tmr_TmrBPrSet@Prescaler 007B                    __end_of_EnableReceiver 4F2A  
                      __size_of_WriteByte 000A                             _ReceiveDataSm 45AC  
                           ___rparam_used 000001                  __size_of_USBStallHandler 0044  
                         ?_InitSchedTimer 0001                __end_of_UartTxBufferStatus 43F0  
                    Terminal@FormatOption 0157                           __CFG_IOL1WAY$ON 000000  
                             _InitCounter 013E                                _StringCopy 4746  
                   I2cDummyTx@DummyBuffer 01C4                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 0032                             __end_of_Alarm 4B92  
 MdmWifi_StartWifiModemSm@WifiModeSmState 016D                     ?_I2cSlv_ReceiveI2cMsg 0063  
                          __pcstackCOMRAM 0001                 __end_of_USBEnableEndpoint 467A  
                           __end_of_sd000 FF0A                             __end_of_sd001 FEDD  
                           __end_of_sd002 FEBF                              __pidataBANK1 47C6  
                            __pidataBANK2 44D6                  _MdmWifi_StartWifiModemSm 3B44  
        __size_of_USBCtrlEPAllowDataStage 00A0             __size_of_USBConfigureEndpoint 0098  
                __size_of_InitializeTasks 007A                        __end_of_I2cDummyTx 4D78  
             __end_of_USBCtrlTrfInHandler 2FA0                           __CFG_DSWDTPS$G2 000000  
                     __end_of_Term_MainSm 08D6                                 ?i1___wmul 0017  
                     __end_of_RtccIrqInit 4DEE                     __size_of_Led_MainTask 003A  
                             ?_ReceiveEvt 0060             ??_Rtcc_RegisterRtcIsrCallback 0062  
                              _SystemInit 49B2                                   ??_Alarm 0004  
                              _cdc_notice 0100                     __end_of_Tmr_TmrBPrSet 2772  
                     __end_of_Rtcc_RtcIsr 4CA4                          _MdmWifiEvtParser 3DAC  
                              _cdc_rx_len 0047                         __end_of_MsgFormat FDCD  
                              _cdc_tx_len 0046                               ?_SendDataSm 0001  
                     Terminal@UsbRxBuffer 0300                       Terminal@UsbTxBuffer 0D00  
             __end_ofi1_I2cSlv_SendI2cMsg 48E4                  ??_USBCtrlTrfSetupHandler 007A  
                 _USBTicksSinceSuspendEnd 015D                            ClearBuffer@Len 0062  
                   _Irq_InitIntController 4ACA                    _USBStdGetStatusHandler 305E  
     Mcu_StartSystemPll@PllStartupCounter 0060               MdmWifiHttp_MainTask@Options 0001  
                          _Rtcc_RtcConfig 3466                          _MdmWifi_MainTask 491A  
                              __pbssBANK0 00F0                                __pbssBANK1 0100  
                              __pbssBANK2 0200                                __pbssBANK3 0300  
                              __pbssBANK4 0440                                __pbssBANK5 0500  
                              __pbssBANK6 0600                                __pbssBANK7 0700  
                              __pbssBANK8 0800                                __pbssBANK9 0900  
                 ?_Pm_DsReleasePinControl 0001                     __end_ofi2_GenerateEvt 4E1A  
                __end_of_Uart_WriteString 3F60                                 ?_ReadByte 0001  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0001  
                          ?_ReceiveDataSm 0001                     __size_of_I2c_ReadData 0176  
                   __size_of_I2cSendMsgSm 00B0                       __end_of_Tmr_Tmr2Isr 4C82  
                             _SetBaudRate 43F0               __size_of_USBWakeFromSuspend 003A  
                             _pBDTEntryIn 003E                __size_of_StartConnectionSm 02D6  
        UartTxBufferStatus@TxBufferStatus 0062          __end_of_USBCtrlEPServiceComplete 2684  
                               ?_TmrBInit 0060                             _CheckTxStatus 4EFE  
                        _WifiGenericError 01C5                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00B0                         ?_GetOsTickCounter 0060  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 0060  
                               ?_Terminal 0001                                   ?___lmul 0060  
                            _Led_MainTask 4800                            _Rtcc_UnlockRtc 4E50  
                            _I2cBusStatus 0164                                   ?___wmul 0060  
         __size_of_OsAlrm_ProcessOsAlarms 015C                             _ScheduleTasks 223A  
               Uart_InitUartModule@Module 0084                     __end_of_I2c_WriteData 1A64  
                      ??_GetOsTickCounter 0064                                   ?_memcpy 0060  
                                 ?_memset 0060                            ___lmul@product 0068  
                              _device_dsc FEF4                   __size_of_CheckAckStatus 000A  
                        _USBCtrlEPService 36D0                     __end_of_UpdateSchFlag 4D5C  
                              _ep_data_in 013B                           _I2cWriteDataEvt 0054  
                i1GenerateEvt@EventStatus 0019                             ?_Rtcc_LockRtc 0001  
                                 ?_strcat 0060                                ??i1___wmul 001B  
                                 ?_strchr 0060                                   ?_strcpy 0060  
                                 ?_strlen 0060                                   ?_strtol 006C  
                                 ?_strstr 006F               __end_of_USBCtrlTrfRxService 248A  
                   Led_MainTask@LedTimer1 01EC                     Led_MainTask@LedTimer2 01C6  
                       __end_of_WriteByte 4EF4                        _USBCheckStdRequest 2858  
                       _configDescriptor1 FE56               __end_of_Rtcm_SetAlarmAction 4EBC  
                    _MdmWifi_UartRxBuffer 0B00               __end_of_USBCtrlTrfTxService 2A14  
                     _USBStdSetCfgHandler 2772                   MdmWifi_MainTask@Options 0001  
                    _MdmWifi_UartTxBuffer 0600             Uart_MdmWifiReadService@Module 0001  
                            _I2cSetConfig 4A9E                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 3506  
                                 _SSP2ADD 000F74                                   _SSP2BUF 000F75  
                            _I2c_ReadData 1A64                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 31C0  
                        ?_I2cSlv_MainTask 0001            __end_of_Pm_DsReleasePinControl 4F18  
               MdmWifi_ReceiveWifiMsg@Ret 006C                       ?_USBCheckStdRequest 0001  
            __size_of_USBStdGetDscHandler 013A                                   _UIEbits 000F36  
                            ?_ClearBuffer 0060                                   _UIRbits 000F62  
                                 _IdLocal 0050                 __size_of_UpdateOsCounters 0010  
              __end_of_Sch_SchmIntService 4ECA                             _cdc_trf_state 00FB  
                              ??_ReadByte 0060                       _Uart_InitUartModule 08D6  
                          ?_CheckTxStatus 0001               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 0132                                   _pCDCSrc 0135  
                   __size_of_getsUSBUSART 0094                               ?_StringCopy 0060  
                     __size_of_ReceiveEvt 002E                                   __Hparam 0000  
                              ??_TmrBInit 0062                    ??_I2cSlv_ReceiveI2cMsg 0067  
         ??_USBIncrement1msInternalTimers 0060                            _I2cReadDataEvt 0053  
                    ?_USBStdSetCfgHandler 0001                                 _CDCInitEP 3E1C  
                  __end_of_Rtcc_UnlockRtc 4E60                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 0068                      __end_of_SetAckStatus 4E2E  
                             _Term_MainSm 04E4              __size_of_MdmWifi_SendWifiMsg 0010  
                                 _Welcome FDCD                __size_of_USBEnableEndpoint 0044  
                          ?_ScheduleTasks 0001                                ??_Terminal 007C  
                     __size_of_SendDataSm 022A                         _Sch_MainScheduler 4D22  
                    ??_USBCheckStdRequest 007A                               _RtccIrqInit 4DD8  
           __size_of_USBCtrlTrfOutHandler 0062                                   ___awdiv 3ABE  
                    Term_MainTask@Options 0001                           __size_of___lmul 0058  
                __size_of_SetUartBaudRate 0138                                   ___awmod 3CC8  
                                 ___lldiv 3BCA                          ??_USBDeviceTasks 007B  
                         __size_of___wmul 0028                                   ___lwdiv 434E  
                       ??_USBStallHandler 0060                                   ___lwmod 4702  
                       ?_Rtcm_SetRtccDate 006C                        ?_Sch_MainScheduler 0001  
                             _Rtcc_RtcIsr 4C82                      __size_of_putUSBUSART 0022  
                                 __pcinit 248A                        getsUSBUSART@buffer 0067  
                         __size_of_memcpy 0048                                 _I2cComSts 004E  
                         __size_of_memset 0030                                 _I2cConfig 018D  
                          ??_Rtcc_LockRtc 0060                 __end_of_configDescriptor1 FE99  
                                 __ramtop 0F00                               Terminal@Len 01B5  
                      ??_Rtcm_SetRtccDate 0074                     Tmr_TmrBIrqSet@TmrNumb 0062  
                    ?_Uart_InitUartModule 0080                                   __ptext0 4ECA  
                                 __ptext1 49B2                                   __ptext2 4ED6  
                                 __ptext3 4F12                                   __ptext4 4D04  
                                 __ptext5 4E40                                   __ptext6 4ACA  
                                 __ptext7 4A42                                   __ptext8 2C88  
                                 __ptext9 2684                                   _inPipes 00F0  
              StartConnectionSm@DataIndex 00DB          __size_of_Uart_MdmWifiReadService 0032  
             _USBDeferOUTDataStagePackets 015E                           __size_of_strcat 0064  
                         __size_of_strchr 0038                        _WifiReceiveNetData 0058  
                         __size_of_strcpy 0046                           __size_of_strlen 0056  
            __size_of_OsAlrm_ClearOsAlarm 0058                                 _T1CONbits 000FCD  
                         __size_of_strtol 01D6                           __size_of_strstr 008A  
                            ??_USBSuspend 0074                                 _T2CONbits 000FCA  
                                 _isalpha 4A12                                   _isdigit 4C1C  
                           ?_Tmr_StartTmr 0001                       ??_Sch_MainScheduler 00F0  
                             ?_SystemInit 0001                                   clear_10 2548  
                                 clear_11 2554                                   clear_12 2560  
                                 clear_13 256C                                   clear_14 2578  
                        ___awmod@dividend 0060                         ??_InitializeTasks 00EB  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 0154  
     __end_of_Tmr_RegisterTmr2IsrCallback 4EE0               _Tmr_RegisterTmr2IsrCallback 4ED6  
                                 _isspace 4AF4               __end_of_MdmWifiCmd_MainTask 4BD8  
                                 _isupper 4BD8                    ?_Irq_InitIntController 0060  
                  Term_MainSm@FwkBuildStr 00BA                           ?_Rtcc_RtcConfig 0061  
                  _OsAlrm_ProcessOsAlarms 1BDA                        __end_of_USB_CD_Ptr FCDF  
                             _Tmr_Tmr2Isr 4C60           __size_of_USBCtrlTrfSetupHandler 008C  
                         _Uart_Uart1RxIsr 4E90                    Term_MainSm@FwkMajorStr 00B2  
                                 _strncmp 39A8                            __pintcode_body 3270  
                                 _toupper 4D92                         ClearBuffer@Buffer 0060  
                    end_of_initialization 257E                              _getsUSBUSART 3764  
                        ??_GetElapsedTime 0068             __size_of_OsTmr_GetTimerStatus 0090  
                            ?_GenerateEvt 0060                           ??_ReceiveDataSm 0064  
                  _MainSystemTimebaseFlag 01E1             i1I2cSlv_SendI2cMsg@DataLenght 001D  
                      __end_of_USB_SD_Ptr FCDD       Irq_InitIntController@PerInt_LowPInt 0061  
                                 memcpy@d 0066                                   memcpy@n 0064  
                                 memcpy@s 0068                       _pBDTEntryEP0OutNext 00F6  
                                 itoa@buf 0070                                   memset@c 0062  
                  Term_MainSm@FwkMinorStr 00B6                                   itoa@val 0072  
                                 memset@n 0064                                   memset@p 0066  
                                 int_func 3270                           _USB1msTickCount 012A  
         _dummy_encapsulated_cmd_response 0197                  ?_USBStdFeatureReqHandler 0001  
               __size_of_Mcu_ConfigExtInt 0010                         ?_Rtcc_AlarmConfig 0060  
                   ??_USBStdSetCfgHandler 0074                           ___lldiv@divisor 0070  
               __end_of_Sch_MainScheduler 4D40                                ?_CDCInitEP 0001  
                         ___lldiv@counter 0078                         _Rtcc_SetRtccValue 1134  
                       _Rtcc_SetRtcStatus 4DC2                           ?_Rtcc_UnlockRtc 0001  
             __size_of_MdmWifiGetUartData 00D2                        ??_Rtcc_AlarmConfig 0062  
                      __end_of_USBSuspend 4980                             StringCopy@Len 0064  
                 _USBCtrlEPAllowDataStage 33C6                        _UsbDevice_MainTask 4B92  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 0068                        ?_Rtcc_SetRtcStatus 0001  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                   utoa@buf 0067  
                _USBCtrlEPServiceComplete 2588                                   utoa@val 0069  
                   i1___wmul@multiplicand 0019                           _RtccIsrCallback 0150  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0027                        Terminal@EchoOption 01E0  
                                 strlen@s 0060                _USBStatusStageEnabledFlag1 0049  
              _USBStatusStageEnabledFlag2 0048                     ??_Uart_InitUartModule 0082  
                                 strtol@a 0077                                   strtol@c 007B  
                          _Rtcm_RtccAlarm 011A                                   strtol@s 006C  
                      USBEnableEndpoint@p 0069                       ?_UsbDevice_MainTask 0001  
                               _PORTDbits 000F83                       ??_Rtcc_SetRtccValue 0069  
                     ??_Rtcc_SetRtcStatus 0060                          __CFG_DSBOREN$OFF 000000  
                          ??_Tmr_StartTmr 0060              __end_of_I2cSlv_I2cReadMsgSts 4C60  
                i1I2cSlv_SendI2cMsg@TxSts 001E                         StringCopy@DestStr 0062  
  Rtcc_RegisterRtcIsrCallback@IsrCallback 0060                          __CFG_CPUDIV$OSC1 000000  
                  __size_of_UartSetConfig 0058                           _Tmr4IsrCallback 0152  
                               _TRISBbits 000F93                                 _TRISCbits 000F94  
                               _TRISDbits 000F95                                 _TRISEbits 000F96  
                     __size_of_StringCopy 0042                        _BothEP0OutUOWNsSet 0160  
                            strtol@endptr 006E                    __size_of_Term_MainTask 001A  
                            ?_Mcu_Int0Isr 0001                 __size_of_Rtcm_GetRtccDate 0066  
                            ?_Mcu_Int1Isr 0001          MdmWifi_ReceiveWifiMsg@DataLenght 006A  
               I2c_WriteData@I2cNextState 0176                StartConnectionSm@PortAscii 00D7  
               USBConfigureEndpoint@EPNum 0065                ?_USBCtrlEPAllowStatusStage 0001  
                        ??_InitSchedTimer 0087       USER_USB_CALLBACK_EVENT_HANDLER@size 0070  
                               _USTATcopy 00FF                     __end_of_StopCondition 4F22  
                __size_of_HighPriorityIsr 3314                 Tmr_TmrBPrSet@TmrBPrCfgSts 007D  
               __size_of_OsTmr_StartTimer 005E                        SendDataSm@LenAscii 00E5  
                    ??_UsbDevice_MainTask 007C              __end_of_USBTransferOnePacket 305E  
                         ??_CheckTxStatus 0060                ??_MdmWifi_StartWifiModemSm 0064  
                   StartConnectionSm@Data 0073                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 1362                 __end_of_Rtcc_SetRtcStatus 4DD8  
                       _I2cSlv_SendI2cMsg 4788           SetBaudRate@DesiredI2cBusClockHz 0079  
                         ??_ScheduleTasks 00EB                            _Tmr_TmrBConfig 2C88  
                 Tmr_TmrBPrSet@Postscaler 007C                         putUSBUSART@length 0068  
                       _OsAlrm_SetOsAlarm 2E18                  __end_of_MdmWifiEvtParser 3E1C  
                    Terminal@TermRxBuffer 0240                        ?_I2cSlv_SendI2cMsg 0063  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 443E  
                     __CFG_MSSP7B_EN$MSK7 000000                           _StartConnection 0057  
                    Terminal@TermTxBuffer 03C8                    _USBCtrlTrfSetupHandler 391C  
                      ?_OsAlrm_SetOsAlarm 0066                     __end_of_USBDeviceInit 1E84  
   __end_of_USBIncrement1msInternalTimers 4CE4    __size_of_USBIncrement1msInternalTimers 0020  
           _USBIncrement1msInternalTimers 4CC4                            __end_of___lmul 41A0  
                          _CheckAckStatus 4F08                            __end_of___wmul 4B46  
                __end_of_MdmWifi_MainTask 494E                       ??_I2cSlv_SendI2cMsg 0067  
                  __size_of_UartWriteByte 0020                  ??_MdmWifi_ReceiveWifiMsg 006C  
                          __end_of_memcpy 4566                        Terminal@PackageLen 00FA  
                          __end_of_memset 4A12                        _UartTxBufferStatus 43A2  
                     ??_OsAlrm_SetOsAlarm 006E                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 0062                         _USBBusIsSuspended 0161  
                       ??_SetUartBaudRate 007B                   __end_of_Uart_Uart1RxIsr 4EA0  
                          __end_of_strcat 402A                            __end_of_strchr 48AC  
                          __end_of_strcpy 45AC                            __end_of_strlen 42A6  
                          __end_of_strtol 1762                            __end_of_strstr 3ABE  
                     start_initialization 248A                         __size_ofi1___wmul 0026  
                 ?_USBStdGetStatusHandler 0001                              ??_SendDataSm 007E  
                  Uart_WriteString@Module 0065             USBCtrlTrfRxService@byteToRead 0061  
                 __size_of_StartCondition 0004                      Rtcm_SetRtccDate@Date 006C  
                     ?_UartTxBufferStatus 0001                                 _ModeLocal 0051  
                        ??_EnableReceiver 0060                               _cdc_data_rx 0200  
                             _cdc_data_tx 04A4              __end_of_USBConfigureEndpoint 363A  
         __end_of_USBStdFeatureReqHandler 1134                                 _MsgFormat FCE1  
                        _UpdateOsCounters 4E80                I2c_InitI2cModule@I2cConfig 0085  
       __end_of_USBCtrlEPAllowStatusStage 2C88                 __end_of_I2cSlv_SendI2cMsg 47C6  
                __end_of_USBCtrlEPService 3764                         ?_Uart_WriteString 0063  
                   __size_of_SetAckStatus 0014             __size_of_MdmWifiHttp_MainTask 000E  
                    __size_of_ClearBuffer 0036                      __end_of_Rtcc_LockRtc 4E70  
                            ?_SetBaudRate 0079                    __end_of_Tmr_TmrBConfig 2D50  
               __end_of_OsAlrm_SetOsAlarm 2EE0                    __end_of_Tmr_TmrBIrqSet 448A  
                               _TaskTable 028B                 ??_USBCtrlEPAllowDataStage 0061  
                      ??_Uart_WriteString 0065                               _SystemState 00FE  
                       __size_of_ReadByte 000A                                 _RtcConfig 01BD  
              __size_of_Sch_MainScheduler 001E             Uart_InitUartModule@UartConfig 0080  
                             ??_CDCInitEP 006C                            USBDeviceInit@i 0068  
                           _UartSetConfig 41A0                        __end_of_ReceiveEvt 4A9E  
                  _pBDTEntryEP0OutCurrent 00F8                             _Term_MainTask 4D78  
                 USBTransferOnePacket@dir 0060                      ??_UartTxBufferStatus 0060  
                 USBTransferOnePacket@len 0063                     Tmr_TmrBConfig@TmrNumb 0086  
                 __size_of_LowPriorityIsr 00B4           StartConnectionSm@StartConnState 0167  
                  __end_of_CheckAckStatus 4F12                                  ??___lmul 0068  
                                ??___wmul 0064                         __size_of_TmrBInit 0096  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 0060                        __end_of_SendDataSm 158C  
                     _USBStdGetDscHandler 1FC8                                 _PortLocal 0169  
              I2cSlv_SendI2cMsg@SlaveAddr 0065                               __pdataBANK1 01C6  
                             __pdataBANK2 028B                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 0414                                  ??_memcpy 0066  
                                ??_memset 0066                   _Uart_MdmWifiReadService 4980  
                  __size_ofi1_GenerateEvt 0016                       Tmr_StartTmr@TmrNumb 0060  
                                ??_strcat 0065                                  ??_strchr 0064  
                                ??_strcpy 0064                                  ??_strlen 0062  
                  __size_of_Rtcm_MainTask 009C                         _MdmWifi_DrvMainFn 4F18  
                                ??_strtol 0072                                  ??_strstr 0073  
                             __pbssBANK10 0A00                               __pbssBANK11 0B00  
                             __pbssBANK12 0C00                               __pbssBANK13 0D00  
                             _ALRMCFGbits 000F91                    _USBActiveConfiguration 0052  
          __end_of_USBStdGetStatusHandler 3110                             WriteByte@Byte 0060  
                      __end_of_TaskNumber FCE1           MdmWifi_StartWifiModemSm@Counter 0146  
                             __pbssCOMRAM 003E                   GetElapsedTime@TimeValue 0070  
                      ?_MdmWifi_DrvMainFn 0001                 __size_of_GetOsTickCounter 0012  
                           __pcstackBANK0 0060              __size_of_USBCtrlTrfInHandler 00C0  
                            _SetAckStatus 4E1A                       _MdmWifi_SendWifiMsg 4E70  
                            _isalpha$5857 0064                    GenerateEvt@EventStatus 0062  
                               _WriteByte 4EEA                  WifiTerminal@FirstRecFlag 015A  
                    ?_USBStdGetDscHandler 0001                              _isdigit$5592 0061  
           UpdateSchFlag@InterruptCounter 0144                 SetUartBaudRate@UartConfig 0079  
                     ??_MdmWifi_DrvMainFn 0064                   GetElapsedTime@StartTime 0064  
                           _UartWriteByte 4CE4                               _ALRMRPTbits 000F90  
              __end_of_USBWakeFromSuspend 4874                           _USBStallHandler 45F2  
                            _pBDTEntryOut 0120                __size_of_Rtcc_SetRtccValue 022E  
                    __size_of_GenerateEvt 0018                           ?_Tmr_TmrBConfig 0083  
              __size_of_Rtcc_SetRtcStatus 0016                          _Mcu_ConfigExtInt 4E40  
              __end_of_USBCheckCDCRequest 31C0              __size_ofi1_I2cSlv_SendI2cMsg 0038  
                     _OsAlrm_ClearOsAlarm 41F8                           ?_Tmr_TmrBIrqSet 0060  
                          ?_UartSetConfig 0001                      __end_of_Tmr_StartTmr 4CC4  
             SendDataSm@WifiSendDataState 0166                              ??_StringCopy 0066  
                       ??_HighPriorityIsr 0005                            ?_Term_MainTask 0001  
                        ___lwdiv@dividend 0060                              ?_Term_MainSm 0001  
                    _I2cSlv_I2cReadMsgSts 4C3E                          GenerateEvt@Event 0060  
                    ?_MdmWifi_SendWifiMsg 0066                    __size_of_Tmr_TmrBPrSet 00EE  
                               __pintcode 0008             Uart_WriteString@StringToWrite 0063  
                           __pmediumconst FCD6                              ?_RtccIrqInit 0001  
                         ?_CheckAckStatus 0001                   Tmr_TmrBIrqSet@TmrIrqSts 0061  
                                ?___awdiv 0060                                 __ptext100 4566  
                               __ptext101 3FC6                                 __ptext110 45AC  
                               __ptext102 388C                                 __ptext111 40EA  
                               __ptext103 2D50                                 __ptext120 4A70  
                               __ptext112 4E2E                                 __ptext104 4E70  
                               __ptext121 18E4                                 __ptext113 2E18  
                               __ptext105 3EF4                                 __ptext130 4EFE  
                               __ptext122 1A64                                 __ptext114 4B1E  
                               __ptext106 4CE4                             Terminal@Index 007F  
                               __ptext131 4F08                                 __ptext123 4EEA  
                               __ptext115 3D3A                                 __ptext107 43A2  
                               __ptext140 4D5C                                 __ptext124 4F1E  
                               __ptext116 43F0                                 __ptext108 448A  
                               __ptext141 48AC                                 __ptext133 4C60  
                               __ptext125 4F22                                 __ptext117 3BCA  
                               __ptext109 4746                                 __ptext150 4F2E  
                               __ptext142 4DEE                                 __ptext134 4EBC  
                               __ptext126 4E1A                                 __ptext118 4A9E  
                               __ptext151 0000                                 __ptext135 4D40  
                               __ptext127 4EF4                                 __ptext119 31C0  
                               __ptext144 4E90                                 __ptext136 4E80  
                               __ptext128 4DAA                                 __ptext145 4980  
                               __ptext137 1BDA                                 __ptext129 4F26  
                               __ptext146 4C82                                 __ptext138 4B46  
                               __ptext147 4B6C                                 __ptext139 41F8  
                               __ptext148 4E04                                 __ptext149 4F2A  
                                ?___awmod 0060                        _Sch_SchmIntService 4EBC  
                         _InitializeTasks 3C4E                                  ?___lldiv 006C  
                                ?___lwdiv 0060                                  ?___lwmod 0060  
               __end_of_MdmWifi_DrvMainFn 4F1E                              ?_Rtcc_RtcIsr 0001  
                             __pintcodelo 0018                             _WifiMdmStatus 016E  
     __end_of_Rtcc_RegisterRtcIsrCallback 4EEA               _Rtcc_RegisterRtcIsrCallback 4EE0  
                  __size_ofi2_GenerateEvt 0016           __size_of_MdmWifi_ReceiveWifiMsg 004C  
                        ??_Rtcc_RtcConfig 0063                      ?_OsAlrm_ClearOsAlarm 0001  
                             _I2cRxPacket 01A6                       _NewWifiPacketParser 0059  
                     ?_Sch_SchmIntService 0001                      _USBTransferOnePacket 2FA0  
                 ??_Irq_InitIntController 0062                   ?_OsAlrm_ProcessOsAlarms 0001  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 0001                                  ?_isalpha 0001  
                            ??_SystemInit 008E                                  ?_isdigit 0001  
                             _I2cTxPacket 01AC            InitializeTasks@ActiveTaskIndex 00ED  
                    __CFG_RTCOSC$T1OSCREF 000000                            __size_of_Alarm 0026  
                                ?_isspace 0001                                  ?_isupper 0001  
              Term_MainSm@TermMainSmState 0156                           Terminal@Payload 0440  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 408C  
                              ?_WriteByte 0001                     ??_USBStdGetDscHandler 0060  
                        _Rtcm_GetRtccDate 3F60                        __end_of_StringCopy 4788  
                             _ep_data_out 0138                                  _ALRMVALH 000F8F  
                                _ALRMVALL 000F8E                          ___lwdiv@quotient 0064  
                            ?_Tmr_Tmr2Isr 0001                 __size_of_Rtcm_SetRtccDate 0054  
            __size_of_USBCtrlTrfRxService 0124             USBConfigureEndpoint@direction 0060  
                                ?_strncmp 0066                                  ?_toupper 0001  
                          ?_UartWriteByte 0060              __size_of_Rtcm_SetAlarmAction 000E  
                  __size_of_I2c_WriteData 0180                          _OsTmr_StartTimer 40EA  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 0060                __size_of_I2cSlv_SendI2cMsg 003E  
            __size_of_USBCtrlTrfTxService 00D8                          ??_Rtcc_UnlockRtc 0060  
                           i1_GenerateEvt 4DEE                __end_of_Mcu_StartSystemPll 4D22  
                           _Rtcm_MainTask 3506                            ___wmul@product 0064  
                   Terminal@ReceivedBytes 007E                                  _LATEbits 000F8D  
                    ??_Sch_SchmIntService 0029                    __size_of_UpdateSchFlag 001C  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 0061  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                                _IPR3bits 000FA5                                  _PIE1bits 000F9D  
                                _PIE2bits 000FA0                                  _PIE3bits 000FA3  
    __size_of_Tmr_RegisterTmr2IsrCallback 000A                     _MdmWifi_UartRxCounter 014A  
                   ?_I2cSlv_I2cReadMsgSts 0001                     ??_MdmWifi_SendWifiMsg 0068  
                       _I2c_InitI2cModule 3D3A                                  i1u800_28 4C70  
                                _PIR1bits 000F9E                                  i1u771_20 1BF0  
                                _PIR2bits 000FA1                                  _PIR3bits 000FA4  
                                i1u775_28 1D18                                  i1u775_29 1D2A  
                                i2u794_40 4B76                                  i2u795_48 4B78  
                                i2u798_48 4C92                        __end_of_SystemInit 49E2  
                                _RCONbits 000FD0                             ??_putUSBUSART 0069  
                        __CFG_WDTPS$32768 000000                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0044                _USBDeferINDataStagePackets 015F  
                      ?_I2c_InitI2cModule 0085                 ??_Uart_MdmWifiReadService 0005  
                                _SSP2CON1 000F72                                  _SSP2CON2 000F71  
             __size_of_USBCheckStdRequest 00E4                      Rtcm_MainTask@Options 0001  
            __end_of_OsTmr_GetTimerStatus 391C                                  _UCONbits 000F65  
                                _SSP2STAT 000F73               MdmWifi_SendWifiMsg@TxBuffer 0066  
                    _USBConfigureEndpoint 35A2                           _NewWifiUartData 005C  
                       SendDataSm@IdAscii 00EA          __size_of_USBStdFeatureReqHandler 0294  
                   SetUartBaudRate@Module 007C            __end_of_OsAlrm_ProcessOsAlarms 1D36  
                   ??_OsAlrm_ClearOsAlarm 0017                         ___wmul@multiplier 0060  
                   ?_USBTransferOnePacket 0060                                  i1___wmul 4B46  
                     ??_I2c_InitI2cModule 0087                 __size_of_Rtcc_AlarmConfig 006C  
                           ?_CDCTxService 0001            OsAlrm_SetOsAlarm@AlarmCallback 006C  
                            _RemoteWakeup 0162                            _StartCondition 4F22  
                      SetAckStatus@AckSts 0060                             _Tmr_TmrBPrSet 2684  
                            _isspace$5860 0061                   __end_of_USBStallHandler 4636  
                   __size_of_Rtcc_LockRtc 0010                         SendDataSm@SwTimer 01F6  
                       ___lmul@multiplier 0060                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0001  
                               copy_data0 249E                                 copy_data1 24BE  
                                _LenLocal 004F                    I2cSlv_SendI2cMsg@TxSts 0067  
             ??_USBCtrlEPAllowStatusStage 0060               __end_of_USBStdSetCfgHandler 2858  
                          ?i1_GenerateEvt 0017                  Tmr_TmrBConfig@TmrBConfig 0083  
                                _OsAlarms 0500                            ?_Rtcm_MainTask 0001  
                   OsTmr_StartTimer@Timer 0064                    _MdmWifi_ReceiveWifiMsg 448A  
                                _ReadByte 4EF4              __size_of_MdmWifiCmd_MainTask 0022  
                           i2_GenerateEvt 4E04                           ??_UartSetConfig 0060  
                   __end_of_ReceiveDataSm 45F2                        __end_of_device_dsc FF06  
               __end_of_I2c_InitI2cModule 3DAC                                  _MsgReady FEDD  
                         ??_Term_MainTask 00CA                __end_of_MdmWifiGetUartData 2BBE  
                 __end_of_InitializeTasks 3CC8                   ?_USBCtrlTrfSetupHandler 0001  
                                _RxBuffer 0C00                   USBStdGetStatusHandler@p 0061  
                                __Hrparam 0000                                  _TmrBInit 363A  
                    __size_of_SetBaudRate 004E                            _LowPriorityIsr 0018  
                               memcpy@tmp 006A                      Tmr_TmrBPrSet@Divisor 007F  
                                __Lrparam 0000                    USBTransferOnePacket@ep 0064  
                       ?_MdmWifiEvtParser 0001               __end_of_Uart_InitUartModule 0BCA  
                         _WifiReceiveData 0055                           _SetUartBaudRate 2102  
            i1I2cSlv_SendI2cMsg@SlaveAddr 001C                                  _Terminal 00D0  
                                _SetupPkt 000430                 I2cSlv_SendI2cMsg@TxBuffer 0063  
                   SetBaudRate@McuClockHz 007D                        ??_MdmWifiEvtParser 0073  
                   ?_USBConfigureEndpoint 0060              OsAlrm_ClearOsAlarm@OsAlarmId 0017  
                           _I2c_WriteData 18E4                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 4E90  
                        __size_of___lldiv 0084                __size_of_MdmWifi_DrvMainFn 0006  
                       Terminal@SlaveAddr 0158                          __size_of___lwdiv 0054  
                    Tmr_TmrBPrSet@TmrNumb 007E                          __size_of___lwmod 0044  
               Rtcm_SetAlarmAction@Action 0062                         ?_MdmWifi_MainTask 0001  
                I2c_WriteData@WritePacket 0061                         Terminal@TermState 0159  
                           _UpdateSchFlag 4D40                       __end_of_putUSBUSART 4C1C  
                             _line_coding 019F                            _StartWifiModem 005B  
                            _Rtcc_LockRtc 4E60                    __end_of_StartCondition 4F26  
                          ??_CDCTxService 0067                  ??_Pm_DsReleasePinControl 0060  
               Rtcm_GetRtccDate@LocalDate 006D                        ??_MdmWifi_MainTask 0085  
                I2c_WriteData@WriteStatus 0174                              _isupper$5863 0061  
                              strcat@from 0062                   I2c_ReadData@DataCounter 0172  
                          ?_Tmr_TmrBPrSet 0079                          _GetOsTickCounter 4E2E  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0182                           ___lwdiv@divisor 0062  
                            Terminal@Addr 01B1                               ??_WriteByte 0060  
                        __size_of_isspace 002A                           ___lwdiv@counter 0066  
                                __ptext10 443E                                  __ptext11 4CA4  
                                __ptext20 4BB6                                  __ptext12 363A  
                                __ptext21 491A                                  __ptext13 4D22  
                         ??_UartWriteByte 0061                                  __ptext30 1D36  
                                __ptext22 42A6                                  __ptext14 223A  
                                __ptext31 36D0                                  __ptext23 4F18  
                                __ptext15 3C4E                                  __ptext40 0EA0  
                                __ptext32 451E                                  __ptext24 4B92  
                                __ptext16 4D78                                  __ptext41 408C  
                                __ptext33 391C                                  __ptext25 1762  
                                __ptext17 3506                                  __ptext50 293C  
                                __ptext42 3110                                  __ptext34 2588  
                                __ptext26 483A                                  __ptext18 4800  
                                __ptext51 1E84                                  __ptext43 3E1C  
                                __ptext35 33C6                                  __ptext27 494E  
                                __ptext19 4EA0                                  __ptext60 4BFA  
                                __ptext52 04E4                                  __ptext44 4636  
                                __ptext36 2858                                  __ptext28 45F2  
                                __ptext61 467A                                  __ptext53 49E2  
                                __ptext45 35A2                                  __ptext37 2772  
                                __ptext29 4CC4                                  __ptext70 4E50  
                                __ptext62 3764                                  __ptext54 00D0  
                                __ptext46 402A                                  __ptext38 305E  
                                __ptext71 1134                                  __ptext63 2FA0  
                                __ptext55 158C                                  __ptext47 2366  
                                __ptext39 1FC8                                  __ptext80 3466  
                                __ptext72 3CC8                                  __ptext64 2A14  
                                __ptext56 4D92                                  __ptext48 2BBE  
                                __ptext81 4DD8                                  __ptext73 3ABE  
                                __ptext65 4C1C                                  __ptext57 4AF4  
                                __ptext49 2EE0                                  __ptext90 0BCA  
                                __ptext82 3E88                                  __ptext74 4E60  
                                __ptext66 4788                                  __ptext58 4A12  
                                __ptext91 48E4                                  __ptext83 08D6  
                                __ptext75 4EAE                                  __ptext67 46BE  
                                __ptext59 4BD8                                  __ptext92 1362  
                                __ptext84 2102                                  __ptext76 4EE0  
                                __ptext68 4C3E                                  __ptext93 331C  
                                __ptext85 4148                                  __ptext77 3F60  
                                __ptext69 42FA                                  __ptext94 4702  
                                __ptext86 41A0                                  __ptext78 37F8  
                                __ptext95 434E                                  __ptext87 2AEC  
                                __ptext79 4DC2                                  __ptext96 3A34  
                                __ptext88 3DAC                                  __ptext97 39A8  
                                __ptext89 3B44                                  __ptext98 4250  
                                __ptext99 4874                          __size_of_isupper 0022  
                              _I2cDummyTx 4D5C                    Tmr_TmrBIrqSet@Priority 0060  
                            _SSP2CON2bits 000F71                            SendDataSm@Data 007E  
                   __size_of_Tmr_StartTmr 0020                          __size_of_strncmp 008C  
                        __size_of_toupper 0018                            ?i2_GenerateEvt 0001  
                              _DSCONHbits 000F4D                                strcpy@from 0062  
                              _DSCONLbits 000F4C                        i1GenerateEvt@Event 0017  
                            _WifiSendData 0056               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 0061  
          __end_of_USBCtrlTrfSetupHandler 39A8                             __size_of_main 000C  
                       ?_USBCtrlEPService 0001                             __size_of_itoa 0044  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0001  
                  ??_I2cSlv_I2cReadMsgSts 0064                                strncmp@len 006A  
                  __end_of_LowPriorityIsr 00CC                              _WifiRxPacket 0700  
                   __end_of_CheckTxStatus 4F08                        ??_USBCtrlEPService 007A  
                            _WifiTxPacket 0900                       _USBCtrlTrfInHandler 2EE0  
                I2c_ReadData@I2cReadState 0173                     __end_of_ScheduleTasks 2366  
                 __size_of_GetElapsedTime 00C8                             ?_Led_MainTask 0001  
                                _outPipes 0112                      _USBCtrlTrfOutHandler 402A  
                                int$flags 005D                                strtol@base 0070  
                          ?_I2c_WriteData 0061                                  atoi@sign 006A  
                       ??_I2cSlv_MainTask 0089                           StringCopy@Index 0066  
               _USBCtrlEPAllowStatusStage 2BBE                      __size_of_Term_MainSm 03F2  
            ScheduleTasks@ActiveTaskIndex 00EF                                strtol@sign 0076  
                         Term_MainSm@Data 0080                      __size_of_RtccIrqInit 0016  
            __end_of_MdmWifiHttp_MainTask 4EAE                 __size_of_Uart_WriteString 006C  
                  ??_USBTransferOnePacket 0064                            ?_UpdateSchFlag 0001  
       __size_of_MdmWifi_StartWifiModemSm 0086                    __size_of_StopCondition 0004  
               ?_MdmWifi_StartWifiModemSm 0001                      __size_of_Rtcc_RtcIsr 0022  
                     i1_I2cSlv_SendI2cMsg 48AC                  __end_of_Mcu_ConfigExtInt 4E50  
                         ?_StartCondition 0001                 _USBDeferStatusStagePacket 00FC  
                CDCTxService@byte_to_send 0068             I2c_WriteData@TentativeCounter 0175  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                UartWriteByte@ByteToWrite 0060                              _Tmr_StartTmr 4CA4  
             Term_MainSm@FwkBuildMonthStr 00C2                      ?_USBCtrlTrfInHandler 0001  
                                memcpy@d1 0060                                  memcpy@s1 0062  
              I2cSlv_I2cReadMsgSts@Result 0064             USBCtrlTrfTxService@byteToSend 0060  
                           ?_I2cSetConfig 0001                                  itoa@base 0074  
             i1I2cSlv_SendI2cMsg@TxBuffer 001A                             ?_I2c_ReadData 0063  
                           ?_I2cSendMsgSm 0001                                  isalpha@c 0065  
                                isdigit@c 0062                                  memset@p1 0060  
                           _ProtocolLocal 016A                          ?_USBStallHandler 0001  
                         ??i1_GenerateEvt 0019                          _Rtcm_SetRtccDate 42FA  
                USBStdFeatureReqHandler@p 0078                          ??_Tmr_TmrBConfig 0085  
                           ??_ClearBuffer 0064                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 0075                          ??_Tmr_TmrBIrqSet 0062  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 388C                         TmrBInit@Prescaler 0060  
                    __size_of_Tmr_Tmr2Isr 0022                    __size_of_USBDeviceInit 014E  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 40EA  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 0072          ?_USER_USB_CALLBACK_EVENT_HANDLER 006C  
         _USER_USB_CALLBACK_EVENT_HANDLER 408C                                 strchr@chr 0062  
                 Rtcc_SetRtcStatus@Status 0060                          ___lwmod@dividend 0060  
                               strchr@ptr 0060                   __end_of_SetUartBaudRate 223A  
                                isspace@c 0062                          ___lldiv@dividend 006C  
                    ?i1_I2cSlv_SendI2cMsg 001A                __size_of_I2c_InitI2cModule 0072  
                        ??_CheckAckStatus 0060                           ?_LowPriorityIsr 0001  
                        ?_InitializeTasks 0001                                  isupper@c 0062  
                               strncmp@s1 0066                                 strncmp@s2 0068  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 0067  
                          ??_Led_MainTask 006A                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 0061                     ?_USBCtrlTrfOutHandler 0001  
             __size_of_UartTxBufferStatus 004E                  __end_of_Rtcm_GetRtccDate 3FC6  
                             _putUSBUSART 4BFA                       _USBCtrlTrfRxService 2366  
                  Rtcc_SetRtccValue@Value 0068                        _USBWakeFromSuspend 483A  
                     _Rtcm_SetAlarmAction 4EAE                   _USBStdFeatureReqHandler 0EA0  
                __end_of_OsTmr_StartTimer 4148                        _USBCheckCDCRequest 3110  
                     _USBCtrlTrfTxService 293C                       RtccIrqInit@Priority 0060  
                                utoa@base 006B                                _RTCCFGbits 000F3F  
                        _Rtcc_AlarmConfig 3E88                           ??_Tmr_TmrBPrSet 007D  
                                strcat@cp 0065                                  strcat@to 0060  
                     ?_USBWakeFromSuspend 0001           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 0074                           ___lwmod@divisor 0062  
                   ??_USBCtrlTrfInHandler 0061                                  strcpy@cp 0064  
                                strlen@cp 0064                                  strcpy@to 0060  
               UsbDevice_MainTask@Options 0001                     _USBAlternateInterface 01C1  
                         ___lwmod@counter 0064                            ??_I2cSetConfig 0060  
          __size_of_Irq_InitIntController 002A                                  toupper@c 0060  
         SetUartBaudRate@BaudRateRegister 007D                       ?_USBCheckCDCRequest 0001  
                          ??_I2c_ReadData 0065                            ??_I2cSendMsgSm 0067  
           __end_of_Irq_InitIntController 4AF4                     ReceiveEvt@EventStatus 0063  
            ?_Tmr_RegisterTmr2IsrCallback 0060                       USBEnableEndpoint@ep 006B  
                                strstr@s1 006F                                  strstr@s2 0071  
                         _endpoint_number 004B                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 0001                      ?_USBCtrlTrfRxService 0001  
                         ??i2_GenerateEvt 0003                             ?_getsUSBUSART 0067  
                UartTxBufferStatus@Module 0061                     ?_OsTmr_GetTimerStatus 0078  
           SetUartBaudRate@DivisionFactor 007F            I2cSlv_ReceiveI2cMsg@DataLenght 0066  
                           ??_GenerateEvt 0062                      ?_Rtcm_SetAlarmAction 0062  
       ReceiveDataSm@WifiReceiveDataState 0165      __size_of_Rtcc_RegisterRtcIsrCallback 000A  
                         TmrBInit@TmrNumb 0063                  ?_USBCtrlEPAllowDataStage 0001  
                    ?_USBCtrlTrfTxService 0001                             _StopCondition 4F1E  
                   ??i1_I2cSlv_SendI2cMsg 001E              _USBStatusStageTimeoutCounter 004A  
                  WifiTerminal@UartBuffer 0800                      ??_USBWakeFromSuspend 0074  
              USBTransferOnePacket@handle 0065                       __end_of_ClearBuffer 491A  
                    __end_of_CDCTxService 1FC8                      ??_USBCheckCDCRequest 0060  
                 __size_of_EnableReceiver 0004                                _USB_CD_Ptr FCDD  
                   WifiTerminal@UsbBuffer 0A00                           ??_I2c_WriteData 0063  
