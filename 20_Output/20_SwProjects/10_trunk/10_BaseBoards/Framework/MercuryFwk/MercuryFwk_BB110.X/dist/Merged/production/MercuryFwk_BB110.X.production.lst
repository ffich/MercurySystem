

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Dec 10 10:17:50 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    22                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    24                           	psect	bssBANK9,global,class=BANK9,space=1,delta=1,lowdata,noexec
    25                           	psect	bssBANK10,global,class=BANK10,space=1,delta=1,lowdata,noexec
    26                           	psect	bssBANK11,global,class=BANK11,space=1,delta=1,lowdata,noexec
    27                           	psect	bssBANK12,global,class=BANK12,space=1,delta=1,lowdata,noexec
    28                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    29                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	text0,global,reloc=2,class=CODE,delta=1
    33                           	psect	text1,global,reloc=2,class=CODE,delta=1
    34                           	psect	text2,global,reloc=2,class=CODE,delta=1
    35                           	psect	text3,global,reloc=2,class=CODE,delta=1
    36                           	psect	text4,global,reloc=2,class=CODE,delta=1
    37                           	psect	text5,global,reloc=2,class=CODE,delta=1
    38                           	psect	text6,global,reloc=2,class=CODE,delta=1
    39                           	psect	text7,global,reloc=2,class=CODE,delta=1
    40                           	psect	text8,global,reloc=2,class=CODE,delta=1
    41                           	psect	text9,global,reloc=2,class=CODE,delta=1
    42                           	psect	text10,global,reloc=2,class=CODE,delta=1
    43                           	psect	text11,global,reloc=2,class=CODE,delta=1
    44                           	psect	text12,global,reloc=2,class=CODE,delta=1
    45                           	psect	text13,global,reloc=2,class=CODE,delta=1
    46                           	psect	text14,global,reloc=2,class=CODE,delta=1
    47                           	psect	text15,global,reloc=2,class=CODE,delta=1
    48                           	psect	text16,global,reloc=2,class=CODE,delta=1
    49                           	psect	text17,global,reloc=2,class=CODE,delta=1
    50                           	psect	text18,global,reloc=2,class=CODE,delta=1
    51                           	psect	text19,global,reloc=2,class=CODE,delta=1
    52                           	psect	text20,global,reloc=2,class=CODE,delta=1
    53                           	psect	text21,global,reloc=2,class=CODE,delta=1
    54                           	psect	text22,global,reloc=2,class=CODE,delta=1
    55                           	psect	text23,global,reloc=2,class=CODE,delta=1
    56                           	psect	text24,global,reloc=2,class=CODE,delta=1
    57                           	psect	text25,global,reloc=2,class=CODE,delta=1
    58                           	psect	text26,global,reloc=2,class=CODE,delta=1
    59                           	psect	text27,global,reloc=2,class=CODE,delta=1
    60                           	psect	text28,global,reloc=2,class=CODE,delta=1
    61                           	psect	text29,global,reloc=2,class=CODE,delta=1
    62                           	psect	text30,global,reloc=2,class=CODE,delta=1
    63                           	psect	text31,global,reloc=2,class=CODE,delta=1
    64                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text33,global,reloc=2,class=CODE,delta=1
    66                           	psect	text34,global,reloc=2,class=CODE,delta=1
    67                           	psect	text35,global,reloc=2,class=CODE,delta=1
    68                           	psect	text36,global,reloc=2,class=CODE,delta=1
    69                           	psect	text37,global,reloc=2,class=CODE,delta=1
    70                           	psect	text38,global,reloc=2,class=CODE,delta=1
    71                           	psect	text39,global,reloc=2,class=CODE,delta=1
    72                           	psect	text40,global,reloc=2,class=CODE,delta=1
    73                           	psect	text41,global,reloc=2,class=CODE,delta=1
    74                           	psect	text42,global,reloc=2,class=CODE,delta=1
    75                           	psect	text43,global,reloc=2,class=CODE,delta=1
    76                           	psect	text44,global,reloc=2,class=CODE,delta=1
    77                           	psect	text45,global,reloc=2,class=CODE,delta=1
    78                           	psect	text46,global,reloc=2,class=CODE,delta=1
    79                           	psect	text47,global,reloc=2,class=CODE,delta=1
    80                           	psect	text48,global,reloc=2,class=CODE,delta=1
    81                           	psect	text49,global,reloc=2,class=CODE,delta=1
    82                           	psect	text50,global,reloc=2,class=CODE,delta=1
    83                           	psect	text51,global,reloc=2,class=CODE,delta=1
    84                           	psect	text52,global,reloc=2,class=CODE,delta=1
    85                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text54,global,reloc=2,class=CODE,delta=1
    87                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text60,global,reloc=2,class=CODE,delta=1
    93                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text62,global,reloc=2,class=CODE,delta=1
    95                           	psect	text63,global,reloc=2,class=CODE,delta=1
    96                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text66,global,reloc=2,class=CODE,delta=1
    99                           	psect	text67,global,reloc=2,class=CODE,delta=1
   100                           	psect	text68,global,reloc=2,class=CODE,delta=1
   101                           	psect	text69,global,reloc=2,class=CODE,delta=1
   102                           	psect	text70,global,reloc=2,class=CODE,delta=1
   103                           	psect	text71,global,reloc=2,class=CODE,delta=1
   104                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=1
   105                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
   106                           	psect	text74,global,reloc=2,class=CODE,delta=1
   107                           	psect	text75,global,reloc=2,class=CODE,delta=1
   108                           	psect	text76,global,reloc=2,class=CODE,delta=1
   109                           	psect	text77,global,reloc=2,class=CODE,delta=1
   110                           	psect	text78,global,reloc=2,class=CODE,delta=1
   111                           	psect	text79,global,reloc=2,class=CODE,delta=1
   112                           	psect	text80,global,reloc=2,class=CODE,delta=1
   113                           	psect	text81,global,reloc=2,class=CODE,delta=1
   114                           	psect	text82,global,reloc=2,class=CODE,delta=1
   115                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   116                           	psect	text84,global,reloc=2,class=CODE,delta=1
   117                           	psect	text85,global,reloc=2,class=CODE,delta=1
   118                           	psect	text86,global,reloc=2,class=CODE,delta=1
   119                           	psect	text87,global,reloc=2,class=CODE,delta=1
   120                           	psect	text88,global,reloc=2,class=CODE,delta=1
   121                           	psect	text89,global,reloc=2,class=CODE,delta=1
   122                           	psect	text90,global,reloc=2,class=CODE,delta=1
   123                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   125                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   126                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text99,global,reloc=2,class=CODE,delta=1
   132                           	psect	text100,global,reloc=2,class=CODE,delta=1
   133                           	psect	text101,global,reloc=2,class=CODE,delta=1
   134                           	psect	text102,global,reloc=2,class=CODE,delta=1
   135                           	psect	text103,global,reloc=2,class=CODE,delta=1
   136                           	psect	text104,global,reloc=2,class=CODE,delta=1
   137                           	psect	text105,global,reloc=2,class=CODE,delta=1
   138                           	psect	text106,global,reloc=2,class=CODE,delta=1
   139                           	psect	text107,global,reloc=2,class=CODE,delta=1
   140                           	psect	text108,global,reloc=2,class=CODE,delta=1
   141                           	psect	text109,global,reloc=2,class=CODE,delta=1
   142                           	psect	text110,global,reloc=2,class=CODE,delta=1
   143                           	psect	text111,global,reloc=2,class=CODE,delta=1
   144                           	psect	text112,global,reloc=2,class=CODE,delta=1
   145                           	psect	text113,global,reloc=2,class=CODE,delta=1
   146                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text115,global,reloc=2,class=CODE,delta=1
   148                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text117,global,reloc=2,class=CODE,delta=1
   150                           	psect	text118,global,reloc=2,class=CODE,delta=1
   151                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   152                           	psect	text120,global,reloc=2,class=CODE,delta=1
   153                           	psect	text121,global,reloc=2,class=CODE,delta=1
   154                           	psect	text122,global,reloc=2,class=CODE,delta=1
   155                           	psect	text123,global,reloc=2,class=CODE,delta=1
   156                           	psect	text124,global,reloc=2,class=CODE,delta=1
   157                           	psect	text125,global,reloc=2,class=CODE,delta=1
   158                           	psect	text126,global,reloc=2,class=CODE,delta=1
   159                           	psect	text127,global,reloc=2,class=CODE,delta=1
   160                           	psect	text128,global,reloc=2,class=CODE,delta=1
   161                           	psect	text129,global,reloc=2,class=CODE,delta=1
   162                           	psect	text130,global,reloc=2,class=CODE,delta=1
   163                           	psect	text131,global,reloc=2,class=CODE,delta=1
   164                           	psect	text132,global,reloc=2,class=CODE,delta=1
   165                           	psect	text133,global,reloc=2,class=CODE,delta=1
   166                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   167                           	psect	text135,global,reloc=2,class=CODE,delta=1
   168                           	psect	text136,global,reloc=2,class=CODE,delta=1
   169                           	psect	text137,global,reloc=2,class=CODE,delta=1
   170                           	psect	text138,global,reloc=2,class=CODE,delta=1
   171                           	psect	text139,global,reloc=2,class=CODE,delta=1
   172                           	psect	text140,global,reloc=2,class=CODE,delta=1
   173                           	psect	text141,global,reloc=2,class=CODE,delta=1
   174                           	psect	text142,global,reloc=2,class=CODE,delta=1
   175                           	psect	text143,global,reloc=2,class=CODE,delta=1
   176                           	psect	text144,global,reloc=2,class=CODE,delta=1
   177                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   178                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   179                           	psect	text146,global,reloc=2,class=CODE,delta=1
   180                           	psect	text147,global,reloc=2,class=CODE,delta=1
   181                           	psect	text148,global,reloc=2,class=CODE,delta=1
   182                           	psect	text149,global,reloc=2,class=CODE,delta=1
   183                           	psect	text150,global,reloc=2,class=CODE,delta=1
   184                           	psect	text151,global,reloc=2,class=CODE,delta=1
   185                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   186                           	psect	text152,global,reloc=2,class=CODE,delta=1
   187                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   188                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   189                           	dabs	1,0x400,48,_BDT
   190                           	dabs	1,0x438,8,_CtrlTrfData
   191                           	dabs	1,0x430,8,_SetupPkt
   192  0000                     
   193                           ; Version 1.45
   194                           ; Generated 16/11/2017 GMT
   195                           ; 
   196                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   197                           ; All rights reserved.
   198                           ; 
   199                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   200                           ; 
   201                           ; Redistribution and use in source and binary forms, with or without modification, are
   202                           ; permitted provided that the following conditions are met:
   203                           ; 
   204                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   205                           ;        conditions and the following disclaimer.
   206                           ; 
   207                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   208                           ;        of conditions and the following disclaimer in the documentation and/or other
   209                           ;        materials provided with the distribution.
   210                           ; 
   211                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   212                           ;        software without specific prior written permission.
   213                           ; 
   214                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   215                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   216                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   217                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   218                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   219                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   220                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   221                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   222                           ; 
   223                           ; 
   224                           ; Code-generator required, PIC18F46J50 Definitions
   225                           ; 
   226                           ; SFR Addresses
   227  0000                     
   228                           	psect	idataBANK1
   229  0000'                    __pidataBANK1:
   230                           	opt stack 0
   231                           
   232                           ;initializer for _MainSystemTimebaseFlag
   233  0000' 01                 	db	1
   234                           
   235                           	psect	idataBANK2
   236  0000'                    __pidataBANK2:
   237                           	opt stack 0
   238                           
   239                           ;initializer for Terminal@EchoOption
   240  0000' 01                 	db	1
   241                           
   242                           	psect	idataBANK3
   243  0000'                    __pidataBANK3:
   244                           	opt stack 0
   245                           
   246                           ;initializer for Term_MainSm@TermDelay
   247  0000' 01                 	db	1
   248  0001' 01                 	db	1
   249  0002' 0000               	dw	0
   250  0004' 0000               	dw	0
   251  0006' 0000               	dw	0
   252  0008' 0000               	dw	0
   253  000A' 00                 	db	0
   254                           
   255                           ;initializer for SendDataSm@SwTimer
   256  000B' 01                 	db	1
   257  000C' 01                 	db	1
   258  000D' 0000               	dw	0
   259  000F' 0000               	dw	0
   260  0011' 0000               	dw	0
   261  0013' 0000               	dw	0
   262  0015' 00                 	db	0
   263                           
   264                           	psect	idataBANK4
   265  0000'                    __pidataBANK4:
   266                           	opt stack 0
   267                           
   268                           ;initializer for _TaskTable
   269  0000' 00'                	db	low _MdmWifi_DrvMainFn
   270  0001' 00'                	db	high _MdmWifi_DrvMainFn
   271  0002' 00                 	db	0
   272  0003' 0000               	dw	0
   273  0005' 000A               	dw	10
   274  0007' 00                 	db	0
   275  0008' 00'                	db	low _I2cSlv_MainTask
   276  0009' 00'                	db	high _I2cSlv_MainTask
   277  000A' 00                 	db	0
   278  000B' 0000               	dw	0
   279  000D' 0005               	dw	5
   280  000F' 00                 	db	0
   281  0010' 00'                	db	low _MdmWifi_MainTask
   282  0011' 00'                	db	high _MdmWifi_MainTask
   283  0012' 00                 	db	0
   284  0013' 0000               	dw	0
   285  0015' 0001               	dw	1
   286  0017' 00                 	db	0
   287  0018' 00'                	db	low _MdmWifiCmd_MainTask
   288  0019' 00'                	db	high _MdmWifiCmd_MainTask
   289  001A' 00                 	db	0
   290  001B' 0000               	dw	0
   291  001D' 000A               	dw	10
   292  001F' 00                 	db	0
   293  0020' 00'                	db	low _MdmWifiHttp_MainTask
   294  0021' 00'                	db	high _MdmWifiHttp_MainTask
   295  0022' 00                 	db	0
   296  0023' 0000               	dw	0
   297  0025' 000A               	dw	10
   298  0027' 00                 	db	0
   299  0028' 00'                	db	low _UsbDevice_MainTask
   300  0029' 00'                	db	high _UsbDevice_MainTask
   301  002A' 00                 	db	0
   302  002B' 0000               	dw	0
   303  002D' 0001               	dw	1
   304  002F' 00                 	db	0
   305  0030' 00'                	db	low _Led_MainTask
   306  0031' 00'                	db	high _Led_MainTask
   307  0032' 00                 	db	0
   308  0033' 0000               	dw	0
   309  0035' 0032               	dw	50
   310  0037' 00                 	db	0
   311  0038' 00'                	db	low _Rtcm_MainTask
   312  0039' 00'                	db	high _Rtcm_MainTask
   313  003A' 00                 	db	0
   314  003B' 0000               	dw	0
   315  003D' 0064               	dw	100
   316  003F' 00                 	db	0
   317  0040' 00'                	db	low _Term_MainTask
   318  0041' 00'                	db	high _Term_MainTask
   319  0042' 00                 	db	0
   320  0043' 0000               	dw	0
   321  0045' 0064               	dw	100
   322  0047' 00                 	db	0
   323                           
   324                           	psect	mediumconst
   325  0000'                    __pmediumconst:
   326                           	opt stack 0
   327  0000' 00                 	db	0
   328  0001'                    _USB_SD_Ptr:
   329                           	opt stack 0
   330  0001' 00'                	db	low _sd000
   331  0002' 00'                	db	high _sd000
   332  0003' 00'                	db	low _sd001
   333  0004' 00'                	db	high _sd001
   334  0005' 00'                	db	low _sd002
   335  0006' 00'                	db	high _sd002
   336  0007'                    __end_of_USB_SD_Ptr:
   337                           	opt stack 0
   338  0007'                    _USB_CD_Ptr:
   339                           	opt stack 0
   340  0007' 00'                	db	low _configDescriptor1
   341  0008' 00'                	db	high _configDescriptor1
   342  0009'                    __end_of_USB_CD_Ptr:
   343                           	opt stack 0
   344  0009'                    _TaskNumber:
   345                           	opt stack 0
   346  0009' 0009               	dw	9
   347  000B'                    __end_of_TaskNumber:
   348                           	opt stack 0
   349  000B'                    _MsgFormat:
   350                           	opt stack 0
   351  000B' 48                 	db	72
   352  000C' 6F                 	db	111
   353  000D' 73                 	db	115
   354  000E' 74                 	db	116
   355  000F' 20                 	db	32
   356  0010' 6D                 	db	109
   357  0011' 65                 	db	101
   358  0012' 73                 	db	115
   359  0013' 73                 	db	115
   360  0014' 61                 	db	97
   361  0015' 67                 	db	103
   362  0016' 65                 	db	101
   363  0017' 20                 	db	32
   364  0018' 66                 	db	102
   365  0019' 6F                 	db	111
   366  001A' 72                 	db	114
   367  001B' 6D                 	db	109
   368  001C' 61                 	db	97
   369  001D' 74                 	db	116
   370  001E' 3A                 	db	58
   371  001F' 20                 	db	32
   372  0020' 0D                 	db	13
   373  0021' 0A                 	db	10
   374  0022' 5B                 	db	91
   375  0023' 6F                 	db	111
   376  0024' 70                 	db	112
   377  0025' 5F                 	db	95
   378  0026' 74                 	db	116
   379  0027' 79                 	db	121
   380  0028' 70                 	db	112
   381  0029' 65                 	db	101
   382  002A' 5D                 	db	93
   383  002B' 3A                 	db	58
   384  002C' 5B                 	db	91
   385  002D' 6F                 	db	111
   386  002E' 70                 	db	112
   387  002F' 5D                 	db	93
   388  0030' 3A                 	db	58
   389  0031' 5B                 	db	91
   390  0032' 6C                 	db	108
   391  0033' 65                 	db	101
   392  0034' 6E                 	db	110
   393  0035' 5D                 	db	93
   394  0036' 3A                 	db	58
   395  0037' 5B                 	db	91
   396  0038' 61                 	db	97
   397  0039' 64                 	db	100
   398  003A' 64                 	db	100
   399  003B' 72                 	db	114
   400  003C' 5D                 	db	93
   401  003D' 3A                 	db	58
   402  003E' 5B                 	db	91
   403  003F' 70                 	db	112
   404  0040' 61                 	db	97
   405  0041' 79                 	db	121
   406  0042' 6C                 	db	108
   407  0043' 6F                 	db	111
   408  0044' 61                 	db	97
   409  0045' 64                 	db	100
   410  0046' 5D                 	db	93
   411  0047' 0D                 	db	13
   412  0048' 0A                 	db	10
   413  0049' 0D                 	db	13
   414  004A' 0A                 	db	10
   415  004B' 5B                 	db	91
   416  004C' 6F                 	db	111
   417  004D' 70                 	db	112
   418  004E' 5F                 	db	95
   419  004F' 74                 	db	116
   420  0050' 79                 	db	121
   421  0051' 70                 	db	112
   422  0052' 65                 	db	101
   423  0053' 5D                 	db	93
   424  0054' 20                 	db	32
   425  0055' 3D                 	db	61
   426  0056' 20                 	db	32
   427  0057' 53                 	db	83
   428  0058' 4F                 	db	79
   429  0059' 2C                 	db	44
   430  005A' 53                 	db	83
   431  005B' 42                 	db	66
   432  005C' 0D                 	db	13
   433  005D' 0A                 	db	10
   434  005E' 5B                 	db	91
   435  005F' 6F                 	db	111
   436  0060' 70                 	db	112
   437  0061' 5D                 	db	93
   438  0062' 20                 	db	32
   439  0063' 3D                 	db	61
   440  0064' 20                 	db	32
   441  0065' 52                 	db	82
   442  0066' 3A                 	db	58
   443  0067' 20                 	db	32
   444  0068' 72                 	db	114
   445  0069' 65                 	db	101
   446  006A' 61                 	db	97
   447  006B' 64                 	db	100
   448  006C' 2C                 	db	44
   449  006D' 57                 	db	87
   450  006E' 3A                 	db	58
   451  006F' 20                 	db	32
   452  0070' 77                 	db	119
   453  0071' 72                 	db	114
   454  0072' 69                 	db	105
   455  0073' 74                 	db	116
   456  0074' 65                 	db	101
   457  0075' 0D                 	db	13
   458  0076' 0A                 	db	10
   459  0077' 5B                 	db	91
   460  0078' 6C                 	db	108
   461  0079' 65                 	db	101
   462  007A' 6E                 	db	110
   463  007B' 5D                 	db	93
   464  007C' 20                 	db	32
   465  007D' 3D                 	db	61
   466  007E' 20                 	db	32
   467  007F' 32                 	db	50
   468  0080' 20                 	db	32
   469  0081' 62                 	db	98
   470  0082' 79                 	db	121
   471  0083' 74                 	db	116
   472  0084' 65                 	db	101
   473  0085' 20                 	db	32
   474  0086' 41                 	db	65
   475  0087' 53                 	db	83
   476  0088' 43                 	db	67
   477  0089' 49                 	db	73
   478  008A' 49                 	db	73
   479  008B' 0D                 	db	13
   480  008C' 0A                 	db	10
   481  008D' 5B                 	db	91
   482  008E' 61                 	db	97
   483  008F' 64                 	db	100
   484  0090' 64                 	db	100
   485  0091' 72                 	db	114
   486  0092' 5D                 	db	93
   487  0093' 20                 	db	32
   488  0094' 3D                 	db	61
   489  0095' 20                 	db	32
   490  0096' 32                 	db	50
   491  0097' 20                 	db	32
   492  0098' 62                 	db	98
   493  0099' 79                 	db	121
   494  009A' 74                 	db	116
   495  009B' 65                 	db	101
   496  009C' 20                 	db	32
   497  009D' 41                 	db	65
   498  009E' 53                 	db	83
   499  009F' 43                 	db	67
   500  00A0' 49                 	db	73
   501  00A1' 49                 	db	73
   502  00A2' 0D                 	db	13
   503  00A3' 0A                 	db	10
   504  00A4' 5B                 	db	91
   505  00A5' 70                 	db	112
   506  00A6' 61                 	db	97
   507  00A7' 79                 	db	121
   508  00A8' 6C                 	db	108
   509  00A9' 6F                 	db	111
   510  00AA' 61                 	db	97
   511  00AB' 64                 	db	100
   512  00AC' 5D                 	db	93
   513  00AD' 20                 	db	32
   514  00AE' 3D                 	db	61
   515  00AF' 20                 	db	32
   516  00B0' 6D                 	db	109
   517  00B1' 61                 	db	97
   518  00B2' 78                 	db	120
   519  00B3' 20                 	db	32
   520  00B4' 32                 	db	50
   521  00B5' 30                 	db	48
   522  00B6' 20                 	db	32
   523  00B7' 62                 	db	98
   524  00B8' 79                 	db	121
   525  00B9' 74                 	db	116
   526  00BA' 65                 	db	101
   527  00BB' 20                 	db	32
   528  00BC' 41                 	db	65
   529  00BD' 53                 	db	83
   530  00BE' 43                 	db	67
   531  00BF' 49                 	db	73
   532  00C0' 49                 	db	73
   533  00C1' 0D                 	db	13
   534  00C2' 0A                 	db	10
   535  00C3' 0D                 	db	13
   536  00C4' 0A                 	db	10
   537  00C5' 54                 	db	84
   538  00C6' 65                 	db	101
   539  00C7' 72                 	db	114
   540  00C8' 6D                 	db	109
   541  00C9' 69                 	db	105
   542  00CA' 6E                 	db	110
   543  00CB' 61                 	db	97
   544  00CC' 6C                 	db	108
   545  00CD' 20                 	db	32
   546  00CE' 4D                 	db	77
   547  00CF' 6F                 	db	111
   548  00D0' 64                 	db	100
   549  00D1' 65                 	db	101
   550  00D2' 3A                 	db	58
   551  00D3' 20                 	db	32
   552  00D4' 43                 	db	67
   553  00D5' 4F                 	db	79
   554  00D6' 4D                 	db	77
   555  00D7' 4D                 	db	77
   556  00D8' 41                 	db	65
   557  00D9' 4E                 	db	78
   558  00DA' 44                 	db	68
   559  00DB' 20                 	db	32
   560  00DC' 4D                 	db	77
   561  00DD' 4F                 	db	79
   562  00DE' 44                 	db	68
   563  00DF' 45                 	db	69
   564  00E0' 0D                 	db	13
   565  00E1' 0A                 	db	10
   566  00E2' 4D                 	db	77
   567  00E3' 6F                 	db	111
   568  00E4' 64                 	db	100
   569  00E5' 65                 	db	101
   570  00E6' 6D                 	db	109
   571  00E7' 20                 	db	32
   572  00E8' 54                 	db	84
   573  00E9' 79                 	db	121
   574  00EA' 70                 	db	112
   575  00EB' 65                 	db	101
   576  00EC' 3A                 	db	58
   577  00ED' 20                 	db	32
   578  00EE' 57                 	db	87
   579  00EF' 69                 	db	105
   580  00F0' 46                 	db	70
   581  00F1' 69                 	db	105
   582  00F2' 0D                 	db	13
   583  00F3' 0A                 	db	10
   584  00F4' 0D                 	db	13
   585  00F5' 0A                 	db	10
   586  00F6' 00                 	db	0
   587  00F7'                    __end_of_MsgFormat:
   588                           	opt stack 0
   589  00F7'                    _Welcome:
   590                           	opt stack 0
   591  00F7' 2A                 	db	42
   592  00F8' 2A                 	db	42
   593  00F9' 2A                 	db	42
   594  00FA' 2A                 	db	42
   595  00FB' 2A                 	db	42
   596  00FC' 2A                 	db	42
   597  00FD' 2A                 	db	42
   598  00FE' 2A                 	db	42
   599  00FF' 2A                 	db	42
   600  0100' 2A                 	db	42
   601  0101' 2A                 	db	42
   602  0102' 2A                 	db	42
   603  0103' 2A                 	db	42
   604  0104' 2A                 	db	42
   605  0105' 2A                 	db	42
   606  0106' 2A                 	db	42
   607  0107' 2A                 	db	42
   608  0108' 2A                 	db	42
   609  0109' 2A                 	db	42
   610  010A' 2A                 	db	42
   611  010B' 2A                 	db	42
   612  010C' 2A                 	db	42
   613  010D' 2A                 	db	42
   614  010E' 2A                 	db	42
   615  010F' 2A                 	db	42
   616  0110' 2A                 	db	42
   617  0111' 2A                 	db	42
   618  0112' 2A                 	db	42
   619  0113' 2A                 	db	42
   620  0114' 2A                 	db	42
   621  0115' 2A                 	db	42
   622  0116' 2A                 	db	42
   623  0117' 2A                 	db	42
   624  0118' 2A                 	db	42
   625  0119' 2A                 	db	42
   626  011A' 2A                 	db	42
   627  011B' 2A                 	db	42
   628  011C' 2A                 	db	42
   629  011D' 2A                 	db	42
   630  011E' 2A                 	db	42
   631  011F' 2A                 	db	42
   632  0120' 2A                 	db	42
   633  0121' 2A                 	db	42
   634  0122' 2A                 	db	42
   635  0123' 2A                 	db	42
   636  0124' 2A                 	db	42
   637  0125' 2A                 	db	42
   638  0126' 2A                 	db	42
   639  0127' 2A                 	db	42
   640  0128' 0D                 	db	13
   641  0129' 0A                 	db	10
   642  012A' 20                 	db	32
   643  012B' 20                 	db	32
   644  012C' 20                 	db	32
   645  012D' 20                 	db	32
   646  012E' 20                 	db	32
   647  012F' 20                 	db	32
   648  0130' 20                 	db	32
   649  0131' 20                 	db	32
   650  0132' 20                 	db	32
   651  0133' 20                 	db	32
   652  0134' 20                 	db	32
   653  0135' 20                 	db	32
   654  0136' 20                 	db	32
   655  0137' 20                 	db	32
   656  0138' 20                 	db	32
   657  0139' 20                 	db	32
   658  013A' 20                 	db	32
   659  013B' 20                 	db	32
   660  013C' 4D                 	db	77
   661  013D' 45                 	db	69
   662  013E' 52                 	db	82
   663  013F' 43                 	db	67
   664  0140' 55                 	db	85
   665  0141' 52                 	db	82
   666  0142' 59                 	db	89
   667  0143' 20                 	db	32
   668  0144' 53                 	db	83
   669  0145' 59                 	db	89
   670  0146' 53                 	db	83
   671  0147' 54                 	db	84
   672  0148' 45                 	db	69
   673  0149' 4D                 	db	77
   674  014A' 0D                 	db	13
   675  014B' 0A                 	db	10
   676  014C' 2A                 	db	42
   677  014D' 2A                 	db	42
   678  014E' 2A                 	db	42
   679  014F' 2A                 	db	42
   680  0150' 2A                 	db	42
   681  0151' 2A                 	db	42
   682  0152' 2A                 	db	42
   683  0153' 2A                 	db	42
   684  0154' 2A                 	db	42
   685  0155' 2A                 	db	42
   686  0156' 2A                 	db	42
   687  0157' 2A                 	db	42
   688  0158' 2A                 	db	42
   689  0159' 2A                 	db	42
   690  015A' 2A                 	db	42
   691  015B' 2A                 	db	42
   692  015C' 2A                 	db	42
   693  015D' 2A                 	db	42
   694  015E' 2A                 	db	42
   695  015F' 2A                 	db	42
   696  0160' 2A                 	db	42
   697  0161' 2A                 	db	42
   698  0162' 2A                 	db	42
   699  0163' 2A                 	db	42
   700  0164' 2A                 	db	42
   701  0165' 2A                 	db	42
   702  0166' 2A                 	db	42
   703  0167' 2A                 	db	42
   704  0168' 2A                 	db	42
   705  0169' 2A                 	db	42
   706  016A' 2A                 	db	42
   707  016B' 2A                 	db	42
   708  016C' 2A                 	db	42
   709  016D' 2A                 	db	42
   710  016E' 2A                 	db	42
   711  016F' 2A                 	db	42
   712  0170' 2A                 	db	42
   713  0171' 2A                 	db	42
   714  0172' 2A                 	db	42
   715  0173' 2A                 	db	42
   716  0174' 2A                 	db	42
   717  0175' 2A                 	db	42
   718  0176' 2A                 	db	42
   719  0177' 2A                 	db	42
   720  0178' 2A                 	db	42
   721  0179' 2A                 	db	42
   722  017A' 2A                 	db	42
   723  017B' 2A                 	db	42
   724  017C' 2A                 	db	42
   725  017D' 0D                 	db	13
   726  017E' 0A                 	db	10
   727  017F' 00                 	db	0
   728  0180'                    __end_of_Welcome:
   729                           	opt stack 0
   730  0180'                    _configDescriptor1:
   731                           	opt stack 0
   732  0180' 09                 	db	9
   733  0181' 02                 	db	2
   734  0182' 43                 	db	67
   735  0183' 00                 	db	0
   736  0184' 02                 	db	2
   737  0185' 01                 	db	1
   738  0186' 00                 	db	0
   739  0187' C0                 	db	192
   740  0188' 32                 	db	50
   741  0189' 09                 	db	9
   742  018A' 04                 	db	4
   743  018B' 00                 	db	0
   744  018C' 00                 	db	0
   745  018D' 01                 	db	1
   746  018E' 02                 	db	2
   747  018F' 02                 	db	2
   748  0190' 01                 	db	1
   749  0191' 00                 	db	0
   750  0192' 05                 	db	5
   751  0193' 24                 	db	36
   752  0194' 00                 	db	0
   753  0195' 10                 	db	16
   754  0196' 01                 	db	1
   755  0197' 04                 	db	4
   756  0198' 24                 	db	36
   757  0199' 02                 	db	2
   758  019A' 02                 	db	2
   759  019B' 05                 	db	5
   760  019C' 24                 	db	36
   761  019D' 06                 	db	6
   762  019E' 00                 	db	0
   763  019F' 01                 	db	1
   764  01A0' 05                 	db	5
   765  01A1' 24                 	db	36
   766  01A2' 01                 	db	1
   767  01A3' 00                 	db	0
   768  01A4' 01                 	db	1
   769  01A5' 07                 	db	7
   770  01A6' 05                 	db	5
   771  01A7' 81                 	db	129
   772  01A8' 03                 	db	3
   773  01A9' 08                 	db	8
   774  01AA' 00                 	db	0
   775  01AB' 02                 	db	2
   776  01AC' 09                 	db	9
   777  01AD' 04                 	db	4
   778  01AE' 01                 	db	1
   779  01AF' 00                 	db	0
   780  01B0' 02                 	db	2
   781  01B1' 0A                 	db	10
   782  01B2' 00                 	db	0
   783  01B3' 00                 	db	0
   784  01B4' 00                 	db	0
   785  01B5' 07                 	db	7
   786  01B6' 05                 	db	5
   787  01B7' 02                 	db	2
   788  01B8' 02                 	db	2
   789  01B9' 40                 	db	64
   790  01BA' 00                 	db	0
   791  01BB' 00                 	db	0
   792  01BC' 07                 	db	7
   793  01BD' 05                 	db	5
   794  01BE' 82                 	db	130
   795  01BF' 02                 	db	2
   796  01C0' 40                 	db	64
   797  01C1' 00                 	db	0
   798  01C2' 00                 	db	0
   799  01C3'                    __end_of_configDescriptor1:
   800                           	opt stack 0
   801  01C3'                    _sd002:
   802                           	opt stack 0
   803  01C3' 26                 	db	38
   804  01C4' 03                 	db	3
   805  01C5' 0054               	dw	84
   806  01C7' 0065               	dw	101
   807  01C9' 0072               	dw	114
   808  01CB' 006D               	dw	109
   809  01CD' 0069               	dw	105
   810  01CF' 006E               	dw	110
   811  01D1' 0061               	dw	97
   812  01D3' 006C               	dw	108
   813  01D5' 0020               	dw	32
   814  01D7' 0049               	dw	73
   815  01D9' 006E               	dw	110
   816  01DB' 0074               	dw	116
   817  01DD' 0065               	dw	101
   818  01DF' 0072               	dw	114
   819  01E1' 0066               	dw	102
   820  01E3' 0061               	dw	97
   821  01E5' 0063               	dw	99
   822  01E7' 0065               	dw	101
   823  01E9'                    __end_of_sd002:
   824                           	opt stack 0
   825  01E9'                    _sd001:
   826                           	opt stack 0
   827  01E9' 1E                 	db	30
   828  01EA' 03                 	db	3
   829  01EB' 004D               	dw	77
   830  01ED' 0065               	dw	101
   831  01EF' 0072               	dw	114
   832  01F1' 0063               	dw	99
   833  01F3' 0075               	dw	117
   834  01F5' 0072               	dw	114
   835  01F7' 0079               	dw	121
   836  01F9' 0020               	dw	32
   837  01FB' 0053               	dw	83
   838  01FD' 0079               	dw	121
   839  01FF' 0073               	dw	115
   840  0201' 0074               	dw	116
   841  0203' 0065               	dw	101
   842  0205' 006D               	dw	109
   843  0207'                    __end_of_sd001:
   844                           	opt stack 0
   845  0207'                    _MsgReady:
   846                           	opt stack 0
   847  0207' 0D                 	db	13
   848  0208' 0A                 	db	10
   849  0209' 53                 	db	83
   850  020A' 79                 	db	121
   851  020B' 73                 	db	115
   852  020C' 74                 	db	116
   853  020D' 65                 	db	101
   854  020E' 6D                 	db	109
   855  020F' 20                 	db	32
   856  0210' 52                 	db	82
   857  0211' 65                 	db	101
   858  0212' 61                 	db	97
   859  0213' 64                 	db	100
   860  0214' 79                 	db	121
   861  0215' 2E                 	db	46
   862  0216' 2E                 	db	46
   863  0217' 2E                 	db	46
   864  0218' 20                 	db	32
   865  0219' 0D                 	db	13
   866  021A' 0A                 	db	10
   867  021B' 0D                 	db	13
   868  021C' 0A                 	db	10
   869  021D' 00                 	db	0
   870  021E'                    __end_of_MsgReady:
   871                           	opt stack 0
   872  021E'                    _device_dsc:
   873                           	opt stack 0
   874  021E' 12                 	db	18
   875  021F' 01                 	db	1
   876  0220' 0200               	dw	512
   877  0222' 02                 	db	2
   878  0223' 00                 	db	0
   879  0224' 00                 	db	0
   880  0225' 08                 	db	8
   881  0226' 04D8               	dw	1240
   882  0228' 000A               	dw	10
   883  022A' 0100               	dw	256
   884  022C' 01                 	db	1
   885  022D' 02                 	db	2
   886  022E' 00                 	db	0
   887  022F' 01                 	db	1
   888  0230'                    __end_of_device_dsc:
   889                           	opt stack 0
   890  0230'                    _sd000:
   891                           	opt stack 0
   892  0230' 04                 	db	4
   893  0231' 03                 	db	3
   894  0232' 0409               	dw	1033
   895  0234'                    __end_of_sd000:
   896                           	opt stack 0
   897  0000                     _UEP0bits	set	3878
   898  0000                     _UIEbits	set	3894
   899  0000                     _UADDR	set	3896
   900  0000                     _UIE	set	3894
   901  0000                     _UEIE	set	3895
   902  0000                     _UCFG	set	3897
   903  0000                     _DSCONLbits	set	3916
   904  0000                     _DSGPR1	set	3919
   905  0000                     _DSGPR0	set	3918
   906  0000                     _DSCONHbits	set	3917
   907  0000                     _RTCCAL	set	3902
   908  0000                     _PADCFG1bits	set	3900
   909  0000                     _RTCCFGbits	set	3903
   910  0000                     _UEP1	set	3879
   911  0000                     _UEP0	set	3878
   912  0000                     _T1CONbits	set	4045
   913  0000                     _PORTDbits	set	3971
   914  0000                     _USTAT	set	3940
   915  0000                     _PIR2bits	set	4001
   916  0000                     _UCON	set	3941
   917  0000                     _UIRbits	set	3938
   918  0000                     _UCONbits	set	3941
   919  0000                     _UIR	set	3938
   920  0000                     _UEIR	set	3939
   921  0000                     _PIE2bits	set	4000
   922  0000                     _LATEbits	set	3981
   923  0000                     _TRISEbits	set	3990
   924  0000                     _WDTCONbits	set	4032
   925  0000                     _OSCCONbits	set	4051
   926  0000                     _BAUDCON2	set	3964
   927  0000                     _RCSTA2	set	3996
   928  0000                     _BAUDCON1	set	3966
   929  0000                     _RCSTA1	set	4012
   930  0000                     _TRISCbits	set	3988
   931  0000                     _TXSTA2	set	4008
   932  0000                     _TXSTA1	set	4013
   933  0000                     _RCREG2	set	4010
   934  0000                     _RCREG1	set	4015
   935  0000                     _TXREG2	set	4009
   936  0000                     _TXREG1	set	4014
   937  0000                     _SPBRG2	set	4011
   938  0000                     _SPBRGH2	set	3965
   939  0000                     _SPBRG1	set	4016
   940  0000                     _SPBRGH1	set	3967
   941  0000                     _PR4	set	3959
   942  0000                     _PR2	set	4043
   943  0000                     _PIE1bits	set	3997
   944  0000                     _IPR1bits	set	3999
   945  0000                     _T4CONbits	set	3958
   946  0000                     _T2CONbits	set	4042
   947  0000                     _ALRMVALL	set	3982
   948  0000                     _ALRMVALH	set	3983
   949  0000                     _RTCVALH	set	3993
   950  0000                     _RTCVALL	set	3992
   951  0000                     _ALRMRPTbits	set	3984
   952  0000                     _ALRMCFGbits	set	3985
   953  0000                     _PIE3bits	set	4003
   954  0000                     _IPR3bits	set	4005
   955  0000                     _INTCON2bits	set	4081
   956  0000                     _TRISBbits	set	3987
   957  0000                     _OSCTUNEbits	set	3995
   958  0000                     _SSP2CON1	set	3954
   959  0000                     _TRISDbits	set	3989
   960  0000                     _SSP2BUF	set	3957
   961  0000                     _SSP2CON2bits	set	3953
   962  0000                     _SSP2STAT	set	3955
   963  0000                     _SSP2CON2	set	3953
   964  0000                     _SSP2ADD	set	3956
   965  0000                     _PIR1bits	set	3998
   966  0000                     _PIR3bits	set	4004
   967  0000                     _INTCON3bits	set	4080
   968  0000                     _INTCONbits	set	4082
   969  0000                     _RCONbits	set	4048
   970  0234'                    STR_62:
   971  0234' 42                 	db	66	;'B'
   972  0235' 75                 	db	117	;'u'
   973  0236' 69                 	db	105	;'i'
   974  0237' 6C                 	db	108	;'l'
   975  0238' 64                 	db	100	;'d'
   976  0239' 20                 	db	32
   977  023A' 44                 	db	68	;'D'
   978  023B' 61                 	db	97	;'a'
   979  023C' 74                 	db	116	;'t'
   980  023D' 65                 	db	101	;'e'
   981  023E' 20                 	db	32
   982  023F' 28                 	db	40
   983  0240' 64                 	db	100	;'d'
   984  0241' 2D                 	db	45
   985  0242' 6D                 	db	109	;'m'
   986  0243' 2D                 	db	45
   987  0244' 79                 	db	121	;'y'
   988  0245' 29                 	db	41
   989  0246' 3A                 	db	58	;':'
   990  0247' 20                 	db	32
   991  0248' 00                 	db	0
   992  0249'                    STR_58:
   993  0249' 46                 	db	70	;'F'
   994  024A' 72                 	db	114	;'r'
   995  024B' 61                 	db	97	;'a'
   996  024C' 6D                 	db	109	;'m'
   997  024D' 65                 	db	101	;'e'
   998  024E' 77                 	db	119	;'w'
   999  024F' 6F                 	db	111	;'o'
  1000  0250' 72                 	db	114	;'r'
  1001  0251' 6B                 	db	107	;'k'
  1002  0252' 20                 	db	32
  1003  0253' 56                 	db	86	;'V'
  1004  0254' 65                 	db	101	;'e'
  1005  0255' 72                 	db	114	;'r'
  1006  0256' 73                 	db	115	;'s'
  1007  0257' 69                 	db	105	;'i'
  1008  0258' 6F                 	db	111	;'o'
  1009  0259' 6E                 	db	110	;'n'
  1010  025A' 3A                 	db	58	;':'
  1011  025B' 20                 	db	32
  1012  025C' 00                 	db	0
  1013  025D' 41                 	db	65	;'A'
  1014  025E' 54                 	db	84	;'T'
  1015  025F' 2B                 	db	43
  1016  0260' 43                 	db	67	;'C'
  1017  0261' 49                 	db	73	;'I'
  1018  0262' 50                 	db	80	;'P'
  1019  0263' 53                 	db	83	;'S'
  1020  0264' 45                 	db	69	;'E'
  1021  0265' 52                 	db	82	;'R'
  1022  0266' 56                 	db	86	;'V'
  1023  0267' 45                 	db	69	;'E'
  1024  0268' 52                 	db	82	;'R'
  1025  0269' 3D                 	db	61	;'='
  1026  026A' 00                 	db	0
  1027  026B' 41                 	db	65	;'A'
  1028  026C' 54                 	db	84	;'T'
  1029  026D' 2B                 	db	43
  1030  026E' 43                 	db	67	;'C'
  1031  026F' 49                 	db	73	;'I'
  1032  0270' 50                 	db	80	;'P'
  1033  0271' 43                 	db	67	;'C'
  1034  0272' 4C                 	db	76	;'L'
  1035  0273' 4F                 	db	79	;'O'
  1036  0274' 53                 	db	83	;'S'
  1037  0275' 45                 	db	69	;'E'
  1038  0276' 3D                 	db	61	;'='
  1039  0277' 00                 	db	0
  1040  0278'                    STR_3:
  1041  0278' 41                 	db	65	;'A'
  1042  0279' 54                 	db	84	;'T'
  1043  027A' 2B                 	db	43
  1044  027B' 43                 	db	67	;'C'
  1045  027C' 49                 	db	73	;'I'
  1046  027D' 50                 	db	80	;'P'
  1047  027E' 53                 	db	83	;'S'
  1048  027F' 54                 	db	84	;'T'
  1049  0280' 41                 	db	65	;'A'
  1050  0281' 52                 	db	82	;'R'
  1051  0282' 54                 	db	84	;'T'
  1052  0283' 3D                 	db	61	;'='
  1053  0284' 00                 	db	0
  1054  0285'                    STR_15:
  1055  0285' 41                 	db	65	;'A'
  1056  0286' 54                 	db	84	;'T'
  1057  0287' 2B                 	db	43
  1058  0288' 43                 	db	67	;'C'
  1059  0289' 49                 	db	73	;'I'
  1060  028A' 50                 	db	80	;'P'
  1061  028B' 53                 	db	83	;'S'
  1062  028C' 45                 	db	69	;'E'
  1063  028D' 4E                 	db	78	;'N'
  1064  028E' 44                 	db	68	;'D'
  1065  028F' 3D                 	db	61	;'='
  1066  0290' 00                 	db	0
  1067  0291' 41                 	db	65	;'A'
  1068  0292' 54                 	db	84	;'T'
  1069  0293' 2B                 	db	43
  1070  0294' 43                 	db	67	;'C'
  1071  0295' 49                 	db	73	;'I'
  1072  0296' 50                 	db	80	;'P'
  1073  0297' 4D                 	db	77	;'M'
  1074  0298' 4F                 	db	79	;'O'
  1075  0299' 44                 	db	68	;'D'
  1076  029A' 45                 	db	69	;'E'
  1077  029B' 3D                 	db	61	;'='
  1078  029C' 00                 	db	0
  1079  029D' 41                 	db	65	;'A'
  1080  029E' 54                 	db	84	;'T'
  1081  029F' 2B                 	db	43
  1082  02A0' 43                 	db	67	;'C'
  1083  02A1' 49                 	db	73	;'I'
  1084  02A2' 50                 	db	80	;'P'
  1085  02A3' 43                 	db	67	;'C'
  1086  02A4' 4C                 	db	76	;'L'
  1087  02A5' 4F                 	db	79	;'O'
  1088  02A6' 53                 	db	83	;'S'
  1089  02A7' 45                 	db	69	;'E'
  1090  02A8' 00                 	db	0
  1091  02A9'                    STR_31:
  1092  02A9' 41                 	db	65	;'A'
  1093  02AA' 54                 	db	84	;'T'
  1094  02AB' 2B                 	db	43
  1095  02AC' 43                 	db	67	;'C'
  1096  02AD' 57                 	db	87	;'W'
  1097  02AE' 51                 	db	81	;'Q'
  1098  02AF' 41                 	db	65	;'A'
  1099  02B0' 50                 	db	80	;'P'
  1100  02B1' 0D                 	db	13
  1101  02B2' 0A                 	db	10
  1102  02B3' 00                 	db	0
  1103  02B4' 41                 	db	65	;'A'
  1104  02B5' 54                 	db	84	;'T'
  1105  02B6' 2B                 	db	43
  1106  02B7' 43                 	db	67	;'C'
  1107  02B8' 57                 	db	87	;'W'
  1108  02B9' 4D                 	db	77	;'M'
  1109  02BA' 4F                 	db	79	;'O'
  1110  02BB' 44                 	db	68	;'D'
  1111  02BC' 45                 	db	69	;'E'
  1112  02BD' 3D                 	db	61	;'='
  1113  02BE' 00                 	db	0
  1114  02BF' 41                 	db	65	;'A'
  1115  02C0' 54                 	db	84	;'T'
  1116  02C1' 2B                 	db	43
  1117  02C2' 43                 	db	67	;'C'
  1118  02C3' 49                 	db	73	;'I'
  1119  02C4' 50                 	db	80	;'P'
  1120  02C5' 4D                 	db	77	;'M'
  1121  02C6' 55                 	db	85	;'U'
  1122  02C7' 58                 	db	88	;'X'
  1123  02C8' 3D                 	db	61	;'='
  1124  02C9' 00                 	db	0
  1125  02CA' 41                 	db	65	;'A'
  1126  02CB' 54                 	db	84	;'T'
  1127  02CC' 2B                 	db	43
  1128  02CD' 43                 	db	67	;'C'
  1129  02CE' 57                 	db	87	;'W'
  1130  02CF' 4A                 	db	74	;'J'
  1131  02D0' 41                 	db	65	;'A'
  1132  02D1' 50                 	db	80	;'P'
  1133  02D2' 3D                 	db	61	;'='
  1134  02D3' 00                 	db	0
  1135  02D4' 41                 	db	65	;'A'
  1136  02D5' 54                 	db	84	;'T'
  1137  02D6' 2B                 	db	43
  1138  02D7' 43                 	db	67	;'C'
  1139  02D8' 49                 	db	73	;'I'
  1140  02D9' 50                 	db	80	;'P'
  1141  02DA' 41                 	db	65	;'A'
  1142  02DB' 50                 	db	80	;'P'
  1143  02DC' 3D                 	db	61	;'='
  1144  02DD' 00                 	db	0
  1145  02DE' 41                 	db	65	;'A'
  1146  02DF' 54                 	db	84	;'T'
  1147  02E0' 2B                 	db	43
  1148  02E1' 43                 	db	67	;'C'
  1149  02E2' 57                 	db	87	;'W'
  1150  02E3' 53                 	db	83	;'S'
  1151  02E4' 41                 	db	65	;'A'
  1152  02E5' 50                 	db	80	;'P'
  1153  02E6' 3D                 	db	61	;'='
  1154  02E7' 00                 	db	0
  1155  02E8' 41                 	db	65	;'A'
  1156  02E9' 54                 	db	84	;'T'
  1157  02EA' 2B                 	db	43
  1158  02EB' 52                 	db	82	;'R'
  1159  02EC' 53                 	db	83	;'S'
  1160  02ED' 54                 	db	84	;'T'
  1161  02EE' 0D                 	db	13
  1162  02EF' 0A                 	db	10
  1163  02F0' 00                 	db	0
  1164  02F1'                    STR_14:
  1165  02F1' 43                 	db	67	;'C'
  1166  02F2' 4F                 	db	79	;'O'
  1167  02F3' 4E                 	db	78	;'N'
  1168  02F4' 4E                 	db	78	;'N'
  1169  02F5' 45                 	db	69	;'E'
  1170  02F6' 43                 	db	67	;'C'
  1171  02F7' 54                 	db	84	;'T'
  1172  02F8' 00                 	db	0
  1173  02F9'                    STR_1:
  1174  02F9' 45                 	db	69	;'E'
  1175  02FA' 52                 	db	82	;'R'
  1176  02FB' 52                 	db	82	;'R'
  1177  02FC' 4F                 	db	79	;'O'
  1178  02FD' 52                 	db	82	;'R'
  1179  02FE' 00                 	db	0
  1180  02FF'                    STR_2:
  1181  02FF' 2B                 	db	43
  1182  0300' 49                 	db	73	;'I'
  1183  0301' 50                 	db	80	;'P'
  1184  0302' 44                 	db	68	;'D'
  1185  0303' 00                 	db	0
  1186  0304'                    STR_28:
  1187  0304' 22                 	db	34
  1188  0305' 2C                 	db	44
  1189  0306' 22                 	db	34
  1190  0307' 00                 	db	0
  1191  0308'                    STR_7:
  1192  0308' 54                 	db	84	;'T'
  1193  0309' 43                 	db	67	;'C'
  1194  030A' 50                 	db	80	;'P'
  1195  030B' 00                 	db	0
  1196  030C'                    STR_6:
  1197  030C' 55                 	db	85	;'U'
  1198  030D' 44                 	db	68	;'D'
  1199  030E' 50                 	db	80	;'P'
  1200  030F' 00                 	db	0
  1201  0310'                    STR_46:
  1202  0310' 22                 	db	34
  1203  0311' 2C                 	db	44
  1204  0312' 00                 	db	0
  1205  0313'                    STR_63:
  1206  0313' 2D                 	db	45
  1207  0314' 00                 	db	0
  1208  0315'                    STR_59:
  1209  0315' 2E                 	db	46
  1210  0316' 00                 	db	0
  1211  0317'                    STR_33:
  1212  0317' 30                 	db	48	;'0'
  1213  0318' 00                 	db	0
  1214  0319'                    STR_22:
  1215  0319' 31                 	db	49	;'1'
  1216  031A' 00                 	db	0
  1217  031B' 32                 	db	50	;'2'
  1218  031C' 00                 	db	0
  1219  031D' 33                 	db	51	;'3'
  1220  031E' 00                 	db	0
  1221  031F'                    STR_18:
  1222  031F' 3E                 	db	62	;'>'
  1223  0320' 00                 	db	0
  1224  0000                     
  1225                           ; #config settings
  1226  0321' 00                 	db	0	; dummy byte at the end
  1227  0000                     
  1228                           	psect	cinit
  1229  0000'                    __pcinit:
  1230                           	opt stack 0
  1231  0000'                    start_initialization:
  1232                           	opt stack 0
  1233  0000'                    __initialization:
  1234                           	opt stack 0
  1235                           
  1236                           ; Initialize objects allocated to BANK3 (22 bytes)
  1237                           ; load TBLPTR registers with __pidataBANK3
  1238  0000' 0E00'              	movlw	low __pidataBANK3
  1239  0002' 6EF6               	movwf	tblptrl,c
  1240  0004' 0E00'              	movlw	high __pidataBANK3
  1241  0006' 6EF7               	movwf	tblptrh,c
  1242  0008' 0E00'              	movlw	low (__pidataBANK3 shr (0+16))
  1243  000A' 6EF8               	movwf	tblptru,c
  1244  000C' EE00' F000'        	lfsr	0,__pdataBANK3
  1245  0010' EE10 F016          	lfsr	1,22
  1246  0014'                    copy_data0:
  1247  0014' 0009               	tblrd		*+
  1248  0016' CFF5 FFEE          	movff	tablat,postinc0
  1249  001A' 50E5               	movf	postdec1,w,c
  1250  001C' 50E1               	movf	fsr1l,w,c
  1251  001E' E1FA               	bnz	copy_data0
  1252                           
  1253                           ; Initialize objects allocated to BANK2 (1 bytes)
  1254                           ; load TBLPTR registers with __pidataBANK2
  1255  0020' 0E00'              	movlw	low __pidataBANK2
  1256  0022' 6EF6               	movwf	tblptrl,c
  1257  0024' 0E00'              	movlw	high __pidataBANK2
  1258  0026' 6EF7               	movwf	tblptrh,c
  1259  0028' 0E00'              	movlw	low (__pidataBANK2 shr (0+16))
  1260  002A' 6EF8               	movwf	tblptru,c
  1261  002C' 0009               	tblrd		*+	;fetch initializer
  1262  002E' CFF5 F000'         	movff	tablat,__pdataBANK2
  1263                           
  1264                           ; Initialize objects allocated to BANK1 (1 bytes)
  1265                           ; load TBLPTR registers with __pidataBANK1
  1266  0032' 0E00'              	movlw	low __pidataBANK1
  1267  0034' 6EF6               	movwf	tblptrl,c
  1268  0036' 0E00'              	movlw	high __pidataBANK1
  1269  0038' 6EF7               	movwf	tblptrh,c
  1270  003A' 0E00'              	movlw	low (__pidataBANK1 shr (0+16))
  1271  003C' 6EF8               	movwf	tblptru,c
  1272  003E' 0009               	tblrd		*+	;fetch initializer
  1273  0040' CFF5 F000'         	movff	tablat,__pdataBANK1
  1274                           
  1275                           ; Initialize objects allocated to BANK4 (72 bytes)
  1276                           ; load TBLPTR registers with __pidataBANK4
  1277  0044' 0E00'              	movlw	low __pidataBANK4
  1278  0046' 6EF6               	movwf	tblptrl,c
  1279  0048' 0E00'              	movlw	high __pidataBANK4
  1280  004A' 6EF7               	movwf	tblptrh,c
  1281  004C' 0E00'              	movlw	low (__pidataBANK4 shr (0+16))
  1282  004E' 6EF8               	movwf	tblptru,c
  1283  0050' EE00' F000'        	lfsr	0,__pdataBANK4
  1284  0054' EE10 F048          	lfsr	1,72
  1285  0058'                    copy_data1:
  1286  0058' 0009               	tblrd		*+
  1287  005A' CFF5 FFEE          	movff	tablat,postinc0
  1288  005E' 50E5               	movf	postdec1,w,c
  1289  0060' 50E1               	movf	fsr1l,w,c
  1290  0062' E1FA               	bnz	copy_data1
  1291                           
  1292                           ; Clear objects allocated to BANK12 (250 bytes)
  1293  0064' EE00' F000'        	lfsr	0,__pbssBANK12
  1294  0068' 0EFA               	movlw	250
  1295  006A'                    clear_0:
  1296  006A' 6AEE               	clrf	postinc0,c
  1297  006C' 06E8               	decf	wreg,f,c
  1298  006E' E1FD               	bnz	clear_0
  1299                           
  1300                           ; Clear objects allocated to BANK11 (200 bytes)
  1301  0070' EE00' F000'        	lfsr	0,__pbssBANK11
  1302  0074' 0EC8               	movlw	200
  1303  0076'                    clear_1:
  1304  0076' 6AEE               	clrf	postinc0,c
  1305  0078' 06E8               	decf	wreg,f,c
  1306  007A' E1FD               	bnz	clear_1
  1307                           
  1308                           ; Clear objects allocated to BANK10 (200 bytes)
  1309  007C' EE00' F000'        	lfsr	0,__pbssBANK10
  1310  0080' 0EC8               	movlw	200
  1311  0082'                    clear_2:
  1312  0082' 6AEE               	clrf	postinc0,c
  1313  0084' 06E8               	decf	wreg,f,c
  1314  0086' E1FD               	bnz	clear_2
  1315                           
  1316                           ; Clear objects allocated to BANK9 (203 bytes)
  1317  0088' EE00' F000'        	lfsr	0,__pbssBANK9
  1318  008C' 0ECB               	movlw	203
  1319  008E'                    clear_3:
  1320  008E' 6AEE               	clrf	postinc0,c
  1321  0090' 06E8               	decf	wreg,f,c
  1322  0092' E1FD               	bnz	clear_3
  1323                           
  1324                           ; Clear objects allocated to BANK8 (200 bytes)
  1325  0094' EE00' F000'        	lfsr	0,__pbssBANK8
  1326  0098' 0EC8               	movlw	200
  1327  009A'                    clear_4:
  1328  009A' 6AEE               	clrf	postinc0,c
  1329  009C' 06E8               	decf	wreg,f,c
  1330  009E' E1FD               	bnz	clear_4
  1331                           
  1332                           ; Clear objects allocated to BANK7 (203 bytes)
  1333  00A0' EE00' F000'        	lfsr	0,__pbssBANK7
  1334  00A4' 0ECB               	movlw	203
  1335  00A6'                    clear_5:
  1336  00A6' 6AEE               	clrf	postinc0,c
  1337  00A8' 06E8               	decf	wreg,f,c
  1338  00AA' E1FD               	bnz	clear_5
  1339                           
  1340                           ; Clear objects allocated to BANK6 (244 bytes)
  1341  00AC' EE00' F000'        	lfsr	0,__pbssBANK6
  1342  00B0' 0EF4               	movlw	244
  1343  00B2'                    clear_6:
  1344  00B2' 6AEE               	clrf	postinc0,c
  1345  00B4' 06E8               	decf	wreg,f,c
  1346  00B6' E1FD               	bnz	clear_6
  1347                           
  1348                           ; Clear objects allocated to BANK5 (220 bytes)
  1349  00B8' EE00' F000'        	lfsr	0,__pbssBANK5
  1350  00BC' 0EDC               	movlw	220
  1351  00BE'                    clear_7:
  1352  00BE' 6AEE               	clrf	postinc0,c
  1353  00C0' 06E8               	decf	wreg,f,c
  1354  00C2' E1FD               	bnz	clear_7
  1355                           
  1356                           ; Clear objects allocated to BANK3 (227 bytes)
  1357  00C4' EE00' F000'        	lfsr	0,__pbssBANK3
  1358  00C8' 0EE3               	movlw	227
  1359  00CA'                    clear_8:
  1360  00CA' 6AEE               	clrf	postinc0,c
  1361  00CC' 06E8               	decf	wreg,f,c
  1362  00CE' E1FD               	bnz	clear_8
  1363                           
  1364                           ; Clear objects allocated to BANK2 (54 bytes)
  1365  00D0' EE00' F000'        	lfsr	0,__pbssBANK2
  1366  00D4' 0E36               	movlw	54
  1367  00D6'                    clear_9:
  1368  00D6' 6AEE               	clrf	postinc0,c
  1369  00D8' 06E8               	decf	wreg,f,c
  1370  00DA' E1FD               	bnz	clear_9
  1371                           
  1372                           ; Clear objects allocated to BANK1 (54 bytes)
  1373  00DC' EE00' F000'        	lfsr	0,__pbssBANK1
  1374  00E0' 0E36               	movlw	54
  1375  00E2'                    clear_10:
  1376  00E2' 6AEE               	clrf	postinc0,c
  1377  00E4' 06E8               	decf	wreg,f,c
  1378  00E6' E1FD               	bnz	clear_10
  1379                           
  1380                           ; Clear objects allocated to BANK4 (64 bytes)
  1381  00E8' EE00' F000'        	lfsr	0,__pbssBANK4
  1382  00EC' 0E40               	movlw	64
  1383  00EE'                    clear_11:
  1384  00EE' 6AEE               	clrf	postinc0,c
  1385  00F0' 06E8               	decf	wreg,f,c
  1386  00F2' E1FD               	bnz	clear_11
  1387                           
  1388                           ; Clear objects allocated to COMRAM (31 bytes)
  1389  00F4' EE00' F000'        	lfsr	0,__pbssCOMRAM
  1390  00F8' 0E1F               	movlw	31
  1391  00FA'                    clear_12:
  1392  00FA' 6AEE               	clrf	postinc0,c
  1393  00FC' 06E8               	decf	wreg,f,c
  1394  00FE' E1FD               	bnz	clear_12
  1395  0100'                    end_of_initialization:
  1396                           	opt stack 0
  1397  0100'                    __end_of__initialization:
  1398                           	opt stack 0
  1399  0100' 9000'              	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1400  0102' 9200'              	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1401  0104' 0100               	movlb	0
  1402  0106' EF00' F000'        	goto	_main	;jump to C main() function
  1403                           tblptru	equ	0xFF8
  1404                           tblptrh	equ	0xFF7
  1405                           tblptrl	equ	0xFF6
  1406                           tablat	equ	0xFF5
  1407                           postinc0	equ	0xFEE
  1408                           wreg	equ	0xFE8
  1409                           postdec1	equ	0xFE5
  1410                           fsr1l	equ	0xFE1
  1411                           
  1412                           	psect	bssCOMRAM
  1413  0000'                    __pbssCOMRAM:
  1414                           	opt stack 0
  1415  0000'                    _inPipes:
  1416                           	opt stack 0
  1417  0000'                    	ds	6
  1418  0006'                    _pBDTEntryIn:
  1419                           	opt stack 0
  1420  0006'                    	ds	6
  1421  000C'                    _CDCDataOutHandle:
  1422                           	opt stack 0
  1423  000C'                    	ds	2
  1424  000E'                    _pBDTEntryEP0OutNext:
  1425                           	opt stack 0
  1426  000E'                    	ds	2
  1427  0010'                    _pBDTEntryEP0OutCurrent:
  1428                           	opt stack 0
  1429  0010'                    	ds	2
  1430  0012'                    _cdc_tx_len:
  1431                           	opt stack 0
  1432  0012'                    	ds	1
  1433  0013'                    _cdc_rx_len:
  1434                           	opt stack 0
  1435  0013'                    	ds	1
  1436  0014'                    _USBDeferStatusStagePacket:
  1437                           	opt stack 0
  1438  0014'                    	ds	1
  1439  0015'                    _endpoint_number:
  1440                           	opt stack 0
  1441  0015'                    	ds	1
  1442  0016'                    _controlTransferState:
  1443                           	opt stack 0
  1444  0016'                    	ds	1
  1445  0017'                    _shortPacketStatus:
  1446                           	opt stack 0
  1447  0017'                    	ds	1
  1448  0018'                    _I2cComSts:
  1449                           	opt stack 0
  1450  0018'                    	ds	1
  1451  0019'                    _USTATcopy:
  1452                           	opt stack 0
  1453  0019'                    	ds	1
  1454  001A'                    _USBActiveConfiguration:
  1455                           	opt stack 0
  1456  001A'                    	ds	1
  1457  001B'                    _I2cWriteDataEvt:
  1458                           	opt stack 0
  1459  001B'                    	ds	1
  1460  001C'                    _NewWifiPacket:
  1461                           	opt stack 0
  1462  001C'                    	ds	1
  1463  001D'                    _StartWifiModem:
  1464                           	opt stack 0
  1465  001D'                    	ds	1
  1466  001E'                    _NewWifiUartData:
  1467                           	opt stack 0
  1468  001E'                    	ds	1
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           postinc0	equ	0xFEE
  1474                           wreg	equ	0xFE8
  1475                           postdec1	equ	0xFE5
  1476                           fsr1l	equ	0xFE1
  1477                           
  1478                           	psect	bssBANK1
  1479  0000'                    __pbssBANK1:
  1480                           	opt stack 0
  1481  0000'                    _CDCDataInHandle:
  1482                           	opt stack 0
  1483  0000'                    	ds	2
  1484  0002'                    _MdmWifi_UartRxCounter:
  1485                           	opt stack 0
  1486  0002'                    	ds	2
  1487  0004'                    _Tmr2IsrCallback:
  1488                           	opt stack 0
  1489  0004'                    	ds	2
  1490  0006'                    WifiTerminal@FirstRecFlag:
  1491                           	opt stack 0
  1492  0006'                    	ds	1
  1493  0007'                    _control_signal_bitmap:
  1494                           	opt stack 0
  1495  0007'                    	ds	1
  1496  0008'                    _cdc_mem_type:
  1497                           	opt stack 0
  1498  0008'                    	ds	1
  1499  0009'                    _USBTicksSinceSuspendEnd:
  1500                           	opt stack 0
  1501  0009'                    	ds	1
  1502  000A'                    _USBDeferOUTDataStagePackets:
  1503                           	opt stack 0
  1504  000A'                    	ds	1
  1505  000B'                    _USBDeferINDataStagePackets:
  1506                           	opt stack 0
  1507  000B'                    	ds	1
  1508  000C'                    _USBStatusStageEnabledFlag2:
  1509                           	opt stack 0
  1510  000C'                    	ds	1
  1511  000D'                    _USBStatusStageEnabledFlag1:
  1512                           	opt stack 0
  1513  000D'                    	ds	1
  1514  000E'                    _USBStatusStageTimeoutCounter:
  1515                           	opt stack 0
  1516  000E'                    	ds	1
  1517  000F'                    _BothEP0OutUOWNsSet:
  1518                           	opt stack 0
  1519  000F'                    	ds	1
  1520  0010'                    _USBBusIsSuspended:
  1521                           	opt stack 0
  1522  0010'                    	ds	1
  1523  0011'                    _RemoteWakeup:
  1524                           	opt stack 0
  1525  0011'                    	ds	1
  1526  0012'                    I2cSendMsgSm@I2cComState:
  1527                           	opt stack 0
  1528  0012'                    	ds	1
  1529  0013'                    _I2cBusStatus:
  1530                           	opt stack 0
  1531  0013'                    	ds	1
  1532  0014'                    ReceiveDataSm@WifiReceiveDataState:
  1533                           	opt stack 0
  1534  0014'                    	ds	1
  1535  0015'                    SendDataSm@WifiSendDataState:
  1536                           	opt stack 0
  1537  0015'                    	ds	1
  1538  0016'                    StartConnectionSm@StartConnState:
  1539                           	opt stack 0
  1540  0016'                    	ds	1
  1541  0017'                    _LenLocal:
  1542                           	opt stack 0
  1543  0017'                    	ds	1
  1544  0018'                    _ConnStatus:
  1545                           	opt stack 0
  1546  0018'                    	ds	1
  1547  0019'                    _PortLocal:
  1548                           	opt stack 0
  1549  0019'                    	ds	1
  1550  001A'                    _ProtocolLocal:
  1551                           	opt stack 0
  1552  001A'                    	ds	1
  1553  001B'                    _IdLocal:
  1554                           	opt stack 0
  1555  001B'                    	ds	1
  1556  001C'                    _ModeLocal:
  1557                           	opt stack 0
  1558  001C'                    	ds	1
  1559  001D'                    MdmWifiGetUartData@Counter:
  1560                           	opt stack 0
  1561  001D'                    	ds	1
  1562  001E'                    MdmWifiGetUartData@WifiUartGetDataState:
  1563                           	opt stack 0
  1564  001E'                    	ds	1
  1565  001F'                    MdmWifi_StartWifiModemSm@WifiModeSmState:
  1566                           	opt stack 0
  1567  001F'                    	ds	1
  1568  0020'                    _WifiMdmStatus:
  1569                           	opt stack 0
  1570  0020'                    	ds	1
  1571  0021'                    Uart_Uart1RxIsr@UartRxData:
  1572                           	opt stack 0
  1573  0021'                    	ds	1
  1574  0022'                    I2c_ReadData@ReadStatus:
  1575                           	opt stack 0
  1576  0022'                    	ds	1
  1577  0023'                    I2c_ReadData@TentativeCounter:
  1578                           	opt stack 0
  1579  0023'                    	ds	1
  1580  0024'                    I2c_ReadData@DataCounter:
  1581                           	opt stack 0
  1582  0024'                    	ds	1
  1583  0025'                    I2c_ReadData@I2cReadState:
  1584                           	opt stack 0
  1585  0025'                    	ds	1
  1586  0026'                    I2c_WriteData@WriteStatus:
  1587                           	opt stack 0
  1588  0026'                    	ds	1
  1589  0027'                    I2c_WriteData@TentativeCounter:
  1590                           	opt stack 0
  1591  0027'                    	ds	1
  1592  0028'                    I2c_WriteData@I2cNextState:
  1593                           	opt stack 0
  1594  0028'                    	ds	1
  1595  0029'                    I2c_WriteData@I2cWriteState:
  1596                           	opt stack 0
  1597  0029'                    	ds	1
  1598  002A'                    _AlarmEvent:
  1599                           	opt stack 0
  1600  002A'                    	ds	1
  1601  002B'                    _Led3Sts:
  1602                           	opt stack 0
  1603  002B'                    	ds	1
  1604  002C'                    _Led2Sts:
  1605                           	opt stack 0
  1606  002C'                    	ds	1
  1607  002D'                    _Led1Sts:
  1608                           	opt stack 0
  1609  002D'                    	ds	1
  1610  002E'                    I2cDummyTx@DummyBuffer:
  1611                           	opt stack 0
  1612  002E'                    	ds	1
  1613  002F'                    _I2cReadDataEvt:
  1614                           	opt stack 0
  1615  002F'                    	ds	1
  1616  0030'                    _WifiReceiveData:
  1617                           	opt stack 0
  1618  0030'                    	ds	1
  1619  0031'                    _WifiSendData:
  1620                           	opt stack 0
  1621  0031'                    	ds	1
  1622  0032'                    _StartConnection:
  1623                           	opt stack 0
  1624  0032'                    	ds	1
  1625  0033'                    _WifiReceiveNetData:
  1626                           	opt stack 0
  1627  0033'                    	ds	1
  1628  0034'                    _WifiGenericError:
  1629                           	opt stack 0
  1630  0034'                    	ds	1
  1631  0035'                    _NewWifiPacketParser:
  1632                           	opt stack 0
  1633  0035'                    	ds	1
  1634                           tblptru	equ	0xFF8
  1635                           tblptrh	equ	0xFF7
  1636                           tblptrl	equ	0xFF6
  1637                           tablat	equ	0xFF5
  1638                           postinc0	equ	0xFEE
  1639                           wreg	equ	0xFE8
  1640                           postdec1	equ	0xFE5
  1641                           fsr1l	equ	0xFE1
  1642                           
  1643                           	psect	dataBANK1
  1644  0000'                    __pdataBANK1:
  1645                           	opt stack 0
  1646  0000'                    _MainSystemTimebaseFlag:
  1647                           	opt stack 0
  1648  0000'                    	ds	1
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postdec1	equ	0xFE5
  1656                           fsr1l	equ	0xFE1
  1657                           
  1658                           	psect	bssBANK2
  1659  0000'                    __pbssBANK2:
  1660                           	opt stack 0
  1661  0000'                    _outPipes:
  1662                           	opt stack 0
  1663  0000'                    	ds	8
  1664  0008'                    _pBDTEntryOut:
  1665                           	opt stack 0
  1666  0008'                    	ds	6
  1667  000E'                    _pCDCDst:
  1668                           	opt stack 0
  1669  000E'                    	ds	3
  1670  0011'                    _pCDCSrc:
  1671                           	opt stack 0
  1672  0011'                    	ds	3
  1673  0014'                    _ep_data_out:
  1674                           	opt stack 0
  1675  0014'                    	ds	3
  1676  0017'                    _ep_data_in:
  1677                           	opt stack 0
  1678  0017'                    	ds	3
  1679  001A'                    _pDst:
  1680                           	opt stack 0
  1681  001A'                    	ds	2
  1682  001C'                    UpdateSchFlag@InterruptCounter:
  1683                           	opt stack 0
  1684  001C'                    	ds	2
  1685  001E'                    MdmWifi_StartWifiModemSm@Counter:
  1686                           	opt stack 0
  1687  001E'                    	ds	2
  1688  0020'                    _ExtInt1IsrCallback:
  1689                           	opt stack 0
  1690  0020'                    	ds	2
  1691  0022'                    _ExtInt0IsrCallback:
  1692                           	opt stack 0
  1693  0022'                    	ds	2
  1694  0024'                    _RtccIsrCallback:
  1695                           	opt stack 0
  1696  0024'                    	ds	2
  1697  0026'                    _Tmr4IsrCallback:
  1698                           	opt stack 0
  1699  0026'                    	ds	2
  1700  0028'                    Term_MainSm@TermMainSmState:
  1701                           	opt stack 0
  1702  0028'                    	ds	1
  1703  0029'                    Terminal@FormatOption:
  1704                           	opt stack 0
  1705  0029'                    	ds	1
  1706  002A'                    Terminal@SlaveAddr:
  1707                           	opt stack 0
  1708  002A'                    	ds	1
  1709  002B'                    Terminal@PackageLen:
  1710                           	opt stack 0
  1711  002B'                    	ds	1
  1712  002C'                    Terminal@TermState:
  1713                           	opt stack 0
  1714  002C'                    	ds	1
  1715  002D'                    _cdc_trf_state:
  1716                           	opt stack 0
  1717  002D'                    	ds	1
  1718  002E'                    _USBDeviceState:
  1719                           	opt stack 0
  1720  002E'                    	ds	1
  1721  002F'                    _SystemState:
  1722                           	opt stack 0
  1723  002F'                    	ds	1
  1724  0030'                    Terminal@Addr:
  1725                           	opt stack 0
  1726  0030'                    	ds	4
  1727  0034'                    _USBAlternateInterface:
  1728                           	opt stack 0
  1729  0034'                    	ds	2
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           postinc0	equ	0xFEE
  1735                           wreg	equ	0xFE8
  1736                           postdec1	equ	0xFE5
  1737                           fsr1l	equ	0xFE1
  1738                           
  1739                           	psect	dataBANK2
  1740  0000'                    __pdataBANK2:
  1741                           	opt stack 0
  1742  0000'                    Terminal@EchoOption:
  1743                           	opt stack 0
  1744  0000'                    	ds	1
  1745                           tblptru	equ	0xFF8
  1746                           tblptrh	equ	0xFF7
  1747                           tblptrl	equ	0xFF6
  1748                           tablat	equ	0xFF5
  1749                           postinc0	equ	0xFEE
  1750                           wreg	equ	0xFE8
  1751                           postdec1	equ	0xFE5
  1752                           fsr1l	equ	0xFE1
  1753                           
  1754                           	psect	bssBANK3
  1755  0000'                    __pbssBANK3:
  1756                           	opt stack 0
  1757  0000'                    _cdc_notice:
  1758                           	opt stack 0
  1759  0000'                    	ds	10
  1760  000A'                    _Rtcm_SystemDate:
  1761                           	opt stack 0
  1762  000A'                    	ds	8
  1763  0012'                    _Rtcm_RtccAlarm:
  1764                           	opt stack 0
  1765  0012'                    	ds	6
  1766  0018'                    _BaudRateGen:
  1767                           	opt stack 0
  1768  0018'                    	ds	4
  1769  001C'                    _USB1msTickCount:
  1770                           	opt stack 0
  1771  001C'                    	ds	4
  1772  0020'                    _OsTmr_OsTickCounter:
  1773                           	opt stack 0
  1774  0020'                    	ds	4
  1775  0024'                    _RxLen:
  1776                           	opt stack 0
  1777  0024'                    	ds	2
  1778  0026'                    Terminal@TermRxBuffer:
  1779                           	opt stack 0
  1780  0026'                    	ds	50
  1781  0058'                    _AddressLocal:
  1782                           	opt stack 0
  1783  0058'                    	ds	25
  1784  0071'                    _UartConfig:
  1785                           	opt stack 0
  1786  0071'                    	ds	21
  1787  0086'                    _I2cConfig:
  1788                           	opt stack 0
  1789  0086'                    	ds	10
  1790  0090'                    _Led3Blink:
  1791                           	opt stack 0
  1792  0090'                    	ds	9
  1793  0099'                    _Led2Blink:
  1794                           	opt stack 0
  1795  0099'                    	ds	9
  1796  00A2'                    _Led1Blink:
  1797                           	opt stack 0
  1798  00A2'                    	ds	9
  1799  00AB'                    _dummy_encapsulated_cmd_response:
  1800                           	opt stack 0
  1801  00AB'                    	ds	8
  1802  00B3'                    _line_coding:
  1803                           	opt stack 0
  1804  00B3'                    	ds	7
  1805  00BA'                    _Led3Pulse:
  1806                           	opt stack 0
  1807  00BA'                    	ds	6
  1808  00C0'                    _Led2Pulse:
  1809                           	opt stack 0
  1810  00C0'                    	ds	6
  1811  00C6'                    _Led1Pulse:
  1812                           	opt stack 0
  1813  00C6'                    	ds	6
  1814  00CC'                    _I2cRxPacket:
  1815                           	opt stack 0
  1816  00CC'                    	ds	6
  1817  00D2'                    _I2cTxPacket:
  1818                           	opt stack 0
  1819  00D2'                    	ds	5
  1820  00D7'                    Terminal@Len:
  1821                           	opt stack 0
  1822  00D7'                    	ds	4
  1823  00DB'                    _AlCfg:
  1824                           	opt stack 0
  1825  00DB'                    	ds	4
  1826  00DF'                    _RtcConfig:
  1827                           	opt stack 0
  1828  00DF'                    	ds	4
  1829                           tblptru	equ	0xFF8
  1830                           tblptrh	equ	0xFF7
  1831                           tblptrl	equ	0xFF6
  1832                           tablat	equ	0xFF5
  1833                           postinc0	equ	0xFEE
  1834                           wreg	equ	0xFE8
  1835                           postdec1	equ	0xFE5
  1836                           fsr1l	equ	0xFE1
  1837                           
  1838                           	psect	dataBANK3
  1839  0000'                    __pdataBANK3:
  1840                           	opt stack 0
  1841  0000'                    Term_MainSm@TermDelay:
  1842                           	opt stack 0
  1843  0000'                    	ds	11
  1844  000B'                    SendDataSm@SwTimer:
  1845                           	opt stack 0
  1846  000B'                    	ds	11
  1847                           tblptru	equ	0xFF8
  1848                           tblptrh	equ	0xFF7
  1849                           tblptrl	equ	0xFF6
  1850                           tablat	equ	0xFF5
  1851                           postinc0	equ	0xFEE
  1852                           wreg	equ	0xFE8
  1853                           postdec1	equ	0xFE5
  1854                           fsr1l	equ	0xFE1
  1855                           
  1856                           	psect	bssBANK4
  1857  0000'                    __pbssBANK4:
  1858                           	opt stack 0
  1859  0000'                    _cdc_data_rx:
  1860                           	opt stack 0
  1861  0000'                    	ds	64
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           postdec1	equ	0xFE5
  1869                           fsr1l	equ	0xFE1
  1870                           
  1871                           	psect	dataBANK4
  1872  0000'                    __pdataBANK4:
  1873                           	opt stack 0
  1874  0000'                    _TaskTable:
  1875                           	opt stack 0
  1876  0000'                    	ds	72
  1877                           tblptru	equ	0xFF8
  1878                           tblptrh	equ	0xFF7
  1879                           tblptrl	equ	0xFF6
  1880                           tablat	equ	0xFF5
  1881                           postinc0	equ	0xFEE
  1882                           wreg	equ	0xFE8
  1883                           postdec1	equ	0xFE5
  1884                           fsr1l	equ	0xFE1
  1885                           
  1886                           	psect	bssBANK5
  1887  0000'                    __pbssBANK5:
  1888                           	opt stack 0
  1889  0000'                    _OsAlarms:
  1890                           	opt stack 0
  1891  0000'                    	ds	220
  1892                           tblptru	equ	0xFF8
  1893                           tblptrh	equ	0xFF7
  1894                           tblptrl	equ	0xFF6
  1895                           tablat	equ	0xFF5
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           postdec1	equ	0xFE5
  1899                           fsr1l	equ	0xFE1
  1900                           
  1901                           	psect	bssBANK6
  1902  0000'                    __pbssBANK6:
  1903                           	opt stack 0
  1904  0000'                    _BufferLocal:
  1905                           	opt stack 0
  1906  0000'                    	ds	100
  1907  0064'                    Terminal@Payload:
  1908                           	opt stack 0
  1909  0064'                    	ds	80
  1910  00B4'                    _cdc_data_tx:
  1911                           	opt stack 0
  1912  00B4'                    	ds	64
  1913                           tblptru	equ	0xFF8
  1914                           tblptrh	equ	0xFF7
  1915                           tblptrl	equ	0xFF6
  1916                           tablat	equ	0xFF5
  1917                           postinc0	equ	0xFEE
  1918                           wreg	equ	0xFE8
  1919                           postdec1	equ	0xFE5
  1920                           fsr1l	equ	0xFE1
  1921                           
  1922                           	psect	bssBANK7
  1923  0000'                    __pbssBANK7:
  1924                           	opt stack 0
  1925  0000'                    _WifiRxPacket:
  1926                           	opt stack 0
  1927  0000'                    	ds	203
  1928                           tblptru	equ	0xFF8
  1929                           tblptrh	equ	0xFF7
  1930                           tblptrl	equ	0xFF6
  1931                           tablat	equ	0xFF5
  1932                           postinc0	equ	0xFEE
  1933                           wreg	equ	0xFE8
  1934                           postdec1	equ	0xFE5
  1935                           fsr1l	equ	0xFE1
  1936                           
  1937                           	psect	bssBANK8
  1938  0000'                    __pbssBANK8:
  1939                           	opt stack 0
  1940  0000'                    WifiTerminal@UartBuffer:
  1941                           	opt stack 0
  1942  0000'                    	ds	200
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           postinc0	equ	0xFEE
  1948                           wreg	equ	0xFE8
  1949                           postdec1	equ	0xFE5
  1950                           fsr1l	equ	0xFE1
  1951                           
  1952                           	psect	bssBANK9
  1953  0000'                    __pbssBANK9:
  1954                           	opt stack 0
  1955  0000'                    _WifiTxPacket:
  1956                           	opt stack 0
  1957  0000'                    	ds	103
  1958  0067'                    _MdmWifi_UartTxBuffer:
  1959                           	opt stack 0
  1960  0067'                    	ds	100
  1961                           tblptru	equ	0xFF8
  1962                           tblptrh	equ	0xFF7
  1963                           tblptrl	equ	0xFF6
  1964                           tablat	equ	0xFF5
  1965                           postinc0	equ	0xFEE
  1966                           wreg	equ	0xFE8
  1967                           postdec1	equ	0xFE5
  1968                           fsr1l	equ	0xFE1
  1969                           
  1970                           	psect	bssBANK10
  1971  0000'                    __pbssBANK10:
  1972                           	opt stack 0
  1973  0000'                    WifiTerminal@UsbBuffer:
  1974                           	opt stack 0
  1975  0000'                    	ds	200
  1976                           tblptru	equ	0xFF8
  1977                           tblptrh	equ	0xFF7
  1978                           tblptrl	equ	0xFF6
  1979                           tablat	equ	0xFF5
  1980                           postinc0	equ	0xFEE
  1981                           wreg	equ	0xFE8
  1982                           postdec1	equ	0xFE5
  1983                           fsr1l	equ	0xFE1
  1984                           
  1985                           	psect	bssBANK11
  1986  0000'                    __pbssBANK11:
  1987                           	opt stack 0
  1988  0000'                    _MdmWifi_UartRxBuffer:
  1989                           	opt stack 0
  1990  0000'                    	ds	200
  1991                           tblptru	equ	0xFF8
  1992                           tblptrh	equ	0xFF7
  1993                           tblptrl	equ	0xFF6
  1994                           tablat	equ	0xFF5
  1995                           postinc0	equ	0xFEE
  1996                           wreg	equ	0xFE8
  1997                           postdec1	equ	0xFE5
  1998                           fsr1l	equ	0xFE1
  1999                           
  2000                           	psect	bssBANK12
  2001  0000'                    __pbssBANK12:
  2002                           	opt stack 0
  2003  0000'                    _RxBuffer:
  2004                           	opt stack 0
  2005  0000'                    	ds	250
  2006                           tblptru	equ	0xFF8
  2007                           tblptrh	equ	0xFF7
  2008                           tblptrl	equ	0xFF6
  2009                           tablat	equ	0xFF5
  2010                           postinc0	equ	0xFEE
  2011                           wreg	equ	0xFE8
  2012                           postdec1	equ	0xFE5
  2013                           fsr1l	equ	0xFE1
  2014                           
  2015                           	psect	cstackBANK2
  2016  0000'                    __pcstackBANK2:
  2017                           	opt stack 0
  2018  0000'                    Terminal@UsbRxBuffer:
  2019                           	opt stack 0
  2020                           
  2021                           ; 200 bytes @ 0x0
  2022  0000'                    	ds	200
  2023                           tblptru	equ	0xFF8
  2024                           tblptrh	equ	0xFF7
  2025                           tblptrl	equ	0xFF6
  2026                           tablat	equ	0xFF5
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           postdec1	equ	0xFE5
  2030                           fsr1l	equ	0xFE1
  2031                           
  2032                           	psect	cstackBANK1
  2033  0000'                    __pcstackBANK1:
  2034                           	opt stack 0
  2035  0000'                    Terminal@UsbTxBuffer:
  2036                           	opt stack 0
  2037                           
  2038                           ; 200 bytes @ 0x0
  2039  0000'                    	ds	200
  2040  00C8'                    ScheduleTasks@ActiveTaskIndex:
  2041                           	opt stack 0
  2042                           
  2043                           ; 1 bytes @ 0xC8
  2044  00C8'                    	ds	1
  2045                           tblptru	equ	0xFF8
  2046                           tblptrh	equ	0xFF7
  2047                           tblptrl	equ	0xFF6
  2048                           tablat	equ	0xFF5
  2049                           postinc0	equ	0xFEE
  2050                           wreg	equ	0xFE8
  2051                           postdec1	equ	0xFE5
  2052                           fsr1l	equ	0xFE1
  2053                           
  2054                           	psect	cstackBANK0
  2055  0000'                    __pcstackBANK0:
  2056                           	opt stack 0
  2057  0000'                    ??_isdigit:
  2058  0000'                    ??_isspace:
  2059  0000'                    ??_isupper:
  2060  0000'                    ??_Rtcc_GetRtccValue:
  2061  0000'                    ??_UartTxBufferStatus:
  2062  0000'                    ??_USBStdGetDscHandler:
  2063  0000'                    ??_USBStdGetStatusHandler:
  2064  0000'                    ?_USBTransferOnePacket:
  2065                           	opt stack 0
  2066  0000'                    ?_strlen:
  2067                           	opt stack 0
  2068  0000'                    ?_strchr:
  2069                           	opt stack 0
  2070  0000'                    ?___wmul:
  2071                           	opt stack 0
  2072  0000'                    ?___awdiv:
  2073                           	opt stack 0
  2074  0000'                    ?___awmod:
  2075                           	opt stack 0
  2076  0000'                    ?___lwdiv:
  2077                           	opt stack 0
  2078  0000'                    ?___lwmod:
  2079                           	opt stack 0
  2080  0000'                    ?_GetOsTickCounter:
  2081                           	opt stack 0
  2082  0000'                    ?___lmul:
  2083                           	opt stack 0
  2084  0000'                    Irq_InitIntController@GlobalInt_HighPInt:
  2085                           	opt stack 0
  2086  0000'                    SetAckStatus@AckSts:
  2087                           	opt stack 0
  2088  0000'                    WriteByte@Byte:
  2089                           	opt stack 0
  2090  0000'                    ReadByte@Byte:
  2091                           	opt stack 0
  2092  0000'                    RtccIrqInit@Priority:
  2093                           	opt stack 0
  2094  0000'                    Rtcc_SetRtcStatus@Status:
  2095                           	opt stack 0
  2096  0000'                    TmrBInit@Prescaler:
  2097                           	opt stack 0
  2098  0000'                    Tmr_TmrBIrqSet@Priority:
  2099                           	opt stack 0
  2100  0000'                    Tmr_StartTmr@TmrNumb:
  2101                           	opt stack 0
  2102  0000'                    UartWriteByte@ByteToWrite:
  2103                           	opt stack 0
  2104  0000'                    USBTransferOnePacket@dir:
  2105                           	opt stack 0
  2106  0000'                    USBConfigureEndpoint@direction:
  2107                           	opt stack 0
  2108  0000'                    USBCtrlTrfTxService@byteToSend:
  2109                           	opt stack 0
  2110  0000'                    USBCtrlTrfRxService@i:
  2111                           	opt stack 0
  2112  0000'                    Led_SetLedStatus@LedSts:
  2113                           	opt stack 0
  2114  0000'                    toupper@c:
  2115                           	opt stack 0
  2116  0000'                    Mcu_StartSystemPll@PllStartupCounter:
  2117                           	opt stack 0
  2118  0000'                    Rtcc_AlarmConfig@AlarmConfig:
  2119                           	opt stack 0
  2120  0000'                    Tmr_RegisterTmr2IsrCallback@IsrCallback:
  2121                           	opt stack 0
  2122  0000'                    GenerateEvt@Event:
  2123                           	opt stack 0
  2124  0000'                    ReceiveEvt@Event:
  2125                           	opt stack 0
  2126  0000'                    StringCopy@SourceStr:
  2127                           	opt stack 0
  2128  0000'                    ClearBuffer@Buffer:
  2129                           	opt stack 0
  2130  0000'                    ___wmul@multiplier:
  2131                           	opt stack 0
  2132  0000'                    ___awdiv@dividend:
  2133                           	opt stack 0
  2134  0000'                    ___awmod@dividend:
  2135                           	opt stack 0
  2136  0000'                    ___lwdiv@dividend:
  2137                           	opt stack 0
  2138  0000'                    ___lwmod@dividend:
  2139                           	opt stack 0
  2140  0000'                    memcpy@d1:
  2141                           	opt stack 0
  2142  0000'                    memset@p1:
  2143                           	opt stack 0
  2144  0000'                    strcat@to:
  2145                           	opt stack 0
  2146  0000'                    strcpy@to:
  2147                           	opt stack 0
  2148  0000'                    strlen@s:
  2149                           	opt stack 0
  2150  0000'                    strchr@ptr:
  2151                           	opt stack 0
  2152  0000'                    ___lmul@multiplier:
  2153                           	opt stack 0
  2154                           
  2155                           ; 4 bytes @ 0x0
  2156  0000'                    	ds	1
  2157  0001'                    ??_USBConfigureEndpoint:
  2158  0001'                    Irq_InitIntController@PerInt_LowPInt:
  2159                           	opt stack 0
  2160  0001'                    Rtcc_GetRtccValue@RtccPtrVal:
  2161                           	opt stack 0
  2162  0001'                    TmrBInit@Postscaler:
  2163                           	opt stack 0
  2164  0001'                    Tmr_TmrBIrqSet@TmrIrqSts:
  2165                           	opt stack 0
  2166  0001'                    UartWriteByte@Module:
  2167                           	opt stack 0
  2168  0001'                    UartTxBufferStatus@Module:
  2169                           	opt stack 0
  2170  0001'                    USBCtrlTrfRxService@byteToRead:
  2171                           	opt stack 0
  2172  0001'                    USBCtrlTrfInHandler@lastDTS:
  2173                           	opt stack 0
  2174  0001'                    Led_SetLedStatus@Led:
  2175                           	opt stack 0
  2176  0001'                    _isdigit$5686:
  2177                           	opt stack 0
  2178  0001'                    _isspace$5954:
  2179                           	opt stack 0
  2180  0001'                    _isupper$5957:
  2181                           	opt stack 0
  2182  0001'                    I2c_WriteData@WritePacket:
  2183                           	opt stack 0
  2184  0001'                    Rtcc_RtcConfig@RtcConfig:
  2185                           	opt stack 0
  2186  0001'                    USBTransferOnePacket@data:
  2187                           	opt stack 0
  2188  0001'                    USBStdGetStatusHandler@p:
  2189                           	opt stack 0
  2190                           
  2191                           ; 2 bytes @ 0x1
  2192  0001'                    	ds	1
  2193  0002'                    ??_strlen:
  2194  0002'                    ??_Rtcc_AlarmConfig:
  2195  0002'                    ??_TmrBInit:
  2196  0002'                    Irq_InitIntController@IntPriorityEn:
  2197                           	opt stack 0
  2198  0002'                    Rtcc_GetRtccValue@RetValue:
  2199                           	opt stack 0
  2200  0002'                    Tmr_TmrBIrqSet@TmrNumb:
  2201                           	opt stack 0
  2202  0002'                    UartTxBufferStatus@TxBufferStatus:
  2203                           	opt stack 0
  2204  0002'                    GenerateEvt@EventStatus:
  2205                           	opt stack 0
  2206  0002'                    isdigit@c:
  2207                           	opt stack 0
  2208  0002'                    isspace@c:
  2209                           	opt stack 0
  2210  0002'                    isupper@c:
  2211                           	opt stack 0
  2212  0002'                    StringCopy@DestStr:
  2213                           	opt stack 0
  2214  0002'                    ClearBuffer@Len:
  2215                           	opt stack 0
  2216  0002'                    ___wmul@multiplicand:
  2217                           	opt stack 0
  2218  0002'                    ___awdiv@divisor:
  2219                           	opt stack 0
  2220  0002'                    ___awmod@divisor:
  2221                           	opt stack 0
  2222  0002'                    ___lwdiv@divisor:
  2223                           	opt stack 0
  2224  0002'                    ___lwmod@divisor:
  2225                           	opt stack 0
  2226  0002'                    memcpy@s1:
  2227                           	opt stack 0
  2228  0002'                    memset@c:
  2229                           	opt stack 0
  2230  0002'                    strcpy@from:
  2231                           	opt stack 0
  2232  0002'                    strchr@chr:
  2233                           	opt stack 0
  2234  0002'                    strcat@from:
  2235                           	opt stack 0
  2236                           
  2237                           ; 3 bytes @ 0x2
  2238  0002'                    	ds	1
  2239  0003'                    ??_isalpha:
  2240  0003'                    ??_I2c_WriteData:
  2241  0003'                    ??_Rtcc_RtcConfig:
  2242  0003'                    Rtcc_GetRtccValue@RegValue:
  2243                           	opt stack 0
  2244  0003'                    TmrBInit@TmrNumb:
  2245                           	opt stack 0
  2246  0003'                    ReceiveEvt@EventStatus:
  2247                           	opt stack 0
  2248  0003'                    USBTransferOnePacket@len:
  2249                           	opt stack 0
  2250  0003'                    I2c_ReadData@ReadPacket:
  2251                           	opt stack 0
  2252  0003'                    Uart_WriteString@StringToWrite:
  2253                           	opt stack 0
  2254  0003'                    I2cSlv_SendI2cMsg@TxBuffer:
  2255                           	opt stack 0
  2256  0003'                    I2cSlv_ReceiveI2cMsg@RxBuffer:
  2257                           	opt stack 0
  2258                           
  2259                           ; 2 bytes @ 0x3
  2260  0003'                    	ds	1
  2261  0004'                    ?_GetElapsedTime:
  2262                           	opt stack 0
  2263  0004'                    ?_Rtcm_GetRtccDate:
  2264                           	opt stack 0
  2265  0004'                    I2cSlv_I2cReadMsgSts@Result:
  2266                           	opt stack 0
  2267  0004'                    USBTransferOnePacket@ep:
  2268                           	opt stack 0
  2269  0004'                    ___awdiv@counter:
  2270                           	opt stack 0
  2271  0004'                    ___awmod@counter:
  2272                           	opt stack 0
  2273  0004'                    ___lwmod@counter:
  2274                           	opt stack 0
  2275  0004'                    _isalpha$5951:
  2276                           	opt stack 0
  2277  0004'                    OsTmr_StartTimer@Timer:
  2278                           	opt stack 0
  2279  0004'                    StringCopy@Len:
  2280                           	opt stack 0
  2281  0004'                    ClearBuffer@Index:
  2282                           	opt stack 0
  2283  0004'                    ___wmul@product:
  2284                           	opt stack 0
  2285  0004'                    ___lwdiv@quotient:
  2286                           	opt stack 0
  2287  0004'                    memcpy@n:
  2288                           	opt stack 0
  2289  0004'                    memset@n:
  2290                           	opt stack 0
  2291  0004'                    strcpy@cp:
  2292                           	opt stack 0
  2293  0004'                    strlen@cp:
  2294                           	opt stack 0
  2295  0004'                    GetElapsedTime@StartTime:
  2296                           	opt stack 0
  2297  0004'                    ___lmul@multiplicand:
  2298                           	opt stack 0
  2299                           
  2300                           ; 4 bytes @ 0x4
  2301  0004'                    	ds	1
  2302  0005'                    ??_I2c_ReadData:
  2303  0005'                    Uart_WriteString@Module:
  2304                           	opt stack 0
  2305  0005'                    I2cSlv_SendI2cMsg@SlaveAddr:
  2306                           	opt stack 0
  2307  0005'                    I2cSlv_ReceiveI2cMsg@SlaveAddr:
  2308                           	opt stack 0
  2309  0005'                    USBConfigureEndpoint@EPNum:
  2310                           	opt stack 0
  2311  0005'                    ___awdiv@sign:
  2312                           	opt stack 0
  2313  0005'                    ___awmod@sign:
  2314                           	opt stack 0
  2315  0005'                    isalpha@c:
  2316                           	opt stack 0
  2317  0005'                    USBTransferOnePacket@handle:
  2318                           	opt stack 0
  2319  0005'                    strcat@cp:
  2320                           	opt stack 0
  2321                           
  2322                           ; 2 bytes @ 0x5
  2323  0005'                    	ds	1
  2324  0006'                    ?_atoi:
  2325                           	opt stack 0
  2326  0006'                    ?_strncmp:
  2327                           	opt stack 0
  2328  0006'                    I2cSlv_SendI2cMsg@DataLenght:
  2329                           	opt stack 0
  2330  0006'                    I2cSlv_ReceiveI2cMsg@DataLenght:
  2331                           	opt stack 0
  2332  0006'                    ___lwdiv@counter:
  2333                           	opt stack 0
  2334  0006'                    OsAlrm_SetOsAlarm@OsAlarmId:
  2335                           	opt stack 0
  2336  0006'                    MdmWifi_SendWifiMsg@TxBuffer:
  2337                           	opt stack 0
  2338  0006'                    USBConfigureEndpoint@handle:
  2339                           	opt stack 0
  2340  0006'                    putUSBUSART@data:
  2341                           	opt stack 0
  2342  0006'                    StringCopy@Index:
  2343                           	opt stack 0
  2344  0006'                    atoi@s:
  2345                           	opt stack 0
  2346  0006'                    ___awdiv@quotient:
  2347                           	opt stack 0
  2348  0006'                    memcpy@d:
  2349                           	opt stack 0
  2350  0006'                    memset@p:
  2351                           	opt stack 0
  2352  0006'                    strncmp@s1:
  2353                           	opt stack 0
  2354  0006'                    OsTmr_StartTimer@Timeout:
  2355                           	opt stack 0
  2356                           
  2357                           ; 4 bytes @ 0x6
  2358  0006'                    	ds	1
  2359  0007'                    I2cSlv_SendI2cMsg@TxSts:
  2360                           	opt stack 0
  2361  0007'                    I2cSlv_ReceiveI2cMsg@RxSts:
  2362                           	opt stack 0
  2363  0007'                    CDCTxService@i:
  2364                           	opt stack 0
  2365  0007'                    getsUSBUSART@buffer:
  2366                           	opt stack 0
  2367  0007'                    LedBlinkStateMachine@LedBlink:
  2368                           	opt stack 0
  2369  0007'                    LedPulseStateMachine@LedPulse:
  2370                           	opt stack 0
  2371  0007'                    utoa@buf:
  2372                           	opt stack 0
  2373                           
  2374                           ; 2 bytes @ 0x7
  2375  0007'                    	ds	1
  2376  0008'                    ??_atoi:
  2377  0008'                    ??_GetElapsedTime:
  2378  0008'                    Rtcc_SetRtccValue@Value:
  2379                           	opt stack 0
  2380  0008'                    USBDeviceInit@i:
  2381                           	opt stack 0
  2382  0008'                    USBEnableEndpoint@options:
  2383                           	opt stack 0
  2384  0008'                    putUSBUSART@length:
  2385                           	opt stack 0
  2386  0008'                    CDCTxService@byte_to_send:
  2387                           	opt stack 0
  2388  0008'                    MdmWifi_ReceiveWifiMsg@RxBuffer:
  2389                           	opt stack 0
  2390  0008'                    memcpy@s:
  2391                           	opt stack 0
  2392  0008'                    strncmp@s2:
  2393                           	opt stack 0
  2394  0008'                    OsAlrm_SetOsAlarm@OsAlarmTimeout:
  2395                           	opt stack 0
  2396  0008'                    ___lmul@product:
  2397                           	opt stack 0
  2398                           
  2399                           ; 4 bytes @ 0x8
  2400  0008'                    	ds	1
  2401  0009'                    ??_Rtcc_SetRtccValue:
  2402  0009'                    getsUSBUSART@len:
  2403                           	opt stack 0
  2404  0009'                    LedPulseStateMachine@Led:
  2405                           	opt stack 0
  2406  0009'                    USBEnableEndpoint@p:
  2407                           	opt stack 0
  2408  0009'                    utoa@val:
  2409                           	opt stack 0
  2410                           
  2411                           ; 2 bytes @ 0x9
  2412  0009'                    	ds	1
  2413  000A'                    atoi@sign:
  2414                           	opt stack 0
  2415  000A'                    memcpy@tmp:
  2416                           	opt stack 0
  2417  000A'                    MdmWifi_ReceiveWifiMsg@DataLenght:
  2418                           	opt stack 0
  2419  000A'                    strncmp@len:
  2420                           	opt stack 0
  2421                           
  2422                           ; 2 bytes @ 0xA
  2423  000A'                    	ds	1
  2424  000B'                    Rtcc_SetRtccValue@RtccPtrVal:
  2425                           	opt stack 0
  2426  000B'                    USBEnableEndpoint@ep:
  2427                           	opt stack 0
  2428  000B'                    atoi@a:
  2429                           	opt stack 0
  2430  000B'                    utoa@base:
  2431                           	opt stack 0
  2432                           
  2433                           ; 2 bytes @ 0xB
  2434  000B'                    	ds	1
  2435  000C'                    ??_Rtcm_GetRtccDate:
  2436  000C'                    ??_strncmp:
  2437  000C'                    ?_strtol:
  2438                           	opt stack 0
  2439  000C'                    ?___lldiv:
  2440                           	opt stack 0
  2441  000C'                    MdmWifi_ReceiveWifiMsg@Ret:
  2442                           	opt stack 0
  2443  000C'                    OsAlrm_SetOsAlarm@AlarmCallback:
  2444                           	opt stack 0
  2445  000C'                    USER_USB_CALLBACK_EVENT_HANDLER@event:
  2446                           	opt stack 0
  2447  000C'                    LedStateMachine@LedSts:
  2448                           	opt stack 0
  2449  000C'                    strtol@s:
  2450                           	opt stack 0
  2451  000C'                    ___lldiv@dividend:
  2452                           	opt stack 0
  2453  000C'                    Rtcm_SetRtccDate@Date:
  2454                           	opt stack 0
  2455                           
  2456                           ; 8 bytes @ 0xC
  2457  000C'                    	ds	1
  2458  000D'                    utoa@v:
  2459                           	opt stack 0
  2460  000D'                    Rtcm_GetRtccDate@LocalDate:
  2461                           	opt stack 0
  2462                           
  2463                           ; 8 bytes @ 0xD
  2464  000D'                    	ds	1
  2465  000E'                    USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2466                           	opt stack 0
  2467  000E'                    LedStateMachine@LedBlink:
  2468                           	opt stack 0
  2469  000E'                    strtol@endptr:
  2470                           	opt stack 0
  2471                           
  2472                           ; 2 bytes @ 0xE
  2473  000E'                    	ds	1
  2474  000F'                    ?_strstr:
  2475                           	opt stack 0
  2476  000F'                    utoa@c:
  2477                           	opt stack 0
  2478  000F'                    strstr@s1:
  2479                           	opt stack 0
  2480                           
  2481                           ; 2 bytes @ 0xF
  2482  000F'                    	ds	1
  2483  0010'                    USER_USB_CALLBACK_EVENT_HANDLER@size:
  2484                           	opt stack 0
  2485  0010'                    LedStateMachine@LedPulse:
  2486                           	opt stack 0
  2487  0010'                    itoa@buf:
  2488                           	opt stack 0
  2489  0010'                    strtol@base:
  2490                           	opt stack 0
  2491  0010'                    GetElapsedTime@TimeValue:
  2492                           	opt stack 0
  2493  0010'                    ___lldiv@divisor:
  2494                           	opt stack 0
  2495                           
  2496                           ; 4 bytes @ 0x10
  2497  0010'                    	ds	1
  2498  0011'                    strstr@s2:
  2499                           	opt stack 0
  2500                           
  2501                           ; 2 bytes @ 0x11
  2502  0011'                    	ds	1
  2503  0012'                    ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2504  0012'                    ??_strtol:
  2505  0012'                    LedStateMachine@Led:
  2506                           	opt stack 0
  2507  0012'                    itoa@val:
  2508                           	opt stack 0
  2509                           
  2510                           ; 2 bytes @ 0x12
  2511  0012'                    	ds	1
  2512  0013'                    LedStateMachine@LedOutSts:
  2513                           	opt stack 0
  2514  0013'                    StartConnectionSm@Data:
  2515                           	opt stack 0
  2516                           
  2517                           ; 100 bytes @ 0x13
  2518  0013'                    	ds	1
  2519  0014'                    ??_Led_MainTask:
  2520  0014'                    ??_USBStdFeatureReqHandler:
  2521  0014'                    USBStdSetCfgHandler@i:
  2522                           	opt stack 0
  2523  0014'                    itoa@base:
  2524                           	opt stack 0
  2525  0014'                    GetElapsedTime@CurrentTimestamp:
  2526                           	opt stack 0
  2527  0014'                    ___lldiv@quotient:
  2528                           	opt stack 0
  2529                           
  2530                           ; 4 bytes @ 0x14
  2531  0014'                    	ds	1
  2532  0015'                    USBStdFeatureReqHandler@pUEP:
  2533                           	opt stack 0
  2534                           
  2535                           ; 2 bytes @ 0x15
  2536  0015'                    	ds	1
  2537  0016'                    strtol@sign:
  2538                           	opt stack 0
  2539  0016'                    itoa@cp:
  2540                           	opt stack 0
  2541                           
  2542                           ; 2 bytes @ 0x16
  2543  0016'                    	ds	1
  2544  0017'                    USBStdFeatureReqHandler@current_ep_data:
  2545                           	opt stack 0
  2546  0017'                    strtol@a:
  2547                           	opt stack 0
  2548                           
  2549                           ; 4 bytes @ 0x17
  2550  0017'                    	ds	1
  2551  0018'                    ___lldiv@counter:
  2552                           	opt stack 0
  2553  0018'                    OsTmr_GetTimerStatus@Timer:
  2554                           	opt stack 0
  2555  0018'                    USBStdFeatureReqHandler@p:
  2556                           	opt stack 0
  2557                           
  2558                           ; 2 bytes @ 0x18
  2559  0018'                    	ds	1
  2560  0019'                    Tmr_TmrBPrSet@IntFreqHz:
  2561                           	opt stack 0
  2562  0019'                    SetUartBaudRate@UartConfig:
  2563                           	opt stack 0
  2564  0019'                    SetBaudRate@DesiredI2cBusClockHz:
  2565                           	opt stack 0
  2566                           
  2567                           ; 4 bytes @ 0x19
  2568  0019'                    	ds	1
  2569  001A'                    ??_USBCtrlEPService:
  2570  001A'                    
  2571                           ; 1 bytes @ 0x1A
  2572  001A'                    	ds	1
  2573  001B'                    Tmr_TmrBPrSet@Prescaler:
  2574                           	opt stack 0
  2575  001B'                    USBDeviceTasks@i:
  2576                           	opt stack 0
  2577  001B'                    strtol@c:
  2578                           	opt stack 0
  2579                           
  2580                           ; 1 bytes @ 0x1B
  2581  001B'                    	ds	1
  2582  001C'                    ??_Terminal:
  2583  001C'                    Tmr_TmrBPrSet@Postscaler:
  2584                           	opt stack 0
  2585  001C'                    SetUartBaudRate@Module:
  2586                           	opt stack 0
  2587                           
  2588                           ; 1 bytes @ 0x1C
  2589  001C'                    	ds	1
  2590  001D'                    Tmr_TmrBPrSet@TmrBPrCfgSts:
  2591                           	opt stack 0
  2592  001D'                    SetUartBaudRate@BaudRateRegister:
  2593                           	opt stack 0
  2594  001D'                    SetBaudRate@McuClockHz:
  2595                           	opt stack 0
  2596                           
  2597                           ; 4 bytes @ 0x1D
  2598  001D'                    	ds	1
  2599  001E'                    Tmr_TmrBPrSet@TmrNumb:
  2600                           	opt stack 0
  2601  001E'                    Terminal@TermTxBuffer:
  2602                           	opt stack 0
  2603  001E'                    SendDataSm@Data:
  2604                           	opt stack 0
  2605                           
  2606                           ; 103 bytes @ 0x1E
  2607  001E'                    	ds	1
  2608  001F'                    SetUartBaudRate@DivisionFactor:
  2609                           	opt stack 0
  2610  001F'                    Tmr_TmrBPrSet@Divisor:
  2611                           	opt stack 0
  2612                           
  2613                           ; 4 bytes @ 0x1F
  2614  001F'                    	ds	1
  2615  0020'                    Uart_InitUartModule@UartConfig:
  2616                           	opt stack 0
  2617                           
  2618                           ; 2 bytes @ 0x20
  2619  0020'                    	ds	1
  2620  0021'                    ??_SetBaudRate:
  2621                           
  2622                           ; 1 bytes @ 0x21
  2623  0021'                    	ds	1
  2624  0022'                    ??_Uart_InitUartModule:
  2625                           
  2626                           ; 1 bytes @ 0x22
  2627  0022'                    	ds	1
  2628  0023'                    Tmr_TmrBConfig@TmrBConfig:
  2629                           	opt stack 0
  2630                           
  2631                           ; 2 bytes @ 0x23
  2632  0023'                    	ds	1
  2633  0024'                    Uart_InitUartModule@Module:
  2634                           	opt stack 0
  2635                           
  2636                           ; 1 bytes @ 0x24
  2637  0024'                    	ds	1
  2638  0025'                    I2c_InitI2cModule@I2cConfig:
  2639                           	opt stack 0
  2640                           
  2641                           ; 2 bytes @ 0x25
  2642  0025'                    	ds	1
  2643  0026'                    Tmr_TmrBConfig@TmrNumb:
  2644                           	opt stack 0
  2645                           
  2646                           ; 1 bytes @ 0x26
  2647  0026'                    	ds	1
  2648  0027'                    ??_I2c_InitI2cModule:
  2649  0027'                    InitSchedTimer@TmrBConfig:
  2650                           	opt stack 0
  2651                           
  2652                           ; 7 bytes @ 0x27
  2653  0027'                    	ds	2
  2654  0029'                    
  2655                           ; 1 bytes @ 0x29
  2656  0029'                    	ds	5
  2657  002E'                    
  2658                           ; 1 bytes @ 0x2E
  2659  002E'                    	ds	34
  2660  0050'                    Terminal@ReceivedBytes:
  2661                           	opt stack 0
  2662                           
  2663                           ; 1 bytes @ 0x50
  2664  0050'                    	ds	1
  2665  0051'                    Terminal@Index:
  2666                           	opt stack 0
  2667                           
  2668                           ; 1 bytes @ 0x51
  2669  0051'                    	ds	1
  2670  0052'                    Term_MainSm@Data:
  2671                           	opt stack 0
  2672                           
  2673                           ; 50 bytes @ 0x52
  2674  0052'                    	ds	37
  2675  0077'                    StartConnectionSm@PortAscii:
  2676                           	opt stack 0
  2677                           
  2678                           ; 4 bytes @ 0x77
  2679  0077'                    	ds	4
  2680  007B'                    StartConnectionSm@DataIndex:
  2681                           	opt stack 0
  2682                           
  2683                           ; 1 bytes @ 0x7B
  2684  007B'                    	ds	1
  2685  007C'                    StartConnectionSm@IdAscii:
  2686                           	opt stack 0
  2687                           
  2688                           ; 1 bytes @ 0x7C
  2689  007C'                    	ds	8
  2690  0084'                    Term_MainSm@FwkMajorStr:
  2691                           	opt stack 0
  2692                           
  2693                           ; 4 bytes @ 0x84
  2694  0084'                    	ds	1
  2695  0085'                    SendDataSm@LenAscii:
  2696                           	opt stack 0
  2697                           
  2698                           ; 4 bytes @ 0x85
  2699  0085'                    	ds	3
  2700  0088'                    Term_MainSm@FwkMinorStr:
  2701                           	opt stack 0
  2702                           
  2703                           ; 4 bytes @ 0x88
  2704  0088'                    	ds	1
  2705  0089'                    SendDataSm@DataIndex:
  2706                           	opt stack 0
  2707                           
  2708                           ; 1 bytes @ 0x89
  2709  0089'                    	ds	1
  2710  008A'                    SendDataSm@IdAscii:
  2711                           	opt stack 0
  2712                           
  2713                           ; 1 bytes @ 0x8A
  2714  008A'                    	ds	1
  2715  008B'                    
  2716                           ; 1 bytes @ 0x8B
  2717  008B'                    	ds	1
  2718  008C'                    Term_MainSm@FwkBuildStr:
  2719                           	opt stack 0
  2720                           
  2721                           ; 4 bytes @ 0x8C
  2722  008C'                    	ds	4
  2723  0090'                    Term_MainSm@FwkBuildDayStr:
  2724                           	opt stack 0
  2725                           
  2726                           ; 4 bytes @ 0x90
  2727  0090'                    	ds	4
  2728  0094'                    Term_MainSm@FwkBuildMonthStr:
  2729                           	opt stack 0
  2730                           
  2731                           ; 4 bytes @ 0x94
  2732  0094'                    	ds	4
  2733  0098'                    Term_MainSm@FwkBuildYearStr:
  2734                           	opt stack 0
  2735                           
  2736                           ; 4 bytes @ 0x98
  2737  0098'                    	ds	4
  2738  009C'                    ??_InitializeTasks:
  2739  009C'                    ??_ScheduleTasks:
  2740                           
  2741                           ; 1 bytes @ 0x9C
  2742  009C'                    	ds	2
  2743  009E'                    InitializeTasks@ActiveTaskIndex:
  2744                           	opt stack 0
  2745                           
  2746                           ; 1 bytes @ 0x9E
  2747  009E'                    	ds	2
  2748  00A0'                    tblptru	equ	0xFF8
  2749                           tblptrh	equ	0xFF7
  2750                           tblptrl	equ	0xFF6
  2751                           tablat	equ	0xFF5
  2752                           postinc0	equ	0xFEE
  2753                           wreg	equ	0xFE8
  2754                           postdec1	equ	0xFE5
  2755                           fsr1l	equ	0xFE1
  2756                           
  2757                           ; 1 bytes @ 0xA0
  2758                           
  2759                           	psect	cstackCOMRAM
  2760  0000'                    __pcstackCOMRAM:
  2761                           	opt stack 0
  2762  0000'                    i2GenerateEvt@Event:
  2763                           	opt stack 0
  2764                           
  2765                           ; 2 bytes @ 0x0
  2766  0000'                    	ds	2
  2767  0002'                    i2GenerateEvt@EventStatus:
  2768                           	opt stack 0
  2769                           
  2770                           ; 1 bytes @ 0x2
  2771  0002'                    	ds	1
  2772  0003'                    Uart_MdmWifiReadService@UartData:
  2773                           	opt stack 0
  2774                           
  2775                           ; 1 bytes @ 0x3
  2776  0003'                    	ds	1
  2777  0004'                    ??_HighPriorityIsr:
  2778  0004'                    
  2779                           ; 1 bytes @ 0x4
  2780  0004'                    	ds	18
  2781  0016'                    ?i1___wmul:
  2782                           	opt stack 0
  2783  0016'                    OsAlrm_ClearOsAlarm@OsAlarmId:
  2784                           	opt stack 0
  2785  0016'                    i1GenerateEvt@Event:
  2786                           	opt stack 0
  2787  0016'                    i1___wmul@multiplier:
  2788                           	opt stack 0
  2789                           
  2790                           ; 2 bytes @ 0x16
  2791  0016'                    	ds	2
  2792  0018'                    i1GenerateEvt@EventStatus:
  2793                           	opt stack 0
  2794  0018'                    i1___wmul@multiplicand:
  2795                           	opt stack 0
  2796                           
  2797                           ; 2 bytes @ 0x18
  2798  0018'                    	ds	1
  2799  0019'                    i1I2cSlv_SendI2cMsg@TxBuffer:
  2800                           	opt stack 0
  2801                           
  2802                           ; 2 bytes @ 0x19
  2803  0019'                    	ds	1
  2804  001A'                    i1___wmul@product:
  2805                           	opt stack 0
  2806                           
  2807                           ; 2 bytes @ 0x1A
  2808  001A'                    	ds	1
  2809  001B'                    i1I2cSlv_SendI2cMsg@SlaveAddr:
  2810                           	opt stack 0
  2811                           
  2812                           ; 1 bytes @ 0x1B
  2813  001B'                    	ds	1
  2814  001C'                    i1I2cSlv_SendI2cMsg@DataLenght:
  2815                           	opt stack 0
  2816                           
  2817                           ; 1 bytes @ 0x1C
  2818  001C'                    	ds	1
  2819  001D'                    i1I2cSlv_SendI2cMsg@TxSts:
  2820                           	opt stack 0
  2821                           
  2822                           ; 1 bytes @ 0x1D
  2823  001D'                    	ds	1
  2824  001E'                    ??_OsAlrm_ProcessOsAlarms:
  2825  001E'                    
  2826                           ; 1 bytes @ 0x1E
  2827  001E'                    	ds	8
  2828  0026'                    OsAlrm_ProcessOsAlarms@AlarmIndex:
  2829                           	opt stack 0
  2830                           
  2831                           ; 2 bytes @ 0x26
  2832  0026'                    	ds	2
  2833  0028'                    ??_LowPriorityIsr:
  2834                           
  2835                           ; 1 bytes @ 0x28
  2836  0028'                    	ds	21
  2837                           tblptru	equ	0xFF8
  2838                           tblptrh	equ	0xFF7
  2839                           tblptrl	equ	0xFF6
  2840                           tablat	equ	0xFF5
  2841                           postinc0	equ	0xFEE
  2842                           wreg	equ	0xFE8
  2843                           postdec1	equ	0xFE5
  2844                           fsr1l	equ	0xFE1
  2845                           
  2846 ;;
  2847 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2848 ;;
  2849 ;; *************** function _main *****************
  2850 ;; Defined at:
  2851 ;;		line 58 in file "../Source/c/00_Main/main.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;		None
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;		None
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2   14[None  ] short 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;Total ram usage:        0 bytes
  2870 ;; Hardware stack levels required when called:   23
  2871 ;; This function calls:
  2872 ;;		_Sch_MainScheduler
  2873 ;;		_SystemInit
  2874 ;; This function is called by:
  2875 ;;		Startup code after reset
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text0
  2880  0000'                    __ptext0:
  2881                           	opt stack 0
  2882  0000'                    _main:
  2883                           	opt stack 8
  2884                           
  2885                           ;main.c: 61: SystemInit();
  2886                           
  2887                           ;incstack = 0
  2888  0000' EC00' F000'        	call	_SystemInit	;wreg free
  2889                           
  2890                           ;main.c: 64: Sch_MainScheduler();
  2891  0004' EC00' F000'        	call	_Sch_MainScheduler	;wreg free
  2892                           
  2893                           ;main.c: 67: return 0;
  2894                           ;	Return value of _main is never used
  2895  0008' EF00' F000'        	goto	start
  2896  000C'                    __end_of_main:
  2897                           	opt stack 0
  2898                           tblptru	equ	0xFF8
  2899                           tblptrh	equ	0xFF7
  2900                           tblptrl	equ	0xFF6
  2901                           tablat	equ	0xFF5
  2902                           postinc0	equ	0xFEE
  2903                           wreg	equ	0xFE8
  2904                           postdec1	equ	0xFE5
  2905                           fsr1l	equ	0xFE1
  2906                           
  2907 ;; *************** function _SystemInit *****************
  2908 ;; Defined at:
  2909 ;;		line 121 in file "../Source/c/01_Hal/01_Sys/sys_init.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:   15
  2930 ;; This function calls:
  2931 ;;		_InitSchedTimer
  2932 ;;		_Irq_InitIntController
  2933 ;;		_Mcu_ConfigExtInt
  2934 ;;		_Mcu_StartSystemPll
  2935 ;;		_Pm_DsReleasePinControl
  2936 ;;		_Tmr_RegisterTmr2IsrCallback
  2937 ;; This function is called by:
  2938 ;;		_main
  2939 ;; This function uses a non-reentrant model
  2940 ;;
  2941                           
  2942                           	psect	text1
  2943  0000'                    __ptext1:
  2944                           	opt stack 0
  2945  0000'                    _SystemInit:
  2946                           	opt stack 15
  2947                           
  2948                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  2949                           
  2950                           ;incstack = 0
  2951  0000' EC00' F000'        	call	_Pm_DsReleasePinControl	;wreg free
  2952                           
  2953                           ;sys_init.c: 126: Mcu_StartSystemPll();
  2954  0004' EC00' F000'        	call	_Mcu_StartSystemPll	;wreg free
  2955                           
  2956                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  2957  0008' 0E01               	movlw	1
  2958  000A' 0100               	movlb	0	; () banked
  2959  000C' 6F00'              	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  2960  000E' 0E01               	movlw	1
  2961  0010' 6F00'              	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  2962  0012' 0E01               	movlw	1
  2963  0014' EC00' F000'        	call	_Irq_InitIntController
  2964                           
  2965                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  2966  0018' 0E00'              	movlw	low _Sch_SchmIntService
  2967  001A' 0100               	movlb	0	; () banked
  2968  001C' 6F00'              	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  2969  001E' 0E00'              	movlw	high _Sch_SchmIntService
  2970  0020' 6F00'              	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  2971  0022' EC00' F000'        	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  2972                           
  2973                           ;sys_init.c: 132: InitSchedTimer();
  2974  0026' EC00' F000'        	call	_InitSchedTimer	;wreg free
  2975                           
  2976                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  2977  002A' EC00' F000'        	call	_Mcu_ConfigExtInt	;wreg free
  2978  002E' 0012               	return		;funcret
  2979  0030'                    __end_of_SystemInit:
  2980                           	opt stack 0
  2981                           tblptru	equ	0xFF8
  2982                           tblptrh	equ	0xFF7
  2983                           tblptrl	equ	0xFF6
  2984                           tablat	equ	0xFF5
  2985                           postinc0	equ	0xFEE
  2986                           wreg	equ	0xFE8
  2987                           postdec1	equ	0xFE5
  2988                           fsr1l	equ	0xFE1
  2989                           
  2990 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  2991 ;; Defined at:
  2992 ;;		line 329 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  2993 ;; Parameters:    Size  Location     Type
  2994 ;;  IsrCallback     2    0[BANK0 ] PTR FTN()void 
  2995 ;;		 -> Sch_SchmIntService(1), 
  2996 ;; Auto vars:     Size  Location     Type
  2997 ;;		None
  2998 ;; Return value:  Size  Location     Type
  2999 ;;                  1    wreg      void 
  3000 ;; Registers used:
  3001 ;;		wreg, status,2, status,0
  3002 ;; Tracked objects:
  3003 ;;		On entry : 0/0
  3004 ;;		On exit  : 0/0
  3005 ;;		Unchanged: 0/0
  3006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3007 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3010 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3011 ;;Total ram usage:        2 bytes
  3012 ;; Hardware stack levels used:    1
  3013 ;; Hardware stack levels required when called:   11
  3014 ;; This function calls:
  3015 ;;		Nothing
  3016 ;; This function is called by:
  3017 ;;		_SystemInit
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021                           	psect	text2
  3022  0000'                    __ptext2:
  3023                           	opt stack 0
  3024  0000'                    _Tmr_RegisterTmr2IsrCallback:
  3025                           	opt stack 18
  3026                           
  3027                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  3028                           
  3029                           ;incstack = 0
  3030  0000' C000' F004'        	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  3031  0004' C001' F005'        	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  3032  0008' 0012               	return		;funcret
  3033  000A'                    __end_of_Tmr_RegisterTmr2IsrCallback:
  3034                           	opt stack 0
  3035                           tblptru	equ	0xFF8
  3036                           tblptrh	equ	0xFF7
  3037                           tblptrl	equ	0xFF6
  3038                           tablat	equ	0xFF5
  3039                           postinc0	equ	0xFEE
  3040                           wreg	equ	0xFE8
  3041                           postdec1	equ	0xFE5
  3042                           fsr1l	equ	0xFE1
  3043                           
  3044 ;; *************** function _Pm_DsReleasePinControl *****************
  3045 ;; Defined at:
  3046 ;;		line 166 in file "../Source/c/01_Hal/02_Drv/pm_drv.c"
  3047 ;; Parameters:    Size  Location     Type
  3048 ;;		None
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;		None
  3051 ;; Return value:  Size  Location     Type
  3052 ;;                  1    wreg      void 
  3053 ;; Registers used:
  3054 ;;		None
  3055 ;; Tracked objects:
  3056 ;;		On entry : 0/0
  3057 ;;		On exit  : 0/0
  3058 ;;		Unchanged: 0/0
  3059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3064 ;;Total ram usage:        0 bytes
  3065 ;; Hardware stack levels used:    1
  3066 ;; Hardware stack levels required when called:   11
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_SystemInit
  3071 ;; This function uses a non-reentrant model
  3072 ;;
  3073                           
  3074                           	psect	text3
  3075  0000'                    __ptext3:
  3076                           	opt stack 0
  3077  0000'                    _Pm_DsReleasePinControl:
  3078                           	opt stack 18
  3079                           
  3080                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  3081                           
  3082                           ;incstack = 0
  3083  0000' 010F               	movlb	15	; () banked
  3084  0002' 914C               	bcf	76,0,b	;volatile
  3085                           
  3086                           ; BSR set to: 15
  3087  0004' 0012               	return		;funcret
  3088  0006'                    __end_of_Pm_DsReleasePinControl:
  3089                           	opt stack 0
  3090                           tblptru	equ	0xFF8
  3091                           tblptrh	equ	0xFF7
  3092                           tblptrl	equ	0xFF6
  3093                           tablat	equ	0xFF5
  3094                           postinc0	equ	0xFEE
  3095                           wreg	equ	0xFE8
  3096                           postdec1	equ	0xFE5
  3097                           fsr1l	equ	0xFE1
  3098                           
  3099 ;; *************** function _Mcu_StartSystemPll *****************
  3100 ;; Defined at:
  3101 ;;		line 80 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;		None
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  PllStartupCo    2    0[BANK0 ] volatile unsigned short 
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  1    wreg      void 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3116 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3119 ;;Total ram usage:        2 bytes
  3120 ;; Hardware stack levels used:    1
  3121 ;; Hardware stack levels required when called:   11
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_SystemInit
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text4
  3130  0000'                    __ptext4:
  3131                           	opt stack 0
  3132  0000'                    _Mcu_StartSystemPll:
  3133                           	opt stack 18
  3134                           
  3135                           ;mcu_drv.c: 82: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  3136                           
  3137                           ; BSR set to: 15
  3138                           ;incstack = 0
  3139  0000' 0E03               	movlw	3
  3140  0002' 0100               	movlb	0	; () banked
  3141  0004' 6F00'              	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  3142  0006' 0EE8               	movlw	232
  3143  0008' 6F00'              	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;mcu_drv.c: 85: OSCTUNEbits.PLLEN = ((UINT8)(1));
  3147  000A' 8C9B               	bsf	3995,6,c	;volatile
  3148  000C'                    l9293:
  3149                           
  3150                           ; BSR set to: 0
  3151  000C' 0700'              	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  3152  000E' A0D8               	btfss	status,0,c
  3153  0010' 0700'              	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  3154  0012' 2900'              	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  3155  0014' E1FB               	bnz	l9293
  3156  0016' 2900'              	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  3157  0018' B4D8               	btfsc	status,2,c
  3158  001A' 0012               	return	
  3159  001C' D7F7               	goto	l231
  3160  001E'                    __end_of_Mcu_StartSystemPll:
  3161                           	opt stack 0
  3162                           tblptru	equ	0xFF8
  3163                           tblptrh	equ	0xFF7
  3164                           tblptrl	equ	0xFF6
  3165                           tablat	equ	0xFF5
  3166                           postinc0	equ	0xFEE
  3167                           wreg	equ	0xFE8
  3168                           postdec1	equ	0xFE5
  3169                           fsr1l	equ	0xFE1
  3170                           status	equ	0xFD8
  3171                           
  3172 ;; *************** function _Mcu_ConfigExtInt *****************
  3173 ;; Defined at:
  3174 ;;		line 98 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
  3175 ;; Parameters:    Size  Location     Type
  3176 ;;		None
  3177 ;; Auto vars:     Size  Location     Type
  3178 ;;		None
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      void 
  3181 ;; Registers used:
  3182 ;;		None
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3192 ;;Total ram usage:        0 bytes
  3193 ;; Hardware stack levels used:    1
  3194 ;; Hardware stack levels required when called:   11
  3195 ;; This function calls:
  3196 ;;		Nothing
  3197 ;; This function is called by:
  3198 ;;		_SystemInit
  3199 ;; This function uses a non-reentrant model
  3200 ;;
  3201                           
  3202                           	psect	text5
  3203  0000'                    __ptext5:
  3204                           	opt stack 0
  3205  0000'                    _Mcu_ConfigExtInt:
  3206                           	opt stack 18
  3207                           
  3208                           ;mcu_drv.c: 101: TRISBbits.TRISB0 = ((UINT8)(1));
  3209                           
  3210                           ; BSR set to: 0
  3211                           ;incstack = 0
  3212  0000' 8093               	bsf	3987,0,c	;volatile
  3213                           
  3214                           ;mcu_drv.c: 102: TRISDbits.TRISD3 = ((UINT8)(1));
  3215  0002' 8695               	bsf	3989,3,c	;volatile
  3216                           
  3217                           ;mcu_drv.c: 105: INTCONbits.INT0IE = 1u;
  3218  0004' 88F2               	bsf	intcon,4,c	;volatile
  3219                           
  3220                           ;mcu_drv.c: 106: INTCON3bits.INT1IE = 1u;
  3221  0006' 86F0               	bsf	intcon3,3,c	;volatile
  3222                           
  3223                           ;mcu_drv.c: 107: INTCON3bits.INT1IP = 1u;
  3224  0008' 8CF0               	bsf	intcon3,6,c	;volatile
  3225                           
  3226                           ;mcu_drv.c: 108: INTCON2bits.INTEDG0 = 0u;
  3227  000A' 9CF1               	bcf	intcon2,6,c	;volatile
  3228                           
  3229                           ;mcu_drv.c: 109: INTCON2bits.INTEDG1 = 0u;
  3230  000C' 9AF1               	bcf	intcon2,5,c	;volatile
  3231  000E' 0012               	return		;funcret
  3232  0010'                    __end_of_Mcu_ConfigExtInt:
  3233                           	opt stack 0
  3234                           tblptru	equ	0xFF8
  3235                           tblptrh	equ	0xFF7
  3236                           tblptrl	equ	0xFF6
  3237                           tablat	equ	0xFF5
  3238                           intcon	equ	0xFF2
  3239                           intcon2	equ	0xFF1
  3240                           intcon3	equ	0xFF0
  3241                           postinc0	equ	0xFEE
  3242                           wreg	equ	0xFE8
  3243                           postdec1	equ	0xFE5
  3244                           fsr1l	equ	0xFE1
  3245                           status	equ	0xFD8
  3246                           
  3247 ;; *************** function _Irq_InitIntController *****************
  3248 ;; Defined at:
  3249 ;;		line 75 in file "../Source/c/01_Hal/01_Sys/irq.c"
  3250 ;; Parameters:    Size  Location     Type
  3251 ;;  IntPriorityE    1    wreg     enum E7714
  3252 ;;  GlobalInt_Hi    1    0[BANK0 ] unsigned char 
  3253 ;;  PerInt_LowPI    1    1[BANK0 ] unsigned char 
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;  IntPriorityE    1    2[BANK0 ] enum E7714
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      void 
  3258 ;; Registers used:
  3259 ;;		wreg
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3266 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3268 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3269 ;;Total ram usage:        3 bytes
  3270 ;; Hardware stack levels used:    1
  3271 ;; Hardware stack levels required when called:   11
  3272 ;; This function calls:
  3273 ;;		Nothing
  3274 ;; This function is called by:
  3275 ;;		_SystemInit
  3276 ;; This function uses a non-reentrant model
  3277 ;;
  3278                           
  3279                           	psect	text6
  3280  0000'                    __ptext6:
  3281                           	opt stack 0
  3282  0000'                    _Irq_InitIntController:
  3283                           	opt stack 18
  3284                           
  3285                           ;incstack = 0
  3286                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  3287  0000' 0100               	movlb	0	; () banked
  3288  0002' 6F00'              	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  3289                           
  3290                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  3291  0004' 0100               	movlb	0	; () banked
  3292  0006' B100'              	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  3293  0008' D002               	bra	u7905
  3294  000A' 9ED0               	bcf	4048,7,c	;volatile
  3295  000C' D001               	bra	u7906
  3296  000E'                    u7905:
  3297  000E' 8ED0               	bsf	4048,7,c	;volatile
  3298  0010'                    u7906:
  3299                           
  3300                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  3301  0010' 0100               	movlb	0	; () banked
  3302  0012' B100'              	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  3303  0014' D002               	bra	u7915
  3304  0016' 9EF2               	bcf	intcon,7,c	;volatile
  3305  0018' D001               	bra	u7916
  3306  001A'                    u7915:
  3307  001A' 8EF2               	bsf	intcon,7,c	;volatile
  3308  001C'                    u7916:
  3309                           
  3310                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  3311  001C' 0100               	movlb	0	; () banked
  3312  001E' B100'              	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  3313  0020' D002               	bra	u7925
  3314  0022' 9CF2               	bcf	intcon,6,c	;volatile
  3315  0024' D001               	bra	u7926
  3316  0026'                    u7925:
  3317  0026' 8CF2               	bsf	intcon,6,c	;volatile
  3318  0028'                    u7926:
  3319  0028' 0012               	return		;funcret
  3320  002A'                    __end_of_Irq_InitIntController:
  3321                           	opt stack 0
  3322                           tblptru	equ	0xFF8
  3323                           tblptrh	equ	0xFF7
  3324                           tblptrl	equ	0xFF6
  3325                           tablat	equ	0xFF5
  3326                           intcon	equ	0xFF2
  3327                           intcon2	equ	0xFF1
  3328                           intcon3	equ	0xFF0
  3329                           postinc0	equ	0xFEE
  3330                           wreg	equ	0xFE8
  3331                           postdec1	equ	0xFE5
  3332                           fsr1l	equ	0xFE1
  3333                           status	equ	0xFD8
  3334                           
  3335 ;; *************** function _InitSchedTimer *****************
  3336 ;; Defined at:
  3337 ;;		line 69 in file "../Source/c/01_Hal/01_Sys/sys_init.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;		None
  3340 ;; Auto vars:     Size  Location     Type
  3341 ;;  TmrBConfig      7   39[BANK0 ] struct _TmrBConfigType
  3342 ;; Return value:  Size  Location     Type
  3343 ;;                  1    wreg      void 
  3344 ;; Registers used:
  3345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3346 ;; Tracked objects:
  3347 ;;		On entry : 0/0
  3348 ;;		On exit  : 0/0
  3349 ;;		Unchanged: 0/0
  3350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3352 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3354 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3355 ;;Total ram usage:        7 bytes
  3356 ;; Hardware stack levels used:    1
  3357 ;; Hardware stack levels required when called:   14
  3358 ;; This function calls:
  3359 ;;		_Tmr_TmrBConfig
  3360 ;; This function is called by:
  3361 ;;		_SystemInit
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text7
  3366  0000'                    __ptext7:
  3367                           	opt stack 0
  3368  0000'                    _InitSchedTimer:
  3369                           	opt stack 15
  3370                           
  3371                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  3372                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  3373                           
  3374                           ;incstack = 0
  3375  0000' 0E04               	movlw	4
  3376  0002' 0100               	movlb	0	; () banked
  3377  0004' 6F00'              	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  3378                           
  3379                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  3380  0006' 0E0C               	movlw	12
  3381  0008' 6F00'              	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  3382                           
  3383                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  3384  000A' 0E00               	movlw	0
  3385  000C' 6F00'              	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  3386                           
  3387                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  3388  000E' 0E01               	movlw	1
  3389  0010' 6F00'              	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  3390                           
  3391                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  3392  0012' 0E03               	movlw	3
  3393  0014' 6F00'              	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  3394  0016' 0EE8               	movlw	232
  3395  0018' 6F00'              	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  3396                           
  3397                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  3398  001A' 0E01               	movlw	1
  3399  001C' 6F00'              	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  3403  001E' 0E00'              	movlw	low InitSchedTimer@TmrBConfig
  3404  0020' 6F00'              	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  3405  0022' 0E00'              	movlw	high InitSchedTimer@TmrBConfig
  3406  0024' 6F00'              	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  3407  0026' 0E02               	movlw	2
  3408  0028' EC00' F000'        	call	_Tmr_TmrBConfig
  3409  002C' 0012               	return		;funcret
  3410  002E'                    __end_of_InitSchedTimer:
  3411                           	opt stack 0
  3412                           tblptru	equ	0xFF8
  3413                           tblptrh	equ	0xFF7
  3414                           tblptrl	equ	0xFF6
  3415                           tablat	equ	0xFF5
  3416                           intcon	equ	0xFF2
  3417                           intcon2	equ	0xFF1
  3418                           intcon3	equ	0xFF0
  3419                           postinc0	equ	0xFEE
  3420                           wreg	equ	0xFE8
  3421                           postdec1	equ	0xFE5
  3422                           fsr1l	equ	0xFE1
  3423                           status	equ	0xFD8
  3424                           
  3425 ;; *************** function _Tmr_TmrBConfig *****************
  3426 ;; Defined at:
  3427 ;;		line 271 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  TmrNumb         1    wreg     unsigned char 
  3430 ;;  TmrBConfig      2   35[BANK0 ] PTR struct _TmrBConfigTy
  3431 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  TmrNumb         1   38[BANK0 ] unsigned char 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3443 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3444 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3445 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3446 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3447 ;;Total ram usage:        4 bytes
  3448 ;; Hardware stack levels used:    1
  3449 ;; Hardware stack levels required when called:   13
  3450 ;; This function calls:
  3451 ;;		_TmrBInit
  3452 ;;		_Tmr_StartTmr
  3453 ;;		_Tmr_TmrBIrqSet
  3454 ;;		_Tmr_TmrBPrSet
  3455 ;; This function is called by:
  3456 ;;		_InitSchedTimer
  3457 ;;		_InitAuxTimer
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text8
  3462  0000'                    __ptext8:
  3463                           	opt stack 0
  3464  0000'                    _Tmr_TmrBConfig:
  3465                           	opt stack 15
  3466                           
  3467                           ;incstack = 0
  3468                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  3469  0000' 0100               	movlb	0	; () banked
  3470  0002' 6F00'              	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  3471                           
  3472                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  3473  0004' C023' FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3474  0008' C024' FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3475  000C' 50DF               	movf	indf2,w,c
  3476  000E' 0100               	movlb	0	; () banked
  3477  0010' 6F00'              	movwf	TmrBInit@Prescaler& (0+255),b
  3478  0012' EE20 F001          	lfsr	2,1
  3479  0016' 5100'              	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3480  0018' 26D9               	addwf	fsr2l,f,c
  3481  001A' 5100'              	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3482  001C' 22DA               	addwfc	fsr2h,f,c
  3483  001E' 50DF               	movf	indf2,w,c
  3484  0020' 6F00'              	movwf	TmrBInit@Postscaler& (0+255),b
  3485  0022' 5100'              	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3486  0024' EC00' F000'        	call	_TmrBInit
  3487                           
  3488                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  3489  0028' 0100               	movlb	0	; () banked
  3490  002A' EE20 F002          	lfsr	2,2
  3491  002E' 5100'              	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3492  0030' 26D9               	addwf	fsr2l,f,c
  3493  0032' 5100'              	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3494  0034' 22DA               	addwfc	fsr2h,f,c
  3495  0036' 04DE               	decf	postinc2,w,c
  3496  0038' A4D8               	btfss	status,2,c
  3497  003A' D00E               	goto	l428
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;tmr_drv.c: 277: {
  3501                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  3502  003C' EE20 F003          	lfsr	2,3
  3503  0040' 5100'              	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3504  0042' 26D9               	addwf	fsr2l,f,c
  3505  0044' 5100'              	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3506  0046' 22DA               	addwfc	fsr2h,f,c
  3507  0048' 50DF               	movf	indf2,w,c
  3508  004A' 6F00'              	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3509  004C' 0E01               	movlw	1
  3510  004E' 6F00'              	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3511  0050' 5100'              	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3512  0052' EC00' F000'        	call	_Tmr_TmrBIrqSet
  3513                           
  3514                           ;tmr_drv.c: 280: }
  3515  0056' D00E               	goto	l429
  3516  0058'                    l428:
  3517                           
  3518                           ;tmr_drv.c: 281: else
  3519                           ;tmr_drv.c: 282: {
  3520                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  3521  0058' 0100               	movlb	0	; () banked
  3522  005A' EE20 F003          	lfsr	2,3
  3523  005E' 5100'              	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3524  0060' 26D9               	addwf	fsr2l,f,c
  3525  0062' 5100'              	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3526  0064' 22DA               	addwfc	fsr2h,f,c
  3527  0066' 50DF               	movf	indf2,w,c
  3528  0068' 6F00'              	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3529  006A' 0E00               	movlw	0
  3530  006C' 6F00'              	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3531  006E' 5100'              	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3532  0070' EC00' F000'        	call	_Tmr_TmrBIrqSet
  3533  0074'                    l429:
  3534                           
  3535                           ;tmr_drv.c: 285: }
  3536                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  3537  0074' 0100               	movlb	0	; () banked
  3538  0076' EE20 F004          	lfsr	2,4
  3539  007A' 5100'              	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3540  007C' 26D9               	addwf	fsr2l,f,c
  3541  007E' 5100'              	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3542  0080' 22DA               	addwfc	fsr2h,f,c
  3543  0082' CFDE F019'         	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  3544  0086' CFDD F01A'         	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  3545  008A' C023' FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3546  008E' C024' FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3547  0092' 50DF               	movf	indf2,w,c
  3548  0094' 6F00'              	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  3549  0096' EE20 F001          	lfsr	2,1
  3550  009A' 5100'              	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3551  009C' 26D9               	addwf	fsr2l,f,c
  3552  009E' 5100'              	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3553  00A0' 22DA               	addwfc	fsr2h,f,c
  3554  00A2' 50DF               	movf	indf2,w,c
  3555  00A4' 6F00'              	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3556  00A6' 5100'              	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3557  00A8' EC00' F000'        	call	_Tmr_TmrBPrSet
  3558                           
  3559                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  3560  00AC' 0100               	movlb	0	; () banked
  3561  00AE' EE20 F006          	lfsr	2,6
  3562  00B2' 5100'              	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3563  00B4' 26D9               	addwf	fsr2l,f,c
  3564  00B6' 5100'              	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3565  00B8' 22DA               	addwfc	fsr2h,f,c
  3566  00BA' 04DE               	decf	postinc2,w,c
  3567  00BC' A4D8               	btfss	status,2,c
  3568  00BE' 0012               	return	
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;tmr_drv.c: 290: {
  3572                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  3573  00C0' 5100'              	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3574  00C2' EC00' F000'        	call	_Tmr_StartTmr
  3575                           
  3576                           ;tmr_drv.c: 293: }
  3577  00C6' 0012               	return	
  3578  00C8'                    __end_of_Tmr_TmrBConfig:
  3579                           	opt stack 0
  3580                           tblptru	equ	0xFF8
  3581                           tblptrh	equ	0xFF7
  3582                           tblptrl	equ	0xFF6
  3583                           tablat	equ	0xFF5
  3584                           intcon	equ	0xFF2
  3585                           intcon2	equ	0xFF1
  3586                           intcon3	equ	0xFF0
  3587                           postinc0	equ	0xFEE
  3588                           wreg	equ	0xFE8
  3589                           postdec1	equ	0xFE5
  3590                           fsr1l	equ	0xFE1
  3591                           indf2	equ	0xFDF
  3592                           postinc2	equ	0xFDE
  3593                           postdec2	equ	0xFDD
  3594                           fsr2h	equ	0xFDA
  3595                           fsr2l	equ	0xFD9
  3596                           status	equ	0xFD8
  3597                           
  3598 ;; *************** function _Tmr_TmrBPrSet *****************
  3599 ;; Defined at:
  3600 ;;		line 193 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  TmrNumb         1    wreg     unsigned char 
  3603 ;;  IntFreqHz       2   25[BANK0 ] unsigned short 
  3604 ;;  Prescaler       1   27[BANK0 ] unsigned char 
  3605 ;;  Postscaler      1   28[BANK0 ] unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  TmrNumb         1   30[BANK0 ] unsigned char 
  3608 ;;  Divisor         4   31[BANK0 ] unsigned long 
  3609 ;;  TmrBPrCfgSts    1   29[BANK0 ] enum E7730
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      enum E7730
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3619 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3622 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;Total ram usage:       10 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; Hardware stack levels required when called:   12
  3626 ;; This function calls:
  3627 ;;		___lldiv
  3628 ;;		___lmul
  3629 ;; This function is called by:
  3630 ;;		_Tmr_TmrBConfig
  3631 ;; This function uses a non-reentrant model
  3632 ;;
  3633                           
  3634                           	psect	text9
  3635  0000'                    __ptext9:
  3636                           	opt stack 0
  3637  0000'                    _Tmr_TmrBPrSet:
  3638                           	opt stack 15
  3639                           
  3640                           ;incstack = 0
  3641                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  3642  0000' 0100               	movlb	0	; () banked
  3643  0002' 6F00'              	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  3644                           
  3645                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  3646                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  3647  0004' 0E00               	movlw	0
  3648  0006' 0100               	movlb	0	; () banked
  3649  0008' 6F00'              	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  3650  000A' 0E00               	movlw	0
  3651  000C' 6F00'              	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  3652  000E' 0E00               	movlw	0
  3653  0010' 6F00'              	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  3654  0012' 0E00               	movlw	0
  3655  0014' 6F00'              	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  3659  0016' 5100'              	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  3660  0018' 0300'              	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3661  001A' CFF3 F000'         	movff	prodl,___lmul@multiplier
  3662  001E' CFF4 F001'         	movff	prodh,___lmul@multiplier+1
  3663  0022' 6B00'              	clrf	(___lmul@multiplier+2)& (0+255),b
  3664  0024' 6B00'              	clrf	(___lmul@multiplier+3)& (0+255),b
  3665  0026' C019' F004'        	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  3666  002A' C01A' F005'        	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  3667  002E' 6B00'              	clrf	(___lmul@multiplicand+2)& (0+255),b
  3668  0030' 6B00'              	clrf	(___lmul@multiplicand+3)& (0+255),b
  3669  0032' EC00' F000'        	call	___lmul	;wreg free
  3670  0036' C000' F01F'        	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  3671  003A' C001' F020'        	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  3672  003E' C002' F021'        	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  3673  0042' C003' F022'        	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  3674                           
  3675                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  3676  0046' 0E00               	movlw	0
  3677  0048' 0100               	movlb	0	; () banked
  3678  004A' 6F00'              	movwf	___lldiv@dividend& (0+255),b
  3679  004C' 0E1B               	movlw	27
  3680  004E' 6F00'              	movwf	(___lldiv@dividend+1)& (0+255),b
  3681  0050' 0EB7               	movlw	183
  3682  0052' 6F00'              	movwf	(___lldiv@dividend+2)& (0+255),b
  3683  0054' 0E00               	movlw	0
  3684  0056' 6F00'              	movwf	(___lldiv@dividend+3)& (0+255),b
  3685  0058' C01F' F010'        	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3686  005C' C020' F011'        	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3687  0060' C021' F012'        	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3688  0064' C022' F013'        	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3689  0068' EC00' F000'        	call	___lldiv	;wreg free
  3690  006C' 0100               	movlb	0	; () banked
  3691  006E' 5100'              	movf	(?___lldiv+3)& (0+255),w,b
  3692  0070' 1100'              	iorwf	(?___lldiv+2)& (0+255),w,b
  3693  0072' E13A               	bnz	l8517
  3694  0074' 0500'              	decf	(?___lldiv+1)& (0+255),w,b
  3695  0076' A0D8               	btfss	status,0,c
  3696  0078' D02D               	goto	l411
  3697  007A' D036               	goto	l410
  3698  007C'                    
  3699                           ; BSR set to: 0
  3700                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3701                           
  3702                           ; BSR set to: 0
  3703  007C' 0E00               	movlw	0
  3704  007E' 6F00'              	movwf	___lldiv@dividend& (0+255),b
  3705  0080' 0E1B               	movlw	27
  3706  0082' 6F00'              	movwf	(___lldiv@dividend+1)& (0+255),b
  3707  0084' 0EB7               	movlw	183
  3708  0086' 6F00'              	movwf	(___lldiv@dividend+2)& (0+255),b
  3709  0088' 0E00               	movlw	0
  3710  008A' 6F00'              	movwf	(___lldiv@dividend+3)& (0+255),b
  3711  008C' C01F' F010'        	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3712  0090' C020' F011'        	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3713  0094' C021' F012'        	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3714  0098' C022' F013'        	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3715  009C' EC00' F000'        	call	___lldiv	;wreg free
  3716  00A0' 0100               	movlb	0	; () banked
  3717  00A2' 5100'              	movf	?___lldiv& (0+255),w,b
  3718  00A4' 6ECB               	movwf	4043,c	;volatile
  3719                           
  3720                           ;tmr_drv.c: 210: break;
  3721  00A6' D01D               	goto	l413
  3722  00A8'                    
  3723                           ; BSR set to: 0
  3724                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3725                           
  3726                           ; BSR set to: 0
  3727  00A8' 0E00               	movlw	0
  3728  00AA' 6F00'              	movwf	___lldiv@dividend& (0+255),b
  3729  00AC' 0E1B               	movlw	27
  3730  00AE' 6F00'              	movwf	(___lldiv@dividend+1)& (0+255),b
  3731  00B0' 0EB7               	movlw	183
  3732  00B2' 6F00'              	movwf	(___lldiv@dividend+2)& (0+255),b
  3733  00B4' 0E00               	movlw	0
  3734  00B6' 6F00'              	movwf	(___lldiv@dividend+3)& (0+255),b
  3735  00B8' C01F' F010'        	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3736  00BC' C020' F011'        	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3737  00C0' C021' F012'        	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3738  00C4' C022' F013'        	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3739  00C8' EC00' F000'        	call	___lldiv	;wreg free
  3740  00CC' 0100               	movlb	0	; () banked
  3741  00CE' 5100'              	movf	?___lldiv& (0+255),w,b
  3742  00D0' 6E77               	movwf	3959,c	;volatile
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;tmr_drv.c: 219: }
  3746                           
  3747                           ; BSR set to: 0
  3748                           ;tmr_drv.c: 218: break;
  3749                           
  3750                           ;tmr_drv.c: 217: default:
  3751                           
  3752                           ;tmr_drv.c: 215: break;
  3753  00D2' D007               	goto	l413
  3754  00D4'                    l411:
  3755                           
  3756                           ; BSR set to: 0
  3757                           
  3758                           ; BSR set to: 0
  3759  00D4' 5100'              	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  3760                           
  3761                           ; Switch size 1, requested type "space"
  3762                           ; Number of cases is 2, Range of values is 2 to 4
  3763                           ; switch strategies available:
  3764                           ; Name         Instructions Cycles
  3765                           ; simple_byte            7     4 (average)
  3766                           ;	Chosen strategy is simple_byte
  3767  00D6' 0A02               	xorlw	2	; case 2
  3768  00D8' B4D8               	btfsc	status,2,c
  3769  00DA' D7D0               	goto	l412
  3770  00DC' 0A06               	xorlw	6	; case 4
  3771  00DE' B4D8               	btfsc	status,2,c
  3772  00E0' D7E3               	goto	l414
  3773  00E2'                    l413:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  3777                           
  3778                           ; BSR set to: 0
  3779  00E2' 0E00               	movlw	0
  3780  00E4' 6F00'              	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3781                           
  3782                           ;tmr_drv.c: 223: }
  3783  00E6' 0012               	return	
  3784  00E8'                    l410:
  3785  00E8'                    l8517:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;tmr_drv.c: 224: else
  3789                           ;tmr_drv.c: 225: {
  3790                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  3791  00E8' 0E01               	movlw	1
  3792  00EA' 6F00'              	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3793                           
  3794                           ; BSR set to: 0
  3795  00EC' 0012               	return	
  3796  00EE'                    __end_of_Tmr_TmrBPrSet:
  3797                           	opt stack 0
  3798                           tblptru	equ	0xFF8
  3799                           tblptrh	equ	0xFF7
  3800                           tblptrl	equ	0xFF6
  3801                           tablat	equ	0xFF5
  3802                           prodh	equ	0xFF4
  3803                           prodl	equ	0xFF3
  3804                           intcon	equ	0xFF2
  3805                           intcon2	equ	0xFF1
  3806                           intcon3	equ	0xFF0
  3807                           postinc0	equ	0xFEE
  3808                           wreg	equ	0xFE8
  3809                           postdec1	equ	0xFE5
  3810                           fsr1l	equ	0xFE1
  3811                           indf2	equ	0xFDF
  3812                           postinc2	equ	0xFDE
  3813                           postdec2	equ	0xFDD
  3814                           fsr2h	equ	0xFDA
  3815                           fsr2l	equ	0xFD9
  3816                           status	equ	0xFD8
  3817                           
  3818 ;; *************** function _Tmr_TmrBIrqSet *****************
  3819 ;; Defined at:
  3820 ;;		line 153 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  TmrNumb         1    wreg     unsigned char 
  3823 ;;  Priority        1    0[BANK0 ] enum E7710
  3824 ;;  TmrIrqSts       1    1[BANK0 ] unsigned char 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  TmrNumb         1    2[BANK0 ] unsigned char 
  3827 ;; Return value:  Size  Location     Type
  3828 ;;                  1    wreg      void 
  3829 ;; Registers used:
  3830 ;;		wreg, status,2, status,0
  3831 ;; Tracked objects:
  3832 ;;		On entry : 0/0
  3833 ;;		On exit  : 0/0
  3834 ;;		Unchanged: 0/0
  3835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3836 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3839 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3840 ;;Total ram usage:        3 bytes
  3841 ;; Hardware stack levels used:    1
  3842 ;; Hardware stack levels required when called:   11
  3843 ;; This function calls:
  3844 ;;		Nothing
  3845 ;; This function is called by:
  3846 ;;		_Tmr_TmrBConfig
  3847 ;; This function uses a non-reentrant model
  3848 ;;
  3849                           
  3850                           	psect	text10
  3851  0000'                    __ptext10:
  3852                           	opt stack 0
  3853  0000'                    _Tmr_TmrBIrqSet:
  3854                           	opt stack 16
  3855                           
  3856                           ; BSR set to: 0
  3857                           ;incstack = 0
  3858                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  3859  0000' 0100               	movlb	0	; () banked
  3860  0002' 6F00'              	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  3861                           
  3862                           ;tmr_drv.c: 156: switch (TmrNumb)
  3863  0004' D01A               	goto	l402
  3864  0006'                    l403:
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  3868  0006' 929E               	bcf	3998,1,c	;volatile
  3869                           
  3870                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  3871  0008' B100'              	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3872  000A' D002               	bra	u6925
  3873  000C' 929F               	bcf	3999,1,c	;volatile
  3874  000E' D001               	bra	u6926
  3875  0010'                    u6925:
  3876  0010' 829F               	bsf	3999,1,c	;volatile
  3877  0012'                    u6926:
  3878                           
  3879                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  3880  0012' 0100               	movlb	0	; () banked
  3881  0014' B100'              	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3882  0016' D002               	bra	u6935
  3883  0018' 929D               	bcf	3997,1,c	;volatile
  3884  001A' D001               	bra	u6936
  3885  001C'                    u6935:
  3886  001C' 829D               	bsf	3997,1,c	;volatile
  3887  001E'                    u6936:
  3888                           
  3889                           ;tmr_drv.c: 165: break;
  3890  001E' 0012               	return	
  3891  0020'                    l405:
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  3895  0020' 96A4               	bcf	4004,3,c	;volatile
  3896                           
  3897                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  3898  0022' B100'              	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3899  0024' D002               	bra	u6945
  3900  0026' 96A5               	bcf	4005,3,c	;volatile
  3901  0028' D001               	bra	u6946
  3902  002A'                    u6945:
  3903  002A' 86A5               	bsf	4005,3,c	;volatile
  3904  002C'                    u6946:
  3905                           
  3906                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  3907  002C' 0100               	movlb	0	; () banked
  3908  002E' B100'              	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3909  0030' D002               	bra	u6955
  3910  0032' 96A3               	bcf	4003,3,c	;volatile
  3911  0034' D001               	bra	u6956
  3912  0036'                    u6955:
  3913  0036' 86A3               	bsf	4003,3,c	;volatile
  3914  0038'                    u6956:
  3915                           
  3916                           ;tmr_drv.c: 178: }
  3917                           
  3918                           ;tmr_drv.c: 177: break;
  3919                           
  3920                           ;tmr_drv.c: 176: default:
  3921                           
  3922                           ;tmr_drv.c: 174: break;
  3923  0038' 0012               	return	
  3924  003A'                    l402:
  3925  003A' 0100               	movlb	0	; () banked
  3926  003C' 5100'              	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  3927                           
  3928                           ; Switch size 1, requested type "space"
  3929                           ; Number of cases is 2, Range of values is 2 to 4
  3930                           ; switch strategies available:
  3931                           ; Name         Instructions Cycles
  3932                           ; simple_byte            7     4 (average)
  3933                           ;	Chosen strategy is simple_byte
  3934  003E' 0A02               	xorlw	2	; case 2
  3935  0040' B4D8               	btfsc	status,2,c
  3936  0042' D7E1               	goto	l403
  3937  0044' 0A06               	xorlw	6	; case 4
  3938  0046' A4D8               	btfss	status,2,c
  3939  0048' 0012               	return	
  3940  004A' D7EA               	goto	l405
  3941  004C'                    __end_of_Tmr_TmrBIrqSet:
  3942                           	opt stack 0
  3943                           tblptru	equ	0xFF8
  3944                           tblptrh	equ	0xFF7
  3945                           tblptrl	equ	0xFF6
  3946                           tablat	equ	0xFF5
  3947                           prodh	equ	0xFF4
  3948                           prodl	equ	0xFF3
  3949                           intcon	equ	0xFF2
  3950                           intcon2	equ	0xFF1
  3951                           intcon3	equ	0xFF0
  3952                           postinc0	equ	0xFEE
  3953                           wreg	equ	0xFE8
  3954                           postdec1	equ	0xFE5
  3955                           fsr1l	equ	0xFE1
  3956                           indf2	equ	0xFDF
  3957                           postinc2	equ	0xFDE
  3958                           postdec2	equ	0xFDD
  3959                           fsr2h	equ	0xFDA
  3960                           fsr2l	equ	0xFD9
  3961                           status	equ	0xFD8
  3962                           
  3963 ;; *************** function _Tmr_StartTmr *****************
  3964 ;; Defined at:
  3965 ;;		line 242 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  TmrNumb         1    wreg     unsigned char 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  TmrNumb         1    0[BANK0 ] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  1    wreg      void 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3982 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3983 ;;Total ram usage:        1 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; Hardware stack levels required when called:   11
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_Tmr_TmrBConfig
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text11
  3994  0000'                    __ptext11:
  3995                           	opt stack 0
  3996  0000'                    _Tmr_StartTmr:
  3997                           	opt stack 16
  3998                           
  3999                           ;incstack = 0
  4000                           ;Tmr_StartTmr@TmrNumb stored from wreg
  4001  0000' 0100               	movlb	0	; () banked
  4002  0002' 6F00'              	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  4003                           
  4004                           ;tmr_drv.c: 245: switch (TmrNumb)
  4005  0004' D004               	goto	l420
  4006  0006'                    l421:
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  4010  0006' 84CA               	bsf	4042,2,c	;volatile
  4011                           
  4012                           ;tmr_drv.c: 250: break;
  4013  0008' 0012               	return	
  4014  000A'                    l423:
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  4018  000A' 8476               	bsf	3958,2,c	;volatile
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;tmr_drv.c: 259: }
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;tmr_drv.c: 258: break;
  4025                           
  4026                           ;tmr_drv.c: 257: default:
  4027                           
  4028                           ;tmr_drv.c: 255: break;
  4029  000C' 0012               	return	
  4030  000E'                    l420:
  4031                           
  4032                           ; BSR set to: 0
  4033  000E' 0100               	movlb	0	; () banked
  4034  0010' 5100'              	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  4035                           
  4036                           ; Switch size 1, requested type "space"
  4037                           ; Number of cases is 2, Range of values is 2 to 4
  4038                           ; switch strategies available:
  4039                           ; Name         Instructions Cycles
  4040                           ; simple_byte            7     4 (average)
  4041                           ;	Chosen strategy is simple_byte
  4042  0012' 0A02               	xorlw	2	; case 2
  4043  0014' B4D8               	btfsc	status,2,c
  4044  0016' D7F7               	goto	l421
  4045  0018' 0A06               	xorlw	6	; case 4
  4046  001A' A4D8               	btfss	status,2,c
  4047  001C' 0012               	return	
  4048  001E' D7F5               	goto	l423
  4049  0020'                    __end_of_Tmr_StartTmr:
  4050                           	opt stack 0
  4051                           tblptru	equ	0xFF8
  4052                           tblptrh	equ	0xFF7
  4053                           tblptrl	equ	0xFF6
  4054                           tablat	equ	0xFF5
  4055                           prodh	equ	0xFF4
  4056                           prodl	equ	0xFF3
  4057                           intcon	equ	0xFF2
  4058                           intcon2	equ	0xFF1
  4059                           intcon3	equ	0xFF0
  4060                           postinc0	equ	0xFEE
  4061                           wreg	equ	0xFE8
  4062                           postdec1	equ	0xFE5
  4063                           fsr1l	equ	0xFE1
  4064                           indf2	equ	0xFDF
  4065                           postinc2	equ	0xFDE
  4066                           postdec2	equ	0xFDD
  4067                           fsr2h	equ	0xFDA
  4068                           fsr2l	equ	0xFD9
  4069                           status	equ	0xFD8
  4070                           
  4071 ;; *************** function _TmrBInit *****************
  4072 ;; Defined at:
  4073 ;;		line 72 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
  4074 ;; Parameters:    Size  Location     Type
  4075 ;;  TmrNumb         1    wreg     unsigned char 
  4076 ;;  Prescaler       1    0[BANK0 ] unsigned char 
  4077 ;;  Postscaler      1    1[BANK0 ] unsigned char 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  TmrNumb         1    3[BANK0 ] unsigned char 
  4080 ;; Return value:  Size  Location     Type
  4081 ;;                  1    wreg      void 
  4082 ;; Registers used:
  4083 ;;		wreg, status,2, status,0
  4084 ;; Tracked objects:
  4085 ;;		On entry : 0/0
  4086 ;;		On exit  : 0/0
  4087 ;;		Unchanged: 0/0
  4088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4089 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4090 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4091 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4092 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4093 ;;Total ram usage:        4 bytes
  4094 ;; Hardware stack levels used:    1
  4095 ;; Hardware stack levels required when called:   11
  4096 ;; This function calls:
  4097 ;;		Nothing
  4098 ;; This function is called by:
  4099 ;;		_Tmr_TmrBConfig
  4100 ;; This function uses a non-reentrant model
  4101 ;;
  4102                           
  4103                           	psect	text12
  4104  0000'                    __ptext12:
  4105                           	opt stack 0
  4106  0000'                    _TmrBInit:
  4107                           	opt stack 16
  4108                           
  4109                           ; BSR set to: 0
  4110                           ;incstack = 0
  4111                           ;TmrBInit@TmrNumb stored from wreg
  4112  0000' 0100               	movlb	0	; () banked
  4113  0002' 6F00'              	movwf	TmrBInit@TmrNumb& (0+255),b
  4114                           
  4115                           ;tmr_drv.c: 75: switch (TmrNumb)
  4116  0004' D03F               	goto	l382
  4117  0006'                    l385:
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  4121  0006' 90CA               	bcf	4042,0,c	;volatile
  4122  0008' D001               	goto	L1
  4123  000A'                    l387:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  4127  000A' 80CA               	bsf	4042,0,c	;volatile
  4128  000C'                    L1:
  4129                           
  4130                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  4131  000C' 92CA               	bcf	4042,1,c	;volatile
  4132                           
  4133                           ;tmr_drv.c: 91: break;
  4134  000E' D00E               	goto	l386
  4135  0010'                    l388:
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  4139  0010' 80CA               	bsf	4042,0,c	;volatile
  4140                           
  4141                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  4142  0012' 82CA               	bsf	4042,1,c	;volatile
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;tmr_drv.c: 100: }
  4146                           
  4147                           ; BSR set to: 0
  4148                           ;tmr_drv.c: 99: break;
  4149                           
  4150                           ;tmr_drv.c: 98: default:
  4151                           
  4152                           ;tmr_drv.c: 96: break;
  4153  0014' D00B               	goto	l386
  4154  0016'                    
  4155                           ; BSR set to: 0
  4156  0016' 0100               	movlb	0	; () banked
  4157  0018' 5100'              	movf	TmrBInit@Prescaler& (0+255),w,b
  4158                           
  4159                           ; Switch size 1, requested type "space"
  4160                           ; Number of cases is 3, Range of values is 1 to 16
  4161                           ; switch strategies available:
  4162                           ; Name         Instructions Cycles
  4163                           ; simple_byte           10     6 (average)
  4164                           ;	Chosen strategy is simple_byte
  4165  001A' 0A01               	xorlw	1	; case 1
  4166  001C' B4D8               	btfsc	status,2,c
  4167  001E' D7F3               	goto	l385
  4168  0020' 0A05               	xorlw	5	; case 4
  4169  0022' B4D8               	btfsc	status,2,c
  4170  0024' D7F2               	goto	l387
  4171  0026' 0A14               	xorlw	20	; case 16
  4172  0028' B4D8               	btfsc	status,2,c
  4173  002A' D7F2               	goto	l388
  4174  002C'                    l386:
  4175                           
  4176                           ; BSR set to: 0
  4177                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  4178                           
  4179                           ; BSR set to: 0
  4180  002C' C001' F002'        	movff	TmrBInit@Postscaler,??_TmrBInit
  4181  0030' 0EFF               	movlw	255
  4182  0032' 2700'              	addwf	??_TmrBInit& (0+255),f,b
  4183  0034' 4700'              	rlncf	??_TmrBInit& (0+255),f,b
  4184  0036' 4700'              	rlncf	??_TmrBInit& (0+255),f,b
  4185  0038' 4700'              	rlncf	??_TmrBInit& (0+255),f,b
  4186  003A' 50CA               	movf	4042,w,c	;volatile
  4187  003C' 1900'              	xorwf	??_TmrBInit& (0+255),w,b
  4188  003E' 0B87               	andlw	-121
  4189  0040' 1900'              	xorwf	??_TmrBInit& (0+255),w,b
  4190  0042' 6ECA               	movwf	4042,c	;volatile
  4191                           
  4192                           ;tmr_drv.c: 104: break;
  4193  0044' 0012               	return	
  4194  0046'                    l393:
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  4198  0046' 9076               	bcf	3958,0,c	;volatile
  4199  0048' D001               	goto	L2
  4200  004A'                    l395:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  4204  004A' 8076               	bsf	3958,0,c	;volatile
  4205  004C'                    L2:
  4206                           
  4207                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  4208  004C' 9276               	bcf	3958,1,c	;volatile
  4209                           
  4210                           ;tmr_drv.c: 120: break;
  4211  004E' D00D               	goto	l394
  4212  0050'                    l396:
  4213                           
  4214                           ; BSR set to: 0
  4215                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  4216  0050' 8076               	bsf	3958,0,c	;volatile
  4217                           
  4218                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  4219  0052' 8276               	bsf	3958,1,c	;volatile
  4220                           
  4221                           ; BSR set to: 0
  4222                           ;tmr_drv.c: 129: }
  4223                           
  4224                           ; BSR set to: 0
  4225                           ;tmr_drv.c: 128: break;
  4226                           
  4227                           ;tmr_drv.c: 127: default:
  4228                           
  4229                           ;tmr_drv.c: 125: break;
  4230  0054' D00A               	goto	l394
  4231  0056'                    
  4232                           ; BSR set to: 0
  4233                           
  4234                           ; BSR set to: 0
  4235  0056' 5100'              	movf	TmrBInit@Prescaler& (0+255),w,b
  4236                           
  4237                           ; Switch size 1, requested type "space"
  4238                           ; Number of cases is 3, Range of values is 1 to 16
  4239                           ; switch strategies available:
  4240                           ; Name         Instructions Cycles
  4241                           ; simple_byte           10     6 (average)
  4242                           ;	Chosen strategy is simple_byte
  4243  0058' 0A01               	xorlw	1	; case 1
  4244  005A' B4D8               	btfsc	status,2,c
  4245  005C' D7F4               	goto	l393
  4246  005E' 0A05               	xorlw	5	; case 4
  4247  0060' B4D8               	btfsc	status,2,c
  4248  0062' D7F3               	goto	l395
  4249  0064' 0A14               	xorlw	20	; case 16
  4250  0066' B4D8               	btfsc	status,2,c
  4251  0068' D7F3               	goto	l396
  4252  006A'                    l394:
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  4256                           
  4257                           ; BSR set to: 0
  4258  006A' C001' F002'        	movff	TmrBInit@Postscaler,??_TmrBInit
  4259  006E' 0EFF               	movlw	255
  4260  0070' 2700'              	addwf	??_TmrBInit& (0+255),f,b
  4261  0072' 4700'              	rlncf	??_TmrBInit& (0+255),f,b
  4262  0074' 4700'              	rlncf	??_TmrBInit& (0+255),f,b
  4263  0076' 4700'              	rlncf	??_TmrBInit& (0+255),f,b
  4264  0078' 5076               	movf	3958,w,c	;volatile
  4265  007A' 1900'              	xorwf	??_TmrBInit& (0+255),w,b
  4266  007C' 0B87               	andlw	-121
  4267  007E' 1900'              	xorwf	??_TmrBInit& (0+255),w,b
  4268  0080' 6E76               	movwf	3958,c	;volatile
  4269                           
  4270                           ; BSR set to: 0
  4271                           ;tmr_drv.c: 137: }
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;tmr_drv.c: 136: break;
  4275                           
  4276                           ;tmr_drv.c: 135: default:
  4277                           
  4278                           ;tmr_drv.c: 133: break;
  4279  0082' 0012               	return	
  4280  0084'                    l382:
  4281                           
  4282                           ; BSR set to: 0
  4283  0084' 0100               	movlb	0	; () banked
  4284  0086' 5100'              	movf	TmrBInit@TmrNumb& (0+255),w,b
  4285                           
  4286                           ; Switch size 1, requested type "space"
  4287                           ; Number of cases is 2, Range of values is 2 to 4
  4288                           ; switch strategies available:
  4289                           ; Name         Instructions Cycles
  4290                           ; simple_byte            7     4 (average)
  4291                           ;	Chosen strategy is simple_byte
  4292  0088' 0A02               	xorlw	2	; case 2
  4293  008A' B4D8               	btfsc	status,2,c
  4294  008C' D7C4               	goto	l384
  4295  008E' 0A06               	xorlw	6	; case 4
  4296  0090' A4D8               	btfss	status,2,c
  4297  0092' 0012               	return	
  4298  0094' D7E0               	goto	l392
  4299  0096'                    __end_of_TmrBInit:
  4300                           	opt stack 0
  4301                           tblptru	equ	0xFF8
  4302                           tblptrh	equ	0xFF7
  4303                           tblptrl	equ	0xFF6
  4304                           tablat	equ	0xFF5
  4305                           prodh	equ	0xFF4
  4306                           prodl	equ	0xFF3
  4307                           intcon	equ	0xFF2
  4308                           intcon2	equ	0xFF1
  4309                           intcon3	equ	0xFF0
  4310                           postinc0	equ	0xFEE
  4311                           wreg	equ	0xFE8
  4312                           postdec1	equ	0xFE5
  4313                           fsr1l	equ	0xFE1
  4314                           indf2	equ	0xFDF
  4315                           postinc2	equ	0xFDE
  4316                           postdec2	equ	0xFDD
  4317                           fsr2h	equ	0xFDA
  4318                           fsr2l	equ	0xFD9
  4319                           status	equ	0xFD8
  4320                           
  4321 ;; *************** function _Sch_MainScheduler *****************
  4322 ;; Defined at:
  4323 ;;		line 175 in file "../Source/c/02_Osl/os_sched.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4341 ;;Total ram usage:        0 bytes
  4342 ;; Hardware stack levels used:    1
  4343 ;; Hardware stack levels required when called:   22
  4344 ;; This function calls:
  4345 ;;		_InitializeTasks
  4346 ;;		_ScheduleTasks
  4347 ;; This function is called by:
  4348 ;;		_main
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text13
  4353  0000'                    __ptext13:
  4354                           	opt stack 0
  4355  0000'                    _Sch_MainScheduler:
  4356                           	opt stack 8
  4357                           
  4358                           ;os_sched.c: 178: InitializeTasks();
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;incstack = 0
  4362  0000' EC00' F000'        	call	_InitializeTasks	;wreg free
  4363                           
  4364                           ;os_sched.c: 180: SystemState = RunningState;
  4365  0004' 0E01               	movlw	1
  4366  0006' 0102               	movlb	2	; () banked
  4367  0008' 6F00'              	movwf	_SystemState& (0+255),b
  4368  000A'                    
  4369                           ;os_sched.c: 188: {
  4370                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  4371                           
  4372                           ; BSR set to: 2
  4373  000A' 0101               	movlb	1	; () banked
  4374  000C' 5100'              	movf	_MainSystemTimebaseFlag& (0+255),w,b
  4375  000E' A4D8               	btfss	status,2,c
  4376  0010' D7FC               	goto	l721
  4377                           
  4378                           ; BSR set to: 1
  4379                           ;os_sched.c: 191: {
  4380                           ;os_sched.c: 196: ScheduleTasks();
  4381  0012' EC00' F000'        	call	_ScheduleTasks	;wreg free
  4382                           
  4383                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  4384  0016' 0E01               	movlw	1
  4385  0018' 0101               	movlb	1	; () banked
  4386  001A' 6F00'              	movwf	_MainSystemTimebaseFlag& (0+255),b
  4387                           
  4388                           ; BSR set to: 1
  4389                           
  4390                           ; BSR set to: 1
  4391  001C' D7F6               	goto	l721
  4392  001E'                    __end_of_Sch_MainScheduler:
  4393                           	opt stack 0
  4394                           tblptru	equ	0xFF8
  4395                           tblptrh	equ	0xFF7
  4396                           tblptrl	equ	0xFF6
  4397                           tablat	equ	0xFF5
  4398                           prodh	equ	0xFF4
  4399                           prodl	equ	0xFF3
  4400                           intcon	equ	0xFF2
  4401                           intcon2	equ	0xFF1
  4402                           intcon3	equ	0xFF0
  4403                           postinc0	equ	0xFEE
  4404                           wreg	equ	0xFE8
  4405                           postdec1	equ	0xFE5
  4406                           fsr1l	equ	0xFE1
  4407                           indf2	equ	0xFDF
  4408                           postinc2	equ	0xFDE
  4409                           postdec2	equ	0xFDD
  4410                           fsr2h	equ	0xFDA
  4411                           fsr2l	equ	0xFD9
  4412                           status	equ	0xFD8
  4413                           
  4414 ;; *************** function _ScheduleTasks *****************
  4415 ;; Defined at:
  4416 ;;		line 99 in file "../Source/c/02_Osl/os_sched.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;		None
  4419 ;; Auto vars:     Size  Location     Type
  4420 ;;  ActiveTaskIn    1  200[BANK1 ] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      void 
  4423 ;; Registers used:
  4424 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4431 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4432 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4433 ;;      Totals:         0       4       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4434 ;;Total ram usage:        5 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:   21
  4437 ;; This function calls:
  4438 ;;		_I2cSlv_MainTask
  4439 ;;		_Led_MainTask
  4440 ;;		_MdmWifiCmd_MainTask
  4441 ;;		_MdmWifiHttp_MainTask
  4442 ;;		_MdmWifi_DrvMainFn
  4443 ;;		_MdmWifi_MainTask
  4444 ;;		_Rtcm_MainTask
  4445 ;;		_Term_MainTask
  4446 ;;		_UsbDevice_MainTask
  4447 ;; This function is called by:
  4448 ;;		_Sch_MainScheduler
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text14
  4453  0000'                    __ptext14:
  4454                           	opt stack 0
  4455  0000'                    _ScheduleTasks:
  4456                           	opt stack 8
  4457                           
  4458                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  4459                           
  4460                           ; BSR set to: 1
  4461                           ;incstack = 0
  4462  0000' 0E00               	movlw	0
  4463  0002' 0101               	movlb	1	; () banked
  4464  0004' 6F00'              	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4465                           
  4466                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  4467  0006' 0E00               	movlw	0
  4468  0008' 6F00'              	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  4469  000A'                    l9333:
  4470                           
  4471                           ; BSR set to: 1
  4472  000A' 0E00'              	movlw	low _TaskNumber
  4473  000C' 6EF6               	movwf	tblptrl,c
  4474  000E'                    	if	1	;There is more than 1 active tblptr byte
  4475  000E' 0E00'              	movlw	high _TaskNumber
  4476  0010' 6EF7               	movwf	tblptrh,c
  4477  0012'                    	endif
  4478  0012'                    	if	1	;There are 3 active tblptr bytes
  4479  0012' 0E00'              	movlw	low (_TaskNumber shr (0+16))
  4480  0014' 6EF8               	movwf	tblptru,c
  4481  0016'                    	endif
  4482  0016' 5100'              	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4483  0018' 0100               	movlb	0	; () banked
  4484  001A' 6F00'              	movwf	??_ScheduleTasks& (0+255),b
  4485  001C' 6B00'              	clrf	(??_ScheduleTasks+1)& (0+255),b
  4486  001E' 0009               	tblrd		*+
  4487  0020' 50F5               	movf	tablat,w,c
  4488  0022' 5D00'              	subwf	??_ScheduleTasks& (0+255),w,b
  4489  0024' 0009               	tblrd		*+
  4490  0026' 50F5               	movf	tablat,w,c
  4491  0028' 5900'              	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  4492  002A' B0D8               	btfsc	status,0,c
  4493  002C' 0012               	return	
  4494                           
  4495                           ; BSR set to: 0
  4496                           ;os_sched.c: 106: {
  4497                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  4498                           
  4499                           ; BSR set to: 0
  4500                           
  4501                           ; BSR set to: 0
  4502  002E' 0101               	movlb	1	; () banked
  4503  0030' 5100'              	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4504  0032' 0D08               	mullw	8
  4505  0034' 0E03               	movlw	3
  4506  0036' 26F3               	addwf	prodl,f,c
  4507  0038' 0E00               	movlw	0
  4508  003A' 22F4               	addwfc	prodh,f,c
  4509  003C' 0E00'              	movlw	low _TaskTable
  4510  003E' 24F3               	addwf	prodl,w,c
  4511  0040' 6ED9               	movwf	fsr2l,c
  4512  0042' 0E00'              	movlw	high _TaskTable
  4513  0044' 20F4               	addwfc	prodh,w,c
  4514  0046' 6EDA               	movwf	fsr2h,c
  4515  0048' 2ADE               	incf	postinc2,f,c
  4516  004A' 0E00               	movlw	0
  4517  004C' 22DD               	addwfc	postdec2,f,c
  4518                           
  4519                           ; BSR set to: 1
  4520                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  4521  004E' 5100'              	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4522  0050' 0D08               	mullw	8
  4523  0052' 0E05               	movlw	5
  4524  0054' 26F3               	addwf	prodl,f,c
  4525  0056' 0E00               	movlw	0
  4526  0058' 22F4               	addwfc	prodh,f,c
  4527  005A' 0E00'              	movlw	low _TaskTable
  4528  005C' 24F3               	addwf	prodl,w,c
  4529  005E' 6ED9               	movwf	fsr2l,c
  4530  0060' 0E00'              	movlw	high _TaskTable
  4531  0062' 20F4               	addwfc	prodh,w,c
  4532  0064' 6EDA               	movwf	fsr2h,c
  4533  0066' 5100'              	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4534  0068' 0D08               	mullw	8
  4535  006A' 0E03               	movlw	3
  4536  006C' 26F3               	addwf	prodl,f,c
  4537  006E' 0E00               	movlw	0
  4538  0070' 22F4               	addwfc	prodh,f,c
  4539  0072' 0E00'              	movlw	low _TaskTable
  4540  0074' 24F3               	addwf	prodl,w,c
  4541  0076' 6EE1               	movwf	fsr1l,c
  4542  0078' 0E00'              	movlw	high _TaskTable
  4543  007A' 20F4               	addwfc	prodh,w,c
  4544  007C' 6EE2               	movwf	fsr1h,c
  4545  007E' 50DE               	movf	postinc2,w,c
  4546  0080' 5CE6               	subwf	postinc1,w,c
  4547  0082' 50DE               	movf	postinc2,w,c
  4548  0084' 58E6               	subwfb	postinc1,w,c
  4549  0086' A0D8               	btfss	status,0,c
  4550  0088' D053               	goto	l706
  4551                           
  4552                           ; BSR set to: 1
  4553                           ;os_sched.c: 111: {
  4554                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  4555  008A' 5100'              	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4556  008C' 0D08               	mullw	8
  4557  008E' 0E03               	movlw	3
  4558  0090' 26F3               	addwf	prodl,f,c
  4559  0092' 0E00               	movlw	0
  4560  0094' 22F4               	addwfc	prodh,f,c
  4561  0096' 0E00'              	movlw	low _TaskTable
  4562  0098' 24F3               	addwf	prodl,w,c
  4563  009A' 6ED9               	movwf	fsr2l,c
  4564  009C' 0E00'              	movlw	high _TaskTable
  4565  009E' 20F4               	addwfc	prodh,w,c
  4566  00A0' 6EDA               	movwf	fsr2h,c
  4567  00A2' 0E00               	movlw	0
  4568  00A4' 6EDE               	movwf	postinc2,c
  4569  00A6' 0E00               	movlw	0
  4570  00A8' 6EDD               	movwf	postdec2,c
  4571                           
  4572                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  4573  00AA' 5100'              	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4574  00AC' 0D08               	mullw	8
  4575  00AE' 0E02               	movlw	2
  4576  00B0' 26F3               	addwf	prodl,f,c
  4577  00B2' 0E00               	movlw	0
  4578  00B4' 22F4               	addwfc	prodh,f,c
  4579  00B6' 0E00'              	movlw	low _TaskTable
  4580  00B8' 24F3               	addwf	prodl,w,c
  4581  00BA' 6ED9               	movwf	fsr2l,c
  4582  00BC' 0E00'              	movlw	high _TaskTable
  4583  00BE' 20F4               	addwfc	prodh,w,c
  4584  00C0' 6EDA               	movwf	fsr2h,c
  4585  00C2' 0E01               	movlw	1
  4586  00C4' 6EDF               	movwf	indf2,c
  4587                           
  4588                           ; BSR set to: 1
  4589                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4590  00C6' 5100'              	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4591  00C8' 0D08               	mullw	8
  4592  00CA' 0E00'              	movlw	low _TaskTable
  4593  00CC' 24F3               	addwf	prodl,w,c
  4594  00CE' 6ED9               	movwf	fsr2l,c
  4595  00D0' 0E00'              	movlw	high _TaskTable
  4596  00D2' 20F4               	addwfc	prodh,w,c
  4597  00D4' 6EDA               	movwf	fsr2h,c
  4598  00D6' CFDE F09C'         	movff	postinc2,??_ScheduleTasks
  4599  00DA' CFDD F09D'         	movff	postdec2,??_ScheduleTasks+1
  4600  00DE' D801               	call	u8028
  4601  00E0' D018               	goto	u8029
  4602  00E2'                    u8028:
  4603  00E2' 0005               	push	
  4604  00E4' 6EFA               	movwf	pclath,c
  4605  00E6' 0100               	movlb	0	; () banked
  4606  00E8' 5100'              	movf	??_ScheduleTasks& (0+255),w,b
  4607  00EA' 6EFD               	movwf	tosl,c
  4608  00EC' 5100'              	movf	(??_ScheduleTasks+1)& (0+255),w,b
  4609  00EE' 6EFE               	movwf	tosh,c
  4610  00F0' 6AFF               	clrf	tosu,c
  4611  00F2' 50FA               	movf	pclath,w,c
  4612  00F4' 0101               	movlb	1	; () banked
  4613  00F6' 5100'              	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4614  00F8' 0D08               	mullw	8
  4615  00FA' 0E07               	movlw	7
  4616  00FC' 26F3               	addwf	prodl,f,c
  4617  00FE' 0E00               	movlw	0
  4618  0100' 22F4               	addwfc	prodh,f,c
  4619  0102' 0E00'              	movlw	low _TaskTable
  4620  0104' 24F3               	addwf	prodl,w,c
  4621  0106' 6ED9               	movwf	fsr2l,c
  4622  0108' 0E00'              	movlw	high _TaskTable
  4623  010A' 20F4               	addwfc	prodh,w,c
  4624  010C' 6EDA               	movwf	fsr2h,c
  4625  010E' 50DF               	movf	indf2,w,c
  4626  0110' 0012               	return		;indir
  4627  0112'                    u8029:
  4628                           
  4629                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  4630  0112' 0101               	movlb	1	; () banked
  4631  0114' 5100'              	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4632  0116' 0D08               	mullw	8
  4633  0118' 0E02               	movlw	2
  4634  011A' 26F3               	addwf	prodl,f,c
  4635  011C' 0E00               	movlw	0
  4636  011E' 22F4               	addwfc	prodh,f,c
  4637  0120' 0E00'              	movlw	low _TaskTable
  4638  0122' 24F3               	addwf	prodl,w,c
  4639  0124' 6ED9               	movwf	fsr2l,c
  4640  0126' 0E00'              	movlw	high _TaskTable
  4641  0128' 20F4               	addwfc	prodh,w,c
  4642  012A' 6EDA               	movwf	fsr2h,c
  4643  012C' 0E00               	movlw	0
  4644  012E' 6EDF               	movwf	indf2,c
  4645  0130'                    l706:
  4646                           
  4647                           ; BSR set to: 1
  4648                           
  4649                           ; BSR set to: 1
  4650                           
  4651                           ;os_sched.c: 117: else
  4652                           ;os_sched.c: 118: {
  4653                           
  4654                           ; BSR set to: 1
  4655  0130' 2B00'              	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  4656  0132' D76B               	goto	l9333
  4657  0134'                    __end_of_ScheduleTasks:
  4658                           	opt stack 0
  4659                           tosu	equ	0xFFF
  4660                           tosh	equ	0xFFE
  4661                           tosl	equ	0xFFD
  4662                           pclath	equ	0xFFA
  4663                           tblptru	equ	0xFF8
  4664                           tblptrh	equ	0xFF7
  4665                           tblptrl	equ	0xFF6
  4666                           tablat	equ	0xFF5
  4667                           prodh	equ	0xFF4
  4668                           prodl	equ	0xFF3
  4669                           intcon	equ	0xFF2
  4670                           intcon2	equ	0xFF1
  4671                           intcon3	equ	0xFF0
  4672                           postinc0	equ	0xFEE
  4673                           wreg	equ	0xFE8
  4674                           postinc1	equ	0xFE6
  4675                           postdec1	equ	0xFE5
  4676                           fsr1h	equ	0xFE2
  4677                           fsr1l	equ	0xFE1
  4678                           indf2	equ	0xFDF
  4679                           postinc2	equ	0xFDE
  4680                           postdec2	equ	0xFDD
  4681                           fsr2h	equ	0xFDA
  4682                           fsr2l	equ	0xFD9
  4683                           status	equ	0xFD8
  4684                           
  4685 ;; *************** function _InitializeTasks *****************
  4686 ;; Defined at:
  4687 ;;		line 79 in file "../Source/c/02_Osl/os_sched.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;		None
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  ActiveTaskIn    1  158[BANK0 ] unsigned char 
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      void 
  4694 ;; Registers used:
  4695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4702 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4703 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4704 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4705 ;;Total ram usage:        3 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; Hardware stack levels required when called:   21
  4708 ;; This function calls:
  4709 ;;		_I2cSlv_MainTask
  4710 ;;		_Led_MainTask
  4711 ;;		_MdmWifiCmd_MainTask
  4712 ;;		_MdmWifiHttp_MainTask
  4713 ;;		_MdmWifi_DrvMainFn
  4714 ;;		_MdmWifi_MainTask
  4715 ;;		_Rtcm_MainTask
  4716 ;;		_Term_MainTask
  4717 ;;		_UsbDevice_MainTask
  4718 ;; This function is called by:
  4719 ;;		_Sch_MainScheduler
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text15
  4724  0000'                    __ptext15:
  4725                           	opt stack 0
  4726  0000'                    _InitializeTasks:
  4727                           	opt stack 8
  4728                           
  4729                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  4730                           
  4731                           ; BSR set to: 0
  4732                           ;incstack = 0
  4733  0000' 0E00               	movlw	0
  4734  0002' 0100               	movlb	0	; () banked
  4735  0004' 6F00'              	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4736                           
  4737                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  4738  0006' 0E00               	movlw	0
  4739  0008' 6F00'              	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4740  000A'                    l9321:
  4741                           
  4742                           ; BSR set to: 0
  4743  000A' 0E00'              	movlw	low _TaskNumber
  4744  000C' 6EF6               	movwf	tblptrl,c
  4745  000E'                    	if	1	;There is more than 1 active tblptr byte
  4746  000E' 0E00'              	movlw	high _TaskNumber
  4747  0010' 6EF7               	movwf	tblptrh,c
  4748  0012'                    	endif
  4749  0012'                    	if	1	;There are 3 active tblptr bytes
  4750  0012' 0E00'              	movlw	low (_TaskNumber shr (0+16))
  4751  0014' 6EF8               	movwf	tblptru,c
  4752  0016'                    	endif
  4753  0016' 5100'              	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4754  0018' 6F00'              	movwf	??_InitializeTasks& (0+255),b
  4755  001A' 6B00'              	clrf	(??_InitializeTasks+1)& (0+255),b
  4756  001C' 0009               	tblrd		*+
  4757  001E' 50F5               	movf	tablat,w,c
  4758  0020' 5D00'              	subwf	??_InitializeTasks& (0+255),w,b
  4759  0022' 0009               	tblrd		*+
  4760  0024' 50F5               	movf	tablat,w,c
  4761  0026' 5900'              	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  4762  0028' B0D8               	btfsc	status,0,c
  4763  002A' 0012               	return	
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;os_sched.c: 86: {
  4767                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4768                           
  4769                           ; BSR set to: 0
  4770                           
  4771                           ; BSR set to: 0
  4772  002C' 5100'              	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4773  002E' 0D08               	mullw	8
  4774  0030' 0E00'              	movlw	low _TaskTable
  4775  0032' 24F3               	addwf	prodl,w,c
  4776  0034' 6ED9               	movwf	fsr2l,c
  4777  0036' 0E00'              	movlw	high _TaskTable
  4778  0038' 20F4               	addwfc	prodh,w,c
  4779  003A' 6EDA               	movwf	fsr2h,c
  4780  003C' CFDE F09C'         	movff	postinc2,??_InitializeTasks
  4781  0040' CFDD F09D'         	movff	postdec2,??_InitializeTasks+1
  4782  0044' D801               	call	u7988
  4783  0046' D016               	goto	u7989
  4784  0048'                    u7988:
  4785  0048' 0005               	push	
  4786  004A' 6EFA               	movwf	pclath,c
  4787  004C' 5100'              	movf	??_InitializeTasks& (0+255),w,b
  4788  004E' 6EFD               	movwf	tosl,c
  4789  0050' 5100'              	movf	(??_InitializeTasks+1)& (0+255),w,b
  4790  0052' 6EFE               	movwf	tosh,c
  4791  0054' 6AFF               	clrf	tosu,c
  4792  0056' 50FA               	movf	pclath,w,c
  4793  0058' 5100'              	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4794  005A' 0D08               	mullw	8
  4795  005C' 0E07               	movlw	7
  4796  005E' 26F3               	addwf	prodl,f,c
  4797  0060' 0E00               	movlw	0
  4798  0062' 22F4               	addwfc	prodh,f,c
  4799  0064' 0E00'              	movlw	low _TaskTable
  4800  0066' 24F3               	addwf	prodl,w,c
  4801  0068' 6ED9               	movwf	fsr2l,c
  4802  006A' 0E00'              	movlw	high _TaskTable
  4803  006C' 20F4               	addwfc	prodh,w,c
  4804  006E' 6EDA               	movwf	fsr2h,c
  4805  0070' 50DF               	movf	indf2,w,c
  4806  0072' 0012               	return		;indir
  4807  0074'                    u7989:
  4808  0074' 0100               	movlb	0	; () banked
  4809  0076' 2B00'              	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  4810  0078' D7C8               	goto	l9321
  4811  007A'                    __end_of_InitializeTasks:
  4812                           	opt stack 0
  4813                           tosu	equ	0xFFF
  4814                           tosh	equ	0xFFE
  4815                           tosl	equ	0xFFD
  4816                           pclath	equ	0xFFA
  4817                           tblptru	equ	0xFF8
  4818                           tblptrh	equ	0xFF7
  4819                           tblptrl	equ	0xFF6
  4820                           tablat	equ	0xFF5
  4821                           prodh	equ	0xFF4
  4822                           prodl	equ	0xFF3
  4823                           intcon	equ	0xFF2
  4824                           intcon2	equ	0xFF1
  4825                           intcon3	equ	0xFF0
  4826                           postinc0	equ	0xFEE
  4827                           wreg	equ	0xFE8
  4828                           postinc1	equ	0xFE6
  4829                           postdec1	equ	0xFE5
  4830                           fsr1h	equ	0xFE2
  4831                           fsr1l	equ	0xFE1
  4832                           indf2	equ	0xFDF
  4833                           postinc2	equ	0xFDE
  4834                           postdec2	equ	0xFDD
  4835                           fsr2h	equ	0xFDA
  4836                           fsr2l	equ	0xFD9
  4837                           status	equ	0xFD8
  4838                           
  4839 ;; *************** function _Term_MainTask *****************
  4840 ;; Defined at:
  4841 ;;		line 815 in file "../Source/c/03_Sml/02_Ssl/term.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  Options         1    wreg     unsigned char 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  Options         1    0[COMRAM] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4859 ;;Total ram usage:        0 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:   16
  4862 ;; This function calls:
  4863 ;;		_Term_MainSm
  4864 ;; This function is called by:
  4865 ;;		_InitializeTasks
  4866 ;;		_ScheduleTasks
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           	psect	text16
  4871  0000'                    __ptext16:
  4872                           	opt stack 0
  4873  0000'                    _Term_MainTask:
  4874                           	opt stack 12
  4875                           
  4876                           ;term.c: 817: switch (SystemState)
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;incstack = 0
  4880  0000' D003               	goto	l2176
  4881  0002'                    
  4882                           ;term.c: 828: Term_MainSm();
  4883  0002' EC00' F000'        	call	_Term_MainSm
  4884                           
  4885                           ;term.c: 835: }
  4886                           
  4887                           ;term.c: 834: break;
  4888                           
  4889                           ;term.c: 833: default:
  4890                           
  4891                           ;term.c: 830: break;
  4892  0006' 0012               	return	
  4893  0008'                    l2176:
  4894  0008' 0102               	movlb	2	; () banked
  4895  000A' 5100'              	movf	_SystemState& (0+255),w,b
  4896                           
  4897                           ; Switch size 1, requested type "space"
  4898                           ; Number of cases is 2, Range of values is 0 to 1
  4899                           ; switch strategies available:
  4900                           ; Name         Instructions Cycles
  4901                           ; simple_byte            7     4 (average)
  4902                           ;	Chosen strategy is simple_byte
  4903  000C' 0A00               	xorlw	0	; case 0
  4904  000E' B4D8               	btfsc	status,2,c
  4905  0010' 0012               	return	
  4906  0012' 0A01               	xorlw	1	; case 1
  4907  0014' A4D8               	btfss	status,2,c
  4908  0016' 0012               	return	
  4909  0018' D7F4               	goto	l2179
  4910  001A'                    __end_of_Term_MainTask:
  4911                           	opt stack 0
  4912                           tosu	equ	0xFFF
  4913                           tosh	equ	0xFFE
  4914                           tosl	equ	0xFFD
  4915                           pclath	equ	0xFFA
  4916                           tblptru	equ	0xFF8
  4917                           tblptrh	equ	0xFF7
  4918                           tblptrl	equ	0xFF6
  4919                           tablat	equ	0xFF5
  4920                           prodh	equ	0xFF4
  4921                           prodl	equ	0xFF3
  4922                           intcon	equ	0xFF2
  4923                           intcon2	equ	0xFF1
  4924                           intcon3	equ	0xFF0
  4925                           postinc0	equ	0xFEE
  4926                           wreg	equ	0xFE8
  4927                           postinc1	equ	0xFE6
  4928                           postdec1	equ	0xFE5
  4929                           fsr1h	equ	0xFE2
  4930                           fsr1l	equ	0xFE1
  4931                           indf2	equ	0xFDF
  4932                           postinc2	equ	0xFDE
  4933                           postdec2	equ	0xFDD
  4934                           fsr2h	equ	0xFDA
  4935                           fsr2l	equ	0xFD9
  4936                           status	equ	0xFD8
  4937                           
  4938 ;; *************** function _Rtcm_MainTask *****************
  4939 ;; Defined at:
  4940 ;;		line 99 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
  4941 ;; Parameters:    Size  Location     Type
  4942 ;;  Options         1    wreg     unsigned char 
  4943 ;; Auto vars:     Size  Location     Type
  4944 ;;  Options         1    0[COMRAM] unsigned char 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  1    wreg      void 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4958 ;;Total ram usage:        0 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:   14
  4961 ;; This function calls:
  4962 ;;		_Rtcc_AlarmConfig
  4963 ;;		_Rtcc_LockRtc
  4964 ;;		_Rtcc_RtcConfig
  4965 ;;		_Rtcc_SetRtcStatus
  4966 ;;		_Rtcc_UnlockRtc
  4967 ;;		_Rtcm_GetRtccDate
  4968 ;;		_Rtcm_SetRtccDate
  4969 ;; This function is called by:
  4970 ;;		_InitializeTasks
  4971 ;;		_ScheduleTasks
  4972 ;; This function uses a non-reentrant model
  4973 ;;
  4974                           
  4975                           	psect	text17
  4976  0000'                    __ptext17:
  4977                           	opt stack 0
  4978  0000'                    _Rtcm_MainTask:
  4979                           	opt stack 14
  4980                           
  4981                           ;rtcm.c: 101: switch (SystemState)
  4982                           
  4983                           ;incstack = 0
  4984  0000' D03D               	goto	l1925
  4985  0002'                    l1926:
  4986                           
  4987                           ; BSR set to: 2
  4988                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  4989  0002' 86CD               	bsf	4045,3,c	;volatile
  4990                           
  4991                           ; BSR set to: 2
  4992                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  4993  0004' 0E00               	movlw	0
  4994  0006' 0103               	movlb	3	; () banked
  4995  0008' 6F00'              	movwf	_RtcConfig& (0+255),b
  4996                           
  4997                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  4998  000A' 0E00               	movlw	0
  4999  000C' 6F00'              	movwf	(_RtcConfig+1)& (0+255),b
  5000                           
  5001                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  5002  000E' 0E01               	movlw	1
  5003  0010' 6F00'              	movwf	(_RtcConfig+2)& (0+255),b
  5004                           
  5005                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  5006  0012' 0E01               	movlw	1
  5007  0014' 6F00'              	movwf	(_RtcConfig+3)& (0+255),b
  5008                           
  5009                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  5010  0016' 0E01               	movlw	1
  5011  0018' 6F00'              	movwf	_AlCfg& (0+255),b
  5012                           
  5013                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  5014  001A' 0E01               	movlw	1
  5015  001C' 6F00'              	movwf	(_AlCfg+1)& (0+255),b
  5016                           
  5017                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  5018  001E' 0E01               	movlw	1
  5019  0020' 6F00'              	movwf	(_AlCfg+2)& (0+255),b
  5020                           
  5021                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  5022  0022' 0E00               	movlw	0
  5023  0024' 6F00'              	movwf	(_AlCfg+3)& (0+255),b
  5024                           
  5025                           ; BSR set to: 3
  5026                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  5027  0026' EC00' F000'        	call	_Rtcc_UnlockRtc	;wreg free
  5028                           
  5029                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  5030  002A' 0E00'              	movlw	low _RtcConfig
  5031  002C' 0100               	movlb	0	; () banked
  5032  002E' 6F00'              	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  5033  0030' 0E00'              	movlw	high _RtcConfig
  5034  0032' 6F00'              	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  5035  0034' EC00' F000'        	call	_Rtcc_RtcConfig	;wreg free
  5036                           
  5037                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  5038  0038' 0E00'              	movlw	low _AlCfg
  5039  003A' 0100               	movlb	0	; () banked
  5040  003C' 6F00'              	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  5041  003E' 0E00'              	movlw	high _AlCfg
  5042  0040' 6F00'              	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  5043  0042' EC00' F000'        	call	_Rtcc_AlarmConfig	;wreg free
  5044                           
  5045                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  5046  0046' 0E01               	movlw	1
  5047  0048' EC00' F000'        	call	_Rtcc_SetRtcStatus
  5048                           
  5049                           ;rtcm.c: 127: Rtcc_LockRtc();
  5050  004C' EC00' F000'        	call	_Rtcc_LockRtc	;wreg free
  5051                           
  5052                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  5053  0050' EE20' F000'        	lfsr	2,_Rtcm_SystemDate
  5054  0054' EE00' F000'        	lfsr	0,Rtcm_SetRtccDate@Date
  5055  0058' 0E07               	movlw	7
  5056  005A'                    u7881:
  5057  005A' CFDB FFEB          	movff	plusw2,plusw0
  5058  005E' 06E8               	decf	wreg,f,c
  5059  0060' E2FC               	bc	u7881
  5060  0062' EC00' F000'        	call	_Rtcm_SetRtccDate	;wreg free
  5061                           
  5062                           ;rtcm.c: 154: break;
  5063  0066' 0012               	return	
  5064  0068'                    
  5065                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  5066  0068' EC00' F000'        	call	_Rtcm_GetRtccDate	;wreg free
  5067  006C' EE20' F000'        	lfsr	2,_Rtcm_SystemDate
  5068  0070' 0E07               	movlw	7
  5069  0072'                    u7891:
  5070  0072' CFEB FFDB          	movff	plusw0,plusw2
  5071  0076' 06E8               	decf	wreg,f,c
  5072  0078' E2FC               	bc	u7891
  5073                           
  5074                           ;rtcm.c: 165: }
  5075                           
  5076                           ;rtcm.c: 164: break;
  5077                           
  5078                           ;rtcm.c: 163: default:
  5079                           
  5080                           ;rtcm.c: 160: break;
  5081  007A' 0012               	return	
  5082  007C'                    l1925:
  5083  007C' 0102               	movlb	2	; () banked
  5084  007E' 5100'              	movf	_SystemState& (0+255),w,b
  5085                           
  5086                           ; Switch size 1, requested type "space"
  5087                           ; Number of cases is 2, Range of values is 0 to 1
  5088                           ; switch strategies available:
  5089                           ; Name         Instructions Cycles
  5090                           ; simple_byte            7     4 (average)
  5091                           ;	Chosen strategy is simple_byte
  5092  0080' 0A00               	xorlw	0	; case 0
  5093  0082' B4D8               	btfsc	status,2,c
  5094  0084' D7BE               	goto	l1926
  5095  0086' 0A01               	xorlw	1	; case 1
  5096  0088' A4D8               	btfss	status,2,c
  5097  008A' 0012               	return	
  5098  008C' D7ED               	goto	l1928
  5099  008E'                    __end_of_Rtcm_MainTask:
  5100                           	opt stack 0
  5101                           tosu	equ	0xFFF
  5102                           tosh	equ	0xFFE
  5103                           tosl	equ	0xFFD
  5104                           pclath	equ	0xFFA
  5105                           tblptru	equ	0xFF8
  5106                           tblptrh	equ	0xFF7
  5107                           tblptrl	equ	0xFF6
  5108                           tablat	equ	0xFF5
  5109                           prodh	equ	0xFF4
  5110                           prodl	equ	0xFF3
  5111                           intcon	equ	0xFF2
  5112                           intcon2	equ	0xFF1
  5113                           intcon3	equ	0xFF0
  5114                           postinc0	equ	0xFEE
  5115                           plusw0	equ	0xFEB
  5116                           wreg	equ	0xFE8
  5117                           postinc1	equ	0xFE6
  5118                           postdec1	equ	0xFE5
  5119                           fsr1h	equ	0xFE2
  5120                           fsr1l	equ	0xFE1
  5121                           indf2	equ	0xFDF
  5122                           postinc2	equ	0xFDE
  5123                           postdec2	equ	0xFDD
  5124                           plusw2	equ	0xFDB
  5125                           fsr2h	equ	0xFDA
  5126                           fsr2l	equ	0xFD9
  5127                           status	equ	0xFD8
  5128                           
  5129 ;; *************** function _Led_MainTask *****************
  5130 ;; Defined at:
  5131 ;;		line 278 in file "../Source/c/03_Sml/02_Ssl/led.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  Options         1    wreg     unsigned char 
  5134 ;; Auto vars:     Size  Location     Type
  5135 ;;  Options         1    0[COMRAM] unsigned char 
  5136 ;; Return value:  Size  Location     Type
  5137 ;;                  1    wreg      void 
  5138 ;; Registers used:
  5139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5140 ;; Tracked objects:
  5141 ;;		On entry : 0/0
  5142 ;;		On exit  : 0/0
  5143 ;;		Unchanged: 0/0
  5144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5147 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5148 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5149 ;;Total ram usage:        1 bytes
  5150 ;; Hardware stack levels used:    1
  5151 ;; Hardware stack levels required when called:   14
  5152 ;; This function calls:
  5153 ;;		_LedStateMachine
  5154 ;; This function is called by:
  5155 ;;		_InitializeTasks
  5156 ;;		_ScheduleTasks
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160                           	psect	text18
  5161  0000'                    __ptext18:
  5162                           	opt stack 0
  5163  0000'                    _Led_MainTask:
  5164                           	opt stack 14
  5165                           
  5166                           ;led.c: 280: switch (SystemState)
  5167                           
  5168                           ;incstack = 0
  5169  0000' D051               	goto	l1839
  5170  0002'                    l1840:
  5171                           
  5172                           ; BSR set to: 2
  5173                           ;led.c: 285: TRISDbits.TRISD4 = ((UINT8)(0));
  5174  0002' 9895               	bcf	3989,4,c	;volatile
  5175                           
  5176                           ;led.c: 286: TRISDbits.TRISD5 = ((UINT8)(0));
  5177  0004' 9A95               	bcf	3989,5,c	;volatile
  5178                           
  5179                           ;led.c: 287: TRISDbits.TRISD6 = ((UINT8)(0));
  5180  0006' 9C95               	bcf	3989,6,c	;volatile
  5181                           
  5182                           ;led.c: 288: PORTDbits.RD4 = ((UINT8)(0));
  5183  0008' 9883               	bcf	3971,4,c	;volatile
  5184                           
  5185                           ;led.c: 289: PORTDbits.RD5 = ((UINT8)(0));
  5186  000A' 9A83               	bcf	3971,5,c	;volatile
  5187                           
  5188                           ;led.c: 290: PORTDbits.RD6 = ((UINT8)(0));
  5189  000C' 9C83               	bcf	3971,6,c	;volatile
  5190                           
  5191                           ;led.c: 291: break;
  5192  000E' 0012               	return	
  5193  0010'                    
  5194                           ; BSR set to: 2
  5195                           ;led.c: 296: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1Blink,&Led1Pulse);
  5196                           
  5197                           ; BSR set to: 2
  5198  0010' 0E00'              	movlw	low _Led1Sts
  5199  0012' 0100               	movlb	0	; () banked
  5200  0014' 6F00'              	movwf	LedStateMachine@LedSts& (0+255),b
  5201  0016' 0E00'              	movlw	high _Led1Sts
  5202  0018' 6F00'              	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5203  001A' 0E00'              	movlw	low _Led1Blink
  5204  001C' 6F00'              	movwf	LedStateMachine@LedBlink& (0+255),b
  5205  001E' 0E00'              	movlw	high _Led1Blink
  5206  0020' 6F00'              	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  5207  0022' 0E00'              	movlw	low _Led1Pulse
  5208  0024' 6F00'              	movwf	LedStateMachine@LedPulse& (0+255),b
  5209  0026' 0E00'              	movlw	high _Led1Pulse
  5210  0028' 6F00'              	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  5211  002A' 0E01               	movlw	1
  5212  002C' EC00' F000'        	call	_LedStateMachine
  5213  0030' 0100               	movlb	0	; () banked
  5214  0032' 6F00'              	movwf	??_Led_MainTask& (0+255),b
  5215  0034' 3B00'              	swapf	??_Led_MainTask& (0+255),f,b
  5216  0036' 5083               	movf	3971,w,c	;volatile
  5217  0038' 1900'              	xorwf	??_Led_MainTask& (0+255),w,b
  5218  003A' 0BEF               	andlw	-17
  5219  003C' 1900'              	xorwf	??_Led_MainTask& (0+255),w,b
  5220  003E' 6E83               	movwf	3971,c	;volatile
  5221                           
  5222                           ;led.c: 298: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2Blink,&Led2Pulse);
  5223  0040' 0E00'              	movlw	low _Led2Sts
  5224  0042' 6F00'              	movwf	LedStateMachine@LedSts& (0+255),b
  5225  0044' 0E00'              	movlw	high _Led2Sts
  5226  0046' 6F00'              	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5227  0048' 0E00'              	movlw	low _Led2Blink
  5228  004A' 6F00'              	movwf	LedStateMachine@LedBlink& (0+255),b
  5229  004C' 0E00'              	movlw	high _Led2Blink
  5230  004E' 6F00'              	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  5231  0050' 0E00'              	movlw	low _Led2Pulse
  5232  0052' 6F00'              	movwf	LedStateMachine@LedPulse& (0+255),b
  5233  0054' 0E00'              	movlw	high _Led2Pulse
  5234  0056' 6F00'              	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  5235  0058' 0E02               	movlw	2
  5236  005A' EC00' F000'        	call	_LedStateMachine
  5237  005E' 0100               	movlb	0	; () banked
  5238  0060' 6F00'              	movwf	??_Led_MainTask& (0+255),b
  5239  0062' 3B00'              	swapf	??_Led_MainTask& (0+255),f,b
  5240  0064' 4700'              	rlncf	??_Led_MainTask& (0+255),f,b
  5241  0066' 5083               	movf	3971,w,c	;volatile
  5242  0068' 1900'              	xorwf	??_Led_MainTask& (0+255),w,b
  5243  006A' 0BDF               	andlw	-33
  5244  006C' 1900'              	xorwf	??_Led_MainTask& (0+255),w,b
  5245  006E' 6E83               	movwf	3971,c	;volatile
  5246                           
  5247                           ;led.c: 300: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3Blink,&Led3Pulse);
  5248  0070' 0E00'              	movlw	low _Led3Sts
  5249  0072' 6F00'              	movwf	LedStateMachine@LedSts& (0+255),b
  5250  0074' 0E00'              	movlw	high _Led3Sts
  5251  0076' 6F00'              	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  5252  0078' 0E00'              	movlw	low _Led3Blink
  5253  007A' 6F00'              	movwf	LedStateMachine@LedBlink& (0+255),b
  5254  007C' 0E00'              	movlw	high _Led3Blink
  5255  007E' 6F00'              	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  5256  0080' 0E00'              	movlw	low _Led3Pulse
  5257  0082' 6F00'              	movwf	LedStateMachine@LedPulse& (0+255),b
  5258  0084' 0E00'              	movlw	high _Led3Pulse
  5259  0086' 6F00'              	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  5260  0088' 0E03               	movlw	3
  5261  008A' EC00' F000'        	call	_LedStateMachine
  5262  008E' 0100               	movlb	0	; () banked
  5263  0090' 6F00'              	movwf	??_Led_MainTask& (0+255),b
  5264  0092' 3B00'              	swapf	??_Led_MainTask& (0+255),f,b
  5265  0094' 4700'              	rlncf	??_Led_MainTask& (0+255),f,b
  5266  0096' 4700'              	rlncf	??_Led_MainTask& (0+255),f,b
  5267  0098' 5083               	movf	3971,w,c	;volatile
  5268  009A' 1900'              	xorwf	??_Led_MainTask& (0+255),w,b
  5269  009C' 0BBF               	andlw	-65
  5270  009E' 1900'              	xorwf	??_Led_MainTask& (0+255),w,b
  5271  00A0' 6E83               	movwf	3971,c	;volatile
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;led.c: 306: }
  5275                           
  5276                           ; BSR set to: 0
  5277                           ;led.c: 305: break;
  5278                           
  5279                           ;led.c: 304: default:
  5280                           
  5281                           ;led.c: 301: break;
  5282  00A2' 0012               	return	
  5283  00A4'                    l1839:
  5284                           
  5285                           ; BSR set to: 0
  5286  00A4' 0102               	movlb	2	; () banked
  5287  00A6' 5100'              	movf	_SystemState& (0+255),w,b
  5288                           
  5289                           ; Switch size 1, requested type "space"
  5290                           ; Number of cases is 2, Range of values is 0 to 1
  5291                           ; switch strategies available:
  5292                           ; Name         Instructions Cycles
  5293                           ; simple_byte            7     4 (average)
  5294                           ;	Chosen strategy is simple_byte
  5295  00A8' 0A00               	xorlw	0	; case 0
  5296  00AA' B4D8               	btfsc	status,2,c
  5297  00AC' D7AA               	goto	l1840
  5298  00AE' 0A01               	xorlw	1	; case 1
  5299  00B0' A4D8               	btfss	status,2,c
  5300  00B2' 0012               	return	
  5301  00B4' D7AD               	goto	l1842
  5302  00B6'                    __end_of_Led_MainTask:
  5303                           	opt stack 0
  5304                           tosu	equ	0xFFF
  5305                           tosh	equ	0xFFE
  5306                           tosl	equ	0xFFD
  5307                           pclath	equ	0xFFA
  5308                           tblptru	equ	0xFF8
  5309                           tblptrh	equ	0xFF7
  5310                           tblptrl	equ	0xFF6
  5311                           tablat	equ	0xFF5
  5312                           prodh	equ	0xFF4
  5313                           prodl	equ	0xFF3
  5314                           intcon	equ	0xFF2
  5315                           intcon2	equ	0xFF1
  5316                           intcon3	equ	0xFF0
  5317                           postinc0	equ	0xFEE
  5318                           plusw0	equ	0xFEB
  5319                           wreg	equ	0xFE8
  5320                           postinc1	equ	0xFE6
  5321                           postdec1	equ	0xFE5
  5322                           fsr1h	equ	0xFE2
  5323                           fsr1l	equ	0xFE1
  5324                           indf2	equ	0xFDF
  5325                           postinc2	equ	0xFDE
  5326                           postdec2	equ	0xFDD
  5327                           plusw2	equ	0xFDB
  5328                           fsr2h	equ	0xFDA
  5329                           fsr2l	equ	0xFD9
  5330                           status	equ	0xFD8
  5331                           
  5332 ;; *************** function _MdmWifiHttp_MainTask *****************
  5333 ;; Defined at:
  5334 ;;		line 74 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_http.c"
  5335 ;; Parameters:    Size  Location     Type
  5336 ;;  Options         1    wreg     unsigned char 
  5337 ;; Auto vars:     Size  Location     Type
  5338 ;;  Options         1    0[COMRAM] unsigned char 
  5339 ;; Return value:  Size  Location     Type
  5340 ;;                  1    wreg      void 
  5341 ;; Registers used:
  5342 ;;		wreg, status,2, status,0
  5343 ;; Tracked objects:
  5344 ;;		On entry : 0/0
  5345 ;;		On exit  : 0/0
  5346 ;;		Unchanged: 0/0
  5347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5352 ;;Total ram usage:        0 bytes
  5353 ;; Hardware stack levels used:    1
  5354 ;; Hardware stack levels required when called:   11
  5355 ;; This function calls:
  5356 ;;		Nothing
  5357 ;; This function is called by:
  5358 ;;		_InitializeTasks
  5359 ;;		_ScheduleTasks
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	text19
  5364  0000'                    __ptext19:
  5365                           	opt stack 0
  5366  0000'                    _MdmWifiHttp_MainTask:
  5367                           	opt stack 17
  5368                           
  5369                           ;mdm_wifi_http.c: 91: }
  5370                           
  5371                           ;mdm_wifi_http.c: 90: break;
  5372                           
  5373                           ;mdm_wifi_http.c: 89: default:
  5374                           
  5375                           ;mdm_wifi_http.c: 86: break;
  5376                           
  5377                           ;mdm_wifi_http.c: 84: case RunningState:
  5378                           
  5379                           ;mdm_wifi_http.c: 81: break;
  5380                           
  5381                           ;mdm_wifi_http.c: 77: {
  5382                           ;mdm_wifi_http.c: 79: case InitializationState:
  5383                           
  5384                           ;mdm_wifi_http.c: 76: switch (SystemState)
  5385                           
  5386                           ;incstack = 0
  5387  0000' 0102               	movlb	2	; () banked
  5388  0002' 5100'              	movf	_SystemState& (0+255),w,b
  5389                           
  5390                           ; Switch size 1, requested type "space"
  5391                           ; Number of cases is 2, Range of values is 0 to 1
  5392                           ; switch strategies available:
  5393                           ; Name         Instructions Cycles
  5394                           ; simple_byte            7     4 (average)
  5395                           ;	Chosen strategy is simple_byte
  5396  0004' 0A00               	xorlw	0	; case 0
  5397  0006' B4D8               	btfsc	status,2,c
  5398  0008' 0012               	return	
  5399  000A' 0A01               	xorlw	1	; case 1
  5400  000C' 0012               	return	
  5401  000E'                    __end_of_MdmWifiHttp_MainTask:
  5402                           	opt stack 0
  5403                           tosu	equ	0xFFF
  5404                           tosh	equ	0xFFE
  5405                           tosl	equ	0xFFD
  5406                           pclath	equ	0xFFA
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           prodh	equ	0xFF4
  5412                           prodl	equ	0xFF3
  5413                           intcon	equ	0xFF2
  5414                           intcon2	equ	0xFF1
  5415                           intcon3	equ	0xFF0
  5416                           postinc0	equ	0xFEE
  5417                           plusw0	equ	0xFEB
  5418                           wreg	equ	0xFE8
  5419                           postinc1	equ	0xFE6
  5420                           postdec1	equ	0xFE5
  5421                           fsr1h	equ	0xFE2
  5422                           fsr1l	equ	0xFE1
  5423                           indf2	equ	0xFDF
  5424                           postinc2	equ	0xFDE
  5425                           postdec2	equ	0xFDD
  5426                           plusw2	equ	0xFDB
  5427                           fsr2h	equ	0xFDA
  5428                           fsr2l	equ	0xFD9
  5429                           status	equ	0xFD8
  5430                           
  5431 ;; *************** function _MdmWifiCmd_MainTask *****************
  5432 ;; Defined at:
  5433 ;;		line 330 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  Options         1    wreg     unsigned char 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  Options         1    0[COMRAM] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5451 ;;Total ram usage:        0 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:   15
  5454 ;; This function calls:
  5455 ;;		_ReceiveDataSm
  5456 ;;		_SendDataSm
  5457 ;;		_StartConnectionSm
  5458 ;; This function is called by:
  5459 ;;		_InitializeTasks
  5460 ;;		_ScheduleTasks
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text20
  5465  0000'                    __ptext20:
  5466                           	opt stack 0
  5467  0000'                    _MdmWifiCmd_MainTask:
  5468                           	opt stack 13
  5469                           
  5470                           ;mdm_wifi_cmd.c: 332: switch (SystemState)
  5471                           
  5472                           ;incstack = 0
  5473  0000' D007               	goto	l1033
  5474  0002'                    
  5475                           ;mdm_wifi_cmd.c: 342: StartConnectionSm();
  5476  0002' EC00' F000'        	call	_StartConnectionSm	;wreg free
  5477                           
  5478                           ;mdm_wifi_cmd.c: 344: SendDataSm();
  5479  0006' EC00' F000'        	call	_SendDataSm	;wreg free
  5480                           
  5481                           ;mdm_wifi_cmd.c: 346: ReceiveDataSm();
  5482  000A' EC00' F000'        	call	_ReceiveDataSm	;wreg free
  5483                           
  5484                           ;mdm_wifi_cmd.c: 352: }
  5485                           
  5486                           ;mdm_wifi_cmd.c: 351: break;
  5487                           
  5488                           ;mdm_wifi_cmd.c: 350: default:
  5489                           
  5490                           ;mdm_wifi_cmd.c: 347: break;
  5491  000E' 0012               	return	
  5492  0010'                    l1033:
  5493  0010' 0102               	movlb	2	; () banked
  5494  0012' 5100'              	movf	_SystemState& (0+255),w,b
  5495                           
  5496                           ; Switch size 1, requested type "space"
  5497                           ; Number of cases is 2, Range of values is 0 to 1
  5498                           ; switch strategies available:
  5499                           ; Name         Instructions Cycles
  5500                           ; simple_byte            7     4 (average)
  5501                           ;	Chosen strategy is simple_byte
  5502  0014' 0A00               	xorlw	0	; case 0
  5503  0016' B4D8               	btfsc	status,2,c
  5504  0018' 0012               	return	
  5505  001A' 0A01               	xorlw	1	; case 1
  5506  001C' A4D8               	btfss	status,2,c
  5507  001E' 0012               	return	
  5508  0020' D7F0               	goto	l1036
  5509  0022'                    __end_of_MdmWifiCmd_MainTask:
  5510                           	opt stack 0
  5511                           tosu	equ	0xFFF
  5512                           tosh	equ	0xFFE
  5513                           tosl	equ	0xFFD
  5514                           pclath	equ	0xFFA
  5515                           tblptru	equ	0xFF8
  5516                           tblptrh	equ	0xFF7
  5517                           tblptrl	equ	0xFF6
  5518                           tablat	equ	0xFF5
  5519                           prodh	equ	0xFF4
  5520                           prodl	equ	0xFF3
  5521                           intcon	equ	0xFF2
  5522                           intcon2	equ	0xFF1
  5523                           intcon3	equ	0xFF0
  5524                           postinc0	equ	0xFEE
  5525                           plusw0	equ	0xFEB
  5526                           wreg	equ	0xFE8
  5527                           postinc1	equ	0xFE6
  5528                           postdec1	equ	0xFE5
  5529                           fsr1h	equ	0xFE2
  5530                           fsr1l	equ	0xFE1
  5531                           indf2	equ	0xFDF
  5532                           postinc2	equ	0xFDE
  5533                           postdec2	equ	0xFDD
  5534                           plusw2	equ	0xFDB
  5535                           fsr2h	equ	0xFDA
  5536                           fsr2l	equ	0xFD9
  5537                           status	equ	0xFD8
  5538                           
  5539 ;; *************** function _MdmWifi_MainTask *****************
  5540 ;; Defined at:
  5541 ;;		line 283 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  Options         1    wreg     unsigned char 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  Options         1    0[COMRAM] unsigned char 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5559 ;;Total ram usage:        0 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:   14
  5562 ;; This function calls:
  5563 ;;		_MdmWifiEvtParser
  5564 ;;		_MdmWifiGetUartData
  5565 ;;		_UartSetConfig
  5566 ;;		_Uart_InitUartModule
  5567 ;; This function is called by:
  5568 ;;		_InitializeTasks
  5569 ;;		_ScheduleTasks
  5570 ;; This function uses a non-reentrant model
  5571 ;;
  5572                           
  5573                           	psect	text21
  5574  0000'                    __ptext21:
  5575                           	opt stack 0
  5576  0000'                    _MdmWifi_MainTask:
  5577                           	opt stack 14
  5578                           
  5579                           ;mdm_wifi.c: 285: switch (SystemState)
  5580                           
  5581                           ;incstack = 0
  5582  0000' D010               	goto	l895
  5583  0002'                    
  5584                           ;mdm_wifi.c: 290: UartSetConfig();
  5585  0002' EC00' F000'        	call	_UartSetConfig	;wreg free
  5586                           
  5587                           ;mdm_wifi.c: 292: Uart_InitUartModule(((UINT8)(1)),&UartConfig);
  5588  0006' 0E00'              	movlw	low _UartConfig
  5589  0008' 0100               	movlb	0	; () banked
  5590  000A' 6F00'              	movwf	Uart_InitUartModule@UartConfig& (0+255),b
  5591  000C' 0E00'              	movlw	high _UartConfig
  5592  000E' 6F00'              	movwf	(Uart_InitUartModule@UartConfig+1)& (0+255),b
  5593  0010' 0E01               	movlw	1
  5594  0012' EC00' F000'        	call	_Uart_InitUartModule
  5595                           
  5596                           ;mdm_wifi.c: 293: break;
  5597  0016' 0012               	return	
  5598  0018'                    
  5599                           ;mdm_wifi.c: 298: MdmWifiGetUartData();
  5600  0018' EC00' F000'        	call	_MdmWifiGetUartData	;wreg free
  5601                           
  5602                           ;mdm_wifi.c: 300: MdmWifiEvtParser();
  5603  001C' EC00' F000'        	call	_MdmWifiEvtParser	;wreg free
  5604                           
  5605                           ;mdm_wifi.c: 310: }
  5606                           
  5607                           ;mdm_wifi.c: 309: break;
  5608                           
  5609                           ;mdm_wifi.c: 308: default:
  5610                           
  5611                           ;mdm_wifi.c: 305: break;
  5612  0020' 0012               	return	
  5613  0022'                    l895:
  5614  0022' 0102               	movlb	2	; () banked
  5615  0024' 5100'              	movf	_SystemState& (0+255),w,b
  5616                           
  5617                           ; Switch size 1, requested type "space"
  5618                           ; Number of cases is 2, Range of values is 0 to 1
  5619                           ; switch strategies available:
  5620                           ; Name         Instructions Cycles
  5621                           ; simple_byte            7     4 (average)
  5622                           ;	Chosen strategy is simple_byte
  5623  0026' 0A00               	xorlw	0	; case 0
  5624  0028' B4D8               	btfsc	status,2,c
  5625  002A' D7EB               	goto	l896
  5626  002C' 0A01               	xorlw	1	; case 1
  5627  002E' A4D8               	btfss	status,2,c
  5628  0030' 0012               	return	
  5629  0032' D7F2               	goto	l898
  5630  0034'                    __end_of_MdmWifi_MainTask:
  5631                           	opt stack 0
  5632                           tosu	equ	0xFFF
  5633                           tosh	equ	0xFFE
  5634                           tosl	equ	0xFFD
  5635                           pclath	equ	0xFFA
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           prodh	equ	0xFF4
  5641                           prodl	equ	0xFF3
  5642                           intcon	equ	0xFF2
  5643                           intcon2	equ	0xFF1
  5644                           intcon3	equ	0xFF0
  5645                           postinc0	equ	0xFEE
  5646                           plusw0	equ	0xFEB
  5647                           wreg	equ	0xFE8
  5648                           postinc1	equ	0xFE6
  5649                           postdec1	equ	0xFE5
  5650                           fsr1h	equ	0xFE2
  5651                           fsr1l	equ	0xFE1
  5652                           indf2	equ	0xFDF
  5653                           postinc2	equ	0xFDE
  5654                           postdec2	equ	0xFDD
  5655                           plusw2	equ	0xFDB
  5656                           fsr2h	equ	0xFDA
  5657                           fsr2l	equ	0xFD9
  5658                           status	equ	0xFD8
  5659                           
  5660 ;; *************** function _I2cSlv_MainTask *****************
  5661 ;; Defined at:
  5662 ;;		line 203 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  5663 ;; Parameters:    Size  Location     Type
  5664 ;;  Options         1    wreg     unsigned char 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  Options         1    0[COMRAM] unsigned char 
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      void 
  5669 ;; Registers used:
  5670 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5680 ;;Total ram usage:        0 bytes
  5681 ;; Hardware stack levels used:    1
  5682 ;; Hardware stack levels required when called:   14
  5683 ;; This function calls:
  5684 ;;		_I2cSendMsgSm
  5685 ;;		_I2cSetConfig
  5686 ;;		_I2c_InitI2cModule
  5687 ;;		_OsAlrm_SetOsAlarm
  5688 ;; This function is called by:
  5689 ;;		_InitializeTasks
  5690 ;;		_ScheduleTasks
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694                           	psect	text22
  5695  0000'                    __ptext22:
  5696                           	opt stack 0
  5697  0000'                    _I2cSlv_MainTask:
  5698                           	opt stack 14
  5699                           
  5700                           ;i2c_slv.c: 205: switch (SystemState)
  5701                           
  5702                           ;incstack = 0
  5703  0000' D020               	goto	l1185
  5704  0002'                    
  5705                           ;i2c_slv.c: 210: I2cSetConfig();
  5706  0002' EC00' F000'        	call	_I2cSetConfig	;wreg free
  5707                           
  5708                           ;i2c_slv.c: 212: I2c_InitI2cModule(&I2cConfig);
  5709  0006' 0E00'              	movlw	low _I2cConfig
  5710  0008' 0100               	movlb	0	; () banked
  5711  000A' 6F00'              	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  5712  000C' 0E00'              	movlw	high _I2cConfig
  5713  000E' 6F00'              	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  5714  0010' EC00' F000'        	call	_I2c_InitI2cModule	;wreg free
  5715                           
  5716                           ;i2c_slv.c: 214: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  5717  0014' 0E00               	movlw	0
  5718  0016' 0100               	movlb	0	; () banked
  5719  0018' 6F00'              	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  5720  001A' 0E00               	movlw	0
  5721  001C' 6F00'              	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  5722  001E' 0E32               	movlw	50
  5723  0020' 6F00'              	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  5724  0022' 0E00               	movlw	0
  5725  0024' 6F00'              	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  5726  0026' 0E00               	movlw	0
  5727  0028' 6F00'              	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  5728  002A' 0E00               	movlw	0
  5729  002C' 6F00'              	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  5730  002E' 0E00'              	movlw	low _I2cDummyTx
  5731  0030' 6F00'              	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  5732  0032' 0E00'              	movlw	high _I2cDummyTx
  5733  0034' 6F00'              	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  5734  0036' EC00' F000'        	call	_OsAlrm_SetOsAlarm	;wreg free
  5735                           
  5736                           ;i2c_slv.c: 215: break;
  5737  003A' 0012               	return	
  5738  003C'                    
  5739                           ;i2c_slv.c: 220: I2cSendMsgSm();
  5740  003C' EC00' F000'        	call	_I2cSendMsgSm	;wreg free
  5741                           
  5742                           ;i2c_slv.c: 226: }
  5743                           
  5744                           ;i2c_slv.c: 225: break;
  5745                           
  5746                           ;i2c_slv.c: 224: default:
  5747                           
  5748                           ;i2c_slv.c: 221: break;
  5749  0040' 0012               	return	
  5750  0042'                    l1185:
  5751  0042' 0102               	movlb	2	; () banked
  5752  0044' 5100'              	movf	_SystemState& (0+255),w,b
  5753                           
  5754                           ; Switch size 1, requested type "space"
  5755                           ; Number of cases is 2, Range of values is 0 to 1
  5756                           ; switch strategies available:
  5757                           ; Name         Instructions Cycles
  5758                           ; simple_byte            7     4 (average)
  5759                           ;	Chosen strategy is simple_byte
  5760  0046' 0A00               	xorlw	0	; case 0
  5761  0048' B4D8               	btfsc	status,2,c
  5762  004A' D7DB               	goto	l1186
  5763  004C' 0A01               	xorlw	1	; case 1
  5764  004E' A4D8               	btfss	status,2,c
  5765  0050' 0012               	return	
  5766  0052' D7F4               	goto	l1188
  5767  0054'                    __end_of_I2cSlv_MainTask:
  5768                           	opt stack 0
  5769                           tosu	equ	0xFFF
  5770                           tosh	equ	0xFFE
  5771                           tosl	equ	0xFFD
  5772                           pclath	equ	0xFFA
  5773                           tblptru	equ	0xFF8
  5774                           tblptrh	equ	0xFF7
  5775                           tblptrl	equ	0xFF6
  5776                           tablat	equ	0xFF5
  5777                           prodh	equ	0xFF4
  5778                           prodl	equ	0xFF3
  5779                           intcon	equ	0xFF2
  5780                           intcon2	equ	0xFF1
  5781                           intcon3	equ	0xFF0
  5782                           postinc0	equ	0xFEE
  5783                           plusw0	equ	0xFEB
  5784                           wreg	equ	0xFE8
  5785                           postinc1	equ	0xFE6
  5786                           postdec1	equ	0xFE5
  5787                           fsr1h	equ	0xFE2
  5788                           fsr1l	equ	0xFE1
  5789                           indf2	equ	0xFDF
  5790                           postinc2	equ	0xFDE
  5791                           postdec2	equ	0xFDD
  5792                           plusw2	equ	0xFDB
  5793                           fsr2h	equ	0xFDA
  5794                           fsr2l	equ	0xFD9
  5795                           status	equ	0xFD8
  5796                           
  5797 ;; *************** function _MdmWifi_DrvMainFn *****************
  5798 ;; Defined at:
  5799 ;;		line 154 in file "../Source/c/01_Hal/02_Drv/mdm_wifi_drv.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  Options         1    wreg     unsigned char 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  Options         1    0[COMRAM] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5817 ;;Total ram usage:        0 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:   13
  5820 ;; This function calls:
  5821 ;;		_MdmWifi_StartWifiModemSm
  5822 ;; This function is called by:
  5823 ;;		_InitializeTasks
  5824 ;;		_ScheduleTasks
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           	psect	text23
  5829  0000'                    __ptext23:
  5830                           	opt stack 0
  5831  0000'                    _MdmWifi_DrvMainFn:
  5832                           	opt stack 15
  5833                           
  5834                           ;mdm_wifi_drv.c: 157: MdmWifi_StartWifiModemSm();
  5835                           
  5836                           ;incstack = 0
  5837  0000' EC00' F000'        	call	_MdmWifi_StartWifiModemSm	;wreg free
  5838  0004' 0012               	return		;funcret
  5839  0006'                    __end_of_MdmWifi_DrvMainFn:
  5840                           	opt stack 0
  5841                           tosu	equ	0xFFF
  5842                           tosh	equ	0xFFE
  5843                           tosl	equ	0xFFD
  5844                           pclath	equ	0xFFA
  5845                           tblptru	equ	0xFF8
  5846                           tblptrh	equ	0xFF7
  5847                           tblptrl	equ	0xFF6
  5848                           tablat	equ	0xFF5
  5849                           prodh	equ	0xFF4
  5850                           prodl	equ	0xFF3
  5851                           intcon	equ	0xFF2
  5852                           intcon2	equ	0xFF1
  5853                           intcon3	equ	0xFF0
  5854                           postinc0	equ	0xFEE
  5855                           plusw0	equ	0xFEB
  5856                           wreg	equ	0xFE8
  5857                           postinc1	equ	0xFE6
  5858                           postdec1	equ	0xFE5
  5859                           fsr1h	equ	0xFE2
  5860                           fsr1l	equ	0xFE1
  5861                           indf2	equ	0xFDF
  5862                           postinc2	equ	0xFDE
  5863                           postdec2	equ	0xFDD
  5864                           plusw2	equ	0xFDB
  5865                           fsr2h	equ	0xFDA
  5866                           fsr2l	equ	0xFD9
  5867                           status	equ	0xFD8
  5868                           
  5869 ;; *************** function _UsbDevice_MainTask *****************
  5870 ;; Defined at:
  5871 ;;		line 72 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  5872 ;; Parameters:    Size  Location     Type
  5873 ;;  Options         1    wreg     unsigned char 
  5874 ;; Auto vars:     Size  Location     Type
  5875 ;;  Options         1    0[COMRAM] unsigned char 
  5876 ;; Return value:  Size  Location     Type
  5877 ;;                  1    wreg      void 
  5878 ;; Registers used:
  5879 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5880 ;; Tracked objects:
  5881 ;;		On entry : 0/0
  5882 ;;		On exit  : 0/0
  5883 ;;		Unchanged: 0/0
  5884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5889 ;;Total ram usage:        0 bytes
  5890 ;; Hardware stack levels used:    1
  5891 ;; Hardware stack levels required when called:   20
  5892 ;; This function calls:
  5893 ;;		_CDCTxService
  5894 ;;		_USBDeviceInit
  5895 ;;		_USBDeviceTasks
  5896 ;; This function is called by:
  5897 ;;		_InitializeTasks
  5898 ;;		_ScheduleTasks
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text24
  5903  0000'                    __ptext24:
  5904                           	opt stack 0
  5905  0000'                    _UsbDevice_MainTask:
  5906                           	opt stack 8
  5907                           
  5908                           ;usb_device_mgr.c: 74: switch (SystemState)
  5909                           
  5910                           ;incstack = 0
  5911  0000' D008               	goto	l1745
  5912  0002'                    
  5913                           ;usb_device_mgr.c: 79: USBDeviceInit();
  5914  0002' EC00' F000'        	call	_USBDeviceInit	;wreg free
  5915                           
  5916                           ;usb_device_mgr.c: 80: ;
  5917                           ;usb_device_mgr.c: 81: break;
  5918  0006' 0012               	return	
  5919  0008'                    
  5920                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  5921  0008' EC00' F000'        	call	_USBDeviceTasks	;wreg free
  5922                           
  5923                           ;usb_device_mgr.c: 90: CDCTxService();
  5924  000C' EC00' F000'        	call	_CDCTxService	;wreg free
  5925                           
  5926                           ;usb_device_mgr.c: 101: }
  5927                           
  5928                           ;usb_device_mgr.c: 100: break;
  5929                           
  5930                           ;usb_device_mgr.c: 99: default:
  5931                           
  5932                           ;usb_device_mgr.c: 96: break;
  5933  0010' 0012               	return	
  5934  0012'                    l1745:
  5935  0012' 0102               	movlb	2	; () banked
  5936  0014' 5100'              	movf	_SystemState& (0+255),w,b
  5937                           
  5938                           ; Switch size 1, requested type "space"
  5939                           ; Number of cases is 2, Range of values is 0 to 1
  5940                           ; switch strategies available:
  5941                           ; Name         Instructions Cycles
  5942                           ; simple_byte            7     4 (average)
  5943                           ;	Chosen strategy is simple_byte
  5944  0016' 0A00               	xorlw	0	; case 0
  5945  0018' B4D8               	btfsc	status,2,c
  5946  001A' D7F3               	goto	l1746
  5947  001C' 0A01               	xorlw	1	; case 1
  5948  001E' A4D8               	btfss	status,2,c
  5949  0020' 0012               	return	
  5950  0022' D7F2               	goto	l1748
  5951  0024'                    __end_of_UsbDevice_MainTask:
  5952                           	opt stack 0
  5953                           tosu	equ	0xFFF
  5954                           tosh	equ	0xFFE
  5955                           tosl	equ	0xFFD
  5956                           pclath	equ	0xFFA
  5957                           tblptru	equ	0xFF8
  5958                           tblptrh	equ	0xFF7
  5959                           tblptrl	equ	0xFF6
  5960                           tablat	equ	0xFF5
  5961                           prodh	equ	0xFF4
  5962                           prodl	equ	0xFF3
  5963                           intcon	equ	0xFF2
  5964                           intcon2	equ	0xFF1
  5965                           intcon3	equ	0xFF0
  5966                           postinc0	equ	0xFEE
  5967                           plusw0	equ	0xFEB
  5968                           wreg	equ	0xFE8
  5969                           postinc1	equ	0xFE6
  5970                           postdec1	equ	0xFE5
  5971                           fsr1h	equ	0xFE2
  5972                           fsr1l	equ	0xFE1
  5973                           indf2	equ	0xFDF
  5974                           postinc2	equ	0xFDE
  5975                           postdec2	equ	0xFDD
  5976                           plusw2	equ	0xFDB
  5977                           fsr2h	equ	0xFDA
  5978                           fsr2l	equ	0xFD9
  5979                           status	equ	0xFD8
  5980                           
  5981 ;; *************** function _USBDeviceTasks *****************
  5982 ;; Defined at:
  5983 ;;		line 495 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  5984 ;; Parameters:    Size  Location     Type
  5985 ;;		None
  5986 ;; Auto vars:     Size  Location     Type
  5987 ;;  i               1   27[BANK0 ] unsigned char 
  5988 ;; Return value:  Size  Location     Type
  5989 ;;                  1    wreg      void 
  5990 ;; Registers used:
  5991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5992 ;; Tracked objects:
  5993 ;;		On entry : 0/0
  5994 ;;		On exit  : 0/0
  5995 ;;		Unchanged: 0/0
  5996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5998 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6000 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6001 ;;Total ram usage:        1 bytes
  6002 ;; Hardware stack levels used:    1
  6003 ;; Hardware stack levels required when called:   19
  6004 ;; This function calls:
  6005 ;;		_USBCtrlEPAllowStatusStage
  6006 ;;		_USBCtrlEPService
  6007 ;;		_USBDeviceInit
  6008 ;;		_USBIncrement1msInternalTimers
  6009 ;;		_USBStallHandler
  6010 ;;		_USBSuspend
  6011 ;;		_USBWakeFromSuspend
  6012 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6013 ;; This function is called by:
  6014 ;;		_UsbDevice_MainTask
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           	psect	text25
  6019  0000'                    __ptext25:
  6020                           	opt stack 0
  6021  0000'                    _USBDeviceTasks:
  6022                           	opt stack 8
  6023                           
  6024                           ;usb_device.c: 562: }
  6025                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  6026                           
  6027                           ; BSR set to: 2
  6028                           
  6029                           ; BSR set to: 2
  6030                           ;usb_device.c: 561: return;
  6031                           
  6032                           ; BSR set to: 2
  6033                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  6034                           
  6035                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  6036                           
  6037                           ;usb_device.c: 529: UIE = 0;
  6038                           
  6039                           ;usb_device.c: 524: {
  6040                           ;usb_device.c: 526: UCON = 0;
  6041                           
  6042                           ;usb_device.c: 497: uint8_t i;
  6043                           ;usb_device.c: 523: if (1 != 1)
  6044                           
  6045                           ;incstack = 0
  6046  0000' 0102               	movlb	2	; () banked
  6047  0002' 5100'              	movf	_USBDeviceState& (0+255),w,b
  6048  0004' A4D8               	btfss	status,2,c
  6049  0006' D012               	goto	l1368
  6050                           
  6051                           ; BSR set to: 2
  6052                           ;usb_device.c: 585: {
  6053                           ;usb_device.c: 587: UCON = 0;
  6054  0008' 0E00               	movlw	0
  6055  000A' 6E65               	movwf	3941,c	;volatile
  6056                           
  6057                           ;usb_device.c: 590: UIE = 0;
  6058  000C' 0E00               	movlw	0
  6059  000E' 010F               	movlb	15	; () banked
  6060  0010' 6F36               	movwf	54,b	;volatile
  6061                           
  6062                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6063  0012' 0E16               	movlw	22
  6064  0014' 6F39               	movwf	57,b	;volatile
  6065  0016' 0E9F               	movlw	159
  6066  0018' 6F37               	movwf	55,b	;volatile
  6067  001A' 0E7B               	movlw	123
  6068  001C' 6F36               	movwf	54,b	;volatile
  6069                           
  6070                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  6071  001E' D001               	goto	l1369
  6072  0020'                    l1370:
  6073  0020' 8665               	bsf	3941,3,c	;volatile
  6074  0022'                    l1369:
  6075  0022' A665               	btfss	3941,3,c	;volatile
  6076  0024' D7FD               	goto	l1370
  6077                           
  6078                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  6079  0026' 0E01               	movlw	1
  6080  0028' 0102               	movlb	2	; () banked
  6081  002A' 6F00'              	movwf	_USBDeviceState& (0+255),b
  6082  002C'                    l1368:
  6083                           
  6084                           ; BSR set to: 2
  6085                           ;usb_device.c: 605: }
  6086                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  6087                           
  6088                           ; BSR set to: 2
  6089  002C' 0500'              	decf	_USBDeviceState& (0+255),w,b
  6090  002E' B4D8               	btfsc	status,2,c
  6091                           
  6092                           ; BSR set to: 2
  6093                           ;usb_device.c: 609: {
  6094                           ;usb_device.c: 619: if(!UCONbits.SE0)
  6095  0030' BA65               	btfsc	3941,5,c	;volatile
  6096  0032' D00A               	goto	l1373
  6097                           
  6098                           ; BSR set to: 2
  6099                           ;usb_device.c: 620: {
  6100                           ;usb_device.c: 626: {UIR = 0;};
  6101  0034' 0E00               	movlw	0
  6102  0036' 6E62               	movwf	3938,c	;volatile
  6103                           
  6104                           ;usb_device.c: 630: UIE=0;
  6105  0038' 0E00               	movlw	0
  6106  003A' 010F               	movlb	15	; () banked
  6107  003C' 6F36               	movwf	54,b	;volatile
  6108                           
  6109                           ; BSR set to: 15
  6110                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  6111  003E' 8136               	bsf	54,0,b	;volatile
  6112                           
  6113                           ; BSR set to: 15
  6114                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  6115  0040' 8936               	bsf	54,4,b	;volatile
  6116                           
  6117                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  6118  0042' 0E02               	movlw	2
  6119  0044' 0102               	movlb	2	; () banked
  6120  0046' 6F00'              	movwf	_USBDeviceState& (0+255),b
  6121  0048'                    l1373:
  6122                           
  6123                           ; BSR set to: 2
  6124                           ;usb_device.c: 635: }
  6125                           ;usb_device.c: 636: }
  6126                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  6127                           
  6128                           ; BSR set to: 2
  6129                           
  6130                           ; BSR set to: 2
  6131  0048' A462               	btfss	3938,2,c	;volatile
  6132  004A' D006               	goto	l1374
  6133                           
  6134                           ; BSR set to: 2
  6135  004C' 010F               	movlb	15	; () banked
  6136  004E' A536               	btfss	54,2,b	;volatile
  6137  0050' D003               	goto	l1374
  6138                           
  6139                           ; BSR set to: 15
  6140                           ;usb_device.c: 653: {
  6141                           ;usb_device.c: 654: (UIR &= 0xFB);
  6142  0052' 9462               	bcf	3938,2,c	;volatile
  6143                           
  6144                           ; BSR set to: 15
  6145                           ;usb_device.c: 658: USBWakeFromSuspend();
  6146  0054' EC00' F000'        	call	_USBWakeFromSuspend	;wreg free
  6147  0058'                    l1374:
  6148                           
  6149                           ;usb_device.c: 660: }
  6150                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  6151  0058' A265               	btfss	3941,1,c	;volatile
  6152  005A' D002               	goto	l1375
  6153                           
  6154                           ;usb_device.c: 666: {
  6155                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  6156  005C' 98A1               	bcf	4001,4,c	;volatile
  6157                           
  6158                           ;usb_device.c: 668: return;
  6159  005E' 0012               	return	
  6160  0060'                    l1375:
  6161                           
  6162                           ;usb_device.c: 669: }
  6163                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  6164  0060' A062               	btfss	3938,0,c	;volatile
  6165  0062' D009               	goto	l1376
  6166  0064' 010F               	movlb	15	; () banked
  6167  0066' A136               	btfss	54,0,b	;volatile
  6168  0068' D006               	goto	l1376
  6169                           
  6170                           ; BSR set to: 15
  6171                           ;usb_device.c: 682: {
  6172                           ;usb_device.c: 683: USBDeviceInit();
  6173  006A' EC00' F000'        	call	_USBDeviceInit	;wreg free
  6174                           
  6175                           ;usb_device.c: 687: ;
  6176                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  6177  006E' 0E04               	movlw	4
  6178  0070' 0102               	movlb	2	; () banked
  6179  0072' 6F00'              	movwf	_USBDeviceState& (0+255),b
  6180                           
  6181                           ; BSR set to: 2
  6182                           ;usb_device.c: 699: (UIR &= 0xFE);
  6183  0074' 9062               	bcf	3938,0,c	;volatile
  6184  0076'                    l1376:
  6185                           
  6186                           ;usb_device.c: 700: }
  6187                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  6188                           
  6189                           ; BSR set to: 2
  6190  0076' A862               	btfss	3938,4,c	;volatile
  6191  0078' D004               	goto	l1377
  6192  007A' 010F               	movlb	15	; () banked
  6193  007C' B936               	btfsc	54,4,b	;volatile
  6194                           
  6195                           ; BSR set to: 15
  6196                           ;usb_device.c: 706: {
  6197                           ;usb_device.c: 712: USBSuspend();
  6198  007E' EC00' F000'        	call	_USBSuspend	;wreg free
  6199  0082'                    l1377:
  6200                           
  6201                           ;usb_device.c: 714: }
  6202                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  6203  0082' AC62               	btfss	3938,6,c	;volatile
  6204  0084' D01D               	goto	l1381
  6205                           
  6206                           ;usb_device.c: 727: {
  6207                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  6208  0086' 010F               	movlb	15	; () banked
  6209  0088' AD36               	btfss	54,6,b	;volatile
  6210  008A' D00F               	goto	l1379
  6211                           
  6212                           ; BSR set to: 15
  6213                           ;usb_device.c: 730: {
  6214                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  6215  008C' 0E00               	movlw	0
  6216  008E' 0100               	movlb	0	; () banked
  6217  0090' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6218  0092' 0E73               	movlw	115
  6219  0094' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6220  0096' 0E00               	movlw	0
  6221  0098' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6222  009A' 0E00               	movlw	0
  6223  009C' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6224  009E' 0E00               	movlw	0
  6225  00A0' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6226  00A2' 0E01               	movlw	1
  6227  00A4' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6228  00A6' EC00' F000'        	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6229  00AA'                    l1379:
  6230                           
  6231                           ;usb_device.c: 732: }
  6232                           ;usb_device.c: 733: (UIR &= 0xBF);
  6233  00AA' 9C62               	bcf	3938,6,c	;volatile
  6234                           
  6235                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  6236  00AC' EC00' F000'        	call	_USBIncrement1msInternalTimers	;wreg free
  6237                           
  6238                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  6239  00B0' 0101               	movlb	1	; () banked
  6240  00B2' 5100'              	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  6241  00B4' A4D8               	btfss	status,2,c
  6242                           
  6243                           ; BSR set to: 1
  6244                           ;usb_device.c: 754: {
  6245                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  6246  00B6' 0700'              	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  6247                           
  6248                           ; BSR set to: 1
  6249                           ;usb_device.c: 756: }
  6250                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  6251                           
  6252                           ; BSR set to: 1
  6253  00B8' 5100'              	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  6254  00BA' B4D8               	btfsc	status,2,c
  6255                           
  6256                           ; BSR set to: 1
  6257                           ;usb_device.c: 763: {
  6258                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  6259  00BC' EC00' F000'        	call	_USBCtrlEPAllowStatusStage	;wreg free
  6260  00C0'                    l1381:
  6261                           
  6262                           ;usb_device.c: 765: }
  6263                           ;usb_device.c: 767: }
  6264                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  6265  00C0' AA62               	btfss	3938,5,c	;volatile
  6266  00C2' D004               	goto	l1382
  6267  00C4' 010F               	movlb	15	; () banked
  6268  00C6' BB36               	btfsc	54,5,b	;volatile
  6269                           
  6270                           ; BSR set to: 15
  6271                           ;usb_device.c: 770: {
  6272                           ;usb_device.c: 771: USBStallHandler();
  6273  00C8' EC00' F000'        	call	_USBStallHandler	;wreg free
  6274  00CC'                    l1382:
  6275                           
  6276                           ;usb_device.c: 772: }
  6277                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  6278  00CC' A262               	btfss	3938,1,c	;volatile
  6279  00CE' D013               	goto	l1383
  6280  00D0' 010F               	movlb	15	; () banked
  6281  00D2' A336               	btfss	54,1,b	;volatile
  6282  00D4' D010               	goto	l1383
  6283                           
  6284                           ; BSR set to: 15
  6285                           ;usb_device.c: 775: {
  6286                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  6287  00D6' 0E7F               	movlw	127
  6288  00D8' 0100               	movlb	0	; () banked
  6289  00DA' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6290  00DC' 6900'              	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6291  00DE' 0E00               	movlw	0
  6292  00E0' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6293  00E2' 0E00               	movlw	0
  6294  00E4' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6295  00E6' 0E00               	movlw	0
  6296  00E8' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6297  00EA' 0E01               	movlw	1
  6298  00EC' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6299  00EE' EC00' F000'        	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6300                           
  6301                           ;usb_device.c: 777: {UEIR = 0;};
  6302  00F2' 0E00               	movlw	0
  6303  00F4' 6E63               	movwf	3939,c	;volatile
  6304  00F6'                    l1383:
  6305                           
  6306                           ;usb_device.c: 785: }
  6307                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  6308  00F6' 0E04               	movlw	4
  6309  00F8' 0102               	movlb	2	; () banked
  6310  00FA' 6100'              	cpfslt	_USBDeviceState& (0+255),b
  6311  00FC' D002               	goto	l1384
  6312                           
  6313                           ; BSR set to: 2
  6314                           ;usb_device.c: 793: {
  6315                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  6316  00FE' 98A1               	bcf	4001,4,c	;volatile
  6317                           
  6318                           ;usb_device.c: 795: return;
  6319  0100' 0012               	return	
  6320  0102'                    l1384:
  6321                           
  6322                           ; BSR set to: 2
  6323                           ;usb_device.c: 796: }
  6324                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  6325  0102' 010F               	movlb	15	; () banked
  6326  0104' A736               	btfss	54,3,b	;volatile
  6327  0106' D03C               	goto	u7550
  6328                           
  6329                           ; BSR set to: 15
  6330                           ;usb_device.c: 802: {
  6331                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  6332  0108' 0E00               	movlw	0
  6333  010A' 0100               	movlb	0	; () banked
  6334  010C' 6F00'              	movwf	USBDeviceTasks@i& (0+255),b
  6335  010E'                    l8911:
  6336                           
  6337                           ; BSR set to: 0
  6338  010E' 0E03               	movlw	3
  6339  0110' 6500'              	cpfsgt	USBDeviceTasks@i& (0+255),b
  6340  0112' D001               	goto	l1386
  6341  0114' D035               	goto	u7550
  6342  0116'                    l1386:
  6343                           
  6344                           ; BSR set to: 0
  6345                           ;usb_device.c: 804: {
  6346                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  6347  0116' A662               	btfss	3938,3,c	;volatile
  6348  0118' D033               	goto	u7550
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;usb_device.c: 806: {
  6352                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  6353  011A' CF64 F019'         	movff	3940,_USTATcopy	;volatile
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  6357  011E' 3019'              	rrcf	_USTATcopy,w,c
  6358  0120' 32E8               	rrcf	wreg,f,c
  6359  0122' 32E8               	rrcf	wreg,f,c
  6360  0124' 0B0F               	andlw	15
  6361  0126' 6E15'              	movwf	_endpoint_number,c
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;usb_device.c: 811: (UIR &= 0xF7);
  6365  0128' 9662               	bcf	3938,3,c	;volatile
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  6369  012A' B419'              	btfsc	_USTATcopy,2,c
  6370  012C' D007               	goto	l1389
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;usb_device.c: 817: {
  6374                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  6375  012E' 5015'              	movf	_endpoint_number,w,c
  6376  0130' 0D01               	mullw	1
  6377  0132' 0E00'              	movlw	low _ep_data_out
  6378  0134' 24F3               	addwf	prodl,w,c
  6379  0136' 6ED9               	movwf	fsr2l,c
  6380  0138' 0E00'              	movlw	high _ep_data_out
  6381  013A' D006               	goto	L3
  6382  013C'                    l1389:
  6383                           
  6384                           ;usb_device.c: 820: else
  6385                           ;usb_device.c: 821: {
  6386                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  6387                           
  6388                           ; BSR set to: 2
  6389  013C' 5015'              	movf	_endpoint_number,w,c
  6390  013E' 0D01               	mullw	1
  6391  0140' 0E00'              	movlw	low _ep_data_in
  6392  0142' 24F3               	addwf	prodl,w,c
  6393  0144' 6ED9               	movwf	fsr2l,c
  6394  0146' 0E00'              	movlw	high _ep_data_in
  6395  0148'                    L3:
  6396  0148' 20F4               	addwfc	prodh,w,c
  6397  014A' 6EDA               	movwf	fsr2h,c
  6398  014C' 0102               	movlb	2	; () banked
  6399  014E' 70DF               	btg	indf2,0,c
  6400                           
  6401                           ; BSR set to: 2
  6402                           ;usb_device.c: 823: }
  6403                           ;usb_device.c: 828: if(endpoint_number == 0)
  6404                           
  6405                           ; BSR set to: 2
  6406  0150' 5015'              	movf	_endpoint_number,w,c
  6407  0152' A4D8               	btfss	status,2,c
  6408  0154' D003               	goto	l1391
  6409                           
  6410                           ; BSR set to: 2
  6411                           ;usb_device.c: 829: {
  6412                           ;usb_device.c: 830: USBCtrlEPService();
  6413  0156' EC00' F000'        	call	_USBCtrlEPService	;wreg free
  6414                           
  6415                           ;usb_device.c: 831: }
  6416  015A' D00F               	goto	l1393
  6417  015C'                    l1391:
  6418                           
  6419                           ;usb_device.c: 832: else
  6420                           ;usb_device.c: 833: {
  6421                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  6422  015C' 0E00               	movlw	0
  6423  015E' 0100               	movlb	0	; () banked
  6424  0160' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6425  0162' 0E72               	movlw	114
  6426  0164' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6427  0166' 0E00'              	movlw	low _USTATcopy
  6428  0168' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6429  016A' 0E00'              	movlw	high _USTATcopy
  6430  016C' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6431  016E' 0E00               	movlw	0
  6432  0170' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6433  0172' 0E00               	movlw	0
  6434  0174' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6435  0176' EC00' F000'        	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6436  017A'                    l1393:
  6437  017A' 0100               	movlb	0	; () banked
  6438  017C' 2B00'              	incf	USBDeviceTasks@i& (0+255),f,b
  6439  017E' D7C7               	goto	l8911
  6440  0180'                    u7550:
  6441                           
  6442                           ;usb_device.c: 840: }
  6443                           ;usb_device.c: 841: }
  6444                           ;usb_device.c: 842: }
  6445                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  6446                           
  6447                           ; BSR set to: 0
  6448  0180' 98A1               	bcf	4001,4,c	;volatile
  6449  0182' 0012               	return		;funcret
  6450  0184'                    __end_of_USBDeviceTasks:
  6451                           	opt stack 0
  6452                           tosu	equ	0xFFF
  6453                           tosh	equ	0xFFE
  6454                           tosl	equ	0xFFD
  6455                           pclath	equ	0xFFA
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           intcon2	equ	0xFF1
  6464                           intcon3	equ	0xFF0
  6465                           postinc0	equ	0xFEE
  6466                           plusw0	equ	0xFEB
  6467                           wreg	equ	0xFE8
  6468                           postinc1	equ	0xFE6
  6469                           postdec1	equ	0xFE5
  6470                           fsr1h	equ	0xFE2
  6471                           fsr1l	equ	0xFE1
  6472                           indf2	equ	0xFDF
  6473                           postinc2	equ	0xFDE
  6474                           postdec2	equ	0xFDD
  6475                           plusw2	equ	0xFDB
  6476                           fsr2h	equ	0xFDA
  6477                           fsr2l	equ	0xFD9
  6478                           status	equ	0xFD8
  6479                           
  6480 ;; *************** function _USBWakeFromSuspend *****************
  6481 ;; Defined at:
  6482 ;;		line 2321 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;		None
  6485 ;; Auto vars:     Size  Location     Type
  6486 ;;		None
  6487 ;; Return value:  Size  Location     Type
  6488 ;;                  1    wreg      void 
  6489 ;; Registers used:
  6490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6491 ;; Tracked objects:
  6492 ;;		On entry : 0/0
  6493 ;;		On exit  : 0/0
  6494 ;;		Unchanged: 0/0
  6495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6500 ;;Total ram usage:        0 bytes
  6501 ;; Hardware stack levels used:    1
  6502 ;; Hardware stack levels required when called:   15
  6503 ;; This function calls:
  6504 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6505 ;; This function is called by:
  6506 ;;		_USBDeviceTasks
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           	psect	text26
  6511  0000'                    __ptext26:
  6512                           	opt stack 0
  6513  0000'                    _USBWakeFromSuspend:
  6514                           	opt stack 11
  6515                           
  6516                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  6517                           
  6518                           ;incstack = 0
  6519  0000' 0E00               	movlw	0
  6520  0002' 0101               	movlb	1	; () banked
  6521  0004' 6F00'              	movwf	_USBBusIsSuspended& (0+255),b
  6522                           
  6523                           ; BSR set to: 1
  6524                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  6525  0006' 0E00               	movlw	0
  6526  0008' 0100               	movlb	0	; () banked
  6527  000A' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6528  000C' 0E74               	movlw	116
  6529  000E' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6530  0010' 0E00               	movlw	0
  6531  0012' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6532  0014' 0E00               	movlw	0
  6533  0016' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6534  0018' 0E00               	movlw	0
  6535  001A' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6536  001C' 0E00               	movlw	0
  6537  001E' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6538  0020' EC00' F000'        	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6539                           
  6540                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  6541  0024' 9265               	bcf	3941,1,c	;volatile
  6542                           
  6543                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  6544  0026' 010F               	movlb	15	; () banked
  6545  0028' 9536               	bcf	54,2,b	;volatile
  6546                           
  6547                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  6548  002A' D001               	goto	l1521
  6549  002C'                    
  6550                           ;usb_device.c: 2361: {
  6551                           ;usb_device.c: 2362: (UIR &= 0xFB);
  6552                           
  6553                           ; BSR set to: 15
  6554  002C' 9462               	bcf	3938,2,c	;volatile
  6555  002E'                    l1521:
  6556  002E' B462               	btfsc	3938,2,c	;volatile
  6557  0030' D7FD               	goto	l1522
  6558                           
  6559                           ;usb_device.c: 2363: }
  6560                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  6561  0032' 0E00               	movlw	0
  6562  0034' 0101               	movlb	1	; () banked
  6563  0036' 6F00'              	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6564                           
  6565                           ; BSR set to: 1
  6566  0038' 0012               	return		;funcret
  6567  003A'                    __end_of_USBWakeFromSuspend:
  6568                           	opt stack 0
  6569                           tosu	equ	0xFFF
  6570                           tosh	equ	0xFFE
  6571                           tosl	equ	0xFFD
  6572                           pclath	equ	0xFFA
  6573                           tblptru	equ	0xFF8
  6574                           tblptrh	equ	0xFF7
  6575                           tblptrl	equ	0xFF6
  6576                           tablat	equ	0xFF5
  6577                           prodh	equ	0xFF4
  6578                           prodl	equ	0xFF3
  6579                           intcon	equ	0xFF2
  6580                           intcon2	equ	0xFF1
  6581                           intcon3	equ	0xFF0
  6582                           postinc0	equ	0xFEE
  6583                           plusw0	equ	0xFEB
  6584                           wreg	equ	0xFE8
  6585                           postinc1	equ	0xFE6
  6586                           postdec1	equ	0xFE5
  6587                           fsr1h	equ	0xFE2
  6588                           fsr1l	equ	0xFE1
  6589                           indf2	equ	0xFDF
  6590                           postinc2	equ	0xFDE
  6591                           postdec2	equ	0xFDD
  6592                           plusw2	equ	0xFDB
  6593                           fsr2h	equ	0xFDA
  6594                           fsr2l	equ	0xFD9
  6595                           status	equ	0xFD8
  6596                           
  6597 ;; *************** function _USBSuspend *****************
  6598 ;; Defined at:
  6599 ;;		line 2263 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;		None
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;		None
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      void 
  6606 ;; Registers used:
  6607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6617 ;;Total ram usage:        0 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:   15
  6620 ;; This function calls:
  6621 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6622 ;; This function is called by:
  6623 ;;		_USBDeviceTasks
  6624 ;; This function uses a non-reentrant model
  6625 ;;
  6626                           
  6627                           	psect	text27
  6628  0000'                    __ptext27:
  6629                           	opt stack 0
  6630  0000'                    _USBSuspend:
  6631                           	opt stack 11
  6632                           
  6633                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  6634                           
  6635                           ; BSR set to: 1
  6636                           ;incstack = 0
  6637  0000' 010F               	movlb	15	; () banked
  6638  0002' 8536               	bsf	54,2,b	;volatile
  6639                           
  6640                           ; BSR set to: 15
  6641                           ;usb_device.c: 2289: (UIR &= 0xEF);
  6642  0004' 9862               	bcf	3938,4,c	;volatile
  6643                           
  6644                           ; BSR set to: 15
  6645                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  6646  0006' 8265               	bsf	3941,1,c	;volatile
  6647                           
  6648                           ; BSR set to: 15
  6649                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  6650  0008' 0E01               	movlw	1
  6651  000A' 0101               	movlb	1	; () banked
  6652  000C' 6F00'              	movwf	_USBBusIsSuspended& (0+255),b
  6653                           
  6654                           ; BSR set to: 1
  6655                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  6656  000E' 0E00               	movlw	0
  6657  0010' 6F00'              	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6658                           
  6659                           ; BSR set to: 1
  6660                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  6661  0012' 0E00               	movlw	0
  6662  0014' 0100               	movlb	0	; () banked
  6663  0016' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6664  0018' 0E75               	movlw	117
  6665  001A' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6666  001C' 0E00               	movlw	0
  6667  001E' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6668  0020' 0E00               	movlw	0
  6669  0022' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6670  0024' 0E00               	movlw	0
  6671  0026' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6672  0028' 0E00               	movlw	0
  6673  002A' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6674  002C' EC00' F000'        	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6675  0030' 0012               	return		;funcret
  6676  0032'                    __end_of_USBSuspend:
  6677                           	opt stack 0
  6678                           tosu	equ	0xFFF
  6679                           tosh	equ	0xFFE
  6680                           tosl	equ	0xFFD
  6681                           pclath	equ	0xFFA
  6682                           tblptru	equ	0xFF8
  6683                           tblptrh	equ	0xFF7
  6684                           tblptrl	equ	0xFF6
  6685                           tablat	equ	0xFF5
  6686                           prodh	equ	0xFF4
  6687                           prodl	equ	0xFF3
  6688                           intcon	equ	0xFF2
  6689                           intcon2	equ	0xFF1
  6690                           intcon3	equ	0xFF0
  6691                           postinc0	equ	0xFEE
  6692                           plusw0	equ	0xFEB
  6693                           wreg	equ	0xFE8
  6694                           postinc1	equ	0xFE6
  6695                           postdec1	equ	0xFE5
  6696                           fsr1h	equ	0xFE2
  6697                           fsr1l	equ	0xFE1
  6698                           indf2	equ	0xFDF
  6699                           postinc2	equ	0xFDE
  6700                           postdec2	equ	0xFDD
  6701                           plusw2	equ	0xFDB
  6702                           fsr2h	equ	0xFDA
  6703                           fsr2l	equ	0xFD9
  6704                           status	equ	0xFD8
  6705                           
  6706 ;; *************** function _USBStallHandler *****************
  6707 ;; Defined at:
  6708 ;;		line 2220 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6709 ;; Parameters:    Size  Location     Type
  6710 ;;		None
  6711 ;; Auto vars:     Size  Location     Type
  6712 ;;		None
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  1    wreg      void 
  6715 ;; Registers used:
  6716 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6725 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6726 ;;Total ram usage:        1 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:   11
  6729 ;; This function calls:
  6730 ;;		Nothing
  6731 ;; This function is called by:
  6732 ;;		_USBDeviceTasks
  6733 ;; This function uses a non-reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text28
  6737  0000'                    __ptext28:
  6738                           	opt stack 0
  6739  0000'                    _USBStallHandler:
  6740                           	opt stack 15
  6741                           
  6742                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  6743                           
  6744                           ;incstack = 0
  6745  0000' 010F               	movlb	15	; () banked
  6746  0002' A126               	btfss	38,0,b	;volatile
  6747  0004' D01D               	goto	l1513
  6748                           
  6749                           ; BSR set to: 15
  6750                           ;usb_device.c: 2233: {
  6751                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  6752  0006' C010' FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6753  000A' C011' FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6754  000E' 0E80               	movlw	128
  6755  0010' 18DE               	xorwf	postinc2,w,c
  6756  0012' A4D8               	btfss	status,2,c
  6757  0014' D014               	goto	l1514
  6758                           
  6759                           ; BSR set to: 15
  6760  0016' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
  6761  001A' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6762  001E' 0E84               	movlw	132
  6763  0020' 18DE               	xorwf	postinc2,w,c
  6764  0022' A4D8               	btfss	status,2,c
  6765  0024' D00C               	goto	l1514
  6766                           
  6767                           ; BSR set to: 15
  6768                           ;usb_device.c: 2236: {
  6769                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6770  0026' C010' FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6771  002A' C011' FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6772  002E' 0E0C               	movlw	12
  6773  0030' 6EDF               	movwf	indf2,c
  6774                           
  6775                           ; BSR set to: 15
  6776                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6777  0032' C010' FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6778  0036' C011' FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6779  003A' 0E00               	movlw	0
  6780  003C' 8EDB               	bsf	plusw2,7,c
  6781  003E'                    l1514:
  6782                           
  6783                           ; BSR set to: 15
  6784                           ;usb_device.c: 2240: }
  6785                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  6786                           
  6787                           ; BSR set to: 15
  6788  003E' 9126               	bcf	38,0,b	;volatile
  6789  0040'                    l1513:
  6790                           
  6791                           ; BSR set to: 15
  6792                           ;usb_device.c: 2242: }
  6793                           ;usb_device.c: 2244: (UIR &= 0xDF);
  6794  0040' 9A62               	bcf	3938,5,c	;volatile
  6795                           
  6796                           ; BSR set to: 15
  6797  0042' 0012               	return		;funcret
  6798  0044'                    __end_of_USBStallHandler:
  6799                           	opt stack 0
  6800                           tosu	equ	0xFFF
  6801                           tosh	equ	0xFFE
  6802                           tosl	equ	0xFFD
  6803                           pclath	equ	0xFFA
  6804                           tblptru	equ	0xFF8
  6805                           tblptrh	equ	0xFF7
  6806                           tblptrl	equ	0xFF6
  6807                           tablat	equ	0xFF5
  6808                           prodh	equ	0xFF4
  6809                           prodl	equ	0xFF3
  6810                           intcon	equ	0xFF2
  6811                           intcon2	equ	0xFF1
  6812                           intcon3	equ	0xFF0
  6813                           postinc0	equ	0xFEE
  6814                           plusw0	equ	0xFEB
  6815                           wreg	equ	0xFE8
  6816                           postinc1	equ	0xFE6
  6817                           postdec1	equ	0xFE5
  6818                           fsr1h	equ	0xFE2
  6819                           fsr1l	equ	0xFE1
  6820                           indf2	equ	0xFDF
  6821                           postinc2	equ	0xFDE
  6822                           postdec2	equ	0xFDD
  6823                           plusw2	equ	0xFDB
  6824                           fsr2h	equ	0xFDA
  6825                           fsr2l	equ	0xFD9
  6826                           status	equ	0xFD8
  6827                           
  6828 ;; *************** function _USBIncrement1msInternalTimers *****************
  6829 ;; Defined at:
  6830 ;;		line 3042 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;		None
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  1    wreg      void 
  6837 ;; Registers used:
  6838 ;;		wreg, status,2, status,0
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/0
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6848 ;;Total ram usage:        0 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:   11
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_USBDeviceTasks
  6855 ;; This function uses a non-reentrant model
  6856 ;;
  6857                           
  6858                           	psect	text29
  6859  0000'                    __ptext29:
  6860                           	opt stack 0
  6861  0000'                    _USBIncrement1msInternalTimers:
  6862                           	opt stack 15
  6863                           
  6864                           ;usb_device.c: 3050: USB1msTickCount++;
  6865                           
  6866                           ; BSR set to: 15
  6867                           ;incstack = 0
  6868  0000' 0E01               	movlw	1
  6869  0002' 0103               	movlb	3	; () banked
  6870  0004' 2700'              	addwf	_USB1msTickCount& (0+255),f,b
  6871  0006' 0E00               	movlw	0
  6872  0008' 2300'              	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  6873  000A' 2300'              	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  6874  000C' 2300'              	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  6875                           
  6876                           ; BSR set to: 3
  6877                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  6878  000E' 0101               	movlb	1	; () banked
  6879  0010' 5100'              	movf	_USBBusIsSuspended& (0+255),w,b
  6880  0012' A4D8               	btfss	status,2,c
  6881  0014' 0012               	return	
  6882                           
  6883                           ; BSR set to: 1
  6884                           ;usb_device.c: 3052: {
  6885                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  6886  0016' 2B00'              	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  6887                           
  6888                           ; BSR set to: 1
  6889                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  6890  0018' 5100'              	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  6891  001A' A4D8               	btfss	status,2,c
  6892  001C' 0012               	return	
  6893                           
  6894                           ; BSR set to: 1
  6895                           ;usb_device.c: 3056: {
  6896                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  6897  001E' 6900'              	setf	_USBTicksSinceSuspendEnd& (0+255),b
  6898                           
  6899                           ; BSR set to: 1
  6900  0020' 0012               	return	
  6901  0022'                    __end_of_USBIncrement1msInternalTimers:
  6902                           	opt stack 0
  6903                           tosu	equ	0xFFF
  6904                           tosh	equ	0xFFE
  6905                           tosl	equ	0xFFD
  6906                           pclath	equ	0xFFA
  6907                           tblptru	equ	0xFF8
  6908                           tblptrh	equ	0xFF7
  6909                           tblptrl	equ	0xFF6
  6910                           tablat	equ	0xFF5
  6911                           prodh	equ	0xFF4
  6912                           prodl	equ	0xFF3
  6913                           intcon	equ	0xFF2
  6914                           intcon2	equ	0xFF1
  6915                           intcon3	equ	0xFF0
  6916                           postinc0	equ	0xFEE
  6917                           plusw0	equ	0xFEB
  6918                           wreg	equ	0xFE8
  6919                           postinc1	equ	0xFE6
  6920                           postdec1	equ	0xFE5
  6921                           fsr1h	equ	0xFE2
  6922                           fsr1l	equ	0xFE1
  6923                           indf2	equ	0xFDF
  6924                           postinc2	equ	0xFDE
  6925                           postdec2	equ	0xFDD
  6926                           plusw2	equ	0xFDB
  6927                           fsr2h	equ	0xFDA
  6928                           fsr2l	equ	0xFD9
  6929                           status	equ	0xFD8
  6930                           
  6931 ;; *************** function _USBDeviceInit *****************
  6932 ;; Defined at:
  6933 ;;		line 295 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6934 ;; Parameters:    Size  Location     Type
  6935 ;;		None
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  i               1    8[BANK0 ] unsigned char 
  6938 ;; Return value:  Size  Location     Type
  6939 ;;                  1    wreg      void 
  6940 ;; Registers used:
  6941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6942 ;; Tracked objects:
  6943 ;;		On entry : 0/0
  6944 ;;		On exit  : 0/0
  6945 ;;		Unchanged: 0/0
  6946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6950 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6951 ;;Total ram usage:        1 bytes
  6952 ;; Hardware stack levels used:    1
  6953 ;; Hardware stack levels required when called:   12
  6954 ;; This function calls:
  6955 ;;		_memset
  6956 ;; This function is called by:
  6957 ;;		_USBDeviceTasks
  6958 ;;		_UsbDevice_MainTask
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           
  6962                           	psect	text30
  6963  0000'                    __ptext30:
  6964                           	opt stack 0
  6965  0000'                    _USBDeviceInit:
  6966                           	opt stack 14
  6967                           
  6968                           ;usb_device.c: 297: uint8_t i;
  6969                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  6970                           
  6971                           ; BSR set to: 1
  6972                           ;incstack = 0
  6973  0000' 98A0               	bcf	4000,4,c	;volatile
  6974                           
  6975                           ;usb_device.c: 303: ;
  6976                           ;usb_device.c: 306: {UEIR = 0;};
  6977  0002' 0E00               	movlw	0
  6978  0004' 6E63               	movwf	3939,c	;volatile
  6979                           
  6980                           ;usb_device.c: 309: {UIR = 0;};
  6981  0006' 0E00               	movlw	0
  6982  0008' 6E62               	movwf	3938,c	;volatile
  6983                           
  6984                           ;usb_device.c: 312: UEP0 = 0;
  6985  000A' 0E00               	movlw	0
  6986  000C' 010F               	movlb	15	; () banked
  6987  000E' 6F26               	movwf	38,b	;volatile
  6988                           
  6989                           ; BSR set to: 15
  6990                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  6991  0010' 0E27               	movlw	39
  6992  0012' 0100               	movlb	0	; () banked
  6993  0014' 6F00'              	movwf	memset@p1& (0+255),b
  6994  0016' 0E0F               	movlw	15
  6995  0018' 6F00'              	movwf	(memset@p1+1)& (0+255),b
  6996  001A' 0E00               	movlw	0
  6997  001C' 6F00'              	movwf	(memset@c+1)& (0+255),b
  6998  001E' 0E00               	movlw	0
  6999  0020' 6F00'              	movwf	memset@c& (0+255),b
  7000  0022' 0E00               	movlw	0
  7001  0024' 6F00'              	movwf	(memset@n+1)& (0+255),b
  7002  0026' 0E02               	movlw	2
  7003  0028' 6F00'              	movwf	memset@n& (0+255),b
  7004  002A' EC00' F000'        	call	_memset	;wreg free
  7005                           
  7006                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  7007  002E' 0E16               	movlw	22
  7008  0030' 010F               	movlb	15	; () banked
  7009  0032' 6F39               	movwf	57,b	;volatile
  7010                           
  7011                           ; BSR set to: 15
  7012  0034' 0E9F               	movlw	159
  7013  0036' 6F37               	movwf	55,b	;volatile
  7014                           
  7015                           ; BSR set to: 15
  7016  0038' 0E7B               	movlw	123
  7017  003A' 6F36               	movwf	54,b	;volatile
  7018                           
  7019                           ; BSR set to: 15
  7020                           ;usb_device.c: 319: ;
  7021                           ;usb_device.c: 322: ;
  7022                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  7023  003C' 0E00               	movlw	0
  7024  003E' 0100               	movlb	0	; () banked
  7025  0040' 6F00'              	movwf	USBDeviceInit@i& (0+255),b
  7026  0042'                    l8109:
  7027                           
  7028                           ; BSR set to: 0
  7029  0042' 0E0B               	movlw	11
  7030  0044' 6500'              	cpfsgt	USBDeviceInit@i& (0+255),b
  7031  0046' D001               	goto	l1357
  7032  0048' D00E               	goto	u6370
  7033  004A'                    l1357:
  7034                           
  7035                           ; BSR set to: 0
  7036                           ;usb_device.c: 326: {
  7037                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  7038                           
  7039                           ; BSR set to: 0
  7040  004A' 5100'              	movf	USBDeviceInit@i& (0+255),w,b
  7041  004C' 0D04               	mullw	4
  7042  004E' 0E00               	movlw	0
  7043  0050' 24F3               	addwf	prodl,w,c
  7044  0052' 6ED9               	movwf	fsr2l,c
  7045  0054' 0E04               	movlw	4
  7046  0056' 20F4               	addwfc	prodh,w,c
  7047  0058' 6EDA               	movwf	fsr2h,c
  7048  005A' 6ADE               	clrf	postinc2,c
  7049  005C' 6ADE               	clrf	postinc2,c
  7050  005E' 6ADE               	clrf	postinc2,c
  7051  0060' 6ADD               	clrf	postdec2,c
  7052                           
  7053                           ; BSR set to: 0
  7054  0062' 2B00'              	incf	USBDeviceInit@i& (0+255),f,b
  7055  0064' D7EE               	goto	l8109
  7056  0066'                    u6370:
  7057                           
  7058                           ; BSR set to: 0
  7059                           ;usb_device.c: 328: }
  7060                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  7061  0066' 8C65               	bsf	3941,6,c	;volatile
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;usb_device.c: 334: UADDR = 0x00;
  7065  0068' 0E00               	movlw	0
  7066  006A' 010F               	movlb	15	; () banked
  7067  006C' 6F38               	movwf	56,b	;volatile
  7068                           
  7069                           ; BSR set to: 15
  7070                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  7071  006E' 9865               	bcf	3941,4,c	;volatile
  7072                           
  7073                           ; BSR set to: 15
  7074                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  7075  0070' 9C65               	bcf	3941,6,c	;volatile
  7076  0072'                    
  7077                           ;usb_device.c: 344: {
  7078                           ;usb_device.c: 345: (UIR &= 0xF7);
  7079                           
  7080                           ; BSR set to: 15
  7081  0072' 9662               	bcf	3938,3,c	;volatile
  7082                           
  7083                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  7084  0074' 0E00               	movlw	0
  7085  0076' 6E03'              	movwf	_inPipes+3,c
  7086                           
  7087                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  7088  0078' 0E00               	movlw	0
  7089  007A' 0102               	movlb	2	; () banked
  7090  007C' 6F00'              	movwf	(_outPipes+3)& (0+255),b
  7091                           
  7092                           ; BSR set to: 2
  7093                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  7094  007E' 0E00               	movlw	0
  7095  0080' 6F00'              	movwf	(_outPipes+5)& (0+255),b
  7096  0082' 0E00               	movlw	0
  7097  0084' 6F00'              	movwf	(_outPipes+4)& (0+255),b
  7098                           
  7099                           ; BSR set to: 2
  7100                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  7101  0086' B662               	btfsc	3938,3,c	;volatile
  7102  0088' D7F4               	goto	l1359
  7103                           
  7104                           ; BSR set to: 2
  7105                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  7106                           
  7107                           ; BSR set to: 2
  7108  008A' 0E01               	movlw	1
  7109  008C' 0101               	movlb	1	; () banked
  7110  008E' 6F00'              	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7111                           
  7112                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  7113  0090' 0E01               	movlw	1
  7114  0092' 6F00'              	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7115                           
  7116                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  7117  0094' 0E00               	movlw	0
  7118  0096' 6F00'              	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7119                           
  7120                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  7121  0098' 0E00               	movlw	0
  7122  009A' 6F00'              	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7123                           
  7124                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  7125  009C' 0E00               	movlw	0
  7126  009E' 6F00'              	movwf	_USBBusIsSuspended& (0+255),b
  7127                           
  7128                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  7129  00A0' 0E00               	movlw	0
  7130  00A2' 0100               	movlb	0	; () banked
  7131  00A4' 6F00'              	movwf	USBDeviceInit@i& (0+255),b
  7132  00A6'                    l8137:
  7133                           
  7134                           ; BSR set to: 0
  7135  00A6' 0E02               	movlw	2
  7136  00A8' 6500'              	cpfsgt	USBDeviceInit@i& (0+255),b
  7137  00AA' D001               	goto	l1361
  7138  00AC' D02E               	goto	u6400
  7139  00AE'                    l1361:
  7140                           
  7141                           ; BSR set to: 0
  7142                           ;usb_device.c: 364: {
  7143                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  7144                           
  7145                           ; BSR set to: 0
  7146  00AE' 5100'              	movf	USBDeviceInit@i& (0+255),w,b
  7147  00B0' 0D02               	mullw	2
  7148  00B2' 0E00'              	movlw	low _pBDTEntryIn
  7149  00B4' 24F3               	addwf	prodl,w,c
  7150  00B6' 6ED9               	movwf	fsr2l,c
  7151  00B8' 0E00'              	movlw	high _pBDTEntryIn
  7152  00BA' 20F4               	addwfc	prodh,w,c
  7153  00BC' 6EDA               	movwf	fsr2h,c
  7154  00BE' 0E00               	movlw	0
  7155  00C0' 6EDE               	movwf	postinc2,c
  7156  00C2' 0E00               	movlw	0
  7157  00C4' 6EDD               	movwf	postdec2,c
  7158                           
  7159                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  7160  00C6' 5100'              	movf	USBDeviceInit@i& (0+255),w,b
  7161  00C8' 0D02               	mullw	2
  7162  00CA' 0E00'              	movlw	low _pBDTEntryOut
  7163  00CC' 24F3               	addwf	prodl,w,c
  7164  00CE' 6ED9               	movwf	fsr2l,c
  7165  00D0' 0E00'              	movlw	high _pBDTEntryOut
  7166  00D2' 20F4               	addwfc	prodh,w,c
  7167  00D4' 6EDA               	movwf	fsr2h,c
  7168  00D6' 0E00               	movlw	0
  7169  00D8' 6EDE               	movwf	postinc2,c
  7170  00DA' 0E00               	movlw	0
  7171  00DC' 6EDD               	movwf	postdec2,c
  7172                           
  7173                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  7174  00DE' 5100'              	movf	USBDeviceInit@i& (0+255),w,b
  7175  00E0' 0D01               	mullw	1
  7176  00E2' 0E00'              	movlw	low _ep_data_in
  7177  00E4' 24F3               	addwf	prodl,w,c
  7178  00E6' 6ED9               	movwf	fsr2l,c
  7179  00E8' 0E00'              	movlw	high _ep_data_in
  7180  00EA' 20F4               	addwfc	prodh,w,c
  7181  00EC' 6EDA               	movwf	fsr2h,c
  7182  00EE' 0E00               	movlw	0
  7183  00F0' 6EDF               	movwf	indf2,c
  7184                           
  7185                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  7186  00F2' 5100'              	movf	USBDeviceInit@i& (0+255),w,b
  7187  00F4' 0D01               	mullw	1
  7188  00F6' 0E00'              	movlw	low _ep_data_out
  7189  00F8' 24F3               	addwf	prodl,w,c
  7190  00FA' 6ED9               	movwf	fsr2l,c
  7191  00FC' 0E00'              	movlw	high _ep_data_out
  7192  00FE' 20F4               	addwfc	prodh,w,c
  7193  0100' 6EDA               	movwf	fsr2h,c
  7194  0102' 0E00               	movlw	0
  7195  0104' 6EDF               	movwf	indf2,c
  7196                           
  7197                           ; BSR set to: 0
  7198  0106' 2B00'              	incf	USBDeviceInit@i& (0+255),f,b
  7199  0108' D7CE               	goto	l8137
  7200  010A'                    u6400:
  7201                           
  7202                           ; BSR set to: 0
  7203                           ;usb_device.c: 369: }
  7204                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  7205                           
  7206                           ; BSR set to: 0
  7207  010A' 0E08               	movlw	8
  7208  010C' 6E06'              	movwf	_pBDTEntryIn,c
  7209  010E' 0E04               	movlw	4
  7210  0110' 6E07'              	movwf	_pBDTEntryIn+1,c
  7211                           
  7212                           ; BSR set to: 0
  7213                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  7214  0112' 0E16               	movlw	22
  7215  0114' 010F               	movlb	15	; () banked
  7216  0116' 6F26               	movwf	38,b	;volatile
  7217                           
  7218                           ; BSR set to: 15
  7219                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  7220  0118' 0E04               	movlw	4
  7221  011A' 0104               	movlb	4	; () banked
  7222  011C' 6F03               	movwf	3,b	;volatile
  7223  011E' 0E30               	movlw	48
  7224  0120' 6F02               	movwf	2,b	;volatile
  7225                           
  7226                           ; BSR set to: 4
  7227                           ;usb_device.c: 377: BDT[0].CNT = 8;
  7228  0122' 0E08               	movlw	8
  7229  0124' 6F01               	movwf	1,b	;volatile
  7230                           
  7231                           ; BSR set to: 4
  7232                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  7233  0126' 0E04               	movlw	4
  7234  0128' 6F00               	movwf	0,b	;volatile
  7235                           
  7236                           ; BSR set to: 4
  7237                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  7238  012A' 8F00               	bsf	0,7,b	;volatile
  7239                           
  7240                           ; BSR set to: 4
  7241                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  7242  012C' 0E00               	movlw	0
  7243  012E' 6E1A'              	movwf	_USBActiveConfiguration,c
  7244                           
  7245                           ; BSR set to: 4
  7246                           ;usb_device.c: 384: USB1msTickCount = 0;
  7247  0130' 0E00               	movlw	0
  7248  0132' 0103               	movlb	3	; () banked
  7249  0134' 6F00'              	movwf	_USB1msTickCount& (0+255),b
  7250  0136' 0E00               	movlw	0
  7251  0138' 6F00'              	movwf	(_USB1msTickCount+1)& (0+255),b
  7252  013A' 0E00               	movlw	0
  7253  013C' 6F00'              	movwf	(_USB1msTickCount+2)& (0+255),b
  7254  013E' 0E00               	movlw	0
  7255  0140' 6F00'              	movwf	(_USB1msTickCount+3)& (0+255),b
  7256                           
  7257                           ; BSR set to: 3
  7258                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  7259  0142' 0E00               	movlw	0
  7260  0144' 0101               	movlb	1	; () banked
  7261  0146' 6F00'              	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  7262                           
  7263                           ; BSR set to: 1
  7264                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  7265  0148' 0E00               	movlw	0
  7266  014A' 0102               	movlb	2	; () banked
  7267  014C' 6F00'              	movwf	_USBDeviceState& (0+255),b
  7268                           
  7269                           ; BSR set to: 2
  7270  014E' 0012               	return		;funcret
  7271  0150'                    __end_of_USBDeviceInit:
  7272                           	opt stack 0
  7273                           tosu	equ	0xFFF
  7274                           tosh	equ	0xFFE
  7275                           tosl	equ	0xFFD
  7276                           pclath	equ	0xFFA
  7277                           tblptru	equ	0xFF8
  7278                           tblptrh	equ	0xFF7
  7279                           tblptrl	equ	0xFF6
  7280                           tablat	equ	0xFF5
  7281                           prodh	equ	0xFF4
  7282                           prodl	equ	0xFF3
  7283                           intcon	equ	0xFF2
  7284                           intcon2	equ	0xFF1
  7285                           intcon3	equ	0xFF0
  7286                           postinc0	equ	0xFEE
  7287                           plusw0	equ	0xFEB
  7288                           wreg	equ	0xFE8
  7289                           postinc1	equ	0xFE6
  7290                           postdec1	equ	0xFE5
  7291                           fsr1h	equ	0xFE2
  7292                           fsr1l	equ	0xFE1
  7293                           indf2	equ	0xFDF
  7294                           postinc2	equ	0xFDE
  7295                           postdec2	equ	0xFDD
  7296                           plusw2	equ	0xFDB
  7297                           fsr2h	equ	0xFDA
  7298                           fsr2l	equ	0xFD9
  7299                           status	equ	0xFD8
  7300                           
  7301 ;; *************** function _USBCtrlEPService *****************
  7302 ;; Defined at:
  7303 ;;		line 2390 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7304 ;; Parameters:    Size  Location     Type
  7305 ;;		None
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;		None
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  1    wreg      void 
  7310 ;; Registers used:
  7311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7320 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7321 ;;Total ram usage:        1 bytes
  7322 ;; Hardware stack levels used:    1
  7323 ;; Hardware stack levels required when called:   18
  7324 ;; This function calls:
  7325 ;;		_USBCtrlTrfInHandler
  7326 ;;		_USBCtrlTrfOutHandler
  7327 ;;		_USBCtrlTrfSetupHandler
  7328 ;;		_memcpy
  7329 ;; This function is called by:
  7330 ;;		_USBDeviceTasks
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text31
  7335  0000'                    __ptext31:
  7336                           	opt stack 0
  7337  0000'                    _USBCtrlEPService:
  7338                           	opt stack 8
  7339                           
  7340                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  7341                           
  7342                           ; BSR set to: 2
  7343                           ;incstack = 0
  7344  0000' 0E2D               	movlw	45
  7345  0002' 0101               	movlb	1	; () banked
  7346  0004' 6F00'              	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  7347                           
  7348                           ; BSR set to: 1
  7349                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  7350  0006' C019' F01A'        	movff	_USTATcopy,??_USBCtrlEPService
  7351  000A' 0EFD               	movlw	253
  7352  000C' 0100               	movlb	0	; () banked
  7353  000E' 1700'              	andwf	??_USBCtrlEPService& (0+255),f,b
  7354  0010' A4D8               	btfss	status,2,c
  7355  0012' D038               	goto	l1527
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;usb_device.c: 2401: {
  7359                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  7360  0014' C019' F01A'        	movff	_USTATcopy,??_USBCtrlEPService
  7361  0018' 90D8               	bcf	status,0,c
  7362  001A' 3300'              	rrcf	??_USBCtrlEPService& (0+255),f,b
  7363  001C' 0E3F               	movlw	63
  7364  001E' 1700'              	andwf	??_USBCtrlEPService& (0+255),f,b
  7365  0020' 5100'              	movf	??_USBCtrlEPService& (0+255),w,b
  7366  0022' 0D04               	mullw	4
  7367  0024' 0E00               	movlw	0
  7368  0026' 24F3               	addwf	prodl,w,c
  7369  0028' 6E10'              	movwf	_pBDTEntryEP0OutCurrent,c
  7370  002A' 0E04               	movlw	4
  7371  002C' 20F4               	addwfc	prodh,w,c
  7372  002E' 6E11'              	movwf	_pBDTEntryEP0OutCurrent+1,c
  7373                           
  7374                           ; BSR set to: 0
  7375                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  7376  0030' C010' F00E'        	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  7377  0034' C011' F00F'        	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  7378                           
  7379                           ; BSR set to: 0
  7380                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  7381  0038' 0E04               	movlw	4
  7382  003A' 1A0E'              	xorwf	_pBDTEntryEP0OutNext,f,c
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  7386  003C' C010' FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  7387  0040' C011' FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  7388  0044' 30DF               	rrcf	indf2,w,c
  7389  0046' 32E8               	rrcf	wreg,f,c
  7390  0048' 0B0F               	andlw	15
  7391  004A' 0A0D               	xorlw	13
  7392  004C' A4D8               	btfss	status,2,c
  7393  004E' D017               	goto	l1528
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;usb_device.c: 2418: {
  7397                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  7398  0050' 0E30               	movlw	48
  7399  0052' 6F00'              	movwf	memcpy@d1& (0+255),b
  7400  0054' 0E04               	movlw	4
  7401  0056' 6F00'              	movwf	(memcpy@d1+1)& (0+255),b
  7402  0058' EE20 F002          	lfsr	2,2
  7403  005C' 5010'              	movf	_pBDTEntryEP0OutCurrent,w,c
  7404  005E' 26D9               	addwf	fsr2l,f,c
  7405  0060' 5011'              	movf	_pBDTEntryEP0OutCurrent+1,w,c
  7406  0062' 22DA               	addwfc	fsr2h,f,c
  7407  0064' CFDE F002'         	movff	postinc2,memcpy@s1
  7408  0068' CFDD F003'         	movff	postdec2,memcpy@s1+1
  7409  006C' 0E00               	movlw	0
  7410  006E' 6F00'              	movwf	(memcpy@n+1)& (0+255),b
  7411  0070' 0E08               	movlw	8
  7412  0072' 6F00'              	movwf	memcpy@n& (0+255),b
  7413  0074' EC00' F000'        	call	_memcpy	;wreg free
  7414                           
  7415                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  7416  0078' EC00' F000'        	call	_USBCtrlTrfSetupHandler	;wreg free
  7417                           
  7418                           ;usb_device.c: 2427: }
  7419  007C' 0012               	return	
  7420  007E'                    l1528:
  7421                           
  7422                           ;usb_device.c: 2428: else
  7423                           ;usb_device.c: 2429: {
  7424                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  7425  007E' EC00' F000'        	call	_USBCtrlTrfOutHandler	;wreg free
  7426                           
  7427                           ;usb_device.c: 2432: }
  7428                           ;usb_device.c: 2433: }
  7429  0082' 0012               	return	
  7430  0084'                    l1527:
  7431                           
  7432                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  7433  0084' 5019'              	movf	_USTATcopy,w,c
  7434  0086' 0BFD               	andlw	253
  7435  0088' 0A04               	xorlw	4
  7436  008A' A4D8               	btfss	status,2,c
  7437  008C' 0012               	return	
  7438                           
  7439                           ;usb_device.c: 2435: {
  7440                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  7441  008E' EC00' F000'        	call	_USBCtrlTrfInHandler	;wreg free
  7442  0092' 0012               	return	
  7443  0094'                    __end_of_USBCtrlEPService:
  7444                           	opt stack 0
  7445                           tosu	equ	0xFFF
  7446                           tosh	equ	0xFFE
  7447                           tosl	equ	0xFFD
  7448                           pclath	equ	0xFFA
  7449                           tblptru	equ	0xFF8
  7450                           tblptrh	equ	0xFF7
  7451                           tblptrl	equ	0xFF6
  7452                           tablat	equ	0xFF5
  7453                           prodh	equ	0xFF4
  7454                           prodl	equ	0xFF3
  7455                           intcon	equ	0xFF2
  7456                           intcon2	equ	0xFF1
  7457                           intcon3	equ	0xFF0
  7458                           postinc0	equ	0xFEE
  7459                           plusw0	equ	0xFEB
  7460                           wreg	equ	0xFE8
  7461                           postinc1	equ	0xFE6
  7462                           postdec1	equ	0xFE5
  7463                           fsr1h	equ	0xFE2
  7464                           fsr1l	equ	0xFE1
  7465                           indf2	equ	0xFDF
  7466                           postinc2	equ	0xFDE
  7467                           postdec2	equ	0xFDD
  7468                           plusw2	equ	0xFDB
  7469                           fsr2h	equ	0xFDA
  7470                           fsr2l	equ	0xFD9
  7471                           status	equ	0xFD8
  7472                           
  7473 ;; *************** function _memcpy *****************
  7474 ;; Defined at:
  7475 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
  7476 ;; Parameters:    Size  Location     Type
  7477 ;;  d1              2    0[BANK0 ] PTR void 
  7478 ;;		 -> SetupPkt(8), 
  7479 ;;  s1              2    2[BANK0 ] PTR const void 
  7480 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  7481 ;;  n               2    4[BANK0 ] unsigned int 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  7484 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  7485 ;;  d               2    6[BANK0 ] PTR unsigned char 
  7486 ;;		 -> SetupPkt(8), 
  7487 ;;  tmp             1   10[BANK0 ] unsigned char 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  2    0[BANK0 ] PTR void 
  7490 ;; Registers used:
  7491 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7497 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7498 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7500 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7501 ;;Total ram usage:       11 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:   11
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_USBCtrlEPService
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           	psect	text32
  7512  0000'                    __ptext32:
  7513                           	opt stack 0
  7514  0000'                    _memcpy:
  7515                           	opt stack 14
  7516                           
  7517                           ;incstack = 0
  7518  0000' C002' F008'        	movff	memcpy@s1,memcpy@s
  7519  0004' C003' F009'        	movff	memcpy@s1+1,memcpy@s+1
  7520  0008' C000' F006'        	movff	memcpy@d1,memcpy@d
  7521  000C' C001' F007'        	movff	memcpy@d1+1,memcpy@d+1
  7522  0010' D011               	goto	l2643
  7523  0012'                    l7391:
  7524  0012' C008' FFD9         	movff	memcpy@s,fsr2l
  7525  0016' C009' FFDA         	movff	memcpy@s+1,fsr2h
  7526  001A' 50DF               	movf	indf2,w,c
  7527  001C' 0100               	movlb	0	; () banked
  7528  001E' 6F00'              	movwf	memcpy@tmp& (0+255),b
  7529                           
  7530                           ; BSR set to: 0
  7531  0020' 4B00'              	infsnz	memcpy@s& (0+255),f,b
  7532  0022' 2B00'              	incf	(memcpy@s+1)& (0+255),f,b
  7533                           
  7534                           ; BSR set to: 0
  7535  0024' C006' FFD9         	movff	memcpy@d,fsr2l
  7536  0028' C007' FFDA         	movff	memcpy@d+1,fsr2h
  7537  002C' C00A' FFDF         	movff	memcpy@tmp,indf2
  7538                           
  7539                           ; BSR set to: 0
  7540  0030' 4B00'              	infsnz	memcpy@d& (0+255),f,b
  7541  0032' 2B00'              	incf	(memcpy@d+1)& (0+255),f,b
  7542  0034'                    l2643:
  7543                           
  7544                           ; BSR set to: 0
  7545  0034' 0100               	movlb	0	; () banked
  7546  0036' 0700'              	decf	memcpy@n& (0+255),f,b
  7547  0038' A0D8               	btfss	status,0,c
  7548  003A' 0700'              	decf	(memcpy@n+1)& (0+255),f,b
  7549  003C' 2900'              	incf	memcpy@n& (0+255),w,b
  7550  003E' E1E9               	bnz	l7391
  7551  0040' 2900'              	incf	(memcpy@n+1)& (0+255),w,b
  7552  0042' B4D8               	btfsc	status,2,c
  7553  0044' 0012               	return	
  7554  0046' D7E5               	goto	l2644
  7555  0048'                    __end_of_memcpy:
  7556                           	opt stack 0
  7557                           tosu	equ	0xFFF
  7558                           tosh	equ	0xFFE
  7559                           tosl	equ	0xFFD
  7560                           pclath	equ	0xFFA
  7561                           tblptru	equ	0xFF8
  7562                           tblptrh	equ	0xFF7
  7563                           tblptrl	equ	0xFF6
  7564                           tablat	equ	0xFF5
  7565                           prodh	equ	0xFF4
  7566                           prodl	equ	0xFF3
  7567                           intcon	equ	0xFF2
  7568                           intcon2	equ	0xFF1
  7569                           intcon3	equ	0xFF0
  7570                           postinc0	equ	0xFEE
  7571                           plusw0	equ	0xFEB
  7572                           wreg	equ	0xFE8
  7573                           postinc1	equ	0xFE6
  7574                           postdec1	equ	0xFE5
  7575                           fsr1h	equ	0xFE2
  7576                           fsr1l	equ	0xFE1
  7577                           indf2	equ	0xFDF
  7578                           postinc2	equ	0xFDE
  7579                           postdec2	equ	0xFDD
  7580                           plusw2	equ	0xFDB
  7581                           fsr2h	equ	0xFDA
  7582                           fsr2l	equ	0xFD9
  7583                           status	equ	0xFD8
  7584                           
  7585 ;; *************** function _USBCtrlTrfSetupHandler *****************
  7586 ;; Defined at:
  7587 ;;		line 2483 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7605 ;;Total ram usage:        0 bytes
  7606 ;; Hardware stack levels used:    1
  7607 ;; Hardware stack levels required when called:   17
  7608 ;; This function calls:
  7609 ;;		_USBCheckStdRequest
  7610 ;;		_USBCtrlEPServiceComplete
  7611 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7612 ;; This function is called by:
  7613 ;;		_USBCtrlEPService
  7614 ;; This function uses a non-reentrant model
  7615 ;;
  7616                           
  7617                           	psect	text33
  7618  0000'                    __ptext33:
  7619                           	opt stack 0
  7620  0000'                    _USBCtrlTrfSetupHandler:
  7621                           	opt stack 8
  7622                           
  7623                           ;usb_device.c: 2488: shortPacketStatus = 0;
  7624                           
  7625                           ; BSR set to: 0
  7626                           ;incstack = 0
  7627  0000' 0E00               	movlw	0
  7628  0002' 6E17'              	movwf	_shortPacketStatus,c
  7629                           
  7630                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  7631  0004' 0E00               	movlw	0
  7632  0006' 6E14'              	movwf	_USBDeferStatusStagePacket,c	;volatile
  7633                           
  7634                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  7635  0008' 0E00               	movlw	0
  7636  000A' 0101               	movlb	1	; () banked
  7637  000C' 6F00'              	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7638                           
  7639                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  7640  000E' 0E00               	movlw	0
  7641  0010' 6F00'              	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7642                           
  7643                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  7644  0012' 0E00               	movlw	0
  7645  0014' 6F00'              	movwf	_BothEP0OutUOWNsSet& (0+255),b
  7646                           
  7647                           ;usb_device.c: 2493: controlTransferState = 0;
  7648  0016' 0E00               	movlw	0
  7649  0018' 6E16'              	movwf	_controlTransferState,c
  7650                           
  7651                           ; BSR set to: 1
  7652                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7653  001A' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
  7654  001E' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7655  0022' 0E7F               	movlw	127
  7656  0024' 16DF               	andwf	indf2,f,c
  7657                           
  7658                           ; BSR set to: 1
  7659                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7660  0026' 0E04               	movlw	4
  7661  0028' 1A06'              	xorwf	_pBDTEntryIn,f,c
  7662                           
  7663                           ; BSR set to: 1
  7664                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7665  002A' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
  7666  002E' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7667  0032' 0E7F               	movlw	127
  7668  0034' 16DF               	andwf	indf2,f,c
  7669                           
  7670                           ; BSR set to: 1
  7671                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7672  0036' 0E04               	movlw	4
  7673  0038' 1A06'              	xorwf	_pBDTEntryIn,f,c
  7674                           
  7675                           ; BSR set to: 1
  7676                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  7677  003A' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7678  003E' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7679  0042' 0E7F               	movlw	127
  7680  0044' 16DF               	andwf	indf2,f,c
  7681                           
  7682                           ; BSR set to: 1
  7683                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  7684  0046' 0E00               	movlw	0
  7685  0048' 6E03'              	movwf	_inPipes+3,c
  7686                           
  7687                           ; BSR set to: 1
  7688                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  7689  004A' 0E00               	movlw	0
  7690  004C' 6E05'              	movwf	_inPipes+5,c
  7691  004E' 0E00               	movlw	0
  7692  0050' 6E04'              	movwf	_inPipes+4,c
  7693                           
  7694                           ; BSR set to: 1
  7695                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  7696  0052' 0E00               	movlw	0
  7697  0054' 0102               	movlb	2	; () banked
  7698  0056' 6F00'              	movwf	(_outPipes+3)& (0+255),b
  7699                           
  7700                           ; BSR set to: 2
  7701                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  7702  0058' 0E00               	movlw	0
  7703  005A' 6F00'              	movwf	(_outPipes+5)& (0+255),b
  7704  005C' 0E00               	movlw	0
  7705  005E' 6F00'              	movwf	(_outPipes+4)& (0+255),b
  7706                           
  7707                           ; BSR set to: 2
  7708                           ;usb_device.c: 2517: USBCheckStdRequest();
  7709  0060' EC00' F000'        	call	_USBCheckStdRequest	;wreg free
  7710                           
  7711                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  7712  0064' 0E00               	movlw	0
  7713  0066' 0100               	movlb	0	; () banked
  7714  0068' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7715  006A' 0E03               	movlw	3
  7716  006C' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7717  006E' 0E00               	movlw	0
  7718  0070' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7719  0072' 0E00               	movlw	0
  7720  0074' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7721  0076' 0E00               	movlw	0
  7722  0078' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7723  007A' 0E00               	movlw	0
  7724  007C' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7725  007E' EC00' F000'        	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7726                           
  7727                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  7728  0082' EC00' F000'        	call	_USBCtrlEPServiceComplete	;wreg free
  7729  0086' 0012               	return		;funcret
  7730  0088'                    __end_of_USBCtrlTrfSetupHandler:
  7731                           	opt stack 0
  7732                           tosu	equ	0xFFF
  7733                           tosh	equ	0xFFE
  7734                           tosl	equ	0xFFD
  7735                           pclath	equ	0xFFA
  7736                           tblptru	equ	0xFF8
  7737                           tblptrh	equ	0xFF7
  7738                           tblptrl	equ	0xFF6
  7739                           tablat	equ	0xFF5
  7740                           prodh	equ	0xFF4
  7741                           prodl	equ	0xFF3
  7742                           intcon	equ	0xFF2
  7743                           intcon2	equ	0xFF1
  7744                           intcon3	equ	0xFF0
  7745                           postinc0	equ	0xFEE
  7746                           plusw0	equ	0xFEB
  7747                           wreg	equ	0xFE8
  7748                           postinc1	equ	0xFE6
  7749                           postdec1	equ	0xFE5
  7750                           fsr1h	equ	0xFE2
  7751                           fsr1l	equ	0xFE1
  7752                           indf2	equ	0xFDF
  7753                           postinc2	equ	0xFDE
  7754                           postdec2	equ	0xFDD
  7755                           plusw2	equ	0xFDB
  7756                           fsr2h	equ	0xFDA
  7757                           fsr2l	equ	0xFD9
  7758                           status	equ	0xFD8
  7759                           
  7760 ;; *************** function _USBCtrlEPServiceComplete *****************
  7761 ;; Defined at:
  7762 ;;		line 1634 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;		None
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;		None
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      void 
  7769 ;; Registers used:
  7770 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7780 ;;Total ram usage:        0 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:   13
  7783 ;; This function calls:
  7784 ;;		_USBCtrlEPAllowDataStage
  7785 ;;		_USBCtrlEPAllowStatusStage
  7786 ;; This function is called by:
  7787 ;;		_USBCtrlTrfSetupHandler
  7788 ;; This function uses a non-reentrant model
  7789 ;;
  7790                           
  7791                           	psect	text34
  7792  0000'                    __ptext34:
  7793                           	opt stack 0
  7794  0000'                    _USBCtrlEPServiceComplete:
  7795                           	opt stack 11
  7796                           
  7797                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  7798                           
  7799                           ;incstack = 0
  7800  0000' 9865               	bcf	3941,4,c	;volatile
  7801                           
  7802                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  7803  0002' BE03'              	btfsc	_inPipes+3,7,c
  7804  0004' D03B               	goto	l1437
  7805                           
  7806                           ;usb_device.c: 1647: {
  7807                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  7808  0006' 0102               	movlb	2	; () banked
  7809  0008' AF00'              	btfss	(_outPipes+3)& (0+255),7,b
  7810  000A' D00D               	goto	l1438
  7811                           
  7812                           ; BSR set to: 2
  7813                           ;usb_device.c: 1649: {
  7814                           ;usb_device.c: 1650: controlTransferState = 2;
  7815  000C' 0E02               	movlw	2
  7816  000E' 6E16'              	movwf	_controlTransferState,c
  7817                           
  7818                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  7819  0010' 0101               	movlb	1	; () banked
  7820  0012' 5100'              	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  7821  0014' B4D8               	btfsc	status,2,c
  7822                           
  7823                           ; BSR set to: 1
  7824                           ;usb_device.c: 1662: {
  7825                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  7826  0016' EC00' F000'        	call	_USBCtrlEPAllowDataStage	;wreg free
  7827                           
  7828                           ;usb_device.c: 1664: }
  7829                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  7830  001A' 0E00               	movlw	0
  7831  001C' 0101               	movlb	1	; () banked
  7832  001E' 6F00'              	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7833                           
  7834                           ; BSR set to: 1
  7835                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  7836  0020' 0E00               	movlw	0
  7837  0022' 6F00'              	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7838                           
  7839                           ;usb_device.c: 1670: }
  7840  0024' 0012               	return	
  7841  0026'                    l1438:
  7842                           
  7843                           ;usb_device.c: 1671: else
  7844                           ;usb_device.c: 1672: {
  7845                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  7846                           
  7847                           ; BSR set to: 1
  7848  0026' EE20 F001          	lfsr	2,1
  7849  002A' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
  7850  002C' 26D9               	addwf	fsr2l,f,c
  7851  002E' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
  7852  0030' 22DA               	addwfc	fsr2h,f,c
  7853  0032' 0E08               	movlw	8
  7854  0034' 6EDF               	movwf	indf2,c
  7855                           
  7856                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7857  0036' EE20 F002          	lfsr	2,2
  7858  003A' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
  7859  003C' 26D9               	addwf	fsr2l,f,c
  7860  003E' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
  7861  0040' 22DA               	addwfc	fsr2h,f,c
  7862  0042' 0E30               	movlw	48
  7863  0044' 6EDE               	movwf	postinc2,c
  7864  0046' 0E04               	movlw	4
  7865  0048' 6EDD               	movwf	postdec2,c
  7866                           
  7867                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7868  004A' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7869  004E' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7870  0052' 0E0C               	movlw	12
  7871  0054' 6EDF               	movwf	indf2,c
  7872                           
  7873                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7874  0056' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7875  005A' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7876  005E' 0E00               	movlw	0
  7877  0060' 8EDB               	bsf	plusw2,7,c
  7878                           
  7879                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  7880  0062' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
  7881  0066' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7882  006A' 0E04               	movlw	4
  7883  006C' 6EDF               	movwf	indf2,c
  7884                           
  7885                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7886  006E' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
  7887  0072' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7888  0076' 0E00               	movlw	0
  7889  0078' 8EDB               	bsf	plusw2,7,c
  7890                           
  7891                           ;usb_device.c: 1683: }
  7892                           ;usb_device.c: 1684: }
  7893  007A' 0012               	return	
  7894  007C'                    l1437:
  7895                           
  7896                           ;usb_device.c: 1685: else
  7897                           ;usb_device.c: 1686: {
  7898                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  7899  007C' 0104               	movlb	4	; () banked
  7900  007E' AF30               	btfss	48,7,b	;volatile
  7901  0080' D012               	goto	l1442
  7902                           
  7903                           ; BSR set to: 4
  7904                           ;usb_device.c: 1688: {
  7905                           ;usb_device.c: 1689: controlTransferState = 1;
  7906  0082' 0E01               	movlw	1
  7907  0084' 6E16'              	movwf	_controlTransferState,c
  7908                           
  7909                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  7910  0086' 0101               	movlb	1	; () banked
  7911  0088' 5100'              	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  7912  008A' B4D8               	btfsc	status,2,c
  7913                           
  7914                           ; BSR set to: 1
  7915                           ;usb_device.c: 1704: {
  7916                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  7917  008C' EC00' F000'        	call	_USBCtrlEPAllowDataStage	;wreg free
  7918                           
  7919                           ;usb_device.c: 1706: }
  7920                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  7921  0090' 0E00               	movlw	0
  7922  0092' 0101               	movlb	1	; () banked
  7923  0094' 6F00'              	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7924                           
  7925                           ; BSR set to: 1
  7926                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  7927  0096' 0E00               	movlw	0
  7928  0098' 6F00'              	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7929                           
  7930                           ; BSR set to: 1
  7931                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  7932  009A' 5014'              	movf	_USBDeferStatusStagePacket,w,c	;volatile
  7933  009C' A4D8               	btfss	status,2,c
  7934  009E' 0012               	return	
  7935                           
  7936                           ; BSR set to: 1
  7937                           ;usb_device.c: 1731: {
  7938                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  7939  00A0' EC00' F000'        	call	_USBCtrlEPAllowStatusStage	;wreg free
  7940                           
  7941                           ;usb_device.c: 1733: }
  7942                           ;usb_device.c: 1734: }
  7943  00A4' 0012               	return	
  7944  00A6'                    l1442:
  7945                           
  7946                           ;usb_device.c: 1735: else
  7947                           ;usb_device.c: 1736: {
  7948                           ;usb_device.c: 1747: controlTransferState = 2;
  7949  00A6' 0E02               	movlw	2
  7950  00A8' 6E16'              	movwf	_controlTransferState,c
  7951                           
  7952                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  7953  00AA' EE20 F001          	lfsr	2,1
  7954  00AE' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
  7955  00B0' 26D9               	addwf	fsr2l,f,c
  7956  00B2' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
  7957  00B4' 22DA               	addwfc	fsr2h,f,c
  7958  00B6' 0E08               	movlw	8
  7959  00B8' 6EDF               	movwf	indf2,c
  7960                           
  7961                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7962  00BA' EE20 F002          	lfsr	2,2
  7963  00BE' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
  7964  00C0' 26D9               	addwf	fsr2l,f,c
  7965  00C2' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
  7966  00C4' 22DA               	addwfc	fsr2h,f,c
  7967  00C6' 0E30               	movlw	48
  7968  00C8' 6EDE               	movwf	postinc2,c
  7969  00CA' 0E04               	movlw	4
  7970  00CC' 6EDD               	movwf	postdec2,c
  7971                           
  7972                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7973  00CE' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7974  00D2' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7975  00D6' 0E04               	movlw	4
  7976  00D8' 6EDF               	movwf	indf2,c
  7977                           
  7978                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7979  00DA' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7980  00DE' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7981  00E2' 0E00               	movlw	0
  7982  00E4' 8EDB               	bsf	plusw2,7,c
  7983                           
  7984                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  7985  00E6' 0E00               	movlw	0
  7986  00E8' 0101               	movlb	1	; () banked
  7987  00EA' 6F00'              	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7988                           
  7989                           ; BSR set to: 1
  7990                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  7991  00EC' 0E00               	movlw	0
  7992  00EE' 6F00'              	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7993                           
  7994                           ; BSR set to: 1
  7995                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  7996  00F0' 5014'              	movf	_USBDeferStatusStagePacket,w,c	;volatile
  7997  00F2' A4D8               	btfss	status,2,c
  7998  00F4' 0012               	return	
  7999                           
  8000                           ; BSR set to: 1
  8001                           ;usb_device.c: 1759: {
  8002                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  8003  00F6' EC00' F000'        	call	_USBCtrlEPAllowStatusStage	;wreg free
  8004  00FA' 0012               	return	
  8005  00FC'                    __end_of_USBCtrlEPServiceComplete:
  8006                           	opt stack 0
  8007                           tosu	equ	0xFFF
  8008                           tosh	equ	0xFFE
  8009                           tosl	equ	0xFFD
  8010                           pclath	equ	0xFFA
  8011                           tblptru	equ	0xFF8
  8012                           tblptrh	equ	0xFF7
  8013                           tblptrl	equ	0xFF6
  8014                           tablat	equ	0xFF5
  8015                           prodh	equ	0xFF4
  8016                           prodl	equ	0xFF3
  8017                           intcon	equ	0xFF2
  8018                           intcon2	equ	0xFF1
  8019                           intcon3	equ	0xFF0
  8020                           postinc0	equ	0xFEE
  8021                           plusw0	equ	0xFEB
  8022                           wreg	equ	0xFE8
  8023                           postinc1	equ	0xFE6
  8024                           postdec1	equ	0xFE5
  8025                           fsr1h	equ	0xFE2
  8026                           fsr1l	equ	0xFE1
  8027                           indf2	equ	0xFDF
  8028                           postinc2	equ	0xFDE
  8029                           postdec2	equ	0xFDD
  8030                           plusw2	equ	0xFDB
  8031                           fsr2h	equ	0xFDA
  8032                           fsr2l	equ	0xFD9
  8033                           status	equ	0xFD8
  8034                           
  8035 ;; *************** function _USBCtrlEPAllowDataStage *****************
  8036 ;; Defined at:
  8037 ;;		line 1506 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;		None
  8040 ;; Auto vars:     Size  Location     Type
  8041 ;;		None
  8042 ;; Return value:  Size  Location     Type
  8043 ;;                  1    wreg      void 
  8044 ;; Registers used:
  8045 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8046 ;; Tracked objects:
  8047 ;;		On entry : 0/0
  8048 ;;		On exit  : 0/0
  8049 ;;		Unchanged: 0/0
  8050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8055 ;;Total ram usage:        0 bytes
  8056 ;; Hardware stack levels used:    1
  8057 ;; Hardware stack levels required when called:   12
  8058 ;; This function calls:
  8059 ;;		_USBCtrlTrfTxService
  8060 ;; This function is called by:
  8061 ;;		_USBCtrlEPServiceComplete
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           	psect	text35
  8066  0000'                    __ptext35:
  8067                           	opt stack 0
  8068  0000'                    _USBCtrlEPAllowDataStage:
  8069                           	opt stack 11
  8070                           
  8071                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  8072                           
  8073                           ;incstack = 0
  8074  0000' 0E00               	movlw	0
  8075  0002' 0101               	movlb	1	; () banked
  8076  0004' 6F00'              	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  8077                           
  8078                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  8079  0006' 0E00               	movlw	0
  8080  0008' 6F00'              	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  8081                           
  8082                           ; BSR set to: 1
  8083                           ;usb_device.c: 1511: if(controlTransferState == 2)
  8084  000A' 0E02               	movlw	2
  8085  000C' 1816'              	xorwf	_controlTransferState,w,c
  8086  000E' A4D8               	btfss	status,2,c
  8087  0010' D01F               	goto	l1426
  8088                           
  8089                           ; BSR set to: 1
  8090                           ;usb_device.c: 1512: {
  8091                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  8092  0012' EE20 F001          	lfsr	2,1
  8093  0016' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
  8094  0018' 26D9               	addwf	fsr2l,f,c
  8095  001A' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
  8096  001C' 22DA               	addwfc	fsr2h,f,c
  8097  001E' 0E08               	movlw	8
  8098  0020' 6EDF               	movwf	indf2,c
  8099                           
  8100                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  8101  0022' EE20 F002          	lfsr	2,2
  8102  0026' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
  8103  0028' 26D9               	addwf	fsr2l,f,c
  8104  002A' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
  8105  002C' 22DA               	addwfc	fsr2h,f,c
  8106  002E' 0E38               	movlw	56
  8107  0030' 6EDE               	movwf	postinc2,c
  8108  0032' 0E04               	movlw	4
  8109  0034' 6EDD               	movwf	postdec2,c
  8110                           
  8111                           ; BSR set to: 1
  8112                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  8113  0036' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8114  003A' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8115  003E' 0E48               	movlw	72
  8116  0040' 6EDF               	movwf	indf2,c
  8117                           
  8118                           ; BSR set to: 1
  8119                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  8120  0042' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  8121  0046' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  8122  004A' 0E00               	movlw	0
  8123  004C' 8EDB               	bsf	plusw2,7,c
  8124                           
  8125                           ;usb_device.c: 1518: }
  8126  004E' 0012               	return	
  8127  0050'                    l1426:
  8128                           
  8129                           ; BSR set to: 1
  8130                           ;usb_device.c: 1519: else
  8131                           ;usb_device.c: 1520: {
  8132                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  8133                           
  8134                           ; BSR set to: 1
  8135  0050' 5004'              	movf	_inPipes+4,w,c
  8136  0052' 0104               	movlb	4	; () banked
  8137  0054' 5D36               	subwf	54,w,b	;volatile
  8138  0056' 5005'              	movf	_inPipes+5,w,c
  8139  0058' 5937               	subwfb	55,w,b	;volatile
  8140  005A' B0D8               	btfsc	status,0,c
  8141  005C' D004               	goto	l1428
  8142                           
  8143                           ; BSR set to: 4
  8144                           ;usb_device.c: 1524: {
  8145                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  8146  005E' C436 F004'         	movff	1078,_inPipes+4	;volatile
  8147  0062' C437 F005'         	movff	1079,_inPipes+5	;volatile
  8148  0066'                    l1428:
  8149                           
  8150                           ; BSR set to: 4
  8151                           ;usb_device.c: 1526: }
  8152                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  8153                           
  8154                           ; BSR set to: 4
  8155  0066' EC00' F000'        	call	_USBCtrlTrfTxService	;wreg free
  8156                           
  8157                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  8158  006A' EE20 F002          	lfsr	2,2
  8159  006E' 5006'              	movf	_pBDTEntryIn,w,c
  8160  0070' 26D9               	addwf	fsr2l,f,c
  8161  0072' 5007'              	movf	_pBDTEntryIn+1,w,c
  8162  0074' 22DA               	addwfc	fsr2h,f,c
  8163  0076' 0E38               	movlw	56
  8164  0078' 6EDE               	movwf	postinc2,c
  8165  007A' 0E04               	movlw	4
  8166  007C' 6EDD               	movwf	postdec2,c
  8167                           
  8168                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  8169  007E' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
  8170  0082' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8171  0086' 0E48               	movlw	72
  8172  0088' 6EDF               	movwf	indf2,c
  8173                           
  8174                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  8175  008A' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
  8176  008E' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
  8177  0092' 0E00               	movlw	0
  8178  0094' 8EDB               	bsf	plusw2,7,c
  8179  0096' 0012               	return	
  8180  0098'                    __end_of_USBCtrlEPAllowDataStage:
  8181                           	opt stack 0
  8182                           tosu	equ	0xFFF
  8183                           tosh	equ	0xFFE
  8184                           tosl	equ	0xFFD
  8185                           pclath	equ	0xFFA
  8186                           tblptru	equ	0xFF8
  8187                           tblptrh	equ	0xFF7
  8188                           tblptrl	equ	0xFF6
  8189                           tablat	equ	0xFF5
  8190                           prodh	equ	0xFF4
  8191                           prodl	equ	0xFF3
  8192                           intcon	equ	0xFF2
  8193                           intcon2	equ	0xFF1
  8194                           intcon3	equ	0xFF0
  8195                           postinc0	equ	0xFEE
  8196                           plusw0	equ	0xFEB
  8197                           wreg	equ	0xFE8
  8198                           postinc1	equ	0xFE6
  8199                           postdec1	equ	0xFE5
  8200                           fsr1h	equ	0xFE2
  8201                           fsr1l	equ	0xFE1
  8202                           indf2	equ	0xFDF
  8203                           postinc2	equ	0xFDE
  8204                           postdec2	equ	0xFDD
  8205                           plusw2	equ	0xFDB
  8206                           fsr2h	equ	0xFDA
  8207                           fsr2l	equ	0xFD9
  8208                           status	equ	0xFD8
  8209                           
  8210 ;; *************** function _USBCheckStdRequest *****************
  8211 ;; Defined at:
  8212 ;;		line 2703 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;		None
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;		None
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  1    wreg      void 
  8219 ;; Registers used:
  8220 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8230 ;;Total ram usage:        0 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; Hardware stack levels required when called:   16
  8233 ;; This function calls:
  8234 ;;		_USBStdFeatureReqHandler
  8235 ;;		_USBStdGetDscHandler
  8236 ;;		_USBStdGetStatusHandler
  8237 ;;		_USBStdSetCfgHandler
  8238 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8239 ;; This function is called by:
  8240 ;;		_USBCtrlTrfSetupHandler
  8241 ;; This function uses a non-reentrant model
  8242 ;;
  8243                           
  8244                           	psect	text36
  8245  0000'                    __ptext36:
  8246                           	opt stack 0
  8247  0000'                    _USBCheckStdRequest:
  8248                           	opt stack 8
  8249                           
  8250                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  8251                           
  8252                           ;incstack = 0
  8253  0000' 0104               	movlb	4	; () banked
  8254  0002' 3930               	swapf	48,w,b	;volatile
  8255  0004' 32E8               	rrcf	wreg,f,c
  8256  0006' 0B03               	andlw	3
  8257  0008' 0900               	iorlw	0
  8258  000A' A4D8               	btfss	status,2,c
  8259  000C' 0012               	return	
  8260  000E' D044               	goto	l1561
  8261  0010'                    l1562:
  8262                           
  8263                           ; BSR set to: 4
  8264                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  8265  0010' 8E03'              	bsf	_inPipes+3,7,c
  8266                           
  8267                           ; BSR set to: 4
  8268                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  8269  0012' 0E08               	movlw	8
  8270  0014' 0102               	movlb	2	; () banked
  8271  0016' 6F00'              	movwf	_USBDeviceState& (0+255),b
  8272                           
  8273                           ;usb_device.c: 2713: break;
  8274  0018' 0012               	return	
  8275  001A'                    
  8276                           ;usb_device.c: 2715: USBStdGetDscHandler();
  8277                           
  8278                           ; BSR set to: 2
  8279  001A' EC00' F000'        	call	_USBStdGetDscHandler	;wreg free
  8280                           
  8281                           ;usb_device.c: 2716: break;
  8282  001E' 0012               	return	
  8283  0020'                    
  8284                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  8285  0020' EC00' F000'        	call	_USBStdSetCfgHandler	;wreg free
  8286                           
  8287                           ;usb_device.c: 2719: break;
  8288  0024' 0012               	return	
  8289  0026'                    
  8290                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  8291  0026' 0E00'              	movlw	low _USBActiveConfiguration
  8292  0028' 6E00'              	movwf	_inPipes,c
  8293  002A' 0E00'              	movlw	high _USBActiveConfiguration
  8294  002C' 6E01'              	movwf	_inPipes+1,c
  8295                           
  8296                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8297  002E' 8003'              	bsf	_inPipes+3,0,c
  8298                           
  8299                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  8300  0030' 0E01               	movlw	1
  8301  0032' 6E04'              	movwf	_inPipes+4,c
  8302                           
  8303                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  8304  0034' 8E03'              	bsf	_inPipes+3,7,c
  8305                           
  8306                           ;usb_device.c: 2725: break;
  8307  0036' 0012               	return	
  8308  0038'                    
  8309                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  8310  0038' EC00' F000'        	call	_USBStdGetStatusHandler	;wreg free
  8311                           
  8312                           ;usb_device.c: 2728: break;
  8313  003C' 0012               	return	
  8314  003E'                    
  8315                           ;usb_device.c: 2730: case 3:
  8316                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  8317  003E' EC00' F000'        	call	_USBStdFeatureReqHandler	;wreg free
  8318                           
  8319                           ;usb_device.c: 2732: break;
  8320  0042' 0012               	return	
  8321  0044'                    
  8322                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  8323  0044' 0104               	movlb	4	; () banked
  8324  0046' 5134               	movf	52,w,b	;volatile
  8325  0048' 0D01               	mullw	1
  8326  004A' 0E00'              	movlw	low _USBAlternateInterface
  8327  004C' 24F3               	addwf	prodl,w,c
  8328  004E' 6E00'              	movwf	_inPipes,c
  8329  0050' 0E00'              	movlw	high _USBAlternateInterface
  8330  0052' 20F4               	addwfc	prodh,w,c
  8331  0054' 6E01'              	movwf	_inPipes+1,c
  8332                           
  8333                           ; BSR set to: 4
  8334                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8335  0056' 8003'              	bsf	_inPipes+3,0,c
  8336                           
  8337                           ; BSR set to: 4
  8338                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  8339  0058' 0E01               	movlw	1
  8340  005A' 6E04'              	movwf	_inPipes+4,c
  8341                           
  8342                           ; BSR set to: 4
  8343                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  8344  005C' 8E03'              	bsf	_inPipes+3,7,c
  8345                           
  8346                           ;usb_device.c: 2738: break;
  8347  005E' 0012               	return	
  8348  0060'                    l1571:
  8349                           
  8350                           ; BSR set to: 4
  8351                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  8352  0060' 8E03'              	bsf	_inPipes+3,7,c
  8353                           
  8354                           ; BSR set to: 4
  8355                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  8356  0062' 5134               	movf	52,w,b	;volatile
  8357  0064' 0D01               	mullw	1
  8358  0066' 0E00'              	movlw	low _USBAlternateInterface
  8359  0068' 24F3               	addwf	prodl,w,c
  8360  006A' 6ED9               	movwf	fsr2l,c
  8361  006C' 0E00'              	movlw	high _USBAlternateInterface
  8362  006E' 20F4               	addwfc	prodh,w,c
  8363  0070' 6EDA               	movwf	fsr2h,c
  8364  0072' C432 FFDF          	movff	1074,indf2	;volatile
  8365                           
  8366                           ;usb_device.c: 2742: break;
  8367  0076' 0012               	return	
  8368  0078'                    
  8369                           ; BSR set to: 4
  8370                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  8371                           
  8372                           ; BSR set to: 4
  8373  0078' 0E00               	movlw	0
  8374  007A' 0100               	movlb	0	; () banked
  8375  007C' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8376  007E' 0E02               	movlw	2
  8377  0080' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8378  0082' 0E00               	movlw	0
  8379  0084' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8380  0086' 0E00               	movlw	0
  8381  0088' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8382  008A' 0E00               	movlw	0
  8383  008C' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8384  008E' 0E00               	movlw	0
  8385  0090' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8386  0092' EC00' F000'        	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8387                           
  8388                           ;usb_device.c: 2749: }
  8389                           
  8390                           ;usb_device.c: 2748: break;
  8391                           
  8392                           ;usb_device.c: 2747: default:
  8393                           
  8394                           ;usb_device.c: 2746: case 12:
  8395                           
  8396                           ;usb_device.c: 2745: break;
  8397  0096' 0012               	return	
  8398  0098'                    l1561:
  8399  0098' 0104               	movlb	4	; () banked
  8400  009A' 5131               	movf	49,w,b	;volatile
  8401                           
  8402                           ; Switch size 1, requested type "space"
  8403                           ; Number of cases is 11, Range of values is 0 to 12
  8404                           ; switch strategies available:
  8405                           ; Name         Instructions Cycles
  8406                           ; simple_byte           34    18 (average)
  8407                           ;	Chosen strategy is simple_byte
  8408  009C' 0A00               	xorlw	0	; case 0
  8409  009E' B4D8               	btfsc	status,2,c
  8410  00A0' D7CB               	goto	l1567
  8411  00A2' 0A01               	xorlw	1	; case 1
  8412  00A4' B4D8               	btfsc	status,2,c
  8413  00A6' D7CB               	goto	l1568
  8414  00A8' 0A02               	xorlw	2	; case 3
  8415  00AA' B4D8               	btfsc	status,2,c
  8416  00AC' D7C8               	goto	l1568
  8417  00AE' 0A06               	xorlw	6	; case 5
  8418  00B0' B4D8               	btfsc	status,2,c
  8419  00B2' D7AE               	goto	l1562
  8420  00B4' 0A03               	xorlw	3	; case 6
  8421  00B6' B4D8               	btfsc	status,2,c
  8422  00B8' D7B0               	goto	l1564
  8423  00BA' 0A01               	xorlw	1	; case 7
  8424  00BC' B4D8               	btfsc	status,2,c
  8425  00BE' D7DC               	goto	l1572
  8426  00C0' 0A0F               	xorlw	15	; case 8
  8427  00C2' B4D8               	btfsc	status,2,c
  8428  00C4' D7B0               	goto	l1566
  8429  00C6' 0A01               	xorlw	1	; case 9
  8430  00C8' B4D8               	btfsc	status,2,c
  8431  00CA' D7AA               	goto	l1565
  8432  00CC' 0A03               	xorlw	3	; case 10
  8433  00CE' B4D8               	btfsc	status,2,c
  8434  00D0' D7B9               	goto	l1570
  8435  00D2' 0A01               	xorlw	1	; case 11
  8436  00D4' B4D8               	btfsc	status,2,c
  8437  00D6' D7C4               	goto	l1571
  8438  00D8' 0A07               	xorlw	7	; case 12
  8439  00DA' 0012               	return	
  8440  00DC'                    __end_of_USBCheckStdRequest:
  8441                           	opt stack 0
  8442                           tosu	equ	0xFFF
  8443                           tosh	equ	0xFFE
  8444                           tosl	equ	0xFFD
  8445                           pclath	equ	0xFFA
  8446                           tblptru	equ	0xFF8
  8447                           tblptrh	equ	0xFF7
  8448                           tblptrl	equ	0xFF6
  8449                           tablat	equ	0xFF5
  8450                           prodh	equ	0xFF4
  8451                           prodl	equ	0xFF3
  8452                           intcon	equ	0xFF2
  8453                           intcon2	equ	0xFF1
  8454                           intcon3	equ	0xFF0
  8455                           postinc0	equ	0xFEE
  8456                           plusw0	equ	0xFEB
  8457                           wreg	equ	0xFE8
  8458                           postinc1	equ	0xFE6
  8459                           postdec1	equ	0xFE5
  8460                           fsr1h	equ	0xFE2
  8461                           fsr1l	equ	0xFE1
  8462                           indf2	equ	0xFDF
  8463                           postinc2	equ	0xFDE
  8464                           postdec2	equ	0xFDD
  8465                           plusw2	equ	0xFDB
  8466                           fsr2h	equ	0xFDA
  8467                           fsr2l	equ	0xFD9
  8468                           status	equ	0xFD8
  8469                           
  8470 ;; *************** function _USBStdSetCfgHandler *****************
  8471 ;; Defined at:
  8472 ;;		line 1986 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;  i               1   20[BANK0 ] unsigned char 
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8487 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8489 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8490 ;;Total ram usage:        1 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; Hardware stack levels required when called:   15
  8493 ;; This function calls:
  8494 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8495 ;;		_memset
  8496 ;; This function is called by:
  8497 ;;		_USBCheckStdRequest
  8498 ;; This function uses a non-reentrant model
  8499 ;;
  8500                           
  8501                           	psect	text37
  8502  0000'                    __ptext37:
  8503                           	opt stack 0
  8504  0000'                    _USBStdSetCfgHandler:
  8505                           	opt stack 8
  8506                           
  8507                           ;usb_device.c: 1988: uint8_t i;
  8508                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  8509                           
  8510                           ;incstack = 0
  8511  0000' 8E03'              	bsf	_inPipes+3,7,c
  8512                           
  8513                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  8514  0002' 0E27               	movlw	39
  8515  0004' 0100               	movlb	0	; () banked
  8516  0006' 6F00'              	movwf	memset@p1& (0+255),b
  8517  0008' 0E0F               	movlw	15
  8518  000A' 6F00'              	movwf	(memset@p1+1)& (0+255),b
  8519  000C' 0E00               	movlw	0
  8520  000E' 6F00'              	movwf	(memset@c+1)& (0+255),b
  8521  0010' 0E00               	movlw	0
  8522  0012' 6F00'              	movwf	memset@c& (0+255),b
  8523  0014' 0E00               	movlw	0
  8524  0016' 6F00'              	movwf	(memset@n+1)& (0+255),b
  8525  0018' 0E02               	movlw	2
  8526  001A' 6F00'              	movwf	memset@n& (0+255),b
  8527  001C' EC00' F000'        	call	_memset	;wreg free
  8528                           
  8529                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  8530  0020' 0E00               	movlw	0
  8531  0022' 0100               	movlb	0	; () banked
  8532  0024' 6F00'              	movwf	memset@p1& (0+255),b
  8533  0026' 0E04               	movlw	4
  8534  0028' 6F00'              	movwf	(memset@p1+1)& (0+255),b
  8535  002A' 0E00               	movlw	0
  8536  002C' 6F00'              	movwf	(memset@c+1)& (0+255),b
  8537  002E' 0E00               	movlw	0
  8538  0030' 6F00'              	movwf	memset@c& (0+255),b
  8539  0032' 0E00               	movlw	0
  8540  0034' 6F00'              	movwf	(memset@n+1)& (0+255),b
  8541  0036' 0E30               	movlw	48
  8542  0038' 6F00'              	movwf	memset@n& (0+255),b
  8543  003A' EC00' F000'        	call	_memset	;wreg free
  8544                           
  8545                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  8546  003E' 8C65               	bsf	3941,6,c	;volatile
  8547                           
  8548                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  8549  0040' 0E00               	movlw	0
  8550  0042' 0100               	movlb	0	; () banked
  8551  0044' 6F00'              	movwf	USBStdSetCfgHandler@i& (0+255),b
  8552  0046'                    l6777:
  8553                           
  8554                           ; BSR set to: 0
  8555  0046' 0E02               	movlw	2
  8556  0048' 6500'              	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  8557  004A' D001               	goto	l1478
  8558  004C' D016               	goto	u4570
  8559  004E'                    l1478:
  8560                           
  8561                           ; BSR set to: 0
  8562                           ;usb_device.c: 2006: {
  8563                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  8564                           
  8565                           ; BSR set to: 0
  8566  004E' 5100'              	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8567  0050' 0D01               	mullw	1
  8568  0052' 0E00'              	movlw	low _ep_data_in
  8569  0054' 24F3               	addwf	prodl,w,c
  8570  0056' 6ED9               	movwf	fsr2l,c
  8571  0058' 0E00'              	movlw	high _ep_data_in
  8572  005A' 20F4               	addwfc	prodh,w,c
  8573  005C' 6EDA               	movwf	fsr2h,c
  8574  005E' 0E00               	movlw	0
  8575  0060' 6EDF               	movwf	indf2,c
  8576                           
  8577                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  8578  0062' 5100'              	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8579  0064' 0D01               	mullw	1
  8580  0066' 0E00'              	movlw	low _ep_data_out
  8581  0068' 24F3               	addwf	prodl,w,c
  8582  006A' 6ED9               	movwf	fsr2l,c
  8583  006C' 0E00'              	movlw	high _ep_data_out
  8584  006E' 20F4               	addwfc	prodh,w,c
  8585  0070' 6EDA               	movwf	fsr2h,c
  8586  0072' 0E00               	movlw	0
  8587  0074' 6EDF               	movwf	indf2,c
  8588                           
  8589                           ; BSR set to: 0
  8590  0076' 2B00'              	incf	USBStdSetCfgHandler@i& (0+255),f,b
  8591  0078' D7E6               	goto	l6777
  8592  007A'                    u4570:
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;usb_device.c: 2009: }
  8596                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  8597                           
  8598                           ; BSR set to: 0
  8599  007A' 0E00'              	movlw	low _USBAlternateInterface
  8600  007C' 6F00'              	movwf	memset@p1& (0+255),b
  8601  007E' 0E00'              	movlw	high _USBAlternateInterface
  8602  0080' 6F00'              	movwf	(memset@p1+1)& (0+255),b
  8603  0082' 0E00               	movlw	0
  8604  0084' 6F00'              	movwf	(memset@c+1)& (0+255),b
  8605  0086' 0E00               	movlw	0
  8606  0088' 6F00'              	movwf	memset@c& (0+255),b
  8607  008A' 0E00               	movlw	0
  8608  008C' 6F00'              	movwf	(memset@n+1)& (0+255),b
  8609  008E' 0E02               	movlw	2
  8610  0090' 6F00'              	movwf	memset@n& (0+255),b
  8611  0092' EC00' F000'        	call	_memset	;wreg free
  8612                           
  8613                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  8614  0096' 9C65               	bcf	3941,6,c	;volatile
  8615                           
  8616                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8617  0098' 0E08               	movlw	8
  8618  009A' 6E06'              	movwf	_pBDTEntryIn,c
  8619  009C' 0E04               	movlw	4
  8620  009E' 6E07'              	movwf	_pBDTEntryIn+1,c
  8621                           
  8622                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  8623  00A0' 0E00               	movlw	0
  8624  00A2' 6E10'              	movwf	_pBDTEntryEP0OutCurrent,c
  8625  00A4' 0E04               	movlw	4
  8626  00A6' 6E11'              	movwf	_pBDTEntryEP0OutCurrent+1,c
  8627                           
  8628                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8629  00A8' C010' F00E'        	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8630  00AC' C011' F00F'        	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8631                           
  8632                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  8633  00B0' C432 F01A'         	movff	1074,_USBActiveConfiguration	;volatile
  8634                           
  8635                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  8636  00B4' 501A'              	movf	_USBActiveConfiguration,w,c
  8637  00B6' A4D8               	btfss	status,2,c
  8638  00B8' D004               	goto	l1480
  8639                           
  8640                           ;usb_device.c: 2028: {
  8641                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  8642  00BA' 0E10               	movlw	16
  8643  00BC' 0102               	movlb	2	; () banked
  8644  00BE' 6F00'              	movwf	_USBDeviceState& (0+255),b
  8645                           
  8646                           ;usb_device.c: 2031: }
  8647  00C0' 0012               	return	
  8648  00C2'                    l1480:
  8649                           
  8650                           ;usb_device.c: 2032: else
  8651                           ;usb_device.c: 2033: {
  8652                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  8653                           
  8654                           ; BSR set to: 2
  8655  00C2' 0E00               	movlw	0
  8656  00C4' 0100               	movlb	0	; () banked
  8657  00C6' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8658  00C8' 0E01               	movlw	1
  8659  00CA' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8660  00CC' 0E00'              	movlw	low _USBActiveConfiguration
  8661  00CE' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8662  00D0' 0E00'              	movlw	high _USBActiveConfiguration
  8663  00D2' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8664  00D4' 0E00               	movlw	0
  8665  00D6' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8666  00D8' 0E01               	movlw	1
  8667  00DA' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8668  00DC' EC00' F000'        	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8669                           
  8670                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  8671  00E0' 0E20               	movlw	32
  8672  00E2' 0102               	movlb	2	; () banked
  8673  00E4' 6F00'              	movwf	_USBDeviceState& (0+255),b
  8674  00E6' 0012               	return	
  8675  00E8'                    __end_of_USBStdSetCfgHandler:
  8676                           	opt stack 0
  8677                           tosu	equ	0xFFF
  8678                           tosh	equ	0xFFE
  8679                           tosl	equ	0xFFD
  8680                           pclath	equ	0xFFA
  8681                           tblptru	equ	0xFF8
  8682                           tblptrh	equ	0xFF7
  8683                           tblptrl	equ	0xFF6
  8684                           tablat	equ	0xFF5
  8685                           prodh	equ	0xFF4
  8686                           prodl	equ	0xFF3
  8687                           intcon	equ	0xFF2
  8688                           intcon2	equ	0xFF1
  8689                           intcon3	equ	0xFF0
  8690                           postinc0	equ	0xFEE
  8691                           plusw0	equ	0xFEB
  8692                           wreg	equ	0xFE8
  8693                           postinc1	equ	0xFE6
  8694                           postdec1	equ	0xFE5
  8695                           fsr1h	equ	0xFE2
  8696                           fsr1l	equ	0xFE1
  8697                           indf2	equ	0xFDF
  8698                           postinc2	equ	0xFDE
  8699                           postdec2	equ	0xFDD
  8700                           plusw2	equ	0xFDB
  8701                           fsr2h	equ	0xFDA
  8702                           fsr2l	equ	0xFD9
  8703                           status	equ	0xFD8
  8704                           
  8705 ;; *************** function _USBStdGetStatusHandler *****************
  8706 ;; Defined at:
  8707 ;;		line 2147 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8708 ;; Parameters:    Size  Location     Type
  8709 ;;		None
  8710 ;; Auto vars:     Size  Location     Type
  8711 ;;  p               2    1[BANK0 ] PTR struct __BDT
  8712 ;;		 -> BDT(48), NULL(0), 
  8713 ;; Return value:  Size  Location     Type
  8714 ;;                  1    wreg      void 
  8715 ;; Registers used:
  8716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8717 ;; Tracked objects:
  8718 ;;		On entry : 0/0
  8719 ;;		On exit  : 0/0
  8720 ;;		Unchanged: 0/0
  8721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8723 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8724 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8725 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8726 ;;Total ram usage:        3 bytes
  8727 ;; Hardware stack levels used:    1
  8728 ;; Hardware stack levels required when called:   11
  8729 ;; This function calls:
  8730 ;;		Nothing
  8731 ;; This function is called by:
  8732 ;;		_USBCheckStdRequest
  8733 ;; This function uses a non-reentrant model
  8734 ;;
  8735                           
  8736                           	psect	text38
  8737  0000'                    __ptext38:
  8738                           	opt stack 0
  8739  0000'                    _USBStdGetStatusHandler:
  8740                           	opt stack 12
  8741                           
  8742                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  8743                           
  8744                           ; BSR set to: 2
  8745                           ;incstack = 0
  8746  0000' 0E00               	movlw	0
  8747  0002' 0104               	movlb	4	; () banked
  8748  0004' 6F38               	movwf	56,b	;volatile
  8749                           
  8750                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  8751  0006' 0E00               	movlw	0
  8752  0008' 6F39               	movwf	57,b	;volatile
  8753                           
  8754                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  8755  000A' D039               	goto	l1499
  8756  000C'                    l1500:
  8757                           
  8758                           ; BSR set to: 4
  8759                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  8760  000C' 8E03'              	bsf	_inPipes+3,7,c
  8761                           
  8762                           ; BSR set to: 4
  8763                           ;usb_device.c: 2163: }
  8764                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  8765                           
  8766                           ; BSR set to: 4
  8767                           
  8768                           ; BSR set to: 4
  8769                           ;usb_device.c: 2161: {
  8770                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  8771                           
  8772                           ;usb_device.c: 2160: if(0 == 1)
  8773  000E' 0101               	movlb	1	; () banked
  8774  0010' 0500'              	decf	_RemoteWakeup& (0+255),w,b
  8775  0012' A4D8               	btfss	status,2,c
  8776  0014' D03F               	goto	l1503
  8777                           
  8778                           ; BSR set to: 1
  8779                           ;usb_device.c: 2166: {
  8780                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  8781  0016' 0104               	movlb	4	; () banked
  8782  0018' 8338               	bsf	56,1,b	;volatile
  8783                           
  8784                           ; BSR set to: 4
  8785                           ;usb_device.c: 2168: }
  8786                           ;usb_device.c: 2169: break;
  8787  001A' D03C               	goto	l1503
  8788  001C'                    l1504:
  8789                           
  8790                           ; BSR set to: 4
  8791                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  8792  001C' 8E03'              	bsf	_inPipes+3,7,c
  8793                           
  8794                           ;usb_device.c: 2172: break;
  8795  001E' D03A               	goto	l1503
  8796  0020'                    l1505:
  8797                           
  8798                           ; BSR set to: 4
  8799                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  8800  0020' 8E03'              	bsf	_inPipes+3,7,c
  8801                           
  8802                           ;usb_device.c: 2178: {
  8803                           ;usb_device.c: 2179: BDT_ENTRY *p;
  8804                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  8805  0022' BF34               	btfsc	52,7,b	;volatile
  8806  0024' D00B               	goto	l1506
  8807                           
  8808                           ; BSR set to: 4
  8809                           ;usb_device.c: 2182: {
  8810                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8811  0026' 5134               	movf	52,w,b	;volatile
  8812  0028' 0B0F               	andlw	15
  8813  002A' 0100               	movlb	0	; () banked
  8814  002C' 6F00'              	movwf	??_USBStdGetStatusHandler& (0+255),b
  8815  002E' 5100'              	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8816  0030' 0D02               	mullw	2
  8817  0032' 0E00'              	movlw	low _pBDTEntryOut
  8818  0034' 24F3               	addwf	prodl,w,c
  8819  0036' 6ED9               	movwf	fsr2l,c
  8820  0038' 0E00'              	movlw	high _pBDTEntryOut
  8821  003A' D00B               	goto	L4
  8822  003C'                    l1506:
  8823                           
  8824                           ;usb_device.c: 2185: else
  8825                           ;usb_device.c: 2186: {
  8826                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  8827                           
  8828                           ; BSR set to: 0
  8829  003C' 0104               	movlb	4	; () banked
  8830  003E' 5134               	movf	52,w,b	;volatile
  8831  0040' 0B0F               	andlw	15
  8832  0042' 0100               	movlb	0	; () banked
  8833  0044' 6F00'              	movwf	??_USBStdGetStatusHandler& (0+255),b
  8834  0046' 5100'              	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8835  0048' 0D02               	mullw	2
  8836  004A' 0E00'              	movlw	low _pBDTEntryIn
  8837  004C' 24F3               	addwf	prodl,w,c
  8838  004E' 6ED9               	movwf	fsr2l,c
  8839  0050' 0E00'              	movlw	high _pBDTEntryIn
  8840  0052'                    L4:
  8841  0052' 20F4               	addwfc	prodh,w,c
  8842  0054' 6EDA               	movwf	fsr2h,c
  8843  0056' CFDE F001'         	movff	postinc2,USBStdGetStatusHandler@p
  8844  005A' CFDD F002'         	movff	postdec2,USBStdGetStatusHandler@p+1
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;usb_device.c: 2188: }
  8848                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  8849                           
  8850                           ; BSR set to: 0
  8851  005E' C001' FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8852  0062' C002' FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8853  0066' AEDF               	btfss	indf2,7,c
  8854  0068' D015               	goto	l1503
  8855                           
  8856                           ; BSR set to: 0
  8857  006A' C001' FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8858  006E' C002' FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8859  0072' A4DF               	btfss	indf2,2,c
  8860  0074' D00F               	goto	l1503
  8861                           
  8862                           ; BSR set to: 0
  8863                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  8864  0076' 0E01               	movlw	1
  8865  0078' 0104               	movlb	4	; () banked
  8866  007A' 6F38               	movwf	56,b	;volatile
  8867                           
  8868                           ; BSR set to: 4
  8869                           ;usb_device.c: 2193: }
  8870                           ;usb_device.c: 2194: }
  8871                           
  8872                           ; BSR set to: 4
  8873                           ;usb_device.c: 2192: break;
  8874  007C' D00B               	goto	l1503
  8875  007E'                    l1499:
  8876                           
  8877                           ; BSR set to: 4
  8878                           
  8879                           ; BSR set to: 4
  8880  007E' 5130               	movf	48,w,b	;volatile
  8881  0080' 0B1F               	andlw	31
  8882                           
  8883                           ; Switch size 1, requested type "space"
  8884                           ; Number of cases is 3, Range of values is 0 to 2
  8885                           ; switch strategies available:
  8886                           ; Name         Instructions Cycles
  8887                           ; simple_byte           10     6 (average)
  8888                           ;	Chosen strategy is simple_byte
  8889  0082' 0A00               	xorlw	0	; case 0
  8890  0084' B4D8               	btfsc	status,2,c
  8891  0086' D7C2               	goto	l1500
  8892  0088' 0A01               	xorlw	1	; case 1
  8893  008A' B4D8               	btfsc	status,2,c
  8894  008C' D7C7               	goto	l1504
  8895  008E' 0A03               	xorlw	3	; case 2
  8896  0090' B4D8               	btfsc	status,2,c
  8897  0092' D7C6               	goto	l1505
  8898  0094'                    l1503:
  8899                           
  8900                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  8901  0094' AE03'              	btfss	_inPipes+3,7,c
  8902  0096' 0012               	return	
  8903                           
  8904                           ;usb_device.c: 2197: {
  8905                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  8906  0098' 0E38               	movlw	56
  8907  009A' 6E00'              	movwf	_inPipes,c
  8908  009C' 0E04               	movlw	4
  8909  009E' 6E01'              	movwf	_inPipes+1,c
  8910                           
  8911                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8912  00A0' 8003'              	bsf	_inPipes+3,0,c
  8913                           
  8914                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
  8915  00A2' 0E02               	movlw	2
  8916  00A4' 6E04'              	movwf	_inPipes+4,c
  8917  00A6' 0012               	return	
  8918  00A8'                    __end_of_USBStdGetStatusHandler:
  8919                           	opt stack 0
  8920                           tosu	equ	0xFFF
  8921                           tosh	equ	0xFFE
  8922                           tosl	equ	0xFFD
  8923                           pclath	equ	0xFFA
  8924                           tblptru	equ	0xFF8
  8925                           tblptrh	equ	0xFF7
  8926                           tblptrl	equ	0xFF6
  8927                           tablat	equ	0xFF5
  8928                           prodh	equ	0xFF4
  8929                           prodl	equ	0xFF3
  8930                           intcon	equ	0xFF2
  8931                           intcon2	equ	0xFF1
  8932                           intcon3	equ	0xFF0
  8933                           postinc0	equ	0xFEE
  8934                           plusw0	equ	0xFEB
  8935                           wreg	equ	0xFE8
  8936                           postinc1	equ	0xFE6
  8937                           postdec1	equ	0xFE5
  8938                           fsr1h	equ	0xFE2
  8939                           fsr1l	equ	0xFE1
  8940                           indf2	equ	0xFDF
  8941                           postinc2	equ	0xFDE
  8942                           postdec2	equ	0xFDD
  8943                           plusw2	equ	0xFDB
  8944                           fsr2h	equ	0xFDA
  8945                           fsr2l	equ	0xFD9
  8946                           status	equ	0xFD8
  8947                           
  8948 ;; *************** function _USBStdGetDscHandler *****************
  8949 ;; Defined at:
  8950 ;;		line 2061 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8951 ;; Parameters:    Size  Location     Type
  8952 ;;		None
  8953 ;; Auto vars:     Size  Location     Type
  8954 ;;		None
  8955 ;; Return value:  Size  Location     Type
  8956 ;;                  1    wreg      void 
  8957 ;; Registers used:
  8958 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8959 ;; Tracked objects:
  8960 ;;		On entry : 0/0
  8961 ;;		On exit  : 0/0
  8962 ;;		Unchanged: 0/0
  8963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8966 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8967 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8968 ;;Total ram usage:        2 bytes
  8969 ;; Hardware stack levels used:    1
  8970 ;; Hardware stack levels required when called:   11
  8971 ;; This function calls:
  8972 ;;		Nothing
  8973 ;; This function is called by:
  8974 ;;		_USBCheckStdRequest
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978                           	psect	text39
  8979  0000'                    __ptext39:
  8980                           	opt stack 0
  8981  0000'                    _USBStdGetDscHandler:
  8982                           	opt stack 12
  8983                           
  8984                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
  8985                           
  8986                           ;incstack = 0
  8987  0000' 0E80               	movlw	128
  8988  0002' 0104               	movlb	4	; () banked
  8989  0004' 1930               	xorwf	48,w,b	;volatile
  8990  0006' A4D8               	btfss	status,2,c
  8991  0008' 0012               	return	
  8992                           
  8993                           ; BSR set to: 4
  8994                           ;usb_device.c: 2064: {
  8995                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  8996  000A' 0EC0               	movlw	192
  8997  000C' 6E03'              	movwf	_inPipes+3,c
  8998                           
  8999                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
  9000  000E' D082               	goto	l1486
  9001  0010'                    
  9002                           ; BSR set to: 4
  9003                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  9004                           
  9005                           ; BSR set to: 4
  9006  0010' 0E00'              	movlw	low _device_dsc
  9007  0012' 6E00'              	movwf	_inPipes,c
  9008  0014' 0E00'              	movlw	high _device_dsc
  9009  0016' 6E01'              	movwf	_inPipes+1,c
  9010                           
  9011                           ; BSR set to: 4
  9012                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
  9013  0018' 0E00               	movlw	0
  9014  001A' 6E05'              	movwf	_inPipes+5,c
  9015  001C' 0E12               	movlw	18
  9016  001E' 6E04'              	movwf	_inPipes+4,c
  9017                           
  9018                           ;usb_device.c: 2076: break;
  9019  0020' 0012               	return	
  9020  0022'                    
  9021                           ; BSR set to: 4
  9022                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
  9023                           
  9024                           ; BSR set to: 4
  9025  0022' 5132               	movf	50,w,b	;volatile
  9026  0024' A4D8               	btfss	status,2,c
  9027  0026' D042               	goto	l1490
  9028                           
  9029                           ; BSR set to: 4
  9030                           ;usb_device.c: 2082: {
  9031                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  9032  0028' 5132               	movf	50,w,b	;volatile
  9033  002A' 0D02               	mullw	2
  9034  002C' 0E00'              	movlw	low _USB_CD_Ptr
  9035  002E' 24F3               	addwf	prodl,w,c
  9036  0030' 6EF6               	movwf	tblptrl,c
  9037  0032' 0E00'              	movlw	high _USB_CD_Ptr
  9038  0034' 20F4               	addwfc	prodh,w,c
  9039  0036' 6EF7               	movwf	tblptrh,c
  9040  0038'                    	if	1	;There are 3 active tblptr bytes
  9041  0038' 6AF8               	clrf	tblptru,c
  9042  003A' 0E00'              	movlw	low (__mediumconst shr (0+16))
  9043  003C' 22F8               	addwfc	tblptru,f,c
  9044  003E'                    	endif
  9045  003E' 0009               	tblrd		*+
  9046  0040' CFF5 F000'         	movff	tablat,_inPipes
  9047  0044' 000A               	tblrd		*-
  9048  0046' CFF5 F001'         	movff	tablat,_inPipes+1
  9049                           
  9050                           ; BSR set to: 4
  9051                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  9052  004A' 0E02               	movlw	2
  9053  004C' 2400'              	addwf	_inPipes,w,c
  9054  004E' 0100               	movlb	0	; () banked
  9055  0050' 6F00'              	movwf	??_USBStdGetDscHandler& (0+255),b
  9056  0052' 0E00               	movlw	0
  9057  0054' 2001'              	addwfc	_inPipes+1,w,c
  9058  0056' 6F00'              	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  9059  0058' C000' FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  9060  005C' C001' FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  9061  0060' 6AF8               	clrf	tblptru,c
  9062  0062' 0EFF'              	movlw	(high __ramtop+-1)
  9063  0064' 64F7               	cpfsgt	tblptrh,c
  9064  0066' D003               	bra	u4617
  9065  0068' 0008               	tblrd		*
  9066  006A' 50F5               	movf	tablat,w,c
  9067  006C' D005               	bra	u4610
  9068  006E'                    u4617:
  9069  006E' CFF6 FFE9          	movff	tblptrl,fsr0l
  9070  0072' CFF7 FFEA          	movff	tblptrh,fsr0h
  9071  0076' 50EF               	movf	indf0,w,c
  9072  0078'                    u4610:
  9073  0078' 6E04'              	movwf	_inPipes+4,c
  9074                           
  9075                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  9076  007A' 0E03               	movlw	3
  9077  007C' 2400'              	addwf	_inPipes,w,c
  9078  007E' 0100               	movlb	0	; () banked
  9079  0080' 6F00'              	movwf	??_USBStdGetDscHandler& (0+255),b
  9080  0082' 0E00               	movlw	0
  9081  0084' 2001'              	addwfc	_inPipes+1,w,c
  9082  0086' 6F00'              	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  9083  0088' C000' FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  9084  008C' C001' FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  9085  0090' 6AF8               	clrf	tblptru,c
  9086  0092' 0EFF'              	movlw	(high __ramtop+-1)
  9087  0094' 64F7               	cpfsgt	tblptrh,c
  9088  0096' D003               	bra	u4627
  9089  0098' 0008               	tblrd		*
  9090  009A' 50F5               	movf	tablat,w,c
  9091  009C' D005               	bra	u4620
  9092  009E'                    u4627:
  9093  009E' CFF6 FFE9          	movff	tblptrl,fsr0l
  9094  00A2' CFF7 FFEA          	movff	tblptrh,fsr0h
  9095  00A6' 50EF               	movf	indf0,w,c
  9096  00A8'                    u4620:
  9097  00A8' 6E05'              	movwf	_inPipes+5,c
  9098                           
  9099                           ;usb_device.c: 2094: }
  9100  00AA' 0012               	return	
  9101  00AC'                    l1490:
  9102                           
  9103                           ;usb_device.c: 2095: else
  9104                           ;usb_device.c: 2096: {
  9105                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
  9106  00AC' 0E00               	movlw	0
  9107  00AE' 6E03'              	movwf	_inPipes+3,c
  9108                           
  9109                           ;usb_device.c: 2098: }
  9110                           ;usb_device.c: 2099: break;
  9111  00B0' 0012               	return	
  9112  00B2'                    
  9113                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
  9114  00B2' 0E03               	movlw	3
  9115  00B4' 0104               	movlb	4	; () banked
  9116  00B6' 6132               	cpfslt	50,b	;volatile
  9117  00B8' D027               	goto	l1493
  9118                           
  9119                           ; BSR set to: 4
  9120                           ;usb_device.c: 2105: {
  9121                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  9122  00BA' 5132               	movf	50,w,b	;volatile
  9123  00BC' 0D02               	mullw	2
  9124  00BE' 0E00'              	movlw	low _USB_SD_Ptr
  9125  00C0' 24F3               	addwf	prodl,w,c
  9126  00C2' 6EF6               	movwf	tblptrl,c
  9127  00C4' 0E00'              	movlw	high _USB_SD_Ptr
  9128  00C6' 20F4               	addwfc	prodh,w,c
  9129  00C8' 6EF7               	movwf	tblptrh,c
  9130  00CA'                    	if	1	;There are 3 active tblptr bytes
  9131  00CA' 6AF8               	clrf	tblptru,c
  9132  00CC' 0E00'              	movlw	low (__mediumconst shr (0+16))
  9133  00CE' 22F8               	addwfc	tblptru,f,c
  9134  00D0'                    	endif
  9135  00D0' 0009               	tblrd		*+
  9136  00D2' CFF5 F000'         	movff	tablat,_inPipes
  9137  00D6' 000A               	tblrd		*-
  9138  00D8' CFF5 F001'         	movff	tablat,_inPipes+1
  9139                           
  9140                           ; BSR set to: 4
  9141                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  9142  00DC' C000' FFF6         	movff	_inPipes,tblptrl
  9143  00E0' C001' FFF7         	movff	_inPipes+1,tblptrh
  9144  00E4' 6AF8               	clrf	tblptru,c
  9145  00E6' 0EFF'              	movlw	(high __ramtop+-1)
  9146  00E8' 64F7               	cpfsgt	tblptrh,c
  9147  00EA' D003               	bra	u4647
  9148  00EC' 0008               	tblrd		*
  9149  00EE' 50F5               	movf	tablat,w,c
  9150  00F0' D005               	bra	u4640
  9151  00F2'                    u4647:
  9152  00F2' CFF6 FFE9          	movff	tblptrl,fsr0l
  9153  00F6' CFF7 FFEA          	movff	tblptrh,fsr0h
  9154  00FA' 50EF               	movf	indf0,w,c
  9155  00FC'                    u4640:
  9156  00FC' 0100               	movlb	0	; () banked
  9157  00FE' 6F00'              	movwf	??_USBStdGetDscHandler& (0+255),b
  9158  0100' 5100'              	movf	??_USBStdGetDscHandler& (0+255),w,b
  9159  0102' 6E04'              	movwf	_inPipes+4,c
  9160  0104' 6A05'              	clrf	_inPipes+5,c
  9161                           
  9162                           ;usb_device.c: 2110: }
  9163  0106' 0012               	return	
  9164  0108'                    l1493:
  9165                           
  9166                           ;usb_device.c: 2120: else
  9167                           ;usb_device.c: 2121: {
  9168                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
  9169                           
  9170                           ; BSR set to: 0
  9171  0108' 0E00               	movlw	0
  9172  010A' 6E03'              	movwf	_inPipes+3,c
  9173                           
  9174                           ;usb_device.c: 2123: }
  9175                           ;usb_device.c: 2124: break;
  9176  010C' 0012               	return	
  9177  010E'                    
  9178                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
  9179  010E' 0E00               	movlw	0
  9180  0110' 6E03'              	movwf	_inPipes+3,c
  9181                           
  9182                           ;usb_device.c: 2128: }
  9183                           
  9184                           ;usb_device.c: 2127: break;
  9185  0112' 0012               	return	
  9186  0114'                    l1486:
  9187  0114' 0104               	movlb	4	; () banked
  9188  0116' 5133               	movf	51,w,b	;volatile
  9189                           
  9190                           ; Switch size 1, requested type "space"
  9191                           ; Number of cases is 3, Range of values is 1 to 3
  9192                           ; switch strategies available:
  9193                           ; Name         Instructions Cycles
  9194                           ; simple_byte           10     6 (average)
  9195                           ;	Chosen strategy is simple_byte
  9196  0118' 0A01               	xorlw	1	; case 1
  9197  011A' B4D8               	btfsc	status,2,c
  9198  011C' D779               	goto	l1487
  9199  011E' 0A03               	xorlw	3	; case 2
  9200  0120' B4D8               	btfsc	status,2,c
  9201  0122' D77F               	goto	l1489
  9202  0124' 0A01               	xorlw	1	; case 3
  9203  0126' B4D8               	btfsc	status,2,c
  9204  0128' D7C4               	goto	l1492
  9205  012A' D7F1               	goto	l1495
  9206  012C'                    __end_of_USBStdGetDscHandler:
  9207                           	opt stack 0
  9208                           tosu	equ	0xFFF
  9209                           tosh	equ	0xFFE
  9210                           tosl	equ	0xFFD
  9211                           pclath	equ	0xFFA
  9212                           tblptru	equ	0xFF8
  9213                           tblptrh	equ	0xFF7
  9214                           tblptrl	equ	0xFF6
  9215                           tablat	equ	0xFF5
  9216                           prodh	equ	0xFF4
  9217                           prodl	equ	0xFF3
  9218                           intcon	equ	0xFF2
  9219                           intcon2	equ	0xFF1
  9220                           intcon3	equ	0xFF0
  9221                           indf0	equ	0xFEF
  9222                           postinc0	equ	0xFEE
  9223                           plusw0	equ	0xFEB
  9224                           fsr0h	equ	0xFEA
  9225                           fsr0l	equ	0xFE9
  9226                           wreg	equ	0xFE8
  9227                           postinc1	equ	0xFE6
  9228                           postdec1	equ	0xFE5
  9229                           fsr1h	equ	0xFE2
  9230                           fsr1l	equ	0xFE1
  9231                           indf2	equ	0xFDF
  9232                           postinc2	equ	0xFDE
  9233                           postdec2	equ	0xFDD
  9234                           plusw2	equ	0xFDB
  9235                           fsr2h	equ	0xFDA
  9236                           fsr2l	equ	0xFD9
  9237                           status	equ	0xFD8
  9238                           
  9239 ;; *************** function _USBStdFeatureReqHandler *****************
  9240 ;; Defined at:
  9241 ;;		line 2771 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;  p               2   24[BANK0 ] PTR struct __BDT
  9246 ;;		 -> BDT(48), NULL(0), 
  9247 ;;  pUEP            2   21[BANK0 ] PTR unsigned char 
  9248 ;;		 -> UEP0(1), 
  9249 ;;  current_ep_d    1   23[BANK0 ] struct .
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  1    wreg      void 
  9252 ;; Registers used:
  9253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9260 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9261 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9262 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9263 ;;Total ram usage:        6 bytes
  9264 ;; Hardware stack levels used:    1
  9265 ;; Hardware stack levels required when called:   15
  9266 ;; This function calls:
  9267 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9268 ;; This function is called by:
  9269 ;;		_USBCheckStdRequest
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           	psect	text40
  9274  0000'                    __ptext40:
  9275                           	opt stack 0
  9276  0000'                    _USBStdFeatureReqHandler:
  9277                           	opt stack 8
  9278                           
  9279                           ;usb_device.c: 2773: BDT_ENTRY *p;
  9280                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
  9281                           ;usb_device.c: 2778: unsigned char* pUEP;
  9282                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
  9283                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
  9284                           
  9285                           ;incstack = 0
  9286  0000' 0104               	movlb	4	; () banked
  9287  0002' 0532               	decf	50,w,b	;volatile
  9288  0004' A4D8               	btfss	status,2,c
  9289  0006' D00F               	goto	l1579
  9290                           
  9291                           ; BSR set to: 4
  9292  0008' 5130               	movf	48,w,b	;volatile
  9293  000A' 0B1F               	andlw	31
  9294  000C' 0900               	iorlw	0
  9295  000E' A4D8               	btfss	status,2,c
  9296  0010' D00A               	goto	l1579
  9297                           
  9298                           ; BSR set to: 4
  9299                           ;usb_device.c: 2818: {
  9300                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
  9301  0012' 8E03'              	bsf	_inPipes+3,7,c
  9302                           
  9303                           ; BSR set to: 4
  9304                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
  9305  0014' 0E03               	movlw	3
  9306  0016' 1931               	xorwf	49,w,b	;volatile
  9307  0018' A4D8               	btfss	status,2,c
  9308  001A' D002               	goto	l1578
  9309                           
  9310                           ; BSR set to: 4
  9311                           ;usb_device.c: 2821: RemoteWakeup = 1;
  9312  001C' 0E01               	movlw	1
  9313  001E' D001               	goto	L5
  9314  0020'                    l1578:
  9315                           
  9316                           ;usb_device.c: 2822: else
  9317                           ;usb_device.c: 2823: RemoteWakeup = 0;
  9318                           
  9319                           ; BSR set to: 1
  9320  0020' 0E00               	movlw	0
  9321  0022'                    L5:
  9322  0022' 0101               	movlb	1	; () banked
  9323  0024' 6F00'              	movwf	_RemoteWakeup& (0+255),b
  9324  0026'                    l1579:
  9325                           
  9326                           ;usb_device.c: 2824: }
  9327                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
  9328                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
  9329                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  9330                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
  9331                           
  9332                           ; BSR set to: 1
  9333  0026' 0104               	movlb	4	; () banked
  9334  0028' 5132               	movf	50,w,b	;volatile
  9335  002A' A4D8               	btfss	status,2,c
  9336  002C' 0012               	return	
  9337                           
  9338                           ; BSR set to: 4
  9339  002E' 5130               	movf	48,w,b	;volatile
  9340  0030' 0B1F               	andlw	31
  9341  0032' 0A02               	xorlw	2
  9342  0034' A4D8               	btfss	status,2,c
  9343  0036' 0012               	return	
  9344                           
  9345                           ; BSR set to: 4
  9346  0038' 5134               	movf	52,w,b	;volatile
  9347  003A' 0B0F               	andlw	15
  9348  003C' 0900               	iorlw	0
  9349  003E' B4D8               	btfsc	status,2,c
  9350  0040' 0012               	return	
  9351                           
  9352                           ; BSR set to: 4
  9353  0042' 5134               	movf	52,w,b	;volatile
  9354  0044' 0B0F               	andlw	15
  9355  0046' 0100               	movlb	0	; () banked
  9356  0048' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9357  004A' 0E03               	movlw	3
  9358  004C' 6100'              	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
  9359  004E' 0012               	return	
  9360                           
  9361                           ; BSR set to: 0
  9362  0050' 0E20               	movlw	32
  9363  0052' 0102               	movlb	2	; () banked
  9364  0054' 1900'              	xorwf	_USBDeviceState& (0+255),w,b
  9365  0056' A4D8               	btfss	status,2,c
  9366  0058' 0012               	return	
  9367                           
  9368                           ; BSR set to: 2
  9369                           ;usb_device.c: 2831: {
  9370                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
  9371  005A' 8E03'              	bsf	_inPipes+3,7,c
  9372                           
  9373                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
  9374  005C' 0104               	movlb	4	; () banked
  9375  005E' BF34               	btfsc	52,7,b	;volatile
  9376  0060' D01C               	goto	l1581
  9377                           
  9378                           ; BSR set to: 4
  9379                           ;usb_device.c: 2838: {
  9380                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  9381  0062' 5134               	movf	52,w,b	;volatile
  9382  0064' 0B0F               	andlw	15
  9383  0066' 0100               	movlb	0	; () banked
  9384  0068' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9385  006A' 5100'              	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9386  006C' 0D02               	mullw	2
  9387  006E' 0E00'              	movlw	low _pBDTEntryOut
  9388  0070' 24F3               	addwf	prodl,w,c
  9389  0072' 6ED9               	movwf	fsr2l,c
  9390  0074' 0E00'              	movlw	high _pBDTEntryOut
  9391  0076' 20F4               	addwfc	prodh,w,c
  9392  0078' 6EDA               	movwf	fsr2h,c
  9393  007A' CFDE F018'         	movff	postinc2,USBStdFeatureReqHandler@p
  9394  007E' CFDD F019'         	movff	postdec2,USBStdFeatureReqHandler@p+1
  9395                           
  9396                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  9397  0082' 0104               	movlb	4	; () banked
  9398  0084' 5134               	movf	52,w,b	;volatile
  9399  0086' 0B0F               	andlw	15
  9400  0088' 0100               	movlb	0	; () banked
  9401  008A' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9402  008C' 5100'              	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9403  008E' 0D01               	mullw	1
  9404  0090' 0E00'              	movlw	low _ep_data_out
  9405  0092' 24F3               	addwf	prodl,w,c
  9406  0094' 6ED9               	movwf	fsr2l,c
  9407  0096' 0E00'              	movlw	high _ep_data_out
  9408  0098' D01C               	goto	L6
  9409  009A'                    l1581:
  9410                           
  9411                           ;usb_device.c: 2842: else
  9412                           ;usb_device.c: 2843: {
  9413                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  9414                           
  9415                           ; BSR set to: 0
  9416  009A' 0104               	movlb	4	; () banked
  9417  009C' 5134               	movf	52,w,b	;volatile
  9418  009E' 0B0F               	andlw	15
  9419  00A0' 0100               	movlb	0	; () banked
  9420  00A2' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9421  00A4' 5100'              	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9422  00A6' 0D02               	mullw	2
  9423  00A8' 0E00'              	movlw	low _pBDTEntryIn
  9424  00AA' 24F3               	addwf	prodl,w,c
  9425  00AC' 6ED9               	movwf	fsr2l,c
  9426  00AE' 0E00'              	movlw	high _pBDTEntryIn
  9427  00B0' 20F4               	addwfc	prodh,w,c
  9428  00B2' 6EDA               	movwf	fsr2h,c
  9429  00B4' CFDE F018'         	movff	postinc2,USBStdFeatureReqHandler@p
  9430  00B8' CFDD F019'         	movff	postdec2,USBStdFeatureReqHandler@p+1
  9431                           
  9432                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  9433  00BC' 0104               	movlb	4	; () banked
  9434  00BE' 5134               	movf	52,w,b	;volatile
  9435  00C0' 0B0F               	andlw	15
  9436  00C2' 0100               	movlb	0	; () banked
  9437  00C4' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9438  00C6' 5100'              	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9439  00C8' 0D01               	mullw	1
  9440  00CA' 0E00'              	movlw	low _ep_data_in
  9441  00CC' 24F3               	addwf	prodl,w,c
  9442  00CE' 6ED9               	movwf	fsr2l,c
  9443  00D0' 0E00'              	movlw	high _ep_data_in
  9444  00D2'                    L6:
  9445  00D2' 20F4               	addwfc	prodh,w,c
  9446  00D4' 6EDA               	movwf	fsr2h,c
  9447  00D6' 50DF               	movf	indf2,w,c
  9448  00D8' 6F00'              	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
  9449                           
  9450                           ; BSR set to: 0
  9451                           ;usb_device.c: 2846: }
  9452                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
  9453                           
  9454                           ; BSR set to: 0
  9455  00DA' B100'              	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
  9456  00DC' D002               	goto	l1583
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;usb_device.c: 2853: {
  9460                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  9461  00DE' 9500'              	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
  9462                           
  9463                           ;usb_device.c: 2855: }
  9464  00E0' D001               	goto	l1584
  9465  00E2'                    l1583:
  9466                           
  9467                           ; BSR set to: 0
  9468                           ;usb_device.c: 2856: else
  9469                           ;usb_device.c: 2857: {
  9470                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  9471                           
  9472                           ; BSR set to: 0
  9473  00E2' 8500'              	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
  9474  00E4'                    l1584:
  9475                           
  9476                           ; BSR set to: 0
  9477                           ;usb_device.c: 2859: }
  9478                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
  9479                           
  9480                           ; BSR set to: 0
  9481  00E4' 0104               	movlb	4	; () banked
  9482  00E6' BF34               	btfsc	52,7,b	;volatile
  9483  00E8' D00B               	goto	l1585
  9484                           
  9485                           ; BSR set to: 4
  9486                           ;usb_device.c: 2865: {
  9487                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9488  00EA' 5134               	movf	52,w,b	;volatile
  9489  00EC' 0B0F               	andlw	15
  9490  00EE' 0100               	movlb	0	; () banked
  9491  00F0' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9492  00F2' 5100'              	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9493  00F4' 0D02               	mullw	2
  9494  00F6' 0E00'              	movlw	low _pBDTEntryOut
  9495  00F8' 24F3               	addwf	prodl,w,c
  9496  00FA' 6ED9               	movwf	fsr2l,c
  9497  00FC' 0E00'              	movlw	high _pBDTEntryOut
  9498  00FE' D00B               	goto	L7
  9499  0100'                    l1585:
  9500                           
  9501                           ;usb_device.c: 2868: else
  9502                           ;usb_device.c: 2869: {
  9503                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9504                           
  9505                           ; BSR set to: 0
  9506  0100' 0104               	movlb	4	; () banked
  9507  0102' 5134               	movf	52,w,b	;volatile
  9508  0104' 0B0F               	andlw	15
  9509  0106' 0100               	movlb	0	; () banked
  9510  0108' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9511  010A' 5100'              	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9512  010C' 0D02               	mullw	2
  9513  010E' 0E00'              	movlw	low _pBDTEntryIn
  9514  0110' 24F3               	addwf	prodl,w,c
  9515  0112' 6ED9               	movwf	fsr2l,c
  9516  0114' 0E00'              	movlw	high _pBDTEntryIn
  9517  0116'                    L7:
  9518  0116' 20F4               	addwfc	prodh,w,c
  9519  0118' 6EDA               	movwf	fsr2h,c
  9520  011A' C018' FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  9521  011E' C019' FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  9522                           
  9523                           ; BSR set to: 0
  9524                           ;usb_device.c: 2871: }
  9525                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
  9526                           
  9527                           ; BSR set to: 0
  9528  0122' 0E03               	movlw	3
  9529  0124' 0104               	movlb	4	; () banked
  9530  0126' 1931               	xorwf	49,w,b	;volatile
  9531  0128' A4D8               	btfss	status,2,c
  9532  012A' D031               	goto	l1587
  9533                           
  9534                           ; BSR set to: 4
  9535                           ;usb_device.c: 2875: {
  9536                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
  9537  012C' C018' FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9538  0130' C019' FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9539  0134' 0100               	movlb	0	; () banked
  9540  0136' AEDF               	btfss	indf2,7,c
  9541  0138' D01D               	goto	l1590
  9542                           
  9543                           ; BSR set to: 0
  9544                           ;usb_device.c: 2877: {
  9545                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
  9546  013A' 0104               	movlb	4	; () banked
  9547  013C' BF34               	btfsc	52,7,b	;volatile
  9548  013E' D00B               	goto	l1589
  9549                           
  9550                           ; BSR set to: 4
  9551                           ;usb_device.c: 2881: {
  9552                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9553  0140' 5134               	movf	52,w,b	;volatile
  9554  0142' 0B0F               	andlw	15
  9555  0144' 0100               	movlb	0	; () banked
  9556  0146' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9557  0148' 5100'              	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9558  014A' 0D01               	mullw	1
  9559  014C' 0E00'              	movlw	low _ep_data_out
  9560  014E' 24F3               	addwf	prodl,w,c
  9561  0150' 6ED9               	movwf	fsr2l,c
  9562  0152' 0E00'              	movlw	high _ep_data_out
  9563  0154' D00B               	goto	L8
  9564  0156'                    l1589:
  9565                           
  9566                           ;usb_device.c: 2884: else
  9567                           ;usb_device.c: 2885: {
  9568                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9569                           
  9570                           ; BSR set to: 2
  9571  0156' 0104               	movlb	4	; () banked
  9572  0158' 5134               	movf	52,w,b	;volatile
  9573  015A' 0B0F               	andlw	15
  9574  015C' 0100               	movlb	0	; () banked
  9575  015E' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9576  0160' 5100'              	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9577  0162' 0D01               	mullw	1
  9578  0164' 0E00'              	movlw	low _ep_data_in
  9579  0166' 24F3               	addwf	prodl,w,c
  9580  0168' 6ED9               	movwf	fsr2l,c
  9581  016A' 0E00'              	movlw	high _ep_data_in
  9582  016C'                    L8:
  9583  016C' 20F4               	addwfc	prodh,w,c
  9584  016E' 6EDA               	movwf	fsr2h,c
  9585  0170' 0102               	movlb	2	; () banked
  9586  0172' 82DF               	bsf	indf2,1,c
  9587  0174'                    l1590:
  9588                           
  9589                           ;usb_device.c: 2887: }
  9590                           ;usb_device.c: 2888: }
  9591                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
  9592                           
  9593                           ; BSR set to: 2
  9594                           
  9595                           ; BSR set to: 2
  9596  0174' C018' FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9597  0178' C019' FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9598  017C' 0E00               	movlw	0
  9599  017E' 84DB               	bsf	plusw2,2,c
  9600                           
  9601                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
  9602  0180' C018' FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9603  0184' C019' FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9604  0188' 0E00               	movlw	0
  9605  018A' 8EDB               	bsf	plusw2,7,c
  9606                           
  9607                           ;usb_device.c: 2893: }
  9608  018C' 0012               	return	
  9609  018E'                    l1587:
  9610                           
  9611                           ;usb_device.c: 2894: else
  9612                           ;usb_device.c: 2895: {
  9613                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9614  018E' 0E04               	movlw	4
  9615  0190' 0100               	movlb	0	; () banked
  9616  0192' 1B00'              	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9617                           
  9618                           ; BSR set to: 0
  9619                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
  9620  0194' C018' FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9621  0198' C019' FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9622  019C' AEDF               	btfss	indf2,7,c
  9623  019E' D01B               	goto	l1592
  9624                           
  9625                           ; BSR set to: 0
  9626                           ;usb_device.c: 2902: {
  9627                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
  9628  01A0' C018' FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9629  01A4' C019' FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9630  01A8' 0E7F               	movlw	127
  9631  01AA' 16DF               	andwf	indf2,f,c
  9632                           
  9633                           ; BSR set to: 0
  9634                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
  9635  01AC' C018' FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9636  01B0' C019' FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9637  01B4' 0E00               	movlw	0
  9638  01B6' 8CDB               	bsf	plusw2,6,c
  9639                           
  9640                           ; BSR set to: 0
  9641                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9642  01B8' 0E00               	movlw	0
  9643  01BA' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9644  01BC' 0E05               	movlw	5
  9645  01BE' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9646  01C0' C018' F00E'        	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9647  01C4' C019' F00F'        	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9648  01C8' 0E00               	movlw	0
  9649  01CA' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9650  01CC' 0E02               	movlw	2
  9651  01CE' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9652  01D0' EC00' F000'        	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9653                           
  9654                           ;usb_device.c: 2908: }
  9655  01D4' D006               	goto	l1593
  9656  01D6'                    l1592:
  9657                           
  9658                           ;usb_device.c: 2909: else
  9659                           ;usb_device.c: 2910: {
  9660                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
  9661  01D6' C018' FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9662  01DA' C019' FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9663  01DE' 0E00               	movlw	0
  9664  01E0' 8CDB               	bsf	plusw2,6,c
  9665  01E2'                    l1593:
  9666                           
  9667                           ;usb_device.c: 2913: }
  9668                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9669  01E2' 0E04               	movlw	4
  9670  01E4' 0100               	movlb	0	; () banked
  9671  01E6' 1B00'              	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  9675  01E8' B300'              	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
  9676  01EA' D006               	goto	u4860
  9677                           
  9678                           ; BSR set to: 0
  9679  01EC' C018' FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9680  01F0' C019' FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9681  01F4' AEDF               	btfss	indf2,7,c
  9682  01F6' D033               	goto	l1594
  9683  01F8'                    u4860:
  9684                           
  9685                           ; BSR set to: 0
  9686                           ;usb_device.c: 2924: {
  9687                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
  9688  01F8' 0104               	movlb	4	; () banked
  9689  01FA' BF34               	btfsc	52,7,b	;volatile
  9690  01FC' D00B               	goto	l1597
  9691                           
  9692                           ; BSR set to: 4
  9693                           ;usb_device.c: 2926: {
  9694                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9695  01FE' 5134               	movf	52,w,b	;volatile
  9696  0200' 0B0F               	andlw	15
  9697  0202' 0100               	movlb	0	; () banked
  9698  0204' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9699  0206' 5100'              	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9700  0208' 0D01               	mullw	1
  9701  020A' 0E00'              	movlw	low _ep_data_out
  9702  020C' 24F3               	addwf	prodl,w,c
  9703  020E' 6ED9               	movwf	fsr2l,c
  9704  0210' 0E00'              	movlw	high _ep_data_out
  9705  0212' D00B               	goto	L9
  9706  0214'                    l1597:
  9707                           
  9708                           ;usb_device.c: 2929: else
  9709                           ;usb_device.c: 2930: {
  9710                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9711                           
  9712                           ; BSR set to: 2
  9713  0214' 0104               	movlb	4	; () banked
  9714  0216' 5134               	movf	52,w,b	;volatile
  9715  0218' 0B0F               	andlw	15
  9716  021A' 0100               	movlb	0	; () banked
  9717  021C' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9718  021E' 5100'              	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9719  0220' 0D01               	mullw	1
  9720  0222' 0E00'              	movlw	low _ep_data_in
  9721  0224' 24F3               	addwf	prodl,w,c
  9722  0226' 6ED9               	movwf	fsr2l,c
  9723  0228' 0E00'              	movlw	high _ep_data_in
  9724  022A'                    L9:
  9725  022A' 20F4               	addwfc	prodh,w,c
  9726  022C' 6EDA               	movwf	fsr2h,c
  9727  022E' 0102               	movlb	2	; () banked
  9728  0230' 92DF               	bcf	indf2,1,c
  9729                           
  9730                           ; BSR set to: 2
  9731                           ;usb_device.c: 2932: }
  9732                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9733                           
  9734                           ; BSR set to: 2
  9735  0232' C018' FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9736  0236' C019' FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9737  023A' 0E3B               	movlw	59
  9738  023C' 16DF               	andwf	indf2,f,c
  9739                           
  9740                           ; BSR set to: 2
  9741                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9742  023E' 0E00               	movlw	0
  9743  0240' 0100               	movlb	0	; () banked
  9744  0242' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9745  0244' 0E05               	movlw	5
  9746  0246' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9747  0248' C018' F00E'        	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9748  024C' C019' F00F'        	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9749  0250' 0E00               	movlw	0
  9750  0252' 6F00'              	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9751  0254' 0E02               	movlw	2
  9752  0256' 6F00'              	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9753  0258' EC00' F000'        	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9754                           
  9755                           ;usb_device.c: 2938: }
  9756  025C' D006               	goto	l1599
  9757  025E'                    l1594:
  9758                           
  9759                           ;usb_device.c: 2939: else
  9760                           ;usb_device.c: 2940: {
  9761                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9762  025E' C018' FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9763  0262' C019' FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9764  0266' 0E3B               	movlw	59
  9765  0268' 16DF               	andwf	indf2,f,c
  9766  026A'                    l1599:
  9767                           
  9768                           ;usb_device.c: 2943: }
  9769                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  9770  026A' 0104               	movlb	4	; () banked
  9771  026C' 5134               	movf	52,w,b	;volatile
  9772  026E' 0B0F               	andlw	15
  9773  0270' 0100               	movlb	0	; () banked
  9774  0272' 6F00'              	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9775  0274' 5100'              	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9776  0276' 0D01               	mullw	1
  9777  0278' 0E26               	movlw	38
  9778  027A' 24F3               	addwf	prodl,w,c
  9779  027C' 6F00'              	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
  9780  027E' 0E0F               	movlw	15
  9781  0280' 20F4               	addwfc	prodh,w,c
  9782  0282' 6F00'              	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
  9783                           
  9784                           ; BSR set to: 0
  9785                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
  9786  0284' C015' FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  9787  0288' C016' FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  9788  028C' 0EFE               	movlw	254
  9789  028E' 16DF               	andwf	indf2,f,c
  9790                           
  9791                           ; BSR set to: 0
  9792  0290' 0012               	return	
  9793  0292'                    __end_of_USBStdFeatureReqHandler:
  9794                           	opt stack 0
  9795                           tosu	equ	0xFFF
  9796                           tosh	equ	0xFFE
  9797                           tosl	equ	0xFFD
  9798                           pclath	equ	0xFFA
  9799                           tblptru	equ	0xFF8
  9800                           tblptrh	equ	0xFF7
  9801                           tblptrl	equ	0xFF6
  9802                           tablat	equ	0xFF5
  9803                           prodh	equ	0xFF4
  9804                           prodl	equ	0xFF3
  9805                           intcon	equ	0xFF2
  9806                           intcon2	equ	0xFF1
  9807                           intcon3	equ	0xFF0
  9808                           indf0	equ	0xFEF
  9809                           postinc0	equ	0xFEE
  9810                           plusw0	equ	0xFEB
  9811                           fsr0h	equ	0xFEA
  9812                           fsr0l	equ	0xFE9
  9813                           wreg	equ	0xFE8
  9814                           postinc1	equ	0xFE6
  9815                           postdec1	equ	0xFE5
  9816                           fsr1h	equ	0xFE2
  9817                           fsr1l	equ	0xFE1
  9818                           indf2	equ	0xFDF
  9819                           postinc2	equ	0xFDE
  9820                           postdec2	equ	0xFDD
  9821                           plusw2	equ	0xFDB
  9822                           fsr2h	equ	0xFDA
  9823                           fsr2l	equ	0xFD9
  9824                           status	equ	0xFD8
  9825                           
  9826 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  9827 ;; Defined at:
  9828 ;;		line 104 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  event           2   12[BANK0 ] enum E8289
  9831 ;;  pdata           2   14[BANK0 ] PTR void 
  9832 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), BDT(48), NULL(0), 
  9833 ;;  size            2   16[BANK0 ] unsigned int 
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;		None
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  1    wreg      unsigned char 
  9838 ;; Registers used:
  9839 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9845 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9847 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9848 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9849 ;;Total ram usage:        8 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; Hardware stack levels required when called:   14
  9852 ;; This function calls:
  9853 ;;		_CDCInitEP
  9854 ;;		_USBCheckCDCRequest
  9855 ;; This function is called by:
  9856 ;;		_USBDeviceTasks
  9857 ;;		_USBStdSetCfgHandler
  9858 ;;		_USBSuspend
  9859 ;;		_USBWakeFromSuspend
  9860 ;;		_USBCtrlTrfSetupHandler
  9861 ;;		_USBCheckStdRequest
  9862 ;;		_USBStdFeatureReqHandler
  9863 ;; This function uses a non-reentrant model
  9864 ;;
  9865                           
  9866                           	psect	text41
  9867  0000'                    __ptext41:
  9868                           	opt stack 0
  9869  0000'                    _USER_USB_CALLBACK_EVENT_HANDLER:
  9870                           	opt stack 12
  9871                           
  9872                           ;usb_device_mgr.c: 106: switch( (int) event )
  9873                           
  9874                           ;incstack = 0
  9875  0000' D006               	goto	l1753
  9876  0002'                    
  9877                           ;usb_device_mgr.c: 134: CDCInitEP();
  9878  0002' EC00' F000'        	call	_CDCInitEP	;wreg free
  9879                           
  9880                           ;usb_device_mgr.c: 142: break;
  9881                           
  9882                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
  9883                           
  9884                           ;usb_device_mgr.c: 139: break;
  9885  0006' 0012               	return	
  9886  0008'                    
  9887                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
  9888  0008' EC00' F000'        	call	_USBCheckCDCRequest	;wreg free
  9889                           
  9890                           ;usb_device_mgr.c: 163: }
  9891                           
  9892                           ;usb_device_mgr.c: 162: break;
  9893                           
  9894                           ;usb_device_mgr.c: 161: default:
  9895                           
  9896                           ;usb_device_mgr.c: 159: break;
  9897                           
  9898                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
  9899                           
  9900                           ;usb_device_mgr.c: 156: break;
  9901                           
  9902                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
  9903                           
  9904                           ;usb_device_mgr.c: 153: break;
  9905  000C' 0012               	return	
  9906  000E'                    l1753:
  9907  000E' C00C' F012'        	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  9908  0012' C00D' F013'        	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  9909                           
  9910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9911                           ; Switch size 1, requested type "space"
  9912                           ; Number of cases is 2, Range of values is 0 to 127
  9913                           ; switch strategies available:
  9914                           ; Name         Instructions Cycles
  9915                           ; simple_byte            7     4 (average)
  9916                           ;	Chosen strategy is simple_byte
  9917  0016' 0100               	movlb	0	; () banked
  9918  0018' 5100'              	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
  9919  001A' 0A00               	xorlw	0	; case 0
  9920  001C' B4D8               	btfsc	status,2,c
  9921  001E' D004               	goto	l9937
  9922  0020' 0A7F               	xorlw	127	; case 127
  9923  0022' A4D8               	btfss	status,2,c
  9924  0024' 0012               	return	
  9925  0026' D018               	goto	l9939
  9926  0028'                    l9937:
  9927                           
  9928                           ; BSR set to: 0
  9929                           ; Switch size 1, requested type "space"
  9930                           ; Number of cases is 8, Range of values is 1 to 117
  9931                           ; switch strategies available:
  9932                           ; Name         Instructions Cycles
  9933                           ; simple_byte           25    13 (average)
  9934                           ;	Chosen strategy is simple_byte
  9935  0028' 5100'              	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9936  002A' 0A01               	xorlw	1	; case 1
  9937  002C' B4D8               	btfsc	status,2,c
  9938  002E' D7E9               	goto	l1759
  9939  0030' 0A03               	xorlw	3	; case 2
  9940  0032' B4D8               	btfsc	status,2,c
  9941  0034' 0012               	return	
  9942  0036' 0A01               	xorlw	1	; case 3
  9943  0038' B4D8               	btfsc	status,2,c
  9944  003A' D7E6               	goto	l1761
  9945  003C' 0A06               	xorlw	6	; case 5
  9946  003E' B4D8               	btfsc	status,2,c
  9947  0040' 0012               	return	
  9948  0042' 0A77               	xorlw	119	; case 114
  9949  0044' B4D8               	btfsc	status,2,c
  9950  0046' 0012               	return	
  9951  0048' 0A01               	xorlw	1	; case 115
  9952  004A' B4D8               	btfsc	status,2,c
  9953  004C' 0012               	return	
  9954  004E' 0A07               	xorlw	7	; case 116
  9955  0050' B4D8               	btfsc	status,2,c
  9956  0052' 0012               	return	
  9957  0054' 0A01               	xorlw	1	; case 117
  9958  0056' 0012               	return	
  9959  0058'                    l9939:
  9960                           
  9961                           ; BSR set to: 0
  9962                           ; Switch size 1, requested type "space"
  9963                           ; Number of cases is 1, Range of values is 255 to 255
  9964                           ; switch strategies available:
  9965                           ; Name         Instructions Cycles
  9966                           ; simple_byte            4     3 (average)
  9967                           ;	Chosen strategy is simple_byte
  9968  0058' 5100'              	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9969  005A' 0AFF               	xorlw	255	; case 255
  9970  005C' 0012               	return	
  9971  005E'                    __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  9972                           	opt stack 0
  9973                           tosu	equ	0xFFF
  9974                           tosh	equ	0xFFE
  9975                           tosl	equ	0xFFD
  9976                           pclath	equ	0xFFA
  9977                           tblptru	equ	0xFF8
  9978                           tblptrh	equ	0xFF7
  9979                           tblptrl	equ	0xFF6
  9980                           tablat	equ	0xFF5
  9981                           prodh	equ	0xFF4
  9982                           prodl	equ	0xFF3
  9983                           intcon	equ	0xFF2
  9984                           intcon2	equ	0xFF1
  9985                           intcon3	equ	0xFF0
  9986                           indf0	equ	0xFEF
  9987                           postinc0	equ	0xFEE
  9988                           plusw0	equ	0xFEB
  9989                           fsr0h	equ	0xFEA
  9990                           fsr0l	equ	0xFE9
  9991                           wreg	equ	0xFE8
  9992                           postinc1	equ	0xFE6
  9993                           postdec1	equ	0xFE5
  9994                           fsr1h	equ	0xFE2
  9995                           fsr1l	equ	0xFE1
  9996                           indf2	equ	0xFDF
  9997                           postinc2	equ	0xFDE
  9998                           postdec2	equ	0xFDD
  9999                           plusw2	equ	0xFDB
 10000                           fsr2h	equ	0xFDA
 10001                           fsr2l	equ	0xFD9
 10002                           status	equ	0xFD8
 10003                           
 10004 ;; *************** function _USBCheckCDCRequest *****************
 10005 ;; Defined at:
 10006 ;;		line 150 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;		None
 10009 ;; Auto vars:     Size  Location     Type
 10010 ;;		None
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  1    wreg      void 
 10013 ;; Registers used:
 10014 ;;		wreg, status,2, status,0
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10024 ;;Total ram usage:        0 bytes
 10025 ;; Hardware stack levels used:    1
 10026 ;; Hardware stack levels required when called:   11
 10027 ;; This function calls:
 10028 ;;		Nothing
 10029 ;; This function is called by:
 10030 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text42
 10035  0000'                    __ptext42:
 10036                           	opt stack 0
 10037  0000'                    _USBCheckCDCRequest:
 10038                           	opt stack 14
 10039                           
 10040                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 10041                           
 10042                           ;incstack = 0
 10043  0000' 0104               	movlb	4	; () banked
 10044  0002' 5130               	movf	48,w,b	;volatile
 10045  0004' 0B1F               	andlw	31
 10046  0006' 06E8               	decf	wreg,f,c
 10047  0008' A4D8               	btfss	status,2,c
 10048  000A' 0012               	return	
 10049                           
 10050                           ; BSR set to: 4
 10051                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
 10052                           
 10053                           ; BSR set to: 4
 10054                           
 10055                           ; BSR set to: 4
 10056  000C' 3930               	swapf	48,w,b	;volatile
 10057  000E' 32E8               	rrcf	wreg,f,c
 10058  0010' 0B03               	andlw	3
 10059  0012' 06E8               	decf	wreg,f,c
 10060  0014' A4D8               	btfss	status,2,c
 10061  0016' 0012               	return	
 10062                           
 10063                           ; BSR set to: 4
 10064                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
 10065                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
 10066                           
 10067                           ; BSR set to: 4
 10068                           
 10069                           ; BSR set to: 4
 10070  0018' 5134               	movf	52,w,b	;volatile
 10071  001A' B4D8               	btfsc	status,2,c
 10072  001C' D033               	goto	l1655
 10073                           
 10074                           ; BSR set to: 4
 10075  001E' 0534               	decf	52,w,b	;volatile
 10076  0020' A4D8               	btfss	status,2,c
 10077  0022' 0012               	return	
 10078  0024' D02F               	goto	l1655
 10079  0026'                    
 10080                           ; BSR set to: 4
 10081                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 10082                           
 10083                           ; BSR set to: 4
 10084  0026' 0E00'              	movlw	low _dummy_encapsulated_cmd_response
 10085  0028' 6E00'              	movwf	_inPipes,c
 10086  002A' 0E00'              	movlw	high _dummy_encapsulated_cmd_response
 10087  002C' 6E01'              	movwf	_inPipes+1,c
 10088                           
 10089                           ; BSR set to: 4
 10090                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
 10091  002E' 0E00               	movlw	0
 10092  0030' 6E05'              	movwf	_inPipes+5,c
 10093  0032' 0E08               	movlw	8
 10094  0034' 6E04'              	movwf	_inPipes+4,c
 10095                           
 10096                           ; BSR set to: 4
 10097                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 10098  0036' 8003'              	bsf	_inPipes+3,0,c
 10099                           
 10100                           ; BSR set to: 4
 10101                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
 10102  0038' 8E03'              	bsf	_inPipes+3,7,c
 10103                           
 10104                           ;usb_device_cdc.c: 178: break;
 10105  003A' 0012               	return	
 10106  003C'                    
 10107                           ; BSR set to: 4
 10108                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
 10109                           
 10110                           ; BSR set to: 4
 10111  003C' 0E00'              	movlw	low _dummy_encapsulated_cmd_response
 10112  003E' 6E00'              	movwf	_inPipes,c
 10113  0040' 0E00'              	movlw	high _dummy_encapsulated_cmd_response
 10114  0042' 6E01'              	movwf	_inPipes+1,c
 10115                           
 10116                           ; BSR set to: 4
 10117                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
 10118  0044' 8E03'              	bsf	_inPipes+3,7,c
 10119                           
 10120                           ;usb_device_cdc.c: 183: break;
 10121  0046' 0012               	return	
 10122  0048'                    l1659:
 10123                           
 10124                           ; BSR set to: 4
 10125                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
 10126  0048' C436 F004'         	movff	1078,_outPipes+4	;volatile
 10127  004C' C437 F005'         	movff	1079,_outPipes+5	;volatile
 10128                           
 10129                           ; BSR set to: 4
 10130                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
 10131  0050' 0E00'              	movlw	low _line_coding
 10132  0052' 0102               	movlb	2	; () banked
 10133  0054' 6F00'              	movwf	_outPipes& (0+255),b
 10134  0056' 0E00'              	movlw	high _line_coding
 10135  0058' 6F00'              	movwf	(_outPipes+1)& (0+255),b
 10136                           
 10137                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
 10138  005A' 0E00               	movlw	0
 10139  005C' 6F00'              	movwf	(_outPipes+6)& (0+255),b
 10140  005E' 0E00               	movlw	0
 10141  0060' 6F00'              	movwf	(_outPipes+7)& (0+255),b
 10142                           
 10143                           ; BSR set to: 2
 10144                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
 10145  0062' 8F00'              	bsf	(_outPipes+3)& (0+255),7,b
 10146                           
 10147                           ;usb_device_cdc.c: 192: break;
 10148  0064' 0012               	return	
 10149  0066'                    
 10150                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 10151                           
 10152                           ; BSR set to: 2
 10153  0066' 0E00'              	movlw	low _line_coding
 10154  0068' 6E00'              	movwf	_inPipes,c
 10155  006A' 0E00'              	movlw	high _line_coding
 10156  006C' 6E01'              	movwf	_inPipes+1,c
 10157  006E' 0E00               	movlw	0
 10158  0070' 6E05'              	movwf	_inPipes+5,c
 10159  0072' 0E07               	movlw	7
 10160  0074' 6E04'              	movwf	_inPipes+4,c
 10161  0076' 0EC1               	movlw	193
 10162  0078' 6E03'              	movwf	_inPipes+3,c
 10163                           
 10164                           ;usb_device_cdc.c: 199: break;
 10165  007A' 0012               	return	
 10166  007C'                    l1661:
 10167                           
 10168                           ; BSR set to: 4
 10169                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
 10170  007C' C432 F007'         	movff	1074,_control_signal_bitmap	;volatile
 10171                           
 10172                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
 10173  0080' 8E03'              	bsf	_inPipes+3,7,c
 10174                           
 10175                           ; BSR set to: 4
 10176                           ;usb_device_cdc.c: 261: }
 10177                           
 10178                           ; BSR set to: 4
 10179                           ;usb_device_cdc.c: 260: break;
 10180                           
 10181                           ;usb_device_cdc.c: 259: default:
 10182                           
 10183                           ;usb_device_cdc.c: 235: break;
 10184  0082' 0012               	return	
 10185  0084'                    l1655:
 10186                           
 10187                           ; BSR set to: 4
 10188                           
 10189                           ; BSR set to: 4
 10190  0084' 5131               	movf	49,w,b	;volatile
 10191                           
 10192                           ; Switch size 1, requested type "space"
 10193                           ; Number of cases is 5, Range of values is 0 to 34
 10194                           ; switch strategies available:
 10195                           ; Name         Instructions Cycles
 10196                           ; simple_byte           16     9 (average)
 10197                           ;	Chosen strategy is simple_byte
 10198  0086' 0A00               	xorlw	0	; case 0
 10199  0088' B4D8               	btfsc	status,2,c
 10200  008A' D7CD               	goto	l1656
 10201  008C' 0A01               	xorlw	1	; case 1
 10202  008E' B4D8               	btfsc	status,2,c
 10203  0090' D7D5               	goto	l1658
 10204  0092' 0A21               	xorlw	33	; case 32
 10205  0094' B4D8               	btfsc	status,2,c
 10206  0096' D7D8               	goto	l1659
 10207  0098' 0A01               	xorlw	1	; case 33
 10208  009A' B4D8               	btfsc	status,2,c
 10209  009C' D7E4               	goto	l1660
 10210  009E' 0A03               	xorlw	3	; case 34
 10211  00A0' A4D8               	btfss	status,2,c
 10212  00A2' 0012               	return	
 10213  00A4' D7EB               	goto	l1661
 10214  00A6'                    __end_of_USBCheckCDCRequest:
 10215                           	opt stack 0
 10216                           tosu	equ	0xFFF
 10217                           tosh	equ	0xFFE
 10218                           tosl	equ	0xFFD
 10219                           pclath	equ	0xFFA
 10220                           tblptru	equ	0xFF8
 10221                           tblptrh	equ	0xFF7
 10222                           tblptrl	equ	0xFF6
 10223                           tablat	equ	0xFF5
 10224                           prodh	equ	0xFF4
 10225                           prodl	equ	0xFF3
 10226                           intcon	equ	0xFF2
 10227                           intcon2	equ	0xFF1
 10228                           intcon3	equ	0xFF0
 10229                           indf0	equ	0xFEF
 10230                           postinc0	equ	0xFEE
 10231                           plusw0	equ	0xFEB
 10232                           fsr0h	equ	0xFEA
 10233                           fsr0l	equ	0xFE9
 10234                           wreg	equ	0xFE8
 10235                           postinc1	equ	0xFE6
 10236                           postdec1	equ	0xFE5
 10237                           fsr1h	equ	0xFE2
 10238                           fsr1l	equ	0xFE1
 10239                           indf2	equ	0xFDF
 10240                           postinc2	equ	0xFDE
 10241                           postdec2	equ	0xFDD
 10242                           plusw2	equ	0xFDB
 10243                           fsr2h	equ	0xFDA
 10244                           fsr2l	equ	0xFD9
 10245                           status	equ	0xFD8
 10246                           
 10247 ;; *************** function _CDCInitEP *****************
 10248 ;; Defined at:
 10249 ;;		line 297 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 10250 ;; Parameters:    Size  Location     Type
 10251 ;;		None
 10252 ;; Auto vars:     Size  Location     Type
 10253 ;;		None
 10254 ;; Return value:  Size  Location     Type
 10255 ;;                  1    wreg      void 
 10256 ;; Registers used:
 10257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10258 ;; Tracked objects:
 10259 ;;		On entry : 0/0
 10260 ;;		On exit  : 0/0
 10261 ;;		Unchanged: 0/0
 10262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10267 ;;Total ram usage:        0 bytes
 10268 ;; Hardware stack levels used:    1
 10269 ;; Hardware stack levels required when called:   13
 10270 ;; This function calls:
 10271 ;;		_USBEnableEndpoint
 10272 ;;		_USBTransferOnePacket
 10273 ;; This function is called by:
 10274 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           	psect	text43
 10279  0000'                    __ptext43:
 10280                           	opt stack 0
 10281  0000'                    _CDCInitEP:
 10282                           	opt stack 12
 10283                           
 10284                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
 10285                           
 10286                           ;incstack = 0
 10287  0000' 0E80               	movlw	128
 10288  0002' 0103               	movlb	3	; () banked
 10289  0004' 6F00'              	movwf	_line_coding& (0+255),b
 10290  0006' 0E25               	movlw	37
 10291  0008' 6F00'              	movwf	(_line_coding+1)& (0+255),b
 10292  000A' 0E00               	movlw	0
 10293  000C' 6F00'              	movwf	(_line_coding+2)& (0+255),b
 10294  000E' 0E00               	movlw	0
 10295  0010' 6F00'              	movwf	(_line_coding+3)& (0+255),b
 10296                           
 10297                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
 10298  0012' 0E00               	movlw	0
 10299  0014' 6F00'              	movwf	(_line_coding+4)& (0+255),b
 10300                           
 10301                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
 10302  0016' 0E00               	movlw	0
 10303  0018' 6F00'              	movwf	(_line_coding+5)& (0+255),b
 10304                           
 10305                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
 10306  001A' 0E08               	movlw	8
 10307  001C' 6F00'              	movwf	(_line_coding+6)& (0+255),b
 10308                           
 10309                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
 10310  001E' 0E00               	movlw	0
 10311  0020' 6E13'              	movwf	_cdc_rx_len,c
 10312                           
 10313                           ; BSR set to: 3
 10314                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
 10315  0022' 0E1A               	movlw	26
 10316  0024' 0100               	movlb	0	; () banked
 10317  0026' 6F00'              	movwf	USBEnableEndpoint@options& (0+255),b
 10318  0028' 0E01               	movlw	1
 10319  002A' EC00' F000'        	call	_USBEnableEndpoint
 10320                           
 10321                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
 10322  002E' 0E1E               	movlw	30
 10323  0030' 0100               	movlb	0	; () banked
 10324  0032' 6F00'              	movwf	USBEnableEndpoint@options& (0+255),b
 10325  0034' 0E02               	movlw	2
 10326  0036' EC00' F000'        	call	_USBEnableEndpoint
 10327                           
 10328                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 10329  003A' 0E00               	movlw	0
 10330  003C' 0100               	movlb	0	; () banked
 10331  003E' 6F00'              	movwf	USBTransferOnePacket@dir& (0+255),b
 10332  0040' 0E00'              	movlw	low _cdc_data_rx
 10333  0042' 6F00'              	movwf	USBTransferOnePacket@data& (0+255),b
 10334  0044' 0E00'              	movlw	high _cdc_data_rx
 10335  0046' 6F00'              	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 10336  0048' 0E40               	movlw	64
 10337  004A' 6F00'              	movwf	USBTransferOnePacket@len& (0+255),b
 10338  004C' 0E02               	movlw	2
 10339  004E' EC00' F000'        	call	_USBTransferOnePacket
 10340  0052' C000' F00C'        	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 10341  0056' C001' F00D'        	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 10342                           
 10343                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
 10344  005A' 0E00               	movlw	0
 10345  005C' 0101               	movlb	1	; () banked
 10346  005E' 6F00'              	movwf	_CDCDataInHandle& (0+255),b
 10347  0060' 0E00               	movlw	0
 10348  0062' 6F00'              	movwf	(_CDCDataInHandle+1)& (0+255),b
 10349                           
 10350                           ; BSR set to: 1
 10351                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
 10352  0064' 0E00               	movlw	0
 10353  0066' 0102               	movlb	2	; () banked
 10354  0068' 6F00'              	movwf	_cdc_trf_state& (0+255),b
 10355                           
 10356                           ; BSR set to: 2
 10357  006A' 0012               	return		;funcret
 10358  006C'                    __end_of_CDCInitEP:
 10359                           	opt stack 0
 10360                           tosu	equ	0xFFF
 10361                           tosh	equ	0xFFE
 10362                           tosl	equ	0xFFD
 10363                           pclath	equ	0xFFA
 10364                           tblptru	equ	0xFF8
 10365                           tblptrh	equ	0xFF7
 10366                           tblptrl	equ	0xFF6
 10367                           tablat	equ	0xFF5
 10368                           prodh	equ	0xFF4
 10369                           prodl	equ	0xFF3
 10370                           intcon	equ	0xFF2
 10371                           intcon2	equ	0xFF1
 10372                           intcon3	equ	0xFF0
 10373                           indf0	equ	0xFEF
 10374                           postinc0	equ	0xFEE
 10375                           plusw0	equ	0xFEB
 10376                           fsr0h	equ	0xFEA
 10377                           fsr0l	equ	0xFE9
 10378                           wreg	equ	0xFE8
 10379                           postinc1	equ	0xFE6
 10380                           postdec1	equ	0xFE5
 10381                           fsr1h	equ	0xFE2
 10382                           fsr1l	equ	0xFE1
 10383                           indf2	equ	0xFDF
 10384                           postinc2	equ	0xFDE
 10385                           postdec2	equ	0xFDD
 10386                           plusw2	equ	0xFDB
 10387                           fsr2h	equ	0xFDA
 10388                           fsr2l	equ	0xFD9
 10389                           status	equ	0xFD8
 10390                           
 10391 ;; *************** function _USBEnableEndpoint *****************
 10392 ;; Defined at:
 10393 ;;		line 896 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10394 ;; Parameters:    Size  Location     Type
 10395 ;;  ep              1    wreg     unsigned char 
 10396 ;;  options         1    8[BANK0 ] unsigned char 
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;  ep              1   11[BANK0 ] unsigned char 
 10399 ;;  p               2    9[BANK0 ] PTR unsigned char 
 10400 ;;		 -> UEP0(1), 
 10401 ;; Return value:  Size  Location     Type
 10402 ;;                  1    wreg      void 
 10403 ;; Registers used:
 10404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10405 ;; Tracked objects:
 10406 ;;		On entry : 0/0
 10407 ;;		On exit  : 0/0
 10408 ;;		Unchanged: 0/0
 10409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10410 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10411 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10413 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10414 ;;Total ram usage:        4 bytes
 10415 ;; Hardware stack levels used:    1
 10416 ;; Hardware stack levels required when called:   12
 10417 ;; This function calls:
 10418 ;;		_USBConfigureEndpoint
 10419 ;; This function is called by:
 10420 ;;		_CDCInitEP
 10421 ;; This function uses a non-reentrant model
 10422 ;;
 10423                           
 10424                           	psect	text44
 10425  0000'                    __ptext44:
 10426                           	opt stack 0
 10427  0000'                    _USBEnableEndpoint:
 10428                           	opt stack 12
 10429                           
 10430                           ; BSR set to: 2
 10431                           ;incstack = 0
 10432                           ;USBEnableEndpoint@ep stored from wreg
 10433  0000' 0100               	movlb	0	; () banked
 10434  0002' 6F00'              	movwf	USBEnableEndpoint@ep& (0+255),b
 10435                           
 10436                           ;usb_device.c: 898: unsigned char* p;
 10437                           ;usb_device.c: 902: if(options & 0x04)
 10438  0004' 0100               	movlb	0	; () banked
 10439  0006' A500'              	btfss	USBEnableEndpoint@options& (0+255),2,b
 10440  0008' D005               	goto	l1396
 10441                           
 10442                           ; BSR set to: 0
 10443                           ;usb_device.c: 903: {
 10444                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
 10445  000A' 0E00               	movlw	0
 10446  000C' 6F00'              	movwf	USBConfigureEndpoint@direction& (0+255),b
 10447  000E' 5100'              	movf	USBEnableEndpoint@ep& (0+255),w,b
 10448  0010' EC00' F000'        	call	_USBConfigureEndpoint
 10449  0014'                    l1396:
 10450                           
 10451                           ;usb_device.c: 905: }
 10452                           ;usb_device.c: 906: if(options & 0x02)
 10453  0014' 0100               	movlb	0	; () banked
 10454  0016' A300'              	btfss	USBEnableEndpoint@options& (0+255),1,b
 10455  0018' D005               	goto	l1397
 10456                           
 10457                           ; BSR set to: 0
 10458                           ;usb_device.c: 907: {
 10459                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 10460  001A' 0E01               	movlw	1
 10461  001C' 6F00'              	movwf	USBConfigureEndpoint@direction& (0+255),b
 10462  001E' 5100'              	movf	USBEnableEndpoint@ep& (0+255),w,b
 10463  0020' EC00' F000'        	call	_USBConfigureEndpoint
 10464  0024'                    l1397:
 10465                           
 10466                           ;usb_device.c: 909: }
 10467                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 10468  0024' 0100               	movlb	0	; () banked
 10469  0026' 5100'              	movf	USBEnableEndpoint@ep& (0+255),w,b
 10470  0028' 0D01               	mullw	1
 10471  002A' 0E26               	movlw	38
 10472  002C' 24F3               	addwf	prodl,w,c
 10473  002E' 6F00'              	movwf	USBEnableEndpoint@p& (0+255),b
 10474  0030' 0E0F               	movlw	15
 10475  0032' 20F4               	addwfc	prodh,w,c
 10476  0034' 6F00'              	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 10477                           
 10478                           ; BSR set to: 0
 10479                           ;usb_device.c: 919: *p = options;
 10480  0036' C009' FFD9         	movff	USBEnableEndpoint@p,fsr2l
 10481  003A' C00A' FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 10482  003E' C008' FFDF         	movff	USBEnableEndpoint@options,indf2
 10483                           
 10484                           ; BSR set to: 0
 10485  0042' 0012               	return		;funcret
 10486  0044'                    __end_of_USBEnableEndpoint:
 10487                           	opt stack 0
 10488                           tosu	equ	0xFFF
 10489                           tosh	equ	0xFFE
 10490                           tosl	equ	0xFFD
 10491                           pclath	equ	0xFFA
 10492                           tblptru	equ	0xFF8
 10493                           tblptrh	equ	0xFF7
 10494                           tblptrl	equ	0xFF6
 10495                           tablat	equ	0xFF5
 10496                           prodh	equ	0xFF4
 10497                           prodl	equ	0xFF3
 10498                           intcon	equ	0xFF2
 10499                           intcon2	equ	0xFF1
 10500                           intcon3	equ	0xFF0
 10501                           indf0	equ	0xFEF
 10502                           postinc0	equ	0xFEE
 10503                           plusw0	equ	0xFEB
 10504                           fsr0h	equ	0xFEA
 10505                           fsr0l	equ	0xFE9
 10506                           wreg	equ	0xFE8
 10507                           postinc1	equ	0xFE6
 10508                           postdec1	equ	0xFE5
 10509                           fsr1h	equ	0xFE2
 10510                           fsr1l	equ	0xFE1
 10511                           indf2	equ	0xFDF
 10512                           postinc2	equ	0xFDE
 10513                           postdec2	equ	0xFDD
 10514                           plusw2	equ	0xFDB
 10515                           fsr2h	equ	0xFDA
 10516                           fsr2l	equ	0xFD9
 10517                           status	equ	0xFD8
 10518                           
 10519 ;; *************** function _USBConfigureEndpoint *****************
 10520 ;; Defined at:
 10521 ;;		line 1561 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10522 ;; Parameters:    Size  Location     Type
 10523 ;;  EPNum           1    wreg     unsigned char 
 10524 ;;  direction       1    0[BANK0 ] unsigned char 
 10525 ;; Auto vars:     Size  Location     Type
 10526 ;;  EPNum           1    5[BANK0 ] unsigned char 
 10527 ;;  handle          2    6[BANK0 ] PTR volatile struct __BD
 10528 ;;		 -> BDT(48), 
 10529 ;; Return value:  Size  Location     Type
 10530 ;;                  1    wreg      void 
 10531 ;; Registers used:
 10532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10533 ;; Tracked objects:
 10534 ;;		On entry : 0/0
 10535 ;;		On exit  : 0/0
 10536 ;;		Unchanged: 0/0
 10537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10538 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10539 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10540 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10541 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10542 ;;Total ram usage:        8 bytes
 10543 ;; Hardware stack levels used:    1
 10544 ;; Hardware stack levels required when called:   11
 10545 ;; This function calls:
 10546 ;;		Nothing
 10547 ;; This function is called by:
 10548 ;;		_USBEnableEndpoint
 10549 ;; This function uses a non-reentrant model
 10550 ;;
 10551                           
 10552                           	psect	text45
 10553  0000'                    __ptext45:
 10554                           	opt stack 0
 10555  0000'                    _USBConfigureEndpoint:
 10556                           	opt stack 12
 10557                           
 10558                           ; BSR set to: 0
 10559                           ;incstack = 0
 10560                           ;USBConfigureEndpoint@EPNum stored from wreg
 10561  0000' 0100               	movlb	0	; () banked
 10562  0002' 6F00'              	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 10563                           
 10564                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 10565                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 10566  0004' 0E00               	movlw	0
 10567  0006' 0100               	movlb	0	; () banked
 10568  0008' 6F00'              	movwf	USBConfigureEndpoint@handle& (0+255),b
 10569  000A' 0E04               	movlw	4
 10570  000C' 6F00'              	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 10571                           
 10572                           ; BSR set to: 0
 10573                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 10574  000E' 5100'              	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10575  0010' 6F00'              	movwf	??_USBConfigureEndpoint& (0+255),b
 10576  0012' 6B00'              	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 10577  0014' 90D8               	bcf	status,0,c
 10578  0016' 3700'              	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 10579  0018' 3700'              	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 10580  001A' 5100'              	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10581  001C' 6F00'              	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 10582  001E' 6B00'              	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 10583  0020' 90D8               	bcf	status,0,c
 10584  0022' 3700'              	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10585  0024' 3700'              	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10586  0026' 90D8               	bcf	status,0,c
 10587  0028' 3700'              	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10588  002A' 3700'              	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10589  002C' 5100'              	movf	??_USBConfigureEndpoint& (0+255),w,b
 10590  002E' 2700'              	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10591  0030' 5100'              	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 10592  0032' 2300'              	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10593  0034' 90D8               	bcf	status,0,c
 10594  0036' 3700'              	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10595  0038' 3700'              	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10596  003A' 90D8               	bcf	status,0,c
 10597  003C' 3700'              	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10598  003E' 3700'              	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10599  0040' 5100'              	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 10600  0042' 2700'              	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 10601  0044' 5100'              	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 10602  0046' 2300'              	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 10603                           
 10604                           ; BSR set to: 0
 10605                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 10606  0048' C006' FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10607  004C' C007' FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10608  0050' 9EDF               	bcf	indf2,7,c
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;usb_device.c: 1575: if(direction == 0)
 10612  0052' 5100'              	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10613  0054' A4D8               	btfss	status,2,c
 10614  0056' D007               	goto	l1432
 10615                           
 10616                           ; BSR set to: 0
 10617                           ;usb_device.c: 1576: {
 10618                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 10619  0058' 5100'              	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10620  005A' 0D02               	mullw	2
 10621  005C' 0E00'              	movlw	low _pBDTEntryOut
 10622  005E' 24F3               	addwf	prodl,w,c
 10623  0060' 6ED9               	movwf	fsr2l,c
 10624  0062' 0E00'              	movlw	high _pBDTEntryOut
 10625  0064' D006               	goto	L10
 10626  0066'                    l1432:
 10627                           
 10628                           ; BSR set to: 0
 10629                           ;usb_device.c: 1579: else
 10630                           ;usb_device.c: 1580: {
 10631                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 10632                           
 10633                           ; BSR set to: 0
 10634  0066' 5100'              	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10635  0068' 0D02               	mullw	2
 10636  006A' 0E00'              	movlw	low _pBDTEntryIn
 10637  006C' 24F3               	addwf	prodl,w,c
 10638  006E' 6ED9               	movwf	fsr2l,c
 10639  0070' 0E00'              	movlw	high _pBDTEntryIn
 10640  0072'                    L10:
 10641  0072' 20F4               	addwfc	prodh,w,c
 10642  0074' 6EDA               	movwf	fsr2h,c
 10643  0076' C006' FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 10644  007A' C007' FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 10645                           
 10646                           ; BSR set to: 0
 10647                           ;usb_device.c: 1582: }
 10648                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 10649                           
 10650                           ; BSR set to: 0
 10651  007E' C006' FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10652  0082' C007' FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10653  0086' 9CDF               	bcf	indf2,6,c
 10654                           
 10655                           ; BSR set to: 0
 10656                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 10657  0088' EE20 F004          	lfsr	2,4
 10658  008C' 5100'              	movf	USBConfigureEndpoint@handle& (0+255),w,b
 10659  008E' 26D9               	addwf	fsr2l,f,c
 10660  0090' 5100'              	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 10661  0092' 22DA               	addwfc	fsr2h,f,c
 10662  0094' 8CDF               	bsf	indf2,6,c
 10663                           
 10664                           ; BSR set to: 0
 10665  0096' 0012               	return		;funcret
 10666  0098'                    __end_of_USBConfigureEndpoint:
 10667                           	opt stack 0
 10668                           tosu	equ	0xFFF
 10669                           tosh	equ	0xFFE
 10670                           tosl	equ	0xFFD
 10671                           pclath	equ	0xFFA
 10672                           tblptru	equ	0xFF8
 10673                           tblptrh	equ	0xFF7
 10674                           tblptrl	equ	0xFF6
 10675                           tablat	equ	0xFF5
 10676                           prodh	equ	0xFF4
 10677                           prodl	equ	0xFF3
 10678                           intcon	equ	0xFF2
 10679                           intcon2	equ	0xFF1
 10680                           intcon3	equ	0xFF0
 10681                           indf0	equ	0xFEF
 10682                           postinc0	equ	0xFEE
 10683                           plusw0	equ	0xFEB
 10684                           fsr0h	equ	0xFEA
 10685                           fsr0l	equ	0xFE9
 10686                           wreg	equ	0xFE8
 10687                           postinc1	equ	0xFE6
 10688                           postdec1	equ	0xFE5
 10689                           fsr1h	equ	0xFE2
 10690                           fsr1l	equ	0xFE1
 10691                           indf2	equ	0xFDF
 10692                           postinc2	equ	0xFDE
 10693                           postdec2	equ	0xFDD
 10694                           plusw2	equ	0xFDB
 10695                           fsr2h	equ	0xFDA
 10696                           fsr2l	equ	0xFD9
 10697                           status	equ	0xFD8
 10698                           
 10699 ;; *************** function _USBCtrlTrfOutHandler *****************
 10700 ;; Defined at:
 10701 ;;		line 2555 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10702 ;; Parameters:    Size  Location     Type
 10703 ;;		None
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;		None
 10706 ;; Return value:  Size  Location     Type
 10707 ;;                  1    wreg      void 
 10708 ;; Registers used:
 10709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10710 ;; Tracked objects:
 10711 ;;		On entry : 0/0
 10712 ;;		On exit  : 0/0
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10719 ;;Total ram usage:        0 bytes
 10720 ;; Hardware stack levels used:    1
 10721 ;; Hardware stack levels required when called:   13
 10722 ;; This function calls:
 10723 ;;		_USBCtrlTrfRxService
 10724 ;; This function is called by:
 10725 ;;		_USBCtrlEPService
 10726 ;; This function uses a non-reentrant model
 10727 ;;
 10728                           
 10729                           	psect	text46
 10730  0000'                    __ptext46:
 10731                           	opt stack 0
 10732  0000'                    _USBCtrlTrfOutHandler:
 10733                           	opt stack 12
 10734                           
 10735                           ;usb_device.c: 2557: if(controlTransferState == 2)
 10736                           
 10737                           ; BSR set to: 0
 10738                           ;incstack = 0
 10739  0000' 0E02               	movlw	2
 10740  0002' 1816'              	xorwf	_controlTransferState,w,c
 10741  0004' A4D8               	btfss	status,2,c
 10742  0006' D003               	goto	l1538
 10743                           
 10744                           ;usb_device.c: 2558: {
 10745                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 10746  0008' EC00' F000'        	call	_USBCtrlTrfRxService	;wreg free
 10747                           
 10748                           ;usb_device.c: 2560: }
 10749  000C' 0012               	return	
 10750  000E'                    l1538:
 10751                           
 10752                           ;usb_device.c: 2561: else
 10753                           ;usb_device.c: 2562: {
 10754                           ;usb_device.c: 2565: controlTransferState = 0;
 10755  000E' 0E00               	movlw	0
 10756  0010' 6E16'              	movwf	_controlTransferState,c
 10757                           
 10758                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 10759  0012' 0101               	movlb	1	; () banked
 10760  0014' 5100'              	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 10761  0016' A4D8               	btfss	status,2,c
 10762  0018' D01F               	goto	l1540
 10763                           
 10764                           ; BSR set to: 1
 10765                           ;usb_device.c: 2573: {
 10766                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 10767  001A' EE20 F001          	lfsr	2,1
 10768  001E' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
 10769  0020' 26D9               	addwf	fsr2l,f,c
 10770  0022' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
 10771  0024' 22DA               	addwfc	fsr2h,f,c
 10772  0026' 0E08               	movlw	8
 10773  0028' 6EDF               	movwf	indf2,c
 10774                           
 10775                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10776  002A' EE20 F002          	lfsr	2,2
 10777  002E' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
 10778  0030' 26D9               	addwf	fsr2l,f,c
 10779  0032' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
 10780  0034' 22DA               	addwfc	fsr2h,f,c
 10781  0036' 0E30               	movlw	48
 10782  0038' 6EDE               	movwf	postinc2,c
 10783  003A' 0E04               	movlw	4
 10784  003C' 6EDD               	movwf	postdec2,c
 10785                           
 10786                           ; BSR set to: 1
 10787                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10788  003E' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10789  0042' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10790  0046' 0E0C               	movlw	12
 10791  0048' 6EDF               	movwf	indf2,c
 10792                           
 10793                           ; BSR set to: 1
 10794                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10795  004A' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10796  004E' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10797  0052' 0E00               	movlw	0
 10798  0054' 8EDB               	bsf	plusw2,7,c
 10799                           
 10800                           ;usb_device.c: 2578: }
 10801  0056' 0012               	return	
 10802  0058'                    l1540:
 10803                           
 10804                           ; BSR set to: 1
 10805                           ;usb_device.c: 2579: else
 10806                           ;usb_device.c: 2580: {
 10807                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 10808                           
 10809                           ; BSR set to: 1
 10810  0058' 0E00               	movlw	0
 10811  005A' 6F00'              	movwf	_BothEP0OutUOWNsSet& (0+255),b
 10812                           
 10813                           ; BSR set to: 1
 10814  005C' 0012               	return	
 10815  005E'                    __end_of_USBCtrlTrfOutHandler:
 10816                           	opt stack 0
 10817                           tosu	equ	0xFFF
 10818                           tosh	equ	0xFFE
 10819                           tosl	equ	0xFFD
 10820                           pclath	equ	0xFFA
 10821                           tblptru	equ	0xFF8
 10822                           tblptrh	equ	0xFF7
 10823                           tblptrl	equ	0xFF6
 10824                           tablat	equ	0xFF5
 10825                           prodh	equ	0xFF4
 10826                           prodl	equ	0xFF3
 10827                           intcon	equ	0xFF2
 10828                           intcon2	equ	0xFF1
 10829                           intcon3	equ	0xFF0
 10830                           indf0	equ	0xFEF
 10831                           postinc0	equ	0xFEE
 10832                           plusw0	equ	0xFEB
 10833                           fsr0h	equ	0xFEA
 10834                           fsr0l	equ	0xFE9
 10835                           wreg	equ	0xFE8
 10836                           postinc1	equ	0xFE6
 10837                           postdec1	equ	0xFE5
 10838                           fsr1h	equ	0xFE2
 10839                           fsr1l	equ	0xFE1
 10840                           indf2	equ	0xFDF
 10841                           postinc2	equ	0xFDE
 10842                           postdec2	equ	0xFDD
 10843                           plusw2	equ	0xFDB
 10844                           fsr2h	equ	0xFDA
 10845                           fsr2l	equ	0xFD9
 10846                           status	equ	0xFD8
 10847                           
 10848 ;; *************** function _USBCtrlTrfRxService *****************
 10849 ;; Defined at:
 10850 ;;		line 1870 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10851 ;; Parameters:    Size  Location     Type
 10852 ;;		None
 10853 ;; Auto vars:     Size  Location     Type
 10854 ;;  byteToRead      1    1[BANK0 ] unsigned char 
 10855 ;;  i               1    0[BANK0 ] unsigned char 
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  1    wreg      void 
 10858 ;; Registers used:
 10859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/0
 10862 ;;		On exit  : 0/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10866 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10868 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10869 ;;Total ram usage:        2 bytes
 10870 ;; Hardware stack levels used:    1
 10871 ;; Hardware stack levels required when called:   12
 10872 ;; This function calls:
 10873 ;;		_USBCtrlEPAllowStatusStage
 10874 ;; This function is called by:
 10875 ;;		_USBCtrlTrfOutHandler
 10876 ;; This function uses a non-reentrant model
 10877 ;;
 10878                           
 10879                           	psect	text47
 10880  0000'                    __ptext47:
 10881                           	opt stack 0
 10882  0000'                    _USBCtrlTrfRxService:
 10883                           	opt stack 12
 10884                           
 10885                           ;usb_device.c: 1872: uint8_t byteToRead;
 10886                           ;usb_device.c: 1873: uint8_t i;
 10887                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 10888                           
 10889                           ;incstack = 0
 10890  0000' EE20 F001          	lfsr	2,1
 10891  0004' 5010'              	movf	_pBDTEntryEP0OutCurrent,w,c
 10892  0006' 26D9               	addwf	fsr2l,f,c
 10893  0008' 5011'              	movf	_pBDTEntryEP0OutCurrent+1,w,c
 10894  000A' 22DA               	addwfc	fsr2h,f,c
 10895  000C' 50DF               	movf	indf2,w,c
 10896  000E' 0100               	movlb	0	; () banked
 10897  0010' 6F00'              	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 10901  0012' 5100'              	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10902  0014' 0102               	movlb	2	; () banked
 10903  0016' 5D00'              	subwf	(_outPipes+4)& (0+255),w,b
 10904  0018' 0E00               	movlw	0
 10905  001A' 5900'              	subwfb	(_outPipes+5)& (0+255),w,b
 10906  001C' A0D8               	btfss	status,0,c
 10907                           
 10908                           ; BSR set to: 2
 10909                           ;usb_device.c: 1884: {
 10910                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 10911  001E' C004' F001'        	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 10912                           
 10913                           ; BSR set to: 2
 10914                           ;usb_device.c: 1886: }
 10915                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 10916                           
 10917                           ; BSR set to: 2
 10918  0022' 0100               	movlb	0	; () banked
 10919  0024' 5100'              	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10920  0026' 0102               	movlb	2	; () banked
 10921  0028' 5F00'              	subwf	(_outPipes+4)& (0+255),f,b
 10922  002A' 0E00               	movlw	0
 10923  002C' 5B00'              	subwfb	(_outPipes+5)& (0+255),f,b
 10924                           
 10925                           ; BSR set to: 2
 10926                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 10927  002E' 0E00               	movlw	0
 10928  0030' 0100               	movlb	0	; () banked
 10929  0032' 6F00'              	movwf	USBCtrlTrfRxService@i& (0+255),b
 10930  0034' D013               	goto	l1466
 10931  0036'                    
 10932                           ; BSR set to: 0
 10933                           ;usb_device.c: 1893: {
 10934                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 10935                           
 10936                           ; BSR set to: 0
 10937  0036' 5100'              	movf	USBCtrlTrfRxService@i& (0+255),w,b
 10938  0038' 0D01               	mullw	1
 10939  003A' 0E38               	movlw	56
 10940  003C' 24F3               	addwf	prodl,w,c
 10941  003E' 6ED9               	movwf	fsr2l,c
 10942  0040' 0E04               	movlw	4
 10943  0042' 20F4               	addwfc	prodh,w,c
 10944  0044' 6EDA               	movwf	fsr2h,c
 10945  0046' C000' FFE1         	movff	_outPipes,fsr1l
 10946  004A' C001' FFE2         	movff	_outPipes+1,fsr1h
 10947  004E' CFDF FFE7          	movff	indf2,indf1
 10948                           
 10949                           ; BSR set to: 0
 10950  0052' 0102               	movlb	2	; () banked
 10951  0054' 4B00'              	infsnz	_outPipes& (0+255),f,b
 10952  0056' 2B00'              	incf	(_outPipes+1)& (0+255),f,b
 10953                           
 10954                           ; BSR set to: 2
 10955  0058' 0100               	movlb	0	; () banked
 10956  005A' 2B00'              	incf	USBCtrlTrfRxService@i& (0+255),f,b
 10957  005C'                    l1466:
 10958                           
 10959                           ; BSR set to: 0
 10960                           
 10961                           ; BSR set to: 0
 10962  005C' 5100'              	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10963  005E' 5D00'              	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 10964  0060' A0D8               	btfss	status,0,c
 10965  0062' D7E9               	goto	l1467
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;usb_device.c: 1895: }
 10969                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 10970                           
 10971                           ; BSR set to: 0
 10972  0064' 0102               	movlb	2	; () banked
 10973  0066' 5100'              	movf	(_outPipes+4)& (0+255),w,b
 10974  0068' 1100'              	iorwf	(_outPipes+5)& (0+255),w,b
 10975  006A' B4D8               	btfsc	status,2,c
 10976  006C' D032               	goto	l1469
 10977                           
 10978                           ; BSR set to: 2
 10979                           ;usb_device.c: 1900: {
 10980                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 10981  006E' EE20 F001          	lfsr	2,1
 10982  0072' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
 10983  0074' 26D9               	addwf	fsr2l,f,c
 10984  0076' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
 10985  0078' 22DA               	addwfc	fsr2h,f,c
 10986  007A' 0E08               	movlw	8
 10987  007C' 6EDF               	movwf	indf2,c
 10988                           
 10989                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 10990  007E' EE20 F002          	lfsr	2,2
 10991  0082' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
 10992  0084' 26D9               	addwf	fsr2l,f,c
 10993  0086' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
 10994  0088' 22DA               	addwfc	fsr2h,f,c
 10995  008A' 0E38               	movlw	56
 10996  008C' 6EDE               	movwf	postinc2,c
 10997  008E' 0E04               	movlw	4
 10998  0090' 6EDD               	movwf	postdec2,c
 10999                           
 11000                           ; BSR set to: 2
 11001                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 11002  0092' C010' FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11003  0096' C011' FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11004  009A' BCDF               	btfsc	indf2,6,c
 11005  009C' D00D               	goto	l1470
 11006                           
 11007                           ; BSR set to: 2
 11008                           ;usb_device.c: 1904: {
 11009                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 11010  009E' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11011  00A2' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11012  00A6' 0E48               	movlw	72
 11013  00A8' 6EDF               	movwf	indf2,c
 11014                           
 11015                           ; BSR set to: 2
 11016                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11017  00AA' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11018  00AE' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11019  00B2' 0E00               	movlw	0
 11020  00B4' 8EDB               	bsf	plusw2,7,c
 11021                           
 11022                           ;usb_device.c: 1907: }
 11023  00B6' 0012               	return	
 11024  00B8'                    l1470:
 11025                           
 11026                           ; BSR set to: 2
 11027                           ;usb_device.c: 1908: else
 11028                           ;usb_device.c: 1909: {
 11029                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 11030                           
 11031                           ; BSR set to: 2
 11032  00B8' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11033  00BC' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11034  00C0' 0E08               	movlw	8
 11035  00C2' 6EDF               	movwf	indf2,c
 11036                           
 11037                           ; BSR set to: 2
 11038                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11039  00C4' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11040  00C8' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11041  00CC' 0E00               	movlw	0
 11042  00CE' 8EDB               	bsf	plusw2,7,c
 11043                           
 11044                           ; BSR set to: 2
 11045                           ;usb_device.c: 1912: }
 11046                           ;usb_device.c: 1913: }
 11047  00D0' 0012               	return	
 11048  00D2'                    l1469:
 11049                           
 11050                           ; BSR set to: 2
 11051                           ;usb_device.c: 1914: else
 11052                           ;usb_device.c: 1915: {
 11053                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 11054                           
 11055                           ; BSR set to: 2
 11056  00D2' EE20 F001          	lfsr	2,1
 11057  00D6' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
 11058  00D8' 26D9               	addwf	fsr2l,f,c
 11059  00DA' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
 11060  00DC' 22DA               	addwfc	fsr2h,f,c
 11061  00DE' 0E08               	movlw	8
 11062  00E0' 6EDF               	movwf	indf2,c
 11063                           
 11064                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 11065  00E2' EE20 F002          	lfsr	2,2
 11066  00E6' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
 11067  00E8' 26D9               	addwf	fsr2l,f,c
 11068  00EA' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
 11069  00EC' 22DA               	addwfc	fsr2h,f,c
 11070  00EE' 0E30               	movlw	48
 11071  00F0' 6EDE               	movwf	postinc2,c
 11072  00F2' 0E04               	movlw	4
 11073  00F4' 6EDD               	movwf	postdec2,c
 11074                           
 11075                           ; BSR set to: 2
 11076                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 11077  00F6' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11078  00FA' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11079  00FE' 0E04               	movlw	4
 11080  0100' 6EDF               	movwf	indf2,c
 11081                           
 11082                           ; BSR set to: 2
 11083                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 11084  0102' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11085  0106' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11086  010A' 0E00               	movlw	0
 11087  010C' 8EDB               	bsf	plusw2,7,c
 11088                           
 11089                           ; BSR set to: 2
 11090                           ;usb_device.c: 1944: }
 11091                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 11092                           
 11093                           ; BSR set to: 2
 11094  010E' 9F00'              	bcf	(_outPipes+3)& (0+255),7,b
 11095                           
 11096                           ; BSR set to: 2
 11097                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 11098  0110' 5014'              	movf	_USBDeferStatusStagePacket,w,c	;volatile
 11099  0112' A4D8               	btfss	status,2,c
 11100  0114' 0012               	return	
 11101                           
 11102                           ; BSR set to: 2
 11103                           ;usb_device.c: 1960: {
 11104                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 11105  0116' EC00' F000'        	call	_USBCtrlEPAllowStatusStage	;wreg free
 11106  011A' 0012               	return	
 11107  011C'                    __end_of_USBCtrlTrfRxService:
 11108                           	opt stack 0
 11109                           tosu	equ	0xFFF
 11110                           tosh	equ	0xFFE
 11111                           tosl	equ	0xFFD
 11112                           pclath	equ	0xFFA
 11113                           tblptru	equ	0xFF8
 11114                           tblptrh	equ	0xFF7
 11115                           tblptrl	equ	0xFF6
 11116                           tablat	equ	0xFF5
 11117                           prodh	equ	0xFF4
 11118                           prodl	equ	0xFF3
 11119                           intcon	equ	0xFF2
 11120                           intcon2	equ	0xFF1
 11121                           intcon3	equ	0xFF0
 11122                           indf0	equ	0xFEF
 11123                           postinc0	equ	0xFEE
 11124                           plusw0	equ	0xFEB
 11125                           fsr0h	equ	0xFEA
 11126                           fsr0l	equ	0xFE9
 11127                           wreg	equ	0xFE8
 11128                           indf1	equ	0xFE7
 11129                           postinc1	equ	0xFE6
 11130                           postdec1	equ	0xFE5
 11131                           fsr1h	equ	0xFE2
 11132                           fsr1l	equ	0xFE1
 11133                           indf2	equ	0xFDF
 11134                           postinc2	equ	0xFDE
 11135                           postdec2	equ	0xFDD
 11136                           plusw2	equ	0xFDB
 11137                           fsr2h	equ	0xFDA
 11138                           fsr2l	equ	0xFD9
 11139                           status	equ	0xFD8
 11140                           
 11141 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 11142 ;; Defined at:
 11143 ;;		line 1434 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11144 ;; Parameters:    Size  Location     Type
 11145 ;;		None
 11146 ;; Auto vars:     Size  Location     Type
 11147 ;;		None
 11148 ;; Return value:  Size  Location     Type
 11149 ;;                  1    wreg      void 
 11150 ;; Registers used:
 11151 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11152 ;; Tracked objects:
 11153 ;;		On entry : 0/0
 11154 ;;		On exit  : 0/0
 11155 ;;		Unchanged: 0/0
 11156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11161 ;;Total ram usage:        0 bytes
 11162 ;; Hardware stack levels used:    1
 11163 ;; Hardware stack levels required when called:   11
 11164 ;; This function calls:
 11165 ;;		Nothing
 11166 ;; This function is called by:
 11167 ;;		_USBDeviceTasks
 11168 ;;		_USBCtrlEPServiceComplete
 11169 ;;		_USBCtrlTrfRxService
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           	psect	text48
 11174  0000'                    __ptext48:
 11175                           	opt stack 0
 11176  0000'                    _USBCtrlEPAllowStatusStage:
 11177                           	opt stack 12
 11178                           
 11179                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 11180                           
 11181                           ;incstack = 0
 11182  0000' 0101               	movlb	1	; () banked
 11183  0002' 5100'              	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 11184  0004' A4D8               	btfss	status,2,c
 11185  0006' 0012               	return	
 11186                           
 11187                           ; BSR set to: 1
 11188                           ;usb_device.c: 1442: {
 11189                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 11190  0008' 0E01               	movlw	1
 11191  000A' 6F00'              	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 11192                           
 11193                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 11194  000C' 5100'              	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 11195  000E' A4D8               	btfss	status,2,c
 11196  0010' 0012               	return	
 11197                           
 11198                           ; BSR set to: 1
 11199                           ;usb_device.c: 1445: {
 11200                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 11201  0012' 0E01               	movlw	1
 11202  0014' 6F00'              	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 11203                           
 11204                           ; BSR set to: 1
 11205                           ;usb_device.c: 1450: if(controlTransferState == 2)
 11206  0016' 0E02               	movlw	2
 11207  0018' 1816'              	xorwf	_controlTransferState,w,c
 11208  001A' A4D8               	btfss	status,2,c
 11209  001C' D015               	goto	l1420
 11210                           
 11211                           ; BSR set to: 1
 11212                           ;usb_device.c: 1451: {
 11213                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 11214  001E' EE20 F001          	lfsr	2,1
 11215  0022' 5006'              	movf	_pBDTEntryIn,w,c
 11216  0024' 26D9               	addwf	fsr2l,f,c
 11217  0026' 5007'              	movf	_pBDTEntryIn+1,w,c
 11218  0028' 22DA               	addwfc	fsr2h,f,c
 11219  002A' 0E00               	movlw	0
 11220  002C' 6EDF               	movwf	indf2,c
 11221                           
 11222                           ; BSR set to: 1
 11223                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11224  002E' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
 11225  0032' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11226  0036' 0E48               	movlw	72
 11227  0038' 6EDF               	movwf	indf2,c
 11228                           
 11229                           ; BSR set to: 1
 11230                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11231  003A' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
 11232  003E' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11233  0042' 0E00               	movlw	0
 11234  0044' 8EDB               	bsf	plusw2,7,c
 11235                           
 11236                           ;usb_device.c: 1455: }
 11237  0046' 0012               	return	
 11238  0048'                    l1420:
 11239                           
 11240                           ; BSR set to: 1
 11241                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 11242                           
 11243                           ; BSR set to: 1
 11244  0048' 0416'              	decf	_controlTransferState,w,c
 11245  004A' A4D8               	btfss	status,2,c
 11246  004C' 0012               	return	
 11247                           
 11248                           ; BSR set to: 1
 11249                           ;usb_device.c: 1457: {
 11250                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 11251  004E' 0E00               	movlw	0
 11252  0050' 6F00'              	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11253                           
 11254                           ; BSR set to: 1
 11255                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 11256  0052' EE20 F001          	lfsr	2,1
 11257  0056' 5010'              	movf	_pBDTEntryEP0OutCurrent,w,c
 11258  0058' 26D9               	addwf	fsr2l,f,c
 11259  005A' 5011'              	movf	_pBDTEntryEP0OutCurrent+1,w,c
 11260  005C' 22DA               	addwfc	fsr2h,f,c
 11261  005E' 0E08               	movlw	8
 11262  0060' 6EDF               	movwf	indf2,c
 11263                           
 11264                           ; BSR set to: 1
 11265                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 11266  0062' EE20 F002          	lfsr	2,2
 11267  0066' 5010'              	movf	_pBDTEntryEP0OutCurrent,w,c
 11268  0068' 26D9               	addwf	fsr2l,f,c
 11269  006A' 5011'              	movf	_pBDTEntryEP0OutCurrent+1,w,c
 11270  006C' 22DA               	addwfc	fsr2h,f,c
 11271  006E' 0E30               	movlw	48
 11272  0070' 6EDE               	movwf	postinc2,c
 11273  0072' 0E04               	movlw	4
 11274  0074' 6EDD               	movwf	postdec2,c
 11275                           
 11276                           ; BSR set to: 1
 11277                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 11278  0076' C010' FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11279  007A' C011' FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11280  007E' 0E04               	movlw	4
 11281  0080' 6EDF               	movwf	indf2,c
 11282                           
 11283                           ; BSR set to: 1
 11284                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11285  0082' C010' FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11286  0086' C011' FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11287  008A' 0E00               	movlw	0
 11288  008C' 8EDB               	bsf	plusw2,7,c
 11289                           
 11290                           ; BSR set to: 1
 11291                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 11292  008E' 0E01               	movlw	1
 11293  0090' 6F00'              	movwf	_BothEP0OutUOWNsSet& (0+255),b
 11294                           
 11295                           ; BSR set to: 1
 11296                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 11297  0092' EE20 F001          	lfsr	2,1
 11298  0096' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
 11299  0098' 26D9               	addwf	fsr2l,f,c
 11300  009A' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
 11301  009C' 22DA               	addwfc	fsr2h,f,c
 11302  009E' 0E08               	movlw	8
 11303  00A0' 6EDF               	movwf	indf2,c
 11304                           
 11305                           ; BSR set to: 1
 11306                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 11307  00A2' EE20 F002          	lfsr	2,2
 11308  00A6' 500E'              	movf	_pBDTEntryEP0OutNext,w,c
 11309  00A8' 26D9               	addwf	fsr2l,f,c
 11310  00AA' 500F'              	movf	_pBDTEntryEP0OutNext+1,w,c
 11311  00AC' 22DA               	addwfc	fsr2h,f,c
 11312  00AE' 0E30               	movlw	48
 11313  00B0' 6EDE               	movwf	postinc2,c
 11314  00B2' 0E04               	movlw	4
 11315  00B4' 6EDD               	movwf	postdec2,c
 11316                           
 11317                           ; BSR set to: 1
 11318                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 11319  00B6' C00E' FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 11320  00BA' C00F' FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 11321  00BE' 0E80               	movlw	128
 11322  00C0' 6EDF               	movwf	indf2,c
 11323                           
 11324                           ; BSR set to: 1
 11325                           
 11326                           ; BSR set to: 1
 11327                           
 11328                           ; BSR set to: 1
 11329  00C2' 0012               	return	
 11330  00C4'                    __end_of_USBCtrlEPAllowStatusStage:
 11331                           	opt stack 0
 11332                           tosu	equ	0xFFF
 11333                           tosh	equ	0xFFE
 11334                           tosl	equ	0xFFD
 11335                           pclath	equ	0xFFA
 11336                           tblptru	equ	0xFF8
 11337                           tblptrh	equ	0xFF7
 11338                           tblptrl	equ	0xFF6
 11339                           tablat	equ	0xFF5
 11340                           prodh	equ	0xFF4
 11341                           prodl	equ	0xFF3
 11342                           intcon	equ	0xFF2
 11343                           intcon2	equ	0xFF1
 11344                           intcon3	equ	0xFF0
 11345                           indf0	equ	0xFEF
 11346                           postinc0	equ	0xFEE
 11347                           plusw0	equ	0xFEB
 11348                           fsr0h	equ	0xFEA
 11349                           fsr0l	equ	0xFE9
 11350                           wreg	equ	0xFE8
 11351                           indf1	equ	0xFE7
 11352                           postinc1	equ	0xFE6
 11353                           postdec1	equ	0xFE5
 11354                           fsr1h	equ	0xFE2
 11355                           fsr1l	equ	0xFE1
 11356                           indf2	equ	0xFDF
 11357                           postinc2	equ	0xFDE
 11358                           postdec2	equ	0xFDD
 11359                           plusw2	equ	0xFDB
 11360                           fsr2h	equ	0xFDA
 11361                           fsr2l	equ	0xFD9
 11362                           status	equ	0xFD8
 11363                           
 11364 ;; *************** function _USBCtrlTrfInHandler *****************
 11365 ;; Defined at:
 11366 ;;		line 2609 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11367 ;; Parameters:    Size  Location     Type
 11368 ;;		None
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;  lastDTS         1    1[BANK0 ] unsigned char 
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      void 
 11373 ;; Registers used:
 11374 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11381 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11383 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11384 ;;Total ram usage:        1 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; Hardware stack levels required when called:   12
 11387 ;; This function calls:
 11388 ;;		_USBCtrlTrfTxService
 11389 ;; This function is called by:
 11390 ;;		_USBCtrlEPService
 11391 ;; This function uses a non-reentrant model
 11392 ;;
 11393                           
 11394                           	psect	text49
 11395  0000'                    __ptext49:
 11396                           	opt stack 0
 11397  0000'                    _USBCtrlTrfInHandler:
 11398                           	opt stack 13
 11399                           
 11400                           ;usb_device.c: 2611: uint8_t lastDTS;
 11401                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 11402                           
 11403                           ; BSR set to: 1
 11404                           ;incstack = 0
 11405  0000' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
 11406  0004' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11407  0008' 0E00               	movlw	0
 11408  000A' BCDF               	btfsc	indf2,6,c
 11409  000C' 0E01               	movlw	1
 11410  000E' 0100               	movlb	0	; () banked
 11411  0010' 6F00'              	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 11415  0012' 0E04               	movlw	4
 11416  0014' 1A06'              	xorwf	_pBDTEntryIn,f,c
 11417                           
 11418                           ; BSR set to: 0
 11419                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 11420  0016' 0E08               	movlw	8
 11421  0018' 0102               	movlb	2	; () banked
 11422  001A' 1900'              	xorwf	_USBDeviceState& (0+255),w,b
 11423  001C' A4D8               	btfss	status,2,c
 11424  001E' D00D               	goto	l1547
 11425                           
 11426                           ; BSR set to: 2
 11427                           ;usb_device.c: 2622: {
 11428                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 11429  0020' 0104               	movlb	4	; () banked
 11430  0022' 5132               	movf	50,w,b	;volatile
 11431  0024' 0B7F               	andlw	127
 11432  0026' 010F               	movlb	15	; () banked
 11433  0028' 6F38               	movwf	56,b	;volatile
 11434                           
 11435                           ; BSR set to: 15
 11436                           ;usb_device.c: 2624: if(UADDR != 0u)
 11437  002A' 5138               	movf	56,w,b	;volatile
 11438  002C' B4D8               	btfsc	status,2,c
 11439  002E' D002               	goto	l1546
 11440                           
 11441                           ; BSR set to: 15
 11442                           ;usb_device.c: 2625: {
 11443                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 11444  0030' 0E10               	movlw	16
 11445  0032' D001               	goto	L11
 11446  0034'                    l1546:
 11447                           
 11448                           ;usb_device.c: 2628: else
 11449                           ;usb_device.c: 2629: {
 11450                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 11451                           
 11452                           ; BSR set to: 2
 11453  0034' 0E04               	movlw	4
 11454  0036'                    L11:
 11455  0036' 0102               	movlb	2	; () banked
 11456  0038' 6F00'              	movwf	_USBDeviceState& (0+255),b
 11457  003A'                    l1547:
 11458                           
 11459                           ; BSR set to: 2
 11460                           ;usb_device.c: 2631: }
 11461                           ;usb_device.c: 2632: }
 11462                           ;usb_device.c: 2635: if(controlTransferState == 1)
 11463                           
 11464                           ; BSR set to: 2
 11465                           
 11466                           ; BSR set to: 2
 11467  003A' 0416'              	decf	_controlTransferState,w,c
 11468  003C' A4D8               	btfss	status,2,c
 11469  003E' D03B               	goto	l1548
 11470                           
 11471                           ; BSR set to: 2
 11472                           ;usb_device.c: 2636: {
 11473                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 11474  0040' EE20 F002          	lfsr	2,2
 11475  0044' 5006'              	movf	_pBDTEntryIn,w,c
 11476  0046' 26D9               	addwf	fsr2l,f,c
 11477  0048' 5007'              	movf	_pBDTEntryIn+1,w,c
 11478  004A' 22DA               	addwfc	fsr2h,f,c
 11479  004C' 0E38               	movlw	56
 11480  004E' 6EDE               	movwf	postinc2,c
 11481  0050' 0E04               	movlw	4
 11482  0052' 6EDD               	movwf	postdec2,c
 11483                           
 11484                           ; BSR set to: 2
 11485                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 11486  0054' EC00' F000'        	call	_USBCtrlTrfTxService	;wreg free
 11487                           
 11488                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 11489  0058' 0E02               	movlw	2
 11490  005A' 1817'              	xorwf	_shortPacketStatus,w,c
 11491  005C' A4D8               	btfss	status,2,c
 11492  005E' D00D               	goto	l1549
 11493                           
 11494                           ;usb_device.c: 2645: {
 11495                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 11496  0060' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
 11497  0064' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11498  0068' 0E04               	movlw	4
 11499  006A' 6EDF               	movwf	indf2,c
 11500                           
 11501                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11502  006C' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
 11503  0070' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11504  0074' 0E00               	movlw	0
 11505  0076' 8EDB               	bsf	plusw2,7,c
 11506                           
 11507                           ;usb_device.c: 2650: }
 11508  0078' 0012               	return	
 11509  007A'                    l1549:
 11510                           
 11511                           ;usb_device.c: 2651: else
 11512                           ;usb_device.c: 2652: {
 11513                           ;usb_device.c: 2653: if(lastDTS == 0)
 11514  007A' 0100               	movlb	0	; () banked
 11515  007C' 5100'              	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 11516  007E' A4D8               	btfss	status,2,c
 11517  0080' D00D               	goto	l1551
 11518                           
 11519                           ; BSR set to: 0
 11520                           ;usb_device.c: 2654: {
 11521                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11522  0082' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
 11523  0086' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11524  008A' 0E48               	movlw	72
 11525  008C' 6EDF               	movwf	indf2,c
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11529  008E' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
 11530  0092' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11531  0096' 0E00               	movlw	0
 11532  0098' 8EDB               	bsf	plusw2,7,c
 11533                           
 11534                           ;usb_device.c: 2657: }
 11535  009A' 0012               	return	
 11536  009C'                    l1551:
 11537                           
 11538                           ; BSR set to: 0
 11539                           ;usb_device.c: 2658: else
 11540                           ;usb_device.c: 2659: {
 11541                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 11542                           
 11543                           ; BSR set to: 0
 11544  009C' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
 11545  00A0' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11546  00A4' 0E08               	movlw	8
 11547  00A6' 6EDF               	movwf	indf2,c
 11548                           
 11549                           ; BSR set to: 0
 11550                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11551  00A8' C006' FFD9         	movff	_pBDTEntryIn,fsr2l
 11552  00AC' C007' FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11553  00B0' 0E00               	movlw	0
 11554  00B2' 8EDB               	bsf	plusw2,7,c
 11555                           
 11556                           ; BSR set to: 0
 11557                           ;usb_device.c: 2662: }
 11558                           ;usb_device.c: 2663: }
 11559                           ;usb_device.c: 2664: }
 11560                           
 11561                           ; BSR set to: 0
 11562  00B4' 0012               	return	
 11563  00B6'                    l1548:
 11564                           
 11565                           ; BSR set to: 2
 11566                           ;usb_device.c: 2665: else
 11567                           ;usb_device.c: 2666: {
 11568                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 11569  00B6' BF00'              	btfsc	(_outPipes+3)& (0+255),7,b
 11570                           
 11571                           ; BSR set to: 2
 11572                           ;usb_device.c: 2675: }
 11573                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 11574                           
 11575                           ; BSR set to: 2
 11576  00B8' 9F00'              	bcf	(_outPipes+3)& (0+255),7,b
 11577                           
 11578                           ; BSR set to: 2
 11579                           ;usb_device.c: 2677: }
 11580                           ;usb_device.c: 2679: controlTransferState = 0;
 11581                           
 11582                           ; BSR set to: 2
 11583  00BA' 0E00               	movlw	0
 11584  00BC' 6E16'              	movwf	_controlTransferState,c
 11585  00BE' 0012               	return	
 11586  00C0'                    __end_of_USBCtrlTrfInHandler:
 11587                           	opt stack 0
 11588                           tosu	equ	0xFFF
 11589                           tosh	equ	0xFFE
 11590                           tosl	equ	0xFFD
 11591                           pclath	equ	0xFFA
 11592                           tblptru	equ	0xFF8
 11593                           tblptrh	equ	0xFF7
 11594                           tblptrl	equ	0xFF6
 11595                           tablat	equ	0xFF5
 11596                           prodh	equ	0xFF4
 11597                           prodl	equ	0xFF3
 11598                           intcon	equ	0xFF2
 11599                           intcon2	equ	0xFF1
 11600                           intcon3	equ	0xFF0
 11601                           indf0	equ	0xFEF
 11602                           postinc0	equ	0xFEE
 11603                           plusw0	equ	0xFEB
 11604                           fsr0h	equ	0xFEA
 11605                           fsr0l	equ	0xFE9
 11606                           wreg	equ	0xFE8
 11607                           indf1	equ	0xFE7
 11608                           postinc1	equ	0xFE6
 11609                           postdec1	equ	0xFE5
 11610                           fsr1h	equ	0xFE2
 11611                           fsr1l	equ	0xFE1
 11612                           indf2	equ	0xFDF
 11613                           postinc2	equ	0xFDE
 11614                           postdec2	equ	0xFDD
 11615                           plusw2	equ	0xFDB
 11616                           fsr2h	equ	0xFDA
 11617                           fsr2l	equ	0xFD9
 11618                           status	equ	0xFD8
 11619                           
 11620 ;; *************** function _USBCtrlTrfTxService *****************
 11621 ;; Defined at:
 11622 ;;		line 1789 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11623 ;; Parameters:    Size  Location     Type
 11624 ;;		None
 11625 ;; Auto vars:     Size  Location     Type
 11626 ;;  byteToSend      1    0[BANK0 ] unsigned char 
 11627 ;; Return value:  Size  Location     Type
 11628 ;;                  1    wreg      void 
 11629 ;; Registers used:
 11630 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11631 ;; Tracked objects:
 11632 ;;		On entry : 0/0
 11633 ;;		On exit  : 0/0
 11634 ;;		Unchanged: 0/0
 11635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11639 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11640 ;;Total ram usage:        1 bytes
 11641 ;; Hardware stack levels used:    1
 11642 ;; Hardware stack levels required when called:   11
 11643 ;; This function calls:
 11644 ;;		Nothing
 11645 ;; This function is called by:
 11646 ;;		_USBCtrlEPAllowDataStage
 11647 ;;		_USBCtrlTrfInHandler
 11648 ;; This function uses a non-reentrant model
 11649 ;;
 11650                           
 11651                           	psect	text50
 11652  0000'                    __ptext50:
 11653                           	opt stack 0
 11654  0000'                    _USBCtrlTrfTxService:
 11655                           	opt stack 11
 11656                           
 11657                           ;usb_device.c: 1791: uint8_t byteToSend;
 11658                           ;usb_device.c: 1795: byteToSend = 8;
 11659                           
 11660                           ;incstack = 0
 11661  0000' 0E08               	movlw	8
 11662  0002' 0100               	movlb	0	; () banked
 11663  0004' 6F00'              	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 11664                           
 11665                           ; BSR set to: 0
 11666                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 11667  0006' 5005'              	movf	_inPipes+5,w,c
 11668  0008' E110               	bnz	l6683
 11669  000A' 0E08               	movlw	8
 11670  000C' 5C04'              	subwf	_inPipes+4,w,c
 11671  000E' B0D8               	btfsc	status,0,c
 11672  0010' D00C               	goto	l1453
 11673                           
 11674                           ; BSR set to: 0
 11675                           ;usb_device.c: 1797: {
 11676                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 11677  0012' C004' F000'        	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 11678                           
 11679                           ; BSR set to: 0
 11680                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 11681  0016' 5017'              	movf	_shortPacketStatus,w,c
 11682  0018' A4D8               	btfss	status,2,c
 11683  001A' D002               	goto	l1451
 11684                           
 11685                           ; BSR set to: 0
 11686                           ;usb_device.c: 1806: {
 11687                           ;usb_device.c: 1807: shortPacketStatus = 1;
 11688  001C' 0E01               	movlw	1
 11689  001E' D004               	goto	L12
 11690  0020'                    l1451:
 11691                           
 11692                           ; BSR set to: 0
 11693                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 11694                           
 11695                           ; BSR set to: 0
 11696  0020' 0417'              	decf	_shortPacketStatus,w,c
 11697  0022' A4D8               	btfss	status,2,c
 11698  0024' D002               	goto	l1453
 11699                           
 11700                           ; BSR set to: 0
 11701                           ;usb_device.c: 1810: {
 11702                           ;usb_device.c: 1811: shortPacketStatus = 2;
 11703  0026' 0E02               	movlw	2
 11704  0028'                    L12:
 11705  0028' 6E17'              	movwf	_shortPacketStatus,c
 11706  002A'                    l1453:
 11707  002A'                    l6683:
 11708                           
 11709                           ; BSR set to: 0
 11710                           ;usb_device.c: 1812: }
 11711                           ;usb_device.c: 1813: }
 11712                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 11713  002A' 5100'              	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11714  002C' 5E04'              	subwf	_inPipes+4,f,c
 11715  002E' 0E00               	movlw	0
 11716  0030' 5A05'              	subwfb	_inPipes+5,f,c
 11717                           
 11718                           ; BSR set to: 0
 11719                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 11720  0032' EE20 F001          	lfsr	2,1
 11721  0036' 5006'              	movf	_pBDTEntryIn,w,c
 11722  0038' 26D9               	addwf	fsr2l,f,c
 11723  003A' 5007'              	movf	_pBDTEntryIn+1,w,c
 11724  003C' 22DA               	addwfc	fsr2h,f,c
 11725  003E' C000' FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 11729  0042' 0E38               	movlw	56
 11730  0044' 0102               	movlb	2	; () banked
 11731  0046' 6F00'              	movwf	_pDst& (0+255),b
 11732  0048' 0E04               	movlw	4
 11733  004A' 6F00'              	movwf	(_pDst+1)& (0+255),b
 11734                           
 11735                           ; BSR set to: 2
 11736                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 11737  004C' A003'              	btfss	_inPipes+3,0,c
 11738  004E' D01D               	goto	l1455
 11739  0050' D03D               	goto	l1459
 11740  0052'                    
 11741                           ;usb_device.c: 1830: {
 11742                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 11743                           
 11744                           ; BSR set to: 2
 11745  0052' C000' FFF6         	movff	_inPipes,tblptrl
 11746  0056' C001' FFF7         	movff	_inPipes+1,tblptrh
 11747  005A' 6AF8               	clrf	tblptru,c
 11748  005C' C01A' FFD9         	movff	_pDst,fsr2l
 11749  0060' C01B' FFDA         	movff	_pDst+1,fsr2h
 11750  0064' 0EFF'              	movlw	(high __ramtop+-1)
 11751  0066' 64F7               	cpfsgt	tblptrh,c
 11752  0068' D003               	bra	u4467
 11753  006A' 0008               	tblrd		*
 11754  006C' 50F5               	movf	tablat,w,c
 11755  006E' D005               	bra	u4460
 11756  0070'                    u4467:
 11757  0070' CFF6 FFE9          	movff	tblptrl,fsr0l
 11758  0074' CFF7 FFEA          	movff	tblptrh,fsr0h
 11759  0078' 50EF               	movf	indf0,w,c
 11760  007A'                    u4460:
 11761  007A' 6EDF               	movwf	indf2,c
 11762  007C' 4A00'              	infsnz	_inPipes,f,c
 11763  007E' 2A01'              	incf	_inPipes+1,f,c
 11764  0080' 0102               	movlb	2	; () banked
 11765  0082' 4B00'              	infsnz	_pDst& (0+255),f,b
 11766  0084' 2B00'              	incf	(_pDst+1)& (0+255),f,b
 11767                           
 11768                           ; BSR set to: 2
 11769                           ;usb_device.c: 1832: byteToSend--;
 11770  0086' 0100               	movlb	0	; () banked
 11771  0088' 0700'              	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11772  008A'                    l1455:
 11773                           
 11774                           ; BSR set to: 0
 11775  008A' 0100               	movlb	0	; () banked
 11776  008C' 5100'              	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11777  008E' B4D8               	btfsc	status,2,c
 11778  0090' 0012               	return	
 11779  0092' D7DF               	goto	l1456
 11780  0094'                    
 11781                           ; BSR set to: 0
 11782                           ;usb_device.c: 1838: {
 11783                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 11784                           
 11785                           ; BSR set to: 0
 11786  0094' C000' FFF6         	movff	_inPipes,tblptrl
 11787  0098' C001' FFF7         	movff	_inPipes+1,tblptrh
 11788  009C' 6AF8               	clrf	tblptru,c
 11789  009E' C01A' FFD9         	movff	_pDst,fsr2l
 11790  00A2' C01B' FFDA         	movff	_pDst+1,fsr2h
 11791  00A6' 0EFF'              	movlw	(high __ramtop+-1)
 11792  00A8' 64F7               	cpfsgt	tblptrh,c
 11793  00AA' D003               	bra	u4487
 11794  00AC' 0008               	tblrd		*
 11795  00AE' 50F5               	movf	tablat,w,c
 11796  00B0' D005               	bra	u4480
 11797  00B2'                    u4487:
 11798  00B2' CFF6 FFE9          	movff	tblptrl,fsr0l
 11799  00B6' CFF7 FFEA          	movff	tblptrh,fsr0h
 11800  00BA' 50EF               	movf	indf0,w,c
 11801  00BC'                    u4480:
 11802  00BC' 6EDF               	movwf	indf2,c
 11803  00BE' 4A00'              	infsnz	_inPipes,f,c
 11804  00C0' 2A01'              	incf	_inPipes+1,f,c
 11805  00C2' 0102               	movlb	2	; () banked
 11806  00C4' 4B00'              	infsnz	_pDst& (0+255),f,b
 11807  00C6' 2B00'              	incf	(_pDst+1)& (0+255),f,b
 11808                           
 11809                           ; BSR set to: 2
 11810                           ;usb_device.c: 1840: byteToSend--;
 11811  00C8' 0100               	movlb	0	; () banked
 11812  00CA' 0700'              	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11813  00CC'                    l1459:
 11814                           
 11815                           ; BSR set to: 0
 11816  00CC' 0100               	movlb	0	; () banked
 11817  00CE' 5100'              	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11818  00D0' B4D8               	btfsc	status,2,c
 11819  00D2' 0012               	return	
 11820  00D4' D7DF               	goto	l1460
 11821  00D6'                    __end_of_USBCtrlTrfTxService:
 11822                           	opt stack 0
 11823                           tosu	equ	0xFFF
 11824                           tosh	equ	0xFFE
 11825                           tosl	equ	0xFFD
 11826                           pclath	equ	0xFFA
 11827                           tblptru	equ	0xFF8
 11828                           tblptrh	equ	0xFF7
 11829                           tblptrl	equ	0xFF6
 11830                           tablat	equ	0xFF5
 11831                           prodh	equ	0xFF4
 11832                           prodl	equ	0xFF3
 11833                           intcon	equ	0xFF2
 11834                           intcon2	equ	0xFF1
 11835                           intcon3	equ	0xFF0
 11836                           indf0	equ	0xFEF
 11837                           postinc0	equ	0xFEE
 11838                           plusw0	equ	0xFEB
 11839                           fsr0h	equ	0xFEA
 11840                           fsr0l	equ	0xFE9
 11841                           wreg	equ	0xFE8
 11842                           indf1	equ	0xFE7
 11843                           postinc1	equ	0xFE6
 11844                           postdec1	equ	0xFE5
 11845                           fsr1h	equ	0xFE2
 11846                           fsr1l	equ	0xFE1
 11847                           indf2	equ	0xFDF
 11848                           postinc2	equ	0xFDE
 11849                           postdec2	equ	0xFDD
 11850                           plusw2	equ	0xFDB
 11851                           fsr2h	equ	0xFDA
 11852                           fsr2l	equ	0xFD9
 11853                           status	equ	0xFD8
 11854                           
 11855 ;; *************** function _CDCTxService *****************
 11856 ;; Defined at:
 11857 ;;		line 839 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11858 ;; Parameters:    Size  Location     Type
 11859 ;;		None
 11860 ;; Auto vars:     Size  Location     Type
 11861 ;;  byte_to_send    1    8[BANK0 ] unsigned char 
 11862 ;;  i               1    7[BANK0 ] unsigned char 
 11863 ;; Return value:  Size  Location     Type
 11864 ;;                  1    wreg      void 
 11865 ;; Registers used:
 11866 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11867 ;; Tracked objects:
 11868 ;;		On entry : 0/0
 11869 ;;		On exit  : 0/0
 11870 ;;		Unchanged: 0/0
 11871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11873 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11875 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11876 ;;Total ram usage:        2 bytes
 11877 ;; Hardware stack levels used:    1
 11878 ;; Hardware stack levels required when called:   12
 11879 ;; This function calls:
 11880 ;;		_USBTransferOnePacket
 11881 ;; This function is called by:
 11882 ;;		_UsbDevice_MainTask
 11883 ;; This function uses a non-reentrant model
 11884 ;;
 11885                           
 11886                           	psect	text51
 11887  0000'                    __ptext51:
 11888                           	opt stack 0
 11889  0000'                    _CDCTxService:
 11890                           	opt stack 15
 11891                           
 11892                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 11893                           ;usb_device_cdc.c: 842: uint8_t i;
 11894                           ;usb_device_cdc.c: 844: ;
 11895                           ;usb_device_cdc.c: 846: {};
 11896                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 11897                           
 11898                           ; BSR set to: 0
 11899                           ;incstack = 0
 11900  0000' 0101               	movlb	1	; () banked
 11901  0002' 5100'              	movf	_CDCDataInHandle& (0+255),w,b
 11902  0004' 1100'              	iorwf	(_CDCDataInHandle+1)& (0+255),w,b
 11903  0006' B4D8               	btfsc	status,2,c
 11904  0008' D006               	goto	l1705
 11905                           
 11906                           ; BSR set to: 1
 11907  000A' C000' FFD9         	movff	_CDCDataInHandle,fsr2l
 11908  000E' C001' FFDA         	movff	_CDCDataInHandle+1,fsr2h
 11909  0012' BEDF               	btfsc	indf2,7,c
 11910  0014' 0012               	return	
 11911  0016'                    l1705:
 11912                           
 11913                           ; BSR set to: 1
 11914                           ;usb_device_cdc.c: 852: }
 11915                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 11916                           
 11917                           ; BSR set to: 1
 11918  0016' 0E03               	movlw	3
 11919  0018' 0102               	movlb	2	; () banked
 11920  001A' 1900'              	xorwf	_cdc_trf_state& (0+255),w,b
 11921  001C' A4D8               	btfss	status,2,c
 11922  001E' D002               	goto	l1707
 11923                           
 11924                           ; BSR set to: 2
 11925                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 11926  0020' 0E00               	movlw	0
 11927  0022' 6F00'              	movwf	_cdc_trf_state& (0+255),b
 11928  0024'                    l1707:
 11929                           
 11930                           ; BSR set to: 2
 11931                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 11932  0024' 5100'              	movf	_cdc_trf_state& (0+255),w,b
 11933  0026' B4D8               	btfsc	status,2,c
 11934  0028' 0012               	return	
 11935                           
 11936                           ; BSR set to: 2
 11937                           ;usb_device_cdc.c: 869: }
 11938                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 11939                           
 11940                           ; BSR set to: 2
 11941                           
 11942                           ; BSR set to: 2
 11943                           ;usb_device_cdc.c: 866: {
 11944                           ;usb_device_cdc.c: 867: ;
 11945                           ;usb_device_cdc.c: 868: return;
 11946  002A' 0E02               	movlw	2
 11947  002C' 1900'              	xorwf	_cdc_trf_state& (0+255),w,b
 11948  002E' A4D8               	btfss	status,2,c
 11949  0030' D014               	goto	l1709
 11950                           
 11951                           ; BSR set to: 2
 11952                           ;usb_device_cdc.c: 875: {
 11953                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 11954  0032' 0E01               	movlw	1
 11955  0034' 0100               	movlb	0	; () banked
 11956  0036' 6F00'              	movwf	USBTransferOnePacket@dir& (0+255),b
 11957  0038' 0E00               	movlw	0
 11958  003A' 6F00'              	movwf	USBTransferOnePacket@data& (0+255),b
 11959  003C' 0E00               	movlw	0
 11960  003E' 6F00'              	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11961  0040' 0E00               	movlw	0
 11962  0042' 6F00'              	movwf	USBTransferOnePacket@len& (0+255),b
 11963  0044' 0E02               	movlw	2
 11964  0046' EC00' F000'        	call	_USBTransferOnePacket
 11965  004A' C000' F000'        	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11966  004E' C001' F001'        	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11967                           
 11968                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 11969  0052' 0E03               	movlw	3
 11970  0054' 0102               	movlb	2	; () banked
 11971  0056' 6F00'              	movwf	_cdc_trf_state& (0+255),b
 11972                           
 11973                           ;usb_device_cdc.c: 879: }
 11974  0058' 0012               	return	
 11975  005A'                    l1709:
 11976                           
 11977                           ; BSR set to: 2
 11978                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 11979                           
 11980                           ; BSR set to: 2
 11981  005A' 0500'              	decf	_cdc_trf_state& (0+255),w,b
 11982  005C' A4D8               	btfss	status,2,c
 11983  005E' 0012               	return	
 11984                           
 11985                           ; BSR set to: 2
 11986                           ;usb_device_cdc.c: 881: {
 11987                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 11988  0060' 0E40               	movlw	64
 11989  0062' 6412'              	cpfsgt	_cdc_tx_len,c
 11990  0064' D004               	goto	l1712
 11991                           
 11992                           ; BSR set to: 2
 11993                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 11994  0066' 0E40               	movlw	64
 11995  0068' 0100               	movlb	0	; () banked
 11996  006A' 6F00'              	movwf	CDCTxService@byte_to_send& (0+255),b
 11997  006C' D002               	goto	l1713
 11998  006E'                    l1712:
 11999                           
 12000                           ; BSR set to: 2
 12001                           ;usb_device_cdc.c: 887: else
 12002                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 12003  006E' C012' F008'        	movff	_cdc_tx_len,CDCTxService@byte_to_send
 12004  0072'                    l1713:
 12005                           
 12006                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 12007                           
 12008                           ; BSR set to: 2
 12009  0072' 0100               	movlb	0	; () banked
 12010  0074' 5100'              	movf	CDCTxService@byte_to_send& (0+255),w,b
 12011  0076' 0800               	sublw	0
 12012  0078' 2412'              	addwf	_cdc_tx_len,w,c
 12013  007A' 6E12'              	movwf	_cdc_tx_len,c
 12014                           
 12015                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 12016  007C' 0E00'              	movlw	low _cdc_data_tx
 12017  007E' 0102               	movlb	2	; () banked
 12018  0080' 6F00'              	movwf	_pCDCDst& (0+255),b
 12019  0082' 0E00'              	movlw	high _cdc_data_tx
 12020  0084' 6F00'              	movwf	(_pCDCDst+1)& (0+255),b
 12021                           
 12022                           ; BSR set to: 2
 12023                           ;usb_device_cdc.c: 897: i = byte_to_send;
 12024  0086' C008' F007'        	movff	CDCTxService@byte_to_send,CDCTxService@i
 12025                           
 12026                           ; BSR set to: 2
 12027                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 12028  008A' 0101               	movlb	1	; () banked
 12029  008C' 5100'              	movf	_cdc_mem_type& (0+255),w,b
 12030  008E' B4D8               	btfsc	status,2,c
 12031  0090' D01D               	goto	l1715
 12032  0092' D03D               	goto	l1719
 12033  0094'                    
 12034                           ;usb_device_cdc.c: 901: {
 12035                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 12036                           
 12037                           ; BSR set to: 1
 12038  0094' C011' FFF6         	movff	_pCDCSrc,tblptrl
 12039  0098' C012' FFF7         	movff	_pCDCSrc+1,tblptrh
 12040  009C' 6AF8               	clrf	tblptru,c
 12041  009E' C00E' FFD9         	movff	_pCDCDst,fsr2l
 12042  00A2' C00F' FFDA         	movff	_pCDCDst+1,fsr2h
 12043  00A6' 0EFF'              	movlw	(high __ramtop+-1)
 12044  00A8' 64F7               	cpfsgt	tblptrh,c
 12045  00AA' D003               	bra	u7647
 12046  00AC' 0008               	tblrd		*
 12047  00AE' 50F5               	movf	tablat,w,c
 12048  00B0' D005               	bra	u7640
 12049  00B2'                    u7647:
 12050  00B2' CFF6 FFE9          	movff	tblptrl,fsr0l
 12051  00B6' CFF7 FFEA          	movff	tblptrh,fsr0h
 12052  00BA' 50EF               	movf	indf0,w,c
 12053  00BC'                    u7640:
 12054  00BC' 6EDF               	movwf	indf2,c
 12055                           
 12056                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 12057  00BE' 0102               	movlb	2	; () banked
 12058  00C0' 4B00'              	infsnz	_pCDCDst& (0+255),f,b
 12059  00C2' 2B00'              	incf	(_pCDCDst+1)& (0+255),f,b
 12060                           
 12061                           ; BSR set to: 2
 12062                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 12063  00C4' 4B00'              	infsnz	_pCDCSrc& (0+255),f,b
 12064  00C6' 2B00'              	incf	(_pCDCSrc+1)& (0+255),f,b
 12065                           
 12066                           ; BSR set to: 2
 12067                           ;usb_device_cdc.c: 905: i--;
 12068  00C8' 0100               	movlb	0	; () banked
 12069  00CA' 0700'              	decf	CDCTxService@i& (0+255),f,b
 12070  00CC'                    l1715:
 12071                           
 12072                           ; BSR set to: 0
 12073  00CC' 0100               	movlb	0	; () banked
 12074  00CE' 5100'              	movf	CDCTxService@i& (0+255),w,b
 12075  00D0' B4D8               	btfsc	status,2,c
 12076  00D2' D021               	goto	u7670
 12077  00D4' D7DF               	goto	l1716
 12078  00D6'                    
 12079                           ; BSR set to: 0
 12080                           ;usb_device_cdc.c: 911: {
 12081                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 12082                           
 12083                           ; BSR set to: 0
 12084  00D6' C011' FFF6         	movff	_pCDCSrc,tblptrl
 12085  00DA' C012' FFF7         	movff	_pCDCSrc+1,tblptrh
 12086  00DE' 6AF8               	clrf	tblptru,c
 12087  00E0' C00E' FFD9         	movff	_pCDCDst,fsr2l
 12088  00E4' C00F' FFDA         	movff	_pCDCDst+1,fsr2h
 12089  00E8' 0EFF'              	movlw	(high __ramtop+-1)
 12090  00EA' 64F7               	cpfsgt	tblptrh,c
 12091  00EC' D003               	bra	u7667
 12092  00EE' 0008               	tblrd		*
 12093  00F0' 50F5               	movf	tablat,w,c
 12094  00F2' D005               	bra	u7660
 12095  00F4'                    u7667:
 12096  00F4' CFF6 FFE9          	movff	tblptrl,fsr0l
 12097  00F8' CFF7 FFEA          	movff	tblptrh,fsr0h
 12098  00FC' 50EF               	movf	indf0,w,c
 12099  00FE'                    u7660:
 12100  00FE' 6EDF               	movwf	indf2,c
 12101                           
 12102                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 12103  0100' 0102               	movlb	2	; () banked
 12104  0102' 4B00'              	infsnz	_pCDCDst& (0+255),f,b
 12105  0104' 2B00'              	incf	(_pCDCDst+1)& (0+255),f,b
 12106                           
 12107                           ; BSR set to: 2
 12108                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 12109  0106' 4B00'              	infsnz	_pCDCSrc& (0+255),f,b
 12110  0108' 2B00'              	incf	(_pCDCSrc+1)& (0+255),f,b
 12111                           
 12112                           ; BSR set to: 2
 12113                           ;usb_device_cdc.c: 915: i--;
 12114  010A' 0100               	movlb	0	; () banked
 12115  010C' 0700'              	decf	CDCTxService@i& (0+255),f,b
 12116  010E'                    l1719:
 12117                           
 12118                           ; BSR set to: 0
 12119  010E' 0100               	movlb	0	; () banked
 12120  0110' 5100'              	movf	CDCTxService@i& (0+255),w,b
 12121  0112' A4D8               	btfss	status,2,c
 12122  0114' D7E0               	goto	l1720
 12123  0116'                    u7670:
 12124                           
 12125                           ; BSR set to: 0
 12126                           ;usb_device_cdc.c: 916: }
 12127                           ;usb_device_cdc.c: 917: }
 12128                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 12129                           
 12130                           ; BSR set to: 0
 12131                           
 12132                           ; BSR set to: 0
 12133  0116' 5012'              	movf	_cdc_tx_len,w,c
 12134  0118' A4D8               	btfss	status,2,c
 12135  011A' D009               	goto	l1724
 12136                           
 12137                           ; BSR set to: 0
 12138                           ;usb_device_cdc.c: 924: {
 12139                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 12140  011C' 0E40               	movlw	64
 12141  011E' 1900'              	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 12142  0120' A4D8               	btfss	status,2,c
 12143  0122' D002               	goto	l1723
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 12147  0124' 0E02               	movlw	2
 12148  0126' D001               	goto	L13
 12149  0128'                    l1723:
 12150                           
 12151                           ;usb_device_cdc.c: 927: else
 12152                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 12153                           
 12154                           ; BSR set to: 2
 12155  0128' 0E03               	movlw	3
 12156  012A'                    L13:
 12157  012A' 0102               	movlb	2	; () banked
 12158  012C' 6F00'              	movwf	_cdc_trf_state& (0+255),b
 12159  012E'                    l1724:
 12160                           
 12161                           ;usb_device_cdc.c: 929: }
 12162                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 12163                           
 12164                           ; BSR set to: 2
 12165                           
 12166                           ; BSR set to: 2
 12167  012E' 0E01               	movlw	1
 12168  0130' 0100               	movlb	0	; () banked
 12169  0132' 6F00'              	movwf	USBTransferOnePacket@dir& (0+255),b
 12170  0134' 0E00'              	movlw	low _cdc_data_tx
 12171  0136' 6F00'              	movwf	USBTransferOnePacket@data& (0+255),b
 12172  0138' 0E00'              	movlw	high _cdc_data_tx
 12173  013A' 6F00'              	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 12174  013C' C008' F003'        	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 12175  0140' 0E02               	movlw	2
 12176  0142' EC00' F000'        	call	_USBTransferOnePacket
 12177  0146' C000' F000'        	movff	?_USBTransferOnePacket,_CDCDataInHandle
 12178  014A' C001' F001'        	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 12179  014E' 0012               	return	
 12180  0150'                    __end_of_CDCTxService:
 12181                           	opt stack 0
 12182                           tosu	equ	0xFFF
 12183                           tosh	equ	0xFFE
 12184                           tosl	equ	0xFFD
 12185                           pclath	equ	0xFFA
 12186                           tblptru	equ	0xFF8
 12187                           tblptrh	equ	0xFF7
 12188                           tblptrl	equ	0xFF6
 12189                           tablat	equ	0xFF5
 12190                           prodh	equ	0xFF4
 12191                           prodl	equ	0xFF3
 12192                           intcon	equ	0xFF2
 12193                           intcon2	equ	0xFF1
 12194                           intcon3	equ	0xFF0
 12195                           indf0	equ	0xFEF
 12196                           postinc0	equ	0xFEE
 12197                           plusw0	equ	0xFEB
 12198                           fsr0h	equ	0xFEA
 12199                           fsr0l	equ	0xFE9
 12200                           wreg	equ	0xFE8
 12201                           indf1	equ	0xFE7
 12202                           postinc1	equ	0xFE6
 12203                           postdec1	equ	0xFE5
 12204                           fsr1h	equ	0xFE2
 12205                           fsr1l	equ	0xFE1
 12206                           indf2	equ	0xFDF
 12207                           postinc2	equ	0xFDE
 12208                           postdec2	equ	0xFDD
 12209                           plusw2	equ	0xFDB
 12210                           fsr2h	equ	0xFDA
 12211                           fsr2l	equ	0xFD9
 12212                           status	equ	0xFD8
 12213                           
 12214 ;; *************** function _Term_MainSm *****************
 12215 ;; Defined at:
 12216 ;;		line 668 in file "../Source/c/03_Sml/02_Ssl/term.c"
 12217 ;; Parameters:    Size  Location     Type
 12218 ;;		None
 12219 ;; Auto vars:     Size  Location     Type
 12220 ;;  Data           50   82[BANK0 ] unsigned char [50]
 12221 ;;  FwkBuildYear    4  152[BANK0 ] unsigned char [4]
 12222 ;;  FwkBuildMont    4  148[BANK0 ] unsigned char [4]
 12223 ;;  FwkBuildDayS    4  144[BANK0 ] unsigned char [4]
 12224 ;;  FwkBuildStr     4  140[BANK0 ] unsigned char [4]
 12225 ;;  FwkMinorStr     4  136[BANK0 ] unsigned char [4]
 12226 ;;  FwkMajorStr     4  132[BANK0 ] unsigned char [4]
 12227 ;; Return value:  Size  Location     Type
 12228 ;;                  1    wreg      void 
 12229 ;; Registers used:
 12230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12231 ;; Tracked objects:
 12232 ;;		On entry : 0/0
 12233 ;;		On exit  : 0/0
 12234 ;;		Unchanged: 0/0
 12235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12237 ;;      Locals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12239 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12240 ;;Total ram usage:       74 bytes
 12241 ;; Hardware stack levels used:    1
 12242 ;; Hardware stack levels required when called:   15
 12243 ;; This function calls:
 12244 ;;		_OsTmr_GetTimerStatus
 12245 ;;		_OsTmr_StartTimer
 12246 ;;		_Terminal
 12247 ;;		_memset
 12248 ;;		_putUSBUSART
 12249 ;;		_strcat
 12250 ;;		_strcpy
 12251 ;;		_strlen
 12252 ;;		_utoa
 12253 ;; This function is called by:
 12254 ;;		_Term_MainTask
 12255 ;; This function uses a non-reentrant model
 12256 ;;
 12257                           
 12258                           	psect	text52
 12259  0000'                    __ptext52:
 12260                           	opt stack 0
 12261  0000'                    _Term_MainSm:
 12262                           	opt stack 12
 12263                           
 12264                           ;term.c: 670: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 12265                           ;term.c: 671: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 12266                           ;term.c: 672: UINT8 Data[50];
 12267                           ;term.c: 673: UINT8 FwkMajorStr[4];
 12268                           ;term.c: 674: UINT8 FwkMinorStr[4];
 12269                           ;term.c: 675: UINT8 FwkBuildStr[4];
 12270                           ;term.c: 676: UINT8 FwkBuildDayStr[4];
 12271                           ;term.c: 677: UINT8 FwkBuildMonthStr[4];
 12272                           ;term.c: 678: UINT8 FwkBuildYearStr[4];
 12273                           ;term.c: 680: switch (TermMainSmState)
 12274                           
 12275                           ;incstack = 0
 12276  0000' D1D8               	goto	l2151
 12277  0002'                    
 12278                           ;term.c: 684: OsTmr_StartTimer(&TermDelay,2000);
 12279  0002' 0E00'              	movlw	low Term_MainSm@TermDelay
 12280  0004' 0100               	movlb	0	; () banked
 12281  0006' 6F00'              	movwf	OsTmr_StartTimer@Timer& (0+255),b
 12282  0008' 0E00'              	movlw	high Term_MainSm@TermDelay
 12283  000A' 6F00'              	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 12284  000C' 0ED0               	movlw	208
 12285  000E' 6F00'              	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 12286  0010' 0E07               	movlw	7
 12287  0012' 6F00'              	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 12288  0014' 0E00               	movlw	0
 12289  0016' 6F00'              	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 12290  0018' 0E00               	movlw	0
 12291  001A' 6F00'              	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 12292  001C' EC00' F000'        	call	_OsTmr_StartTimer	;wreg free
 12293                           
 12294                           ;term.c: 686: TermMainSmState = Term_InitDelay;
 12295  0020' 0E01               	movlw	1
 12296  0022' 0102               	movlb	2	; () banked
 12297  0024' 6F00'              	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12298                           
 12299                           ;term.c: 687: break;
 12300  0026' 0012               	return	
 12301  0028'                    
 12302                           ; BSR set to: 2
 12303                           ;term.c: 691: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 12304                           
 12305                           ; BSR set to: 2
 12306  0028' 0E00'              	movlw	low Term_MainSm@TermDelay
 12307  002A' 0100               	movlb	0	; () banked
 12308  002C' 6F00'              	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 12309  002E' 0E00'              	movlw	high Term_MainSm@TermDelay
 12310  0030' 6F00'              	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 12311  0032' EC00' F000'        	call	_OsTmr_GetTimerStatus	;wreg free
 12312  0036' 06E8               	decf	wreg,f,c
 12313  0038' A4D8               	btfss	status,2,c
 12314  003A' 0012               	return	
 12315                           
 12316                           ;term.c: 692: {
 12317                           ;term.c: 694: TermMainSmState = Term_InitState;
 12318  003C' 0E02               	movlw	2
 12319  003E' 0102               	movlb	2	; () banked
 12320  0040' 6F00'              	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12321                           
 12322                           ; BSR set to: 2
 12323                           ;term.c: 695: }
 12324                           ;term.c: 696: break;
 12325  0042' 0012               	return	
 12326  0044'                    
 12327                           ; BSR set to: 2
 12328                           ;term.c: 700: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 12329                           
 12330                           ; BSR set to: 2
 12331  0044' 0E1F               	movlw	31
 12332  0046' 6500'              	cpfsgt	_USBDeviceState& (0+255),b
 12333  0048' 0012               	return	
 12334                           
 12335                           ; BSR set to: 2
 12336  004A' B265               	btfsc	3941,1,c	;volatile
 12337  004C' 0012               	return	
 12338                           
 12339                           ; BSR set to: 2
 12340                           ;term.c: 704: else
 12341                           ;term.c: 705: {
 12342                           ;term.c: 707: TermMainSmState = Term_WelcomeState;
 12343                           
 12344                           ; BSR set to: 2
 12345                           
 12346                           ; BSR set to: 2
 12347                           ;term.c: 701: {
 12348                           ;term.c: 703: }
 12349  004E' 0E03               	movlw	3
 12350  0050' 6F00'              	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12351                           
 12352                           ; BSR set to: 2
 12353                           ;term.c: 708: }
 12354                           ;term.c: 709: break;
 12355  0052' 0012               	return	
 12356  0054'                    
 12357                           ; BSR set to: 2
 12358                           ;term.c: 713: if((cdc_trf_state == 0))
 12359                           
 12360                           ; BSR set to: 2
 12361  0054' 5100'              	movf	_cdc_trf_state& (0+255),w,b
 12362  0056' A4D8               	btfss	status,2,c
 12363  0058' 0012               	return	
 12364                           
 12365                           ; BSR set to: 2
 12366                           ;term.c: 714: {
 12367                           ;term.c: 716: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 12368  005A' 0E00'              	movlw	low _Welcome
 12369  005C' 0100               	movlb	0	; () banked
 12370  005E' 6F00'              	movwf	putUSBUSART@data& (0+255),b
 12371  0060' 0E00'              	movlw	high _Welcome
 12372  0062' 6F00'              	movwf	(putUSBUSART@data+1)& (0+255),b
 12373  0064' 0E88               	movlw	136
 12374  0066' 6F00'              	movwf	putUSBUSART@length& (0+255),b
 12375  0068' EC00' F000'        	call	_putUSBUSART	;wreg free
 12376                           
 12377                           ;term.c: 718: TermMainSmState = Term_InstDescState;
 12378  006C' 0E04               	movlw	4
 12379  006E' 0102               	movlb	2	; () banked
 12380  0070' 6F00'              	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12381                           
 12382                           ; BSR set to: 2
 12383                           ;term.c: 719: }
 12384                           ;term.c: 720: break;
 12385  0072' 0012               	return	
 12386  0074'                    
 12387                           ; BSR set to: 2
 12388                           ;term.c: 724: if((cdc_trf_state == 0))
 12389                           
 12390                           ; BSR set to: 2
 12391  0074' 5100'              	movf	_cdc_trf_state& (0+255),w,b
 12392  0076' A4D8               	btfss	status,2,c
 12393  0078' 0012               	return	
 12394                           
 12395                           ; BSR set to: 2
 12396                           ;term.c: 725: {
 12397                           ;term.c: 727: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 12398  007A' 0E00'              	movlw	low _MsgFormat
 12399  007C' 0100               	movlb	0	; () banked
 12400  007E' 6F00'              	movwf	putUSBUSART@data& (0+255),b
 12401  0080' 0E00'              	movlw	high _MsgFormat
 12402  0082' 6F00'              	movwf	(putUSBUSART@data+1)& (0+255),b
 12403  0084' 0EEB               	movlw	235
 12404  0086' 6F00'              	movwf	putUSBUSART@length& (0+255),b
 12405  0088' EC00' F000'        	call	_putUSBUSART	;wreg free
 12406                           
 12407                           ;term.c: 729: TermMainSmState = Term_FwkVerState;
 12408  008C' 0E05               	movlw	5
 12409  008E' 0102               	movlb	2	; () banked
 12410  0090' 6F00'              	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12411                           
 12412                           ; BSR set to: 2
 12413                           ;term.c: 730: }
 12414                           ;term.c: 731: break;
 12415  0092' 0012               	return	
 12416  0094'                    
 12417                           ; BSR set to: 2
 12418                           ;term.c: 735: if((cdc_trf_state == 0))
 12419                           
 12420                           ; BSR set to: 2
 12421  0094' 5100'              	movf	_cdc_trf_state& (0+255),w,b
 12422  0096' A4D8               	btfss	status,2,c
 12423  0098' 0012               	return	
 12424                           
 12425                           ; BSR set to: 2
 12426                           ;term.c: 736: {
 12427                           ;term.c: 738: memset(Data,0,50);
 12428  009A' 0E00'              	movlw	low Term_MainSm@Data
 12429  009C' 0100               	movlb	0	; () banked
 12430  009E' 6F00'              	movwf	memset@p1& (0+255),b
 12431  00A0' 0E00'              	movlw	high Term_MainSm@Data
 12432  00A2' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 12433  00A4' 0E00               	movlw	0
 12434  00A6' 6F00'              	movwf	(memset@c+1)& (0+255),b
 12435  00A8' 0E00               	movlw	0
 12436  00AA' 6F00'              	movwf	memset@c& (0+255),b
 12437  00AC' 0E00               	movlw	0
 12438  00AE' 6F00'              	movwf	(memset@n+1)& (0+255),b
 12439  00B0' 0E32               	movlw	50
 12440  00B2' 6F00'              	movwf	memset@n& (0+255),b
 12441  00B4' EC00' F000'        	call	_memset	;wreg free
 12442                           
 12443                           ;term.c: 740: utoa(FwkMajorStr,1,10);
 12444  00B8' 0E00'              	movlw	low Term_MainSm@FwkMajorStr
 12445  00BA' 0100               	movlb	0	; () banked
 12446  00BC' 6F00'              	movwf	utoa@buf& (0+255),b
 12447  00BE' 0E00'              	movlw	high Term_MainSm@FwkMajorStr
 12448  00C0' 6F00'              	movwf	(utoa@buf+1)& (0+255),b
 12449  00C2' 0E00               	movlw	0
 12450  00C4' 6F00'              	movwf	(utoa@val+1)& (0+255),b
 12451  00C6' 0E01               	movlw	1
 12452  00C8' 6F00'              	movwf	utoa@val& (0+255),b
 12453  00CA' 0E00               	movlw	0
 12454  00CC' 6F00'              	movwf	(utoa@base+1)& (0+255),b
 12455  00CE' 0E0A               	movlw	10
 12456  00D0' 6F00'              	movwf	utoa@base& (0+255),b
 12457  00D2' EC00' F000'        	call	_utoa	;wreg free
 12458                           
 12459                           ;term.c: 741: utoa(FwkMinorStr,0,10);
 12460  00D6' 0E00'              	movlw	low Term_MainSm@FwkMinorStr
 12461  00D8' 0100               	movlb	0	; () banked
 12462  00DA' 6F00'              	movwf	utoa@buf& (0+255),b
 12463  00DC' 0E00'              	movlw	high Term_MainSm@FwkMinorStr
 12464  00DE' 6F00'              	movwf	(utoa@buf+1)& (0+255),b
 12465  00E0' 0E00               	movlw	0
 12466  00E2' 6F00'              	movwf	(utoa@val+1)& (0+255),b
 12467  00E4' 0E00               	movlw	0
 12468  00E6' 6F00'              	movwf	utoa@val& (0+255),b
 12469  00E8' 0E00               	movlw	0
 12470  00EA' 6F00'              	movwf	(utoa@base+1)& (0+255),b
 12471  00EC' 0E0A               	movlw	10
 12472  00EE' 6F00'              	movwf	utoa@base& (0+255),b
 12473  00F0' EC00' F000'        	call	_utoa	;wreg free
 12474                           
 12475                           ;term.c: 742: utoa(FwkBuildStr,0,10);
 12476  00F4' 0E00'              	movlw	low Term_MainSm@FwkBuildStr
 12477  00F6' 0100               	movlb	0	; () banked
 12478  00F8' 6F00'              	movwf	utoa@buf& (0+255),b
 12479  00FA' 0E00'              	movlw	high Term_MainSm@FwkBuildStr
 12480  00FC' 6F00'              	movwf	(utoa@buf+1)& (0+255),b
 12481  00FE' 0E00               	movlw	0
 12482  0100' 6F00'              	movwf	(utoa@val+1)& (0+255),b
 12483  0102' 0E00               	movlw	0
 12484  0104' 6F00'              	movwf	utoa@val& (0+255),b
 12485  0106' 0E00               	movlw	0
 12486  0108' 6F00'              	movwf	(utoa@base+1)& (0+255),b
 12487  010A' 0E0A               	movlw	10
 12488  010C' 6F00'              	movwf	utoa@base& (0+255),b
 12489  010E' EC00' F000'        	call	_utoa	;wreg free
 12490                           
 12491                           ;term.c: 743: strcpy(Data,"Framework Version: ");
 12492  0112' 0E00'              	movlw	low Term_MainSm@Data
 12493  0114' 0100               	movlb	0	; () banked
 12494  0116' 6F00'              	movwf	strcpy@to& (0+255),b
 12495  0118' 0E00'              	movlw	high Term_MainSm@Data
 12496  011A' 6F00'              	movwf	(strcpy@to+1)& (0+255),b
 12497  011C' 0E00'              	movlw	low STR_58
 12498  011E' 6F00'              	movwf	strcpy@from& (0+255),b
 12499  0120' 0E00'              	movlw	high STR_58
 12500  0122' 6F00'              	movwf	(strcpy@from+1)& (0+255),b
 12501  0124' EC00' F000'        	call	_strcpy	;wreg free
 12502                           
 12503                           ;term.c: 744: strcat(Data,FwkMajorStr);
 12504  0128' 0E00'              	movlw	low Term_MainSm@Data
 12505  012A' 0100               	movlb	0	; () banked
 12506  012C' 6F00'              	movwf	strcat@to& (0+255),b
 12507  012E' 0E00'              	movlw	high Term_MainSm@Data
 12508  0130' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12509  0132' 0E00'              	movlw	low Term_MainSm@FwkMajorStr
 12510  0134' 6F00'              	movwf	strcat@from& (0+255),b
 12511  0136' 0E00'              	movlw	high Term_MainSm@FwkMajorStr
 12512  0138' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12513  013A' 5100'              	movf	strcat@from& (0+255),w,b
 12514  013C' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12515  013E' A4D8               	btfss	status,2,c
 12516  0140' 0E20               	movlw	32
 12517  0142' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12518  0144' EC00' F000'        	call	_strcat	;wreg free
 12519                           
 12520                           ;term.c: 745: strcat(Data,".");
 12521  0148' 0E00'              	movlw	low Term_MainSm@Data
 12522  014A' 0100               	movlb	0	; () banked
 12523  014C' 6F00'              	movwf	strcat@to& (0+255),b
 12524  014E' 0E00'              	movlw	high Term_MainSm@Data
 12525  0150' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12526  0152' 0E00'              	movlw	low STR_59
 12527  0154' 6F00'              	movwf	strcat@from& (0+255),b
 12528  0156' 0E00'              	movlw	high STR_59
 12529  0158' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12530  015A' 5100'              	movf	strcat@from& (0+255),w,b
 12531  015C' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12532  015E' A4D8               	btfss	status,2,c
 12533  0160' 0E00'              	movlw	low (__mediumconst shr (0+16))
 12534  0162' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12535  0164' EC00' F000'        	call	_strcat	;wreg free
 12536                           
 12537                           ;term.c: 746: strcat(Data,FwkMinorStr);
 12538  0168' 0E00'              	movlw	low Term_MainSm@Data
 12539  016A' 0100               	movlb	0	; () banked
 12540  016C' 6F00'              	movwf	strcat@to& (0+255),b
 12541  016E' 0E00'              	movlw	high Term_MainSm@Data
 12542  0170' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12543  0172' 0E00'              	movlw	low Term_MainSm@FwkMinorStr
 12544  0174' 6F00'              	movwf	strcat@from& (0+255),b
 12545  0176' 0E00'              	movlw	high Term_MainSm@FwkMinorStr
 12546  0178' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12547  017A' 5100'              	movf	strcat@from& (0+255),w,b
 12548  017C' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12549  017E' A4D8               	btfss	status,2,c
 12550  0180' 0E20               	movlw	32
 12551  0182' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12552  0184' EC00' F000'        	call	_strcat	;wreg free
 12553                           
 12554                           ;term.c: 747: strcat(Data,".");
 12555  0188' 0E00'              	movlw	low Term_MainSm@Data
 12556  018A' 0100               	movlb	0	; () banked
 12557  018C' 6F00'              	movwf	strcat@to& (0+255),b
 12558  018E' 0E00'              	movlw	high Term_MainSm@Data
 12559  0190' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12560  0192' 0E00'              	movlw	low STR_59
 12561  0194' 6F00'              	movwf	strcat@from& (0+255),b
 12562  0196' 0E00'              	movlw	high STR_59
 12563  0198' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12564  019A' 5100'              	movf	strcat@from& (0+255),w,b
 12565  019C' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12566  019E' A4D8               	btfss	status,2,c
 12567  01A0' 0E00'              	movlw	low (__mediumconst shr (0+16))
 12568  01A2' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12569  01A4' EC00' F000'        	call	_strcat	;wreg free
 12570                           
 12571                           ;term.c: 748: strcat(Data,FwkBuildStr);
 12572  01A8' 0E00'              	movlw	low Term_MainSm@Data
 12573  01AA' 0100               	movlb	0	; () banked
 12574  01AC' 6F00'              	movwf	strcat@to& (0+255),b
 12575  01AE' 0E00'              	movlw	high Term_MainSm@Data
 12576  01B0' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12577  01B2' 0E00'              	movlw	low Term_MainSm@FwkBuildStr
 12578  01B4' 6F00'              	movwf	strcat@from& (0+255),b
 12579  01B6' 0E00'              	movlw	high Term_MainSm@FwkBuildStr
 12580  01B8' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12581  01BA' 5100'              	movf	strcat@from& (0+255),w,b
 12582  01BC' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12583  01BE' A4D8               	btfss	status,2,c
 12584  01C0' 0E20               	movlw	32
 12585  01C2' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12586  01C4' EC00' F000'        	call	_strcat	;wreg free
 12587                           
 12588                           ;term.c: 749: strcat(Data,"\r\n");
 12589  01C8' 0E00'              	movlw	low Term_MainSm@Data
 12590  01CA' 0100               	movlb	0	; () banked
 12591  01CC' 6F00'              	movwf	strcat@to& (0+255),b
 12592  01CE' 0E00'              	movlw	high Term_MainSm@Data
 12593  01D0' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12594  01D2' 0E00'              	movlw	low (STR_31+8)
 12595  01D4' 6F00'              	movwf	strcat@from& (0+255),b
 12596  01D6' 0E00'              	movlw	high (STR_31+8)
 12597  01D8' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12598  01DA' 5100'              	movf	strcat@from& (0+255),w,b
 12599  01DC' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12600  01DE' A4D8               	btfss	status,2,c
 12601  01E0' 0E00'              	movlw	low (__mediumconst shr (0+16))
 12602  01E2' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12603  01E4' EC00' F000'        	call	_strcat	;wreg free
 12604                           
 12605                           ;term.c: 751: putUSBUSART((void*)Data,strlen(Data));
 12606  01E8' 0E00'              	movlw	low Term_MainSm@Data
 12607  01EA' 0100               	movlb	0	; () banked
 12608  01EC' 6F00'              	movwf	putUSBUSART@data& (0+255),b
 12609  01EE' 0E00'              	movlw	high Term_MainSm@Data
 12610  01F0' 6F00'              	movwf	(putUSBUSART@data+1)& (0+255),b
 12611  01F2' 0E00'              	movlw	low Term_MainSm@Data
 12612  01F4' 6F00'              	movwf	strlen@s& (0+255),b
 12613  01F6' 0E00'              	movlw	high Term_MainSm@Data
 12614  01F8' 6F00'              	movwf	(strlen@s+1)& (0+255),b
 12615  01FA' EC00' F000'        	call	_strlen	;wreg free
 12616  01FE' 0100               	movlb	0	; () banked
 12617  0200' 5100'              	movf	?_strlen& (0+255),w,b
 12618  0202' 6F00'              	movwf	putUSBUSART@length& (0+255),b
 12619  0204' EC00' F000'        	call	_putUSBUSART	;wreg free
 12620                           
 12621                           ;term.c: 753: TermMainSmState = Term_FwkBuildDateState;
 12622  0208' 0E06               	movlw	6
 12623  020A' 0102               	movlb	2	; () banked
 12624  020C' 6F00'              	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12625                           
 12626                           ; BSR set to: 2
 12627                           ;term.c: 754: }
 12628                           ;term.c: 755: break;
 12629  020E' 0012               	return	
 12630  0210'                    
 12631                           ; BSR set to: 2
 12632                           ;term.c: 759: if((cdc_trf_state == 0))
 12633                           
 12634                           ; BSR set to: 2
 12635  0210' 5100'              	movf	_cdc_trf_state& (0+255),w,b
 12636  0212' A4D8               	btfss	status,2,c
 12637  0214' 0012               	return	
 12638                           
 12639                           ; BSR set to: 2
 12640                           ;term.c: 760: {
 12641                           ;term.c: 762: memset(Data,0,50);
 12642  0216' 0E00'              	movlw	low Term_MainSm@Data
 12643  0218' 0100               	movlb	0	; () banked
 12644  021A' 6F00'              	movwf	memset@p1& (0+255),b
 12645  021C' 0E00'              	movlw	high Term_MainSm@Data
 12646  021E' 6F00'              	movwf	(memset@p1+1)& (0+255),b
 12647  0220' 0E00               	movlw	0
 12648  0222' 6F00'              	movwf	(memset@c+1)& (0+255),b
 12649  0224' 0E00               	movlw	0
 12650  0226' 6F00'              	movwf	memset@c& (0+255),b
 12651  0228' 0E00               	movlw	0
 12652  022A' 6F00'              	movwf	(memset@n+1)& (0+255),b
 12653  022C' 0E32               	movlw	50
 12654  022E' 6F00'              	movwf	memset@n& (0+255),b
 12655  0230' EC00' F000'        	call	_memset	;wreg free
 12656                           
 12657                           ;term.c: 764: utoa(FwkBuildDayStr,07,10);
 12658  0234' 0E00'              	movlw	low Term_MainSm@FwkBuildDayStr
 12659  0236' 0100               	movlb	0	; () banked
 12660  0238' 6F00'              	movwf	utoa@buf& (0+255),b
 12661  023A' 0E00'              	movlw	high Term_MainSm@FwkBuildDayStr
 12662  023C' 6F00'              	movwf	(utoa@buf+1)& (0+255),b
 12663  023E' 0E00               	movlw	0
 12664  0240' 6F00'              	movwf	(utoa@val+1)& (0+255),b
 12665  0242' 0E07               	movlw	7
 12666  0244' 6F00'              	movwf	utoa@val& (0+255),b
 12667  0246' 0E00               	movlw	0
 12668  0248' 6F00'              	movwf	(utoa@base+1)& (0+255),b
 12669  024A' 0E0A               	movlw	10
 12670  024C' 6F00'              	movwf	utoa@base& (0+255),b
 12671  024E' EC00' F000'        	call	_utoa	;wreg free
 12672                           
 12673                           ;term.c: 765: utoa(FwkBuildMonthStr,10,10);
 12674  0252' 0E00'              	movlw	low Term_MainSm@FwkBuildMonthStr
 12675  0254' 0100               	movlb	0	; () banked
 12676  0256' 6F00'              	movwf	utoa@buf& (0+255),b
 12677  0258' 0E00'              	movlw	high Term_MainSm@FwkBuildMonthStr
 12678  025A' 6F00'              	movwf	(utoa@buf+1)& (0+255),b
 12679  025C' 0E00               	movlw	0
 12680  025E' 6F00'              	movwf	(utoa@val+1)& (0+255),b
 12681  0260' 0E0A               	movlw	10
 12682  0262' 6F00'              	movwf	utoa@val& (0+255),b
 12683  0264' 0E00               	movlw	0
 12684  0266' 6F00'              	movwf	(utoa@base+1)& (0+255),b
 12685  0268' 0E0A               	movlw	10
 12686  026A' 6F00'              	movwf	utoa@base& (0+255),b
 12687  026C' EC00' F000'        	call	_utoa	;wreg free
 12688                           
 12689                           ;term.c: 766: utoa(FwkBuildYearStr,18,10);
 12690  0270' 0E00'              	movlw	low Term_MainSm@FwkBuildYearStr
 12691  0272' 0100               	movlb	0	; () banked
 12692  0274' 6F00'              	movwf	utoa@buf& (0+255),b
 12693  0276' 0E00'              	movlw	high Term_MainSm@FwkBuildYearStr
 12694  0278' 6F00'              	movwf	(utoa@buf+1)& (0+255),b
 12695  027A' 0E00               	movlw	0
 12696  027C' 6F00'              	movwf	(utoa@val+1)& (0+255),b
 12697  027E' 0E12               	movlw	18
 12698  0280' 6F00'              	movwf	utoa@val& (0+255),b
 12699  0282' 0E00               	movlw	0
 12700  0284' 6F00'              	movwf	(utoa@base+1)& (0+255),b
 12701  0286' 0E0A               	movlw	10
 12702  0288' 6F00'              	movwf	utoa@base& (0+255),b
 12703  028A' EC00' F000'        	call	_utoa	;wreg free
 12704                           
 12705                           ;term.c: 767: strcpy(Data,"Build Date (d-m-y): ");
 12706  028E' 0E00'              	movlw	low Term_MainSm@Data
 12707  0290' 0100               	movlb	0	; () banked
 12708  0292' 6F00'              	movwf	strcpy@to& (0+255),b
 12709  0294' 0E00'              	movlw	high Term_MainSm@Data
 12710  0296' 6F00'              	movwf	(strcpy@to+1)& (0+255),b
 12711  0298' 0E00'              	movlw	low STR_62
 12712  029A' 6F00'              	movwf	strcpy@from& (0+255),b
 12713  029C' 0E00'              	movlw	high STR_62
 12714  029E' 6F00'              	movwf	(strcpy@from+1)& (0+255),b
 12715  02A0' EC00' F000'        	call	_strcpy	;wreg free
 12716                           
 12717                           ;term.c: 768: strcat(Data,FwkBuildDayStr);
 12718  02A4' 0E00'              	movlw	low Term_MainSm@Data
 12719  02A6' 0100               	movlb	0	; () banked
 12720  02A8' 6F00'              	movwf	strcat@to& (0+255),b
 12721  02AA' 0E00'              	movlw	high Term_MainSm@Data
 12722  02AC' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12723  02AE' 0E00'              	movlw	low Term_MainSm@FwkBuildDayStr
 12724  02B0' 6F00'              	movwf	strcat@from& (0+255),b
 12725  02B2' 0E00'              	movlw	high Term_MainSm@FwkBuildDayStr
 12726  02B4' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12727  02B6' 5100'              	movf	strcat@from& (0+255),w,b
 12728  02B8' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12729  02BA' A4D8               	btfss	status,2,c
 12730  02BC' 0E20               	movlw	32
 12731  02BE' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12732  02C0' EC00' F000'        	call	_strcat	;wreg free
 12733                           
 12734                           ;term.c: 769: strcat(Data,"-");
 12735  02C4' 0E00'              	movlw	low Term_MainSm@Data
 12736  02C6' 0100               	movlb	0	; () banked
 12737  02C8' 6F00'              	movwf	strcat@to& (0+255),b
 12738  02CA' 0E00'              	movlw	high Term_MainSm@Data
 12739  02CC' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12740  02CE' 0E00'              	movlw	low STR_63
 12741  02D0' 6F00'              	movwf	strcat@from& (0+255),b
 12742  02D2' 0E00'              	movlw	high STR_63
 12743  02D4' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12744  02D6' 5100'              	movf	strcat@from& (0+255),w,b
 12745  02D8' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12746  02DA' A4D8               	btfss	status,2,c
 12747  02DC' 0E00'              	movlw	low (__mediumconst shr (0+16))
 12748  02DE' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12749  02E0' EC00' F000'        	call	_strcat	;wreg free
 12750                           
 12751                           ;term.c: 770: strcat(Data,FwkBuildMonthStr);
 12752  02E4' 0E00'              	movlw	low Term_MainSm@Data
 12753  02E6' 0100               	movlb	0	; () banked
 12754  02E8' 6F00'              	movwf	strcat@to& (0+255),b
 12755  02EA' 0E00'              	movlw	high Term_MainSm@Data
 12756  02EC' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12757  02EE' 0E00'              	movlw	low Term_MainSm@FwkBuildMonthStr
 12758  02F0' 6F00'              	movwf	strcat@from& (0+255),b
 12759  02F2' 0E00'              	movlw	high Term_MainSm@FwkBuildMonthStr
 12760  02F4' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12761  02F6' 5100'              	movf	strcat@from& (0+255),w,b
 12762  02F8' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12763  02FA' A4D8               	btfss	status,2,c
 12764  02FC' 0E20               	movlw	32
 12765  02FE' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12766  0300' EC00' F000'        	call	_strcat	;wreg free
 12767                           
 12768                           ;term.c: 771: strcat(Data,"-");
 12769  0304' 0E00'              	movlw	low Term_MainSm@Data
 12770  0306' 0100               	movlb	0	; () banked
 12771  0308' 6F00'              	movwf	strcat@to& (0+255),b
 12772  030A' 0E00'              	movlw	high Term_MainSm@Data
 12773  030C' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12774  030E' 0E00'              	movlw	low STR_63
 12775  0310' 6F00'              	movwf	strcat@from& (0+255),b
 12776  0312' 0E00'              	movlw	high STR_63
 12777  0314' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12778  0316' 5100'              	movf	strcat@from& (0+255),w,b
 12779  0318' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12780  031A' A4D8               	btfss	status,2,c
 12781  031C' 0E00'              	movlw	low (__mediumconst shr (0+16))
 12782  031E' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12783  0320' EC00' F000'        	call	_strcat	;wreg free
 12784                           
 12785                           ;term.c: 772: strcat(Data,FwkBuildYearStr);
 12786  0324' 0E00'              	movlw	low Term_MainSm@Data
 12787  0326' 0100               	movlb	0	; () banked
 12788  0328' 6F00'              	movwf	strcat@to& (0+255),b
 12789  032A' 0E00'              	movlw	high Term_MainSm@Data
 12790  032C' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12791  032E' 0E00'              	movlw	low Term_MainSm@FwkBuildYearStr
 12792  0330' 6F00'              	movwf	strcat@from& (0+255),b
 12793  0332' 0E00'              	movlw	high Term_MainSm@FwkBuildYearStr
 12794  0334' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12795  0336' 5100'              	movf	strcat@from& (0+255),w,b
 12796  0338' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12797  033A' A4D8               	btfss	status,2,c
 12798  033C' 0E20               	movlw	32
 12799  033E' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12800  0340' EC00' F000'        	call	_strcat	;wreg free
 12801                           
 12802                           ;term.c: 773: strcat(Data,"\r\n");
 12803  0344' 0E00'              	movlw	low Term_MainSm@Data
 12804  0346' 0100               	movlb	0	; () banked
 12805  0348' 6F00'              	movwf	strcat@to& (0+255),b
 12806  034A' 0E00'              	movlw	high Term_MainSm@Data
 12807  034C' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 12808  034E' 0E00'              	movlw	low (STR_31+8)
 12809  0350' 6F00'              	movwf	strcat@from& (0+255),b
 12810  0352' 0E00'              	movlw	high (STR_31+8)
 12811  0354' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 12812  0356' 5100'              	movf	strcat@from& (0+255),w,b
 12813  0358' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 12814  035A' A4D8               	btfss	status,2,c
 12815  035C' 0E00'              	movlw	low (__mediumconst shr (0+16))
 12816  035E' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 12817  0360' EC00' F000'        	call	_strcat	;wreg free
 12818                           
 12819                           ;term.c: 775: putUSBUSART((void*)Data,strlen(Data));
 12820  0364' 0E00'              	movlw	low Term_MainSm@Data
 12821  0366' 0100               	movlb	0	; () banked
 12822  0368' 6F00'              	movwf	putUSBUSART@data& (0+255),b
 12823  036A' 0E00'              	movlw	high Term_MainSm@Data
 12824  036C' 6F00'              	movwf	(putUSBUSART@data+1)& (0+255),b
 12825  036E' 0E00'              	movlw	low Term_MainSm@Data
 12826  0370' 6F00'              	movwf	strlen@s& (0+255),b
 12827  0372' 0E00'              	movlw	high Term_MainSm@Data
 12828  0374' 6F00'              	movwf	(strlen@s+1)& (0+255),b
 12829  0376' EC00' F000'        	call	_strlen	;wreg free
 12830  037A' 0100               	movlb	0	; () banked
 12831  037C' 5100'              	movf	?_strlen& (0+255),w,b
 12832  037E' 6F00'              	movwf	putUSBUSART@length& (0+255),b
 12833  0380' EC00' F000'        	call	_putUSBUSART	;wreg free
 12834                           
 12835                           ;term.c: 777: TermMainSmState = Term_SysInitState;
 12836  0384' 0E07               	movlw	7
 12837  0386' 0102               	movlb	2	; () banked
 12838  0388' 6F00'              	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12839                           
 12840                           ; BSR set to: 2
 12841                           ;term.c: 778: }
 12842                           ;term.c: 779: break;
 12843  038A' 0012               	return	
 12844  038C'                    
 12845                           ; BSR set to: 2
 12846                           ;term.c: 783: if((cdc_trf_state == 0))
 12847                           
 12848                           ; BSR set to: 2
 12849  038C' 5100'              	movf	_cdc_trf_state& (0+255),w,b
 12850  038E' A4D8               	btfss	status,2,c
 12851  0390' 0012               	return	
 12852                           
 12853                           ; BSR set to: 2
 12854                           ;term.c: 784: {
 12855                           ;term.c: 786: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 12856  0392' 0E00'              	movlw	low _MsgReady
 12857  0394' 0100               	movlb	0	; () banked
 12858  0396' 6F00'              	movwf	putUSBUSART@data& (0+255),b
 12859  0398' 0E00'              	movlw	high _MsgReady
 12860  039A' 6F00'              	movwf	(putUSBUSART@data+1)& (0+255),b
 12861  039C' 0E16               	movlw	22
 12862  039E' 6F00'              	movwf	putUSBUSART@length& (0+255),b
 12863  03A0' EC00' F000'        	call	_putUSBUSART	;wreg free
 12864                           
 12865                           ;term.c: 788: TermMainSmState = Term_FinalState;
 12866  03A4' 0E08               	movlw	8
 12867  03A6' 0102               	movlb	2	; () banked
 12868  03A8' 6F00'              	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12869                           
 12870                           ; BSR set to: 2
 12871                           ;term.c: 789: }
 12872                           ;term.c: 790: break;
 12873  03AA' 0012               	return	
 12874  03AC'                    
 12875                           ; BSR set to: 2
 12876                           ;term.c: 794: Terminal();
 12877                           
 12878                           ; BSR set to: 2
 12879  03AC' EC00' F000'        	call	_Terminal	;wreg free
 12880                           
 12881                           ;term.c: 799: }
 12882                           
 12883                           ;term.c: 798: break;
 12884                           
 12885                           ;term.c: 797: default:
 12886                           
 12887                           ;term.c: 795: break;
 12888  03B0' 0012               	return	
 12889  03B2'                    l2151:
 12890  03B2' 0102               	movlb	2	; () banked
 12891  03B4' 5100'              	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 12892                           
 12893                           ; Switch size 1, requested type "space"
 12894                           ; Number of cases is 9, Range of values is 0 to 8
 12895                           ; switch strategies available:
 12896                           ; Name         Instructions Cycles
 12897                           ; simple_byte           28    15 (average)
 12898                           ;	Chosen strategy is simple_byte
 12899  03B6' 0A00               	xorlw	0	; case 0
 12900  03B8' B4D8               	btfsc	status,2,c
 12901  03BA' D623               	goto	l2152
 12902  03BC' 0A01               	xorlw	1	; case 1
 12903  03BE' B4D8               	btfsc	status,2,c
 12904  03C0' D633               	goto	l2154
 12905  03C2' 0A03               	xorlw	3	; case 2
 12906  03C4' B4D8               	btfsc	status,2,c
 12907  03C6' D63E               	goto	l2156
 12908  03C8' 0A01               	xorlw	1	; case 3
 12909  03CA' B4D8               	btfsc	status,2,c
 12910  03CC' D643               	goto	l2161
 12911  03CE' 0A07               	xorlw	7	; case 4
 12912  03D0' B4D8               	btfsc	status,2,c
 12913  03D2' D650               	goto	l2163
 12914  03D4' 0A01               	xorlw	1	; case 5
 12915  03D6' B4D8               	btfsc	status,2,c
 12916  03D8' D65D               	goto	l2165
 12917  03DA' 0A03               	xorlw	3	; case 6
 12918  03DC' B4D8               	btfsc	status,2,c
 12919  03DE' D718               	goto	l2167
 12920  03E0' 0A01               	xorlw	1	; case 7
 12921  03E2' B4D8               	btfsc	status,2,c
 12922  03E4' D7D3               	goto	l2169
 12923  03E6' 0A0F               	xorlw	15	; case 8
 12924  03E8' A4D8               	btfss	status,2,c
 12925  03EA' 0012               	return	
 12926  03EC' D7DF               	goto	l2171
 12927  03EE'                    __end_of_Term_MainSm:
 12928                           	opt stack 0
 12929                           tosu	equ	0xFFF
 12930                           tosh	equ	0xFFE
 12931                           tosl	equ	0xFFD
 12932                           pclath	equ	0xFFA
 12933                           tblptru	equ	0xFF8
 12934                           tblptrh	equ	0xFF7
 12935                           tblptrl	equ	0xFF6
 12936                           tablat	equ	0xFF5
 12937                           prodh	equ	0xFF4
 12938                           prodl	equ	0xFF3
 12939                           intcon	equ	0xFF2
 12940                           intcon2	equ	0xFF1
 12941                           intcon3	equ	0xFF0
 12942                           indf0	equ	0xFEF
 12943                           postinc0	equ	0xFEE
 12944                           plusw0	equ	0xFEB
 12945                           fsr0h	equ	0xFEA
 12946                           fsr0l	equ	0xFE9
 12947                           wreg	equ	0xFE8
 12948                           indf1	equ	0xFE7
 12949                           postinc1	equ	0xFE6
 12950                           postdec1	equ	0xFE5
 12951                           fsr1h	equ	0xFE2
 12952                           fsr1l	equ	0xFE1
 12953                           indf2	equ	0xFDF
 12954                           postinc2	equ	0xFDE
 12955                           postdec2	equ	0xFDD
 12956                           plusw2	equ	0xFDB
 12957                           fsr2h	equ	0xFDA
 12958                           fsr2l	equ	0xFD9
 12959                           status	equ	0xFD8
 12960                           
 12961 ;; *************** function _memset *****************
 12962 ;; Defined at:
 12963 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 12964 ;; Parameters:    Size  Location     Type
 12965 ;;  p1              2    0[BANK0 ] PTR void 
 12966 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12967 ;;  c               2    2[BANK0 ] int 
 12968 ;;  n               2    4[BANK0 ] unsigned int 
 12969 ;; Auto vars:     Size  Location     Type
 12970 ;;  p               2    6[BANK0 ] PTR unsigned char 
 12971 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12972 ;; Return value:  Size  Location     Type
 12973 ;;                  2    0[BANK0 ] PTR void 
 12974 ;; Registers used:
 12975 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12976 ;; Tracked objects:
 12977 ;;		On entry : 0/0
 12978 ;;		On exit  : 0/0
 12979 ;;		Unchanged: 0/0
 12980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12981 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12982 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12984 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12985 ;;Total ram usage:        8 bytes
 12986 ;; Hardware stack levels used:    1
 12987 ;; Hardware stack levels required when called:   11
 12988 ;; This function calls:
 12989 ;;		Nothing
 12990 ;; This function is called by:
 12991 ;;		_USBDeviceInit
 12992 ;;		_USBStdSetCfgHandler
 12993 ;;		_Term_MainSm
 12994 ;; This function uses a non-reentrant model
 12995 ;;
 12996                           
 12997                           	psect	text53
 12998  0000'                    __ptext53:
 12999                           	opt stack 0
 13000  0000'                    _memset:
 13001                           	opt stack 14
 13002                           
 13003                           ;incstack = 0
 13004  0000' C000' F006'        	movff	memset@p1,memset@p
 13005  0004' C001' F007'        	movff	memset@p1+1,memset@p+1
 13006  0008' D009               	goto	l2649
 13007  000A'                    l6645:
 13008  000A' C006' FFD9         	movff	memset@p,fsr2l
 13009  000E' C007' FFDA         	movff	memset@p+1,fsr2h
 13010  0012' C002' FFDF         	movff	memset@c,indf2
 13011  0016' 0100               	movlb	0	; () banked
 13012  0018' 4B00'              	infsnz	memset@p& (0+255),f,b
 13013  001A' 2B00'              	incf	(memset@p+1)& (0+255),f,b
 13014  001C'                    l2649:
 13015                           
 13016                           ; BSR set to: 0
 13017  001C' 0100               	movlb	0	; () banked
 13018  001E' 0700'              	decf	memset@n& (0+255),f,b
 13019  0020' A0D8               	btfss	status,0,c
 13020  0022' 0700'              	decf	(memset@n+1)& (0+255),f,b
 13021  0024' 2900'              	incf	memset@n& (0+255),w,b
 13022  0026' E1F1               	bnz	l6645
 13023  0028' 2900'              	incf	(memset@n+1)& (0+255),w,b
 13024  002A' B4D8               	btfsc	status,2,c
 13025  002C' 0012               	return	
 13026  002E' D7ED               	goto	l2650
 13027  0030'                    __end_of_memset:
 13028                           	opt stack 0
 13029                           tosu	equ	0xFFF
 13030                           tosh	equ	0xFFE
 13031                           tosl	equ	0xFFD
 13032                           pclath	equ	0xFFA
 13033                           tblptru	equ	0xFF8
 13034                           tblptrh	equ	0xFF7
 13035                           tblptrl	equ	0xFF6
 13036                           tablat	equ	0xFF5
 13037                           prodh	equ	0xFF4
 13038                           prodl	equ	0xFF3
 13039                           intcon	equ	0xFF2
 13040                           intcon2	equ	0xFF1
 13041                           intcon3	equ	0xFF0
 13042                           indf0	equ	0xFEF
 13043                           postinc0	equ	0xFEE
 13044                           plusw0	equ	0xFEB
 13045                           fsr0h	equ	0xFEA
 13046                           fsr0l	equ	0xFE9
 13047                           wreg	equ	0xFE8
 13048                           indf1	equ	0xFE7
 13049                           postinc1	equ	0xFE6
 13050                           postdec1	equ	0xFE5
 13051                           fsr1h	equ	0xFE2
 13052                           fsr1l	equ	0xFE1
 13053                           indf2	equ	0xFDF
 13054                           postinc2	equ	0xFDE
 13055                           postdec2	equ	0xFDD
 13056                           plusw2	equ	0xFDB
 13057                           fsr2h	equ	0xFDA
 13058                           fsr2l	equ	0xFD9
 13059                           status	equ	0xFD8
 13060                           
 13061 ;; *************** function _Terminal *****************
 13062 ;; Defined at:
 13063 ;;		line 417 in file "../Source/c/03_Sml/02_Ssl/term.c"
 13064 ;; Parameters:    Size  Location     Type
 13065 ;;		None
 13066 ;; Auto vars:     Size  Location     Type
 13067 ;;  UsbRxBuffer   200    0[BANK2 ] unsigned char [200]
 13068 ;;  UsbTxBuffer   200    0[BANK1 ] unsigned char [200]
 13069 ;;  TermTxBuffer   50   30[BANK0 ] unsigned char [50]
 13070 ;;  Index           1   81[BANK0 ] unsigned char 
 13071 ;;  ReceivedByte    1   80[BANK0 ] unsigned char 
 13072 ;; Return value:  Size  Location     Type
 13073 ;;                  1    wreg      void 
 13074 ;; Registers used:
 13075 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13076 ;; Tracked objects:
 13077 ;;		On entry : 0/0
 13078 ;;		On exit  : 0/0
 13079 ;;		Unchanged: 0/0
 13080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13082 ;;      Locals:         0      52     200     200       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13083 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13084 ;;      Totals:         0      54     200     200       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13085 ;;Total ram usage:      454 bytes
 13086 ;; Hardware stack levels used:    1
 13087 ;; Hardware stack levels required when called:   14
 13088 ;; This function calls:
 13089 ;;		_I2cSlv_I2cReadMsgSts
 13090 ;;		_I2cSlv_ReceiveI2cMsg
 13091 ;;		_I2cSlv_SendI2cMsg
 13092 ;;		_atoi
 13093 ;;		_getsUSBUSART
 13094 ;;		_itoa
 13095 ;;		_putUSBUSART
 13096 ;;		_strtol
 13097 ;; This function is called by:
 13098 ;;		_Term_MainSm
 13099 ;; This function uses a non-reentrant model
 13100 ;;
 13101                           
 13102                           	psect	text54
 13103  0000'                    __ptext54:
 13104                           	opt stack 0
 13105  0000'                    _Terminal:
 13106                           	opt stack 12
 13107                           
 13108                           ;term.c: 419: static TermStateType TermState = Term_GetData;
 13109                           ;term.c: 420: UINT8 UsbRxBuffer[200u];
 13110                           ;term.c: 421: UINT8 UsbTxBuffer[200u];
 13111                           ;term.c: 422: UINT8 TermTxBuffer[50u];
 13112                           ;term.c: 423: static UINT8 TermRxBuffer[50u];
 13113                           ;term.c: 424: UINT8 Index;
 13114                           ;term.c: 425: static UINT8 Len[4];
 13115                           ;term.c: 426: static UINT8 PackageLen;
 13116                           ;term.c: 427: static UINT8 Addr[4];
 13117                           ;term.c: 428: static UINT8 SlaveAddr;
 13118                           ;term.c: 429: static PayloadType Payload[20u];
 13119                           ;term.c: 430: UINT8 ReceivedBytes = 0;
 13120                           
 13121                           ; BSR set to: 0
 13122                           ;incstack = 0
 13123  0000' 0E00               	movlw	0
 13124  0002' 0100               	movlb	0	; () banked
 13125  0004' 6F00'              	movwf	Terminal@ReceivedBytes& (0+255),b
 13126                           
 13127                           ; BSR set to: 0
 13128                           ;term.c: 432: static UINT8 FormatOption = 0u;
 13129                           ;term.c: 433: static UINT8 EchoOption = 1u;
 13130                           ;term.c: 436: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 13131  0006' 0E1F               	movlw	31
 13132  0008' 0102               	movlb	2	; () banked
 13133  000A' 6500'              	cpfsgt	_USBDeviceState& (0+255),b
 13134  000C' 0012               	return	
 13135                           
 13136                           ; BSR set to: 2
 13137  000E' B265               	btfsc	3941,1,c	;volatile
 13138  0010' 0012               	return	
 13139  0012' D1FA               	goto	l2101
 13140  0014'                    
 13141                           ; BSR set to: 2
 13142                           ;term.c: 443: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 13143                           
 13144                           ; BSR set to: 2
 13145  0014' 0E00'              	movlw	low Terminal@UsbRxBuffer
 13146  0016' 0100               	movlb	0	; () banked
 13147  0018' 6F00'              	movwf	getsUSBUSART@buffer& (0+255),b
 13148  001A' 0E00'              	movlw	high Terminal@UsbRxBuffer
 13149  001C' 6F00'              	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 13150  001E' 0EC8               	movlw	200
 13151  0020' 6F00'              	movwf	getsUSBUSART@len& (0+255),b
 13152  0022' EC00' F000'        	call	_getsUSBUSART	;wreg free
 13153  0026' 0100               	movlb	0	; () banked
 13154  0028' 6F00'              	movwf	Terminal@ReceivedBytes& (0+255),b
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;term.c: 446: if (ReceivedBytes > 0)
 13158  002A' 5100'              	movf	Terminal@ReceivedBytes& (0+255),w,b
 13159  002C' B4D8               	btfsc	status,2,c
 13160  002E' 0012               	return	
 13161                           
 13162                           ; BSR set to: 0
 13163                           ;term.c: 447: {
 13164                           ;term.c: 449: if (EchoOption == 1u)
 13165  0030' 0102               	movlb	2	; () banked
 13166  0032' 0500'              	decf	Terminal@EchoOption& (0+255),w,b
 13167  0034' A4D8               	btfss	status,2,c
 13168  0036' D026               	goto	l2105
 13169                           
 13170                           ; BSR set to: 2
 13171                           ;term.c: 450: {
 13172                           ;term.c: 452: if((cdc_trf_state == 0))
 13173  0038' 5100'              	movf	_cdc_trf_state& (0+255),w,b
 13174  003A' A4D8               	btfss	status,2,c
 13175  003C' D023               	goto	l2105
 13176                           
 13177                           ; BSR set to: 2
 13178                           ;term.c: 453: {
 13179                           ;term.c: 454: UsbRxBuffer[ReceivedBytes] = '\r';
 13180  003E' 0100               	movlb	0	; () banked
 13181  0040' 5100'              	movf	Terminal@ReceivedBytes& (0+255),w,b
 13182  0042' 0D01               	mullw	1
 13183  0044' 0E00'              	movlw	low Terminal@UsbRxBuffer
 13184  0046' 24F3               	addwf	prodl,w,c
 13185  0048' 6ED9               	movwf	fsr2l,c
 13186  004A' 0E00'              	movlw	high Terminal@UsbRxBuffer
 13187  004C' 20F4               	addwfc	prodh,w,c
 13188  004E' 6EDA               	movwf	fsr2h,c
 13189  0050' 0E0D               	movlw	13
 13190  0052' 6EDF               	movwf	indf2,c
 13191                           
 13192                           ; BSR set to: 0
 13193                           ;term.c: 455: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 13194  0054' 5100'              	movf	Terminal@ReceivedBytes& (0+255),w,b
 13195  0056' 6F00'              	movwf	??_Terminal& (0+255),b
 13196  0058' 6B00'              	clrf	(??_Terminal+1)& (0+255),b
 13197  005A' 0E01               	movlw	1
 13198  005C' 2700'              	addwf	??_Terminal& (0+255),f,b
 13199  005E' 0E00               	movlw	0
 13200  0060' 2300'              	addwfc	(??_Terminal+1)& (0+255),f,b
 13201  0062' 0E00'              	movlw	low Terminal@UsbRxBuffer
 13202  0064' 2500'              	addwf	??_Terminal& (0+255),w,b
 13203  0066' 6ED9               	movwf	fsr2l,c
 13204  0068' 0E00'              	movlw	high Terminal@UsbRxBuffer
 13205  006A' 2100'              	addwfc	(??_Terminal+1)& (0+255),w,b
 13206  006C' 6EDA               	movwf	fsr2h,c
 13207  006E' 0E0A               	movlw	10
 13208  0070' 6EDF               	movwf	indf2,c
 13209                           
 13210                           ; BSR set to: 0
 13211                           ;term.c: 456: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 13212  0072' 0E00'              	movlw	low Terminal@UsbRxBuffer
 13213  0074' 6F00'              	movwf	putUSBUSART@data& (0+255),b
 13214  0076' 0E00'              	movlw	high Terminal@UsbRxBuffer
 13215  0078' 6F00'              	movwf	(putUSBUSART@data+1)& (0+255),b
 13216  007A' 5100'              	movf	Terminal@ReceivedBytes& (0+255),w,b
 13217  007C' 0F02               	addlw	2
 13218  007E' 6F00'              	movwf	putUSBUSART@length& (0+255),b
 13219  0080' EC00' F000'        	call	_putUSBUSART	;wreg free
 13220  0084'                    l2105:
 13221                           
 13222                           ;term.c: 457: }
 13223                           ;term.c: 458: }
 13224                           ;term.c: 461: if ((UsbRxBuffer[0u] == 'S') &&
 13225                           ;term.c: 462: (UsbRxBuffer[0u + 1u] == 'O') &&
 13226                           ;term.c: 463: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13227  0084' 0E53               	movlw	83
 13228  0086' 0102               	movlb	2	; () banked
 13229  0088' 1900'              	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13230  008A' A4D8               	btfss	status,2,c
 13231  008C' D03C               	goto	l2106
 13232                           
 13233                           ; BSR set to: 2
 13234  008E' 0E4F               	movlw	79
 13235  0090' 1900'              	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13236  0092' A4D8               	btfss	status,2,c
 13237  0094' D038               	goto	l2106
 13238                           
 13239                           ; BSR set to: 2
 13240  0096' 0E3A               	movlw	58
 13241  0098' 1900'              	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13242  009A' A4D8               	btfss	status,2,c
 13243  009C' D034               	goto	l2106
 13244                           
 13245                           ; BSR set to: 2
 13246                           ;term.c: 464: {
 13247                           ;term.c: 466: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13248  009E' 0E47               	movlw	71
 13249  00A0' 1900'              	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13250  00A2' A4D8               	btfss	status,2,c
 13251  00A4' 0012               	return	
 13252                           
 13253                           ; BSR set to: 2
 13254  00A6' 0E3A               	movlw	58
 13255  00A8' 1900'              	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13256  00AA' A4D8               	btfss	status,2,c
 13257  00AC' 0012               	return	
 13258                           
 13259                           ; BSR set to: 2
 13260                           ;term.c: 467: {
 13261                           ;term.c: 469: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 13262  00AE' 0E44               	movlw	68
 13263  00B0' 1900'              	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13264  00B2' A4D8               	btfss	status,2,c
 13265  00B4' D012               	goto	l2108
 13266                           
 13267                           ; BSR set to: 2
 13268  00B6' 0E46               	movlw	70
 13269  00B8' 1900'              	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13270  00BA' A4D8               	btfss	status,2,c
 13271  00BC' D00E               	goto	l2108
 13272                           
 13273                           ; BSR set to: 2
 13274                           ;term.c: 470: {
 13275                           ;term.c: 471: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 13276  00BE' 0E41               	movlw	65
 13277  00C0' 1900'              	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13278  00C2' A4D8               	btfss	status,2,c
 13279  00C4' D003               	goto	l2109
 13280                           
 13281                           ; BSR set to: 2
 13282                           ;term.c: 472: {
 13283                           ;term.c: 473: FormatOption = 1u;
 13284  00C6' 0E01               	movlw	1
 13285  00C8' 6F00'              	movwf	Terminal@FormatOption& (0+255),b
 13286                           
 13287                           ;term.c: 474: }
 13288  00CA' 0012               	return	
 13289  00CC'                    l2109:
 13290                           
 13291                           ; BSR set to: 2
 13292                           ;term.c: 475: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 13293                           
 13294                           ; BSR set to: 2
 13295  00CC' 0E42               	movlw	66
 13296  00CE' 1900'              	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13297  00D0' A4D8               	btfss	status,2,c
 13298  00D2' 0012               	return	
 13299                           
 13300                           ; BSR set to: 2
 13301                           ;term.c: 476: {
 13302                           ;term.c: 477: FormatOption = 0u;
 13303  00D4' 0E00               	movlw	0
 13304  00D6' 6F00'              	movwf	Terminal@FormatOption& (0+255),b
 13305                           
 13306                           ; BSR set to: 2
 13307                           ;term.c: 478: }
 13308                           ;term.c: 479: }
 13309                           
 13310                           ; BSR set to: 2
 13311  00D8' 0012               	return	
 13312  00DA'                    l2108:
 13313                           
 13314                           ; BSR set to: 2
 13315                           ;term.c: 481: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 13316                           
 13317                           ; BSR set to: 2
 13318  00DA' 0E45               	movlw	69
 13319  00DC' 1900'              	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13320  00DE' A4D8               	btfss	status,2,c
 13321  00E0' 0012               	return	
 13322                           
 13323                           ; BSR set to: 2
 13324  00E2' 0E4D               	movlw	77
 13325  00E4' 1900'              	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13326  00E6' A4D8               	btfss	status,2,c
 13327  00E8' 0012               	return	
 13328                           
 13329                           ; BSR set to: 2
 13330                           ;term.c: 482: {
 13331                           ;term.c: 483: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 13332  00EA' 0E31               	movlw	49
 13333  00EC' 1900'              	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13334  00EE' A4D8               	btfss	status,2,c
 13335  00F0' D003               	goto	l2114
 13336                           
 13337                           ; BSR set to: 2
 13338                           ;term.c: 484: {
 13339                           ;term.c: 485: EchoOption = 1u;
 13340  00F2' 0E01               	movlw	1
 13341  00F4' 6F00'              	movwf	Terminal@EchoOption& (0+255),b
 13342                           
 13343                           ;term.c: 486: }
 13344  00F6' 0012               	return	
 13345  00F8'                    l2114:
 13346                           
 13347                           ; BSR set to: 2
 13348                           ;term.c: 487: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 13349                           
 13350                           ; BSR set to: 2
 13351  00F8' 0E30               	movlw	48
 13352  00FA' 1900'              	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13353  00FC' A4D8               	btfss	status,2,c
 13354  00FE' 0012               	return	
 13355                           
 13356                           ; BSR set to: 2
 13357                           ;term.c: 488: {
 13358                           ;term.c: 489: EchoOption = 0u;
 13359  0100' 0E00               	movlw	0
 13360  0102' 6F00'              	movwf	Terminal@EchoOption& (0+255),b
 13361                           
 13362                           ; BSR set to: 2
 13363                           ;term.c: 495: }
 13364                           ;term.c: 496: }
 13365                           ;term.c: 497: }
 13366                           
 13367                           ; BSR set to: 2
 13368                           
 13369                           ; BSR set to: 2
 13370                           
 13371                           ;term.c: 492: else
 13372                           ;term.c: 493: {
 13373                           
 13374                           ; BSR set to: 2
 13375                           
 13376                           ; BSR set to: 2
 13377                           ;term.c: 490: }
 13378                           ;term.c: 491: }
 13379                           
 13380                           ; BSR set to: 2
 13381  0104' 0012               	return	
 13382  0106'                    l2106:
 13383                           
 13384                           ; BSR set to: 2
 13385                           ;term.c: 498: else if ((UsbRxBuffer[0u] == 'S') &&
 13386                           ;term.c: 499: (UsbRxBuffer[0u + 1u] == 'B') &&
 13387                           ;term.c: 500: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13388                           
 13389                           ; BSR set to: 2
 13390  0106' 0E53               	movlw	83
 13391  0108' 1900'              	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13392  010A' A4D8               	btfss	status,2,c
 13393  010C' 0012               	return	
 13394                           
 13395                           ; BSR set to: 2
 13396  010E' 0E42               	movlw	66
 13397  0110' 1900'              	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13398  0112' A4D8               	btfss	status,2,c
 13399  0114' 0012               	return	
 13400                           
 13401                           ; BSR set to: 2
 13402  0116' 0E3A               	movlw	58
 13403  0118' 1900'              	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13404  011A' A4D8               	btfss	status,2,c
 13405  011C' 0012               	return	
 13406                           
 13407                           ; BSR set to: 2
 13408                           ;term.c: 501: {
 13409                           ;term.c: 502: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13410  011E' 0E57               	movlw	87
 13411  0120' 1900'              	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13412  0122' A4D8               	btfss	status,2,c
 13413  0124' D091               	goto	l2120
 13414                           
 13415                           ; BSR set to: 2
 13416  0126' 0E3A               	movlw	58
 13417  0128' 1900'              	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13418  012A' A4D8               	btfss	status,2,c
 13419  012C' D08D               	goto	l2120
 13420                           
 13421                           ; BSR set to: 2
 13422                           ;term.c: 503: {
 13423                           ;term.c: 505: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13424  012E' C005' F0D7'        	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13425                           
 13426                           ;term.c: 506: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13427  0132' C006' F0D8'        	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13428                           
 13429                           ;term.c: 508: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13430  0136' C008' F030'        	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13431                           
 13432                           ;term.c: 509: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13433  013A' C009' F031'        	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13434                           
 13435                           ; BSR set to: 2
 13436                           ;term.c: 511: PackageLen = atoi((void*)Len);
 13437  013E' 0E00'              	movlw	low Terminal@Len
 13438  0140' 0100               	movlb	0	; () banked
 13439  0142' 6F00'              	movwf	atoi@s& (0+255),b
 13440  0144' 0E00'              	movlw	high Terminal@Len
 13441  0146' 6F00'              	movwf	(atoi@s+1)& (0+255),b
 13442  0148' EC00' F000'        	call	_atoi	;wreg free
 13443  014C' 0100               	movlb	0	; () banked
 13444  014E' 5100'              	movf	?_atoi& (0+255),w,b
 13445  0150' 0102               	movlb	2	; () banked
 13446  0152' 6F00'              	movwf	Terminal@PackageLen& (0+255),b
 13447                           
 13448                           ;term.c: 512: SlaveAddr = atoi((void*)Addr);
 13449  0154' 0E00'              	movlw	low Terminal@Addr
 13450  0156' 0100               	movlb	0	; () banked
 13451  0158' 6F00'              	movwf	atoi@s& (0+255),b
 13452  015A' 0E00'              	movlw	high Terminal@Addr
 13453  015C' 6F00'              	movwf	(atoi@s+1)& (0+255),b
 13454  015E' EC00' F000'        	call	_atoi	;wreg free
 13455  0162' 0100               	movlb	0	; () banked
 13456  0164' 5100'              	movf	?_atoi& (0+255),w,b
 13457  0166' 0102               	movlb	2	; () banked
 13458  0168' 6F00'              	movwf	Terminal@SlaveAddr& (0+255),b
 13459                           
 13460                           ; BSR set to: 2
 13461                           ;term.c: 514: for (Index = 0; Index <= PackageLen; Index++)
 13462  016A' 0E00               	movlw	0
 13463  016C' 0100               	movlb	0	; () banked
 13464  016E' 6F00'              	movwf	Terminal@Index& (0+255),b
 13465  0170' D032               	goto	l2121
 13466  0172'                    
 13467                           ;term.c: 515: {
 13468                           ;term.c: 516: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 13469                           
 13470                           ; BSR set to: 0
 13471  0172' 0100               	movlb	0	; () banked
 13472  0174' 5100'              	movf	Terminal@Index& (0+255),w,b
 13473  0176' 0D02               	mullw	2
 13474  0178' 0E0B               	movlw	11
 13475  017A' 26F3               	addwf	prodl,f,c
 13476  017C' 0E00               	movlw	0
 13477  017E' 22F4               	addwfc	prodh,f,c
 13478  0180' 0E00'              	movlw	low Terminal@UsbRxBuffer
 13479  0182' 24F3               	addwf	prodl,w,c
 13480  0184' 6ED9               	movwf	fsr2l,c
 13481  0186' 0E00'              	movlw	high Terminal@UsbRxBuffer
 13482  0188' 20F4               	addwfc	prodh,w,c
 13483  018A' 6EDA               	movwf	fsr2h,c
 13484  018C' 5100'              	movf	Terminal@Index& (0+255),w,b
 13485  018E' 0D04               	mullw	4
 13486  0190' 0E00'              	movlw	low Terminal@Payload
 13487  0192' 24F3               	addwf	prodl,w,c
 13488  0194' 6EE1               	movwf	fsr1l,c
 13489  0196' 0E00'              	movlw	high Terminal@Payload
 13490  0198' 20F4               	addwfc	prodh,w,c
 13491  019A' 6EE2               	movwf	fsr1h,c
 13492  019C' CFDF FFE7          	movff	indf2,indf1
 13493                           
 13494                           ;term.c: 517: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 13495  01A0' 5100'              	movf	Terminal@Index& (0+255),w,b
 13496  01A2' 0D02               	mullw	2
 13497  01A4' 0E0C               	movlw	12
 13498  01A6' 26F3               	addwf	prodl,f,c
 13499  01A8' 0E00               	movlw	0
 13500  01AA' 22F4               	addwfc	prodh,f,c
 13501  01AC' 0E00'              	movlw	low Terminal@UsbRxBuffer
 13502  01AE' 24F3               	addwf	prodl,w,c
 13503  01B0' 6ED9               	movwf	fsr2l,c
 13504  01B2' 0E00'              	movlw	high Terminal@UsbRxBuffer
 13505  01B4' 20F4               	addwfc	prodh,w,c
 13506  01B6' 6EDA               	movwf	fsr2h,c
 13507  01B8' 5100'              	movf	Terminal@Index& (0+255),w,b
 13508  01BA' 0D04               	mullw	4
 13509  01BC' 0E01               	movlw	1
 13510  01BE' 26F3               	addwf	prodl,f,c
 13511  01C0' 0E00               	movlw	0
 13512  01C2' 22F4               	addwfc	prodh,f,c
 13513  01C4' 0E00'              	movlw	low Terminal@Payload
 13514  01C6' 24F3               	addwf	prodl,w,c
 13515  01C8' 6EE1               	movwf	fsr1l,c
 13516  01CA' 0E00'              	movlw	high Terminal@Payload
 13517  01CC' 20F4               	addwfc	prodh,w,c
 13518  01CE' 6EE2               	movwf	fsr1h,c
 13519  01D0' CFDF FFE7          	movff	indf2,indf1
 13520                           
 13521                           ; BSR set to: 0
 13522  01D4' 2B00'              	incf	Terminal@Index& (0+255),f,b
 13523  01D6'                    l2121:
 13524                           
 13525                           ; BSR set to: 0
 13526                           
 13527                           ; BSR set to: 0
 13528  01D6' 5100'              	movf	Terminal@Index& (0+255),w,b
 13529  01D8' 0102               	movlb	2	; () banked
 13530  01DA' 5D00'              	subwf	Terminal@PackageLen& (0+255),w,b
 13531  01DC' B0D8               	btfsc	status,0,c
 13532  01DE' D7C9               	goto	l2122
 13533                           
 13534                           ; BSR set to: 2
 13535                           ;term.c: 518: }
 13536                           ;term.c: 520: for (Index = 0; Index <= PackageLen; Index++)
 13537                           
 13538                           ; BSR set to: 2
 13539  01E0' 0E00               	movlw	0
 13540  01E2' 0100               	movlb	0	; () banked
 13541  01E4' 6F00'              	movwf	Terminal@Index& (0+255),b
 13542  01E6' D01F               	goto	l2124
 13543  01E8'                    
 13544                           ;term.c: 521: {
 13545                           ;term.c: 525: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 13546                           
 13547                           ; BSR set to: 0
 13548  01E8' 0100               	movlb	0	; () banked
 13549  01EA' 5100'              	movf	Terminal@Index& (0+255),w,b
 13550  01EC' 0D04               	mullw	4
 13551  01EE' 0E00'              	movlw	low Terminal@Payload
 13552  01F0' 24F3               	addwf	prodl,w,c
 13553  01F2' 6F00'              	movwf	strtol@s& (0+255),b
 13554  01F4' 0E00'              	movlw	high Terminal@Payload
 13555  01F6' 20F4               	addwfc	prodh,w,c
 13556  01F8' 6F00'              	movwf	(strtol@s+1)& (0+255),b
 13557  01FA' 0E00               	movlw	0
 13558  01FC' 6F00'              	movwf	strtol@endptr& (0+255),b
 13559  01FE' 0E00               	movlw	0
 13560  0200' 6F00'              	movwf	(strtol@endptr+1)& (0+255),b
 13561  0202' 0E00               	movlw	0
 13562  0204' 6F00'              	movwf	(strtol@base+1)& (0+255),b
 13563  0206' 0E10               	movlw	16
 13564  0208' 6F00'              	movwf	strtol@base& (0+255),b
 13565  020A' EC00' F000'        	call	_strtol	;wreg free
 13566  020E' 0100               	movlb	0	; () banked
 13567  0210' 5100'              	movf	Terminal@Index& (0+255),w,b
 13568  0212' 0D01               	mullw	1
 13569  0214' 0E00'              	movlw	low Terminal@TermTxBuffer
 13570  0216' 24F3               	addwf	prodl,w,c
 13571  0218' 6ED9               	movwf	fsr2l,c
 13572  021A' 0E00'              	movlw	high Terminal@TermTxBuffer
 13573  021C' 20F4               	addwfc	prodh,w,c
 13574  021E' 6EDA               	movwf	fsr2h,c
 13575  0220' C00C' FFDF         	movff	?_strtol,indf2
 13576                           
 13577                           ; BSR set to: 0
 13578  0224' 2B00'              	incf	Terminal@Index& (0+255),f,b
 13579  0226'                    l2124:
 13580                           
 13581                           ; BSR set to: 0
 13582                           
 13583                           ; BSR set to: 0
 13584  0226' 5100'              	movf	Terminal@Index& (0+255),w,b
 13585  0228' 0102               	movlb	2	; () banked
 13586  022A' 5D00'              	subwf	Terminal@PackageLen& (0+255),w,b
 13587  022C' B0D8               	btfsc	status,0,c
 13588  022E' D7DC               	goto	l2125
 13589                           
 13590                           ; BSR set to: 2
 13591                           ;term.c: 527: }
 13592                           ;term.c: 530: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 13593                           
 13594                           ; BSR set to: 2
 13595  0230' 0E00'              	movlw	low Terminal@TermTxBuffer
 13596  0232' 0100               	movlb	0	; () banked
 13597  0234' 6F00'              	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 13598  0236' 0E00'              	movlw	high Terminal@TermTxBuffer
 13599  0238' 6F00'              	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 13600  023A' C02A' F005'        	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 13601  023E' C02B' F006'        	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 13602  0242' EC00' F000'        	call	_I2cSlv_SendI2cMsg	;wreg free
 13603                           
 13604                           ;term.c: 531: }
 13605  0246' 0012               	return	
 13606  0248'                    l2120:
 13607                           
 13608                           ;term.c: 532: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 13609  0248' 0E52               	movlw	82
 13610  024A' 0102               	movlb	2	; () banked
 13611  024C' 1900'              	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13612  024E' A4D8               	btfss	status,2,c
 13613  0250' 0012               	return	
 13614                           
 13615                           ; BSR set to: 2
 13616  0252' 0E3A               	movlw	58
 13617  0254' 1900'              	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13618  0256' A4D8               	btfss	status,2,c
 13619  0258' 0012               	return	
 13620                           
 13621                           ; BSR set to: 2
 13622                           ;term.c: 533: {
 13623                           ;term.c: 535: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13624  025A' C005' F0D7'        	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13625                           
 13626                           ;term.c: 536: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13627  025E' C006' F0D8'        	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13628                           
 13629                           ;term.c: 538: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13630  0262' C008' F030'        	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13631                           
 13632                           ;term.c: 539: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13633  0266' C009' F031'        	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13634                           
 13635                           ; BSR set to: 2
 13636                           ;term.c: 541: PackageLen = atoi((void*)Len);
 13637  026A' 0E00'              	movlw	low Terminal@Len
 13638  026C' 0100               	movlb	0	; () banked
 13639  026E' 6F00'              	movwf	atoi@s& (0+255),b
 13640  0270' 0E00'              	movlw	high Terminal@Len
 13641  0272' 6F00'              	movwf	(atoi@s+1)& (0+255),b
 13642  0274' EC00' F000'        	call	_atoi	;wreg free
 13643  0278' 0100               	movlb	0	; () banked
 13644  027A' 5100'              	movf	?_atoi& (0+255),w,b
 13645  027C' 0102               	movlb	2	; () banked
 13646  027E' 6F00'              	movwf	Terminal@PackageLen& (0+255),b
 13647                           
 13648                           ;term.c: 542: SlaveAddr = atoi((void*)Addr);
 13649  0280' 0E00'              	movlw	low Terminal@Addr
 13650  0282' 0100               	movlb	0	; () banked
 13651  0284' 6F00'              	movwf	atoi@s& (0+255),b
 13652  0286' 0E00'              	movlw	high Terminal@Addr
 13653  0288' 6F00'              	movwf	(atoi@s+1)& (0+255),b
 13654  028A' EC00' F000'        	call	_atoi	;wreg free
 13655  028E' 0100               	movlb	0	; () banked
 13656  0290' 5100'              	movf	?_atoi& (0+255),w,b
 13657  0292' 0102               	movlb	2	; () banked
 13658  0294' 6F00'              	movwf	Terminal@SlaveAddr& (0+255),b
 13659                           
 13660                           ; BSR set to: 2
 13661                           ;term.c: 545: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 13662  0296' 0E00'              	movlw	low Terminal@TermRxBuffer
 13663  0298' 0100               	movlb	0	; () banked
 13664  029A' 6F00'              	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 13665  029C' 0E00'              	movlw	high Terminal@TermRxBuffer
 13666  029E' 6F00'              	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 13667  02A0' C02A' F005'        	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 13668  02A4' C02B' F006'        	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 13669  02A8' EC00' F000'        	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 13670                           
 13671                           ;term.c: 548: TermState = Term_PrepSlvI2cResp;
 13672  02AC' 0E01               	movlw	1
 13673  02AE' 0102               	movlb	2	; () banked
 13674  02B0' 6F00'              	movwf	Terminal@TermState& (0+255),b
 13675                           
 13676                           ; BSR set to: 2
 13677                           ;term.c: 556: }
 13678                           ;term.c: 588: }
 13679                           ;term.c: 589: break;
 13680                           
 13681                           ; BSR set to: 2
 13682                           
 13683                           ; BSR set to: 2
 13684                           
 13685                           ; BSR set to: 2
 13686                           
 13687                           ;term.c: 554: {
 13688                           
 13689                           ; BSR set to: 2
 13690                           
 13691                           ; BSR set to: 2
 13692                           
 13693                           ; BSR set to: 2
 13694                           
 13695                           ; BSR set to: 2
 13696                           
 13697                           ; BSR set to: 2
 13698                           ;term.c: 549: }
 13699                           ;term.c: 550: }
 13700                           
 13701                           ; BSR set to: 2
 13702  02B2' 0012               	return	
 13703  02B4'                    
 13704                           ; BSR set to: 2
 13705                           ;term.c: 593: if((cdc_trf_state == 0))
 13706                           
 13707                           ; BSR set to: 2
 13708  02B4' 5100'              	movf	_cdc_trf_state& (0+255),w,b
 13709  02B6' A4D8               	btfss	status,2,c
 13710  02B8' 0012               	return	
 13711                           
 13712                           ; BSR set to: 2
 13713                           ;term.c: 594: {
 13714                           ;term.c: 595: UsbTxBuffer[0] = 'S';
 13715  02BA' 0E53               	movlw	83
 13716  02BC' 0101               	movlb	1	; () banked
 13717  02BE' 6F00'              	movwf	Terminal@UsbTxBuffer& (0+255),b
 13718                           
 13719                           ;term.c: 596: UsbTxBuffer[1] = 'B';
 13720  02C0' 0E42               	movlw	66
 13721  02C2' 6F00'              	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 13722                           
 13723                           ;term.c: 597: UsbTxBuffer[2] = '[';
 13724  02C4' 0E5B               	movlw	91
 13725  02C6' 6F00'              	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 13726                           
 13727                           ; BSR set to: 1
 13728                           ;term.c: 598: UsbTxBuffer[3] = Addr[0];
 13729  02C8' C030' F003'        	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 13730                           
 13731                           ; BSR set to: 1
 13732                           ;term.c: 599: UsbTxBuffer[4] = Addr[1];
 13733  02CC' C031' F004'        	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 13734                           
 13735                           ;term.c: 600: UsbTxBuffer[5] = ']';
 13736  02D0' 0E5D               	movlw	93
 13737  02D2' 6F00'              	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 13738                           
 13739                           ;term.c: 601: UsbTxBuffer[6] = ':';
 13740  02D4' 0E3A               	movlw	58
 13741  02D6' 6F00'              	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 13742                           
 13743                           ; BSR set to: 1
 13744                           ;term.c: 602: putUSBUSART(UsbTxBuffer,7);
 13745  02D8' 0E00'              	movlw	low Terminal@UsbTxBuffer
 13746  02DA' 0100               	movlb	0	; () banked
 13747  02DC' 6F00'              	movwf	putUSBUSART@data& (0+255),b
 13748  02DE' 0E00'              	movlw	high Terminal@UsbTxBuffer
 13749  02E0' 6F00'              	movwf	(putUSBUSART@data+1)& (0+255),b
 13750  02E2' 0E07               	movlw	7
 13751  02E4' 6F00'              	movwf	putUSBUSART@length& (0+255),b
 13752  02E6' EC00' F000'        	call	_putUSBUSART	;wreg free
 13753                           
 13754                           ;term.c: 605: TermState = Term_ReadSlvI2cData;
 13755  02EA' 0E02               	movlw	2
 13756  02EC' 0102               	movlb	2	; () banked
 13757  02EE' 6F00'              	movwf	Terminal@TermState& (0+255),b
 13758                           
 13759                           ; BSR set to: 2
 13760                           ;term.c: 606: }
 13761                           ;term.c: 607: break;
 13762  02F0' 0012               	return	
 13763  02F2'                    
 13764                           ; BSR set to: 2
 13765                           ;term.c: 611: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 13766                           
 13767                           ; BSR set to: 2
 13768  02F2' EC00' F000'        	call	_I2cSlv_I2cReadMsgSts	;wreg free
 13769  02F6' 06E8               	decf	wreg,f,c
 13770  02F8' A4D8               	btfss	status,2,c
 13771  02FA' 0012               	return	
 13772                           
 13773                           ;term.c: 612: {
 13774                           ;term.c: 614: if (FormatOption == 1u)
 13775  02FC' 0102               	movlb	2	; () banked
 13776  02FE' 0500'              	decf	Terminal@FormatOption& (0+255),w,b
 13777  0300' A4D8               	btfss	status,2,c
 13778  0302' D027               	goto	u6850
 13779                           
 13780                           ; BSR set to: 2
 13781                           ;term.c: 615: {
 13782                           ;term.c: 617: for (Index = 0; Index <= PackageLen; Index++)
 13783  0304' 0E00               	movlw	0
 13784  0306' 0100               	movlb	0	; () banked
 13785  0308' 6F00'              	movwf	Terminal@Index& (0+255),b
 13786  030A' D01E               	goto	l2137
 13787  030C'                    
 13788                           ;term.c: 618: {
 13789                           ;term.c: 619: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 13790                           
 13791                           ; BSR set to: 0
 13792  030C' 0100               	movlb	0	; () banked
 13793  030E' 5100'              	movf	Terminal@Index& (0+255),w,b
 13794  0310' 0D04               	mullw	4
 13795  0312' 0E00'              	movlw	low Terminal@Payload
 13796  0314' 24F3               	addwf	prodl,w,c
 13797  0316' 6F00'              	movwf	itoa@buf& (0+255),b
 13798  0318' 0E00'              	movlw	high Terminal@Payload
 13799  031A' 20F4               	addwfc	prodh,w,c
 13800  031C' 6F00'              	movwf	(itoa@buf+1)& (0+255),b
 13801  031E' 5100'              	movf	Terminal@Index& (0+255),w,b
 13802  0320' 0D01               	mullw	1
 13803  0322' 0E00'              	movlw	low Terminal@TermRxBuffer
 13804  0324' 24F3               	addwf	prodl,w,c
 13805  0326' 6ED9               	movwf	fsr2l,c
 13806  0328' 0E00'              	movlw	high Terminal@TermRxBuffer
 13807  032A' 20F4               	addwfc	prodh,w,c
 13808  032C' 6EDA               	movwf	fsr2h,c
 13809  032E' 50DF               	movf	indf2,w,c
 13810  0330' 6F00'              	movwf	??_Terminal& (0+255),b
 13811  0332' 5100'              	movf	??_Terminal& (0+255),w,b
 13812  0334' 6F00'              	movwf	itoa@val& (0+255),b
 13813  0336' 6B00'              	clrf	(itoa@val+1)& (0+255),b
 13814  0338' 0E00               	movlw	0
 13815  033A' 6F00'              	movwf	(itoa@base+1)& (0+255),b
 13816  033C' 0E0A               	movlw	10
 13817  033E' 6F00'              	movwf	itoa@base& (0+255),b
 13818  0340' EC00' F000'        	call	_itoa	;wreg free
 13819  0344' 0100               	movlb	0	; () banked
 13820  0346' 2B00'              	incf	Terminal@Index& (0+255),f,b
 13821  0348'                    l2137:
 13822                           
 13823                           ; BSR set to: 0
 13824                           
 13825                           ; BSR set to: 0
 13826  0348' 5100'              	movf	Terminal@Index& (0+255),w,b
 13827  034A' 0102               	movlb	2	; () banked
 13828  034C' 5D00'              	subwf	Terminal@PackageLen& (0+255),w,b
 13829  034E' B0D8               	btfsc	status,0,c
 13830  0350' D7DD               	goto	l2138
 13831  0352'                    u6850:
 13832                           
 13833                           ; BSR set to: 2
 13834                           ;term.c: 620: }
 13835                           ;term.c: 621: }
 13836                           ;term.c: 624: if((cdc_trf_state == 0))
 13837                           
 13838                           ; BSR set to: 2
 13839                           
 13840                           ; BSR set to: 2
 13841  0352' 5100'              	movf	_cdc_trf_state& (0+255),w,b
 13842  0354' A4D8               	btfss	status,2,c
 13843  0356' 0012               	return	
 13844                           
 13845                           ; BSR set to: 2
 13846                           ;term.c: 625: {
 13847                           ;term.c: 627: if (FormatOption == 1u)
 13848  0358' 0500'              	decf	Terminal@FormatOption& (0+255),w,b
 13849  035A' A4D8               	btfss	status,2,c
 13850  035C' D02B               	goto	l2141
 13851                           
 13852                           ; BSR set to: 2
 13853                           ;term.c: 628: {
 13854                           ;term.c: 629: Payload[(2*PackageLen)].Byte[3] = '\r';
 13855  035E' 5100'              	movf	Terminal@PackageLen& (0+255),w,b
 13856  0360' 0D08               	mullw	8
 13857  0362' 0E03               	movlw	3
 13858  0364' 26F3               	addwf	prodl,f,c
 13859  0366' 0E00               	movlw	0
 13860  0368' 22F4               	addwfc	prodh,f,c
 13861  036A' 0E00'              	movlw	low Terminal@Payload
 13862  036C' 24F3               	addwf	prodl,w,c
 13863  036E' 6ED9               	movwf	fsr2l,c
 13864  0370' 0E00'              	movlw	high Terminal@Payload
 13865  0372' 20F4               	addwfc	prodh,w,c
 13866  0374' 6EDA               	movwf	fsr2h,c
 13867  0376' 0E0D               	movlw	13
 13868  0378' 6EDF               	movwf	indf2,c
 13869                           
 13870                           ;term.c: 630: Payload[(2*PackageLen)].Byte[2] = '\n';
 13871  037A' 5100'              	movf	Terminal@PackageLen& (0+255),w,b
 13872  037C' 0D08               	mullw	8
 13873  037E' 0E02               	movlw	2
 13874  0380' 26F3               	addwf	prodl,f,c
 13875  0382' 0E00               	movlw	0
 13876  0384' 22F4               	addwfc	prodh,f,c
 13877  0386' 0E00'              	movlw	low Terminal@Payload
 13878  0388' 24F3               	addwf	prodl,w,c
 13879  038A' 6ED9               	movwf	fsr2l,c
 13880  038C' 0E00'              	movlw	high Terminal@Payload
 13881  038E' 20F4               	addwfc	prodh,w,c
 13882  0390' 6EDA               	movwf	fsr2h,c
 13883  0392' 0E0A               	movlw	10
 13884  0394' 6EDF               	movwf	indf2,c
 13885                           
 13886                           ; BSR set to: 2
 13887                           ;term.c: 632: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 13888  0396' 0E00'              	movlw	low Terminal@Payload
 13889  0398' 0100               	movlb	0	; () banked
 13890  039A' 6F00'              	movwf	putUSBUSART@data& (0+255),b
 13891  039C' 0E00'              	movlw	high Terminal@Payload
 13892  039E' 6F00'              	movwf	(putUSBUSART@data+1)& (0+255),b
 13893  03A0' 0102               	movlb	2	; () banked
 13894  03A2' 5100'              	movf	Terminal@PackageLen& (0+255),w,b
 13895  03A4' 0D02               	mullw	2
 13896  03A6' 50F3               	movf	prodl,w,c
 13897  03A8' 0F04               	addlw	4
 13898  03AA' 0100               	movlb	0	; () banked
 13899  03AC' 6F00'              	movwf	putUSBUSART@length& (0+255),b
 13900  03AE' EC00' F000'        	call	_putUSBUSART	;wreg free
 13901                           
 13902                           ;term.c: 633: }
 13903  03B2' D026               	goto	l2142
 13904  03B4'                    l2141:
 13905                           
 13906                           ;term.c: 634: else
 13907                           ;term.c: 635: {
 13908                           ;term.c: 636: TermRxBuffer[PackageLen] = '\r';
 13909  03B4' 0102               	movlb	2	; () banked
 13910  03B6' 5100'              	movf	Terminal@PackageLen& (0+255),w,b
 13911  03B8' 0D01               	mullw	1
 13912  03BA' 0E00'              	movlw	low Terminal@TermRxBuffer
 13913  03BC' 24F3               	addwf	prodl,w,c
 13914  03BE' 6ED9               	movwf	fsr2l,c
 13915  03C0' 0E00'              	movlw	high Terminal@TermRxBuffer
 13916  03C2' 20F4               	addwfc	prodh,w,c
 13917  03C4' 6EDA               	movwf	fsr2h,c
 13918  03C6' 0E0D               	movlw	13
 13919  03C8' 6EDF               	movwf	indf2,c
 13920                           
 13921                           ; BSR set to: 2
 13922                           ;term.c: 637: TermRxBuffer[PackageLen + 1] = '\n';
 13923  03CA' 5100'              	movf	Terminal@PackageLen& (0+255),w,b
 13924  03CC' 0100               	movlb	0	; () banked
 13925  03CE' 6F00'              	movwf	??_Terminal& (0+255),b
 13926  03D0' 6B00'              	clrf	(??_Terminal+1)& (0+255),b
 13927  03D2' 0E01               	movlw	1
 13928  03D4' 2700'              	addwf	??_Terminal& (0+255),f,b
 13929  03D6' 0E00               	movlw	0
 13930  03D8' 2300'              	addwfc	(??_Terminal+1)& (0+255),f,b
 13931  03DA' 0E00'              	movlw	low Terminal@TermRxBuffer
 13932  03DC' 2500'              	addwf	??_Terminal& (0+255),w,b
 13933  03DE' 6ED9               	movwf	fsr2l,c
 13934  03E0' 0E00'              	movlw	high Terminal@TermRxBuffer
 13935  03E2' 2100'              	addwfc	(??_Terminal+1)& (0+255),w,b
 13936  03E4' 6EDA               	movwf	fsr2h,c
 13937  03E6' 0E0A               	movlw	10
 13938  03E8' 6EDF               	movwf	indf2,c
 13939                           
 13940                           ; BSR set to: 0
 13941                           ;term.c: 639: putUSBUSART(TermRxBuffer,PackageLen + 2);
 13942  03EA' 0E00'              	movlw	low Terminal@TermRxBuffer
 13943  03EC' 6F00'              	movwf	putUSBUSART@data& (0+255),b
 13944  03EE' 0E00'              	movlw	high Terminal@TermRxBuffer
 13945  03F0' 6F00'              	movwf	(putUSBUSART@data+1)& (0+255),b
 13946  03F2' 0102               	movlb	2	; () banked
 13947  03F4' 5100'              	movf	Terminal@PackageLen& (0+255),w,b
 13948  03F6' 0F02               	addlw	2
 13949  03F8' 0100               	movlb	0	; () banked
 13950  03FA' 6F00'              	movwf	putUSBUSART@length& (0+255),b
 13951  03FC' EC00' F000'        	call	_putUSBUSART	;wreg free
 13952  0400'                    l2142:
 13953                           
 13954                           ;term.c: 640: }
 13955                           ;term.c: 642: TermState = Term_GetData;
 13956  0400' 0E00               	movlw	0
 13957  0402' 0102               	movlb	2	; () banked
 13958  0404' 6F00'              	movwf	Terminal@TermState& (0+255),b
 13959                           
 13960                           ; BSR set to: 2
 13961                           ;term.c: 652: }
 13962                           
 13963                           ; BSR set to: 2
 13964                           ;term.c: 651: break;
 13965                           
 13966                           ;term.c: 650: default:
 13967                           
 13968                           ; BSR set to: 2
 13969                           ;term.c: 648: break;
 13970                           
 13971                           ;term.c: 647: case Term_ReadSlvUartData:
 13972                           
 13973                           ; BSR set to: 2
 13974                           ;term.c: 643: }
 13975                           ;term.c: 644: }
 13976                           ;term.c: 645: break;
 13977                           
 13978                           ; BSR set to: 2
 13979  0406' 0012               	return	
 13980  0408'                    l2101:
 13981                           
 13982                           ; BSR set to: 2
 13983                           
 13984                           ; BSR set to: 2
 13985  0408' 5100'              	movf	Terminal@TermState& (0+255),w,b
 13986                           
 13987                           ; Switch size 1, requested type "space"
 13988                           ; Number of cases is 4, Range of values is 0 to 3
 13989                           ; switch strategies available:
 13990                           ; Name         Instructions Cycles
 13991                           ; simple_byte           13     7 (average)
 13992                           ;	Chosen strategy is simple_byte
 13993  040A' 0A00               	xorlw	0	; case 0
 13994  040C' B4D8               	btfsc	status,2,c
 13995  040E' D602               	goto	l2102
 13996  0410' 0A01               	xorlw	1	; case 1
 13997  0412' B4D8               	btfsc	status,2,c
 13998  0414' D74F               	goto	l2132
 13999  0416' 0A03               	xorlw	3	; case 2
 14000  0418' B4D8               	btfsc	status,2,c
 14001  041A' D76B               	goto	l2134
 14002  041C' 0A01               	xorlw	1	; case 3
 14003  041E' 0012               	return	
 14004  0420'                    __end_of_Terminal:
 14005                           	opt stack 0
 14006                           tosu	equ	0xFFF
 14007                           tosh	equ	0xFFE
 14008                           tosl	equ	0xFFD
 14009                           pclath	equ	0xFFA
 14010                           tblptru	equ	0xFF8
 14011                           tblptrh	equ	0xFF7
 14012                           tblptrl	equ	0xFF6
 14013                           tablat	equ	0xFF5
 14014                           prodh	equ	0xFF4
 14015                           prodl	equ	0xFF3
 14016                           intcon	equ	0xFF2
 14017                           intcon2	equ	0xFF1
 14018                           intcon3	equ	0xFF0
 14019                           indf0	equ	0xFEF
 14020                           postinc0	equ	0xFEE
 14021                           plusw0	equ	0xFEB
 14022                           fsr0h	equ	0xFEA
 14023                           fsr0l	equ	0xFE9
 14024                           wreg	equ	0xFE8
 14025                           indf1	equ	0xFE7
 14026                           postinc1	equ	0xFE6
 14027                           postdec1	equ	0xFE5
 14028                           fsr1h	equ	0xFE2
 14029                           fsr1l	equ	0xFE1
 14030                           indf2	equ	0xFDF
 14031                           postinc2	equ	0xFDE
 14032                           postdec2	equ	0xFDD
 14033                           plusw2	equ	0xFDB
 14034                           fsr2h	equ	0xFDA
 14035                           fsr2l	equ	0xFD9
 14036                           status	equ	0xFD8
 14037                           
 14038 ;; *************** function _strtol *****************
 14039 ;; Defined at:
 14040 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtol.c"
 14041 ;; Parameters:    Size  Location     Type
 14042 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 14043 ;;		 -> Terminal@Payload(80), 
 14044 ;;  endptr          2   14[BANK0 ] PTR PTR unsigned char 
 14045 ;;		 -> NULL(0), 
 14046 ;;  base            2   16[BANK0 ] int 
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;  a               4   23[BANK0 ] long 
 14049 ;;  c               1   27[BANK0 ] unsigned char 
 14050 ;;  sign            1   22[BANK0 ] unsigned char 
 14051 ;; Return value:  Size  Location     Type
 14052 ;;                  4   12[BANK0 ] long 
 14053 ;; Registers used:
 14054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14055 ;; Tracked objects:
 14056 ;;		On entry : 0/0
 14057 ;;		On exit  : 0/0
 14058 ;;		Unchanged: 0/0
 14059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14060 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14061 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14062 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14063 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14064 ;;Total ram usage:       16 bytes
 14065 ;; Hardware stack levels used:    1
 14066 ;; Hardware stack levels required when called:   13
 14067 ;; This function calls:
 14068 ;;		___lmul
 14069 ;;		_isalpha
 14070 ;;		_isdigit
 14071 ;;		_isspace
 14072 ;;		_toupper
 14073 ;; This function is called by:
 14074 ;;		_Terminal
 14075 ;; This function uses a non-reentrant model
 14076 ;;
 14077                           
 14078                           	psect	text55
 14079  0000'                    __ptext55:
 14080                           	opt stack 0
 14081  0000'                    _strtol:
 14082                           	opt stack 12
 14083                           
 14084                           ;incstack = 0
 14085  0000' C00C' FFD9         	movff	strtol@s,fsr2l
 14086  0004' C00D' FFDA         	movff	strtol@s+1,fsr2h
 14087  0008' 50DF               	movf	indf2,w,c
 14088  000A' 0100               	movlb	0	; () banked
 14089  000C' 6F00'              	movwf	strtol@c& (0+255),b
 14090                           
 14091                           ; BSR set to: 0
 14092  000E' 4B00'              	infsnz	strtol@s& (0+255),f,b
 14093  0010' 2B00'              	incf	(strtol@s+1)& (0+255),f,b
 14094                           
 14095                           ; BSR set to: 0
 14096  0012' 5100'              	movf	strtol@c& (0+255),w,b
 14097  0014' EC00' F000'        	call	_isspace
 14098  0018' B0D8               	btfsc	status,0,c
 14099  001A' D7F2               	goto	_strtol
 14100  001C' 0E00               	movlw	0
 14101  001E' 0100               	movlb	0	; () banked
 14102  0020' 6F00'              	movwf	strtol@a& (0+255),b
 14103  0022' 0E00               	movlw	0
 14104  0024' 6F00'              	movwf	(strtol@a+1)& (0+255),b
 14105  0026' 0E00               	movlw	0
 14106  0028' 6F00'              	movwf	(strtol@a+2)& (0+255),b
 14107  002A' 0E00               	movlw	0
 14108  002C' 6F00'              	movwf	(strtol@a+3)& (0+255),b
 14109  002E' 0E00               	movlw	0
 14110  0030' 6F00'              	movwf	strtol@sign& (0+255),b
 14111                           
 14112                           ; BSR set to: 0
 14113  0032' 0E2D               	movlw	45
 14114  0034' 1900'              	xorwf	strtol@c& (0+255),w,b
 14115  0036' A4D8               	btfss	status,2,c
 14116  0038' D003               	goto	l2821
 14117                           
 14118                           ; BSR set to: 0
 14119  003A' 0E01               	movlw	1
 14120  003C' 6F00'              	movwf	strtol@sign& (0+255),b
 14121  003E' D004               	goto	u5650
 14122  0040'                    l2821:
 14123                           
 14124                           ; BSR set to: 0
 14125                           
 14126                           ; BSR set to: 0
 14127  0040' 0E2B               	movlw	43
 14128  0042' 1900'              	xorwf	strtol@c& (0+255),w,b
 14129  0044' A4D8               	btfss	status,2,c
 14130  0046' D008               	goto	l2823
 14131  0048'                    u5650:
 14132                           
 14133                           ; BSR set to: 0
 14134  0048' C00C' FFD9         	movff	strtol@s,fsr2l
 14135  004C' C00D' FFDA         	movff	strtol@s+1,fsr2h
 14136  0050' 50DF               	movf	indf2,w,c
 14137  0052' 6F00'              	movwf	strtol@c& (0+255),b
 14138                           
 14139                           ; BSR set to: 0
 14140  0054' 4B00'              	infsnz	strtol@s& (0+255),f,b
 14141  0056' 2B00'              	incf	(strtol@s+1)& (0+255),f,b
 14142  0058'                    l2823:
 14143                           
 14144                           ; BSR set to: 0
 14145                           
 14146                           ; BSR set to: 0
 14147                           
 14148                           ; BSR set to: 0
 14149  0058' 0E30               	movlw	48
 14150  005A' 1900'              	xorwf	strtol@c& (0+255),w,b
 14151  005C' A4D8               	btfss	status,2,c
 14152  005E' D02E               	goto	l2831
 14153                           
 14154                           ; BSR set to: 0
 14155  0060' C00C' FFD9         	movff	strtol@s,fsr2l
 14156  0064' C00D' FFDA         	movff	strtol@s+1,fsr2h
 14157  0068' 50DF               	movf	indf2,w,c
 14158  006A' 6F00'              	movwf	strtol@c& (0+255),b
 14159                           
 14160                           ; BSR set to: 0
 14161  006C' 4B00'              	infsnz	strtol@s& (0+255),f,b
 14162  006E' 2B00'              	incf	(strtol@s+1)& (0+255),f,b
 14163                           
 14164                           ; BSR set to: 0
 14165  0070' 5100'              	movf	strtol@base& (0+255),w,b
 14166  0072' 1100'              	iorwf	(strtol@base+1)& (0+255),w,b
 14167  0074' B4D8               	btfsc	status,2,c
 14168  0076' D005               	goto	u5680
 14169                           
 14170                           ; BSR set to: 0
 14171  0078' 0E10               	movlw	16
 14172  007A' 1900'              	xorwf	strtol@base& (0+255),w,b
 14173  007C' 1100'              	iorwf	(strtol@base+1)& (0+255),w,b
 14174  007E' A4D8               	btfss	status,2,c
 14175  0080' D015               	goto	l2825
 14176  0082'                    u5680:
 14177                           
 14178                           ; BSR set to: 0
 14179                           
 14180                           ; BSR set to: 0
 14181  0082' 0E78               	movlw	120
 14182  0084' 1900'              	xorwf	strtol@c& (0+255),w,b
 14183  0086' B4D8               	btfsc	status,2,c
 14184  0088' D004               	goto	u5700
 14185                           
 14186                           ; BSR set to: 0
 14187  008A' 0E58               	movlw	88
 14188  008C' 1900'              	xorwf	strtol@c& (0+255),w,b
 14189  008E' A4D8               	btfss	status,2,c
 14190  0090' D00D               	goto	l2825
 14191  0092'                    u5700:
 14192                           
 14193                           ; BSR set to: 0
 14194                           
 14195                           ; BSR set to: 0
 14196  0092' 0E00               	movlw	0
 14197  0094' 6F00'              	movwf	(strtol@base+1)& (0+255),b
 14198  0096' 0E10               	movlw	16
 14199  0098' 6F00'              	movwf	strtol@base& (0+255),b
 14200                           
 14201                           ; BSR set to: 0
 14202  009A' C00C' FFD9         	movff	strtol@s,fsr2l
 14203  009E' C00D' FFDA         	movff	strtol@s+1,fsr2h
 14204  00A2' 50DF               	movf	indf2,w,c
 14205  00A4' 6F00'              	movwf	strtol@c& (0+255),b
 14206                           
 14207                           ; BSR set to: 0
 14208  00A6' 4B00'              	infsnz	strtol@s& (0+255),f,b
 14209  00A8' 2B00'              	incf	(strtol@s+1)& (0+255),f,b
 14210  00AA' D008               	goto	l2831
 14211  00AC'                    l2825:
 14212                           
 14213                           ; BSR set to: 0
 14214                           
 14215                           ; BSR set to: 0
 14216  00AC' 5100'              	movf	strtol@base& (0+255),w,b
 14217  00AE' 1100'              	iorwf	(strtol@base+1)& (0+255),w,b
 14218  00B0' A4D8               	btfss	status,2,c
 14219  00B2' D004               	goto	l2831
 14220                           
 14221                           ; BSR set to: 0
 14222  00B4' 0E00               	movlw	0
 14223  00B6' 6F00'              	movwf	(strtol@base+1)& (0+255),b
 14224  00B8' 0E08               	movlw	8
 14225  00BA' 6F00'              	movwf	strtol@base& (0+255),b
 14226  00BC'                    l2831:
 14227                           
 14228                           ; BSR set to: 0
 14229                           
 14230                           ; BSR set to: 0
 14231                           
 14232                           ; BSR set to: 0
 14233                           
 14234                           ; BSR set to: 0
 14235  00BC' 5100'              	movf	strtol@base& (0+255),w,b
 14236  00BE' 1100'              	iorwf	(strtol@base+1)& (0+255),w,b
 14237  00C0' A4D8               	btfss	status,2,c
 14238  00C2' D004               	goto	l2832
 14239                           
 14240                           ; BSR set to: 0
 14241  00C4' 0E00               	movlw	0
 14242  00C6' 6F00'              	movwf	(strtol@base+1)& (0+255),b
 14243  00C8' 0E0A               	movlw	10
 14244  00CA' 6F00'              	movwf	strtol@base& (0+255),b
 14245  00CC'                    l2832:
 14246                           
 14247                           ; BSR set to: 0
 14248                           
 14249                           ; BSR set to: 0
 14250                           
 14251                           ; BSR set to: 0
 14252  00CC' 5100'              	movf	strtol@c& (0+255),w,b
 14253  00CE' EC00' F000'        	call	_isalpha
 14254  00D2' A0D8               	btfss	status,0,c
 14255  00D4' D008               	goto	l2834
 14256  00D6' 0100               	movlb	0	; () banked
 14257  00D8' 5100'              	movf	strtol@c& (0+255),w,b
 14258  00DA' EC00' F000'        	call	_toupper
 14259  00DE' 0FC9               	addlw	201
 14260  00E0' 0100               	movlb	0	; () banked
 14261  00E2' 6F00'              	movwf	strtol@c& (0+255),b
 14262  00E4' D009               	goto	l2837
 14263  00E6'                    l2834:
 14264                           
 14265                           ; BSR set to: 0
 14266  00E6' 0100               	movlb	0	; () banked
 14267  00E8' 5100'              	movf	strtol@c& (0+255),w,b
 14268  00EA' EC00' F000'        	call	_isdigit
 14269  00EE' A0D8               	btfss	status,0,c
 14270  00F0' D039               	goto	l2838
 14271  00F2' 0E30               	movlw	48
 14272  00F4' 0100               	movlb	0	; () banked
 14273  00F6' 5F00'              	subwf	strtol@c& (0+255),f,b
 14274  00F8'                    l2837:
 14275                           
 14276                           ; BSR set to: 0
 14277                           
 14278                           ; BSR set to: 0
 14279                           
 14280                           ; BSR set to: 0
 14281  00F8' 5100'              	movf	strtol@c& (0+255),w,b
 14282  00FA' 6F00'              	movwf	??_strtol& (0+255),b
 14283  00FC' 6B00'              	clrf	(??_strtol+1)& (0+255),b
 14284  00FE' 5100'              	movf	strtol@base& (0+255),w,b
 14285  0100' 5D00'              	subwf	??_strtol& (0+255),w,b
 14286  0102' 5100'              	movf	(??_strtol+1)& (0+255),w,b
 14287  0104' 0A80               	xorlw	128
 14288  0106' 6F00'              	movwf	(??_strtol+2)& (0+255),b
 14289  0108' 5100'              	movf	(strtol@base+1)& (0+255),w,b
 14290  010A' 0A80               	xorlw	128
 14291  010C' 5900'              	subwfb	(??_strtol+2)& (0+255),w,b
 14292  010E' B0D8               	btfsc	status,0,c
 14293  0110' D029               	goto	l2838
 14294                           
 14295                           ; BSR set to: 0
 14296                           
 14297                           ; BSR set to: 0
 14298                           
 14299                           ; BSR set to: 0
 14300  0112' C010' F000'        	movff	strtol@base,___lmul@multiplier
 14301  0116' C011' F001'        	movff	strtol@base+1,___lmul@multiplier+1
 14302  011A' 0E00               	movlw	0
 14303  011C' BF00'              	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 14304  011E' 0EFF               	movlw	-1
 14305  0120' 6F00'              	movwf	(___lmul@multiplier+2)& (0+255),b
 14306  0122' 6F00'              	movwf	(___lmul@multiplier+3)& (0+255),b
 14307  0124' C017' F004'        	movff	strtol@a,___lmul@multiplicand
 14308  0128' C018' F005'        	movff	strtol@a+1,___lmul@multiplicand+1
 14309  012C' C019' F006'        	movff	strtol@a+2,___lmul@multiplicand+2
 14310  0130' C01A' F007'        	movff	strtol@a+3,___lmul@multiplicand+3
 14311  0134' EC00' F000'        	call	___lmul	;wreg free
 14312  0138' 0100               	movlb	0	; () banked
 14313  013A' 5100'              	movf	strtol@c& (0+255),w,b
 14314  013C' 2500'              	addwf	?___lmul& (0+255),w,b
 14315  013E' 6F00'              	movwf	strtol@a& (0+255),b
 14316  0140' 0E00               	movlw	0
 14317  0142' 2100'              	addwfc	(?___lmul+1)& (0+255),w,b
 14318  0144' 6F00'              	movwf	(strtol@a+1)& (0+255),b
 14319  0146' 0E00               	movlw	0
 14320  0148' 2100'              	addwfc	(?___lmul+2)& (0+255),w,b
 14321  014A' 6F00'              	movwf	(strtol@a+2)& (0+255),b
 14322  014C' 0E00               	movlw	0
 14323  014E' 2100'              	addwfc	(?___lmul+3)& (0+255),w,b
 14324  0150' 6F00'              	movwf	(strtol@a+3)& (0+255),b
 14325                           
 14326                           ; BSR set to: 0
 14327  0152' C00C' FFD9         	movff	strtol@s,fsr2l
 14328  0156' C00D' FFDA         	movff	strtol@s+1,fsr2h
 14329  015A' 50DF               	movf	indf2,w,c
 14330  015C' 6F00'              	movwf	strtol@c& (0+255),b
 14331                           
 14332                           ; BSR set to: 0
 14333  015E' 4B00'              	infsnz	strtol@s& (0+255),f,b
 14334  0160' 2B00'              	incf	(strtol@s+1)& (0+255),f,b
 14335  0162' D7B4               	goto	l2832
 14336  0164'                    l2838:
 14337                           
 14338                           ; BSR set to: 0
 14339  0164' 0100               	movlb	0	; () banked
 14340  0166' 5100'              	movf	strtol@endptr& (0+255),w,b
 14341  0168' 1100'              	iorwf	(strtol@endptr+1)& (0+255),w,b
 14342  016A' B4D8               	btfsc	status,2,c
 14343  016C' D00E               	goto	l2840
 14344                           
 14345                           ; BSR set to: 0
 14346  016E' 0EFF               	movlw	255
 14347  0170' 2500'              	addwf	strtol@s& (0+255),w,b
 14348  0172' 6F00'              	movwf	??_strtol& (0+255),b
 14349  0174' 0EFF               	movlw	255
 14350  0176' 2100'              	addwfc	(strtol@s+1)& (0+255),w,b
 14351  0178' 6F00'              	movwf	(??_strtol+1)& (0+255),b
 14352  017A' C00E' FFD9         	movff	strtol@endptr,fsr2l
 14353  017E' C00F' FFDA         	movff	strtol@endptr+1,fsr2h
 14354  0182' C012' FFDE         	movff	??_strtol,postinc2
 14355  0186' C013' FFDD         	movff	??_strtol+1,postdec2
 14356  018A'                    l2840:
 14357                           
 14358                           ; BSR set to: 0
 14359                           
 14360                           ; BSR set to: 0
 14361  018A' 5100'              	movf	strtol@sign& (0+255),w,b
 14362  018C' B4D8               	btfsc	status,2,c
 14363  018E' D01A               	goto	l2841
 14364                           
 14365                           ; BSR set to: 0
 14366  0190' C017' F012'        	movff	strtol@a,??_strtol
 14367  0194' C018' F013'        	movff	strtol@a+1,??_strtol+1
 14368  0198' C019' F014'        	movff	strtol@a+2,??_strtol+2
 14369  019C' C01A' F015'        	movff	strtol@a+3,??_strtol+3
 14370  01A0' 1F00'              	comf	??_strtol& (0+255),f,b
 14371  01A2' 1F00'              	comf	(??_strtol+1)& (0+255),f,b
 14372  01A4' 1F00'              	comf	(??_strtol+2)& (0+255),f,b
 14373  01A6' 1F00'              	comf	(??_strtol+3)& (0+255),f,b
 14374  01A8' 2B00'              	incf	??_strtol& (0+255),f,b
 14375  01AA' 0E00               	movlw	0
 14376  01AC' 2300'              	addwfc	(??_strtol+1)& (0+255),f,b
 14377  01AE' 2300'              	addwfc	(??_strtol+2)& (0+255),f,b
 14378  01B0' 2300'              	addwfc	(??_strtol+3)& (0+255),f,b
 14379  01B2' C012' F00C'        	movff	??_strtol,?_strtol
 14380  01B6' C013' F00D'        	movff	??_strtol+1,?_strtol+1
 14381  01BA' C014' F00E'        	movff	??_strtol+2,?_strtol+2
 14382  01BE' C015' F00F'        	movff	??_strtol+3,?_strtol+3
 14383                           
 14384                           ; BSR set to: 0
 14385  01C2' 0012               	return	
 14386  01C4'                    l2841:
 14387                           
 14388                           ; BSR set to: 0
 14389  01C4' C017' F00C'        	movff	strtol@a,?_strtol
 14390  01C8' C018' F00D'        	movff	strtol@a+1,?_strtol+1
 14391  01CC' C019' F00E'        	movff	strtol@a+2,?_strtol+2
 14392  01D0' C01A' F00F'        	movff	strtol@a+3,?_strtol+3
 14393                           
 14394                           ; BSR set to: 0
 14395  01D4' 0012               	return		;funcret
 14396  01D6'                    __end_of_strtol:
 14397                           	opt stack 0
 14398                           tosu	equ	0xFFF
 14399                           tosh	equ	0xFFE
 14400                           tosl	equ	0xFFD
 14401                           pclath	equ	0xFFA
 14402                           tblptru	equ	0xFF8
 14403                           tblptrh	equ	0xFF7
 14404                           tblptrl	equ	0xFF6
 14405                           tablat	equ	0xFF5
 14406                           prodh	equ	0xFF4
 14407                           prodl	equ	0xFF3
 14408                           intcon	equ	0xFF2
 14409                           intcon2	equ	0xFF1
 14410                           intcon3	equ	0xFF0
 14411                           indf0	equ	0xFEF
 14412                           postinc0	equ	0xFEE
 14413                           plusw0	equ	0xFEB
 14414                           fsr0h	equ	0xFEA
 14415                           fsr0l	equ	0xFE9
 14416                           wreg	equ	0xFE8
 14417                           indf1	equ	0xFE7
 14418                           postinc1	equ	0xFE6
 14419                           postdec1	equ	0xFE5
 14420                           fsr1h	equ	0xFE2
 14421                           fsr1l	equ	0xFE1
 14422                           indf2	equ	0xFDF
 14423                           postinc2	equ	0xFDE
 14424                           postdec2	equ	0xFDD
 14425                           plusw2	equ	0xFDB
 14426                           fsr2h	equ	0xFDA
 14427                           fsr2l	equ	0xFD9
 14428                           status	equ	0xFD8
 14429                           
 14430 ;; *************** function _toupper *****************
 14431 ;; Defined at:
 14432 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
 14433 ;; Parameters:    Size  Location     Type
 14434 ;;  c               1    wreg     unsigned char 
 14435 ;; Auto vars:     Size  Location     Type
 14436 ;;  c               1    0[BANK0 ] unsigned char 
 14437 ;; Return value:  Size  Location     Type
 14438 ;;                  1    wreg      unsigned char 
 14439 ;; Registers used:
 14440 ;;		wreg, status,2, status,0
 14441 ;; Tracked objects:
 14442 ;;		On entry : 0/0
 14443 ;;		On exit  : 0/0
 14444 ;;		Unchanged: 0/0
 14445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14447 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14449 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14450 ;;Total ram usage:        1 bytes
 14451 ;; Hardware stack levels used:    1
 14452 ;; Hardware stack levels required when called:   11
 14453 ;; This function calls:
 14454 ;;		Nothing
 14455 ;; This function is called by:
 14456 ;;		_strtol
 14457 ;; This function uses a non-reentrant model
 14458 ;;
 14459                           
 14460                           	psect	text56
 14461  0000'                    __ptext56:
 14462                           	opt stack 0
 14463  0000'                    _toupper:
 14464                           	opt stack 13
 14465                           
 14466                           ; BSR set to: 0
 14467                           ;incstack = 0
 14468                           ;toupper@c stored from wreg
 14469  0000' 0100               	movlb	0	; () banked
 14470  0002' 6F00'              	movwf	toupper@c& (0+255),b
 14471  0004' 0E7B               	movlw	123
 14472  0006' 0100               	movlb	0	; () banked
 14473  0008' 6100'              	cpfslt	toupper@c& (0+255),b
 14474  000A' D004               	goto	l2845
 14475                           
 14476                           ; BSR set to: 0
 14477  000C' 0E60               	movlw	96
 14478  000E' 6500'              	cpfsgt	toupper@c& (0+255),b
 14479  0010' D001               	goto	l2845
 14480                           
 14481                           ; BSR set to: 0
 14482  0012' 9B00'              	bcf	toupper@c& (0+255),5,b
 14483  0014'                    l2845:
 14484                           
 14485                           ; BSR set to: 0
 14486                           
 14487                           ; BSR set to: 0
 14488  0014' 5100'              	movf	toupper@c& (0+255),w,b
 14489  0016' 0012               	return	
 14490  0018'                    __end_of_toupper:
 14491                           	opt stack 0
 14492                           tosu	equ	0xFFF
 14493                           tosh	equ	0xFFE
 14494                           tosl	equ	0xFFD
 14495                           pclath	equ	0xFFA
 14496                           tblptru	equ	0xFF8
 14497                           tblptrh	equ	0xFF7
 14498                           tblptrl	equ	0xFF6
 14499                           tablat	equ	0xFF5
 14500                           prodh	equ	0xFF4
 14501                           prodl	equ	0xFF3
 14502                           intcon	equ	0xFF2
 14503                           intcon2	equ	0xFF1
 14504                           intcon3	equ	0xFF0
 14505                           indf0	equ	0xFEF
 14506                           postinc0	equ	0xFEE
 14507                           plusw0	equ	0xFEB
 14508                           fsr0h	equ	0xFEA
 14509                           fsr0l	equ	0xFE9
 14510                           wreg	equ	0xFE8
 14511                           indf1	equ	0xFE7
 14512                           postinc1	equ	0xFE6
 14513                           postdec1	equ	0xFE5
 14514                           fsr1h	equ	0xFE2
 14515                           fsr1l	equ	0xFE1
 14516                           indf2	equ	0xFDF
 14517                           postinc2	equ	0xFDE
 14518                           postdec2	equ	0xFDD
 14519                           plusw2	equ	0xFDB
 14520                           fsr2h	equ	0xFDA
 14521                           fsr2l	equ	0xFD9
 14522                           status	equ	0xFD8
 14523                           
 14524 ;; *************** function _isspace *****************
 14525 ;; Defined at:
 14526 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isspace.c"
 14527 ;; Parameters:    Size  Location     Type
 14528 ;;  c               1    wreg     unsigned char 
 14529 ;; Auto vars:     Size  Location     Type
 14530 ;;  c               1    2[BANK0 ] unsigned char 
 14531 ;; Return value:  Size  Location     Type
 14532 ;;		None               void
 14533 ;; Registers used:
 14534 ;;		wreg, status,2, status,0
 14535 ;; Tracked objects:
 14536 ;;		On entry : 0/0
 14537 ;;		On exit  : 0/0
 14538 ;;		Unchanged: 0/0
 14539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14541 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14542 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14543 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14544 ;;Total ram usage:        3 bytes
 14545 ;; Hardware stack levels used:    1
 14546 ;; Hardware stack levels required when called:   11
 14547 ;; This function calls:
 14548 ;;		Nothing
 14549 ;; This function is called by:
 14550 ;;		_strtol
 14551 ;; This function uses a non-reentrant model
 14552 ;;
 14553                           
 14554                           	psect	text57
 14555  0000'                    __ptext57:
 14556                           	opt stack 0
 14557  0000'                    _isspace:
 14558                           	opt stack 13
 14559                           
 14560                           ; BSR set to: 0
 14561                           ;incstack = 0
 14562                           ;isspace@c stored from wreg
 14563  0000' 0100               	movlb	0	; () banked
 14564  0002' 6F00'              	movwf	isspace@c& (0+255),b
 14565  0004' 0E01               	movlw	1
 14566  0006' 0100               	movlb	0	; () banked
 14567  0008' 6F00'              	movwf	_isspace$5954& (0+255),b
 14568                           
 14569                           ; BSR set to: 0
 14570  000A' 0E20               	movlw	32
 14571  000C' 1900'              	xorwf	isspace@c& (0+255),w,b
 14572  000E' B4D8               	btfsc	status,2,c
 14573  0010' D008               	goto	l2876
 14574                           
 14575                           ; BSR set to: 0
 14576  0012' 0E0E               	movlw	14
 14577  0014' 6100'              	cpfslt	isspace@c& (0+255),b
 14578  0016' D003               	goto	u5270
 14579                           
 14580                           ; BSR set to: 0
 14581  0018' 0E09               	movlw	9
 14582  001A' 6100'              	cpfslt	isspace@c& (0+255),b
 14583  001C' D002               	goto	l2876
 14584  001E'                    u5270:
 14585                           
 14586                           ; BSR set to: 0
 14587                           
 14588                           ; BSR set to: 0
 14589  001E' 0E00               	movlw	0
 14590  0020' 6F00'              	movwf	_isspace$5954& (0+255),b
 14591  0022'                    l2876:
 14592                           
 14593                           ; BSR set to: 0
 14594                           
 14595                           ; BSR set to: 0
 14596  0022' C001' F000'        	movff	_isspace$5954,??_isspace
 14597  0026' 3100'              	rrcf	??_isspace& (0+255),w,b
 14598  0028' 0012               	return	
 14599  002A'                    __end_of_isspace:
 14600                           	opt stack 0
 14601                           tosu	equ	0xFFF
 14602                           tosh	equ	0xFFE
 14603                           tosl	equ	0xFFD
 14604                           pclath	equ	0xFFA
 14605                           tblptru	equ	0xFF8
 14606                           tblptrh	equ	0xFF7
 14607                           tblptrl	equ	0xFF6
 14608                           tablat	equ	0xFF5
 14609                           prodh	equ	0xFF4
 14610                           prodl	equ	0xFF3
 14611                           intcon	equ	0xFF2
 14612                           intcon2	equ	0xFF1
 14613                           intcon3	equ	0xFF0
 14614                           indf0	equ	0xFEF
 14615                           postinc0	equ	0xFEE
 14616                           plusw0	equ	0xFEB
 14617                           fsr0h	equ	0xFEA
 14618                           fsr0l	equ	0xFE9
 14619                           wreg	equ	0xFE8
 14620                           indf1	equ	0xFE7
 14621                           postinc1	equ	0xFE6
 14622                           postdec1	equ	0xFE5
 14623                           fsr1h	equ	0xFE2
 14624                           fsr1l	equ	0xFE1
 14625                           indf2	equ	0xFDF
 14626                           postinc2	equ	0xFDE
 14627                           postdec2	equ	0xFDD
 14628                           plusw2	equ	0xFDB
 14629                           fsr2h	equ	0xFDA
 14630                           fsr2l	equ	0xFD9
 14631                           status	equ	0xFD8
 14632                           
 14633 ;; *************** function _isalpha *****************
 14634 ;; Defined at:
 14635 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isalpha.c"
 14636 ;; Parameters:    Size  Location     Type
 14637 ;;  c               1    wreg     unsigned char 
 14638 ;; Auto vars:     Size  Location     Type
 14639 ;;  c               1    5[BANK0 ] unsigned char 
 14640 ;; Return value:  Size  Location     Type
 14641 ;;		None               void
 14642 ;; Registers used:
 14643 ;;		wreg, status,2, status,0, cstack
 14644 ;; Tracked objects:
 14645 ;;		On entry : 0/0
 14646 ;;		On exit  : 0/0
 14647 ;;		Unchanged: 0/0
 14648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14650 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14652 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14653 ;;Total ram usage:        3 bytes
 14654 ;; Hardware stack levels used:    1
 14655 ;; Hardware stack levels required when called:   12
 14656 ;; This function calls:
 14657 ;;		_isupper
 14658 ;; This function is called by:
 14659 ;;		_strtol
 14660 ;; This function uses a non-reentrant model
 14661 ;;
 14662                           
 14663                           	psect	text58
 14664  0000'                    __ptext58:
 14665                           	opt stack 0
 14666  0000'                    _isalpha:
 14667                           	opt stack 12
 14668                           
 14669                           ; BSR set to: 0
 14670                           ;incstack = 0
 14671                           ;isalpha@c stored from wreg
 14672  0000' 0100               	movlb	0	; () banked
 14673  0002' 6F00'              	movwf	isalpha@c& (0+255),b
 14674  0004' 0E01               	movlw	1
 14675  0006' 0100               	movlb	0	; () banked
 14676  0008' 6F00'              	movwf	_isalpha$5951& (0+255),b
 14677                           
 14678                           ; BSR set to: 0
 14679  000A' 0E7B               	movlw	123
 14680  000C' 6100'              	cpfslt	isalpha@c& (0+255),b
 14681  000E' D003               	goto	u5290
 14682                           
 14683                           ; BSR set to: 0
 14684  0010' 0E61               	movlw	97
 14685  0012' 6100'              	cpfslt	isalpha@c& (0+255),b
 14686  0014' D008               	goto	l2871
 14687  0016'                    u5290:
 14688                           
 14689                           ; BSR set to: 0
 14690                           
 14691                           ; BSR set to: 0
 14692  0016' 5100'              	movf	isalpha@c& (0+255),w,b
 14693  0018' EC00' F000'        	call	_isupper
 14694  001C' B0D8               	btfsc	status,0,c
 14695  001E' D003               	goto	l2871
 14696  0020' 0E00               	movlw	0
 14697  0022' 0100               	movlb	0	; () banked
 14698  0024' 6F00'              	movwf	_isalpha$5951& (0+255),b
 14699  0026'                    l2871:
 14700                           
 14701                           ; BSR set to: 0
 14702  0026' C004' F003'        	movff	_isalpha$5951,??_isalpha
 14703  002A' 0100               	movlb	0	; () banked
 14704  002C' 3100'              	rrcf	??_isalpha& (0+255),w,b
 14705  002E' 0012               	return	
 14706  0030'                    __end_of_isalpha:
 14707                           	opt stack 0
 14708                           tosu	equ	0xFFF
 14709                           tosh	equ	0xFFE
 14710                           tosl	equ	0xFFD
 14711                           pclath	equ	0xFFA
 14712                           tblptru	equ	0xFF8
 14713                           tblptrh	equ	0xFF7
 14714                           tblptrl	equ	0xFF6
 14715                           tablat	equ	0xFF5
 14716                           prodh	equ	0xFF4
 14717                           prodl	equ	0xFF3
 14718                           intcon	equ	0xFF2
 14719                           intcon2	equ	0xFF1
 14720                           intcon3	equ	0xFF0
 14721                           indf0	equ	0xFEF
 14722                           postinc0	equ	0xFEE
 14723                           plusw0	equ	0xFEB
 14724                           fsr0h	equ	0xFEA
 14725                           fsr0l	equ	0xFE9
 14726                           wreg	equ	0xFE8
 14727                           indf1	equ	0xFE7
 14728                           postinc1	equ	0xFE6
 14729                           postdec1	equ	0xFE5
 14730                           fsr1h	equ	0xFE2
 14731                           fsr1l	equ	0xFE1
 14732                           indf2	equ	0xFDF
 14733                           postinc2	equ	0xFDE
 14734                           postdec2	equ	0xFDD
 14735                           plusw2	equ	0xFDB
 14736                           fsr2h	equ	0xFDA
 14737                           fsr2l	equ	0xFD9
 14738                           status	equ	0xFD8
 14739                           
 14740 ;; *************** function _isupper *****************
 14741 ;; Defined at:
 14742 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isupper.c"
 14743 ;; Parameters:    Size  Location     Type
 14744 ;;  c               1    wreg     unsigned char 
 14745 ;; Auto vars:     Size  Location     Type
 14746 ;;  c               1    2[BANK0 ] unsigned char 
 14747 ;; Return value:  Size  Location     Type
 14748 ;;		None               void
 14749 ;; Registers used:
 14750 ;;		wreg, status,2, status,0
 14751 ;; Tracked objects:
 14752 ;;		On entry : 0/0
 14753 ;;		On exit  : 0/0
 14754 ;;		Unchanged: 0/0
 14755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14757 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14758 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14759 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14760 ;;Total ram usage:        3 bytes
 14761 ;; Hardware stack levels used:    1
 14762 ;; Hardware stack levels required when called:   11
 14763 ;; This function calls:
 14764 ;;		Nothing
 14765 ;; This function is called by:
 14766 ;;		_isalpha
 14767 ;; This function uses a non-reentrant model
 14768 ;;
 14769                           
 14770                           	psect	text59
 14771  0000'                    __ptext59:
 14772                           	opt stack 0
 14773  0000'                    _isupper:
 14774                           	opt stack 12
 14775                           
 14776                           ; BSR set to: 0
 14777                           ;incstack = 0
 14778                           ;isupper@c stored from wreg
 14779  0000' 0100               	movlb	0	; () banked
 14780  0002' 6F00'              	movwf	isupper@c& (0+255),b
 14781  0004' 0E00               	movlw	0
 14782  0006' 0100               	movlb	0	; () banked
 14783  0008' 6F00'              	movwf	_isupper$5957& (0+255),b
 14784                           
 14785                           ; BSR set to: 0
 14786  000A' 0E5B               	movlw	91
 14787  000C' 6100'              	cpfslt	isupper@c& (0+255),b
 14788  000E' D005               	goto	l2881
 14789                           
 14790                           ; BSR set to: 0
 14791  0010' 0E40               	movlw	64
 14792  0012' 6500'              	cpfsgt	isupper@c& (0+255),b
 14793  0014' D002               	goto	l2881
 14794                           
 14795                           ; BSR set to: 0
 14796  0016' 0E01               	movlw	1
 14797  0018' 6F00'              	movwf	_isupper$5957& (0+255),b
 14798  001A'                    l2881:
 14799                           
 14800                           ; BSR set to: 0
 14801                           
 14802                           ; BSR set to: 0
 14803  001A' C001' F000'        	movff	_isupper$5957,??_isupper
 14804  001E' 3100'              	rrcf	??_isupper& (0+255),w,b
 14805  0020' 0012               	return	
 14806  0022'                    __end_of_isupper:
 14807                           	opt stack 0
 14808                           tosu	equ	0xFFF
 14809                           tosh	equ	0xFFE
 14810                           tosl	equ	0xFFD
 14811                           pclath	equ	0xFFA
 14812                           tblptru	equ	0xFF8
 14813                           tblptrh	equ	0xFF7
 14814                           tblptrl	equ	0xFF6
 14815                           tablat	equ	0xFF5
 14816                           prodh	equ	0xFF4
 14817                           prodl	equ	0xFF3
 14818                           intcon	equ	0xFF2
 14819                           intcon2	equ	0xFF1
 14820                           intcon3	equ	0xFF0
 14821                           indf0	equ	0xFEF
 14822                           postinc0	equ	0xFEE
 14823                           plusw0	equ	0xFEB
 14824                           fsr0h	equ	0xFEA
 14825                           fsr0l	equ	0xFE9
 14826                           wreg	equ	0xFE8
 14827                           indf1	equ	0xFE7
 14828                           postinc1	equ	0xFE6
 14829                           postdec1	equ	0xFE5
 14830                           fsr1h	equ	0xFE2
 14831                           fsr1l	equ	0xFE1
 14832                           indf2	equ	0xFDF
 14833                           postinc2	equ	0xFDE
 14834                           postdec2	equ	0xFDD
 14835                           plusw2	equ	0xFDB
 14836                           fsr2h	equ	0xFDA
 14837                           fsr2l	equ	0xFD9
 14838                           status	equ	0xFD8
 14839                           
 14840 ;; *************** function _putUSBUSART *****************
 14841 ;; Defined at:
 14842 ;;		line 559 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;  data            2    6[BANK0 ] PTR unsigned char 
 14845 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(236), Welcome(137), 
 14846 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 14847 ;;		 -> WifiTerminal@UartBuffer(200), 
 14848 ;;  length          1    8[BANK0 ] unsigned char 
 14849 ;; Auto vars:     Size  Location     Type
 14850 ;;		None
 14851 ;; Return value:  Size  Location     Type
 14852 ;;                  1    wreg      void 
 14853 ;; Registers used:
 14854 ;;		wreg, status,2, status,0
 14855 ;; Tracked objects:
 14856 ;;		On entry : 0/0
 14857 ;;		On exit  : 0/0
 14858 ;;		Unchanged: 0/0
 14859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14860 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14863 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14864 ;;Total ram usage:        3 bytes
 14865 ;; Hardware stack levels used:    1
 14866 ;; Hardware stack levels required when called:   11
 14867 ;; This function calls:
 14868 ;;		Nothing
 14869 ;; This function is called by:
 14870 ;;		_Terminal
 14871 ;;		_Term_MainSm
 14872 ;;		_WifiTerminal
 14873 ;; This function uses a non-reentrant model
 14874 ;;
 14875                           
 14876                           	psect	text60
 14877  0000'                    __ptext60:
 14878                           	opt stack 0
 14879  0000'                    _putUSBUSART:
 14880                           	opt stack 15
 14881                           
 14882                           ;usb_device_cdc.c: 584: ;
 14883                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 14884                           
 14885                           ; BSR set to: 0
 14886                           ;incstack = 0
 14887  0000' 0102               	movlb	2	; () banked
 14888  0002' 5100'              	movf	_cdc_trf_state& (0+255),w,b
 14889  0004' A4D8               	btfss	status,2,c
 14890  0006' 0012               	return	
 14891                           
 14892                           ; BSR set to: 2
 14893                           ;usb_device_cdc.c: 586: {
 14894                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 14895  0008' C006' F011'        	movff	putUSBUSART@data,_pCDCSrc
 14896  000C' C007' F012'        	movff	putUSBUSART@data+1,_pCDCSrc+1
 14897                           
 14898                           ; BSR set to: 2
 14899  0010' C008' F012'        	movff	putUSBUSART@length,_cdc_tx_len
 14900                           
 14901                           ; BSR set to: 2
 14902  0014' 0E01               	movlw	1
 14903  0016' 0101               	movlb	1	; () banked
 14904  0018' 6F00'              	movwf	_cdc_mem_type& (0+255),b
 14905                           
 14906                           ; BSR set to: 1
 14907  001A' 0E01               	movlw	1
 14908  001C' 0102               	movlb	2	; () banked
 14909  001E' 6F00'              	movwf	_cdc_trf_state& (0+255),b
 14910  0020' 0012               	return	
 14911  0022'                    __end_of_putUSBUSART:
 14912                           	opt stack 0
 14913                           tosu	equ	0xFFF
 14914                           tosh	equ	0xFFE
 14915                           tosl	equ	0xFFD
 14916                           pclath	equ	0xFFA
 14917                           tblptru	equ	0xFF8
 14918                           tblptrh	equ	0xFF7
 14919                           tblptrl	equ	0xFF6
 14920                           tablat	equ	0xFF5
 14921                           prodh	equ	0xFF4
 14922                           prodl	equ	0xFF3
 14923                           intcon	equ	0xFF2
 14924                           intcon2	equ	0xFF1
 14925                           intcon3	equ	0xFF0
 14926                           indf0	equ	0xFEF
 14927                           postinc0	equ	0xFEE
 14928                           plusw0	equ	0xFEB
 14929                           fsr0h	equ	0xFEA
 14930                           fsr0l	equ	0xFE9
 14931                           wreg	equ	0xFE8
 14932                           indf1	equ	0xFE7
 14933                           postinc1	equ	0xFE6
 14934                           postdec1	equ	0xFE5
 14935                           fsr1h	equ	0xFE2
 14936                           fsr1l	equ	0xFE1
 14937                           indf2	equ	0xFDF
 14938                           postinc2	equ	0xFDE
 14939                           postdec2	equ	0xFDD
 14940                           plusw2	equ	0xFDB
 14941                           fsr2h	equ	0xFDA
 14942                           fsr2l	equ	0xFD9
 14943                           status	equ	0xFD8
 14944                           
 14945 ;; *************** function _itoa *****************
 14946 ;; Defined at:
 14947 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 14948 ;; Parameters:    Size  Location     Type
 14949 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 14950 ;;		 -> Terminal@Payload(80), 
 14951 ;;  val             2   18[BANK0 ] int 
 14952 ;;  base            2   20[BANK0 ] int 
 14953 ;; Auto vars:     Size  Location     Type
 14954 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 14955 ;;		 -> Terminal@Payload(80), 
 14956 ;; Return value:  Size  Location     Type
 14957 ;;                  2   16[BANK0 ] PTR unsigned char 
 14958 ;; Registers used:
 14959 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14960 ;; Tracked objects:
 14961 ;;		On entry : 0/0
 14962 ;;		On exit  : 0/0
 14963 ;;		Unchanged: 0/0
 14964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14965 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14966 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14968 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14969 ;;Total ram usage:        8 bytes
 14970 ;; Hardware stack levels used:    1
 14971 ;; Hardware stack levels required when called:   13
 14972 ;; This function calls:
 14973 ;;		_utoa
 14974 ;; This function is called by:
 14975 ;;		_Terminal
 14976 ;; This function uses a non-reentrant model
 14977 ;;
 14978                           
 14979                           	psect	text61
 14980  0000'                    __ptext61:
 14981                           	opt stack 0
 14982  0000'                    _itoa:
 14983                           	opt stack 12
 14984                           
 14985                           ; BSR set to: 2
 14986                           ;incstack = 0
 14987  0000' C010' F016'        	movff	itoa@buf,itoa@cp
 14988  0004' C011' F017'        	movff	itoa@buf+1,itoa@cp+1
 14989  0008' 0100               	movlb	0	; () banked
 14990  000A' AF00'              	btfss	(itoa@val+1)& (0+255),7,b
 14991  000C' D00C               	goto	l2532
 14992                           
 14993                           ; BSR set to: 0
 14994  000E' C010' FFD9         	movff	itoa@buf,fsr2l
 14995  0012' C011' FFDA         	movff	itoa@buf+1,fsr2h
 14996  0016' 0E2D               	movlw	45
 14997  0018' 6EDF               	movwf	indf2,c
 14998                           
 14999                           ; BSR set to: 0
 15000  001A' 4B00'              	infsnz	itoa@buf& (0+255),f,b
 15001  001C' 2B00'              	incf	(itoa@buf+1)& (0+255),f,b
 15002                           
 15003                           ; BSR set to: 0
 15004  001E' 6D00'              	negf	itoa@val& (0+255),b
 15005  0020' 1F00'              	comf	(itoa@val+1)& (0+255),f,b
 15006  0022' B0D8               	btfsc	status,0,c
 15007  0024' 2B00'              	incf	(itoa@val+1)& (0+255),f,b
 15008  0026'                    l2532:
 15009                           
 15010                           ; BSR set to: 0
 15011                           
 15012                           ; BSR set to: 0
 15013  0026' C010' F007'        	movff	itoa@buf,utoa@buf
 15014  002A' C011' F008'        	movff	itoa@buf+1,utoa@buf+1
 15015  002E' C012' F009'        	movff	itoa@val,utoa@val
 15016  0032' C013' F00A'        	movff	itoa@val+1,utoa@val+1
 15017  0036' C014' F00B'        	movff	itoa@base,utoa@base
 15018  003A' C015' F00C'        	movff	itoa@base+1,utoa@base+1
 15019  003E' EC00' F000'        	call	_utoa	;wreg free
 15020  0042' 0012               	return	
 15021  0044'                    __end_of_itoa:
 15022                           	opt stack 0
 15023                           tosu	equ	0xFFF
 15024                           tosh	equ	0xFFE
 15025                           tosl	equ	0xFFD
 15026                           pclath	equ	0xFFA
 15027                           tblptru	equ	0xFF8
 15028                           tblptrh	equ	0xFF7
 15029                           tblptrl	equ	0xFF6
 15030                           tablat	equ	0xFF5
 15031                           prodh	equ	0xFF4
 15032                           prodl	equ	0xFF3
 15033                           intcon	equ	0xFF2
 15034                           intcon2	equ	0xFF1
 15035                           intcon3	equ	0xFF0
 15036                           indf0	equ	0xFEF
 15037                           postinc0	equ	0xFEE
 15038                           plusw0	equ	0xFEB
 15039                           fsr0h	equ	0xFEA
 15040                           fsr0l	equ	0xFE9
 15041                           wreg	equ	0xFE8
 15042                           indf1	equ	0xFE7
 15043                           postinc1	equ	0xFE6
 15044                           postdec1	equ	0xFE5
 15045                           fsr1h	equ	0xFE2
 15046                           fsr1l	equ	0xFE1
 15047                           indf2	equ	0xFDF
 15048                           postinc2	equ	0xFDE
 15049                           postdec2	equ	0xFDD
 15050                           plusw2	equ	0xFDB
 15051                           fsr2h	equ	0xFDA
 15052                           fsr2l	equ	0xFD9
 15053                           status	equ	0xFD8
 15054                           
 15055 ;; *************** function _getsUSBUSART *****************
 15056 ;; Defined at:
 15057 ;;		line 488 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 15058 ;; Parameters:    Size  Location     Type
 15059 ;;  buffer          2    7[BANK0 ] PTR unsigned char 
 15060 ;;		 -> Terminal@UsbRxBuffer(200), WifiTerminal@UsbBuffer(200), 
 15061 ;;  len             1    9[BANK0 ] unsigned char 
 15062 ;; Auto vars:     Size  Location     Type
 15063 ;;		None
 15064 ;; Return value:  Size  Location     Type
 15065 ;;                  1    wreg      unsigned char 
 15066 ;; Registers used:
 15067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15068 ;; Tracked objects:
 15069 ;;		On entry : 0/0
 15070 ;;		On exit  : 0/0
 15071 ;;		Unchanged: 0/0
 15072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15073 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15075 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15076 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15077 ;;Total ram usage:        4 bytes
 15078 ;; Hardware stack levels used:    1
 15079 ;; Hardware stack levels required when called:   12
 15080 ;; This function calls:
 15081 ;;		_USBTransferOnePacket
 15082 ;; This function is called by:
 15083 ;;		_Terminal
 15084 ;;		_WifiTerminal
 15085 ;; This function uses a non-reentrant model
 15086 ;;
 15087                           
 15088                           	psect	text62
 15089  0000'                    __ptext62:
 15090                           	opt stack 0
 15091  0000'                    _getsUSBUSART:
 15092                           	opt stack 13
 15093                           
 15094                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 15095                           
 15096                           ;incstack = 0
 15097  0000' 0E00               	movlw	0
 15098  0002' 6E13'              	movwf	_cdc_rx_len,c
 15099                           
 15100                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 15101  0004' 500C'              	movf	_CDCDataOutHandle,w,c
 15102  0006' 100D'              	iorwf	_CDCDataOutHandle+1,w,c
 15103  0008' B4D8               	btfsc	status,2,c
 15104  000A' D006               	goto	u5530
 15105  000C' C00C' FFD9         	movff	_CDCDataOutHandle,fsr2l
 15106  0010' C00D' FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 15107  0014' BEDF               	btfsc	indf2,7,c
 15108  0016' D03C               	goto	l1677
 15109  0018'                    u5530:
 15110                           
 15111                           ;usb_device_cdc.c: 493: {
 15112                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 15113  0018' EE20 F001          	lfsr	2,1
 15114  001C' 500C'              	movf	_CDCDataOutHandle,w,c
 15115  001E' 26D9               	addwf	fsr2l,f,c
 15116  0020' 500D'              	movf	_CDCDataOutHandle+1,w,c
 15117  0022' 22DA               	addwfc	fsr2h,f,c
 15118  0024' 0100               	movlb	0	; () banked
 15119  0026' 5100'              	movf	getsUSBUSART@len& (0+255),w,b
 15120  0028' 5CDE               	subwf	postinc2,w,c
 15121  002A' B0D8               	btfsc	status,0,c
 15122  002C' D008               	goto	l1680
 15123                           
 15124                           ; BSR set to: 0
 15125                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 15126  002E' EE20 F001          	lfsr	2,1
 15127  0032' 500C'              	movf	_CDCDataOutHandle,w,c
 15128  0034' 26D9               	addwf	fsr2l,f,c
 15129  0036' 500D'              	movf	_CDCDataOutHandle+1,w,c
 15130  0038' 22DA               	addwfc	fsr2h,f,c
 15131  003A' 50DF               	movf	indf2,w,c
 15132  003C' 6F00'              	movwf	getsUSBUSART@len& (0+255),b
 15133  003E'                    l1680:
 15134                           
 15135                           ; BSR set to: 0
 15136                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 15137                           
 15138                           ; BSR set to: 0
 15139  003E' 0E00               	movlw	0
 15140  0040' 6E13'              	movwf	_cdc_rx_len,c
 15141  0042' D013               	goto	l1681
 15142  0044'                    
 15143                           ; BSR set to: 0
 15144                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 15145                           
 15146                           ; BSR set to: 0
 15147  0044' 5013'              	movf	_cdc_rx_len,w,c
 15148  0046' 0D01               	mullw	1
 15149  0048' 0E00'              	movlw	low _cdc_data_rx
 15150  004A' 24F3               	addwf	prodl,w,c
 15151  004C' 6ED9               	movwf	fsr2l,c
 15152  004E' 0E00'              	movlw	high _cdc_data_rx
 15153  0050' 20F4               	addwfc	prodh,w,c
 15154  0052' 6EDA               	movwf	fsr2h,c
 15155  0054' 5013'              	movf	_cdc_rx_len,w,c
 15156  0056' 0D01               	mullw	1
 15157  0058' 50F3               	movf	prodl,w,c
 15158  005A' 2500'              	addwf	getsUSBUSART@buffer& (0+255),w,b
 15159  005C' 6EE1               	movwf	fsr1l,c
 15160  005E' 50F4               	movf	prodh,w,c
 15161  0060' 2100'              	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 15162  0062' 6EE2               	movwf	fsr1h,c
 15163  0064' CFDF FFE7          	movff	indf2,indf1
 15164                           
 15165                           ; BSR set to: 0
 15166  0068' 2A13'              	incf	_cdc_rx_len,f,c
 15167  006A'                    l1681:
 15168                           
 15169                           ; BSR set to: 0
 15170                           
 15171                           ; BSR set to: 0
 15172  006A' 5100'              	movf	getsUSBUSART@len& (0+255),w,b
 15173  006C' 5C13'              	subwf	_cdc_rx_len,w,c
 15174  006E' A0D8               	btfss	status,0,c
 15175  0070' D7E9               	goto	l1682
 15176                           
 15177                           ; BSR set to: 0
 15178                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 15179                           
 15180                           ; BSR set to: 0
 15181  0072' 0E00               	movlw	0
 15182  0074' 6F00'              	movwf	USBTransferOnePacket@dir& (0+255),b
 15183  0076' 0E00'              	movlw	low _cdc_data_rx
 15184  0078' 6F00'              	movwf	USBTransferOnePacket@data& (0+255),b
 15185  007A' 0E00'              	movlw	high _cdc_data_rx
 15186  007C' 6F00'              	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 15187  007E' 0E40               	movlw	64
 15188  0080' 6F00'              	movwf	USBTransferOnePacket@len& (0+255),b
 15189  0082' 0E02               	movlw	2
 15190  0084' EC00' F000'        	call	_USBTransferOnePacket
 15191  0088' C000' F00C'        	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 15192  008C' C001' F00D'        	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 15193  0090'                    l1677:
 15194                           
 15195                           ;usb_device_cdc.c: 513: }
 15196                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 15197  0090' 5013'              	movf	_cdc_rx_len,w,c
 15198  0092' 0012               	return	
 15199  0094'                    __end_of_getsUSBUSART:
 15200                           	opt stack 0
 15201                           tosu	equ	0xFFF
 15202                           tosh	equ	0xFFE
 15203                           tosl	equ	0xFFD
 15204                           pclath	equ	0xFFA
 15205                           tblptru	equ	0xFF8
 15206                           tblptrh	equ	0xFF7
 15207                           tblptrl	equ	0xFF6
 15208                           tablat	equ	0xFF5
 15209                           prodh	equ	0xFF4
 15210                           prodl	equ	0xFF3
 15211                           intcon	equ	0xFF2
 15212                           intcon2	equ	0xFF1
 15213                           intcon3	equ	0xFF0
 15214                           indf0	equ	0xFEF
 15215                           postinc0	equ	0xFEE
 15216                           plusw0	equ	0xFEB
 15217                           fsr0h	equ	0xFEA
 15218                           fsr0l	equ	0xFE9
 15219                           wreg	equ	0xFE8
 15220                           indf1	equ	0xFE7
 15221                           postinc1	equ	0xFE6
 15222                           postdec1	equ	0xFE5
 15223                           fsr1h	equ	0xFE2
 15224                           fsr1l	equ	0xFE1
 15225                           indf2	equ	0xFDF
 15226                           postinc2	equ	0xFDE
 15227                           postdec2	equ	0xFDD
 15228                           plusw2	equ	0xFDB
 15229                           fsr2h	equ	0xFDA
 15230                           fsr2l	equ	0xFD9
 15231                           status	equ	0xFD8
 15232                           
 15233 ;; *************** function _USBTransferOnePacket *****************
 15234 ;; Defined at:
 15235 ;;		line 1013 in file "../Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 15236 ;; Parameters:    Size  Location     Type
 15237 ;;  ep              1    wreg     unsigned char 
 15238 ;;  dir             1    0[BANK0 ] unsigned char 
 15239 ;;  data            2    1[BANK0 ] PTR unsigned char 
 15240 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 15241 ;;  len             1    3[BANK0 ] unsigned char 
 15242 ;; Auto vars:     Size  Location     Type
 15243 ;;  ep              1    4[BANK0 ] unsigned char 
 15244 ;;  handle          2    5[BANK0 ] PTR volatile struct __BD
 15245 ;;		 -> BDT(48), NULL(0), 
 15246 ;; Return value:  Size  Location     Type
 15247 ;;                  2    0[BANK0 ] PTR void 
 15248 ;; Registers used:
 15249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15250 ;; Tracked objects:
 15251 ;;		On entry : 0/0
 15252 ;;		On exit  : 0/0
 15253 ;;		Unchanged: 0/0
 15254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15255 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15256 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15258 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15259 ;;Total ram usage:        7 bytes
 15260 ;; Hardware stack levels used:    1
 15261 ;; Hardware stack levels required when called:   11
 15262 ;; This function calls:
 15263 ;;		Nothing
 15264 ;; This function is called by:
 15265 ;;		_CDCInitEP
 15266 ;;		_getsUSBUSART
 15267 ;;		_CDCTxService
 15268 ;;		_USBCDCEventHandler
 15269 ;; This function uses a non-reentrant model
 15270 ;;
 15271                           
 15272                           	psect	text63
 15273  0000'                    __ptext63:
 15274                           	opt stack 0
 15275  0000'                    _USBTransferOnePacket:
 15276                           	opt stack 13
 15277                           
 15278                           ;incstack = 0
 15279                           ;USBTransferOnePacket@ep stored from wreg
 15280  0000' 0100               	movlb	0	; () banked
 15281  0002' 6F00'              	movwf	USBTransferOnePacket@ep& (0+255),b
 15282                           
 15283                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 15284                           ;usb_device.c: 1018: if(dir != 0)
 15285  0004' 0100               	movlb	0	; () banked
 15286  0006' 5100'              	movf	USBTransferOnePacket@dir& (0+255),w,b
 15287  0008' B4D8               	btfsc	status,2,c
 15288  000A' D007               	goto	l1401
 15289                           
 15290                           ; BSR set to: 0
 15291                           ;usb_device.c: 1019: {
 15292                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 15293  000C' 5100'              	movf	USBTransferOnePacket@ep& (0+255),w,b
 15294  000E' 0D02               	mullw	2
 15295  0010' 0E00'              	movlw	low _pBDTEntryIn
 15296  0012' 24F3               	addwf	prodl,w,c
 15297  0014' 6ED9               	movwf	fsr2l,c
 15298  0016' 0E00'              	movlw	high _pBDTEntryIn
 15299  0018' D006               	goto	L14
 15300  001A'                    l1401:
 15301                           
 15302                           ; BSR set to: 0
 15303                           ;usb_device.c: 1023: else
 15304                           ;usb_device.c: 1024: {
 15305                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 15306                           
 15307                           ; BSR set to: 0
 15308  001A' 5100'              	movf	USBTransferOnePacket@ep& (0+255),w,b
 15309  001C' 0D02               	mullw	2
 15310  001E' 0E00'              	movlw	low _pBDTEntryOut
 15311  0020' 24F3               	addwf	prodl,w,c
 15312  0022' 6ED9               	movwf	fsr2l,c
 15313  0024' 0E00'              	movlw	high _pBDTEntryOut
 15314  0026'                    L14:
 15315  0026' 20F4               	addwfc	prodh,w,c
 15316  0028' 6EDA               	movwf	fsr2h,c
 15317  002A' CFDE F005'         	movff	postinc2,USBTransferOnePacket@handle
 15318  002E' CFDD F006'         	movff	postdec2,USBTransferOnePacket@handle+1
 15319                           
 15320                           ; BSR set to: 0
 15321                           ;usb_device.c: 1027: }
 15322                           ;usb_device.c: 1031: if(handle == 0)
 15323                           
 15324                           ; BSR set to: 0
 15325  0032' 5100'              	movf	USBTransferOnePacket@handle& (0+255),w,b
 15326  0034' 1100'              	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15327  0036' A4D8               	btfss	status,2,c
 15328  0038' D005               	goto	l1403
 15329                           
 15330                           ; BSR set to: 0
 15331                           ;usb_device.c: 1032: {
 15332                           ;usb_device.c: 1033: return 0;
 15333  003A' 0E00               	movlw	0
 15334  003C' 6F00'              	movwf	?_USBTransferOnePacket& (0+255),b
 15335  003E' 0E00               	movlw	0
 15336  0040' 6F00'              	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 15337                           
 15338                           ; BSR set to: 0
 15339  0042' 0012               	return	
 15340  0044'                    l1403:
 15341                           
 15342                           ; BSR set to: 0
 15343                           ;usb_device.c: 1034: }
 15344                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 15345                           
 15346                           ; BSR set to: 0
 15347  0044' EE20 F002          	lfsr	2,2
 15348  0048' 5100'              	movf	USBTransferOnePacket@handle& (0+255),w,b
 15349  004A' 26D9               	addwf	fsr2l,f,c
 15350  004C' 5100'              	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15351  004E' 22DA               	addwfc	fsr2h,f,c
 15352  0050' C001' FFDE         	movff	USBTransferOnePacket@data,postinc2
 15353  0054' C002' FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 15354                           
 15355                           ;usb_device.c: 1048: handle->CNT = len;
 15356  0058' EE20 F001          	lfsr	2,1
 15357  005C' 5100'              	movf	USBTransferOnePacket@handle& (0+255),w,b
 15358  005E' 26D9               	addwf	fsr2l,f,c
 15359  0060' 5100'              	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 15360  0062' 22DA               	addwfc	fsr2h,f,c
 15361  0064' C003' FFDF         	movff	USBTransferOnePacket@len,indf2
 15362                           
 15363                           ; BSR set to: 0
 15364                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 15365  0068' C005' FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15366  006C' C006' FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15367  0070' 0E40               	movlw	64
 15368  0072' 16DF               	andwf	indf2,f,c
 15369                           
 15370                           ; BSR set to: 0
 15371                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 15372  0074' C005' FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15373  0078' C006' FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15374  007C' 0E00               	movlw	0
 15375  007E' 86DB               	bsf	plusw2,3,c
 15376                           
 15377                           ; BSR set to: 0
 15378                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 15379  0080' C005' FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 15380  0084' C006' FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 15381  0088' 0E00               	movlw	0
 15382  008A' 8EDB               	bsf	plusw2,7,c
 15383                           
 15384                           ; BSR set to: 0
 15385                           ;usb_device.c: 1054: if(dir != 0)
 15386  008C' 5100'              	movf	USBTransferOnePacket@dir& (0+255),w,b
 15387  008E' B4D8               	btfsc	status,2,c
 15388  0090' D007               	goto	l1405
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;usb_device.c: 1055: {
 15392                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 15393  0092' 5100'              	movf	USBTransferOnePacket@ep& (0+255),w,b
 15394  0094' 0D02               	mullw	2
 15395  0096' 0E00'              	movlw	low _pBDTEntryIn
 15396  0098' 24F3               	addwf	prodl,w,c
 15397  009A' 6ED9               	movwf	fsr2l,c
 15398  009C' 0E00'              	movlw	high _pBDTEntryIn
 15399  009E' D006               	goto	L15
 15400  00A0'                    l1405:
 15401                           
 15402                           ; BSR set to: 0
 15403                           ;usb_device.c: 1059: else
 15404                           ;usb_device.c: 1060: {
 15405                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 15406                           
 15407                           ; BSR set to: 0
 15408  00A0' 5100'              	movf	USBTransferOnePacket@ep& (0+255),w,b
 15409  00A2' 0D02               	mullw	2
 15410  00A4' 0E00'              	movlw	low _pBDTEntryOut
 15411  00A6' 24F3               	addwf	prodl,w,c
 15412  00A8' 6ED9               	movwf	fsr2l,c
 15413  00AA' 0E00'              	movlw	high _pBDTEntryOut
 15414  00AC'                    L15:
 15415  00AC' 20F4               	addwfc	prodh,w,c
 15416  00AE' 6EDA               	movwf	fsr2h,c
 15417  00B0' 0E04               	movlw	4
 15418  00B2' 1ADF               	xorwf	indf2,f,c
 15419                           
 15420                           ; BSR set to: 0
 15421                           ;usb_device.c: 1063: }
 15422                           ;usb_device.c: 1064: return (void*)handle;
 15423                           
 15424                           ; BSR set to: 0
 15425  00B4' C005' F000'        	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 15426  00B8' C006' F001'        	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 15427  00BC' 0012               	return	
 15428  00BE'                    __end_of_USBTransferOnePacket:
 15429                           	opt stack 0
 15430                           tosu	equ	0xFFF
 15431                           tosh	equ	0xFFE
 15432                           tosl	equ	0xFFD
 15433                           pclath	equ	0xFFA
 15434                           tblptru	equ	0xFF8
 15435                           tblptrh	equ	0xFF7
 15436                           tblptrl	equ	0xFF6
 15437                           tablat	equ	0xFF5
 15438                           prodh	equ	0xFF4
 15439                           prodl	equ	0xFF3
 15440                           intcon	equ	0xFF2
 15441                           intcon2	equ	0xFF1
 15442                           intcon3	equ	0xFF0
 15443                           indf0	equ	0xFEF
 15444                           postinc0	equ	0xFEE
 15445                           plusw0	equ	0xFEB
 15446                           fsr0h	equ	0xFEA
 15447                           fsr0l	equ	0xFE9
 15448                           wreg	equ	0xFE8
 15449                           indf1	equ	0xFE7
 15450                           postinc1	equ	0xFE6
 15451                           postdec1	equ	0xFE5
 15452                           fsr1h	equ	0xFE2
 15453                           fsr1l	equ	0xFE1
 15454                           indf2	equ	0xFDF
 15455                           postinc2	equ	0xFDE
 15456                           postdec2	equ	0xFDD
 15457                           plusw2	equ	0xFDB
 15458                           fsr2h	equ	0xFDA
 15459                           fsr2l	equ	0xFD9
 15460                           status	equ	0xFD8
 15461                           
 15462 ;; *************** function _atoi *****************
 15463 ;; Defined at:
 15464 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 15467 ;;		 -> Terminal@Addr(4), Terminal@Len(4), 
 15468 ;; Auto vars:     Size  Location     Type
 15469 ;;  a               2   11[BANK0 ] int 
 15470 ;;  sign            1   10[BANK0 ] unsigned char 
 15471 ;; Return value:  Size  Location     Type
 15472 ;;                  2    6[BANK0 ] int 
 15473 ;; Registers used:
 15474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15475 ;; Tracked objects:
 15476 ;;		On entry : 0/0
 15477 ;;		On exit  : 0/0
 15478 ;;		Unchanged: 0/0
 15479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15480 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15481 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15482 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15483 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15484 ;;Total ram usage:        7 bytes
 15485 ;; Hardware stack levels used:    1
 15486 ;; Hardware stack levels required when called:   12
 15487 ;; This function calls:
 15488 ;;		___wmul
 15489 ;;		_isdigit
 15490 ;; This function is called by:
 15491 ;;		_Terminal
 15492 ;; This function uses a non-reentrant model
 15493 ;;
 15494                           
 15495                           	psect	text64
 15496  0000'                    __ptext64:
 15497                           	opt stack 0
 15498  0000'                    _atoi:
 15499                           	opt stack 13
 15500                           
 15501                           ; BSR set to: 0
 15502                           ;incstack = 0
 15503  0000' D003               	goto	l2345
 15504  0002' 0100               	movlb	0	; () banked
 15505  0004' 4B00'              	infsnz	atoi@s& (0+255),f,b
 15506  0006' 2B00'              	incf	(atoi@s+1)& (0+255),f,b
 15507  0008'                    l2345:
 15508                           
 15509                           ; BSR set to: 0
 15510  0008' C006' FFD9         	movff	atoi@s,fsr2l
 15511  000C' C007' FFDA         	movff	atoi@s+1,fsr2h
 15512  0010' 0E20               	movlw	32
 15513  0012' 18DE               	xorwf	postinc2,w,c
 15514  0014' B4D8               	btfsc	status,2,c
 15515  0016' D7F5               	goto	l2346
 15516  0018' C006' FFD9         	movff	atoi@s,fsr2l
 15517  001C' C007' FFDA         	movff	atoi@s+1,fsr2h
 15518  0020' 0E09               	movlw	9
 15519  0022' 18DE               	xorwf	postinc2,w,c
 15520  0024' B4D8               	btfsc	status,2,c
 15521  0026' D7ED               	goto	l2346
 15522  0028' 0E00               	movlw	0
 15523  002A' 0100               	movlb	0	; () banked
 15524  002C' 6F00'              	movwf	(atoi@a+1)& (0+255),b
 15525  002E' 0E00               	movlw	0
 15526  0030' 6F00'              	movwf	atoi@a& (0+255),b
 15527  0032' 0E00               	movlw	0
 15528  0034' 6F00'              	movwf	atoi@sign& (0+255),b
 15529                           
 15530                           ; BSR set to: 0
 15531  0036' C006' FFD9         	movff	atoi@s,fsr2l
 15532  003A' C007' FFDA         	movff	atoi@s+1,fsr2h
 15533  003E' 0E2D               	movlw	45
 15534  0040' 18DE               	xorwf	postinc2,w,c
 15535  0042' A4D8               	btfss	status,2,c
 15536  0044' D002               	goto	l2348
 15537                           
 15538                           ; BSR set to: 0
 15539  0046' 2B00'              	incf	atoi@sign& (0+255),f,b
 15540  0048' D026               	goto	l7541
 15541  004A'                    l2348:
 15542                           
 15543                           ; BSR set to: 0
 15544                           
 15545                           ; BSR set to: 0
 15546  004A' C006' FFD9         	movff	atoi@s,fsr2l
 15547  004E' C007' FFDA         	movff	atoi@s+1,fsr2h
 15548  0052' 0E2B               	movlw	43
 15549  0054' 18DE               	xorwf	postinc2,w,c
 15550  0056' A4D8               	btfss	status,2,c
 15551  0058' D020               	goto	l2351
 15552  005A' D01D               	goto	l7541
 15553  005C'                    
 15554                           ; BSR set to: 0
 15555  005C' C00B' F000'        	movff	atoi@a,___wmul@multiplier
 15556  0060' C00C' F001'        	movff	atoi@a+1,___wmul@multiplier+1
 15557  0064' 0E00               	movlw	0
 15558  0066' 0100               	movlb	0	; () banked
 15559  0068' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 15560  006A' 0E0A               	movlw	10
 15561  006C' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 15562  006E' EC00' F000'        	call	___wmul	;wreg free
 15563  0072' C006' FFD9         	movff	atoi@s,fsr2l
 15564  0076' C007' FFDA         	movff	atoi@s+1,fsr2h
 15565  007A' 50DF               	movf	indf2,w,c
 15566  007C' 0100               	movlb	0	; () banked
 15567  007E' 6F00'              	movwf	??_atoi& (0+255),b
 15568  0080' 6B00'              	clrf	(??_atoi+1)& (0+255),b
 15569  0082' 5100'              	movf	?___wmul& (0+255),w,b
 15570  0084' 2700'              	addwf	??_atoi& (0+255),f,b
 15571  0086' 5100'              	movf	(?___wmul+1)& (0+255),w,b
 15572  0088' 2300'              	addwfc	(??_atoi+1)& (0+255),f,b
 15573  008A' 0ED0               	movlw	208
 15574  008C' 2500'              	addwf	??_atoi& (0+255),w,b
 15575  008E' 6F00'              	movwf	atoi@a& (0+255),b
 15576  0090' 0EFF               	movlw	255
 15577  0092' 2100'              	addwfc	(??_atoi+1)& (0+255),w,b
 15578  0094' 6F00'              	movwf	(atoi@a+1)& (0+255),b
 15579  0096'                    l7541:
 15580                           
 15581                           ; BSR set to: 0
 15582  0096' 4B00'              	infsnz	atoi@s& (0+255),f,b
 15583  0098' 2B00'              	incf	(atoi@s+1)& (0+255),f,b
 15584  009A'                    l2351:
 15585                           
 15586                           ; BSR set to: 0
 15587                           
 15588                           ; BSR set to: 0
 15589  009A' C006' FFD9         	movff	atoi@s,fsr2l
 15590  009E' C007' FFDA         	movff	atoi@s+1,fsr2h
 15591  00A2' 50DF               	movf	indf2,w,c
 15592  00A4' EC00' F000'        	call	_isdigit
 15593  00A8' B0D8               	btfsc	status,0,c
 15594  00AA' D7D8               	goto	l2352
 15595  00AC' 0100               	movlb	0	; () banked
 15596  00AE' 5100'              	movf	atoi@sign& (0+255),w,b
 15597  00B0' B4D8               	btfsc	status,2,c
 15598  00B2' D00D               	goto	l2354
 15599                           
 15600                           ; BSR set to: 0
 15601  00B4' C00B' F008'        	movff	atoi@a,??_atoi
 15602  00B8' C00C' F009'        	movff	atoi@a+1,??_atoi+1
 15603  00BC' 1F00'              	comf	??_atoi& (0+255),f,b
 15604  00BE' 1F00'              	comf	(??_atoi+1)& (0+255),f,b
 15605  00C0' 4B00'              	infsnz	??_atoi& (0+255),f,b
 15606  00C2' 2B00'              	incf	(??_atoi+1)& (0+255),f,b
 15607  00C4' C008' F006'        	movff	??_atoi,?_atoi
 15608  00C8' C009' F007'        	movff	??_atoi+1,?_atoi+1
 15609  00CC' 0012               	return	
 15610  00CE'                    l2354:
 15611                           
 15612                           ; BSR set to: 0
 15613  00CE' C00B' F006'        	movff	atoi@a,?_atoi
 15614  00D2' C00C' F007'        	movff	atoi@a+1,?_atoi+1
 15615                           
 15616                           ; BSR set to: 0
 15617  00D6' 0012               	return		;funcret
 15618  00D8'                    __end_of_atoi:
 15619                           	opt stack 0
 15620                           tosu	equ	0xFFF
 15621                           tosh	equ	0xFFE
 15622                           tosl	equ	0xFFD
 15623                           pclath	equ	0xFFA
 15624                           tblptru	equ	0xFF8
 15625                           tblptrh	equ	0xFF7
 15626                           tblptrl	equ	0xFF6
 15627                           tablat	equ	0xFF5
 15628                           prodh	equ	0xFF4
 15629                           prodl	equ	0xFF3
 15630                           intcon	equ	0xFF2
 15631                           intcon2	equ	0xFF1
 15632                           intcon3	equ	0xFF0
 15633                           indf0	equ	0xFEF
 15634                           postinc0	equ	0xFEE
 15635                           plusw0	equ	0xFEB
 15636                           fsr0h	equ	0xFEA
 15637                           fsr0l	equ	0xFE9
 15638                           wreg	equ	0xFE8
 15639                           indf1	equ	0xFE7
 15640                           postinc1	equ	0xFE6
 15641                           postdec1	equ	0xFE5
 15642                           fsr1h	equ	0xFE2
 15643                           fsr1l	equ	0xFE1
 15644                           indf2	equ	0xFDF
 15645                           postinc2	equ	0xFDE
 15646                           postdec2	equ	0xFDD
 15647                           plusw2	equ	0xFDB
 15648                           fsr2h	equ	0xFDA
 15649                           fsr2l	equ	0xFD9
 15650                           status	equ	0xFD8
 15651                           
 15652 ;; *************** function _isdigit *****************
 15653 ;; Defined at:
 15654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 15655 ;; Parameters:    Size  Location     Type
 15656 ;;  c               1    wreg     unsigned char 
 15657 ;; Auto vars:     Size  Location     Type
 15658 ;;  c               1    2[BANK0 ] unsigned char 
 15659 ;; Return value:  Size  Location     Type
 15660 ;;		None               void
 15661 ;; Registers used:
 15662 ;;		wreg, status,2, status,0
 15663 ;; Tracked objects:
 15664 ;;		On entry : 0/0
 15665 ;;		On exit  : 0/0
 15666 ;;		Unchanged: 0/0
 15667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15669 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15670 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15671 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15672 ;;Total ram usage:        3 bytes
 15673 ;; Hardware stack levels used:    1
 15674 ;; Hardware stack levels required when called:   11
 15675 ;; This function calls:
 15676 ;;		Nothing
 15677 ;; This function is called by:
 15678 ;;		_atoi
 15679 ;;		_strtol
 15680 ;; This function uses a non-reentrant model
 15681 ;;
 15682                           
 15683                           	psect	text65
 15684  0000'                    __ptext65:
 15685                           	opt stack 0
 15686  0000'                    _isdigit:
 15687                           	opt stack 13
 15688                           
 15689                           ; BSR set to: 0
 15690                           ;incstack = 0
 15691                           ;isdigit@c stored from wreg
 15692  0000' 0100               	movlb	0	; () banked
 15693  0002' 6F00'              	movwf	isdigit@c& (0+255),b
 15694  0004' 0E00               	movlw	0
 15695  0006' 0100               	movlb	0	; () banked
 15696  0008' 6F00'              	movwf	_isdigit$5686& (0+255),b
 15697                           
 15698                           ; BSR set to: 0
 15699  000A' 0E3A               	movlw	58
 15700  000C' 6100'              	cpfslt	isdigit@c& (0+255),b
 15701  000E' D005               	goto	l2526
 15702                           
 15703                           ; BSR set to: 0
 15704  0010' 0E2F               	movlw	47
 15705  0012' 6500'              	cpfsgt	isdigit@c& (0+255),b
 15706  0014' D002               	goto	l2526
 15707                           
 15708                           ; BSR set to: 0
 15709  0016' 0E01               	movlw	1
 15710  0018' 6F00'              	movwf	_isdigit$5686& (0+255),b
 15711  001A'                    l2526:
 15712                           
 15713                           ; BSR set to: 0
 15714                           
 15715                           ; BSR set to: 0
 15716  001A' C001' F000'        	movff	_isdigit$5686,??_isdigit
 15717  001E' 3100'              	rrcf	??_isdigit& (0+255),w,b
 15718  0020' 0012               	return	
 15719  0022'                    __end_of_isdigit:
 15720                           	opt stack 0
 15721                           tosu	equ	0xFFF
 15722                           tosh	equ	0xFFE
 15723                           tosl	equ	0xFFD
 15724                           pclath	equ	0xFFA
 15725                           tblptru	equ	0xFF8
 15726                           tblptrh	equ	0xFF7
 15727                           tblptrl	equ	0xFF6
 15728                           tablat	equ	0xFF5
 15729                           prodh	equ	0xFF4
 15730                           prodl	equ	0xFF3
 15731                           intcon	equ	0xFF2
 15732                           intcon2	equ	0xFF1
 15733                           intcon3	equ	0xFF0
 15734                           indf0	equ	0xFEF
 15735                           postinc0	equ	0xFEE
 15736                           plusw0	equ	0xFEB
 15737                           fsr0h	equ	0xFEA
 15738                           fsr0l	equ	0xFE9
 15739                           wreg	equ	0xFE8
 15740                           indf1	equ	0xFE7
 15741                           postinc1	equ	0xFE6
 15742                           postdec1	equ	0xFE5
 15743                           fsr1h	equ	0xFE2
 15744                           fsr1l	equ	0xFE1
 15745                           indf2	equ	0xFDF
 15746                           postinc2	equ	0xFDE
 15747                           postdec2	equ	0xFDD
 15748                           plusw2	equ	0xFDB
 15749                           fsr2h	equ	0xFDA
 15750                           fsr2l	equ	0xFD9
 15751                           status	equ	0xFD8
 15752                           
 15753 ;; *************** function _I2cSlv_SendI2cMsg *****************
 15754 ;; Defined at:
 15755 ;;		line 240 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 15756 ;; Parameters:    Size  Location     Type
 15757 ;;  TxBuffer        2    3[BANK0 ] PTR unsigned char 
 15758 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 15759 ;;  SlaveAddr       1    5[BANK0 ] unsigned char 
 15760 ;;  DataLenght      1    6[BANK0 ] unsigned char 
 15761 ;; Auto vars:     Size  Location     Type
 15762 ;;  TxSts           1    7[BANK0 ] unsigned char 
 15763 ;; Return value:  Size  Location     Type
 15764 ;;                  1    wreg      unsigned char 
 15765 ;; Registers used:
 15766 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15767 ;; Tracked objects:
 15768 ;;		On entry : 0/0
 15769 ;;		On exit  : 0/0
 15770 ;;		Unchanged: 0/0
 15771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15772 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15773 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15775 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15776 ;;Total ram usage:        5 bytes
 15777 ;; Hardware stack levels used:    1
 15778 ;; Hardware stack levels required when called:   12
 15779 ;; This function calls:
 15780 ;;		_GenerateEvt
 15781 ;; This function is called by:
 15782 ;;		_Terminal
 15783 ;; This function uses a non-reentrant model
 15784 ;;
 15785                           
 15786                           	psect	text66
 15787  0000'                    __ptext66:
 15788                           	opt stack 0
 15789  0000'                    _I2cSlv_SendI2cMsg:
 15790                           	opt stack 13
 15791                           
 15792                           ;i2c_slv.c: 242: UINT8 TxSts = 0u;
 15793                           
 15794                           ; BSR set to: 0
 15795                           ;incstack = 0
 15796  0000' 0E00               	movlw	0
 15797  0002' 0100               	movlb	0	; () banked
 15798  0004' 6F00'              	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15799                           
 15800                           ; BSR set to: 0
 15801                           ;i2c_slv.c: 244: if (I2cComSts != TxInProgress)
 15802  0006' 0418'              	decf	_I2cComSts,w,c
 15803  0008' B4D8               	btfsc	status,2,c
 15804  000A' D016               	goto	l1193
 15805                           
 15806                           ; BSR set to: 0
 15807                           ;i2c_slv.c: 245: {
 15808                           ;i2c_slv.c: 247: I2cTxPacket.SlaveAddress = SlaveAddr;
 15809  000C' C005' F0D2'        	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 15810                           
 15811                           ; BSR set to: 0
 15812                           ;i2c_slv.c: 248: I2cTxPacket.ReadWrite = ((UINT8)(0));
 15813  0010' 0E00               	movlw	0
 15814  0012' 0103               	movlb	3	; () banked
 15815  0014' 6F00'              	movwf	(_I2cTxPacket+1)& (0+255),b
 15816                           
 15817                           ; BSR set to: 3
 15818                           ;i2c_slv.c: 249: I2cTxPacket.Lenght = DataLenght;
 15819  0016' C006' F0D6'        	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 15820                           
 15821                           ; BSR set to: 3
 15822                           ;i2c_slv.c: 250: I2cTxPacket.Buffer = TxBuffer;
 15823  001A' C003' F0D4'        	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 15824  001E' C004' F0D5'        	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 15825                           
 15826                           ; BSR set to: 3
 15827                           ;i2c_slv.c: 253: GenerateEvt(&I2cWriteDataEvt);
 15828  0022' 0E00'              	movlw	low _I2cWriteDataEvt
 15829  0024' 0100               	movlb	0	; () banked
 15830  0026' 6F00'              	movwf	GenerateEvt@Event& (0+255),b
 15831  0028' 0E00'              	movlw	high _I2cWriteDataEvt
 15832  002A' 6F00'              	movwf	(GenerateEvt@Event+1)& (0+255),b
 15833  002C' EC00' F000'        	call	_GenerateEvt	;wreg free
 15834                           
 15835                           ;i2c_slv.c: 255: TxSts = 1u;
 15836  0030' 0E01               	movlw	1
 15837  0032' 0100               	movlb	0	; () banked
 15838  0034' 6F00'              	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15839                           
 15840                           ;i2c_slv.c: 256: }
 15841  0036' 0012               	return	
 15842  0038'                    l1193:
 15843                           
 15844                           ; BSR set to: 0
 15845                           ;i2c_slv.c: 257: else
 15846                           ;i2c_slv.c: 258: {
 15847                           ;i2c_slv.c: 260: TxSts = 0u;
 15848                           
 15849                           ; BSR set to: 0
 15850  0038' 0E00               	movlw	0
 15851  003A' 6F00'              	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 15852                           
 15853                           ; BSR set to: 0
 15854  003C' 0012               	return	
 15855  003E'                    __end_of_I2cSlv_SendI2cMsg:
 15856                           	opt stack 0
 15857                           tosu	equ	0xFFF
 15858                           tosh	equ	0xFFE
 15859                           tosl	equ	0xFFD
 15860                           pclath	equ	0xFFA
 15861                           tblptru	equ	0xFF8
 15862                           tblptrh	equ	0xFF7
 15863                           tblptrl	equ	0xFF6
 15864                           tablat	equ	0xFF5
 15865                           prodh	equ	0xFF4
 15866                           prodl	equ	0xFF3
 15867                           intcon	equ	0xFF2
 15868                           intcon2	equ	0xFF1
 15869                           intcon3	equ	0xFF0
 15870                           indf0	equ	0xFEF
 15871                           postinc0	equ	0xFEE
 15872                           plusw0	equ	0xFEB
 15873                           fsr0h	equ	0xFEA
 15874                           fsr0l	equ	0xFE9
 15875                           wreg	equ	0xFE8
 15876                           indf1	equ	0xFE7
 15877                           postinc1	equ	0xFE6
 15878                           postdec1	equ	0xFE5
 15879                           fsr1h	equ	0xFE2
 15880                           fsr1l	equ	0xFE1
 15881                           indf2	equ	0xFDF
 15882                           postinc2	equ	0xFDE
 15883                           postdec2	equ	0xFDD
 15884                           plusw2	equ	0xFDB
 15885                           fsr2h	equ	0xFDA
 15886                           fsr2l	equ	0xFD9
 15887                           status	equ	0xFD8
 15888                           
 15889 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 15890 ;; Defined at:
 15891 ;;		line 277 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 15892 ;; Parameters:    Size  Location     Type
 15893 ;;  RxBuffer        2    3[BANK0 ] PTR unsigned char 
 15894 ;;		 -> Terminal@TermRxBuffer(50), 
 15895 ;;  SlaveAddr       1    5[BANK0 ] unsigned char 
 15896 ;;  DataLenght      1    6[BANK0 ] unsigned char 
 15897 ;; Auto vars:     Size  Location     Type
 15898 ;;  RxSts           1    7[BANK0 ] unsigned char 
 15899 ;; Return value:  Size  Location     Type
 15900 ;;                  1    wreg      unsigned char 
 15901 ;; Registers used:
 15902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15903 ;; Tracked objects:
 15904 ;;		On entry : 0/0
 15905 ;;		On exit  : 0/0
 15906 ;;		Unchanged: 0/0
 15907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15908 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15911 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15912 ;;Total ram usage:        5 bytes
 15913 ;; Hardware stack levels used:    1
 15914 ;; Hardware stack levels required when called:   12
 15915 ;; This function calls:
 15916 ;;		_GenerateEvt
 15917 ;; This function is called by:
 15918 ;;		_Terminal
 15919 ;; This function uses a non-reentrant model
 15920 ;;
 15921                           
 15922                           	psect	text67
 15923  0000'                    __ptext67:
 15924                           	opt stack 0
 15925  0000'                    _I2cSlv_ReceiveI2cMsg:
 15926                           	opt stack 13
 15927                           
 15928                           ;i2c_slv.c: 279: UINT8 RxSts = 0u;
 15929                           
 15930                           ; BSR set to: 0
 15931                           ;incstack = 0
 15932  0000' 0E00               	movlw	0
 15933  0002' 0100               	movlb	0	; () banked
 15934  0004' 6F00'              	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15935                           
 15936                           ; BSR set to: 0
 15937                           ;i2c_slv.c: 281: if (I2cComSts != RxInProgress)
 15938  0006' 0E02               	movlw	2
 15939  0008' 1818'              	xorwf	_I2cComSts,w,c
 15940  000A' B4D8               	btfsc	status,2,c
 15941  000C' D018               	goto	l1198
 15942                           
 15943                           ; BSR set to: 0
 15944                           ;i2c_slv.c: 282: {
 15945                           ;i2c_slv.c: 284: I2cRxPacket.SlaveAddress = SlaveAddr;
 15946  000E' C005' F0CC'        	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 15947                           
 15948                           ; BSR set to: 0
 15949                           ;i2c_slv.c: 285: I2cRxPacket.ReadWrite = ((UINT8)(1));
 15950  0012' 0E01               	movlw	1
 15951  0014' 0103               	movlb	3	; () banked
 15952  0016' 6F00'              	movwf	(_I2cRxPacket+1)& (0+255),b
 15953                           
 15954                           ; BSR set to: 3
 15955                           ;i2c_slv.c: 287: I2cRxPacket.Lenght = DataLenght + 1;
 15956  0018' 0100               	movlb	0	; () banked
 15957  001A' 2900'              	incf	I2cSlv_ReceiveI2cMsg@DataLenght& (0+255),w,b
 15958  001C' 0103               	movlb	3	; () banked
 15959  001E' 6F00'              	movwf	(_I2cRxPacket+4)& (0+255),b
 15960                           
 15961                           ; BSR set to: 3
 15962                           ;i2c_slv.c: 288: I2cRxPacket.Buffer = RxBuffer;
 15963  0020' C003' F0CE'        	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 15964  0024' C004' F0CF'        	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 15965                           
 15966                           ; BSR set to: 3
 15967                           ;i2c_slv.c: 291: GenerateEvt(&I2cReadDataEvt);
 15968  0028' 0E00'              	movlw	low _I2cReadDataEvt
 15969  002A' 0100               	movlb	0	; () banked
 15970  002C' 6F00'              	movwf	GenerateEvt@Event& (0+255),b
 15971  002E' 0E00'              	movlw	high _I2cReadDataEvt
 15972  0030' 6F00'              	movwf	(GenerateEvt@Event+1)& (0+255),b
 15973  0032' EC00' F000'        	call	_GenerateEvt	;wreg free
 15974                           
 15975                           ;i2c_slv.c: 293: RxSts = 1u;
 15976  0036' 0E01               	movlw	1
 15977  0038' 0100               	movlb	0	; () banked
 15978  003A' 6F00'              	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15979                           
 15980                           ;i2c_slv.c: 294: }
 15981  003C' 0012               	return	
 15982  003E'                    l1198:
 15983                           
 15984                           ; BSR set to: 0
 15985                           ;i2c_slv.c: 295: else
 15986                           ;i2c_slv.c: 296: {
 15987                           ;i2c_slv.c: 298: RxSts = 0u;
 15988                           
 15989                           ; BSR set to: 0
 15990  003E' 0E00               	movlw	0
 15991  0040' 6F00'              	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 15992                           
 15993                           ; BSR set to: 0
 15994  0042' 0012               	return	
 15995  0044'                    __end_of_I2cSlv_ReceiveI2cMsg:
 15996                           	opt stack 0
 15997                           tosu	equ	0xFFF
 15998                           tosh	equ	0xFFE
 15999                           tosl	equ	0xFFD
 16000                           pclath	equ	0xFFA
 16001                           tblptru	equ	0xFF8
 16002                           tblptrh	equ	0xFF7
 16003                           tblptrl	equ	0xFF6
 16004                           tablat	equ	0xFF5
 16005                           prodh	equ	0xFF4
 16006                           prodl	equ	0xFF3
 16007                           intcon	equ	0xFF2
 16008                           intcon2	equ	0xFF1
 16009                           intcon3	equ	0xFF0
 16010                           indf0	equ	0xFEF
 16011                           postinc0	equ	0xFEE
 16012                           plusw0	equ	0xFEB
 16013                           fsr0h	equ	0xFEA
 16014                           fsr0l	equ	0xFE9
 16015                           wreg	equ	0xFE8
 16016                           indf1	equ	0xFE7
 16017                           postinc1	equ	0xFE6
 16018                           postdec1	equ	0xFE5
 16019                           fsr1h	equ	0xFE2
 16020                           fsr1l	equ	0xFE1
 16021                           indf2	equ	0xFDF
 16022                           postinc2	equ	0xFDE
 16023                           postdec2	equ	0xFDD
 16024                           plusw2	equ	0xFDB
 16025                           fsr2h	equ	0xFDA
 16026                           fsr2l	equ	0xFD9
 16027                           status	equ	0xFD8
 16028                           
 16029 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 16030 ;; Defined at:
 16031 ;;		line 313 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 16032 ;; Parameters:    Size  Location     Type
 16033 ;;		None
 16034 ;; Auto vars:     Size  Location     Type
 16035 ;;  Result          1    4[BANK0 ] enum E8871
 16036 ;; Return value:  Size  Location     Type
 16037 ;;                  1    wreg      enum E8871
 16038 ;; Registers used:
 16039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16040 ;; Tracked objects:
 16041 ;;		On entry : 0/0
 16042 ;;		On exit  : 0/0
 16043 ;;		Unchanged: 0/0
 16044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16046 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16048 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16049 ;;Total ram usage:        1 bytes
 16050 ;; Hardware stack levels used:    1
 16051 ;; Hardware stack levels required when called:   12
 16052 ;; This function calls:
 16053 ;;		_ReceiveEvt
 16054 ;; This function is called by:
 16055 ;;		_Terminal
 16056 ;; This function uses a non-reentrant model
 16057 ;;
 16058                           
 16059                           	psect	text68
 16060  0000'                    __ptext68:
 16061                           	opt stack 0
 16062  0000'                    _I2cSlv_I2cReadMsgSts:
 16063                           	opt stack 13
 16064                           
 16065                           ;i2c_slv.c: 316: I2cReadMsgStsType Result;
 16066                           ;i2c_slv.c: 319: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 16067                           
 16068                           ; BSR set to: 0
 16069                           ;incstack = 0
 16070  0000' 0E00'              	movlw	low (_I2cRxPacket+5)
 16071  0002' 0100               	movlb	0	; () banked
 16072  0004' 6F00'              	movwf	ReceiveEvt@Event& (0+255),b
 16073  0006' 0E00'              	movlw	high (_I2cRxPacket+5)
 16074  0008' 6F00'              	movwf	(ReceiveEvt@Event+1)& (0+255),b
 16075  000A' EC00' F000'        	call	_ReceiveEvt	;wreg free
 16076  000E' 0900               	iorlw	0
 16077  0010' B4D8               	btfsc	status,2,c
 16078  0012' D002               	goto	l1203
 16079                           
 16080                           ;i2c_slv.c: 320: {
 16081                           ;i2c_slv.c: 321: Result = MessageReceived;
 16082  0014' 0E01               	movlw	1
 16083  0016' D001               	goto	L16
 16084  0018'                    l1203:
 16085                           
 16086                           ;i2c_slv.c: 323: else
 16087                           ;i2c_slv.c: 324: {
 16088                           ;i2c_slv.c: 325: Result = MessageNotReceived;
 16089                           
 16090                           ; BSR set to: 0
 16091  0018' 0E00               	movlw	0
 16092  001A'                    L16:
 16093  001A' 0100               	movlb	0	; () banked
 16094  001C' 6F00'              	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 16095                           
 16096                           ; BSR set to: 0
 16097                           ;i2c_slv.c: 326: }
 16098                           ;i2c_slv.c: 328: return Result;
 16099  001E' 5100'              	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 16100  0020' 0012               	return	
 16101  0022'                    __end_of_I2cSlv_I2cReadMsgSts:
 16102                           	opt stack 0
 16103                           tosu	equ	0xFFF
 16104                           tosh	equ	0xFFE
 16105                           tosl	equ	0xFFD
 16106                           pclath	equ	0xFFA
 16107                           tblptru	equ	0xFF8
 16108                           tblptrh	equ	0xFF7
 16109                           tblptrl	equ	0xFF6
 16110                           tablat	equ	0xFF5
 16111                           prodh	equ	0xFF4
 16112                           prodl	equ	0xFF3
 16113                           intcon	equ	0xFF2
 16114                           intcon2	equ	0xFF1
 16115                           intcon3	equ	0xFF0
 16116                           indf0	equ	0xFEF
 16117                           postinc0	equ	0xFEE
 16118                           plusw0	equ	0xFEB
 16119                           fsr0h	equ	0xFEA
 16120                           fsr0l	equ	0xFE9
 16121                           wreg	equ	0xFE8
 16122                           indf1	equ	0xFE7
 16123                           postinc1	equ	0xFE6
 16124                           postdec1	equ	0xFE5
 16125                           fsr1h	equ	0xFE2
 16126                           fsr1l	equ	0xFE1
 16127                           indf2	equ	0xFDF
 16128                           postinc2	equ	0xFDE
 16129                           postdec2	equ	0xFDD
 16130                           plusw2	equ	0xFDB
 16131                           fsr2h	equ	0xFDA
 16132                           fsr2l	equ	0xFD9
 16133                           status	equ	0xFD8
 16134                           
 16135 ;; *************** function _Rtcm_SetRtccDate *****************
 16136 ;; Defined at:
 16137 ;;		line 176 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 16138 ;; Parameters:    Size  Location     Type
 16139 ;;  Date            8   12[BANK0 ] struct _RtccDateType
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;		None
 16142 ;; Return value:  Size  Location     Type
 16143 ;;                  1    wreg      void 
 16144 ;; Registers used:
 16145 ;;		wreg, status,2, status,0, cstack
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/0
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16151 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16154 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16155 ;;Total ram usage:        8 bytes
 16156 ;; Hardware stack levels used:    1
 16157 ;; Hardware stack levels required when called:   13
 16158 ;; This function calls:
 16159 ;;		_Rtcc_LockRtc
 16160 ;;		_Rtcc_SetRtccValue
 16161 ;;		_Rtcc_UnlockRtc
 16162 ;; This function is called by:
 16163 ;;		_Rtcm_MainTask
 16164 ;; This function uses a non-reentrant model
 16165 ;;
 16166                           
 16167                           	psect	text69
 16168  0000'                    __ptext69:
 16169                           	opt stack 0
 16170  0000'                    _Rtcm_SetRtccDate:
 16171                           	opt stack 14
 16172                           
 16173                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 16174                           
 16175                           ; BSR set to: 0
 16176                           ;incstack = 0
 16177  0000' EC00' F000'        	call	_Rtcc_UnlockRtc	;wreg free
 16178                           
 16179                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 16180  0004' 0100               	movlb	0	; () banked
 16181  0006' 5100'              	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 16182  0008' 0F30               	addlw	48
 16183  000A' 6F00'              	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 16184  000C' 0E00               	movlw	0
 16185  000E' EC00' F000'        	call	_Rtcc_SetRtccValue
 16186                           
 16187                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 16188  0012' C00E' F008'        	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 16189  0016' 0E01               	movlw	1
 16190  0018' EC00' F000'        	call	_Rtcc_SetRtccValue
 16191                           
 16192                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 16193  001C' C00F' F008'        	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 16194  0020' 0E02               	movlw	2
 16195  0022' EC00' F000'        	call	_Rtcc_SetRtccValue
 16196                           
 16197                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 16198  0026' C010' F008'        	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 16199  002A' 0E03               	movlw	3
 16200  002C' EC00' F000'        	call	_Rtcc_SetRtccValue
 16201                           
 16202                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 16203  0030' C011' F008'        	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 16204  0034' 0E04               	movlw	4
 16205  0036' EC00' F000'        	call	_Rtcc_SetRtccValue
 16206                           
 16207                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 16208  003A' C012' F008'        	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 16209  003E' 0E05               	movlw	5
 16210  0040' EC00' F000'        	call	_Rtcc_SetRtccValue
 16211                           
 16212                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 16213  0044' C013' F008'        	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 16214  0048' 0E06               	movlw	6
 16215  004A' EC00' F000'        	call	_Rtcc_SetRtccValue
 16216                           
 16217                           ;rtcm.c: 191: Rtcc_LockRtc();
 16218  004E' EC00' F000'        	call	_Rtcc_LockRtc	;wreg free
 16219  0052' 0012               	return		;funcret
 16220  0054'                    __end_of_Rtcm_SetRtccDate:
 16221                           	opt stack 0
 16222                           tosu	equ	0xFFF
 16223                           tosh	equ	0xFFE
 16224                           tosl	equ	0xFFD
 16225                           pclath	equ	0xFFA
 16226                           tblptru	equ	0xFF8
 16227                           tblptrh	equ	0xFF7
 16228                           tblptrl	equ	0xFF6
 16229                           tablat	equ	0xFF5
 16230                           prodh	equ	0xFF4
 16231                           prodl	equ	0xFF3
 16232                           intcon	equ	0xFF2
 16233                           intcon2	equ	0xFF1
 16234                           intcon3	equ	0xFF0
 16235                           indf0	equ	0xFEF
 16236                           postinc0	equ	0xFEE
 16237                           plusw0	equ	0xFEB
 16238                           fsr0h	equ	0xFEA
 16239                           fsr0l	equ	0xFE9
 16240                           wreg	equ	0xFE8
 16241                           indf1	equ	0xFE7
 16242                           postinc1	equ	0xFE6
 16243                           postdec1	equ	0xFE5
 16244                           fsr1h	equ	0xFE2
 16245                           fsr1l	equ	0xFE1
 16246                           indf2	equ	0xFDF
 16247                           postinc2	equ	0xFDE
 16248                           postdec2	equ	0xFDD
 16249                           plusw2	equ	0xFDB
 16250                           fsr2h	equ	0xFDA
 16251                           fsr2l	equ	0xFD9
 16252                           status	equ	0xFD8
 16253                           
 16254 ;; *************** function _Rtcc_UnlockRtc *****************
 16255 ;; Defined at:
 16256 ;;		line 163 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 16257 ;; Parameters:    Size  Location     Type
 16258 ;;		None
 16259 ;; Auto vars:     Size  Location     Type
 16260 ;;		None
 16261 ;; Return value:  Size  Location     Type
 16262 ;;                  1    wreg      void 
 16263 ;; Registers used:
 16264 ;;		None
 16265 ;; Tracked objects:
 16266 ;;		On entry : 0/0
 16267 ;;		On exit  : 0/0
 16268 ;;		Unchanged: 0/0
 16269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16274 ;;Total ram usage:        0 bytes
 16275 ;; Hardware stack levels used:    1
 16276 ;; Hardware stack levels required when called:   11
 16277 ;; This function calls:
 16278 ;;		Nothing
 16279 ;; This function is called by:
 16280 ;;		_Rtcm_MainTask
 16281 ;;		_Rtcm_SetRtccDate
 16282 ;;		_Rtcm_SetRtccAlarm
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286                           	psect	text70
 16287  0000'                    __ptext70:
 16288                           	opt stack 0
 16289  0000'                    _Rtcc_UnlockRtc:
 16290                           	opt stack 15
 16291                           
 16292                           ;incstack = 0
 16293  0000' 010F               	movlb	15	;# 
 16294  0002' 0E55               	movlw	85	;# 
 16295  0004' 6EA7               	movwf	4007,c	;# 
 16296  0006' 0EAA               	movlw	170	;# 
 16297  0008' 6EA7               	movwf	4007,c	;# 
 16298                           
 16299                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 16300  000A' 010F               	movlb	15	; () banked
 16301  000C' 8B3F               	bsf	63,5,b	;volatile
 16302                           
 16303                           ; BSR set to: 15
 16304  000E' 0012               	return		;funcret
 16305  0010'                    __end_of_Rtcc_UnlockRtc:
 16306                           	opt stack 0
 16307                           tosu	equ	0xFFF
 16308                           tosh	equ	0xFFE
 16309                           tosl	equ	0xFFD
 16310                           pclath	equ	0xFFA
 16311                           tblptru	equ	0xFF8
 16312                           tblptrh	equ	0xFF7
 16313                           tblptrl	equ	0xFF6
 16314                           tablat	equ	0xFF5
 16315                           prodh	equ	0xFF4
 16316                           prodl	equ	0xFF3
 16317                           intcon	equ	0xFF2
 16318                           intcon2	equ	0xFF1
 16319                           intcon3	equ	0xFF0
 16320                           indf0	equ	0xFEF
 16321                           postinc0	equ	0xFEE
 16322                           plusw0	equ	0xFEB
 16323                           fsr0h	equ	0xFEA
 16324                           fsr0l	equ	0xFE9
 16325                           wreg	equ	0xFE8
 16326                           indf1	equ	0xFE7
 16327                           postinc1	equ	0xFE6
 16328                           postdec1	equ	0xFE5
 16329                           fsr1h	equ	0xFE2
 16330                           fsr1l	equ	0xFE1
 16331                           indf2	equ	0xFDF
 16332                           postinc2	equ	0xFDE
 16333                           postdec2	equ	0xFDD
 16334                           plusw2	equ	0xFDB
 16335                           fsr2h	equ	0xFDA
 16336                           fsr2l	equ	0xFD9
 16337                           status	equ	0xFD8
 16338                           
 16339 ;; *************** function _Rtcc_SetRtccValue *****************
 16340 ;; Defined at:
 16341 ;;		line 383 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 16342 ;; Parameters:    Size  Location     Type
 16343 ;;  RtccPtrVal      1    wreg     enum E7751
 16344 ;;  Value           1    8[BANK0 ] unsigned char 
 16345 ;; Auto vars:     Size  Location     Type
 16346 ;;  RtccPtrVal      1   11[BANK0 ] enum E7751
 16347 ;; Return value:  Size  Location     Type
 16348 ;;                  1    wreg      void 
 16349 ;; Registers used:
 16350 ;;		wreg, status,2, status,0, cstack
 16351 ;; Tracked objects:
 16352 ;;		On entry : 0/0
 16353 ;;		On exit  : 0/0
 16354 ;;		Unchanged: 0/0
 16355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16356 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16357 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16358 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16359 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16360 ;;Total ram usage:        4 bytes
 16361 ;; Hardware stack levels used:    1
 16362 ;; Hardware stack levels required when called:   12
 16363 ;; This function calls:
 16364 ;;		___awdiv
 16365 ;;		___awmod
 16366 ;; This function is called by:
 16367 ;;		_Rtcm_SetRtccDate
 16368 ;; This function uses a non-reentrant model
 16369 ;;
 16370                           
 16371                           	psect	text71
 16372  0000'                    __ptext71:
 16373                           	opt stack 0
 16374  0000'                    _Rtcc_SetRtccValue:
 16375                           	opt stack 14
 16376                           
 16377                           ; BSR set to: 15
 16378                           ;incstack = 0
 16379                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 16380  0000' 0100               	movlb	0	; () banked
 16381  0002' 6F00'              	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 16382                           
 16383                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 16384  0004' D0FC               	goto	l323
 16385  0006'                    l324:
 16386                           
 16387                           ; BSR set to: 0
 16388                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 16389  0006' 010F               	movlb	15	; () banked
 16390  0008' 833F               	bsf	63,1,b	;volatile
 16391                           
 16392                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 16393  000A' 813F               	bsf	63,0,b	;volatile
 16394                           
 16395                           ; BSR set to: 15
 16396                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16397  000C' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16398  0010' 0100               	movlb	0	; () banked
 16399  0012' 6B00'              	clrf	(___awmod@dividend+1)& (0+255),b
 16400  0014' 0E00               	movlw	0
 16401  0016' 6F00'              	movwf	(___awmod@divisor+1)& (0+255),b
 16402  0018' 0E0A               	movlw	10
 16403  001A' 6F00'              	movwf	___awmod@divisor& (0+255),b
 16404  001C' EC00' F000'        	call	___awmod	;wreg free
 16405  0020' C000' F009'        	movff	?___awmod,??_Rtcc_SetRtccValue
 16406  0024' C001' F00A'        	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16407  0028' 0E0F               	movlw	15
 16408  002A' 0100               	movlb	0	; () banked
 16409  002C' 1700'              	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16410  002E' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16411  0032' 6B00'              	clrf	(___awdiv@dividend+1)& (0+255),b
 16412  0034' 0E00               	movlw	0
 16413  0036' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
 16414  0038' 0E0A               	movlw	10
 16415  003A' 6F00'              	movwf	___awdiv@divisor& (0+255),b
 16416  003C' EC00' F000'        	call	___awdiv	;wreg free
 16417  0040' 0100               	movlb	0	; () banked
 16418  0042' 3900'              	swapf	?___awdiv& (0+255),w,b
 16419  0044' 0BF0               	andlw	240
 16420  0046' 0BF0               	andlw	240
 16421  0048' 1100'              	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16422  004A' 6E98               	movwf	3992,c	;volatile
 16423                           
 16424                           ;rtcc_drv.c: 393: break;
 16425  004C' 0012               	return	
 16426  004E'                    l326:
 16427                           
 16428                           ; BSR set to: 0
 16429                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 16430  004E' 010F               	movlb	15	; () banked
 16431  0050' 833F               	bsf	63,1,b	;volatile
 16432                           
 16433                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 16434  0052' 913F               	bcf	63,0,b	;volatile
 16435                           
 16436                           ; BSR set to: 15
 16437                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16438  0054' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16439  0058' 0100               	movlb	0	; () banked
 16440  005A' 6B00'              	clrf	(___awmod@dividend+1)& (0+255),b
 16441  005C' 0E00               	movlw	0
 16442  005E' 6F00'              	movwf	(___awmod@divisor+1)& (0+255),b
 16443  0060' 0E0A               	movlw	10
 16444  0062' 6F00'              	movwf	___awmod@divisor& (0+255),b
 16445  0064' EC00' F000'        	call	___awmod	;wreg free
 16446  0068' C000' F009'        	movff	?___awmod,??_Rtcc_SetRtccValue
 16447  006C' C001' F00A'        	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16448  0070' 0E0F               	movlw	15
 16449  0072' 0100               	movlb	0	; () banked
 16450  0074' 1700'              	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16451  0076' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16452  007A' 6B00'              	clrf	(___awdiv@dividend+1)& (0+255),b
 16453  007C' 0E00               	movlw	0
 16454  007E' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
 16455  0080' 0E0A               	movlw	10
 16456  0082' 6F00'              	movwf	___awdiv@divisor& (0+255),b
 16457  0084' EC00' F000'        	call	___awdiv	;wreg free
 16458  0088' 0100               	movlb	0	; () banked
 16459  008A' 3900'              	swapf	?___awdiv& (0+255),w,b
 16460  008C' 0BF0               	andlw	240
 16461  008E' 0BF0               	andlw	240
 16462  0090' 1100'              	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16463  0092' 6E99               	movwf	3993,c	;volatile
 16464                           
 16465                           ;rtcc_drv.c: 401: break;
 16466  0094' 0012               	return	
 16467  0096'                    l327:
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 16471  0096' 010F               	movlb	15	; () banked
 16472  0098' 833F               	bsf	63,1,b	;volatile
 16473                           
 16474                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 16475  009A' 913F               	bcf	63,0,b	;volatile
 16476                           
 16477                           ; BSR set to: 15
 16478                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16479  009C' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16480  00A0' 0100               	movlb	0	; () banked
 16481  00A2' 6B00'              	clrf	(___awmod@dividend+1)& (0+255),b
 16482  00A4' 0E00               	movlw	0
 16483  00A6' 6F00'              	movwf	(___awmod@divisor+1)& (0+255),b
 16484  00A8' 0E0A               	movlw	10
 16485  00AA' 6F00'              	movwf	___awmod@divisor& (0+255),b
 16486  00AC' EC00' F000'        	call	___awmod	;wreg free
 16487  00B0' C000' F009'        	movff	?___awmod,??_Rtcc_SetRtccValue
 16488  00B4' C001' F00A'        	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16489  00B8' 0E0F               	movlw	15
 16490  00BA' 0100               	movlb	0	; () banked
 16491  00BC' 1700'              	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16492  00BE' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16493  00C2' 6B00'              	clrf	(___awdiv@dividend+1)& (0+255),b
 16494  00C4' 0E00               	movlw	0
 16495  00C6' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
 16496  00C8' 0E0A               	movlw	10
 16497  00CA' 6F00'              	movwf	___awdiv@divisor& (0+255),b
 16498  00CC' EC00' F000'        	call	___awdiv	;wreg free
 16499  00D0' 0100               	movlb	0	; () banked
 16500  00D2' 3900'              	swapf	?___awdiv& (0+255),w,b
 16501  00D4' 0BF0               	andlw	240
 16502  00D6' 0BF0               	andlw	240
 16503  00D8' 1100'              	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16504  00DA' 6E98               	movwf	3992,c	;volatile
 16505                           
 16506                           ;rtcc_drv.c: 409: break;
 16507  00DC' 0012               	return	
 16508  00DE'                    l328:
 16509                           
 16510                           ; BSR set to: 0
 16511                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 16512  00DE' 010F               	movlb	15	; () banked
 16513  00E0' 933F               	bcf	63,1,b	;volatile
 16514                           
 16515                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 16516  00E2' 813F               	bsf	63,0,b	;volatile
 16517                           
 16518                           ; BSR set to: 15
 16519                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16520  00E4' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16521  00E8' 0100               	movlb	0	; () banked
 16522  00EA' 6B00'              	clrf	(___awmod@dividend+1)& (0+255),b
 16523  00EC' 0E00               	movlw	0
 16524  00EE' 6F00'              	movwf	(___awmod@divisor+1)& (0+255),b
 16525  00F0' 0E0A               	movlw	10
 16526  00F2' 6F00'              	movwf	___awmod@divisor& (0+255),b
 16527  00F4' EC00' F000'        	call	___awmod	;wreg free
 16528  00F8' C000' F009'        	movff	?___awmod,??_Rtcc_SetRtccValue
 16529  00FC' C001' F00A'        	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16530  0100' 0E0F               	movlw	15
 16531  0102' 0100               	movlb	0	; () banked
 16532  0104' 1700'              	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16533  0106' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16534  010A' 6B00'              	clrf	(___awdiv@dividend+1)& (0+255),b
 16535  010C' 0E00               	movlw	0
 16536  010E' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
 16537  0110' 0E0A               	movlw	10
 16538  0112' 6F00'              	movwf	___awdiv@divisor& (0+255),b
 16539  0114' EC00' F000'        	call	___awdiv	;wreg free
 16540  0118' 0100               	movlb	0	; () banked
 16541  011A' 3900'              	swapf	?___awdiv& (0+255),w,b
 16542  011C' 0BF0               	andlw	240
 16543  011E' 0BF0               	andlw	240
 16544  0120' 1100'              	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16545  0122' 6E99               	movwf	3993,c	;volatile
 16546                           
 16547                           ;rtcc_drv.c: 417: break;
 16548  0124' 0012               	return	
 16549  0126'                    l329:
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 16553  0126' 010F               	movlb	15	; () banked
 16554  0128' 933F               	bcf	63,1,b	;volatile
 16555                           
 16556                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 16557  012A' 813F               	bsf	63,0,b	;volatile
 16558                           
 16559                           ; BSR set to: 15
 16560                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16561  012C' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16562  0130' 0100               	movlb	0	; () banked
 16563  0132' 6B00'              	clrf	(___awmod@dividend+1)& (0+255),b
 16564  0134' 0E00               	movlw	0
 16565  0136' 6F00'              	movwf	(___awmod@divisor+1)& (0+255),b
 16566  0138' 0E0A               	movlw	10
 16567  013A' 6F00'              	movwf	___awmod@divisor& (0+255),b
 16568  013C' EC00' F000'        	call	___awmod	;wreg free
 16569  0140' C000' F009'        	movff	?___awmod,??_Rtcc_SetRtccValue
 16570  0144' C001' F00A'        	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16571  0148' 0E0F               	movlw	15
 16572  014A' 0100               	movlb	0	; () banked
 16573  014C' 1700'              	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16574  014E' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16575  0152' 6B00'              	clrf	(___awdiv@dividend+1)& (0+255),b
 16576  0154' 0E00               	movlw	0
 16577  0156' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
 16578  0158' 0E0A               	movlw	10
 16579  015A' 6F00'              	movwf	___awdiv@divisor& (0+255),b
 16580  015C' EC00' F000'        	call	___awdiv	;wreg free
 16581  0160' 0100               	movlb	0	; () banked
 16582  0162' 3900'              	swapf	?___awdiv& (0+255),w,b
 16583  0164' 0BF0               	andlw	240
 16584  0166' 0BF0               	andlw	240
 16585  0168' 1100'              	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16586  016A' 6E98               	movwf	3992,c	;volatile
 16587                           
 16588                           ;rtcc_drv.c: 425: break;
 16589  016C' 0012               	return	
 16590  016E'                    l330:
 16591                           
 16592                           ; BSR set to: 0
 16593                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 16594  016E' 010F               	movlb	15	; () banked
 16595  0170' 933F               	bcf	63,1,b	;volatile
 16596                           
 16597                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 16598  0172' 913F               	bcf	63,0,b	;volatile
 16599                           
 16600                           ; BSR set to: 15
 16601                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16602  0174' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16603  0178' 0100               	movlb	0	; () banked
 16604  017A' 6B00'              	clrf	(___awmod@dividend+1)& (0+255),b
 16605  017C' 0E00               	movlw	0
 16606  017E' 6F00'              	movwf	(___awmod@divisor+1)& (0+255),b
 16607  0180' 0E0A               	movlw	10
 16608  0182' 6F00'              	movwf	___awmod@divisor& (0+255),b
 16609  0184' EC00' F000'        	call	___awmod	;wreg free
 16610  0188' C000' F009'        	movff	?___awmod,??_Rtcc_SetRtccValue
 16611  018C' C001' F00A'        	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16612  0190' 0E0F               	movlw	15
 16613  0192' 0100               	movlb	0	; () banked
 16614  0194' 1700'              	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16615  0196' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16616  019A' 6B00'              	clrf	(___awdiv@dividend+1)& (0+255),b
 16617  019C' 0E00               	movlw	0
 16618  019E' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
 16619  01A0' 0E0A               	movlw	10
 16620  01A2' 6F00'              	movwf	___awdiv@divisor& (0+255),b
 16621  01A4' EC00' F000'        	call	___awdiv	;wreg free
 16622  01A8' 0100               	movlb	0	; () banked
 16623  01AA' 3900'              	swapf	?___awdiv& (0+255),w,b
 16624  01AC' 0BF0               	andlw	240
 16625  01AE' 0BF0               	andlw	240
 16626  01B0' 1100'              	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16627  01B2' 6E99               	movwf	3993,c	;volatile
 16628                           
 16629                           ;rtcc_drv.c: 433: break;
 16630  01B4' 0012               	return	
 16631  01B6'                    l331:
 16632                           
 16633                           ; BSR set to: 0
 16634                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 16635  01B6' 010F               	movlb	15	; () banked
 16636  01B8' 933F               	bcf	63,1,b	;volatile
 16637                           
 16638                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 16639  01BA' 913F               	bcf	63,0,b	;volatile
 16640                           
 16641                           ; BSR set to: 15
 16642                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 16643  01BC' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 16644  01C0' 0100               	movlb	0	; () banked
 16645  01C2' 6B00'              	clrf	(___awmod@dividend+1)& (0+255),b
 16646  01C4' 0E00               	movlw	0
 16647  01C6' 6F00'              	movwf	(___awmod@divisor+1)& (0+255),b
 16648  01C8' 0E0A               	movlw	10
 16649  01CA' 6F00'              	movwf	___awmod@divisor& (0+255),b
 16650  01CC' EC00' F000'        	call	___awmod	;wreg free
 16651  01D0' C000' F009'        	movff	?___awmod,??_Rtcc_SetRtccValue
 16652  01D4' C001' F00A'        	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 16653  01D8' 0E0F               	movlw	15
 16654  01DA' 0100               	movlb	0	; () banked
 16655  01DC' 1700'              	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 16656  01DE' C008' F000'        	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 16657  01E2' 6B00'              	clrf	(___awdiv@dividend+1)& (0+255),b
 16658  01E4' 0E00               	movlw	0
 16659  01E6' 6F00'              	movwf	(___awdiv@divisor+1)& (0+255),b
 16660  01E8' 0E0A               	movlw	10
 16661  01EA' 6F00'              	movwf	___awdiv@divisor& (0+255),b
 16662  01EC' EC00' F000'        	call	___awdiv	;wreg free
 16663  01F0' 0100               	movlb	0	; () banked
 16664  01F2' 3900'              	swapf	?___awdiv& (0+255),w,b
 16665  01F4' 0BF0               	andlw	240
 16666  01F6' 0BF0               	andlw	240
 16667  01F8' 1100'              	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 16668  01FA' 6E98               	movwf	3992,c	;volatile
 16669                           
 16670                           ; BSR set to: 0
 16671                           ;rtcc_drv.c: 445: }
 16672                           
 16673                           ; BSR set to: 0
 16674                           ;rtcc_drv.c: 444: break;
 16675                           
 16676                           ;rtcc_drv.c: 443: default:
 16677                           
 16678                           ;rtcc_drv.c: 441: break;
 16679  01FC' 0012               	return	
 16680  01FE'                    l323:
 16681                           
 16682                           ; BSR set to: 0
 16683  01FE' 0100               	movlb	0	; () banked
 16684  0200' 5100'              	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 16685                           
 16686                           ; Switch size 1, requested type "space"
 16687                           ; Number of cases is 7, Range of values is 0 to 6
 16688                           ; switch strategies available:
 16689                           ; Name         Instructions Cycles
 16690                           ; simple_byte           22    12 (average)
 16691                           ;	Chosen strategy is simple_byte
 16692  0202' 0A00               	xorlw	0	; case 0
 16693  0204' B4D8               	btfsc	status,2,c
 16694  0206' D6FF               	goto	l324
 16695  0208' 0A01               	xorlw	1	; case 1
 16696  020A' B4D8               	btfsc	status,2,c
 16697  020C' D720               	goto	l326
 16698  020E' 0A03               	xorlw	3	; case 2
 16699  0210' B4D8               	btfsc	status,2,c
 16700  0212' D741               	goto	l327
 16701  0214' 0A01               	xorlw	1	; case 3
 16702  0216' B4D8               	btfsc	status,2,c
 16703  0218' D762               	goto	l328
 16704  021A' 0A07               	xorlw	7	; case 4
 16705  021C' B4D8               	btfsc	status,2,c
 16706  021E' D783               	goto	l329
 16707  0220' 0A01               	xorlw	1	; case 5
 16708  0222' B4D8               	btfsc	status,2,c
 16709  0224' D7A4               	goto	l330
 16710  0226' 0A03               	xorlw	3	; case 6
 16711  0228' A4D8               	btfss	status,2,c
 16712  022A' 0012               	return	
 16713  022C' D7C4               	goto	l331
 16714  022E'                    __end_of_Rtcc_SetRtccValue:
 16715                           	opt stack 0
 16716                           tosu	equ	0xFFF
 16717                           tosh	equ	0xFFE
 16718                           tosl	equ	0xFFD
 16719                           pclath	equ	0xFFA
 16720                           tblptru	equ	0xFF8
 16721                           tblptrh	equ	0xFF7
 16722                           tblptrl	equ	0xFF6
 16723                           tablat	equ	0xFF5
 16724                           prodh	equ	0xFF4
 16725                           prodl	equ	0xFF3
 16726                           intcon	equ	0xFF2
 16727                           intcon2	equ	0xFF1
 16728                           intcon3	equ	0xFF0
 16729                           indf0	equ	0xFEF
 16730                           postinc0	equ	0xFEE
 16731                           plusw0	equ	0xFEB
 16732                           fsr0h	equ	0xFEA
 16733                           fsr0l	equ	0xFE9
 16734                           wreg	equ	0xFE8
 16735                           indf1	equ	0xFE7
 16736                           postinc1	equ	0xFE6
 16737                           postdec1	equ	0xFE5
 16738                           fsr1h	equ	0xFE2
 16739                           fsr1l	equ	0xFE1
 16740                           indf2	equ	0xFDF
 16741                           postinc2	equ	0xFDE
 16742                           postdec2	equ	0xFDD
 16743                           plusw2	equ	0xFDB
 16744                           fsr2h	equ	0xFDA
 16745                           fsr2l	equ	0xFD9
 16746                           status	equ	0xFD8
 16747                           
 16748 ;; *************** function ___awmod *****************
 16749 ;; Defined at:
 16750 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 16751 ;; Parameters:    Size  Location     Type
 16752 ;;  dividend        2    0[BANK0 ] int 
 16753 ;;  divisor         2    2[BANK0 ] int 
 16754 ;; Auto vars:     Size  Location     Type
 16755 ;;  sign            1    5[BANK0 ] unsigned char 
 16756 ;;  counter         1    4[BANK0 ] unsigned char 
 16757 ;; Return value:  Size  Location     Type
 16758 ;;                  2    0[BANK0 ] int 
 16759 ;; Registers used:
 16760 ;;		wreg, status,2, status,0
 16761 ;; Tracked objects:
 16762 ;;		On entry : 0/0
 16763 ;;		On exit  : 0/0
 16764 ;;		Unchanged: 0/0
 16765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16766 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16767 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16769 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16770 ;;Total ram usage:        6 bytes
 16771 ;; Hardware stack levels used:    1
 16772 ;; Hardware stack levels required when called:   11
 16773 ;; This function calls:
 16774 ;;		Nothing
 16775 ;; This function is called by:
 16776 ;;		_Rtcc_SetRtccValue
 16777 ;;		_Rtcc_SetRtccAlarm
 16778 ;; This function uses a non-reentrant model
 16779 ;;
 16780                           
 16781                           	psect	text72
 16782  0000'                    __ptext72:
 16783                           	opt stack 0
 16784  0000'                    ___awmod:
 16785                           	opt stack 14
 16786                           
 16787                           ; BSR set to: 0
 16788                           ;incstack = 0
 16789  0000' 0E00               	movlw	0
 16790  0002' 0100               	movlb	0	; () banked
 16791  0004' 6F00'              	movwf	___awmod@sign& (0+255),b
 16792                           
 16793                           ; BSR set to: 0
 16794  0006' AF00'              	btfss	(___awmod@dividend+1)& (0+255),7,b
 16795  0008' D006               	goto	l2377
 16796                           
 16797                           ; BSR set to: 0
 16798  000A' 6D00'              	negf	___awmod@dividend& (0+255),b
 16799  000C' 1F00'              	comf	(___awmod@dividend+1)& (0+255),f,b
 16800  000E' B0D8               	btfsc	status,0,c
 16801  0010' 2B00'              	incf	(___awmod@dividend+1)& (0+255),f,b
 16802                           
 16803                           ; BSR set to: 0
 16804  0012' 0E01               	movlw	1
 16805  0014' 6F00'              	movwf	___awmod@sign& (0+255),b
 16806  0016'                    l2377:
 16807                           
 16808                           ; BSR set to: 0
 16809                           
 16810                           ; BSR set to: 0
 16811  0016' AF00'              	btfss	(___awmod@divisor+1)& (0+255),7,b
 16812  0018' D004               	goto	l2378
 16813                           
 16814                           ; BSR set to: 0
 16815  001A' 6D00'              	negf	___awmod@divisor& (0+255),b
 16816  001C' 1F00'              	comf	(___awmod@divisor+1)& (0+255),f,b
 16817  001E' B0D8               	btfsc	status,0,c
 16818  0020' 2B00'              	incf	(___awmod@divisor+1)& (0+255),f,b
 16819  0022'                    l2378:
 16820                           
 16821                           ; BSR set to: 0
 16822                           
 16823                           ; BSR set to: 0
 16824  0022' 5100'              	movf	___awmod@divisor& (0+255),w,b
 16825  0024' 1100'              	iorwf	(___awmod@divisor+1)& (0+255),w,b
 16826  0026' B4D8               	btfsc	status,2,c
 16827  0028' D018               	goto	l2385
 16828                           
 16829                           ; BSR set to: 0
 16830  002A' 0E01               	movlw	1
 16831  002C' 6F00'              	movwf	___awmod@counter& (0+255),b
 16832  002E' D004               	goto	l2380
 16833  0030'                    
 16834                           ; BSR set to: 0
 16835                           
 16836                           ; BSR set to: 0
 16837  0030' 90D8               	bcf	status,0,c
 16838  0032' 3700'              	rlcf	___awmod@divisor& (0+255),f,b
 16839  0034' 3700'              	rlcf	(___awmod@divisor+1)& (0+255),f,b
 16840  0036' 2B00'              	incf	___awmod@counter& (0+255),f,b
 16841  0038'                    l2380:
 16842                           
 16843                           ; BSR set to: 0
 16844                           
 16845                           ; BSR set to: 0
 16846  0038' AF00'              	btfss	(___awmod@divisor+1)& (0+255),7,b
 16847  003A' D7FA               	goto	l2381
 16848  003C'                    u5900:
 16849                           
 16850                           ; BSR set to: 0
 16851                           
 16852                           ; BSR set to: 0
 16853                           
 16854                           ; BSR set to: 0
 16855  003C' 5100'              	movf	___awmod@divisor& (0+255),w,b
 16856  003E' 5D00'              	subwf	___awmod@dividend& (0+255),w,b
 16857  0040' 5100'              	movf	(___awmod@divisor+1)& (0+255),w,b
 16858  0042' 5900'              	subwfb	(___awmod@dividend+1)& (0+255),w,b
 16859  0044' A0D8               	btfss	status,0,c
 16860  0046' D004               	goto	l2384
 16861                           
 16862                           ; BSR set to: 0
 16863  0048' 5100'              	movf	___awmod@divisor& (0+255),w,b
 16864  004A' 5F00'              	subwf	___awmod@dividend& (0+255),f,b
 16865  004C' 5100'              	movf	(___awmod@divisor+1)& (0+255),w,b
 16866  004E' 5B00'              	subwfb	(___awmod@dividend+1)& (0+255),f,b
 16867  0050'                    l2384:
 16868                           
 16869                           ; BSR set to: 0
 16870                           
 16871                           ; BSR set to: 0
 16872  0050' 90D8               	bcf	status,0,c
 16873  0052' 3300'              	rrcf	(___awmod@divisor+1)& (0+255),f,b
 16874  0054' 3300'              	rrcf	___awmod@divisor& (0+255),f,b
 16875                           
 16876                           ; BSR set to: 0
 16877  0056' 2F00'              	decfsz	___awmod@counter& (0+255),f,b
 16878  0058' D7F1               	goto	u5900
 16879  005A'                    l2385:
 16880                           
 16881                           ; BSR set to: 0
 16882                           
 16883                           ; BSR set to: 0
 16884                           
 16885                           ; BSR set to: 0
 16886  005A' 5100'              	movf	___awmod@sign& (0+255),w,b
 16887  005C' B4D8               	btfsc	status,2,c
 16888  005E' D004               	goto	l2386
 16889                           
 16890                           ; BSR set to: 0
 16891  0060' 6D00'              	negf	___awmod@dividend& (0+255),b
 16892  0062' 1F00'              	comf	(___awmod@dividend+1)& (0+255),f,b
 16893  0064' B0D8               	btfsc	status,0,c
 16894  0066' 2B00'              	incf	(___awmod@dividend+1)& (0+255),f,b
 16895  0068'                    l2386:
 16896                           
 16897                           ; BSR set to: 0
 16898                           
 16899                           ; BSR set to: 0
 16900  0068' C000' F000'        	movff	___awmod@dividend,?___awmod
 16901  006C' C001' F001'        	movff	___awmod@dividend+1,?___awmod+1
 16902  0070' 0012               	return	
 16903  0072'                    __end_of___awmod:
 16904                           	opt stack 0
 16905                           tosu	equ	0xFFF
 16906                           tosh	equ	0xFFE
 16907                           tosl	equ	0xFFD
 16908                           pclath	equ	0xFFA
 16909                           tblptru	equ	0xFF8
 16910                           tblptrh	equ	0xFF7
 16911                           tblptrl	equ	0xFF6
 16912                           tablat	equ	0xFF5
 16913                           prodh	equ	0xFF4
 16914                           prodl	equ	0xFF3
 16915                           intcon	equ	0xFF2
 16916                           intcon2	equ	0xFF1
 16917                           intcon3	equ	0xFF0
 16918                           indf0	equ	0xFEF
 16919                           postinc0	equ	0xFEE
 16920                           plusw0	equ	0xFEB
 16921                           fsr0h	equ	0xFEA
 16922                           fsr0l	equ	0xFE9
 16923                           wreg	equ	0xFE8
 16924                           indf1	equ	0xFE7
 16925                           postinc1	equ	0xFE6
 16926                           postdec1	equ	0xFE5
 16927                           fsr1h	equ	0xFE2
 16928                           fsr1l	equ	0xFE1
 16929                           indf2	equ	0xFDF
 16930                           postinc2	equ	0xFDE
 16931                           postdec2	equ	0xFDD
 16932                           plusw2	equ	0xFDB
 16933                           fsr2h	equ	0xFDA
 16934                           fsr2l	equ	0xFD9
 16935                           status	equ	0xFD8
 16936                           
 16937 ;; *************** function ___awdiv *****************
 16938 ;; Defined at:
 16939 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 16940 ;; Parameters:    Size  Location     Type
 16941 ;;  dividend        2    0[BANK0 ] int 
 16942 ;;  divisor         2    2[BANK0 ] int 
 16943 ;; Auto vars:     Size  Location     Type
 16944 ;;  quotient        2    6[BANK0 ] int 
 16945 ;;  sign            1    5[BANK0 ] unsigned char 
 16946 ;;  counter         1    4[BANK0 ] unsigned char 
 16947 ;; Return value:  Size  Location     Type
 16948 ;;                  2    0[BANK0 ] int 
 16949 ;; Registers used:
 16950 ;;		wreg, status,2, status,0
 16951 ;; Tracked objects:
 16952 ;;		On entry : 0/0
 16953 ;;		On exit  : 0/0
 16954 ;;		Unchanged: 0/0
 16955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16956 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16957 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16959 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16960 ;;Total ram usage:        8 bytes
 16961 ;; Hardware stack levels used:    1
 16962 ;; Hardware stack levels required when called:   11
 16963 ;; This function calls:
 16964 ;;		Nothing
 16965 ;; This function is called by:
 16966 ;;		_Rtcc_SetRtccValue
 16967 ;;		_Rtcc_SetRtccAlarm
 16968 ;; This function uses a non-reentrant model
 16969 ;;
 16970                           
 16971                           	psect	text73
 16972  0000'                    __ptext73:
 16973                           	opt stack 0
 16974  0000'                    ___awdiv:
 16975                           	opt stack 14
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;incstack = 0
 16979  0000' 0E00               	movlw	0
 16980  0002' 0100               	movlb	0	; () banked
 16981  0004' 6F00'              	movwf	___awdiv@sign& (0+255),b
 16982                           
 16983                           ; BSR set to: 0
 16984  0006' AF00'              	btfss	(___awdiv@divisor+1)& (0+255),7,b
 16985  0008' D006               	goto	l2364
 16986                           
 16987                           ; BSR set to: 0
 16988  000A' 6D00'              	negf	___awdiv@divisor& (0+255),b
 16989  000C' 1F00'              	comf	(___awdiv@divisor+1)& (0+255),f,b
 16990  000E' B0D8               	btfsc	status,0,c
 16991  0010' 2B00'              	incf	(___awdiv@divisor+1)& (0+255),f,b
 16992                           
 16993                           ; BSR set to: 0
 16994  0012' 0E01               	movlw	1
 16995  0014' 6F00'              	movwf	___awdiv@sign& (0+255),b
 16996  0016'                    l2364:
 16997                           
 16998                           ; BSR set to: 0
 16999                           
 17000                           ; BSR set to: 0
 17001  0016' AF00'              	btfss	(___awdiv@dividend+1)& (0+255),7,b
 17002  0018' D006               	goto	l2365
 17003                           
 17004                           ; BSR set to: 0
 17005  001A' 6D00'              	negf	___awdiv@dividend& (0+255),b
 17006  001C' 1F00'              	comf	(___awdiv@dividend+1)& (0+255),f,b
 17007  001E' B0D8               	btfsc	status,0,c
 17008  0020' 2B00'              	incf	(___awdiv@dividend+1)& (0+255),f,b
 17009                           
 17010                           ; BSR set to: 0
 17011  0022' 0E01               	movlw	1
 17012  0024' 1B00'              	xorwf	___awdiv@sign& (0+255),f,b
 17013  0026'                    l2365:
 17014                           
 17015                           ; BSR set to: 0
 17016                           
 17017                           ; BSR set to: 0
 17018  0026' 0E00               	movlw	0
 17019  0028' 6F00'              	movwf	(___awdiv@quotient+1)& (0+255),b
 17020  002A' 0E00               	movlw	0
 17021  002C' 6F00'              	movwf	___awdiv@quotient& (0+255),b
 17022                           
 17023                           ; BSR set to: 0
 17024  002E' 5100'              	movf	___awdiv@divisor& (0+255),w,b
 17025  0030' 1100'              	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 17026  0032' B4D8               	btfsc	status,2,c
 17027  0034' D01C               	goto	l2372
 17028                           
 17029                           ; BSR set to: 0
 17030  0036' 0E01               	movlw	1
 17031  0038' 6F00'              	movwf	___awdiv@counter& (0+255),b
 17032  003A' D004               	goto	l2367
 17033  003C'                    
 17034                           ; BSR set to: 0
 17035                           
 17036                           ; BSR set to: 0
 17037  003C' 90D8               	bcf	status,0,c
 17038  003E' 3700'              	rlcf	___awdiv@divisor& (0+255),f,b
 17039  0040' 3700'              	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 17040  0042' 2B00'              	incf	___awdiv@counter& (0+255),f,b
 17041  0044'                    l2367:
 17042                           
 17043                           ; BSR set to: 0
 17044                           
 17045                           ; BSR set to: 0
 17046  0044' AF00'              	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17047  0046' D7FA               	goto	l2368
 17048  0048'                    u5840:
 17049                           
 17050                           ; BSR set to: 0
 17051                           
 17052                           ; BSR set to: 0
 17053                           
 17054                           ; BSR set to: 0
 17055  0048' 90D8               	bcf	status,0,c
 17056  004A' 3700'              	rlcf	___awdiv@quotient& (0+255),f,b
 17057  004C' 3700'              	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 17058                           
 17059                           ; BSR set to: 0
 17060  004E' 5100'              	movf	___awdiv@divisor& (0+255),w,b
 17061  0050' 5D00'              	subwf	___awdiv@dividend& (0+255),w,b
 17062  0052' 5100'              	movf	(___awdiv@divisor+1)& (0+255),w,b
 17063  0054' 5900'              	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 17064  0056' A0D8               	btfss	status,0,c
 17065  0058' D005               	goto	l2371
 17066                           
 17067                           ; BSR set to: 0
 17068  005A' 5100'              	movf	___awdiv@divisor& (0+255),w,b
 17069  005C' 5F00'              	subwf	___awdiv@dividend& (0+255),f,b
 17070  005E' 5100'              	movf	(___awdiv@divisor+1)& (0+255),w,b
 17071  0060' 5B00'              	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 17072                           
 17073                           ; BSR set to: 0
 17074  0062' 8100'              	bsf	___awdiv@quotient& (0+255),0,b
 17075  0064'                    l2371:
 17076                           
 17077                           ; BSR set to: 0
 17078                           
 17079                           ; BSR set to: 0
 17080  0064' 90D8               	bcf	status,0,c
 17081  0066' 3300'              	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 17082  0068' 3300'              	rrcf	___awdiv@divisor& (0+255),f,b
 17083                           
 17084                           ; BSR set to: 0
 17085  006A' 2F00'              	decfsz	___awdiv@counter& (0+255),f,b
 17086  006C' D7ED               	goto	u5840
 17087  006E'                    l2372:
 17088                           
 17089                           ; BSR set to: 0
 17090                           
 17091                           ; BSR set to: 0
 17092                           
 17093                           ; BSR set to: 0
 17094  006E' 5100'              	movf	___awdiv@sign& (0+255),w,b
 17095  0070' B4D8               	btfsc	status,2,c
 17096  0072' D004               	goto	l2373
 17097                           
 17098                           ; BSR set to: 0
 17099  0074' 6D00'              	negf	___awdiv@quotient& (0+255),b
 17100  0076' 1F00'              	comf	(___awdiv@quotient+1)& (0+255),f,b
 17101  0078' B0D8               	btfsc	status,0,c
 17102  007A' 2B00'              	incf	(___awdiv@quotient+1)& (0+255),f,b
 17103  007C'                    l2373:
 17104                           
 17105                           ; BSR set to: 0
 17106                           
 17107                           ; BSR set to: 0
 17108  007C' C006' F000'        	movff	___awdiv@quotient,?___awdiv
 17109  0080' C007' F001'        	movff	___awdiv@quotient+1,?___awdiv+1
 17110  0084' 0012               	return	
 17111  0086'                    __end_of___awdiv:
 17112                           	opt stack 0
 17113                           tosu	equ	0xFFF
 17114                           tosh	equ	0xFFE
 17115                           tosl	equ	0xFFD
 17116                           pclath	equ	0xFFA
 17117                           tblptru	equ	0xFF8
 17118                           tblptrh	equ	0xFF7
 17119                           tblptrl	equ	0xFF6
 17120                           tablat	equ	0xFF5
 17121                           prodh	equ	0xFF4
 17122                           prodl	equ	0xFF3
 17123                           intcon	equ	0xFF2
 17124                           intcon2	equ	0xFF1
 17125                           intcon3	equ	0xFF0
 17126                           indf0	equ	0xFEF
 17127                           postinc0	equ	0xFEE
 17128                           plusw0	equ	0xFEB
 17129                           fsr0h	equ	0xFEA
 17130                           fsr0l	equ	0xFE9
 17131                           wreg	equ	0xFE8
 17132                           indf1	equ	0xFE7
 17133                           postinc1	equ	0xFE6
 17134                           postdec1	equ	0xFE5
 17135                           fsr1h	equ	0xFE2
 17136                           fsr1l	equ	0xFE1
 17137                           indf2	equ	0xFDF
 17138                           postinc2	equ	0xFDE
 17139                           postdec2	equ	0xFDD
 17140                           plusw2	equ	0xFDB
 17141                           fsr2h	equ	0xFDA
 17142                           fsr2l	equ	0xFD9
 17143                           status	equ	0xFD8
 17144                           
 17145 ;; *************** function _Rtcc_LockRtc *****************
 17146 ;; Defined at:
 17147 ;;		line 183 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17148 ;; Parameters:    Size  Location     Type
 17149 ;;		None
 17150 ;; Auto vars:     Size  Location     Type
 17151 ;;		None
 17152 ;; Return value:  Size  Location     Type
 17153 ;;                  1    wreg      void 
 17154 ;; Registers used:
 17155 ;;		None
 17156 ;; Tracked objects:
 17157 ;;		On entry : 0/0
 17158 ;;		On exit  : 0/0
 17159 ;;		Unchanged: 0/0
 17160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17165 ;;Total ram usage:        0 bytes
 17166 ;; Hardware stack levels used:    1
 17167 ;; Hardware stack levels required when called:   11
 17168 ;; This function calls:
 17169 ;;		Nothing
 17170 ;; This function is called by:
 17171 ;;		_Rtcm_MainTask
 17172 ;;		_Rtcm_SetRtccDate
 17173 ;;		_Rtcm_SetRtccAlarm
 17174 ;; This function uses a non-reentrant model
 17175 ;;
 17176                           
 17177                           	psect	text74
 17178  0000'                    __ptext74:
 17179                           	opt stack 0
 17180  0000'                    _Rtcc_LockRtc:
 17181                           	opt stack 15
 17182                           
 17183                           ; BSR set to: 0
 17184                           ;incstack = 0
 17185  0000' 010F               	movlb	15	;# 
 17186  0002' 0E55               	movlw	85	;# 
 17187  0004' 6EA7               	movwf	4007,c	;# 
 17188  0006' 0EAA               	movlw	170	;# 
 17189  0008' 6EA7               	movwf	4007,c	;# 
 17190                           
 17191                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 17192  000A' 010F               	movlb	15	; () banked
 17193  000C' 9B3F               	bcf	63,5,b	;volatile
 17194                           
 17195                           ; BSR set to: 15
 17196  000E' 0012               	return		;funcret
 17197  0010'                    __end_of_Rtcc_LockRtc:
 17198                           	opt stack 0
 17199                           tosu	equ	0xFFF
 17200                           tosh	equ	0xFFE
 17201                           tosl	equ	0xFFD
 17202                           pclath	equ	0xFFA
 17203                           tblptru	equ	0xFF8
 17204                           tblptrh	equ	0xFF7
 17205                           tblptrl	equ	0xFF6
 17206                           tablat	equ	0xFF5
 17207                           prodh	equ	0xFF4
 17208                           prodl	equ	0xFF3
 17209                           intcon	equ	0xFF2
 17210                           intcon2	equ	0xFF1
 17211                           intcon3	equ	0xFF0
 17212                           indf0	equ	0xFEF
 17213                           postinc0	equ	0xFEE
 17214                           plusw0	equ	0xFEB
 17215                           fsr0h	equ	0xFEA
 17216                           fsr0l	equ	0xFE9
 17217                           wreg	equ	0xFE8
 17218                           indf1	equ	0xFE7
 17219                           postinc1	equ	0xFE6
 17220                           postdec1	equ	0xFE5
 17221                           fsr1h	equ	0xFE2
 17222                           fsr1l	equ	0xFE1
 17223                           indf2	equ	0xFDF
 17224                           postinc2	equ	0xFDE
 17225                           postdec2	equ	0xFDD
 17226                           plusw2	equ	0xFDB
 17227                           fsr2h	equ	0xFDA
 17228                           fsr2l	equ	0xFD9
 17229                           status	equ	0xFD8
 17230                           
 17231 ;; *************** function _Rtcm_GetRtccDate *****************
 17232 ;; Defined at:
 17233 ;;		line 202 in file "../Source/c/03_Sml/02_Ssl/rtcm.c"
 17234 ;; Parameters:    Size  Location     Type
 17235 ;;		None
 17236 ;; Auto vars:     Size  Location     Type
 17237 ;;  LocalDate       8   13[BANK0 ] struct _RtccDateType
 17238 ;; Return value:  Size  Location     Type
 17239 ;;                  8    4[BANK0 ] struct _RtccDateType
 17240 ;; Registers used:
 17241 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17242 ;; Tracked objects:
 17243 ;;		On entry : 0/0
 17244 ;;		On exit  : 0/0
 17245 ;;		Unchanged: 0/0
 17246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17247 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17248 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17249 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17250 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17251 ;;Total ram usage:       17 bytes
 17252 ;; Hardware stack levels used:    1
 17253 ;; Hardware stack levels required when called:   12
 17254 ;; This function calls:
 17255 ;;		_Rtcc_GetRtccValue
 17256 ;; This function is called by:
 17257 ;;		_Rtcm_MainTask
 17258 ;; This function uses a non-reentrant model
 17259 ;;
 17260                           
 17261                           	psect	text75
 17262  0000'                    __ptext75:
 17263                           	opt stack 0
 17264  0000'                    _Rtcm_GetRtccDate:
 17265                           	opt stack 15
 17266                           
 17267                           ;rtcm.c: 204: RtccDateType LocalDate;
 17268                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 17269                           
 17270                           ; BSR set to: 15
 17271                           ;incstack = 0
 17272  0000' 0E00               	movlw	0
 17273  0002' EC00' F000'        	call	_Rtcc_GetRtccValue
 17274  0006' 0100               	movlb	0	; () banked
 17275  0008' 6F00'              	movwf	??_Rtcm_GetRtccDate& (0+255),b
 17276  000A' 0ED0               	movlw	208
 17277  000C' 2500'              	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 17278  000E' 6F00'              	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 17279  0010' 6B00'              	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 17280  0012' 0E07               	movlw	7
 17281  0014' 2300'              	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 17282                           
 17283                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 17284  0016' 0E01               	movlw	1
 17285  0018' EC00' F000'        	call	_Rtcc_GetRtccValue
 17286  001C' 0100               	movlb	0	; () banked
 17287  001E' 6F00'              	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 17288                           
 17289                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 17290  0020' 0E02               	movlw	2
 17291  0022' EC00' F000'        	call	_Rtcc_GetRtccValue
 17292  0026' 0100               	movlb	0	; () banked
 17293  0028' 6F00'              	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 17294                           
 17295                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 17296  002A' 0E03               	movlw	3
 17297  002C' EC00' F000'        	call	_Rtcc_GetRtccValue
 17298  0030' 0100               	movlb	0	; () banked
 17299  0032' 6F00'              	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 17300                           
 17301                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 17302  0034' 0E04               	movlw	4
 17303  0036' EC00' F000'        	call	_Rtcc_GetRtccValue
 17304  003A' 0100               	movlb	0	; () banked
 17305  003C' 6F00'              	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 17306                           
 17307                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 17308  003E' 0E05               	movlw	5
 17309  0040' EC00' F000'        	call	_Rtcc_GetRtccValue
 17310  0044' 0100               	movlb	0	; () banked
 17311  0046' 6F00'              	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 17312                           
 17313                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 17314  0048' 0E06               	movlw	6
 17315  004A' EC00' F000'        	call	_Rtcc_GetRtccValue
 17316  004E' 0100               	movlb	0	; () banked
 17317  0050' 6F00'              	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 17318                           
 17319                           ; BSR set to: 0
 17320                           ;rtcm.c: 216: return LocalDate;
 17321  0052' EE20' F000'        	lfsr	2,Rtcm_GetRtccDate@LocalDate
 17322  0056' EE00' F000'        	lfsr	0,?_Rtcm_GetRtccDate
 17323  005A' 0E07               	movlw	7
 17324  005C'                    u7701:
 17325  005C' CFDB FFEB          	movff	plusw2,plusw0
 17326  0060' 06E8               	decf	wreg,f,c
 17327  0062' E2FC               	bc	u7701
 17328  0064' 0012               	return	
 17329  0066'                    __end_of_Rtcm_GetRtccDate:
 17330                           	opt stack 0
 17331                           tosu	equ	0xFFF
 17332                           tosh	equ	0xFFE
 17333                           tosl	equ	0xFFD
 17334                           pclath	equ	0xFFA
 17335                           tblptru	equ	0xFF8
 17336                           tblptrh	equ	0xFF7
 17337                           tblptrl	equ	0xFF6
 17338                           tablat	equ	0xFF5
 17339                           prodh	equ	0xFF4
 17340                           prodl	equ	0xFF3
 17341                           intcon	equ	0xFF2
 17342                           intcon2	equ	0xFF1
 17343                           intcon3	equ	0xFF0
 17344                           indf0	equ	0xFEF
 17345                           postinc0	equ	0xFEE
 17346                           plusw0	equ	0xFEB
 17347                           fsr0h	equ	0xFEA
 17348                           fsr0l	equ	0xFE9
 17349                           wreg	equ	0xFE8
 17350                           indf1	equ	0xFE7
 17351                           postinc1	equ	0xFE6
 17352                           postdec1	equ	0xFE5
 17353                           fsr1h	equ	0xFE2
 17354                           fsr1l	equ	0xFE1
 17355                           indf2	equ	0xFDF
 17356                           postinc2	equ	0xFDE
 17357                           postdec2	equ	0xFDD
 17358                           plusw2	equ	0xFDB
 17359                           fsr2h	equ	0xFDA
 17360                           fsr2l	equ	0xFD9
 17361                           status	equ	0xFD8
 17362                           
 17363 ;; *************** function _Rtcc_GetRtccValue *****************
 17364 ;; Defined at:
 17365 ;;		line 205 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17366 ;; Parameters:    Size  Location     Type
 17367 ;;  RtccPtrVal      1    wreg     enum E7751
 17368 ;; Auto vars:     Size  Location     Type
 17369 ;;  RtccPtrVal      1    1[BANK0 ] enum E7751
 17370 ;;  RegValue        1    3[BANK0 ] unsigned char 
 17371 ;;  RetValue        1    2[BANK0 ] unsigned char 
 17372 ;; Return value:  Size  Location     Type
 17373 ;;                  1    wreg      unsigned char 
 17374 ;; Registers used:
 17375 ;;		wreg, status,2, status,0, prodl, prodh
 17376 ;; Tracked objects:
 17377 ;;		On entry : 0/0
 17378 ;;		On exit  : 0/0
 17379 ;;		Unchanged: 0/0
 17380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17382 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17383 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17384 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17385 ;;Total ram usage:        4 bytes
 17386 ;; Hardware stack levels used:    1
 17387 ;; Hardware stack levels required when called:   11
 17388 ;; This function calls:
 17389 ;;		Nothing
 17390 ;; This function is called by:
 17391 ;;		_Rtcm_GetRtccDate
 17392 ;; This function uses a non-reentrant model
 17393 ;;
 17394                           
 17395                           	psect	text76
 17396  0000'                    __ptext76:
 17397                           	opt stack 0
 17398  0000'                    _Rtcc_GetRtccValue:
 17399                           	opt stack 15
 17400                           
 17401                           ; BSR set to: 0
 17402                           ;incstack = 0
 17403                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 17404  0000' 0100               	movlb	0	; () banked
 17405  0002' 6F00'              	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 17406                           
 17407                           ;rtcc_drv.c: 208: UINT8 RegValue;
 17408                           ;rtcc_drv.c: 209: UINT8 RetValue;
 17409                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 17410  0004' D02D               	goto	l298
 17411  0006'                    l299:
 17412                           
 17413                           ; BSR set to: 0
 17414                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 17415  0006' 010F               	movlb	15	; () banked
 17416  0008' 833F               	bsf	63,1,b	;volatile
 17417  000A'                    
 17418                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 17419  000A' 813F               	bsf	63,0,b	;volatile
 17420  000C' D01C               	goto	L17
 17421  000E'                    l301:
 17422                           
 17423                           ; BSR set to: 0
 17424                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 17425  000E' 010F               	movlb	15	; () banked
 17426  0010' 833F               	bsf	63,1,b	;volatile
 17427  0012' D01E               	goto	L18
 17428  0014'                    l302:
 17429                           
 17430                           ; BSR set to: 0
 17431                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 17432  0014' 010F               	movlb	15	; () banked
 17433  0016' 833F               	bsf	63,1,b	;volatile
 17434  0018' D021               	goto	L21
 17435  001A'                    l7941:
 17436                           
 17437                           ; BSR set to: 15
 17438                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 17439  001A' C003' F000'        	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 17440  001E' 0E0F               	movlw	15
 17441  0020' 0100               	movlb	0	; () banked
 17442  0022' 1700'              	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 17443  0024' 3900'              	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 17444  0026' 0B0F               	andlw	15
 17445  0028' 0B0F               	andlw	15
 17446  002A' 0D0A               	mullw	10
 17447  002C' 50F3               	movf	prodl,w,c
 17448  002E' 2500'              	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 17449  0030' 6F00'              	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 17450                           
 17451                           ;rtcc_drv.c: 241: break;
 17452  0032' D02D               	goto	l300
 17453  0034'                    l303:
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 17457  0034' 010F               	movlb	15	; () banked
 17458  0036' 933F               	bcf	63,1,b	;volatile
 17459                           
 17460                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 17461  0038' 813F               	bsf	63,0,b	;volatile
 17462                           
 17463                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 17464  003A' CF99 F002'         	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 17465                           
 17466                           ;rtcc_drv.c: 249: break;
 17467  003E' D027               	goto	l300
 17468  0040'                    l304:
 17469                           
 17470                           ; BSR set to: 0
 17471                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 17472  0040' 010F               	movlb	15	; () banked
 17473  0042' 933F               	bcf	63,1,b	;volatile
 17474  0044' D7E2               	goto	L19
 17475  0046'                    L17:
 17476                           
 17477                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 17478  0046' CF98 F003'         	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 17479  004A' D7E7               	goto	l7941
 17480  004C'                    l305:
 17481                           
 17482                           ; BSR set to: 0
 17483                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 17484  004C' 010F               	movlb	15	; () banked
 17485  004E' 933F               	bcf	63,1,b	;volatile
 17486  0050'                    L18:
 17487                           
 17488                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 17489  0050' 913F               	bcf	63,0,b	;volatile
 17490                           
 17491                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 17492  0052' CF99 F003'         	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 17493  0056' D7E1               	goto	l7941
 17494  0058'                    l306:
 17495                           
 17496                           ; BSR set to: 0
 17497                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 17498  0058' 010F               	movlb	15	; () banked
 17499  005A' 933F               	bcf	63,1,b	;volatile
 17500  005C'                    L21:
 17501                           
 17502                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 17503  005C' 913F               	bcf	63,0,b	;volatile
 17504  005E' D7F3               	goto	L17
 17505  0060'                    l298:
 17506                           
 17507                           ; BSR set to: 0
 17508  0060' 0100               	movlb	0	; () banked
 17509  0062' 5100'              	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 17510                           
 17511                           ; Switch size 1, requested type "space"
 17512                           ; Number of cases is 7, Range of values is 0 to 6
 17513                           ; switch strategies available:
 17514                           ; Name         Instructions Cycles
 17515                           ; simple_byte           22    12 (average)
 17516                           ;	Chosen strategy is simple_byte
 17517  0064' 0A00               	xorlw	0	; case 0
 17518  0066' B4D8               	btfsc	status,2,c
 17519  0068' D7CE               	goto	l299
 17520  006A' 0A01               	xorlw	1	; case 1
 17521  006C' B4D8               	btfsc	status,2,c
 17522  006E' D7CF               	goto	l301
 17523  0070' 0A03               	xorlw	3	; case 2
 17524  0072' B4D8               	btfsc	status,2,c
 17525  0074' D7CF               	goto	l302
 17526  0076' 0A01               	xorlw	1	; case 3
 17527  0078' B4D8               	btfsc	status,2,c
 17528  007A' D7DC               	goto	l303
 17529  007C' 0A07               	xorlw	7	; case 4
 17530  007E' B4D8               	btfsc	status,2,c
 17531  0080' D7DF               	goto	l304
 17532  0082' 0A01               	xorlw	1	; case 5
 17533  0084' B4D8               	btfsc	status,2,c
 17534  0086' D7E2               	goto	l305
 17535  0088' 0A03               	xorlw	3	; case 6
 17536  008A' B4D8               	btfsc	status,2,c
 17537  008C' D7E5               	goto	l306
 17538  008E'                    l300:
 17539                           
 17540                           ;rtcc_drv.c: 286: return RetValue;
 17541                           
 17542                           ; BSR set to: 0
 17543  008E' 0100               	movlb	0	; () banked
 17544  0090' 5100'              	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 17545  0092' 0012               	return	
 17546  0094'                    __end_of_Rtcc_GetRtccValue:
 17547                           	opt stack 0
 17548                           tosu	equ	0xFFF
 17549                           tosh	equ	0xFFE
 17550                           tosl	equ	0xFFD
 17551                           pclath	equ	0xFFA
 17552                           tblptru	equ	0xFF8
 17553                           tblptrh	equ	0xFF7
 17554                           tblptrl	equ	0xFF6
 17555                           tablat	equ	0xFF5
 17556                           prodh	equ	0xFF4
 17557                           prodl	equ	0xFF3
 17558                           intcon	equ	0xFF2
 17559                           intcon2	equ	0xFF1
 17560                           intcon3	equ	0xFF0
 17561                           indf0	equ	0xFEF
 17562                           postinc0	equ	0xFEE
 17563                           plusw0	equ	0xFEB
 17564                           fsr0h	equ	0xFEA
 17565                           fsr0l	equ	0xFE9
 17566                           wreg	equ	0xFE8
 17567                           indf1	equ	0xFE7
 17568                           postinc1	equ	0xFE6
 17569                           postdec1	equ	0xFE5
 17570                           fsr1h	equ	0xFE2
 17571                           fsr1l	equ	0xFE1
 17572                           indf2	equ	0xFDF
 17573                           postinc2	equ	0xFDE
 17574                           postdec2	equ	0xFDD
 17575                           plusw2	equ	0xFDB
 17576                           fsr2h	equ	0xFDA
 17577                           fsr2l	equ	0xFD9
 17578                           status	equ	0xFD8
 17579                           
 17580 ;; *************** function _Rtcc_SetRtcStatus *****************
 17581 ;; Defined at:
 17582 ;;		line 149 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17583 ;; Parameters:    Size  Location     Type
 17584 ;;  Status          1    wreg     unsigned char 
 17585 ;; Auto vars:     Size  Location     Type
 17586 ;;  Status          1    0[BANK0 ] unsigned char 
 17587 ;; Return value:  Size  Location     Type
 17588 ;;                  1    wreg      void 
 17589 ;; Registers used:
 17590 ;;		wreg
 17591 ;; Tracked objects:
 17592 ;;		On entry : 0/0
 17593 ;;		On exit  : 0/0
 17594 ;;		Unchanged: 0/0
 17595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17597 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17599 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17600 ;;Total ram usage:        1 bytes
 17601 ;; Hardware stack levels used:    1
 17602 ;; Hardware stack levels required when called:   11
 17603 ;; This function calls:
 17604 ;;		Nothing
 17605 ;; This function is called by:
 17606 ;;		_Rtcm_MainTask
 17607 ;; This function uses a non-reentrant model
 17608 ;;
 17609                           
 17610                           	psect	text77
 17611  0000'                    __ptext77:
 17612                           	opt stack 0
 17613  0000'                    _Rtcc_SetRtcStatus:
 17614                           	opt stack 16
 17615                           
 17616                           ; BSR set to: 0
 17617                           ;incstack = 0
 17618                           ;Rtcc_SetRtcStatus@Status stored from wreg
 17619  0000' 0100               	movlb	0	; () banked
 17620  0002' 6F00'              	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 17621                           
 17622                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 17623  0004' 0100               	movlb	0	; () banked
 17624  0006' B100'              	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 17625  0008' D003               	bra	u6915
 17626  000A' 010F               	movlb	15	; () banked
 17627  000C' 9F3F               	bcf	63,7,b	;volatile
 17628  000E' D002               	bra	u6916
 17629  0010'                    u6915:
 17630  0010' 010F               	movlb	15	; () banked
 17631  0012' 8F3F               	bsf	63,7,b	;volatile
 17632  0014'                    u6916:
 17633                           
 17634                           ; BSR set to: 15
 17635  0014' 0012               	return		;funcret
 17636  0016'                    __end_of_Rtcc_SetRtcStatus:
 17637                           	opt stack 0
 17638                           tosu	equ	0xFFF
 17639                           tosh	equ	0xFFE
 17640                           tosl	equ	0xFFD
 17641                           pclath	equ	0xFFA
 17642                           tblptru	equ	0xFF8
 17643                           tblptrh	equ	0xFF7
 17644                           tblptrl	equ	0xFF6
 17645                           tablat	equ	0xFF5
 17646                           prodh	equ	0xFF4
 17647                           prodl	equ	0xFF3
 17648                           intcon	equ	0xFF2
 17649                           intcon2	equ	0xFF1
 17650                           intcon3	equ	0xFF0
 17651                           indf0	equ	0xFEF
 17652                           postinc0	equ	0xFEE
 17653                           plusw0	equ	0xFEB
 17654                           fsr0h	equ	0xFEA
 17655                           fsr0l	equ	0xFE9
 17656                           wreg	equ	0xFE8
 17657                           indf1	equ	0xFE7
 17658                           postinc1	equ	0xFE6
 17659                           postdec1	equ	0xFE5
 17660                           fsr1h	equ	0xFE2
 17661                           fsr1l	equ	0xFE1
 17662                           indf2	equ	0xFDF
 17663                           postinc2	equ	0xFDE
 17664                           postdec2	equ	0xFDD
 17665                           plusw2	equ	0xFDB
 17666                           fsr2h	equ	0xFDA
 17667                           fsr2l	equ	0xFD9
 17668                           status	equ	0xFD8
 17669                           
 17670 ;; *************** function _Rtcc_RtcConfig *****************
 17671 ;; Defined at:
 17672 ;;		line 106 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17673 ;; Parameters:    Size  Location     Type
 17674 ;;  RtcConfig       2    1[BANK0 ] PTR struct _RtccConfigTy
 17675 ;;		 -> RtcConfig(4), 
 17676 ;; Auto vars:     Size  Location     Type
 17677 ;;		None
 17678 ;; Return value:  Size  Location     Type
 17679 ;;                  1    wreg      void 
 17680 ;; Registers used:
 17681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17682 ;; Tracked objects:
 17683 ;;		On entry : 0/0
 17684 ;;		On exit  : 0/0
 17685 ;;		Unchanged: 0/0
 17686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17687 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17689 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17690 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17691 ;;Total ram usage:        3 bytes
 17692 ;; Hardware stack levels used:    1
 17693 ;; Hardware stack levels required when called:   12
 17694 ;; This function calls:
 17695 ;;		_RtccIrqInit
 17696 ;; This function is called by:
 17697 ;;		_Rtcm_MainTask
 17698 ;; This function uses a non-reentrant model
 17699 ;;
 17700                           
 17701                           	psect	text78
 17702  0000'                    __ptext78:
 17703                           	opt stack 0
 17704  0000'                    _Rtcc_RtcConfig:
 17705                           	opt stack 15
 17706                           
 17707                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 17708                           
 17709                           ; BSR set to: 15
 17710                           ;incstack = 0
 17711  0000' C001' FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 17712  0004' C002' FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 17713  0008' 50DF               	movf	indf2,w,c
 17714  000A' 0100               	movlb	0	; () banked
 17715  000C' 6F00'              	movwf	??_Rtcc_RtcConfig& (0+255),b
 17716  000E' 4700'              	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17717  0010' 4700'              	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17718  0012' 010F               	movlb	15	; () banked
 17719  0014' 513F               	movf	63,w,b	;volatile
 17720  0016' 0100               	movlb	0	; () banked
 17721  0018' 1900'              	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17722  001A' 0BFB               	andlw	-5
 17723  001C' 1900'              	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17724  001E' 010F               	movlb	15	; () banked
 17725  0020' 6F3F               	movwf	63,b	;volatile
 17726                           
 17727                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 17728  0022' 0100               	movlb	0	; () banked
 17729  0024' EE20 F001          	lfsr	2,1
 17730  0028' 5100'              	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17731  002A' 26D9               	addwf	fsr2l,f,c
 17732  002C' 5100'              	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17733  002E' 22DA               	addwfc	fsr2h,f,c
 17734  0030' 50DF               	movf	indf2,w,c
 17735  0032' 6F00'              	movwf	??_Rtcc_RtcConfig& (0+255),b
 17736  0034' 0E01               	movlw	1
 17737  0036' 1700'              	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 17738  0038' 4700'              	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17739  003A' 010F               	movlb	15	; () banked
 17740  003C' 513C               	movf	60,w,b	;volatile
 17741  003E' 0100               	movlb	0	; () banked
 17742  0040' 1900'              	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17743  0042' 0BFD               	andlw	-3
 17744  0044' 1900'              	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17745  0046' 010F               	movlb	15	; () banked
 17746  0048' 6F3C               	movwf	60,b	;volatile
 17747                           
 17748                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 17749  004A' 0100               	movlb	0	; () banked
 17750  004C' EE20 F001          	lfsr	2,1
 17751  0050' 5100'              	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17752  0052' 26D9               	addwf	fsr2l,f,c
 17753  0054' 5100'              	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17754  0056' 22DA               	addwfc	fsr2h,f,c
 17755  0058' 50DF               	movf	indf2,w,c
 17756  005A' 6F00'              	movwf	??_Rtcc_RtcConfig& (0+255),b
 17757  005C' 90D8               	bcf	status,0,c
 17758  005E' 3300'              	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 17759  0060' 0E01               	movlw	1
 17760  0062' 1700'              	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 17761  0064' 4700'              	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17762  0066' 4700'              	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 17763  0068' 010F               	movlb	15	; () banked
 17764  006A' 513C               	movf	60,w,b	;volatile
 17765  006C' 0100               	movlb	0	; () banked
 17766  006E' 1900'              	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17767  0070' 0BFB               	andlw	-5
 17768  0072' 1900'              	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 17769  0074' 010F               	movlb	15	; () banked
 17770  0076' 6F3C               	movwf	60,b	;volatile
 17771                           
 17772                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 17773  0078' 0100               	movlb	0	; () banked
 17774  007A' EE20 F002          	lfsr	2,2
 17775  007E' 5100'              	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17776  0080' 26D9               	addwf	fsr2l,f,c
 17777  0082' 5100'              	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17778  0084' 22DA               	addwfc	fsr2h,f,c
 17779  0086' 04DE               	decf	postinc2,w,c
 17780  0088' A4D8               	btfss	status,2,c
 17781  008A' 0012               	return	
 17782                           
 17783                           ; BSR set to: 0
 17784                           ;rtcc_drv.c: 115: {
 17785                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 17786  008C' EE20 F003          	lfsr	2,3
 17787  0090' 5100'              	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 17788  0092' 26D9               	addwf	fsr2l,f,c
 17789  0094' 5100'              	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 17790  0096' 22DA               	addwfc	fsr2h,f,c
 17791  0098' 50DF               	movf	indf2,w,c
 17792  009A' EC00' F000'        	call	_RtccIrqInit
 17793  009E' 0012               	return	
 17794  00A0'                    __end_of_Rtcc_RtcConfig:
 17795                           	opt stack 0
 17796                           tosu	equ	0xFFF
 17797                           tosh	equ	0xFFE
 17798                           tosl	equ	0xFFD
 17799                           pclath	equ	0xFFA
 17800                           tblptru	equ	0xFF8
 17801                           tblptrh	equ	0xFF7
 17802                           tblptrl	equ	0xFF6
 17803                           tablat	equ	0xFF5
 17804                           prodh	equ	0xFF4
 17805                           prodl	equ	0xFF3
 17806                           intcon	equ	0xFF2
 17807                           intcon2	equ	0xFF1
 17808                           intcon3	equ	0xFF0
 17809                           indf0	equ	0xFEF
 17810                           postinc0	equ	0xFEE
 17811                           plusw0	equ	0xFEB
 17812                           fsr0h	equ	0xFEA
 17813                           fsr0l	equ	0xFE9
 17814                           wreg	equ	0xFE8
 17815                           indf1	equ	0xFE7
 17816                           postinc1	equ	0xFE6
 17817                           postdec1	equ	0xFE5
 17818                           fsr1h	equ	0xFE2
 17819                           fsr1l	equ	0xFE1
 17820                           indf2	equ	0xFDF
 17821                           postinc2	equ	0xFDE
 17822                           postdec2	equ	0xFDD
 17823                           plusw2	equ	0xFDB
 17824                           fsr2h	equ	0xFDA
 17825                           fsr2l	equ	0xFD9
 17826                           status	equ	0xFD8
 17827                           
 17828 ;; *************** function _RtccIrqInit *****************
 17829 ;; Defined at:
 17830 ;;		line 84 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17831 ;; Parameters:    Size  Location     Type
 17832 ;;  Priority        1    wreg     enum E7710
 17833 ;; Auto vars:     Size  Location     Type
 17834 ;;  Priority        1    0[BANK0 ] enum E7710
 17835 ;; Return value:  Size  Location     Type
 17836 ;;                  1    wreg      void 
 17837 ;; Registers used:
 17838 ;;		wreg
 17839 ;; Tracked objects:
 17840 ;;		On entry : 0/0
 17841 ;;		On exit  : 0/0
 17842 ;;		Unchanged: 0/0
 17843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17847 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17848 ;;Total ram usage:        1 bytes
 17849 ;; Hardware stack levels used:    1
 17850 ;; Hardware stack levels required when called:   11
 17851 ;; This function calls:
 17852 ;;		Nothing
 17853 ;; This function is called by:
 17854 ;;		_Rtcc_RtcConfig
 17855 ;; This function uses a non-reentrant model
 17856 ;;
 17857                           
 17858                           	psect	text79
 17859  0000'                    __ptext79:
 17860                           	opt stack 0
 17861  0000'                    _RtccIrqInit:
 17862                           	opt stack 15
 17863                           
 17864                           ;incstack = 0
 17865                           ;RtccIrqInit@Priority stored from wreg
 17866  0000' 0100               	movlb	0	; () banked
 17867  0002' 6F00'              	movwf	RtccIrqInit@Priority& (0+255),b
 17868                           
 17869                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 17870  0004' 90A4               	bcf	4004,0,c	;volatile
 17871                           
 17872                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 17873  0006' 0100               	movlb	0	; () banked
 17874  0008' B100'              	btfsc	RtccIrqInit@Priority& (0+255),0,b
 17875  000A' D002               	bra	u6135
 17876  000C' 90A5               	bcf	4005,0,c	;volatile
 17877  000E' D001               	bra	u6136
 17878  0010'                    u6135:
 17879  0010' 80A5               	bsf	4005,0,c	;volatile
 17880  0012'                    u6136:
 17881                           
 17882                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 17883  0012' 80A3               	bsf	4003,0,c	;volatile
 17884  0014' 0012               	return		;funcret
 17885  0016'                    __end_of_RtccIrqInit:
 17886                           	opt stack 0
 17887                           tosu	equ	0xFFF
 17888                           tosh	equ	0xFFE
 17889                           tosl	equ	0xFFD
 17890                           pclath	equ	0xFFA
 17891                           tblptru	equ	0xFF8
 17892                           tblptrh	equ	0xFF7
 17893                           tblptrl	equ	0xFF6
 17894                           tablat	equ	0xFF5
 17895                           prodh	equ	0xFF4
 17896                           prodl	equ	0xFF3
 17897                           intcon	equ	0xFF2
 17898                           intcon2	equ	0xFF1
 17899                           intcon3	equ	0xFF0
 17900                           indf0	equ	0xFEF
 17901                           postinc0	equ	0xFEE
 17902                           plusw0	equ	0xFEB
 17903                           fsr0h	equ	0xFEA
 17904                           fsr0l	equ	0xFE9
 17905                           wreg	equ	0xFE8
 17906                           indf1	equ	0xFE7
 17907                           postinc1	equ	0xFE6
 17908                           postdec1	equ	0xFE5
 17909                           fsr1h	equ	0xFE2
 17910                           fsr1l	equ	0xFE1
 17911                           indf2	equ	0xFDF
 17912                           postinc2	equ	0xFDE
 17913                           postdec2	equ	0xFDD
 17914                           plusw2	equ	0xFDB
 17915                           fsr2h	equ	0xFDA
 17916                           fsr2l	equ	0xFD9
 17917                           status	equ	0xFD8
 17918                           
 17919 ;; *************** function _Rtcc_AlarmConfig *****************
 17920 ;; Defined at:
 17921 ;;		line 129 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17922 ;; Parameters:    Size  Location     Type
 17923 ;;  AlarmConfig     2    0[BANK0 ] PTR struct _RtccAlarmCon
 17924 ;;		 -> AlCfg(4), 
 17925 ;; Auto vars:     Size  Location     Type
 17926 ;;		None
 17927 ;; Return value:  Size  Location     Type
 17928 ;;                  1    wreg      void 
 17929 ;; Registers used:
 17930 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17931 ;; Tracked objects:
 17932 ;;		On entry : 0/0
 17933 ;;		On exit  : 0/0
 17934 ;;		Unchanged: 0/0
 17935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17936 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17938 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17939 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17940 ;;Total ram usage:        3 bytes
 17941 ;; Hardware stack levels used:    1
 17942 ;; Hardware stack levels required when called:   11
 17943 ;; This function calls:
 17944 ;;		Nothing
 17945 ;; This function is called by:
 17946 ;;		_Rtcm_MainTask
 17947 ;; This function uses a non-reentrant model
 17948 ;;
 17949                           
 17950                           	psect	text80
 17951  0000'                    __ptext80:
 17952                           	opt stack 0
 17953  0000'                    _Rtcc_AlarmConfig:
 17954                           	opt stack 16
 17955                           
 17956                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 17957                           
 17958                           ;incstack = 0
 17959  0000' C000' FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 17960  0004' C001' FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 17961  0008' 50DF               	movf	indf2,w,c
 17962  000A' 0100               	movlb	0	; () banked
 17963  000C' 6F00'              	movwf	??_Rtcc_AlarmConfig& (0+255),b
 17964  000E' 3300'              	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 17965  0010' 3300'              	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 17966  0012' 5091               	movf	3985,w,c	;volatile
 17967  0014' 1900'              	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 17968  0016' 0B7F               	andlw	-129
 17969  0018' 1900'              	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 17970  001A' 6E91               	movwf	3985,c	;volatile
 17971                           
 17972                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 17973  001C' EE20 F001          	lfsr	2,1
 17974  0020' 5100'              	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 17975  0022' 26D9               	addwf	fsr2l,f,c
 17976  0024' 5100'              	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 17977  0026' 22DA               	addwfc	fsr2h,f,c
 17978  0028' 50DF               	movf	indf2,w,c
 17979  002A' 6F00'              	movwf	??_Rtcc_AlarmConfig& (0+255),b
 17980  002C' 3B00'              	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 17981  002E' 4700'              	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 17982  0030' 4700'              	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 17983  0032' 5091               	movf	3985,w,c	;volatile
 17984  0034' 1900'              	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 17985  0036' 0BBF               	andlw	-65
 17986  0038' 1900'              	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 17987  003A' 6E91               	movwf	3985,c	;volatile
 17988                           
 17989                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 17990  003C' EE20 F002          	lfsr	2,2
 17991  0040' 5100'              	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 17992  0042' 26D9               	addwf	fsr2l,f,c
 17993  0044' 5100'              	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 17994  0046' 22DA               	addwfc	fsr2h,f,c
 17995  0048' 50DF               	movf	indf2,w,c
 17996  004A' 6F00'              	movwf	??_Rtcc_AlarmConfig& (0+255),b
 17997  004C' 4700'              	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 17998  004E' 4700'              	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 17999  0050' 5091               	movf	3985,w,c	;volatile
 18000  0052' 1900'              	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18001  0054' 0BC3               	andlw	-61
 18002  0056' 1900'              	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 18003  0058' 6E91               	movwf	3985,c	;volatile
 18004                           
 18005                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 18006  005A' EE20 F003          	lfsr	2,3
 18007  005E' 5100'              	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 18008  0060' 26D9               	addwf	fsr2l,f,c
 18009  0062' 5100'              	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 18010  0064' 22DA               	addwfc	fsr2h,f,c
 18011  0066' 50DF               	movf	indf2,w,c
 18012  0068' 6E90               	movwf	3984,c	;volatile
 18013                           
 18014                           ; BSR set to: 0
 18015  006A' 0012               	return		;funcret
 18016  006C'                    __end_of_Rtcc_AlarmConfig:
 18017                           	opt stack 0
 18018                           tosu	equ	0xFFF
 18019                           tosh	equ	0xFFE
 18020                           tosl	equ	0xFFD
 18021                           pclath	equ	0xFFA
 18022                           tblptru	equ	0xFF8
 18023                           tblptrh	equ	0xFF7
 18024                           tblptrl	equ	0xFF6
 18025                           tablat	equ	0xFF5
 18026                           prodh	equ	0xFF4
 18027                           prodl	equ	0xFF3
 18028                           intcon	equ	0xFF2
 18029                           intcon2	equ	0xFF1
 18030                           intcon3	equ	0xFF0
 18031                           indf0	equ	0xFEF
 18032                           postinc0	equ	0xFEE
 18033                           plusw0	equ	0xFEB
 18034                           fsr0h	equ	0xFEA
 18035                           fsr0l	equ	0xFE9
 18036                           wreg	equ	0xFE8
 18037                           indf1	equ	0xFE7
 18038                           postinc1	equ	0xFE6
 18039                           postdec1	equ	0xFE5
 18040                           fsr1h	equ	0xFE2
 18041                           fsr1l	equ	0xFE1
 18042                           indf2	equ	0xFDF
 18043                           postinc2	equ	0xFDE
 18044                           postdec2	equ	0xFDD
 18045                           plusw2	equ	0xFDB
 18046                           fsr2h	equ	0xFDA
 18047                           fsr2l	equ	0xFD9
 18048                           status	equ	0xFD8
 18049                           
 18050 ;; *************** function _Uart_InitUartModule *****************
 18051 ;; Defined at:
 18052 ;;		line 288 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 18053 ;; Parameters:    Size  Location     Type
 18054 ;;  Module          1    wreg     unsigned char 
 18055 ;;  UartConfig      2   32[BANK0 ] PTR struct _UartConfig
 18056 ;;		 -> UartConfig(21), 
 18057 ;; Auto vars:     Size  Location     Type
 18058 ;;  Module          1   36[BANK0 ] unsigned char 
 18059 ;; Return value:  Size  Location     Type
 18060 ;;                  1    wreg      void 
 18061 ;; Registers used:
 18062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18063 ;; Tracked objects:
 18064 ;;		On entry : 0/0
 18065 ;;		On exit  : 0/0
 18066 ;;		Unchanged: 0/0
 18067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18068 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18069 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18070 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18071 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18072 ;;Total ram usage:        5 bytes
 18073 ;; Hardware stack levels used:    1
 18074 ;; Hardware stack levels required when called:   13
 18075 ;; This function calls:
 18076 ;;		_SetUartBaudRate
 18077 ;; This function is called by:
 18078 ;;		_MdmWifi_MainTask
 18079 ;; This function uses a non-reentrant model
 18080 ;;
 18081                           
 18082                           	psect	text81
 18083  0000'                    __ptext81:
 18084                           	opt stack 0
 18085  0000'                    _Uart_InitUartModule:
 18086                           	opt stack 14
 18087                           
 18088                           ; BSR set to: 0
 18089                           ;incstack = 0
 18090                           ;Uart_InitUartModule@Module stored from wreg
 18091  0000' 0100               	movlb	0	; () banked
 18092  0002' 6F00'              	movwf	Uart_InitUartModule@Module& (0+255),b
 18093                           
 18094                           ;uart_drv.c: 290: if (Module == ((UINT8)(1)))
 18095  0004' 0100               	movlb	0	; () banked
 18096  0006' 0500'              	decf	Uart_InitUartModule@Module& (0+255),w,b
 18097  0008' A4D8               	btfss	status,2,c
 18098  000A' D0B8               	goto	l550
 18099                           
 18100                           ; BSR set to: 0
 18101                           ;uart_drv.c: 291: {
 18102                           ;uart_drv.c: 293: TRISCbits.TRISC6 = ((UINT8)(0));
 18103  000C' 9C94               	bcf	3988,6,c	;volatile
 18104                           
 18105                           ;uart_drv.c: 294: TRISCbits.TRISC7 = ((UINT8)(1));
 18106  000E' 8E94               	bsf	3988,7,c	;volatile
 18107                           
 18108                           ; BSR set to: 0
 18109                           ;uart_drv.c: 297: SetUartBaudRate(((UINT8)(1)), UartConfig);
 18110  0010' C020' F019'        	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 18111  0014' C021' F01A'        	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 18112  0018' 0E01               	movlw	1
 18113  001A' EC00' F000'        	call	_SetUartBaudRate
 18114                           
 18115                           ;uart_drv.c: 302: TXSTA1 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 18116  001E' 0100               	movlb	0	; () banked
 18117  0020' EE20 F004          	lfsr	2,4
 18118  0024' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18119  0026' 26D9               	addwf	fsr2l,f,c
 18120  0028' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18121  002A' 22DA               	addwfc	fsr2h,f,c
 18122  002C' 50DF               	movf	indf2,w,c
 18123  002E' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18124  0030' 0E06               	movlw	6
 18125  0032' 6F00'              	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18126  0034'                    u6985:
 18127  0034' 90D8               	bcf	status,0,c
 18128  0036' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18129  0038' 2F00'              	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18130  003A' D7FC               	goto	u6985
 18131  003C' 5100'              	movf	??_Uart_InitUartModule& (0+255),w,b
 18132  003E' 12AD               	iorwf	4013,f,c	;volatile
 18133                           
 18134                           ; BSR set to: 0
 18135                           ;uart_drv.c: 303: TXSTA1 |= (UartConfig->TxEnable) << ((UINT8)(5));
 18136  0040' EE20 F006          	lfsr	2,6
 18137  0044' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18138  0046' 26D9               	addwf	fsr2l,f,c
 18139  0048' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18140  004A' 22DA               	addwfc	fsr2h,f,c
 18141  004C' 50DF               	movf	indf2,w,c
 18142  004E' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18143  0050' 0E05               	movlw	5
 18144  0052' 6F00'              	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18145  0054'                    u6995:
 18146  0054' 90D8               	bcf	status,0,c
 18147  0056' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18148  0058' 2F00'              	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18149  005A' D7FC               	goto	u6995
 18150  005C' 5100'              	movf	??_Uart_InitUartModule& (0+255),w,b
 18151  005E' 12AD               	iorwf	4013,f,c	;volatile
 18152                           
 18153                           ; BSR set to: 0
 18154                           ;uart_drv.c: 304: TXSTA1 |= (UartConfig->UartMode) << ((UINT8)(4));
 18155  0060' EE20 F001          	lfsr	2,1
 18156  0064' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18157  0066' 26D9               	addwf	fsr2l,f,c
 18158  0068' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18159  006A' 22DA               	addwfc	fsr2h,f,c
 18160  006C' 50DF               	movf	indf2,w,c
 18161  006E' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18162  0070' 3900'              	swapf	??_Uart_InitUartModule& (0+255),w,b
 18163  0072' 0BF0               	andlw	240
 18164  0074' 12AD               	iorwf	4013,f,c	;volatile
 18165                           
 18166                           ; BSR set to: 0
 18167                           ;uart_drv.c: 305: TXSTA1 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 18168  0076' EE20 F008          	lfsr	2,8
 18169  007A' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18170  007C' 26D9               	addwf	fsr2l,f,c
 18171  007E' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18172  0080' 22DA               	addwfc	fsr2h,f,c
 18173  0082' 50DF               	movf	indf2,w,c
 18174  0084' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18175  0086' 90D8               	bcf	status,0,c
 18176  0088' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18177  008A' 90D8               	bcf	status,0,c
 18178  008C' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18179  008E' 90D8               	bcf	status,0,c
 18180  0090' 3500'              	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18181  0092' 12AD               	iorwf	4013,f,c	;volatile
 18182                           
 18183                           ; BSR set to: 0
 18184                           ;uart_drv.c: 306: TXSTA1 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 18185  0094' EE20 F003          	lfsr	2,3
 18186  0098' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18187  009A' 26D9               	addwf	fsr2l,f,c
 18188  009C' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18189  009E' 22DA               	addwfc	fsr2h,f,c
 18190  00A0' 50DF               	movf	indf2,w,c
 18191  00A2' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18192  00A4' 90D8               	bcf	status,0,c
 18193  00A6' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18194  00A8' 90D8               	bcf	status,0,c
 18195  00AA' 3500'              	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18196  00AC' 12AD               	iorwf	4013,f,c	;volatile
 18197                           
 18198                           ; BSR set to: 0
 18199                           ;uart_drv.c: 309: RCSTA1 |= (UartConfig->UartEnable) << ((UINT8)(7));
 18200  00AE' C020' FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 18201  00B2' C021' FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 18202  00B6' 50DF               	movf	indf2,w,c
 18203  00B8' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18204  00BA' 0E00               	movlw	0
 18205  00BC' B100'              	btfsc	??_Uart_InitUartModule& (0+255),0,b
 18206  00BE' 0E80               	movlw	128
 18207  00C0' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18208  00C2' 5100'              	movf	??_Uart_InitUartModule& (0+255),w,b
 18209  00C4' 12AC               	iorwf	4012,f,c	;volatile
 18210                           
 18211                           ; BSR set to: 0
 18212                           ;uart_drv.c: 310: RCSTA1 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 18213  00C6' EE20 F005          	lfsr	2,5
 18214  00CA' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18215  00CC' 26D9               	addwf	fsr2l,f,c
 18216  00CE' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18217  00D0' 22DA               	addwfc	fsr2h,f,c
 18218  00D2' 50DF               	movf	indf2,w,c
 18219  00D4' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18220  00D6' 0E06               	movlw	6
 18221  00D8' 6F00'              	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18222  00DA'                    u7005:
 18223  00DA' 90D8               	bcf	status,0,c
 18224  00DC' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18225  00DE' 2F00'              	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18226  00E0' D7FC               	goto	u7005
 18227  00E2' 5100'              	movf	??_Uart_InitUartModule& (0+255),w,b
 18228  00E4' 12AC               	iorwf	4012,f,c	;volatile
 18229                           
 18230                           ; BSR set to: 0
 18231                           ;uart_drv.c: 311: RCSTA1 |= (UartConfig->RxEnable) << ((UINT8)(4));
 18232  00E6' EE20 F007          	lfsr	2,7
 18233  00EA' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18234  00EC' 26D9               	addwf	fsr2l,f,c
 18235  00EE' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18236  00F0' 22DA               	addwfc	fsr2h,f,c
 18237  00F2' 50DF               	movf	indf2,w,c
 18238  00F4' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18239  00F6' 3900'              	swapf	??_Uart_InitUartModule& (0+255),w,b
 18240  00F8' 0BF0               	andlw	240
 18241  00FA' 12AC               	iorwf	4012,f,c	;volatile
 18242                           
 18243                           ; BSR set to: 0
 18244                           ;uart_drv.c: 314: BAUDCON1 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 18245  00FC' EE20 F002          	lfsr	2,2
 18246  0100' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18247  0102' 26D9               	addwf	fsr2l,f,c
 18248  0104' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18249  0106' 22DA               	addwfc	fsr2h,f,c
 18250  0108' 50DF               	movf	indf2,w,c
 18251  010A' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18252  010C' 90D8               	bcf	status,0,c
 18253  010E' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18254  0110' 90D8               	bcf	status,0,c
 18255  0112' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18256  0114' 90D8               	bcf	status,0,c
 18257  0116' 3500'              	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18258  0118' 127E               	iorwf	3966,f,c	;volatile
 18259                           
 18260                           ; BSR set to: 0
 18261                           ;uart_drv.c: 315: BAUDCON1 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 18262  011A' EE20 F00A          	lfsr	2,10
 18263  011E' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18264  0120' 26D9               	addwf	fsr2l,f,c
 18265  0122' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18266  0124' 22DA               	addwfc	fsr2h,f,c
 18267  0126' 50DF               	movf	indf2,w,c
 18268  0128' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18269  012A' 90D8               	bcf	status,0,c
 18270  012C' 3500'              	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18271  012E' 127E               	iorwf	3966,f,c	;volatile
 18272                           
 18273                           ; BSR set to: 0
 18274                           ;uart_drv.c: 316: BAUDCON1 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 18275  0130' EE20 F009          	lfsr	2,9
 18276  0134' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18277  0136' 26D9               	addwf	fsr2l,f,c
 18278  0138' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18279  013A' 22DA               	addwfc	fsr2h,f,c
 18280  013C' 50DF               	movf	indf2,w,c
 18281  013E' 127E               	iorwf	3966,f,c	;volatile
 18282                           
 18283                           ; BSR set to: 0
 18284                           ;uart_drv.c: 319: PIE1bits.TX1IE = UartConfig->TxInterruptEnable;
 18285  0140' EE20 F00B          	lfsr	2,11
 18286  0144' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18287  0146' 26D9               	addwf	fsr2l,f,c
 18288  0148' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18289  014A' 22DA               	addwfc	fsr2h,f,c
 18290  014C' 50DF               	movf	indf2,w,c
 18291  014E' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18292  0150' 3B00'              	swapf	??_Uart_InitUartModule& (0+255),f,b
 18293  0152' 509D               	movf	3997,w,c	;volatile
 18294  0154' 1900'              	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18295  0156' 0BEF               	andlw	-17
 18296  0158' 1900'              	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18297  015A' 6E9D               	movwf	3997,c	;volatile
 18298                           
 18299                           ; BSR set to: 0
 18300                           ;uart_drv.c: 320: PIE1bits.RC1IE = UartConfig->RxInterruptEnable;
 18301  015C' EE20 F00C          	lfsr	2,12
 18302  0160' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18303  0162' 26D9               	addwf	fsr2l,f,c
 18304  0164' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18305  0166' 22DA               	addwfc	fsr2h,f,c
 18306  0168' 50DF               	movf	indf2,w,c
 18307  016A' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18308  016C' 3B00'              	swapf	??_Uart_InitUartModule& (0+255),f,b
 18309  016E' 4700'              	rlncf	??_Uart_InitUartModule& (0+255),f,b
 18310  0170' 509D               	movf	3997,w,c	;volatile
 18311  0172' 1900'              	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18312  0174' 0BDF               	andlw	-33
 18313  0176' 1900'              	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18314  0178' 6E9D               	movwf	3997,c	;volatile
 18315                           
 18316                           ;uart_drv.c: 323: }
 18317  017A' 0012               	return	
 18318  017C'                    l550:
 18319                           
 18320                           ; BSR set to: 0
 18321                           ;uart_drv.c: 324: else if (Module == ((UINT8)(2)))
 18322                           
 18323                           ; BSR set to: 0
 18324  017C' 0E02               	movlw	2
 18325  017E' 1900'              	xorwf	Uart_InitUartModule@Module& (0+255),w,b
 18326  0180' A4D8               	btfss	status,2,c
 18327  0182' 0012               	return	
 18328                           
 18329                           ; BSR set to: 0
 18330                           ;uart_drv.c: 325: {
 18331                           ;uart_drv.c: 327: TRISCbits.TRISC0 = ((UINT8)(0));
 18332  0184' 9094               	bcf	3988,0,c	;volatile
 18333                           
 18334                           ;uart_drv.c: 328: TRISCbits.TRISC1 = ((UINT8)(1));
 18335  0186' 8294               	bsf	3988,1,c	;volatile
 18336                           
 18337                           ; BSR set to: 0
 18338                           ;uart_drv.c: 331: SetUartBaudRate(((UINT8)(2)), UartConfig);
 18339  0188' C020' F019'        	movff	Uart_InitUartModule@UartConfig,SetUartBaudRate@UartConfig
 18340  018C' C021' F01A'        	movff	Uart_InitUartModule@UartConfig+1,SetUartBaudRate@UartConfig+1
 18341  0190' 0E02               	movlw	2
 18342  0192' EC00' F000'        	call	_SetUartBaudRate
 18343                           
 18344                           ;uart_drv.c: 336: TXSTA2 |= (UartConfig->Tx9bitMode) << ((UINT8)(6));
 18345  0196' 0100               	movlb	0	; () banked
 18346  0198' EE20 F004          	lfsr	2,4
 18347  019C' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18348  019E' 26D9               	addwf	fsr2l,f,c
 18349  01A0' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18350  01A2' 22DA               	addwfc	fsr2h,f,c
 18351  01A4' 50DF               	movf	indf2,w,c
 18352  01A6' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18353  01A8' 0E06               	movlw	6
 18354  01AA' 6F00'              	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18355  01AC'                    u7025:
 18356  01AC' 90D8               	bcf	status,0,c
 18357  01AE' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18358  01B0' 2F00'              	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18359  01B2' D7FC               	goto	u7025
 18360  01B4' 5100'              	movf	??_Uart_InitUartModule& (0+255),w,b
 18361  01B6' 12A8               	iorwf	4008,f,c	;volatile
 18362                           
 18363                           ; BSR set to: 0
 18364                           ;uart_drv.c: 337: TXSTA2 |= (UartConfig->TxEnable) << ((UINT8)(5));
 18365  01B8' EE20 F006          	lfsr	2,6
 18366  01BC' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18367  01BE' 26D9               	addwf	fsr2l,f,c
 18368  01C0' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18369  01C2' 22DA               	addwfc	fsr2h,f,c
 18370  01C4' 50DF               	movf	indf2,w,c
 18371  01C6' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18372  01C8' 0E05               	movlw	5
 18373  01CA' 6F00'              	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18374  01CC'                    u7035:
 18375  01CC' 90D8               	bcf	status,0,c
 18376  01CE' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18377  01D0' 2F00'              	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18378  01D2' D7FC               	goto	u7035
 18379  01D4' 5100'              	movf	??_Uart_InitUartModule& (0+255),w,b
 18380  01D6' 12A8               	iorwf	4008,f,c	;volatile
 18381                           
 18382                           ; BSR set to: 0
 18383                           ;uart_drv.c: 338: TXSTA2 |= (UartConfig->UartMode) << ((UINT8)(4));
 18384  01D8' EE20 F001          	lfsr	2,1
 18385  01DC' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18386  01DE' 26D9               	addwf	fsr2l,f,c
 18387  01E0' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18388  01E2' 22DA               	addwfc	fsr2h,f,c
 18389  01E4' 50DF               	movf	indf2,w,c
 18390  01E6' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18391  01E8' 3900'              	swapf	??_Uart_InitUartModule& (0+255),w,b
 18392  01EA' 0BF0               	andlw	240
 18393  01EC' 12A8               	iorwf	4008,f,c	;volatile
 18394                           
 18395                           ; BSR set to: 0
 18396                           ;uart_drv.c: 339: TXSTA2 |= (UartConfig->SendBreakEnable) << ((UINT8)(3));
 18397  01EE' EE20 F008          	lfsr	2,8
 18398  01F2' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18399  01F4' 26D9               	addwf	fsr2l,f,c
 18400  01F6' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18401  01F8' 22DA               	addwfc	fsr2h,f,c
 18402  01FA' 50DF               	movf	indf2,w,c
 18403  01FC' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18404  01FE' 90D8               	bcf	status,0,c
 18405  0200' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18406  0202' 90D8               	bcf	status,0,c
 18407  0204' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18408  0206' 90D8               	bcf	status,0,c
 18409  0208' 3500'              	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18410  020A' 12A8               	iorwf	4008,f,c	;volatile
 18411                           
 18412                           ; BSR set to: 0
 18413                           ;uart_drv.c: 340: TXSTA2 |= (UartConfig->HighBaudMode) << ((UINT8)(2));
 18414  020C' EE20 F003          	lfsr	2,3
 18415  0210' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18416  0212' 26D9               	addwf	fsr2l,f,c
 18417  0214' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18418  0216' 22DA               	addwfc	fsr2h,f,c
 18419  0218' 50DF               	movf	indf2,w,c
 18420  021A' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18421  021C' 90D8               	bcf	status,0,c
 18422  021E' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18423  0220' 90D8               	bcf	status,0,c
 18424  0222' 3500'              	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18425  0224' 12A8               	iorwf	4008,f,c	;volatile
 18426                           
 18427                           ; BSR set to: 0
 18428                           ;uart_drv.c: 343: RCSTA2 |= (UartConfig->UartEnable) << ((UINT8)(7));
 18429  0226' C020' FFD9         	movff	Uart_InitUartModule@UartConfig,fsr2l
 18430  022A' C021' FFDA         	movff	Uart_InitUartModule@UartConfig+1,fsr2h
 18431  022E' 50DF               	movf	indf2,w,c
 18432  0230' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18433  0232' 0E00               	movlw	0
 18434  0234' B100'              	btfsc	??_Uart_InitUartModule& (0+255),0,b
 18435  0236' 0E80               	movlw	128
 18436  0238' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18437  023A' 5100'              	movf	??_Uart_InitUartModule& (0+255),w,b
 18438  023C' 129C               	iorwf	3996,f,c	;volatile
 18439                           
 18440                           ; BSR set to: 0
 18441                           ;uart_drv.c: 344: RCSTA2 |= (UartConfig->Rx9bitMode) << ((UINT8)(6));
 18442  023E' EE20 F005          	lfsr	2,5
 18443  0242' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18444  0244' 26D9               	addwf	fsr2l,f,c
 18445  0246' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18446  0248' 22DA               	addwfc	fsr2h,f,c
 18447  024A' 50DF               	movf	indf2,w,c
 18448  024C' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18449  024E' 0E06               	movlw	6
 18450  0250' 6F00'              	movwf	(??_Uart_InitUartModule+1)& (0+255),b
 18451  0252'                    u7045:
 18452  0252' 90D8               	bcf	status,0,c
 18453  0254' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18454  0256' 2F00'              	decfsz	(??_Uart_InitUartModule+1)& (0+255),f,b
 18455  0258' D7FC               	goto	u7045
 18456  025A' 5100'              	movf	??_Uart_InitUartModule& (0+255),w,b
 18457  025C' 129C               	iorwf	3996,f,c	;volatile
 18458                           
 18459                           ; BSR set to: 0
 18460                           ;uart_drv.c: 345: RCSTA2 |= (UartConfig->RxEnable) << ((UINT8)(4));
 18461  025E' EE20 F007          	lfsr	2,7
 18462  0262' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18463  0264' 26D9               	addwf	fsr2l,f,c
 18464  0266' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18465  0268' 22DA               	addwfc	fsr2h,f,c
 18466  026A' 50DF               	movf	indf2,w,c
 18467  026C' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18468  026E' 3900'              	swapf	??_Uart_InitUartModule& (0+255),w,b
 18469  0270' 0BF0               	andlw	240
 18470  0272' 129C               	iorwf	3996,f,c	;volatile
 18471                           
 18472                           ; BSR set to: 0
 18473                           ;uart_drv.c: 348: BAUDCON2 |= (UartConfig->BaudRateMode) << ((UINT8)(3));
 18474  0274' EE20 F002          	lfsr	2,2
 18475  0278' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18476  027A' 26D9               	addwf	fsr2l,f,c
 18477  027C' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18478  027E' 22DA               	addwfc	fsr2h,f,c
 18479  0280' 50DF               	movf	indf2,w,c
 18480  0282' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18481  0284' 90D8               	bcf	status,0,c
 18482  0286' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18483  0288' 90D8               	bcf	status,0,c
 18484  028A' 3700'              	rlcf	??_Uart_InitUartModule& (0+255),f,b
 18485  028C' 90D8               	bcf	status,0,c
 18486  028E' 3500'              	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18487  0290' 127C               	iorwf	3964,f,c	;volatile
 18488                           
 18489                           ; BSR set to: 0
 18490                           ;uart_drv.c: 349: BAUDCON2 |= (UartConfig->WakeUpEnable) << ((UINT8)(1));
 18491  0292' EE20 F00A          	lfsr	2,10
 18492  0296' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18493  0298' 26D9               	addwf	fsr2l,f,c
 18494  029A' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18495  029C' 22DA               	addwfc	fsr2h,f,c
 18496  029E' 50DF               	movf	indf2,w,c
 18497  02A0' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18498  02A2' 90D8               	bcf	status,0,c
 18499  02A4' 3500'              	rlcf	??_Uart_InitUartModule& (0+255),w,b
 18500  02A6' 127C               	iorwf	3964,f,c	;volatile
 18501                           
 18502                           ; BSR set to: 0
 18503                           ;uart_drv.c: 350: BAUDCON2 |= (UartConfig->AutobaudEnable) << ((UINT8)(0));
 18504  02A8' EE20 F009          	lfsr	2,9
 18505  02AC' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18506  02AE' 26D9               	addwf	fsr2l,f,c
 18507  02B0' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18508  02B2' 22DA               	addwfc	fsr2h,f,c
 18509  02B4' 50DF               	movf	indf2,w,c
 18510  02B6' 127C               	iorwf	3964,f,c	;volatile
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;uart_drv.c: 353: PIE3bits.TX2IE = UartConfig->TxInterruptEnable;
 18514  02B8' EE20 F00B          	lfsr	2,11
 18515  02BC' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18516  02BE' 26D9               	addwf	fsr2l,f,c
 18517  02C0' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18518  02C2' 22DA               	addwfc	fsr2h,f,c
 18519  02C4' 50DF               	movf	indf2,w,c
 18520  02C6' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18521  02C8' 3B00'              	swapf	??_Uart_InitUartModule& (0+255),f,b
 18522  02CA' 50A3               	movf	4003,w,c	;volatile
 18523  02CC' 1900'              	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18524  02CE' 0BEF               	andlw	-17
 18525  02D0' 1900'              	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18526  02D2' 6EA3               	movwf	4003,c	;volatile
 18527                           
 18528                           ; BSR set to: 0
 18529                           ;uart_drv.c: 354: PIE3bits.RC2IE = UartConfig->RxInterruptEnable;
 18530  02D4' EE20 F00C          	lfsr	2,12
 18531  02D8' 5100'              	movf	Uart_InitUartModule@UartConfig& (0+255),w,b
 18532  02DA' 26D9               	addwf	fsr2l,f,c
 18533  02DC' 5100'              	movf	(Uart_InitUartModule@UartConfig+1)& (0+255),w,b
 18534  02DE' 22DA               	addwfc	fsr2h,f,c
 18535  02E0' 50DF               	movf	indf2,w,c
 18536  02E2' 6F00'              	movwf	??_Uart_InitUartModule& (0+255),b
 18537  02E4' 3B00'              	swapf	??_Uart_InitUartModule& (0+255),f,b
 18538  02E6' 4700'              	rlncf	??_Uart_InitUartModule& (0+255),f,b
 18539  02E8' 50A3               	movf	4003,w,c	;volatile
 18540  02EA' 1900'              	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18541  02EC' 0BDF               	andlw	-33
 18542  02EE' 1900'              	xorwf	??_Uart_InitUartModule& (0+255),w,b
 18543  02F0' 6EA3               	movwf	4003,c	;volatile
 18544                           
 18545                           ; BSR set to: 0
 18546  02F2' 0012               	return	
 18547  02F4'                    __end_of_Uart_InitUartModule:
 18548                           	opt stack 0
 18549                           tosu	equ	0xFFF
 18550                           tosh	equ	0xFFE
 18551                           tosl	equ	0xFFD
 18552                           pclath	equ	0xFFA
 18553                           tblptru	equ	0xFF8
 18554                           tblptrh	equ	0xFF7
 18555                           tblptrl	equ	0xFF6
 18556                           tablat	equ	0xFF5
 18557                           prodh	equ	0xFF4
 18558                           prodl	equ	0xFF3
 18559                           intcon	equ	0xFF2
 18560                           intcon2	equ	0xFF1
 18561                           intcon3	equ	0xFF0
 18562                           indf0	equ	0xFEF
 18563                           postinc0	equ	0xFEE
 18564                           plusw0	equ	0xFEB
 18565                           fsr0h	equ	0xFEA
 18566                           fsr0l	equ	0xFE9
 18567                           wreg	equ	0xFE8
 18568                           indf1	equ	0xFE7
 18569                           postinc1	equ	0xFE6
 18570                           postdec1	equ	0xFE5
 18571                           fsr1h	equ	0xFE2
 18572                           fsr1l	equ	0xFE1
 18573                           indf2	equ	0xFDF
 18574                           postinc2	equ	0xFDE
 18575                           postdec2	equ	0xFDD
 18576                           plusw2	equ	0xFDB
 18577                           fsr2h	equ	0xFDA
 18578                           fsr2l	equ	0xFD9
 18579                           status	equ	0xFD8
 18580                           
 18581 ;; *************** function _SetUartBaudRate *****************
 18582 ;; Defined at:
 18583 ;;		line 121 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 18584 ;; Parameters:    Size  Location     Type
 18585 ;;  Module          1    wreg     unsigned char 
 18586 ;;  UartConfig      2   25[BANK0 ] PTR struct _UartConfig
 18587 ;;		 -> UartConfig(21), 
 18588 ;; Auto vars:     Size  Location     Type
 18589 ;;  Module          1   28[BANK0 ] unsigned char 
 18590 ;;  BaudRateRegi    2   29[BANK0 ] unsigned short 
 18591 ;;  DivisionFact    1   31[BANK0 ] unsigned char 
 18592 ;; Return value:  Size  Location     Type
 18593 ;;                  1    wreg      void 
 18594 ;; Registers used:
 18595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18596 ;; Tracked objects:
 18597 ;;		On entry : 0/0
 18598 ;;		On exit  : 0/0
 18599 ;;		Unchanged: 0/0
 18600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18602 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18604 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18605 ;;Total ram usage:        7 bytes
 18606 ;; Hardware stack levels used:    1
 18607 ;; Hardware stack levels required when called:   12
 18608 ;; This function calls:
 18609 ;;		___lldiv
 18610 ;;		___lmul
 18611 ;; This function is called by:
 18612 ;;		_Uart_InitUartModule
 18613 ;; This function uses a non-reentrant model
 18614 ;;
 18615                           
 18616                           	psect	text82
 18617  0000'                    __ptext82:
 18618                           	opt stack 0
 18619  0000'                    _SetUartBaudRate:
 18620                           	opt stack 14
 18621                           
 18622                           ; BSR set to: 0
 18623                           ;incstack = 0
 18624                           ;SetUartBaudRate@Module stored from wreg
 18625  0000' 0100               	movlb	0	; () banked
 18626  0002' 6F00'              	movwf	SetUartBaudRate@Module& (0+255),b
 18627                           
 18628                           ;uart_drv.c: 123: UINT16 BaudRateRegister = 0;
 18629  0004' 0E00               	movlw	0
 18630  0006' 0100               	movlb	0	; () banked
 18631  0008' 6F00'              	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 18632  000A' 0E00               	movlw	0
 18633  000C' 6F00'              	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 18634                           
 18635                           ;uart_drv.c: 124: UINT8 DivisionFactor = 0;
 18636  000E' 0E00               	movlw	0
 18637  0010' 6F00'              	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 18638                           
 18639                           ; BSR set to: 0
 18640                           ;uart_drv.c: 127: if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->BaudRat
      +                          eMode == ((UINT8)(0))))
 18641  0012' EE20 F002          	lfsr	2,2
 18642  0016' 5100'              	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18643  0018' 26D9               	addwf	fsr2l,f,c
 18644  001A' 5100'              	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18645  001C' 22DA               	addwfc	fsr2h,f,c
 18646  001E' 50DF               	movf	indf2,w,c
 18647  0020' A4D8               	btfss	status,2,c
 18648  0022' D00B               	goto	l507
 18649                           
 18650                           ; BSR set to: 0
 18651  0024' EE20 F002          	lfsr	2,2
 18652  0028' 5100'              	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18653  002A' 26D9               	addwf	fsr2l,f,c
 18654  002C' 5100'              	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18655  002E' 22DA               	addwfc	fsr2h,f,c
 18656  0030' 50DF               	movf	indf2,w,c
 18657  0032' A4D8               	btfss	status,2,c
 18658  0034' D002               	goto	l507
 18659                           
 18660                           ; BSR set to: 0
 18661                           ;uart_drv.c: 128: {
 18662                           ;uart_drv.c: 129: DivisionFactor = 64;
 18663  0036' 0E40               	movlw	64
 18664  0038' D039               	goto	L23
 18665  003A'                    l507:
 18666                           
 18667                           ; BSR set to: 0
 18668                           ;uart_drv.c: 131: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(0))))
 18669                           
 18670                           ; BSR set to: 0
 18671  003A' EE20 F002          	lfsr	2,2
 18672  003E' 5100'              	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18673  0040' 26D9               	addwf	fsr2l,f,c
 18674  0042' 5100'              	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18675  0044' 22DA               	addwfc	fsr2h,f,c
 18676  0046' 04DE               	decf	postinc2,w,c
 18677  0048' A4D8               	btfss	status,2,c
 18678  004A' D009               	goto	l509
 18679                           
 18680                           ; BSR set to: 0
 18681  004C' EE20 F002          	lfsr	2,2
 18682  0050' 5100'              	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18683  0052' 26D9               	addwf	fsr2l,f,c
 18684  0054' 5100'              	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18685  0056' 22DA               	addwfc	fsr2h,f,c
 18686  0058' 50DF               	movf	indf2,w,c
 18687  005A' B4D8               	btfsc	status,2,c
 18688  005C' D012               	goto	u6190
 18689  005E'                    l509:
 18690                           
 18691                           ; BSR set to: 0
 18692                           ;uart_drv.c: 135: else if ((UartConfig->BaudRateMode == ((UINT8)(0))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 18693                           
 18694                           ; BSR set to: 0
 18695  005E' EE20 F002          	lfsr	2,2
 18696  0062' 5100'              	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18697  0064' 26D9               	addwf	fsr2l,f,c
 18698  0066' 5100'              	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18699  0068' 22DA               	addwfc	fsr2h,f,c
 18700  006A' 50DF               	movf	indf2,w,c
 18701  006C' A4D8               	btfss	status,2,c
 18702  006E' D00B               	goto	l511
 18703                           
 18704                           ; BSR set to: 0
 18705  0070' EE20 F002          	lfsr	2,2
 18706  0074' 5100'              	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18707  0076' 26D9               	addwf	fsr2l,f,c
 18708  0078' 5100'              	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18709  007A' 22DA               	addwfc	fsr2h,f,c
 18710  007C' 04DE               	decf	postinc2,w,c
 18711  007E' A4D8               	btfss	status,2,c
 18712  0080' D002               	goto	l511
 18713  0082'                    u6190:
 18714                           
 18715                           ; BSR set to: 0
 18716                           ;uart_drv.c: 136: {
 18717                           ;uart_drv.c: 137: DivisionFactor = 16;
 18718  0082' 0E10               	movlw	16
 18719  0084' D013               	goto	L23
 18720  0086'                    l511:
 18721                           
 18722                           ; BSR set to: 0
 18723                           ;uart_drv.c: 139: else if ((UartConfig->BaudRateMode == ((UINT8)(1))) && (UartConfig->Ba
      +                          udRateMode == ((UINT8)(1))))
 18724                           
 18725                           ; BSR set to: 0
 18726  0086' EE20 F002          	lfsr	2,2
 18727  008A' 5100'              	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18728  008C' 26D9               	addwf	fsr2l,f,c
 18729  008E' 5100'              	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18730  0090' 22DA               	addwfc	fsr2h,f,c
 18731  0092' 04DE               	decf	postinc2,w,c
 18732  0094' A4D8               	btfss	status,2,c
 18733  0096' D00B               	goto	l513
 18734                           
 18735                           ; BSR set to: 0
 18736  0098' EE20 F002          	lfsr	2,2
 18737  009C' 5100'              	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18738  009E' 26D9               	addwf	fsr2l,f,c
 18739  00A0' 5100'              	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18740  00A2' 22DA               	addwfc	fsr2h,f,c
 18741  00A4' 04DE               	decf	postinc2,w,c
 18742  00A6' A4D8               	btfss	status,2,c
 18743  00A8' D002               	goto	l513
 18744                           
 18745                           ; BSR set to: 0
 18746                           ;uart_drv.c: 140: {
 18747                           ;uart_drv.c: 141: DivisionFactor = 4;
 18748  00AA' 0E04               	movlw	4
 18749  00AC'                    L23:
 18750  00AC' 6F00'              	movwf	SetUartBaudRate@DivisionFactor& (0+255),b
 18751  00AE'                    l513:
 18752                           
 18753                           ; BSR set to: 0
 18754                           ;uart_drv.c: 146: }
 18755                           ;uart_drv.c: 149: BaudRateRegister = ((UartConfig->McuBusClock/(DivisionFactor * UartCon
      +                          fig->DesiredBaudRate)) - 1);
 18756                           
 18757                           ; BSR set to: 0
 18758                           
 18759                           ; BSR set to: 0
 18760                           
 18761                           ; BSR set to: 0
 18762                           
 18763                           ; BSR set to: 0
 18764                           
 18765                           ;uart_drv.c: 143: else
 18766                           ;uart_drv.c: 144: {
 18767                           
 18768                           ; BSR set to: 0
 18769  00AE' EE20 F00D          	lfsr	2,13
 18770  00B2' 5100'              	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18771  00B4' 26D9               	addwf	fsr2l,f,c
 18772  00B6' 5100'              	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18773  00B8' 22DA               	addwfc	fsr2h,f,c
 18774  00BA' CFDE F00C'         	movff	postinc2,___lldiv@dividend
 18775  00BE' CFDE F00D'         	movff	postinc2,___lldiv@dividend+1
 18776  00C2' CFDE F00E'         	movff	postinc2,___lldiv@dividend+2
 18777  00C6' CFDE F00F'         	movff	postinc2,___lldiv@dividend+3
 18778  00CA' 5100'              	movf	SetUartBaudRate@DivisionFactor& (0+255),w,b
 18779  00CC' 6F00'              	movwf	___lmul@multiplier& (0+255),b
 18780  00CE' 6B00'              	clrf	(___lmul@multiplier+1)& (0+255),b
 18781  00D0' 6B00'              	clrf	(___lmul@multiplier+2)& (0+255),b
 18782  00D2' 6B00'              	clrf	(___lmul@multiplier+3)& (0+255),b
 18783  00D4' EE20 F011          	lfsr	2,17
 18784  00D8' 5100'              	movf	SetUartBaudRate@UartConfig& (0+255),w,b
 18785  00DA' 26D9               	addwf	fsr2l,f,c
 18786  00DC' 5100'              	movf	(SetUartBaudRate@UartConfig+1)& (0+255),w,b
 18787  00DE' 22DA               	addwfc	fsr2h,f,c
 18788  00E0' CFDE F004'         	movff	postinc2,___lmul@multiplicand
 18789  00E4' CFDE F005'         	movff	postinc2,___lmul@multiplicand+1
 18790  00E8' CFDE F006'         	movff	postinc2,___lmul@multiplicand+2
 18791  00EC' CFDE F007'         	movff	postinc2,___lmul@multiplicand+3
 18792  00F0' EC00' F000'        	call	___lmul	;wreg free
 18793  00F4' C000' F010'        	movff	?___lmul,___lldiv@divisor
 18794  00F8' C001' F011'        	movff	?___lmul+1,___lldiv@divisor+1
 18795  00FC' C002' F012'        	movff	?___lmul+2,___lldiv@divisor+2
 18796  0100' C003' F013'        	movff	?___lmul+3,___lldiv@divisor+3
 18797  0104' EC00' F000'        	call	___lldiv	;wreg free
 18798  0108' 0EFF               	movlw	255
 18799  010A' 0100               	movlb	0	; () banked
 18800  010C' 2500'              	addwf	?___lldiv& (0+255),w,b
 18801  010E' 6F00'              	movwf	SetUartBaudRate@BaudRateRegister& (0+255),b
 18802  0110' 0EFF               	movlw	255
 18803  0112' 2100'              	addwfc	(?___lldiv+1)& (0+255),w,b
 18804  0114' 6F00'              	movwf	(SetUartBaudRate@BaudRateRegister+1)& (0+255),b
 18805                           
 18806                           ; BSR set to: 0
 18807                           ;uart_drv.c: 151: if (Module == ((UINT8)(1)))
 18808  0116' 0500'              	decf	SetUartBaudRate@Module& (0+255),w,b
 18809  0118' A4D8               	btfss	status,2,c
 18810  011A' D005               	goto	l515
 18811                           
 18812                           ; BSR set to: 0
 18813                           ;uart_drv.c: 152: {
 18814                           ;uart_drv.c: 154: SPBRGH1 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 18815  011C' 0E00               	movlw	0
 18816  011E' 6E7F               	movwf	3967,c	;volatile
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;uart_drv.c: 155: SPBRG1 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 18820  0120' C01D' FFB0         	movff	SetUartBaudRate@BaudRateRegister,4016	;volatile
 18821                           
 18822                           ;uart_drv.c: 156: }
 18823  0124' 0012               	return	
 18824  0126'                    l515:
 18825                           
 18826                           ; BSR set to: 0
 18827                           ;uart_drv.c: 157: else if (Module == ((UINT8)(2)))
 18828                           
 18829                           ; BSR set to: 0
 18830  0126' 0E02               	movlw	2
 18831  0128' 1900'              	xorwf	SetUartBaudRate@Module& (0+255),w,b
 18832  012A' A4D8               	btfss	status,2,c
 18833  012C' 0012               	return	
 18834                           
 18835                           ; BSR set to: 0
 18836                           ;uart_drv.c: 158: {
 18837                           ;uart_drv.c: 160: SPBRGH2 = (UINT8)((BaudRateRegister & ((UINT8)(0xFF00))) >> ((UINT8)(8
      +                          )));
 18838  012E' 0E00               	movlw	0
 18839  0130' 6E7D               	movwf	3965,c	;volatile
 18840                           
 18841                           ; BSR set to: 0
 18842                           ;uart_drv.c: 161: SPBRG2 = (UINT8)((BaudRateRegister & ((UINT8)(0x00FF))));
 18843  0132' C01D' FFAB         	movff	SetUartBaudRate@BaudRateRegister,4011	;volatile
 18844                           
 18845                           ; BSR set to: 0
 18846  0136' 0012               	return	
 18847  0138'                    __end_of_SetUartBaudRate:
 18848                           	opt stack 0
 18849                           tosu	equ	0xFFF
 18850                           tosh	equ	0xFFE
 18851                           tosl	equ	0xFFD
 18852                           pclath	equ	0xFFA
 18853                           tblptru	equ	0xFF8
 18854                           tblptrh	equ	0xFF7
 18855                           tblptrl	equ	0xFF6
 18856                           tablat	equ	0xFF5
 18857                           prodh	equ	0xFF4
 18858                           prodl	equ	0xFF3
 18859                           intcon	equ	0xFF2
 18860                           intcon2	equ	0xFF1
 18861                           intcon3	equ	0xFF0
 18862                           indf0	equ	0xFEF
 18863                           postinc0	equ	0xFEE
 18864                           plusw0	equ	0xFEB
 18865                           fsr0h	equ	0xFEA
 18866                           fsr0l	equ	0xFE9
 18867                           wreg	equ	0xFE8
 18868                           indf1	equ	0xFE7
 18869                           postinc1	equ	0xFE6
 18870                           postdec1	equ	0xFE5
 18871                           fsr1h	equ	0xFE2
 18872                           fsr1l	equ	0xFE1
 18873                           indf2	equ	0xFDF
 18874                           postinc2	equ	0xFDE
 18875                           postdec2	equ	0xFDD
 18876                           plusw2	equ	0xFDB
 18877                           fsr2h	equ	0xFDA
 18878                           fsr2l	equ	0xFD9
 18879                           status	equ	0xFD8
 18880                           
 18881 ;; *************** function ___lmul *****************
 18882 ;; Defined at:
 18883 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 18884 ;; Parameters:    Size  Location     Type
 18885 ;;  multiplier      4    0[BANK0 ] unsigned long 
 18886 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 18887 ;; Auto vars:     Size  Location     Type
 18888 ;;  product         4    8[BANK0 ] unsigned long 
 18889 ;; Return value:  Size  Location     Type
 18890 ;;                  4    0[BANK0 ] unsigned long 
 18891 ;; Registers used:
 18892 ;;		wreg, status,2, status,0
 18893 ;; Tracked objects:
 18894 ;;		On entry : 0/0
 18895 ;;		On exit  : 0/0
 18896 ;;		Unchanged: 0/0
 18897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18898 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18899 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18901 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18902 ;;Total ram usage:       12 bytes
 18903 ;; Hardware stack levels used:    1
 18904 ;; Hardware stack levels required when called:   11
 18905 ;; This function calls:
 18906 ;;		Nothing
 18907 ;; This function is called by:
 18908 ;;		_Tmr_TmrBPrSet
 18909 ;;		_SetUartBaudRate
 18910 ;;		_strtol
 18911 ;; This function uses a non-reentrant model
 18912 ;;
 18913                           
 18914                           	psect	text83
 18915  0000'                    __ptext83:
 18916                           	opt stack 0
 18917  0000'                    ___lmul:
 18918                           	opt stack 15
 18919                           
 18920                           ; BSR set to: 0
 18921                           ;incstack = 0
 18922  0000' 0E00               	movlw	0
 18923  0002' 0100               	movlb	0	; () banked
 18924  0004' 6F00'              	movwf	___lmul@product& (0+255),b
 18925  0006' 0E00               	movlw	0
 18926  0008' 6F00'              	movwf	(___lmul@product+1)& (0+255),b
 18927  000A' 0E00               	movlw	0
 18928  000C' 6F00'              	movwf	(___lmul@product+2)& (0+255),b
 18929  000E' 0E00               	movlw	0
 18930  0010' 6F00'              	movwf	(___lmul@product+3)& (0+255),b
 18931  0012'                    
 18932                           ; BSR set to: 0
 18933                           
 18934                           ; BSR set to: 0
 18935  0012' A100'              	btfss	___lmul@multiplier& (0+255),0,b
 18936  0014' D008               	goto	l2194
 18937                           
 18938                           ; BSR set to: 0
 18939  0016' 5100'              	movf	___lmul@multiplicand& (0+255),w,b
 18940  0018' 2700'              	addwf	___lmul@product& (0+255),f,b
 18941  001A' 5100'              	movf	(___lmul@multiplicand+1)& (0+255),w,b
 18942  001C' 2300'              	addwfc	(___lmul@product+1)& (0+255),f,b
 18943  001E' 5100'              	movf	(___lmul@multiplicand+2)& (0+255),w,b
 18944  0020' 2300'              	addwfc	(___lmul@product+2)& (0+255),f,b
 18945  0022' 5100'              	movf	(___lmul@multiplicand+3)& (0+255),w,b
 18946  0024' 2300'              	addwfc	(___lmul@product+3)& (0+255),f,b
 18947  0026'                    l2194:
 18948                           
 18949                           ; BSR set to: 0
 18950                           
 18951                           ; BSR set to: 0
 18952  0026' 90D8               	bcf	status,0,c
 18953  0028' 3700'              	rlcf	___lmul@multiplicand& (0+255),f,b
 18954  002A' 3700'              	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 18955  002C' 3700'              	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 18956  002E' 3700'              	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 18957                           
 18958                           ; BSR set to: 0
 18959  0030' 90D8               	bcf	status,0,c
 18960  0032' 3300'              	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 18961  0034' 3300'              	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 18962  0036' 3300'              	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 18963  0038' 3300'              	rrcf	___lmul@multiplier& (0+255),f,b
 18964  003A' 5100'              	movf	___lmul@multiplier& (0+255),w,b
 18965  003C' 1100'              	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 18966  003E' 1100'              	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 18967  0040' 1100'              	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 18968  0042' A4D8               	btfss	status,2,c
 18969  0044' D7E6               	goto	l2193
 18970                           
 18971                           ; BSR set to: 0
 18972  0046' C008' F000'        	movff	___lmul@product,?___lmul
 18973  004A' C009' F001'        	movff	___lmul@product+1,?___lmul+1
 18974  004E' C00A' F002'        	movff	___lmul@product+2,?___lmul+2
 18975  0052' C00B' F003'        	movff	___lmul@product+3,?___lmul+3
 18976                           
 18977                           ; BSR set to: 0
 18978  0056' 0012               	return		;funcret
 18979  0058'                    __end_of___lmul:
 18980                           	opt stack 0
 18981                           tosu	equ	0xFFF
 18982                           tosh	equ	0xFFE
 18983                           tosl	equ	0xFFD
 18984                           pclath	equ	0xFFA
 18985                           tblptru	equ	0xFF8
 18986                           tblptrh	equ	0xFF7
 18987                           tblptrl	equ	0xFF6
 18988                           tablat	equ	0xFF5
 18989                           prodh	equ	0xFF4
 18990                           prodl	equ	0xFF3
 18991                           intcon	equ	0xFF2
 18992                           intcon2	equ	0xFF1
 18993                           intcon3	equ	0xFF0
 18994                           indf0	equ	0xFEF
 18995                           postinc0	equ	0xFEE
 18996                           plusw0	equ	0xFEB
 18997                           fsr0h	equ	0xFEA
 18998                           fsr0l	equ	0xFE9
 18999                           wreg	equ	0xFE8
 19000                           indf1	equ	0xFE7
 19001                           postinc1	equ	0xFE6
 19002                           postdec1	equ	0xFE5
 19003                           fsr1h	equ	0xFE2
 19004                           fsr1l	equ	0xFE1
 19005                           indf2	equ	0xFDF
 19006                           postinc2	equ	0xFDE
 19007                           postdec2	equ	0xFDD
 19008                           plusw2	equ	0xFDB
 19009                           fsr2h	equ	0xFDA
 19010                           fsr2l	equ	0xFD9
 19011                           status	equ	0xFD8
 19012                           
 19013 ;; *************** function _UartSetConfig *****************
 19014 ;; Defined at:
 19015 ;;		line 119 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19016 ;; Parameters:    Size  Location     Type
 19017 ;;		None
 19018 ;; Auto vars:     Size  Location     Type
 19019 ;;		None
 19020 ;; Return value:  Size  Location     Type
 19021 ;;                  1    wreg      void 
 19022 ;; Registers used:
 19023 ;;		wreg, status,2
 19024 ;; Tracked objects:
 19025 ;;		On entry : 0/0
 19026 ;;		On exit  : 0/0
 19027 ;;		Unchanged: 0/0
 19028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19033 ;;Total ram usage:        0 bytes
 19034 ;; Hardware stack levels used:    1
 19035 ;; Hardware stack levels required when called:   11
 19036 ;; This function calls:
 19037 ;;		Nothing
 19038 ;; This function is called by:
 19039 ;;		_MdmWifi_MainTask
 19040 ;; This function uses a non-reentrant model
 19041 ;;
 19042                           
 19043                           	psect	text84
 19044  0000'                    __ptext84:
 19045                           	opt stack 0
 19046  0000'                    _UartSetConfig:
 19047                           	opt stack 16
 19048                           
 19049                           ;mdm_wifi.c: 121: UartConfig.UartEnable = ((UINT8)(1));
 19050                           
 19051                           ; BSR set to: 0
 19052                           ;incstack = 0
 19053  0000' 0E01               	movlw	1
 19054  0002' 0103               	movlb	3	; () banked
 19055  0004' 6F00'              	movwf	_UartConfig& (0+255),b
 19056                           
 19057                           ;mdm_wifi.c: 122: UartConfig.UartMode = ((UINT8)(0));
 19058  0006' 0E00               	movlw	0
 19059  0008' 6F00'              	movwf	(_UartConfig+1)& (0+255),b
 19060                           
 19061                           ;mdm_wifi.c: 123: UartConfig.BaudRateMode = ((UINT8)(1));
 19062  000A' 0E01               	movlw	1
 19063  000C' 6F00'              	movwf	(_UartConfig+2)& (0+255),b
 19064                           
 19065                           ;mdm_wifi.c: 124: UartConfig.HighBaudMode = ((UINT8)(1));
 19066  000E' 0E01               	movlw	1
 19067  0010' 6F00'              	movwf	(_UartConfig+3)& (0+255),b
 19068                           
 19069                           ;mdm_wifi.c: 125: UartConfig.Tx9bitMode = ((UINT8)(0));
 19070  0012' 0E00               	movlw	0
 19071  0014' 6F00'              	movwf	(_UartConfig+4)& (0+255),b
 19072                           
 19073                           ;mdm_wifi.c: 126: UartConfig.Rx9bitMode = ((UINT8)(0));
 19074  0016' 0E00               	movlw	0
 19075  0018' 6F00'              	movwf	(_UartConfig+5)& (0+255),b
 19076                           
 19077                           ;mdm_wifi.c: 127: UartConfig.TxEnable = ((UINT8)(1));
 19078  001A' 0E01               	movlw	1
 19079  001C' 6F00'              	movwf	(_UartConfig+6)& (0+255),b
 19080                           
 19081                           ;mdm_wifi.c: 128: UartConfig.RxEnable = ((UINT8)(1));
 19082  001E' 0E01               	movlw	1
 19083  0020' 6F00'              	movwf	(_UartConfig+7)& (0+255),b
 19084                           
 19085                           ;mdm_wifi.c: 129: UartConfig.SendBreakEnable = ((UINT8)(0));
 19086  0022' 0E00               	movlw	0
 19087  0024' 6F00'              	movwf	(_UartConfig+8)& (0+255),b
 19088                           
 19089                           ;mdm_wifi.c: 130: UartConfig.AutobaudEnable = ((UINT8)(0));
 19090  0026' 0E00               	movlw	0
 19091  0028' 6F00'              	movwf	(_UartConfig+9)& (0+255),b
 19092                           
 19093                           ;mdm_wifi.c: 131: UartConfig.WakeUpEnable = ((UINT8)(0));
 19094  002A' 0E00               	movlw	0
 19095  002C' 6F00'              	movwf	(_UartConfig+10)& (0+255),b
 19096                           
 19097                           ;mdm_wifi.c: 132: UartConfig.TxInterruptEnable = ((UINT8)(0));
 19098  002E' 0E00               	movlw	0
 19099  0030' 6F00'              	movwf	(_UartConfig+11)& (0+255),b
 19100                           
 19101                           ;mdm_wifi.c: 133: UartConfig.RxInterruptEnable = ((UINT8)(1));
 19102  0032' 0E01               	movlw	1
 19103  0034' 6F00'              	movwf	(_UartConfig+12)& (0+255),b
 19104                           
 19105                           ;mdm_wifi.c: 134: UartConfig.McuBusClock = ((UINT32)(48000000));
 19106  0036' 0E00               	movlw	0
 19107  0038' 6F00'              	movwf	(_UartConfig+13)& (0+255),b
 19108  003A' 0E6C               	movlw	108
 19109  003C' 6F00'              	movwf	(_UartConfig+14)& (0+255),b
 19110  003E' 0EDC               	movlw	220
 19111  0040' 6F00'              	movwf	(_UartConfig+15)& (0+255),b
 19112  0042' 0E02               	movlw	2
 19113  0044' 6F00'              	movwf	(_UartConfig+16)& (0+255),b
 19114                           
 19115                           ;mdm_wifi.c: 135: UartConfig.DesiredBaudRate = 115200;
 19116  0046' 0E00               	movlw	0
 19117  0048' 6F00'              	movwf	(_UartConfig+17)& (0+255),b
 19118  004A' 0EC2               	movlw	194
 19119  004C' 6F00'              	movwf	(_UartConfig+18)& (0+255),b
 19120  004E' 0E01               	movlw	1
 19121  0050' 6F00'              	movwf	(_UartConfig+19)& (0+255),b
 19122  0052' 0E00               	movlw	0
 19123  0054' 6F00'              	movwf	(_UartConfig+20)& (0+255),b
 19124                           
 19125                           ; BSR set to: 3
 19126  0056' 0012               	return		;funcret
 19127  0058'                    __end_of_UartSetConfig:
 19128                           	opt stack 0
 19129                           tosu	equ	0xFFF
 19130                           tosh	equ	0xFFE
 19131                           tosl	equ	0xFFD
 19132                           pclath	equ	0xFFA
 19133                           tblptru	equ	0xFF8
 19134                           tblptrh	equ	0xFF7
 19135                           tblptrl	equ	0xFF6
 19136                           tablat	equ	0xFF5
 19137                           prodh	equ	0xFF4
 19138                           prodl	equ	0xFF3
 19139                           intcon	equ	0xFF2
 19140                           intcon2	equ	0xFF1
 19141                           intcon3	equ	0xFF0
 19142                           indf0	equ	0xFEF
 19143                           postinc0	equ	0xFEE
 19144                           plusw0	equ	0xFEB
 19145                           fsr0h	equ	0xFEA
 19146                           fsr0l	equ	0xFE9
 19147                           wreg	equ	0xFE8
 19148                           indf1	equ	0xFE7
 19149                           postinc1	equ	0xFE6
 19150                           postdec1	equ	0xFE5
 19151                           fsr1h	equ	0xFE2
 19152                           fsr1l	equ	0xFE1
 19153                           indf2	equ	0xFDF
 19154                           postinc2	equ	0xFDE
 19155                           postdec2	equ	0xFDD
 19156                           plusw2	equ	0xFDB
 19157                           fsr2h	equ	0xFDA
 19158                           fsr2l	equ	0xFD9
 19159                           status	equ	0xFD8
 19160                           
 19161 ;; *************** function _MdmWifiGetUartData *****************
 19162 ;; Defined at:
 19163 ;;		line 146 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19164 ;; Parameters:    Size  Location     Type
 19165 ;;		None
 19166 ;; Auto vars:     Size  Location     Type
 19167 ;;		None
 19168 ;; Return value:  Size  Location     Type
 19169 ;;                  1    wreg      void 
 19170 ;; Registers used:
 19171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19172 ;; Tracked objects:
 19173 ;;		On entry : 0/0
 19174 ;;		On exit  : 0/0
 19175 ;;		Unchanged: 0/0
 19176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19181 ;;Total ram usage:        0 bytes
 19182 ;; Hardware stack levels used:    1
 19183 ;; Hardware stack levels required when called:   12
 19184 ;; This function calls:
 19185 ;;		_ClearBuffer
 19186 ;;		_GenerateEvt
 19187 ;;		_ReceiveEvt
 19188 ;;		_StringCopy
 19189 ;; This function is called by:
 19190 ;;		_MdmWifi_MainTask
 19191 ;; This function uses a non-reentrant model
 19192 ;;
 19193                           
 19194                           	psect	text85
 19195  0000'                    __ptext85:
 19196                           	opt stack 0
 19197  0000'                    _MdmWifiGetUartData:
 19198                           	opt stack 15
 19199                           
 19200                           ;mdm_wifi.c: 148: static WifiUartGetDataStateType WifiUartGetDataState = WifiMdmUart_RxI
      +                          dle;
 19201                           ;mdm_wifi.c: 149: static UINT8 Counter = 0;
 19202                           ;mdm_wifi.c: 151: switch (WifiUartGetDataState)
 19203                           
 19204                           ; BSR set to: 3
 19205                           ;incstack = 0
 19206  0000' D05F               	goto	l875
 19207  0002'                    
 19208                           ;mdm_wifi.c: 155: if (ReceiveEvt(&NewWifiUartData))
 19209  0002' 0E00'              	movlw	low _NewWifiUartData
 19210  0004' 0100               	movlb	0	; () banked
 19211  0006' 6F00'              	movwf	ReceiveEvt@Event& (0+255),b
 19212  0008' 0E00'              	movlw	high _NewWifiUartData
 19213  000A' 6F00'              	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19214  000C' EC00' F000'        	call	_ReceiveEvt	;wreg free
 19215  0010' 0900               	iorlw	0
 19216  0012' B4D8               	btfsc	status,2,c
 19217  0014' 0012               	return	
 19218                           
 19219                           ;mdm_wifi.c: 156: {
 19220                           ;mdm_wifi.c: 158: WifiUartGetDataState = WifiMdmUart_Receiving;
 19221  0016' 0E01               	movlw	1
 19222  0018' 0101               	movlb	1	; () banked
 19223  001A' 6F00'              	movwf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),b
 19224                           
 19225                           ; BSR set to: 1
 19226                           ;mdm_wifi.c: 159: }
 19227                           ;mdm_wifi.c: 160: break;
 19228  001C' 0012               	return	
 19229  001E'                    
 19230                           ; BSR set to: 1
 19231                           ;mdm_wifi.c: 164: if (ReceiveEvt(&NewWifiUartData))
 19232                           
 19233                           ; BSR set to: 1
 19234  001E' 0E00'              	movlw	low _NewWifiUartData
 19235  0020' 0100               	movlb	0	; () banked
 19236  0022' 6F00'              	movwf	ReceiveEvt@Event& (0+255),b
 19237  0024' 0E00'              	movlw	high _NewWifiUartData
 19238  0026' 6F00'              	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19239  0028' EC00' F000'        	call	_ReceiveEvt	;wreg free
 19240  002C' 0900               	iorlw	0
 19241  002E' B4D8               	btfsc	status,2,c
 19242  0030' D004               	goto	l880
 19243                           
 19244                           ;mdm_wifi.c: 165: {
 19245                           ;mdm_wifi.c: 167: Counter = 0;
 19246  0032' 0E00               	movlw	0
 19247  0034' 0101               	movlb	1	; () banked
 19248  0036' 6F00'              	movwf	MdmWifiGetUartData@Counter& (0+255),b
 19249                           
 19250                           ;mdm_wifi.c: 168: }
 19251  0038' 0012               	return	
 19252  003A'                    l880:
 19253                           
 19254                           ;mdm_wifi.c: 169: else
 19255                           ;mdm_wifi.c: 170: {
 19256                           ;mdm_wifi.c: 172: Counter++;
 19257                           
 19258                           ; BSR set to: 1
 19259  003A' 0101               	movlb	1	; () banked
 19260  003C' 2B00'              	incf	MdmWifiGetUartData@Counter& (0+255),f,b
 19261                           
 19262                           ; BSR set to: 1
 19263                           ;mdm_wifi.c: 174: if (Counter >= (((UINT16)(10))/((UINT16)(1))))
 19264  003E' 0E09               	movlw	9
 19265  0040' 6500'              	cpfsgt	MdmWifiGetUartData@Counter& (0+255),b
 19266  0042' 0012               	return	
 19267                           
 19268                           ; BSR set to: 1
 19269                           ;mdm_wifi.c: 175: {
 19270                           ;mdm_wifi.c: 177: Counter = 0;
 19271  0044' 0E00               	movlw	0
 19272  0046' 6F00'              	movwf	MdmWifiGetUartData@Counter& (0+255),b
 19273                           
 19274                           ; BSR set to: 1
 19275                           ;mdm_wifi.c: 179: StringCopy(MdmWifi_UartRxBuffer,WifiRxPacket.RxBuffer,MdmWifi_UartRxCo
      +                          unter);
 19276  0048' 0E00'              	movlw	low _MdmWifi_UartRxBuffer
 19277  004A' 0100               	movlb	0	; () banked
 19278  004C' 6F00'              	movwf	StringCopy@SourceStr& (0+255),b
 19279  004E' 0E00'              	movlw	high _MdmWifi_UartRxBuffer
 19280  0050' 6F00'              	movwf	(StringCopy@SourceStr+1)& (0+255),b
 19281  0052' 0E00'              	movlw	low _WifiRxPacket
 19282  0054' 6F00'              	movwf	StringCopy@DestStr& (0+255),b
 19283  0056' 0E00'              	movlw	high _WifiRxPacket
 19284  0058' 6F00'              	movwf	(StringCopy@DestStr+1)& (0+255),b
 19285  005A' C002' F004'        	movff	_MdmWifi_UartRxCounter,StringCopy@Len
 19286  005E' C003' F005'        	movff	_MdmWifi_UartRxCounter+1,StringCopy@Len+1
 19287  0062' EC00' F000'        	call	_StringCopy	;wreg free
 19288                           
 19289                           ;mdm_wifi.c: 180: WifiRxPacket.RxByteNum = MdmWifi_UartRxCounter;
 19290  0066' C002' F0C8'        	movff	_MdmWifi_UartRxCounter,_WifiRxPacket+200
 19291  006A' C003' F0C9'        	movff	_MdmWifi_UartRxCounter+1,_WifiRxPacket+201
 19292                           
 19293                           ;mdm_wifi.c: 182: ClearBuffer(MdmWifi_UartRxBuffer,sizeof(MdmWifi_UartRxBuffer));
 19294  006E' 0E00'              	movlw	low _MdmWifi_UartRxBuffer
 19295  0070' 0100               	movlb	0	; () banked
 19296  0072' 6F00'              	movwf	ClearBuffer@Buffer& (0+255),b
 19297  0074' 0E00'              	movlw	high _MdmWifi_UartRxBuffer
 19298  0076' 6F00'              	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 19299  0078' 0E00               	movlw	0
 19300  007A' 6F00'              	movwf	(ClearBuffer@Len+1)& (0+255),b
 19301  007C' 0EC8               	movlw	200
 19302  007E' 6F00'              	movwf	ClearBuffer@Len& (0+255),b
 19303  0080' EC00' F000'        	call	_ClearBuffer	;wreg free
 19304                           
 19305                           ;mdm_wifi.c: 183: MdmWifi_UartRxCounter = 0;
 19306  0084' 0E00               	movlw	0
 19307  0086' 0101               	movlb	1	; () banked
 19308  0088' 6F00'              	movwf	(_MdmWifi_UartRxCounter+1)& (0+255),b
 19309  008A' 0E00               	movlw	0
 19310  008C' 6F00'              	movwf	_MdmWifi_UartRxCounter& (0+255),b
 19311                           
 19312                           ; BSR set to: 1
 19313                           ;mdm_wifi.c: 185: GenerateEvt(&(WifiRxPacket.PacketRxNotificationEvt));
 19314  008E' 0E00'              	movlw	low (_WifiRxPacket+202)
 19315  0090' 0100               	movlb	0	; () banked
 19316  0092' 6F00'              	movwf	GenerateEvt@Event& (0+255),b
 19317  0094' 0E00'              	movlw	high (_WifiRxPacket+202)
 19318  0096' 6F00'              	movwf	(GenerateEvt@Event+1)& (0+255),b
 19319  0098' EC00' F000'        	call	_GenerateEvt	;wreg free
 19320                           
 19321                           ;mdm_wifi.c: 186: GenerateEvt(&NewWifiPacket);
 19322  009C' 0E00'              	movlw	low _NewWifiPacket
 19323  009E' 0100               	movlb	0	; () banked
 19324  00A0' 6F00'              	movwf	GenerateEvt@Event& (0+255),b
 19325  00A2' 0E00'              	movlw	high _NewWifiPacket
 19326  00A4' 6F00'              	movwf	(GenerateEvt@Event+1)& (0+255),b
 19327  00A6' EC00' F000'        	call	_GenerateEvt	;wreg free
 19328                           
 19329                           ;mdm_wifi.c: 187: GenerateEvt(&NewWifiPacketParser);
 19330  00AA' 0E00'              	movlw	low _NewWifiPacketParser
 19331  00AC' 0100               	movlb	0	; () banked
 19332  00AE' 6F00'              	movwf	GenerateEvt@Event& (0+255),b
 19333  00B0' 0E00'              	movlw	high _NewWifiPacketParser
 19334  00B2' 6F00'              	movwf	(GenerateEvt@Event+1)& (0+255),b
 19335  00B4' EC00' F000'        	call	_GenerateEvt	;wreg free
 19336                           
 19337                           ;mdm_wifi.c: 189: WifiUartGetDataState = WifiMdmUart_RxIdle;
 19338  00B8' 0E00               	movlw	0
 19339  00BA' 0101               	movlb	1	; () banked
 19340  00BC' 6F00'              	movwf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),b
 19341                           
 19342                           ; BSR set to: 1
 19343                           ;mdm_wifi.c: 196: }
 19344                           
 19345                           ; BSR set to: 1
 19346                           ;mdm_wifi.c: 195: break;
 19347                           
 19348                           ;mdm_wifi.c: 194: default:
 19349                           
 19350                           ; BSR set to: 1
 19351                           ;mdm_wifi.c: 190: }
 19352                           ;mdm_wifi.c: 191: }
 19353                           ;mdm_wifi.c: 192: break;
 19354                           
 19355                           ; BSR set to: 1
 19356  00BE' 0012               	return	
 19357  00C0'                    l875:
 19358                           
 19359                           ; BSR set to: 1
 19360  00C0' 0101               	movlb	1	; () banked
 19361  00C2' 5100'              	movf	MdmWifiGetUartData@WifiUartGetDataState& (0+255),w,b
 19362                           
 19363                           ; Switch size 1, requested type "space"
 19364                           ; Number of cases is 2, Range of values is 0 to 1
 19365                           ; switch strategies available:
 19366                           ; Name         Instructions Cycles
 19367                           ; simple_byte            7     4 (average)
 19368                           ;	Chosen strategy is simple_byte
 19369  00C4' 0A00               	xorlw	0	; case 0
 19370  00C6' B4D8               	btfsc	status,2,c
 19371  00C8' D79C               	goto	l876
 19372  00CA' 0A01               	xorlw	1	; case 1
 19373  00CC' A4D8               	btfss	status,2,c
 19374  00CE' 0012               	return	
 19375  00D0' D7A6               	goto	l879
 19376  00D2'                    __end_of_MdmWifiGetUartData:
 19377                           	opt stack 0
 19378                           tosu	equ	0xFFF
 19379                           tosh	equ	0xFFE
 19380                           tosl	equ	0xFFD
 19381                           pclath	equ	0xFFA
 19382                           tblptru	equ	0xFF8
 19383                           tblptrh	equ	0xFF7
 19384                           tblptrl	equ	0xFF6
 19385                           tablat	equ	0xFF5
 19386                           prodh	equ	0xFF4
 19387                           prodl	equ	0xFF3
 19388                           intcon	equ	0xFF2
 19389                           intcon2	equ	0xFF1
 19390                           intcon3	equ	0xFF0
 19391                           indf0	equ	0xFEF
 19392                           postinc0	equ	0xFEE
 19393                           plusw0	equ	0xFEB
 19394                           fsr0h	equ	0xFEA
 19395                           fsr0l	equ	0xFE9
 19396                           wreg	equ	0xFE8
 19397                           indf1	equ	0xFE7
 19398                           postinc1	equ	0xFE6
 19399                           postdec1	equ	0xFE5
 19400                           fsr1h	equ	0xFE2
 19401                           fsr1l	equ	0xFE1
 19402                           indf2	equ	0xFDF
 19403                           postinc2	equ	0xFDE
 19404                           postdec2	equ	0xFDD
 19405                           plusw2	equ	0xFDB
 19406                           fsr2h	equ	0xFDA
 19407                           fsr2l	equ	0xFD9
 19408                           status	equ	0xFD8
 19409                           
 19410 ;; *************** function _MdmWifiEvtParser *****************
 19411 ;; Defined at:
 19412 ;;		line 207 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 19413 ;; Parameters:    Size  Location     Type
 19414 ;;		None
 19415 ;; Auto vars:     Size  Location     Type
 19416 ;;		None
 19417 ;; Return value:  Size  Location     Type
 19418 ;;                  1    wreg      void 
 19419 ;; Registers used:
 19420 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19421 ;; Tracked objects:
 19422 ;;		On entry : 0/0
 19423 ;;		On exit  : 0/0
 19424 ;;		Unchanged: 0/0
 19425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19430 ;;Total ram usage:        0 bytes
 19431 ;; Hardware stack levels used:    1
 19432 ;; Hardware stack levels required when called:   13
 19433 ;; This function calls:
 19434 ;;		_GenerateEvt
 19435 ;;		_ReceiveEvt
 19436 ;;		_strstr
 19437 ;; This function is called by:
 19438 ;;		_MdmWifi_MainTask
 19439 ;; This function uses a non-reentrant model
 19440 ;;
 19441                           
 19442                           	psect	text86
 19443  0000'                    __ptext86:
 19444                           	opt stack 0
 19445  0000'                    _MdmWifiEvtParser:
 19446                           	opt stack 14
 19447                           
 19448                           ;mdm_wifi.c: 210: if (ReceiveEvt(&NewWifiPacketParser))
 19449                           
 19450                           ;incstack = 0
 19451  0000' 0E00'              	movlw	low _NewWifiPacketParser
 19452  0002' 0100               	movlb	0	; () banked
 19453  0004' 6F00'              	movwf	ReceiveEvt@Event& (0+255),b
 19454  0006' 0E00'              	movlw	high _NewWifiPacketParser
 19455  0008' 6F00'              	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19456  000A' EC00' F000'        	call	_ReceiveEvt	;wreg free
 19457  000E' 0900               	iorlw	0
 19458  0010' B4D8               	btfsc	status,2,c
 19459  0012' 0012               	return	
 19460                           
 19461                           ;mdm_wifi.c: 211: {
 19462                           ;mdm_wifi.c: 213: if (strstr(WifiRxPacket.RxBuffer,(void*)"ERROR") != (0))
 19463  0014' 0E00'              	movlw	low _WifiRxPacket
 19464  0016' 0100               	movlb	0	; () banked
 19465  0018' 6F00'              	movwf	strstr@s1& (0+255),b
 19466  001A' 0E00'              	movlw	high _WifiRxPacket
 19467  001C' 6F00'              	movwf	(strstr@s1+1)& (0+255),b
 19468  001E' 0E00'              	movlw	low STR_1
 19469  0020' 6F00'              	movwf	strstr@s2& (0+255),b
 19470  0022' 0E00'              	movlw	high STR_1
 19471  0024' 6F00'              	movwf	(strstr@s2+1)& (0+255),b
 19472  0026' EC00' F000'        	call	_strstr	;wreg free
 19473  002A' 0100               	movlb	0	; () banked
 19474  002C' 5100'              	movf	?_strstr& (0+255),w,b
 19475  002E' 1100'              	iorwf	(?_strstr+1)& (0+255),w,b
 19476  0030' B4D8               	btfsc	status,2,c
 19477  0032' D007               	goto	l888
 19478                           
 19479                           ; BSR set to: 0
 19480                           ;mdm_wifi.c: 214: {
 19481                           ;mdm_wifi.c: 216: GenerateEvt(&WifiGenericError);
 19482  0034' 0E00'              	movlw	low _WifiGenericError
 19483  0036' 6F00'              	movwf	GenerateEvt@Event& (0+255),b
 19484  0038' 0E00'              	movlw	high _WifiGenericError
 19485  003A' 6F00'              	movwf	(GenerateEvt@Event+1)& (0+255),b
 19486  003C' EC00' F000'        	call	_GenerateEvt	;wreg free
 19487                           
 19488                           ;mdm_wifi.c: 217: }
 19489  0040' 0012               	return	
 19490  0042'                    l888:
 19491                           
 19492                           ;mdm_wifi.c: 219: else if (strstr(WifiRxPacket.RxBuffer,(void*)"+IPD") != (0))
 19493  0042' 0E00'              	movlw	low _WifiRxPacket
 19494  0044' 0100               	movlb	0	; () banked
 19495  0046' 6F00'              	movwf	strstr@s1& (0+255),b
 19496  0048' 0E00'              	movlw	high _WifiRxPacket
 19497  004A' 6F00'              	movwf	(strstr@s1+1)& (0+255),b
 19498  004C' 0E00'              	movlw	low STR_2
 19499  004E' 6F00'              	movwf	strstr@s2& (0+255),b
 19500  0050' 0E00'              	movlw	high STR_2
 19501  0052' 6F00'              	movwf	(strstr@s2+1)& (0+255),b
 19502  0054' EC00' F000'        	call	_strstr	;wreg free
 19503  0058' 0100               	movlb	0	; () banked
 19504  005A' 5100'              	movf	?_strstr& (0+255),w,b
 19505  005C' 1100'              	iorwf	(?_strstr+1)& (0+255),w,b
 19506  005E' B4D8               	btfsc	status,2,c
 19507  0060' 0012               	return	
 19508                           
 19509                           ; BSR set to: 0
 19510                           ;mdm_wifi.c: 220: {
 19511                           ;mdm_wifi.c: 222: GenerateEvt(&WifiReceiveNetData);
 19512  0062' 0E00'              	movlw	low _WifiReceiveNetData
 19513  0064' 6F00'              	movwf	GenerateEvt@Event& (0+255),b
 19514  0066' 0E00'              	movlw	high _WifiReceiveNetData
 19515  0068' 6F00'              	movwf	(GenerateEvt@Event+1)& (0+255),b
 19516  006A' EC00' F000'        	call	_GenerateEvt	;wreg free
 19517                           
 19518                           ;mdm_wifi.c: 224: else
 19519                           ;mdm_wifi.c: 225: {
 19520                           
 19521                           ;mdm_wifi.c: 223: }
 19522  006E' 0012               	return	
 19523  0070'                    __end_of_MdmWifiEvtParser:
 19524                           	opt stack 0
 19525                           tosu	equ	0xFFF
 19526                           tosh	equ	0xFFE
 19527                           tosl	equ	0xFFD
 19528                           pclath	equ	0xFFA
 19529                           tblptru	equ	0xFF8
 19530                           tblptrh	equ	0xFF7
 19531                           tblptrl	equ	0xFF6
 19532                           tablat	equ	0xFF5
 19533                           prodh	equ	0xFF4
 19534                           prodl	equ	0xFF3
 19535                           intcon	equ	0xFF2
 19536                           intcon2	equ	0xFF1
 19537                           intcon3	equ	0xFF0
 19538                           indf0	equ	0xFEF
 19539                           postinc0	equ	0xFEE
 19540                           plusw0	equ	0xFEB
 19541                           fsr0h	equ	0xFEA
 19542                           fsr0l	equ	0xFE9
 19543                           wreg	equ	0xFE8
 19544                           indf1	equ	0xFE7
 19545                           postinc1	equ	0xFE6
 19546                           postdec1	equ	0xFE5
 19547                           fsr1h	equ	0xFE2
 19548                           fsr1l	equ	0xFE1
 19549                           indf2	equ	0xFDF
 19550                           postinc2	equ	0xFDE
 19551                           postdec2	equ	0xFDD
 19552                           plusw2	equ	0xFDB
 19553                           fsr2h	equ	0xFDA
 19554                           fsr2l	equ	0xFD9
 19555                           status	equ	0xFD8
 19556                           
 19557 ;; *************** function _MdmWifi_StartWifiModemSm *****************
 19558 ;; Defined at:
 19559 ;;		line 84 in file "../Source/c/01_Hal/02_Drv/mdm_wifi_drv.c"
 19560 ;; Parameters:    Size  Location     Type
 19561 ;;		None
 19562 ;; Auto vars:     Size  Location     Type
 19563 ;;		None
 19564 ;; Return value:  Size  Location     Type
 19565 ;;                  1    wreg      void 
 19566 ;; Registers used:
 19567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19568 ;; Tracked objects:
 19569 ;;		On entry : 0/0
 19570 ;;		On exit  : 0/0
 19571 ;;		Unchanged: 0/0
 19572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19577 ;;Total ram usage:        0 bytes
 19578 ;; Hardware stack levels used:    1
 19579 ;; Hardware stack levels required when called:   12
 19580 ;; This function calls:
 19581 ;;		_GenerateEvt
 19582 ;;		_ReceiveEvt
 19583 ;; This function is called by:
 19584 ;;		_MdmWifi_DrvMainFn
 19585 ;; This function uses a non-reentrant model
 19586 ;;
 19587                           
 19588                           	psect	text87
 19589  0000'                    __ptext87:
 19590                           	opt stack 0
 19591  0000'                    _MdmWifi_StartWifiModemSm:
 19592                           	opt stack 15
 19593                           
 19594                           ;mdm_wifi_drv.c: 86: static WifiModeSmStateType WifiModeSmState = WifiMdm_Autostart;
 19595                           ;mdm_wifi_drv.c: 87: static UINT16 Counter = 0;
 19596                           ;mdm_wifi_drv.c: 89: switch (WifiModeSmState)
 19597                           
 19598                           ;incstack = 0
 19599  0000' D035               	goto	l647
 19600  0002'                    l648:
 19601                           
 19602                           ; BSR set to: 1
 19603                           ;mdm_wifi_drv.c: 93: TRISEbits.TRISE0 = ((UINT8)(0));
 19604  0002' 9096               	bcf	3990,0,c	;volatile
 19605                           
 19606                           ;mdm_wifi_drv.c: 95: LATEbits.LATE0 = ((UINT8)(0));
 19607  0004' 908D               	bcf	3981,0,c	;volatile
 19608                           
 19609                           ; BSR set to: 1
 19610                           ;mdm_wifi_drv.c: 97: GenerateEvt(&StartWifiModem);
 19611  0006' 0E00'              	movlw	low _StartWifiModem
 19612  0008' 0100               	movlb	0	; () banked
 19613  000A' 6F00'              	movwf	GenerateEvt@Event& (0+255),b
 19614  000C' 0E00'              	movlw	high _StartWifiModem
 19615  000E' 6F00'              	movwf	(GenerateEvt@Event+1)& (0+255),b
 19616  0010' EC00' F000'        	call	_GenerateEvt	;wreg free
 19617                           
 19618                           ;mdm_wifi_drv.c: 99: WifiModeSmState = WifiMdm_Idle;
 19619  0014' 0E01               	movlw	1
 19620  0016' 0101               	movlb	1	; () banked
 19621  0018' 6F00'              	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19622                           
 19623                           ;mdm_wifi_drv.c: 100: break;
 19624  001A' 0012               	return	
 19625  001C'                    
 19626                           ; BSR set to: 1
 19627                           ;mdm_wifi_drv.c: 104: if (ReceiveEvt(&StartWifiModem))
 19628                           
 19629                           ; BSR set to: 1
 19630  001C' 0E00'              	movlw	low _StartWifiModem
 19631  001E' 0100               	movlb	0	; () banked
 19632  0020' 6F00'              	movwf	ReceiveEvt@Event& (0+255),b
 19633  0022' 0E00'              	movlw	high _StartWifiModem
 19634  0024' 6F00'              	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19635  0026' EC00' F000'        	call	_ReceiveEvt	;wreg free
 19636  002A' 0900               	iorlw	0
 19637  002C' B4D8               	btfsc	status,2,c
 19638  002E' 0012               	return	
 19639                           
 19640                           ;mdm_wifi_drv.c: 105: {
 19641                           ;mdm_wifi_drv.c: 107: LATEbits.LATE0 = ((UINT8)(0));
 19642  0030' 908D               	bcf	3981,0,c	;volatile
 19643                           
 19644                           ;mdm_wifi_drv.c: 109: WifiMdmStatus = ((UINT8)(1));
 19645  0032' 0E01               	movlw	1
 19646  0034' 0101               	movlb	1	; () banked
 19647  0036' 6F00'              	movwf	_WifiMdmStatus& (0+255),b
 19648                           
 19649                           ;mdm_wifi_drv.c: 111: WifiModeSmState = WifiMdm_Delay;
 19650  0038' 0E03               	movlw	3
 19651  003A' 6F00'              	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19652                           
 19653                           ; BSR set to: 1
 19654                           ;mdm_wifi_drv.c: 112: }
 19655                           ;mdm_wifi_drv.c: 113: break;
 19656  003C' 0012               	return	
 19657  003E'                    
 19658                           ; BSR set to: 1
 19659                           ;mdm_wifi_drv.c: 117: Counter++;
 19660                           
 19661                           ; BSR set to: 1
 19662  003E' 0102               	movlb	2	; () banked
 19663  0040' 4B00'              	infsnz	MdmWifi_StartWifiModemSm@Counter& (0+255),f,b
 19664  0042' 2B00'              	incf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),f,b
 19665                           
 19666                           ; BSR set to: 2
 19667                           ;mdm_wifi_drv.c: 119: if (Counter >= (((UINT16)(200))/((UINT16)(10))))
 19668  0044' 5100'              	movf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),w,b
 19669  0046' E104               	bnz	u7060
 19670  0048' 0E14               	movlw	20
 19671  004A' 5D00'              	subwf	MdmWifi_StartWifiModemSm@Counter& (0+255),w,b
 19672  004C' A0D8               	btfss	status,0,c
 19673  004E' 0012               	return	
 19674  0050'                    u7060:
 19675                           
 19676                           ; BSR set to: 2
 19677                           ;mdm_wifi_drv.c: 120: {
 19678                           ;mdm_wifi_drv.c: 122: Counter = 0;
 19679  0050' 0E00               	movlw	0
 19680  0052' 6F00'              	movwf	(MdmWifi_StartWifiModemSm@Counter+1)& (0+255),b
 19681  0054' 0E00               	movlw	0
 19682  0056' 6F00'              	movwf	MdmWifi_StartWifiModemSm@Counter& (0+255),b
 19683                           
 19684                           ;mdm_wifi_drv.c: 124: WifiModeSmState = WifiMdm_RestartMdm;
 19685  0058' 0E04               	movlw	4
 19686  005A' 0101               	movlb	1	; () banked
 19687  005C' 6F00'              	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19688                           
 19689                           ; BSR set to: 1
 19690                           ;mdm_wifi_drv.c: 125: }
 19691                           ;mdm_wifi_drv.c: 126: break;
 19692  005E' 0012               	return	
 19693  0060'                    l654:
 19694                           
 19695                           ; BSR set to: 1
 19696                           ;mdm_wifi_drv.c: 130: LATEbits.LATE0 = ((UINT8)(1));
 19697  0060' 808D               	bsf	3981,0,c	;volatile
 19698                           
 19699                           ; BSR set to: 1
 19700                           ;mdm_wifi_drv.c: 132: WifiMdmStatus = ((UINT8)(2));
 19701  0062' 0E02               	movlw	2
 19702  0064' 6F00'              	movwf	_WifiMdmStatus& (0+255),b
 19703                           
 19704                           ;mdm_wifi_drv.c: 134: WifiModeSmState = WifiMdm_Idle;
 19705  0066' 0E01               	movlw	1
 19706  0068' 6F00'              	movwf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),b
 19707                           
 19708                           ; BSR set to: 1
 19709                           ;mdm_wifi_drv.c: 139: }
 19710                           
 19711                           ; BSR set to: 1
 19712                           ;mdm_wifi_drv.c: 138: break;
 19713                           
 19714                           ;mdm_wifi_drv.c: 137: default:
 19715                           
 19716                           ;mdm_wifi_drv.c: 135: break;
 19717  006A' 0012               	return	
 19718  006C'                    l647:
 19719                           
 19720                           ; BSR set to: 1
 19721  006C' 0101               	movlb	1	; () banked
 19722  006E' 5100'              	movf	MdmWifi_StartWifiModemSm@WifiModeSmState& (0+255),w,b
 19723                           
 19724                           ; Switch size 1, requested type "space"
 19725                           ; Number of cases is 4, Range of values is 0 to 4
 19726                           ; switch strategies available:
 19727                           ; Name         Instructions Cycles
 19728                           ; simple_byte           13     7 (average)
 19729                           ;	Chosen strategy is simple_byte
 19730  0070' 0A00               	xorlw	0	; case 0
 19731  0072' B4D8               	btfsc	status,2,c
 19732  0074' D7C6               	goto	l648
 19733  0076' 0A01               	xorlw	1	; case 1
 19734  0078' B4D8               	btfsc	status,2,c
 19735  007A' D7D0               	goto	l650
 19736  007C' 0A02               	xorlw	2	; case 3
 19737  007E' B4D8               	btfsc	status,2,c
 19738  0080' D7DE               	goto	l652
 19739  0082' 0A07               	xorlw	7	; case 4
 19740  0084' A4D8               	btfss	status,2,c
 19741  0086' 0012               	return	
 19742  0088' D7EB               	goto	l654
 19743  008A'                    __end_of_MdmWifi_StartWifiModemSm:
 19744                           	opt stack 0
 19745                           tosu	equ	0xFFF
 19746                           tosh	equ	0xFFE
 19747                           tosl	equ	0xFFD
 19748                           pclath	equ	0xFFA
 19749                           tblptru	equ	0xFF8
 19750                           tblptrh	equ	0xFF7
 19751                           tblptrl	equ	0xFF6
 19752                           tablat	equ	0xFF5
 19753                           prodh	equ	0xFF4
 19754                           prodl	equ	0xFF3
 19755                           intcon	equ	0xFF2
 19756                           intcon2	equ	0xFF1
 19757                           intcon3	equ	0xFF0
 19758                           indf0	equ	0xFEF
 19759                           postinc0	equ	0xFEE
 19760                           plusw0	equ	0xFEB
 19761                           fsr0h	equ	0xFEA
 19762                           fsr0l	equ	0xFE9
 19763                           wreg	equ	0xFE8
 19764                           indf1	equ	0xFE7
 19765                           postinc1	equ	0xFE6
 19766                           postdec1	equ	0xFE5
 19767                           fsr1h	equ	0xFE2
 19768                           fsr1l	equ	0xFE1
 19769                           indf2	equ	0xFDF
 19770                           postinc2	equ	0xFDE
 19771                           postdec2	equ	0xFDD
 19772                           plusw2	equ	0xFDB
 19773                           fsr2h	equ	0xFDA
 19774                           fsr2l	equ	0xFD9
 19775                           status	equ	0xFD8
 19776                           
 19777 ;; *************** function _StartConnectionSm *****************
 19778 ;; Defined at:
 19779 ;;		line 104 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 19780 ;; Parameters:    Size  Location     Type
 19781 ;;		None
 19782 ;; Auto vars:     Size  Location     Type
 19783 ;;  Data          100   19[BANK0 ] unsigned char [100]
 19784 ;;  PortAscii       4  119[BANK0 ] unsigned char [4]
 19785 ;;  IdAscii         1  124[BANK0 ] unsigned char [1]
 19786 ;;  DataIndex       1  123[BANK0 ] unsigned char 
 19787 ;; Return value:  Size  Location     Type
 19788 ;;                  1    wreg      void 
 19789 ;; Registers used:
 19790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19791 ;; Tracked objects:
 19792 ;;		On entry : 0/0
 19793 ;;		On exit  : 0/0
 19794 ;;		Unchanged: 0/0
 19795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19797 ;;      Locals:         0     106       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19799 ;;      Totals:         0     106       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19800 ;;Total ram usage:      106 bytes
 19801 ;; Hardware stack levels used:    1
 19802 ;; Hardware stack levels required when called:   14
 19803 ;; This function calls:
 19804 ;;		_ClearBuffer
 19805 ;;		_MdmWifi_ReceiveWifiMsg
 19806 ;;		_MdmWifi_SendWifiMsg
 19807 ;;		_ReceiveEvt
 19808 ;;		_strcat
 19809 ;;		_strcpy
 19810 ;;		_strstr
 19811 ;;		_utoa
 19812 ;; This function is called by:
 19813 ;;		_MdmWifiCmd_MainTask
 19814 ;; This function uses a non-reentrant model
 19815 ;;
 19816                           
 19817                           	psect	text88
 19818  0000'                    __ptext88:
 19819                           	opt stack 0
 19820  0000'                    _StartConnectionSm:
 19821                           	opt stack 13
 19822                           
 19823                           ;mdm_wifi_cmd.c: 106: static StartConnStateType StartConnState = StCon_WaitEvt;
 19824                           ;mdm_wifi_cmd.c: 107: UINT8 Data[((UINT8)(100))];
 19825                           ;mdm_wifi_cmd.c: 108: UINT8 DataIndex;
 19826                           ;mdm_wifi_cmd.c: 109: UINT8 PortAscii[4];
 19827                           ;mdm_wifi_cmd.c: 110: UINT8 IdAscii[1];
 19828                           ;mdm_wifi_cmd.c: 112: switch (StartConnState)
 19829                           
 19830                           ;incstack = 0
 19831  0000' D15F               	goto	l985
 19832  0002'                    
 19833                           ;mdm_wifi_cmd.c: 116: if (ReceiveEvt(&StartConnection))
 19834  0002' 0E00'              	movlw	low _StartConnection
 19835  0004' 0100               	movlb	0	; () banked
 19836  0006' 6F00'              	movwf	ReceiveEvt@Event& (0+255),b
 19837  0008' 0E00'              	movlw	high _StartConnection
 19838  000A' 6F00'              	movwf	(ReceiveEvt@Event+1)& (0+255),b
 19839  000C' EC00' F000'        	call	_ReceiveEvt	;wreg free
 19840  0010' 0900               	iorlw	0
 19841  0012' B4D8               	btfsc	status,2,c
 19842  0014' 0012               	return	
 19843                           
 19844                           ;mdm_wifi_cmd.c: 117: {
 19845                           ;mdm_wifi_cmd.c: 118: StartConnState = StCon_SendStartCmd;
 19846  0016' 0E01               	movlw	1
 19847  0018' 0101               	movlb	1	; () banked
 19848  001A' 6F00'              	movwf	StartConnectionSm@StartConnState& (0+255),b
 19849                           
 19850                           ; BSR set to: 1
 19851                           ;mdm_wifi_cmd.c: 119: }
 19852                           ;mdm_wifi_cmd.c: 120: break;
 19853  001C' 0012               	return	
 19854  001E'                    
 19855                           ; BSR set to: 1
 19856                           ;mdm_wifi_cmd.c: 124: strcpy(Data,"AT+CIPSTART=");
 19857                           
 19858                           ; BSR set to: 1
 19859  001E' 0E00'              	movlw	low StartConnectionSm@Data
 19860  0020' 0100               	movlb	0	; () banked
 19861  0022' 6F00'              	movwf	strcpy@to& (0+255),b
 19862  0024' 0E00'              	movlw	high StartConnectionSm@Data
 19863  0026' 6F00'              	movwf	(strcpy@to+1)& (0+255),b
 19864  0028' 0E00'              	movlw	low STR_3
 19865  002A' 6F00'              	movwf	strcpy@from& (0+255),b
 19866  002C' 0E00'              	movlw	high STR_3
 19867  002E' 6F00'              	movwf	(strcpy@from+1)& (0+255),b
 19868  0030' EC00' F000'        	call	_strcpy	;wreg free
 19869                           
 19870                           ;mdm_wifi_cmd.c: 126: if (ModeLocal == ((UINT8)(1)))
 19871  0034' 0101               	movlb	1	; () banked
 19872  0036' 0500'              	decf	_ModeLocal& (0+255),w,b
 19873  0038' A4D8               	btfss	status,2,c
 19874  003A' D02E               	goto	l990
 19875                           
 19876                           ; BSR set to: 1
 19877                           ;mdm_wifi_cmd.c: 127: {
 19878                           ;mdm_wifi_cmd.c: 128: utoa(IdAscii,IdLocal,10);
 19879  003C' 0E00'              	movlw	low StartConnectionSm@IdAscii
 19880  003E' 0100               	movlb	0	; () banked
 19881  0040' 6F00'              	movwf	utoa@buf& (0+255),b
 19882  0042' 0E00'              	movlw	high StartConnectionSm@IdAscii
 19883  0044' 6F00'              	movwf	(utoa@buf+1)& (0+255),b
 19884  0046' C01B' F009'        	movff	_IdLocal,utoa@val
 19885  004A' 6B00'              	clrf	(utoa@val+1)& (0+255),b
 19886  004C' 0E00               	movlw	0
 19887  004E' 6F00'              	movwf	(utoa@base+1)& (0+255),b
 19888  0050' 0E0A               	movlw	10
 19889  0052' 6F00'              	movwf	utoa@base& (0+255),b
 19890  0054' EC00' F000'        	call	_utoa	;wreg free
 19891                           
 19892                           ;mdm_wifi_cmd.c: 129: strcat(Data,IdAscii);
 19893  0058' 0E00'              	movlw	low StartConnectionSm@Data
 19894  005A' 0100               	movlb	0	; () banked
 19895  005C' 6F00'              	movwf	strcat@to& (0+255),b
 19896  005E' 0E00'              	movlw	high StartConnectionSm@Data
 19897  0060' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 19898  0062' 0E00'              	movlw	low StartConnectionSm@IdAscii
 19899  0064' 6F00'              	movwf	strcat@from& (0+255),b
 19900  0066' 0E00'              	movlw	high StartConnectionSm@IdAscii
 19901  0068' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 19902  006A' 5100'              	movf	strcat@from& (0+255),w,b
 19903  006C' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 19904  006E' A4D8               	btfss	status,2,c
 19905  0070' 0E20               	movlw	32
 19906  0072' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 19907  0074' EC00' F000'        	call	_strcat	;wreg free
 19908                           
 19909                           ;mdm_wifi_cmd.c: 130: strcat(Data,",");
 19910  0078' 0E00'              	movlw	low StartConnectionSm@Data
 19911  007A' 0100               	movlb	0	; () banked
 19912  007C' 6F00'              	movwf	strcat@to& (0+255),b
 19913  007E' 0E00'              	movlw	high StartConnectionSm@Data
 19914  0080' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 19915  0082' 0E00'              	movlw	low (STR_46+1)
 19916  0084' 6F00'              	movwf	strcat@from& (0+255),b
 19917  0086' 0E00'              	movlw	high (STR_46+1)
 19918  0088' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 19919  008A' 5100'              	movf	strcat@from& (0+255),w,b
 19920  008C' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 19921  008E' A4D8               	btfss	status,2,c
 19922  0090' 0E00'              	movlw	low (__mediumconst shr (0+16))
 19923  0092' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 19924  0094' EC00' F000'        	call	_strcat	;wreg free
 19925  0098'                    l990:
 19926                           
 19927                           ;mdm_wifi_cmd.c: 131: }
 19928                           ;mdm_wifi_cmd.c: 132: strcat(Data,"\"");
 19929  0098' 0E00'              	movlw	low StartConnectionSm@Data
 19930  009A' 0100               	movlb	0	; () banked
 19931  009C' 6F00'              	movwf	strcat@to& (0+255),b
 19932  009E' 0E00'              	movlw	high StartConnectionSm@Data
 19933  00A0' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 19934  00A2' 0E00'              	movlw	low (STR_28+2)
 19935  00A4' 6F00'              	movwf	strcat@from& (0+255),b
 19936  00A6' 0E00'              	movlw	high (STR_28+2)
 19937  00A8' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 19938  00AA' 5100'              	movf	strcat@from& (0+255),w,b
 19939  00AC' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 19940  00AE' A4D8               	btfss	status,2,c
 19941  00B0' 0E00'              	movlw	low (__mediumconst shr (0+16))
 19942  00B2' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 19943  00B4' EC00' F000'        	call	_strcat	;wreg free
 19944                           
 19945                           ;mdm_wifi_cmd.c: 134: if (ProtocolLocal == ((UINT8)(0)))
 19946  00B8' 0101               	movlb	1	; () banked
 19947  00BA' 5100'              	movf	_ProtocolLocal& (0+255),w,b
 19948  00BC' A4D8               	btfss	status,2,c
 19949  00BE' D011               	goto	l991
 19950                           
 19951                           ; BSR set to: 1
 19952                           ;mdm_wifi_cmd.c: 135: {
 19953                           ;mdm_wifi_cmd.c: 136: strcat(Data,"UDP");
 19954  00C0' 0E00'              	movlw	low StartConnectionSm@Data
 19955  00C2' 0100               	movlb	0	; () banked
 19956  00C4' 6F00'              	movwf	strcat@to& (0+255),b
 19957  00C6' 0E00'              	movlw	high StartConnectionSm@Data
 19958  00C8' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 19959  00CA' 0E00'              	movlw	low STR_6
 19960  00CC' 6F00'              	movwf	strcat@from& (0+255),b
 19961  00CE' 0E00'              	movlw	high STR_6
 19962  00D0' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 19963  00D2' 5100'              	movf	strcat@from& (0+255),w,b
 19964  00D4' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 19965  00D6' A4D8               	btfss	status,2,c
 19966  00D8' 0E00'              	movlw	low (__mediumconst shr (0+16))
 19967  00DA' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 19968  00DC' EC00' F000'        	call	_strcat	;wreg free
 19969                           
 19970                           ;mdm_wifi_cmd.c: 137: }
 19971  00E0' D010               	goto	l992
 19972  00E2'                    l991:
 19973                           
 19974                           ;mdm_wifi_cmd.c: 138: else
 19975                           ;mdm_wifi_cmd.c: 139: {
 19976                           ;mdm_wifi_cmd.c: 140: strcat(Data,"TCP");
 19977  00E2' 0E00'              	movlw	low StartConnectionSm@Data
 19978  00E4' 0100               	movlb	0	; () banked
 19979  00E6' 6F00'              	movwf	strcat@to& (0+255),b
 19980  00E8' 0E00'              	movlw	high StartConnectionSm@Data
 19981  00EA' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 19982  00EC' 0E00'              	movlw	low STR_7
 19983  00EE' 6F00'              	movwf	strcat@from& (0+255),b
 19984  00F0' 0E00'              	movlw	high STR_7
 19985  00F2' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 19986  00F4' 5100'              	movf	strcat@from& (0+255),w,b
 19987  00F6' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 19988  00F8' A4D8               	btfss	status,2,c
 19989  00FA' 0E00'              	movlw	low (__mediumconst shr (0+16))
 19990  00FC' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 19991  00FE' EC00' F000'        	call	_strcat	;wreg free
 19992  0102'                    l992:
 19993                           
 19994                           ;mdm_wifi_cmd.c: 141: }
 19995                           ;mdm_wifi_cmd.c: 142: strcat(Data,"\"");
 19996  0102' 0E00'              	movlw	low StartConnectionSm@Data
 19997  0104' 0100               	movlb	0	; () banked
 19998  0106' 6F00'              	movwf	strcat@to& (0+255),b
 19999  0108' 0E00'              	movlw	high StartConnectionSm@Data
 20000  010A' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20001  010C' 0E00'              	movlw	low (STR_28+2)
 20002  010E' 6F00'              	movwf	strcat@from& (0+255),b
 20003  0110' 0E00'              	movlw	high (STR_28+2)
 20004  0112' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20005  0114' 5100'              	movf	strcat@from& (0+255),w,b
 20006  0116' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20007  0118' A4D8               	btfss	status,2,c
 20008  011A' 0E00'              	movlw	low (__mediumconst shr (0+16))
 20009  011C' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20010  011E' EC00' F000'        	call	_strcat	;wreg free
 20011                           
 20012                           ;mdm_wifi_cmd.c: 143: strcat(Data,",");
 20013  0122' 0E00'              	movlw	low StartConnectionSm@Data
 20014  0124' 0100               	movlb	0	; () banked
 20015  0126' 6F00'              	movwf	strcat@to& (0+255),b
 20016  0128' 0E00'              	movlw	high StartConnectionSm@Data
 20017  012A' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20018  012C' 0E00'              	movlw	low (STR_46+1)
 20019  012E' 6F00'              	movwf	strcat@from& (0+255),b
 20020  0130' 0E00'              	movlw	high (STR_46+1)
 20021  0132' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20022  0134' 5100'              	movf	strcat@from& (0+255),w,b
 20023  0136' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20024  0138' A4D8               	btfss	status,2,c
 20025  013A' 0E00'              	movlw	low (__mediumconst shr (0+16))
 20026  013C' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20027  013E' EC00' F000'        	call	_strcat	;wreg free
 20028                           
 20029                           ;mdm_wifi_cmd.c: 144: strcat(Data,"\"");
 20030  0142' 0E00'              	movlw	low StartConnectionSm@Data
 20031  0144' 0100               	movlb	0	; () banked
 20032  0146' 6F00'              	movwf	strcat@to& (0+255),b
 20033  0148' 0E00'              	movlw	high StartConnectionSm@Data
 20034  014A' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20035  014C' 0E00'              	movlw	low (STR_28+2)
 20036  014E' 6F00'              	movwf	strcat@from& (0+255),b
 20037  0150' 0E00'              	movlw	high (STR_28+2)
 20038  0152' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20039  0154' 5100'              	movf	strcat@from& (0+255),w,b
 20040  0156' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20041  0158' A4D8               	btfss	status,2,c
 20042  015A' 0E00'              	movlw	low (__mediumconst shr (0+16))
 20043  015C' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20044  015E' EC00' F000'        	call	_strcat	;wreg free
 20045                           
 20046                           ;mdm_wifi_cmd.c: 145: strcat(Data,AddressLocal);
 20047  0162' 0E00'              	movlw	low StartConnectionSm@Data
 20048  0164' 0100               	movlb	0	; () banked
 20049  0166' 6F00'              	movwf	strcat@to& (0+255),b
 20050  0168' 0E00'              	movlw	high StartConnectionSm@Data
 20051  016A' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20052  016C' 0E00'              	movlw	low _AddressLocal
 20053  016E' 6F00'              	movwf	strcat@from& (0+255),b
 20054  0170' 0E00'              	movlw	high _AddressLocal
 20055  0172' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20056  0174' 5100'              	movf	strcat@from& (0+255),w,b
 20057  0176' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20058  0178' A4D8               	btfss	status,2,c
 20059  017A' 0E20               	movlw	32
 20060  017C' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20061  017E' EC00' F000'        	call	_strcat	;wreg free
 20062                           
 20063                           ;mdm_wifi_cmd.c: 146: strcat(Data,"\"");
 20064  0182' 0E00'              	movlw	low StartConnectionSm@Data
 20065  0184' 0100               	movlb	0	; () banked
 20066  0186' 6F00'              	movwf	strcat@to& (0+255),b
 20067  0188' 0E00'              	movlw	high StartConnectionSm@Data
 20068  018A' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20069  018C' 0E00'              	movlw	low (STR_28+2)
 20070  018E' 6F00'              	movwf	strcat@from& (0+255),b
 20071  0190' 0E00'              	movlw	high (STR_28+2)
 20072  0192' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20073  0194' 5100'              	movf	strcat@from& (0+255),w,b
 20074  0196' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20075  0198' A4D8               	btfss	status,2,c
 20076  019A' 0E00'              	movlw	low (__mediumconst shr (0+16))
 20077  019C' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20078  019E' EC00' F000'        	call	_strcat	;wreg free
 20079                           
 20080                           ;mdm_wifi_cmd.c: 148: utoa(PortAscii,PortLocal,10);
 20081  01A2' 0E00'              	movlw	low StartConnectionSm@PortAscii
 20082  01A4' 0100               	movlb	0	; () banked
 20083  01A6' 6F00'              	movwf	utoa@buf& (0+255),b
 20084  01A8' 0E00'              	movlw	high StartConnectionSm@PortAscii
 20085  01AA' 6F00'              	movwf	(utoa@buf+1)& (0+255),b
 20086  01AC' C019' F009'        	movff	_PortLocal,utoa@val
 20087  01B0' 6B00'              	clrf	(utoa@val+1)& (0+255),b
 20088  01B2' 0E00               	movlw	0
 20089  01B4' 6F00'              	movwf	(utoa@base+1)& (0+255),b
 20090  01B6' 0E0A               	movlw	10
 20091  01B8' 6F00'              	movwf	utoa@base& (0+255),b
 20092  01BA' EC00' F000'        	call	_utoa	;wreg free
 20093                           
 20094                           ;mdm_wifi_cmd.c: 149: strcat(Data,",");
 20095  01BE' 0E00'              	movlw	low StartConnectionSm@Data
 20096  01C0' 0100               	movlb	0	; () banked
 20097  01C2' 6F00'              	movwf	strcat@to& (0+255),b
 20098  01C4' 0E00'              	movlw	high StartConnectionSm@Data
 20099  01C6' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20100  01C8' 0E00'              	movlw	low (STR_46+1)
 20101  01CA' 6F00'              	movwf	strcat@from& (0+255),b
 20102  01CC' 0E00'              	movlw	high (STR_46+1)
 20103  01CE' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20104  01D0' 5100'              	movf	strcat@from& (0+255),w,b
 20105  01D2' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20106  01D4' A4D8               	btfss	status,2,c
 20107  01D6' 0E00'              	movlw	low (__mediumconst shr (0+16))
 20108  01D8' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20109  01DA' EC00' F000'        	call	_strcat	;wreg free
 20110                           
 20111                           ;mdm_wifi_cmd.c: 150: strcat(Data,PortAscii);
 20112  01DE' 0E00'              	movlw	low StartConnectionSm@Data
 20113  01E0' 0100               	movlb	0	; () banked
 20114  01E2' 6F00'              	movwf	strcat@to& (0+255),b
 20115  01E4' 0E00'              	movlw	high StartConnectionSm@Data
 20116  01E6' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20117  01E8' 0E00'              	movlw	low StartConnectionSm@PortAscii
 20118  01EA' 6F00'              	movwf	strcat@from& (0+255),b
 20119  01EC' 0E00'              	movlw	high StartConnectionSm@PortAscii
 20120  01EE' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20121  01F0' 5100'              	movf	strcat@from& (0+255),w,b
 20122  01F2' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20123  01F4' A4D8               	btfss	status,2,c
 20124  01F6' 0E20               	movlw	32
 20125  01F8' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20126  01FA' EC00' F000'        	call	_strcat	;wreg free
 20127                           
 20128                           ;mdm_wifi_cmd.c: 152: strcat(Data,"\r\n");
 20129  01FE' 0E00'              	movlw	low StartConnectionSm@Data
 20130  0200' 0100               	movlb	0	; () banked
 20131  0202' 6F00'              	movwf	strcat@to& (0+255),b
 20132  0204' 0E00'              	movlw	high StartConnectionSm@Data
 20133  0206' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20134  0208' 0E00'              	movlw	low (STR_31+8)
 20135  020A' 6F00'              	movwf	strcat@from& (0+255),b
 20136  020C' 0E00'              	movlw	high (STR_31+8)
 20137  020E' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20138  0210' 5100'              	movf	strcat@from& (0+255),w,b
 20139  0212' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20140  0214' A4D8               	btfss	status,2,c
 20141  0216' 0E00'              	movlw	low (__mediumconst shr (0+16))
 20142  0218' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20143  021A' EC00' F000'        	call	_strcat	;wreg free
 20144                           
 20145                           ;mdm_wifi_cmd.c: 153: strcat(Data,(0));
 20146  021E' 0E00'              	movlw	low StartConnectionSm@Data
 20147  0220' 0100               	movlb	0	; () banked
 20148  0222' 6F00'              	movwf	strcat@to& (0+255),b
 20149  0224' 0E00'              	movlw	high StartConnectionSm@Data
 20150  0226' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20151  0228' 0E00               	movlw	0
 20152  022A' 6F00'              	movwf	strcat@from& (0+255),b
 20153  022C' 0E00               	movlw	0
 20154  022E' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20155  0230' 0E00               	movlw	0
 20156  0232' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20157  0234' EC00' F000'        	call	_strcat	;wreg free
 20158                           
 20159                           ;mdm_wifi_cmd.c: 155: MdmWifi_SendWifiMsg(Data);
 20160  0238' 0E00'              	movlw	low StartConnectionSm@Data
 20161  023A' 0100               	movlb	0	; () banked
 20162  023C' 6F00'              	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20163  023E' 0E00'              	movlw	high StartConnectionSm@Data
 20164  0240' 6F00'              	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20165  0242' EC00' F000'        	call	_MdmWifi_SendWifiMsg	;wreg free
 20166                           
 20167                           ;mdm_wifi_cmd.c: 158: ClearBuffer(AddressLocal,sizeof(AddressLocal));
 20168  0246' 0E00'              	movlw	low _AddressLocal
 20169  0248' 0100               	movlb	0	; () banked
 20170  024A' 6F00'              	movwf	ClearBuffer@Buffer& (0+255),b
 20171  024C' 0E00'              	movlw	high _AddressLocal
 20172  024E' 6F00'              	movwf	(ClearBuffer@Buffer+1)& (0+255),b
 20173  0250' 0E00               	movlw	0
 20174  0252' 6F00'              	movwf	(ClearBuffer@Len+1)& (0+255),b
 20175  0254' 0E19               	movlw	25
 20176  0256' 6F00'              	movwf	ClearBuffer@Len& (0+255),b
 20177  0258' EC00' F000'        	call	_ClearBuffer	;wreg free
 20178                           
 20179                           ;mdm_wifi_cmd.c: 161: StartConnState = StCon_CheckCmdRes;
 20180  025C' 0E02               	movlw	2
 20181  025E' 0101               	movlb	1	; () banked
 20182  0260' 6F00'              	movwf	StartConnectionSm@StartConnState& (0+255),b
 20183                           
 20184                           ;mdm_wifi_cmd.c: 162: break;
 20185  0262' 0012               	return	
 20186  0264'                    
 20187                           ; BSR set to: 1
 20188                           ;mdm_wifi_cmd.c: 166: if (MdmWifi_ReceiveWifiMsg(Data,&DataIndex) == WifiMsg_Received)
 20189                           
 20190                           ; BSR set to: 1
 20191  0264' 0E00'              	movlw	low StartConnectionSm@Data
 20192  0266' 0100               	movlb	0	; () banked
 20193  0268' 6F00'              	movwf	MdmWifi_ReceiveWifiMsg@RxBuffer& (0+255),b
 20194  026A' 0E00'              	movlw	high StartConnectionSm@Data
 20195  026C' 6F00'              	movwf	(MdmWifi_ReceiveWifiMsg@RxBuffer+1)& (0+255),b
 20196  026E' 0E00'              	movlw	low StartConnectionSm@DataIndex
 20197  0270' 6F00'              	movwf	MdmWifi_ReceiveWifiMsg@DataLenght& (0+255),b
 20198  0272' 0E00'              	movlw	high StartConnectionSm@DataIndex
 20199  0274' 6F00'              	movwf	(MdmWifi_ReceiveWifiMsg@DataLenght+1)& (0+255),b
 20200  0276' EC00' F000'        	call	_MdmWifi_ReceiveWifiMsg	;wreg free
 20201  027A' 06E8               	decf	wreg,f,c
 20202  027C' A4D8               	btfss	status,2,c
 20203  027E' 0012               	return	
 20204                           
 20205                           ;mdm_wifi_cmd.c: 167: {
 20206                           ;mdm_wifi_cmd.c: 169: if ((Data[0] != 'A') && (Data[1] != 'T'))
 20207  0280' 0E41               	movlw	65
 20208  0282' 0100               	movlb	0	; () banked
 20209  0284' 1900'              	xorwf	StartConnectionSm@Data& (0+255),w,b
 20210  0286' B4D8               	btfsc	status,2,c
 20211  0288' 0012               	return	
 20212                           
 20213                           ; BSR set to: 0
 20214  028A' 0E54               	movlw	84
 20215  028C' 1900'              	xorwf	(StartConnectionSm@Data+1)& (0+255),w,b
 20216  028E' B4D8               	btfsc	status,2,c
 20217  0290' 0012               	return	
 20218                           
 20219                           ; BSR set to: 0
 20220                           ;mdm_wifi_cmd.c: 170: {
 20221                           ;mdm_wifi_cmd.c: 172: if (strstr(Data,(void*)"CONNECT") != (0))
 20222  0292' 0E00'              	movlw	low StartConnectionSm@Data
 20223  0294' 6F00'              	movwf	strstr@s1& (0+255),b
 20224  0296' 0E00'              	movlw	high StartConnectionSm@Data
 20225  0298' 6F00'              	movwf	(strstr@s1+1)& (0+255),b
 20226  029A' 0E00'              	movlw	low STR_14
 20227  029C' 6F00'              	movwf	strstr@s2& (0+255),b
 20228  029E' 0E00'              	movlw	high STR_14
 20229  02A0' 6F00'              	movwf	(strstr@s2+1)& (0+255),b
 20230  02A2' EC00' F000'        	call	_strstr	;wreg free
 20231  02A6' 0100               	movlb	0	; () banked
 20232  02A8' 5100'              	movf	?_strstr& (0+255),w,b
 20233  02AA' 1100'              	iorwf	(?_strstr+1)& (0+255),w,b
 20234  02AC' B4D8               	btfsc	status,2,c
 20235  02AE' D002               	goto	l996
 20236                           
 20237                           ; BSR set to: 0
 20238                           ;mdm_wifi_cmd.c: 173: {
 20239                           ;mdm_wifi_cmd.c: 174: ConnStatus = ((UINT8)(1));
 20240  02B0' 0E01               	movlw	1
 20241  02B2' D001               	goto	L24
 20242  02B4'                    l996:
 20243                           
 20244                           ;mdm_wifi_cmd.c: 176: else
 20245                           ;mdm_wifi_cmd.c: 177: {
 20246                           ;mdm_wifi_cmd.c: 178: ConnStatus = ((UINT8)(0));
 20247                           
 20248                           ; BSR set to: 1
 20249  02B4' 0E00               	movlw	0
 20250  02B6'                    L24:
 20251  02B6' 0101               	movlb	1	; () banked
 20252  02B8' 6F00'              	movwf	_ConnStatus& (0+255),b
 20253                           
 20254                           ; BSR set to: 1
 20255                           ;mdm_wifi_cmd.c: 179: }
 20256                           ;mdm_wifi_cmd.c: 182: StartConnState = StCon_WaitEvt;
 20257  02BA' 0E00               	movlw	0
 20258  02BC' 6F00'              	movwf	StartConnectionSm@StartConnState& (0+255),b
 20259                           
 20260                           ; BSR set to: 1
 20261                           ;mdm_wifi_cmd.c: 189: }
 20262                           
 20263                           ; BSR set to: 1
 20264                           ;mdm_wifi_cmd.c: 188: break;
 20265                           
 20266                           ;mdm_wifi_cmd.c: 187: default:
 20267                           
 20268                           ; BSR set to: 1
 20269                           ;mdm_wifi_cmd.c: 183: }
 20270                           ;mdm_wifi_cmd.c: 184: }
 20271                           ;mdm_wifi_cmd.c: 185: break;
 20272                           
 20273                           ; BSR set to: 1
 20274  02BE' 0012               	return	
 20275  02C0'                    l985:
 20276                           
 20277                           ; BSR set to: 1
 20278  02C0' 0101               	movlb	1	; () banked
 20279  02C2' 5100'              	movf	StartConnectionSm@StartConnState& (0+255),w,b
 20280                           
 20281                           ; Switch size 1, requested type "space"
 20282                           ; Number of cases is 3, Range of values is 0 to 2
 20283                           ; switch strategies available:
 20284                           ; Name         Instructions Cycles
 20285                           ; simple_byte           10     6 (average)
 20286                           ;	Chosen strategy is simple_byte
 20287  02C4' 0A00               	xorlw	0	; case 0
 20288  02C6' B4D8               	btfsc	status,2,c
 20289  02C8' D69C               	goto	l986
 20290  02CA' 0A01               	xorlw	1	; case 1
 20291  02CC' B4D8               	btfsc	status,2,c
 20292  02CE' D6A7               	goto	l989
 20293  02D0' 0A03               	xorlw	3	; case 2
 20294  02D2' A4D8               	btfss	status,2,c
 20295  02D4' 0012               	return	
 20296  02D6' D7C6               	goto	l993
 20297  02D8'                    __end_of_StartConnectionSm:
 20298                           	opt stack 0
 20299                           tosu	equ	0xFFF
 20300                           tosh	equ	0xFFE
 20301                           tosl	equ	0xFFD
 20302                           pclath	equ	0xFFA
 20303                           tblptru	equ	0xFF8
 20304                           tblptrh	equ	0xFF7
 20305                           tblptrl	equ	0xFF6
 20306                           tablat	equ	0xFF5
 20307                           prodh	equ	0xFF4
 20308                           prodl	equ	0xFF3
 20309                           intcon	equ	0xFF2
 20310                           intcon2	equ	0xFF1
 20311                           intcon3	equ	0xFF0
 20312                           indf0	equ	0xFEF
 20313                           postinc0	equ	0xFEE
 20314                           plusw0	equ	0xFEB
 20315                           fsr0h	equ	0xFEA
 20316                           fsr0l	equ	0xFE9
 20317                           wreg	equ	0xFE8
 20318                           indf1	equ	0xFE7
 20319                           postinc1	equ	0xFE6
 20320                           postdec1	equ	0xFE5
 20321                           fsr1h	equ	0xFE2
 20322                           fsr1l	equ	0xFE1
 20323                           indf2	equ	0xFDF
 20324                           postinc2	equ	0xFDE
 20325                           postdec2	equ	0xFDD
 20326                           plusw2	equ	0xFDB
 20327                           fsr2h	equ	0xFDA
 20328                           fsr2l	equ	0xFD9
 20329                           status	equ	0xFD8
 20330                           
 20331 ;; *************** function _ClearBuffer *****************
 20332 ;; Defined at:
 20333 ;;		line 124 in file "../Source/c/03_Sml/02_Ssl/sf.c"
 20334 ;; Parameters:    Size  Location     Type
 20335 ;;  Buffer          2    0[BANK0 ] PTR unsigned char 
 20336 ;;		 -> WifiTerminal@UartBuffer(200), AddressLocal(25), MdmWifi_UartRxBuffer(200), 
 20337 ;;  Len             2    2[BANK0 ] unsigned short 
 20338 ;; Auto vars:     Size  Location     Type
 20339 ;;  Index           2    4[BANK0 ] unsigned short 
 20340 ;; Return value:  Size  Location     Type
 20341 ;;                  1    wreg      void 
 20342 ;; Registers used:
 20343 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20344 ;; Tracked objects:
 20345 ;;		On entry : 0/0
 20346 ;;		On exit  : 0/0
 20347 ;;		Unchanged: 0/0
 20348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20349 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20350 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20352 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20353 ;;Total ram usage:        6 bytes
 20354 ;; Hardware stack levels used:    1
 20355 ;; Hardware stack levels required when called:   11
 20356 ;; This function calls:
 20357 ;;		Nothing
 20358 ;; This function is called by:
 20359 ;;		_MdmWifiGetUartData
 20360 ;;		_StartConnectionSm
 20361 ;;		_WifiTerminal
 20362 ;; This function uses a non-reentrant model
 20363 ;;
 20364                           
 20365                           	psect	text89
 20366  0000'                    __ptext89:
 20367                           	opt stack 0
 20368  0000'                    _ClearBuffer:
 20369                           	opt stack 15
 20370                           
 20371                           ;sf.c: 126: UINT16 Index = 0;
 20372                           
 20373                           ;incstack = 0
 20374  0000' 0E00               	movlw	0
 20375  0002' 0100               	movlb	0	; () banked
 20376  0004' 6F00'              	movwf	(ClearBuffer@Index+1)& (0+255),b
 20377  0006' 0E00               	movlw	0
 20378  0008' 6F00'              	movwf	ClearBuffer@Index& (0+255),b
 20379                           
 20380                           ;sf.c: 129: for (Index = 0; Index <= Len; Index++)
 20381  000A' 0E00               	movlw	0
 20382  000C' 6F00'              	movwf	(ClearBuffer@Index+1)& (0+255),b
 20383  000E' 0E00               	movlw	0
 20384  0010' 6F00'              	movwf	ClearBuffer@Index& (0+255),b
 20385  0012' D00A               	goto	l1990
 20386  0014'                    
 20387                           ; BSR set to: 0
 20388                           ;sf.c: 130: {
 20389                           ;sf.c: 131: *(Buffer + Index) = 0;
 20390                           
 20391                           ; BSR set to: 0
 20392  0014' 5100'              	movf	ClearBuffer@Index& (0+255),w,b
 20393  0016' 2500'              	addwf	ClearBuffer@Buffer& (0+255),w,b
 20394  0018' 6ED9               	movwf	fsr2l,c
 20395  001A' 5100'              	movf	(ClearBuffer@Index+1)& (0+255),w,b
 20396  001C' 2100'              	addwfc	(ClearBuffer@Buffer+1)& (0+255),w,b
 20397  001E' 6EDA               	movwf	fsr2h,c
 20398  0020' 0E00               	movlw	0
 20399  0022' 6EDF               	movwf	indf2,c
 20400                           
 20401                           ; BSR set to: 0
 20402  0024' 4B00'              	infsnz	ClearBuffer@Index& (0+255),f,b
 20403  0026' 2B00'              	incf	(ClearBuffer@Index+1)& (0+255),f,b
 20404  0028'                    l1990:
 20405                           
 20406                           ; BSR set to: 0
 20407                           
 20408                           ; BSR set to: 0
 20409  0028' 5100'              	movf	ClearBuffer@Index& (0+255),w,b
 20410  002A' 5D00'              	subwf	ClearBuffer@Len& (0+255),w,b
 20411  002C' 5100'              	movf	(ClearBuffer@Index+1)& (0+255),w,b
 20412  002E' 5900'              	subwfb	(ClearBuffer@Len+1)& (0+255),w,b
 20413  0030' A0D8               	btfss	status,0,c
 20414  0032' 0012               	return	
 20415  0034' D7EF               	goto	l1991
 20416  0036'                    __end_of_ClearBuffer:
 20417                           	opt stack 0
 20418                           tosu	equ	0xFFF
 20419                           tosh	equ	0xFFE
 20420                           tosl	equ	0xFFD
 20421                           pclath	equ	0xFFA
 20422                           tblptru	equ	0xFF8
 20423                           tblptrh	equ	0xFF7
 20424                           tblptrl	equ	0xFF6
 20425                           tablat	equ	0xFF5
 20426                           prodh	equ	0xFF4
 20427                           prodl	equ	0xFF3
 20428                           intcon	equ	0xFF2
 20429                           intcon2	equ	0xFF1
 20430                           intcon3	equ	0xFF0
 20431                           indf0	equ	0xFEF
 20432                           postinc0	equ	0xFEE
 20433                           plusw0	equ	0xFEB
 20434                           fsr0h	equ	0xFEA
 20435                           fsr0l	equ	0xFE9
 20436                           wreg	equ	0xFE8
 20437                           indf1	equ	0xFE7
 20438                           postinc1	equ	0xFE6
 20439                           postdec1	equ	0xFE5
 20440                           fsr1h	equ	0xFE2
 20441                           fsr1l	equ	0xFE1
 20442                           indf2	equ	0xFDF
 20443                           postinc2	equ	0xFDE
 20444                           postdec2	equ	0xFDD
 20445                           plusw2	equ	0xFDB
 20446                           fsr2h	equ	0xFDA
 20447                           fsr2l	equ	0xFD9
 20448                           status	equ	0xFD8
 20449                           
 20450 ;; *************** function _SendDataSm *****************
 20451 ;; Defined at:
 20452 ;;		line 200 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 20453 ;; Parameters:    Size  Location     Type
 20454 ;;		None
 20455 ;; Auto vars:     Size  Location     Type
 20456 ;;  Data          103   30[BANK0 ] unsigned char [103]
 20457 ;;  LenAscii        4  133[BANK0 ] unsigned char [4]
 20458 ;;  IdAscii         1  138[BANK0 ] unsigned char [1]
 20459 ;;  DataIndex       1  137[BANK0 ] unsigned char 
 20460 ;; Return value:  Size  Location     Type
 20461 ;;                  1    wreg      void 
 20462 ;; Registers used:
 20463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20464 ;; Tracked objects:
 20465 ;;		On entry : 0/0
 20466 ;;		On exit  : 0/0
 20467 ;;		Unchanged: 0/0
 20468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20470 ;;      Locals:         0     109       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20472 ;;      Totals:         0     109       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20473 ;;Total ram usage:      109 bytes
 20474 ;; Hardware stack levels used:    1
 20475 ;; Hardware stack levels required when called:   14
 20476 ;; This function calls:
 20477 ;;		_MdmWifi_ReceiveWifiMsg
 20478 ;;		_MdmWifi_SendWifiMsg
 20479 ;;		_OsTmr_GetTimerStatus
 20480 ;;		_OsTmr_StartTimer
 20481 ;;		_ReceiveEvt
 20482 ;;		_strcat
 20483 ;;		_strcpy
 20484 ;;		_strstr
 20485 ;;		_utoa
 20486 ;; This function is called by:
 20487 ;;		_MdmWifiCmd_MainTask
 20488 ;; This function uses a non-reentrant model
 20489 ;;
 20490                           
 20491                           	psect	text90
 20492  0000'                    __ptext90:
 20493                           	opt stack 0
 20494  0000'                    _SendDataSm:
 20495                           	opt stack 13
 20496                           
 20497                           ;mdm_wifi_cmd.c: 202: static WifiSendDataStateType WifiSendDataState = WiFiSnd_WaitEvt;
 20498                           ;mdm_wifi_cmd.c: 203: UINT8 Data[((UINT8)(100)) + 3];
 20499                           ;mdm_wifi_cmd.c: 204: UINT8 DataIndex;
 20500                           ;mdm_wifi_cmd.c: 205: UINT8 IdAscii[1];
 20501                           ;mdm_wifi_cmd.c: 206: UINT8 LenAscii[4];
 20502                           ;mdm_wifi_cmd.c: 207: static SwTimerType SwTimer = { 1u, SwTimerExpired, 0, 0, DelayNotE
      +                          xpired, };
 20503                           ;mdm_wifi_cmd.c: 209: switch (WifiSendDataState)
 20504                           
 20505                           ; BSR set to: 0
 20506                           ;incstack = 0
 20507  0000' D107               	goto	l1006
 20508  0002'                    
 20509                           ;mdm_wifi_cmd.c: 213: if (ReceiveEvt(&WifiSendData))
 20510  0002' 0E00'              	movlw	low _WifiSendData
 20511  0004' 0100               	movlb	0	; () banked
 20512  0006' 6F00'              	movwf	ReceiveEvt@Event& (0+255),b
 20513  0008' 0E00'              	movlw	high _WifiSendData
 20514  000A' 6F00'              	movwf	(ReceiveEvt@Event+1)& (0+255),b
 20515  000C' EC00' F000'        	call	_ReceiveEvt	;wreg free
 20516  0010' 0900               	iorlw	0
 20517  0012' B4D8               	btfsc	status,2,c
 20518  0014' 0012               	return	
 20519                           
 20520                           ;mdm_wifi_cmd.c: 214: {
 20521                           ;mdm_wifi_cmd.c: 215: WifiSendDataState = WiFiSnd_SendDataCmd;
 20522  0016' 0E01               	movlw	1
 20523  0018' 0101               	movlb	1	; () banked
 20524  001A' 6F00'              	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20525                           
 20526                           ; BSR set to: 1
 20527                           ;mdm_wifi_cmd.c: 216: }
 20528                           ;mdm_wifi_cmd.c: 217: break;
 20529  001C' 0012               	return	
 20530  001E'                    
 20531                           ; BSR set to: 1
 20532                           ;mdm_wifi_cmd.c: 221: strcpy(Data,"AT+CIPSEND=");
 20533                           
 20534                           ; BSR set to: 1
 20535  001E' 0E00'              	movlw	low SendDataSm@Data
 20536  0020' 0100               	movlb	0	; () banked
 20537  0022' 6F00'              	movwf	strcpy@to& (0+255),b
 20538  0024' 0E00'              	movlw	high SendDataSm@Data
 20539  0026' 6F00'              	movwf	(strcpy@to+1)& (0+255),b
 20540  0028' 0E00'              	movlw	low STR_15
 20541  002A' 6F00'              	movwf	strcpy@from& (0+255),b
 20542  002C' 0E00'              	movlw	high STR_15
 20543  002E' 6F00'              	movwf	(strcpy@from+1)& (0+255),b
 20544  0030' EC00' F000'        	call	_strcpy	;wreg free
 20545                           
 20546                           ;mdm_wifi_cmd.c: 223: if (ModeLocal == ((UINT8)(1)))
 20547  0034' 0101               	movlb	1	; () banked
 20548  0036' 0500'              	decf	_ModeLocal& (0+255),w,b
 20549  0038' A4D8               	btfss	status,2,c
 20550  003A' D02E               	goto	l1011
 20551                           
 20552                           ; BSR set to: 1
 20553                           ;mdm_wifi_cmd.c: 224: {
 20554                           ;mdm_wifi_cmd.c: 225: utoa(IdAscii,IdLocal,10);
 20555  003C' 0E00'              	movlw	low SendDataSm@IdAscii
 20556  003E' 0100               	movlb	0	; () banked
 20557  0040' 6F00'              	movwf	utoa@buf& (0+255),b
 20558  0042' 0E00'              	movlw	high SendDataSm@IdAscii
 20559  0044' 6F00'              	movwf	(utoa@buf+1)& (0+255),b
 20560  0046' C01B' F009'        	movff	_IdLocal,utoa@val
 20561  004A' 6B00'              	clrf	(utoa@val+1)& (0+255),b
 20562  004C' 0E00               	movlw	0
 20563  004E' 6F00'              	movwf	(utoa@base+1)& (0+255),b
 20564  0050' 0E0A               	movlw	10
 20565  0052' 6F00'              	movwf	utoa@base& (0+255),b
 20566  0054' EC00' F000'        	call	_utoa	;wreg free
 20567                           
 20568                           ;mdm_wifi_cmd.c: 226: strcat(Data,IdAscii);
 20569  0058' 0E00'              	movlw	low SendDataSm@Data
 20570  005A' 0100               	movlb	0	; () banked
 20571  005C' 6F00'              	movwf	strcat@to& (0+255),b
 20572  005E' 0E00'              	movlw	high SendDataSm@Data
 20573  0060' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20574  0062' 0E00'              	movlw	low SendDataSm@IdAscii
 20575  0064' 6F00'              	movwf	strcat@from& (0+255),b
 20576  0066' 0E00'              	movlw	high SendDataSm@IdAscii
 20577  0068' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20578  006A' 5100'              	movf	strcat@from& (0+255),w,b
 20579  006C' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20580  006E' A4D8               	btfss	status,2,c
 20581  0070' 0E20               	movlw	32
 20582  0072' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20583  0074' EC00' F000'        	call	_strcat	;wreg free
 20584                           
 20585                           ;mdm_wifi_cmd.c: 227: strcat(Data,",");
 20586  0078' 0E00'              	movlw	low SendDataSm@Data
 20587  007A' 0100               	movlb	0	; () banked
 20588  007C' 6F00'              	movwf	strcat@to& (0+255),b
 20589  007E' 0E00'              	movlw	high SendDataSm@Data
 20590  0080' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20591  0082' 0E00'              	movlw	low (STR_46+1)
 20592  0084' 6F00'              	movwf	strcat@from& (0+255),b
 20593  0086' 0E00'              	movlw	high (STR_46+1)
 20594  0088' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20595  008A' 5100'              	movf	strcat@from& (0+255),w,b
 20596  008C' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20597  008E' A4D8               	btfss	status,2,c
 20598  0090' 0E00'              	movlw	low (__mediumconst shr (0+16))
 20599  0092' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20600  0094' EC00' F000'        	call	_strcat	;wreg free
 20601  0098'                    l1011:
 20602                           
 20603                           ;mdm_wifi_cmd.c: 228: }
 20604                           ;mdm_wifi_cmd.c: 230: LenLocal = LenLocal + 2;
 20605  0098' 0101               	movlb	1	; () banked
 20606  009A' 5100'              	movf	_LenLocal& (0+255),w,b
 20607  009C' 0F02               	addlw	2
 20608  009E' 6F00'              	movwf	_LenLocal& (0+255),b
 20609                           
 20610                           ; BSR set to: 1
 20611                           ;mdm_wifi_cmd.c: 231: utoa(LenAscii,LenLocal,10);
 20612  00A0' 0E00'              	movlw	low SendDataSm@LenAscii
 20613  00A2' 0100               	movlb	0	; () banked
 20614  00A4' 6F00'              	movwf	utoa@buf& (0+255),b
 20615  00A6' 0E00'              	movlw	high SendDataSm@LenAscii
 20616  00A8' 6F00'              	movwf	(utoa@buf+1)& (0+255),b
 20617  00AA' C017' F009'        	movff	_LenLocal,utoa@val
 20618  00AE' 6B00'              	clrf	(utoa@val+1)& (0+255),b
 20619  00B0' 0E00               	movlw	0
 20620  00B2' 6F00'              	movwf	(utoa@base+1)& (0+255),b
 20621  00B4' 0E0A               	movlw	10
 20622  00B6' 6F00'              	movwf	utoa@base& (0+255),b
 20623  00B8' EC00' F000'        	call	_utoa	;wreg free
 20624                           
 20625                           ;mdm_wifi_cmd.c: 232: strcat(Data,LenAscii);
 20626  00BC' 0E00'              	movlw	low SendDataSm@Data
 20627  00BE' 0100               	movlb	0	; () banked
 20628  00C0' 6F00'              	movwf	strcat@to& (0+255),b
 20629  00C2' 0E00'              	movlw	high SendDataSm@Data
 20630  00C4' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20631  00C6' 0E00'              	movlw	low SendDataSm@LenAscii
 20632  00C8' 6F00'              	movwf	strcat@from& (0+255),b
 20633  00CA' 0E00'              	movlw	high SendDataSm@LenAscii
 20634  00CC' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20635  00CE' 5100'              	movf	strcat@from& (0+255),w,b
 20636  00D0' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20637  00D2' A4D8               	btfss	status,2,c
 20638  00D4' 0E20               	movlw	32
 20639  00D6' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20640  00D8' EC00' F000'        	call	_strcat	;wreg free
 20641                           
 20642                           ;mdm_wifi_cmd.c: 235: strcat(Data,"\r\n");
 20643  00DC' 0E00'              	movlw	low SendDataSm@Data
 20644  00DE' 0100               	movlb	0	; () banked
 20645  00E0' 6F00'              	movwf	strcat@to& (0+255),b
 20646  00E2' 0E00'              	movlw	high SendDataSm@Data
 20647  00E4' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20648  00E6' 0E00'              	movlw	low (STR_31+8)
 20649  00E8' 6F00'              	movwf	strcat@from& (0+255),b
 20650  00EA' 0E00'              	movlw	high (STR_31+8)
 20651  00EC' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20652  00EE' 5100'              	movf	strcat@from& (0+255),w,b
 20653  00F0' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20654  00F2' A4D8               	btfss	status,2,c
 20655  00F4' 0E00'              	movlw	low (__mediumconst shr (0+16))
 20656  00F6' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20657  00F8' EC00' F000'        	call	_strcat	;wreg free
 20658                           
 20659                           ;mdm_wifi_cmd.c: 236: strcat(Data,(0));
 20660  00FC' 0E00'              	movlw	low SendDataSm@Data
 20661  00FE' 0100               	movlb	0	; () banked
 20662  0100' 6F00'              	movwf	strcat@to& (0+255),b
 20663  0102' 0E00'              	movlw	high SendDataSm@Data
 20664  0104' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20665  0106' 0E00               	movlw	0
 20666  0108' 6F00'              	movwf	strcat@from& (0+255),b
 20667  010A' 0E00               	movlw	0
 20668  010C' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20669  010E' 0E00               	movlw	0
 20670  0110' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20671  0112' EC00' F000'        	call	_strcat	;wreg free
 20672                           
 20673                           ;mdm_wifi_cmd.c: 238: MdmWifi_SendWifiMsg(Data);
 20674  0116' 0E00'              	movlw	low SendDataSm@Data
 20675  0118' 0100               	movlb	0	; () banked
 20676  011A' 6F00'              	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20677  011C' 0E00'              	movlw	high SendDataSm@Data
 20678  011E' 6F00'              	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20679  0120' EC00' F000'        	call	_MdmWifi_SendWifiMsg	;wreg free
 20680                           
 20681                           ;mdm_wifi_cmd.c: 240: OsTmr_StartTimer(&SwTimer,2000);
 20682  0124' 0E00'              	movlw	low SendDataSm@SwTimer
 20683  0126' 0100               	movlb	0	; () banked
 20684  0128' 6F00'              	movwf	OsTmr_StartTimer@Timer& (0+255),b
 20685  012A' 0E00'              	movlw	high SendDataSm@SwTimer
 20686  012C' 6F00'              	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 20687  012E' 0ED0               	movlw	208
 20688  0130' 6F00'              	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 20689  0132' 0E07               	movlw	7
 20690  0134' 6F00'              	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 20691  0136' 0E00               	movlw	0
 20692  0138' 6F00'              	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 20693  013A' 0E00               	movlw	0
 20694  013C' 6F00'              	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 20695  013E' EC00' F000'        	call	_OsTmr_StartTimer	;wreg free
 20696                           
 20697                           ;mdm_wifi_cmd.c: 243: WifiSendDataState = WiFiSnd_WaitPrompt;
 20698  0142' 0E02               	movlw	2
 20699  0144' 0101               	movlb	1	; () banked
 20700  0146' 6F00'              	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20701                           
 20702                           ;mdm_wifi_cmd.c: 244: break;
 20703  0148' 0012               	return	
 20704  014A'                    
 20705                           ; BSR set to: 1
 20706                           ;mdm_wifi_cmd.c: 248: if (MdmWifi_ReceiveWifiMsg(Data,&DataIndex) == WifiMsg_Received)
 20707                           
 20708                           ; BSR set to: 1
 20709  014A' 0E00'              	movlw	low SendDataSm@Data
 20710  014C' 0100               	movlb	0	; () banked
 20711  014E' 6F00'              	movwf	MdmWifi_ReceiveWifiMsg@RxBuffer& (0+255),b
 20712  0150' 0E00'              	movlw	high SendDataSm@Data
 20713  0152' 6F00'              	movwf	(MdmWifi_ReceiveWifiMsg@RxBuffer+1)& (0+255),b
 20714  0154' 0E00'              	movlw	low SendDataSm@DataIndex
 20715  0156' 6F00'              	movwf	MdmWifi_ReceiveWifiMsg@DataLenght& (0+255),b
 20716  0158' 0E00'              	movlw	high SendDataSm@DataIndex
 20717  015A' 6F00'              	movwf	(MdmWifi_ReceiveWifiMsg@DataLenght+1)& (0+255),b
 20718  015C' EC00' F000'        	call	_MdmWifi_ReceiveWifiMsg	;wreg free
 20719  0160' 06E8               	decf	wreg,f,c
 20720  0162' A4D8               	btfss	status,2,c
 20721  0164' D014               	goto	l1013
 20722                           
 20723                           ;mdm_wifi_cmd.c: 249: {
 20724                           ;mdm_wifi_cmd.c: 251: if (strstr(Data,(void*)">") != (0))
 20725  0166' 0E00'              	movlw	low SendDataSm@Data
 20726  0168' 0100               	movlb	0	; () banked
 20727  016A' 6F00'              	movwf	strstr@s1& (0+255),b
 20728  016C' 0E00'              	movlw	high SendDataSm@Data
 20729  016E' 6F00'              	movwf	(strstr@s1+1)& (0+255),b
 20730  0170' 0E00'              	movlw	low STR_18
 20731  0172' 6F00'              	movwf	strstr@s2& (0+255),b
 20732  0174' 0E00'              	movlw	high STR_18
 20733  0176' 6F00'              	movwf	(strstr@s2+1)& (0+255),b
 20734  0178' EC00' F000'        	call	_strstr	;wreg free
 20735  017C' 0100               	movlb	0	; () banked
 20736  017E' 5100'              	movf	?_strstr& (0+255),w,b
 20737  0180' 1100'              	iorwf	(?_strstr+1)& (0+255),w,b
 20738  0182' B4D8               	btfsc	status,2,c
 20739  0184' 0012               	return	
 20740                           
 20741                           ; BSR set to: 0
 20742                           ;mdm_wifi_cmd.c: 252: {
 20743                           ;mdm_wifi_cmd.c: 254: WifiSendDataState = WiFiSnd_SendPayload;
 20744  0186' 0E03               	movlw	3
 20745  0188' 0101               	movlb	1	; () banked
 20746  018A' 6F00'              	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20747                           
 20748                           ; BSR set to: 1
 20749                           ;mdm_wifi_cmd.c: 255: }
 20750                           ;mdm_wifi_cmd.c: 256: }
 20751  018C' 0012               	return	
 20752  018E'                    l1013:
 20753                           
 20754                           ;mdm_wifi_cmd.c: 257: else if (OsTmr_GetTimerStatus(&SwTimer) == SwTimerExpired)
 20755                           
 20756                           ; BSR set to: 1
 20757  018E' 0E00'              	movlw	low SendDataSm@SwTimer
 20758  0190' 0100               	movlb	0	; () banked
 20759  0192' 6F00'              	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 20760  0194' 0E00'              	movlw	high SendDataSm@SwTimer
 20761  0196' 6F00'              	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 20762  0198' EC00' F000'        	call	_OsTmr_GetTimerStatus	;wreg free
 20763  019C' 06E8               	decf	wreg,f,c
 20764  019E' A4D8               	btfss	status,2,c
 20765  01A0' 0012               	return	
 20766                           
 20767                           ;mdm_wifi_cmd.c: 258: {
 20768                           ;mdm_wifi_cmd.c: 260: WifiSendDataState = WiFiSnd_WaitEvt;
 20769  01A2' 0E00               	movlw	0
 20770  01A4' 0101               	movlb	1	; () banked
 20771  01A6' 6F00'              	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20772                           
 20773                           ; BSR set to: 1
 20774                           ;mdm_wifi_cmd.c: 261: }
 20775                           ;mdm_wifi_cmd.c: 262: break;
 20776                           
 20777                           ; BSR set to: 1
 20778  01A8' 0012               	return	
 20779  01AA'                    
 20780                           ; BSR set to: 1
 20781                           ;mdm_wifi_cmd.c: 266: strcpy(Data,BufferLocal);
 20782                           
 20783                           ; BSR set to: 1
 20784  01AA' 0E00'              	movlw	low SendDataSm@Data
 20785  01AC' 0100               	movlb	0	; () banked
 20786  01AE' 6F00'              	movwf	strcpy@to& (0+255),b
 20787  01B0' 0E00'              	movlw	high SendDataSm@Data
 20788  01B2' 6F00'              	movwf	(strcpy@to+1)& (0+255),b
 20789  01B4' 0E00'              	movlw	low _BufferLocal
 20790  01B6' 6F00'              	movwf	strcpy@from& (0+255),b
 20791  01B8' 0E00'              	movlw	high _BufferLocal
 20792  01BA' 6F00'              	movwf	(strcpy@from+1)& (0+255),b
 20793  01BC' EC00' F000'        	call	_strcpy	;wreg free
 20794                           
 20795                           ;mdm_wifi_cmd.c: 268: strcat(Data,"\r\n");
 20796  01C0' 0E00'              	movlw	low SendDataSm@Data
 20797  01C2' 0100               	movlb	0	; () banked
 20798  01C4' 6F00'              	movwf	strcat@to& (0+255),b
 20799  01C6' 0E00'              	movlw	high SendDataSm@Data
 20800  01C8' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20801  01CA' 0E00'              	movlw	low (STR_31+8)
 20802  01CC' 6F00'              	movwf	strcat@from& (0+255),b
 20803  01CE' 0E00'              	movlw	high (STR_31+8)
 20804  01D0' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20805  01D2' 5100'              	movf	strcat@from& (0+255),w,b
 20806  01D4' 1100'              	iorwf	(strcat@from+1)& (0+255),w,b
 20807  01D6' A4D8               	btfss	status,2,c
 20808  01D8' 0E00'              	movlw	low (__mediumconst shr (0+16))
 20809  01DA' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20810  01DC' EC00' F000'        	call	_strcat	;wreg free
 20811                           
 20812                           ;mdm_wifi_cmd.c: 269: strcat(Data,(0));
 20813  01E0' 0E00'              	movlw	low SendDataSm@Data
 20814  01E2' 0100               	movlb	0	; () banked
 20815  01E4' 6F00'              	movwf	strcat@to& (0+255),b
 20816  01E6' 0E00'              	movlw	high SendDataSm@Data
 20817  01E8' 6F00'              	movwf	(strcat@to+1)& (0+255),b
 20818  01EA' 0E00               	movlw	0
 20819  01EC' 6F00'              	movwf	strcat@from& (0+255),b
 20820  01EE' 0E00               	movlw	0
 20821  01F0' 6F00'              	movwf	(strcat@from+1)& (0+255),b
 20822  01F2' 0E00               	movlw	0
 20823  01F4' 6F00'              	movwf	(strcat@from+2)& (0+255),b
 20824  01F6' EC00' F000'        	call	_strcat	;wreg free
 20825                           
 20826                           ;mdm_wifi_cmd.c: 272: MdmWifi_SendWifiMsg(Data);
 20827  01FA' 0E00'              	movlw	low SendDataSm@Data
 20828  01FC' 0100               	movlb	0	; () banked
 20829  01FE' 6F00'              	movwf	MdmWifi_SendWifiMsg@TxBuffer& (0+255),b
 20830  0200' 0E00'              	movlw	high SendDataSm@Data
 20831  0202' 6F00'              	movwf	(MdmWifi_SendWifiMsg@TxBuffer+1)& (0+255),b
 20832  0204' EC00' F000'        	call	_MdmWifi_SendWifiMsg	;wreg free
 20833                           
 20834                           ;mdm_wifi_cmd.c: 275: WifiSendDataState = WiFiSnd_WaitEvt;
 20835  0208' 0E00               	movlw	0
 20836  020A' 0101               	movlb	1	; () banked
 20837  020C' 6F00'              	movwf	SendDataSm@WifiSendDataState& (0+255),b
 20838                           
 20839                           ; BSR set to: 1
 20840                           ;mdm_wifi_cmd.c: 280: }
 20841                           
 20842                           ; BSR set to: 1
 20843                           ;mdm_wifi_cmd.c: 279: break;
 20844                           
 20845                           ;mdm_wifi_cmd.c: 278: default:
 20846                           
 20847                           ;mdm_wifi_cmd.c: 276: break;
 20848  020E' 0012               	return	
 20849  0210'                    l1006:
 20850                           
 20851                           ; BSR set to: 1
 20852  0210' 0101               	movlb	1	; () banked
 20853  0212' 5100'              	movf	SendDataSm@WifiSendDataState& (0+255),w,b
 20854                           
 20855                           ; Switch size 1, requested type "space"
 20856                           ; Number of cases is 4, Range of values is 0 to 3
 20857                           ; switch strategies available:
 20858                           ; Name         Instructions Cycles
 20859                           ; simple_byte           13     7 (average)
 20860                           ;	Chosen strategy is simple_byte
 20861  0214' 0A00               	xorlw	0	; case 0
 20862  0216' B4D8               	btfsc	status,2,c
 20863  0218' D6F4               	goto	l1007
 20864  021A' 0A01               	xorlw	1	; case 1
 20865  021C' B4D8               	btfsc	status,2,c
 20866  021E' D6FF               	goto	l1010
 20867  0220' 0A03               	xorlw	3	; case 2
 20868  0222' B4D8               	btfsc	status,2,c
 20869  0224' D792               	goto	l1012
 20870  0226' 0A01               	xorlw	1	; case 3
 20871  0228' A4D8               	btfss	status,2,c
 20872  022A' 0012               	return	
 20873  022C' D7BE               	goto	l1017
 20874  022E'                    __end_of_SendDataSm:
 20875                           	opt stack 0
 20876                           tosu	equ	0xFFF
 20877                           tosh	equ	0xFFE
 20878                           tosl	equ	0xFFD
 20879                           pclath	equ	0xFFA
 20880                           tblptru	equ	0xFF8
 20881                           tblptrh	equ	0xFF7
 20882                           tblptrl	equ	0xFF6
 20883                           tablat	equ	0xFF5
 20884                           prodh	equ	0xFF4
 20885                           prodl	equ	0xFF3
 20886                           intcon	equ	0xFF2
 20887                           intcon2	equ	0xFF1
 20888                           intcon3	equ	0xFF0
 20889                           indf0	equ	0xFEF
 20890                           postinc0	equ	0xFEE
 20891                           plusw0	equ	0xFEB
 20892                           fsr0h	equ	0xFEA
 20893                           fsr0l	equ	0xFE9
 20894                           wreg	equ	0xFE8
 20895                           indf1	equ	0xFE7
 20896                           postinc1	equ	0xFE6
 20897                           postdec1	equ	0xFE5
 20898                           fsr1h	equ	0xFE2
 20899                           fsr1l	equ	0xFE1
 20900                           indf2	equ	0xFDF
 20901                           postinc2	equ	0xFDE
 20902                           postdec2	equ	0xFDD
 20903                           plusw2	equ	0xFDB
 20904                           fsr2h	equ	0xFDA
 20905                           fsr2l	equ	0xFD9
 20906                           status	equ	0xFD8
 20907                           
 20908 ;; *************** function _utoa *****************
 20909 ;; Defined at:
 20910 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 20911 ;; Parameters:    Size  Location     Type
 20912 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 20913 ;;		 -> Term_MainSm@FwkBuildYearStr(4), Term_MainSm@FwkBuildMonthStr(4), Term_MainSm@FwkBuildDayStr(4), Term_MainSm@FwkB
      +uildStr(4), 
 20914 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), MdmWifiCmd_ConfigureServer@PortAsc
      +ii(10), 
 20915 ;;		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(5), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(5), MdmWifiCmd_CloseConnect
      +ion@IdAscii(1), SendDataSm@LenAscii(4), 
 20916 ;;		 -> SendDataSm@IdAscii(1), StartConnectionSm@PortAscii(4), StartConnectionSm@IdAscii(1), 
 20917 ;;  val             2    9[BANK0 ] unsigned int 
 20918 ;;  base            2   11[BANK0 ] int 
 20919 ;; Auto vars:     Size  Location     Type
 20920 ;;  v               2   13[BANK0 ] unsigned int 
 20921 ;;  c               1   15[BANK0 ] unsigned char 
 20922 ;; Return value:  Size  Location     Type
 20923 ;;                  2    7[BANK0 ] PTR unsigned char 
 20924 ;; Registers used:
 20925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20926 ;; Tracked objects:
 20927 ;;		On entry : 0/0
 20928 ;;		On exit  : 0/0
 20929 ;;		Unchanged: 0/0
 20930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20931 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20932 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20934 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20935 ;;Total ram usage:        9 bytes
 20936 ;; Hardware stack levels used:    1
 20937 ;; Hardware stack levels required when called:   12
 20938 ;; This function calls:
 20939 ;;		___lwdiv
 20940 ;;		___lwmod
 20941 ;; This function is called by:
 20942 ;;		_StartConnectionSm
 20943 ;;		_SendDataSm
 20944 ;;		_Term_MainSm
 20945 ;;		_itoa
 20946 ;;		_MdmWifiCmd_CloseConnection
 20947 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 20948 ;;		_MdmWifiCmd_ConfigureServer
 20949 ;; This function uses a non-reentrant model
 20950 ;;
 20951                           
 20952                           	psect	text91
 20953  0000'                    __ptext91:
 20954                           	opt stack 0
 20955  0000'                    _utoa:
 20956                           	opt stack 14
 20957                           
 20958                           ;incstack = 0
 20959  0000' C009' F00D'        	movff	utoa@val,utoa@v
 20960  0004' C00A' F00E'        	movff	utoa@val+1,utoa@v+1
 20961  0008' C00D' F000'        	movff	utoa@v,___lwdiv@dividend
 20962  000C' C00E' F001'        	movff	utoa@v+1,___lwdiv@dividend+1
 20963  0010' C00B' F002'        	movff	utoa@base,___lwdiv@divisor
 20964  0014' C00C' F003'        	movff	utoa@base+1,___lwdiv@divisor+1
 20965  0018' EC00' F000'        	call	___lwdiv	;wreg free
 20966  001C' C000' F00D'        	movff	?___lwdiv,utoa@v
 20967  0020' C001' F00E'        	movff	?___lwdiv+1,utoa@v+1
 20968  0024' 0100               	movlb	0	; () banked
 20969  0026' 4B00'              	infsnz	utoa@buf& (0+255),f,b
 20970  0028' 2B00'              	incf	(utoa@buf+1)& (0+255),f,b
 20971                           
 20972                           ; BSR set to: 0
 20973  002A' 5100'              	movf	utoa@v& (0+255),w,b
 20974  002C' 1100'              	iorwf	(utoa@v+1)& (0+255),w,b
 20975  002E' A4D8               	btfss	status,2,c
 20976  0030' D7EB               	goto	l2536
 20977                           
 20978                           ; BSR set to: 0
 20979                           
 20980                           ; BSR set to: 0
 20981  0032' C007' FFD9         	movff	utoa@buf,fsr2l
 20982  0036' C008' FFDA         	movff	utoa@buf+1,fsr2h
 20983  003A' 0E00               	movlw	0
 20984  003C' 6EDF               	movwf	indf2,c
 20985                           
 20986                           ; BSR set to: 0
 20987  003E' 0700'              	decf	utoa@buf& (0+255),f,b
 20988  0040' A0D8               	btfss	status,0,c
 20989  0042' 0700'              	decf	(utoa@buf+1)& (0+255),f,b
 20990  0044'                    
 20991                           ; BSR set to: 0
 20992                           
 20993                           ; BSR set to: 0
 20994  0044' C009' F000'        	movff	utoa@val,___lwmod@dividend
 20995  0048' C00A' F001'        	movff	utoa@val+1,___lwmod@dividend+1
 20996  004C' C00B' F002'        	movff	utoa@base,___lwmod@divisor
 20997  0050' C00C' F003'        	movff	utoa@base+1,___lwmod@divisor+1
 20998  0054' EC00' F000'        	call	___lwmod	;wreg free
 20999  0058' 0100               	movlb	0	; () banked
 21000  005A' 5100'              	movf	?___lwmod& (0+255),w,b
 21001  005C' 6F00'              	movwf	utoa@c& (0+255),b
 21002                           
 21003                           ; BSR set to: 0
 21004  005E' C009' F000'        	movff	utoa@val,___lwdiv@dividend
 21005  0062' C00A' F001'        	movff	utoa@val+1,___lwdiv@dividend+1
 21006  0066' C00B' F002'        	movff	utoa@base,___lwdiv@divisor
 21007  006A' C00C' F003'        	movff	utoa@base+1,___lwdiv@divisor+1
 21008  006E' EC00' F000'        	call	___lwdiv	;wreg free
 21009  0072' C000' F009'        	movff	?___lwdiv,utoa@val
 21010  0076' C001' F00A'        	movff	?___lwdiv+1,utoa@val+1
 21011  007A' 0E09               	movlw	9
 21012  007C' 0100               	movlb	0	; () banked
 21013  007E' 6500'              	cpfsgt	utoa@c& (0+255),b
 21014  0080' D002               	goto	l2539
 21015                           
 21016                           ; BSR set to: 0
 21017  0082' 0E07               	movlw	7
 21018  0084' 2700'              	addwf	utoa@c& (0+255),f,b
 21019  0086'                    l2539:
 21020                           
 21021                           ; BSR set to: 0
 21022  0086' 0E30               	movlw	48
 21023  0088' 2700'              	addwf	utoa@c& (0+255),f,b
 21024                           
 21025                           ; BSR set to: 0
 21026  008A' C007' FFD9         	movff	utoa@buf,fsr2l
 21027  008E' C008' FFDA         	movff	utoa@buf+1,fsr2h
 21028  0092' C00F' FFDF         	movff	utoa@c,indf2
 21029                           
 21030                           ; BSR set to: 0
 21031  0096' 0700'              	decf	utoa@buf& (0+255),f,b
 21032  0098' A0D8               	btfss	status,0,c
 21033  009A' 0700'              	decf	(utoa@buf+1)& (0+255),f,b
 21034                           
 21035                           ; BSR set to: 0
 21036  009C' 5100'              	movf	utoa@val& (0+255),w,b
 21037  009E' 1100'              	iorwf	(utoa@val+1)& (0+255),w,b
 21038  00A0' A4D8               	btfss	status,2,c
 21039  00A2' D7D0               	goto	l2538
 21040                           
 21041                           ; BSR set to: 0
 21042                           ;	Return value of _utoa is never used
 21043                           
 21044                           ; BSR set to: 0
 21045  00A4' 4B00'              	infsnz	utoa@buf& (0+255),f,b
 21046  00A6' 2B00'              	incf	(utoa@buf+1)& (0+255),f,b
 21047  00A8' 0012               	return	
 21048  00AA'                    __end_of_utoa:
 21049                           	opt stack 0
 21050                           tosu	equ	0xFFF
 21051                           tosh	equ	0xFFE
 21052                           tosl	equ	0xFFD
 21053                           pclath	equ	0xFFA
 21054                           tblptru	equ	0xFF8
 21055                           tblptrh	equ	0xFF7
 21056                           tblptrl	equ	0xFF6
 21057                           tablat	equ	0xFF5
 21058                           prodh	equ	0xFF4
 21059                           prodl	equ	0xFF3
 21060                           intcon	equ	0xFF2
 21061                           intcon2	equ	0xFF1
 21062                           intcon3	equ	0xFF0
 21063                           indf0	equ	0xFEF
 21064                           postinc0	equ	0xFEE
 21065                           plusw0	equ	0xFEB
 21066                           fsr0h	equ	0xFEA
 21067                           fsr0l	equ	0xFE9
 21068                           wreg	equ	0xFE8
 21069                           indf1	equ	0xFE7
 21070                           postinc1	equ	0xFE6
 21071                           postdec1	equ	0xFE5
 21072                           fsr1h	equ	0xFE2
 21073                           fsr1l	equ	0xFE1
 21074                           indf2	equ	0xFDF
 21075                           postinc2	equ	0xFDE
 21076                           postdec2	equ	0xFDD
 21077                           plusw2	equ	0xFDB
 21078                           fsr2h	equ	0xFDA
 21079                           fsr2l	equ	0xFD9
 21080                           status	equ	0xFD8
 21081                           
 21082 ;; *************** function ___lwmod *****************
 21083 ;; Defined at:
 21084 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 21085 ;; Parameters:    Size  Location     Type
 21086 ;;  dividend        2    0[BANK0 ] unsigned int 
 21087 ;;  divisor         2    2[BANK0 ] unsigned int 
 21088 ;; Auto vars:     Size  Location     Type
 21089 ;;  counter         1    4[BANK0 ] unsigned char 
 21090 ;; Return value:  Size  Location     Type
 21091 ;;                  2    0[BANK0 ] unsigned int 
 21092 ;; Registers used:
 21093 ;;		wreg, status,2, status,0
 21094 ;; Tracked objects:
 21095 ;;		On entry : 0/0
 21096 ;;		On exit  : 0/0
 21097 ;;		Unchanged: 0/0
 21098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21099 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21100 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21102 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21103 ;;Total ram usage:        5 bytes
 21104 ;; Hardware stack levels used:    1
 21105 ;; Hardware stack levels required when called:   11
 21106 ;; This function calls:
 21107 ;;		Nothing
 21108 ;; This function is called by:
 21109 ;;		_utoa
 21110 ;; This function uses a non-reentrant model
 21111 ;;
 21112                           
 21113                           	psect	text92
 21114  0000'                    __ptext92:
 21115                           	opt stack 0
 21116  0000'                    ___lwmod:
 21117                           	opt stack 14
 21118                           
 21119                           ; BSR set to: 0
 21120                           ;incstack = 0
 21121  0000' 0100               	movlb	0	; () banked
 21122  0002' 5100'              	movf	___lwmod@divisor& (0+255),w,b
 21123  0004' 1100'              	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 21124  0006' B4D8               	btfsc	status,2,c
 21125  0008' D018               	goto	l2634
 21126                           
 21127                           ; BSR set to: 0
 21128  000A' 0E01               	movlw	1
 21129  000C' 6F00'              	movwf	___lwmod@counter& (0+255),b
 21130  000E' D004               	goto	l2629
 21131  0010'                    
 21132                           ; BSR set to: 0
 21133                           
 21134                           ; BSR set to: 0
 21135  0010' 90D8               	bcf	status,0,c
 21136  0012' 3700'              	rlcf	___lwmod@divisor& (0+255),f,b
 21137  0014' 3700'              	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 21138  0016' 2B00'              	incf	___lwmod@counter& (0+255),f,b
 21139  0018'                    l2629:
 21140                           
 21141                           ; BSR set to: 0
 21142                           
 21143                           ; BSR set to: 0
 21144  0018' AF00'              	btfss	(___lwmod@divisor+1)& (0+255),7,b
 21145  001A' D7FA               	goto	l2630
 21146  001C'                    u4920:
 21147                           
 21148                           ; BSR set to: 0
 21149                           
 21150                           ; BSR set to: 0
 21151                           
 21152                           ; BSR set to: 0
 21153  001C' 5100'              	movf	___lwmod@divisor& (0+255),w,b
 21154  001E' 5D00'              	subwf	___lwmod@dividend& (0+255),w,b
 21155  0020' 5100'              	movf	(___lwmod@divisor+1)& (0+255),w,b
 21156  0022' 5900'              	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 21157  0024' A0D8               	btfss	status,0,c
 21158  0026' D004               	goto	l2633
 21159                           
 21160                           ; BSR set to: 0
 21161  0028' 5100'              	movf	___lwmod@divisor& (0+255),w,b
 21162  002A' 5F00'              	subwf	___lwmod@dividend& (0+255),f,b
 21163  002C' 5100'              	movf	(___lwmod@divisor+1)& (0+255),w,b
 21164  002E' 5B00'              	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 21165  0030'                    l2633:
 21166                           
 21167                           ; BSR set to: 0
 21168                           
 21169                           ; BSR set to: 0
 21170  0030' 90D8               	bcf	status,0,c
 21171  0032' 3300'              	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 21172  0034' 3300'              	rrcf	___lwmod@divisor& (0+255),f,b
 21173                           
 21174                           ; BSR set to: 0
 21175  0036' 2F00'              	decfsz	___lwmod@counter& (0+255),f,b
 21176  0038' D7F1               	goto	u4920
 21177  003A'                    l2634:
 21178                           
 21179                           ; BSR set to: 0
 21180                           
 21181                           ; BSR set to: 0
 21182  003A' C000' F000'        	movff	___lwmod@dividend,?___lwmod
 21183  003E' C001' F001'        	movff	___lwmod@dividend+1,?___lwmod+1
 21184                           
 21185                           ; BSR set to: 0
 21186  0042' 0012               	return		;funcret
 21187  0044'                    __end_of___lwmod:
 21188                           	opt stack 0
 21189                           tosu	equ	0xFFF
 21190                           tosh	equ	0xFFE
 21191                           tosl	equ	0xFFD
 21192                           pclath	equ	0xFFA
 21193                           tblptru	equ	0xFF8
 21194                           tblptrh	equ	0xFF7
 21195                           tblptrl	equ	0xFF6
 21196                           tablat	equ	0xFF5
 21197                           prodh	equ	0xFF4
 21198                           prodl	equ	0xFF3
 21199                           intcon	equ	0xFF2
 21200                           intcon2	equ	0xFF1
 21201                           intcon3	equ	0xFF0
 21202                           indf0	equ	0xFEF
 21203                           postinc0	equ	0xFEE
 21204                           plusw0	equ	0xFEB
 21205                           fsr0h	equ	0xFEA
 21206                           fsr0l	equ	0xFE9
 21207                           wreg	equ	0xFE8
 21208                           indf1	equ	0xFE7
 21209                           postinc1	equ	0xFE6
 21210                           postdec1	equ	0xFE5
 21211                           fsr1h	equ	0xFE2
 21212                           fsr1l	equ	0xFE1
 21213                           indf2	equ	0xFDF
 21214                           postinc2	equ	0xFDE
 21215                           postdec2	equ	0xFDD
 21216                           plusw2	equ	0xFDB
 21217                           fsr2h	equ	0xFDA
 21218                           fsr2l	equ	0xFD9
 21219                           status	equ	0xFD8
 21220                           
 21221 ;; *************** function _strstr *****************
 21222 ;; Defined at:
 21223 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 21224 ;; Parameters:    Size  Location     Type
 21225 ;;  s1              2   15[BANK0 ] PTR const unsigned char 
 21226 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(200), 
 21227 ;;		 -> WifiRxPacket(203), 
 21228 ;;  s2              2   17[BANK0 ] PTR const unsigned char 
 21229 ;;		 -> STR_18(2), STR_14(8), STR_2(5), STR_1(6), 
 21230 ;; Auto vars:     Size  Location     Type
 21231 ;;		None
 21232 ;; Return value:  Size  Location     Type
 21233 ;;                  2   15[BANK0 ] PTR unsigned char 
 21234 ;; Registers used:
 21235 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21236 ;; Tracked objects:
 21237 ;;		On entry : 0/0
 21238 ;;		On exit  : 0/0
 21239 ;;		Unchanged: 0/0
 21240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21241 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21242 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21244 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21245 ;;Total ram usage:        4 bytes
 21246 ;; Hardware stack levels used:    1
 21247 ;; Hardware stack levels required when called:   12
 21248 ;; This function calls:
 21249 ;;		_strchr
 21250 ;;		_strlen
 21251 ;;		_strncmp
 21252 ;; This function is called by:
 21253 ;;		_MdmWifiEvtParser
 21254 ;;		_StartConnectionSm
 21255 ;;		_SendDataSm
 21256 ;; This function uses a non-reentrant model
 21257 ;;
 21258                           
 21259                           	psect	text93
 21260  0000'                    __ptext93:
 21261                           	opt stack 0
 21262  0000'                    _strstr:
 21263                           	opt stack 14
 21264                           
 21265                           ; BSR set to: 0
 21266                           ;incstack = 0
 21267  0000' D033               	goto	l2802
 21268  0002' C00F' F006'        	movff	strstr@s1,strncmp@s1
 21269  0006' C010' F007'        	movff	strstr@s1+1,strncmp@s1+1
 21270  000A' C011' F008'        	movff	strstr@s2,strncmp@s2
 21271  000E' C012' F009'        	movff	strstr@s2+1,strncmp@s2+1
 21272  0012' C011' F000'        	movff	strstr@s2,strlen@s
 21273  0016' C012' F001'        	movff	strstr@s2+1,strlen@s+1
 21274  001A' EC00' F000'        	call	_strlen	;wreg free
 21275  001E' C000' F00A'        	movff	?_strlen,strncmp@len
 21276  0022' C001' F00B'        	movff	?_strlen+1,strncmp@len+1
 21277  0026' EC00' F000'        	call	_strncmp	;wreg free
 21278  002A' 0100               	movlb	0	; () banked
 21279  002C' 5100'              	movf	?_strncmp& (0+255),w,b
 21280  002E' 1100'              	iorwf	(?_strncmp+1)& (0+255),w,b
 21281  0030' A4D8               	btfss	status,2,c
 21282  0032' D005               	goto	l2804
 21283                           
 21284                           ; BSR set to: 0
 21285  0034' C00F' F00F'        	movff	strstr@s1,?_strstr
 21286  0038' C010' F010'        	movff	strstr@s1+1,?_strstr+1
 21287                           
 21288                           ; BSR set to: 0
 21289  003C' 0012               	return	
 21290  003E'                    l2804:
 21291                           
 21292                           ; BSR set to: 0
 21293                           
 21294                           ; BSR set to: 0
 21295  003E' 0E01               	movlw	1
 21296  0040' 2500'              	addwf	strstr@s1& (0+255),w,b
 21297  0042' 6F00'              	movwf	strchr@ptr& (0+255),b
 21298  0044' 0E00               	movlw	0
 21299  0046' 2100'              	addwfc	(strstr@s1+1)& (0+255),w,b
 21300  0048' 6F00'              	movwf	(strchr@ptr+1)& (0+255),b
 21301  004A' C011' FFF6         	movff	strstr@s2,tblptrl
 21302  004E' C012' FFF7         	movff	strstr@s2+1,tblptrh
 21303  0052'                    	if	1	;Program memory is < 0x10000, tblptru is always zero
 21304  0052' 6AF8               	clrf	tblptru,c
 21305  0054'                    	endif
 21306  0054'                    	if	0	;tblptru may be non-zero
 21307  0054'                    	endif
 21308  0054' 0008               	tblrd		*
 21309  0056' 50F5               	movf	tablat,w,c
 21310  0058' 6F00'              	movwf	strchr@chr& (0+255),b
 21311  005A' 6B00'              	clrf	(strchr@chr+1)& (0+255),b
 21312  005C' EC00' F000'        	call	_strchr	;wreg free
 21313  0060' C000' F00F'        	movff	?_strchr,strstr@s1
 21314  0064' C001' F010'        	movff	?_strchr+1,strstr@s1+1
 21315  0068'                    l2802:
 21316  0068' 0100               	movlb	0	; () banked
 21317  006A' 5100'              	movf	strstr@s1& (0+255),w,b
 21318  006C' 1100'              	iorwf	(strstr@s1+1)& (0+255),w,b
 21319  006E' B4D8               	btfsc	status,2,c
 21320  0070' D007               	goto	u6290
 21321                           
 21322                           ; BSR set to: 0
 21323  0072' C00F' FFD9         	movff	strstr@s1,fsr2l
 21324  0076' C010' FFDA         	movff	strstr@s1+1,fsr2h
 21325  007A' 50DF               	movf	indf2,w,c
 21326  007C' A4D8               	btfss	status,2,c
 21327  007E' D7C1               	goto	l2803
 21328  0080'                    u6290:
 21329                           
 21330                           ; BSR set to: 0
 21331                           
 21332                           ; BSR set to: 0
 21333                           
 21334                           ; BSR set to: 0
 21335  0080' 0E00               	movlw	0
 21336  0082' 6F00'              	movwf	?_strstr& (0+255),b
 21337  0084' 0E00               	movlw	0
 21338  0086' 6F00'              	movwf	(?_strstr+1)& (0+255),b
 21339  0088' 0012               	return	
 21340  008A'                    __end_of_strstr:
 21341                           	opt stack 0
 21342                           tosu	equ	0xFFF
 21343                           tosh	equ	0xFFE
 21344                           tosl	equ	0xFFD
 21345                           pclath	equ	0xFFA
 21346                           tblptru	equ	0xFF8
 21347                           tblptrh	equ	0xFF7
 21348                           tblptrl	equ	0xFF6
 21349                           tablat	equ	0xFF5
 21350                           prodh	equ	0xFF4
 21351                           prodl	equ	0xFF3
 21352                           intcon	equ	0xFF2
 21353                           intcon2	equ	0xFF1
 21354                           intcon3	equ	0xFF0
 21355                           indf0	equ	0xFEF
 21356                           postinc0	equ	0xFEE
 21357                           plusw0	equ	0xFEB
 21358                           fsr0h	equ	0xFEA
 21359                           fsr0l	equ	0xFE9
 21360                           wreg	equ	0xFE8
 21361                           indf1	equ	0xFE7
 21362                           postinc1	equ	0xFE6
 21363                           postdec1	equ	0xFE5
 21364                           fsr1h	equ	0xFE2
 21365                           fsr1l	equ	0xFE1
 21366                           indf2	equ	0xFDF
 21367                           postinc2	equ	0xFDE
 21368                           postdec2	equ	0xFDD
 21369                           plusw2	equ	0xFDB
 21370                           fsr2h	equ	0xFDA
 21371                           fsr2l	equ	0xFD9
 21372                           status	equ	0xFD8
 21373                           
 21374 ;; *************** function _strncmp *****************
 21375 ;; Defined at:
 21376 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 21377 ;; Parameters:    Size  Location     Type
 21378 ;;  s1              2    6[BANK0 ] PTR const unsigned char 
 21379 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(200), 
 21380 ;;		 -> WifiRxPacket(203), 
 21381 ;;  s2              2    8[BANK0 ] PTR const unsigned char 
 21382 ;;		 -> STR_18(2), STR_14(8), STR_2(5), STR_1(6), 
 21383 ;;  len             2   10[BANK0 ] unsigned int 
 21384 ;; Auto vars:     Size  Location     Type
 21385 ;;		None
 21386 ;; Return value:  Size  Location     Type
 21387 ;;                  2    6[BANK0 ] int 
 21388 ;; Registers used:
 21389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21390 ;; Tracked objects:
 21391 ;;		On entry : 0/0
 21392 ;;		On exit  : 0/0
 21393 ;;		Unchanged: 0/0
 21394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21395 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21397 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21398 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21399 ;;Total ram usage:        9 bytes
 21400 ;; Hardware stack levels used:    1
 21401 ;; Hardware stack levels required when called:   11
 21402 ;; This function calls:
 21403 ;;		Nothing
 21404 ;; This function is called by:
 21405 ;;		_strstr
 21406 ;; This function uses a non-reentrant model
 21407 ;;
 21408                           
 21409                           	psect	text94
 21410  0000'                    __ptext94:
 21411                           	opt stack 0
 21412  0000'                    _strncmp:
 21413                           	opt stack 14
 21414                           
 21415                           ; BSR set to: 0
 21416                           ;incstack = 0
 21417  0000' D037               	goto	l2891
 21418  0002'                    l7753:
 21419  0002' C006' FFD9         	movff	strncmp@s1,fsr2l
 21420  0006' C007' FFDA         	movff	strncmp@s1+1,fsr2h
 21421  000A' 50DF               	movf	indf2,w,c
 21422  000C' B4D8               	btfsc	status,2,c
 21423  000E' D011               	goto	u5970
 21424  0010' C006' FFD9         	movff	strncmp@s1,fsr2l
 21425  0014' C007' FFDA         	movff	strncmp@s1+1,fsr2h
 21426  0018' 50DF               	movf	indf2,w,c
 21427  001A' 0100               	movlb	0	; () banked
 21428  001C' 6F00'              	movwf	??_strncmp& (0+255),b
 21429  001E' C008' FFF6         	movff	strncmp@s2,tblptrl
 21430  0022' C009' FFF7         	movff	strncmp@s2+1,tblptrh
 21431  0026'                    	if	1	;Program memory is < 0x10000, tblptru is always zero
 21432  0026' 6AF8               	clrf	tblptru,c
 21433  0028'                    	endif
 21434  0028'                    	if	0	;tblptru may be non-zero
 21435  0028'                    	endif
 21436  0028' 0008               	tblrd		*
 21437  002A' 50F5               	movf	tablat,w,c
 21438  002C' 1900'              	xorwf	??_strncmp& (0+255),w,b
 21439  002E' B4D8               	btfsc	status,2,c
 21440  0030' D01B               	goto	l2893
 21441  0032'                    u5970:
 21442                           
 21443                           ; BSR set to: 0
 21444  0032' C008' FFF6         	movff	strncmp@s2,tblptrl
 21445  0036' C009' FFF7         	movff	strncmp@s2+1,tblptrh
 21446  003A'                    	if	1	;Program memory is < 0x10000, tblptru is always zero
 21447  003A' 6AF8               	clrf	tblptru,c
 21448  003C'                    	endif
 21449  003C'                    	if	0	;tblptru may be non-zero
 21450  003C'                    	endif
 21451  003C' 0008               	tblrd		*
 21452  003E' 50F5               	movf	tablat,w,c
 21453  0040' 0100               	movlb	0	; () banked
 21454  0042' 6F00'              	movwf	??_strncmp& (0+255),b
 21455  0044' 6B00'              	clrf	(??_strncmp+1)& (0+255),b
 21456  0046' 1F00'              	comf	??_strncmp& (0+255),f,b
 21457  0048' 1F00'              	comf	(??_strncmp+1)& (0+255),f,b
 21458  004A' 4B00'              	infsnz	??_strncmp& (0+255),f,b
 21459  004C' 2B00'              	incf	(??_strncmp+1)& (0+255),f,b
 21460  004E' C006' FFD9         	movff	strncmp@s1,fsr2l
 21461  0052' C007' FFDA         	movff	strncmp@s1+1,fsr2h
 21462  0056' 50DF               	movf	indf2,w,c
 21463  0058' 6F00'              	movwf	(??_strncmp+2)& (0+255),b
 21464  005A' 5100'              	movf	(??_strncmp+2)& (0+255),w,b
 21465  005C' 2500'              	addwf	??_strncmp& (0+255),w,b
 21466  005E' 6F00'              	movwf	?_strncmp& (0+255),b
 21467  0060' 0E00               	movlw	0
 21468  0062' 2100'              	addwfc	(??_strncmp+1)& (0+255),w,b
 21469  0064' 6F00'              	movwf	(?_strncmp+1)& (0+255),b
 21470                           
 21471                           ; BSR set to: 0
 21472  0066' 0012               	return	
 21473  0068'                    l2893:
 21474                           
 21475                           ; BSR set to: 0
 21476                           
 21477                           ; BSR set to: 0
 21478  0068' 4B00'              	infsnz	strncmp@s1& (0+255),f,b
 21479  006A' 2B00'              	incf	(strncmp@s1+1)& (0+255),f,b
 21480  006C' 4B00'              	infsnz	strncmp@s2& (0+255),f,b
 21481  006E' 2B00'              	incf	(strncmp@s2+1)& (0+255),f,b
 21482  0070'                    l2891:
 21483                           
 21484                           ; BSR set to: 0
 21485  0070' 0100               	movlb	0	; () banked
 21486  0072' 0700'              	decf	strncmp@len& (0+255),f,b
 21487  0074' A0D8               	btfss	status,0,c
 21488  0076' 0700'              	decf	(strncmp@len+1)& (0+255),f,b
 21489  0078' 2900'              	incf	strncmp@len& (0+255),w,b
 21490  007A' E1C3               	bnz	l7753
 21491  007C' 2900'              	incf	(strncmp@len+1)& (0+255),w,b
 21492  007E' A4D8               	btfss	status,2,c
 21493  0080' D7C0               	goto	l2892
 21494                           
 21495                           ; BSR set to: 0
 21496                           
 21497                           ; BSR set to: 0
 21498  0082' 0E00               	movlw	0
 21499  0084' 6F00'              	movwf	(?_strncmp+1)& (0+255),b
 21500  0086' 0E00               	movlw	0
 21501  0088' 6F00'              	movwf	?_strncmp& (0+255),b
 21502  008A' 0012               	return	
 21503  008C'                    __end_of_strncmp:
 21504                           	opt stack 0
 21505                           tosu	equ	0xFFF
 21506                           tosh	equ	0xFFE
 21507                           tosl	equ	0xFFD
 21508                           pclath	equ	0xFFA
 21509                           tblptru	equ	0xFF8
 21510                           tblptrh	equ	0xFF7
 21511                           tblptrl	equ	0xFF6
 21512                           tablat	equ	0xFF5
 21513                           prodh	equ	0xFF4
 21514                           prodl	equ	0xFF3
 21515                           intcon	equ	0xFF2
 21516                           intcon2	equ	0xFF1
 21517                           intcon3	equ	0xFF0
 21518                           indf0	equ	0xFEF
 21519                           postinc0	equ	0xFEE
 21520                           plusw0	equ	0xFEB
 21521                           fsr0h	equ	0xFEA
 21522                           fsr0l	equ	0xFE9
 21523                           wreg	equ	0xFE8
 21524                           indf1	equ	0xFE7
 21525                           postinc1	equ	0xFE6
 21526                           postdec1	equ	0xFE5
 21527                           fsr1h	equ	0xFE2
 21528                           fsr1l	equ	0xFE1
 21529                           indf2	equ	0xFDF
 21530                           postinc2	equ	0xFDE
 21531                           postdec2	equ	0xFDD
 21532                           plusw2	equ	0xFDB
 21533                           fsr2h	equ	0xFDA
 21534                           fsr2l	equ	0xFD9
 21535                           status	equ	0xFD8
 21536                           
 21537 ;; *************** function _strlen *****************
 21538 ;; Defined at:
 21539 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 21540 ;; Parameters:    Size  Location     Type
 21541 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 21542 ;;		 -> Term_MainSm@Data(50), STR_18(2), STR_14(8), STR_2(5), 
 21543 ;;		 -> STR_1(6), 
 21544 ;; Auto vars:     Size  Location     Type
 21545 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 21546 ;;		 -> Term_MainSm@Data(50), STR_18(2), STR_14(8), STR_2(5), 
 21547 ;;		 -> STR_1(6), 
 21548 ;; Return value:  Size  Location     Type
 21549 ;;                  2    0[BANK0 ] unsigned int 
 21550 ;; Registers used:
 21551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 21552 ;; Tracked objects:
 21553 ;;		On entry : 0/0
 21554 ;;		On exit  : 0/0
 21555 ;;		Unchanged: 0/0
 21556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21557 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21558 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21559 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21560 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21561 ;;Total ram usage:        6 bytes
 21562 ;; Hardware stack levels used:    1
 21563 ;; Hardware stack levels required when called:   11
 21564 ;; This function calls:
 21565 ;;		Nothing
 21566 ;; This function is called by:
 21567 ;;		_Term_MainSm
 21568 ;;		_strstr
 21569 ;; This function uses a non-reentrant model
 21570 ;;
 21571                           
 21572                           	psect	text95
 21573  0000'                    __ptext95:
 21574                           	opt stack 0
 21575  0000'                    _strlen:
 21576                           	opt stack 15
 21577                           
 21578                           ; BSR set to: 0
 21579                           ;incstack = 0
 21580  0000' C000' F004'        	movff	strlen@s,strlen@cp
 21581  0004' C001' F005'        	movff	strlen@s+1,strlen@cp+1
 21582  0008' D003               	goto	l2790
 21583  000A' 0100               	movlb	0	; () banked
 21584  000C' 4B00'              	infsnz	strlen@cp& (0+255),f,b
 21585  000E' 2B00'              	incf	(strlen@cp+1)& (0+255),f,b
 21586  0010'                    l2790:
 21587                           
 21588                           ; BSR set to: 0
 21589  0010' C004' FFF6         	movff	strlen@cp,tblptrl
 21590  0014' C005' FFF7         	movff	strlen@cp+1,tblptrh
 21591  0018' 6AF8               	clrf	tblptru,c
 21592  001A' 0EFF'              	movlw	(high __ramtop+-1)
 21593  001C' 64F7               	cpfsgt	tblptrh,c
 21594  001E' D003               	bra	u5797
 21595  0020' 0008               	tblrd		*
 21596  0022' 50F5               	movf	tablat,w,c
 21597  0024' D005               	bra	u5790
 21598  0026'                    u5797:
 21599  0026' CFF6 FFE9          	movff	tblptrl,fsr0l
 21600  002A' CFF7 FFEA          	movff	tblptrh,fsr0h
 21601  002E' 50EF               	movf	indf0,w,c
 21602  0030'                    u5790:
 21603  0030' 0900               	iorlw	0
 21604  0032' A4D8               	btfss	status,2,c
 21605  0034' D7EA               	goto	l2791
 21606  0036' C000' F002'        	movff	strlen@s,??_strlen
 21607  003A' C001' F003'        	movff	strlen@s+1,??_strlen+1
 21608  003E' 0100               	movlb	0	; () banked
 21609  0040' 1F00'              	comf	??_strlen& (0+255),f,b
 21610  0042' 1F00'              	comf	(??_strlen+1)& (0+255),f,b
 21611  0044' 4B00'              	infsnz	??_strlen& (0+255),f,b
 21612  0046' 2B00'              	incf	(??_strlen+1)& (0+255),f,b
 21613  0048' 5100'              	movf	strlen@cp& (0+255),w,b
 21614  004A' 2500'              	addwf	??_strlen& (0+255),w,b
 21615  004C' 6F00'              	movwf	?_strlen& (0+255),b
 21616  004E' 5100'              	movf	(strlen@cp+1)& (0+255),w,b
 21617  0050' 2100'              	addwfc	(??_strlen+1)& (0+255),w,b
 21618  0052' 6F00'              	movwf	(?_strlen+1)& (0+255),b
 21619  0054' 0012               	return	
 21620  0056'                    __end_of_strlen:
 21621                           	opt stack 0
 21622                           tosu	equ	0xFFF
 21623                           tosh	equ	0xFFE
 21624                           tosl	equ	0xFFD
 21625                           pclath	equ	0xFFA
 21626                           tblptru	equ	0xFF8
 21627                           tblptrh	equ	0xFF7
 21628                           tblptrl	equ	0xFF6
 21629                           tablat	equ	0xFF5
 21630                           prodh	equ	0xFF4
 21631                           prodl	equ	0xFF3
 21632                           intcon	equ	0xFF2
 21633                           intcon2	equ	0xFF1
 21634                           intcon3	equ	0xFF0
 21635                           indf0	equ	0xFEF
 21636                           postinc0	equ	0xFEE
 21637                           plusw0	equ	0xFEB
 21638                           fsr0h	equ	0xFEA
 21639                           fsr0l	equ	0xFE9
 21640                           wreg	equ	0xFE8
 21641                           indf1	equ	0xFE7
 21642                           postinc1	equ	0xFE6
 21643                           postdec1	equ	0xFE5
 21644                           fsr1h	equ	0xFE2
 21645                           fsr1l	equ	0xFE1
 21646                           indf2	equ	0xFDF
 21647                           postinc2	equ	0xFDE
 21648                           postdec2	equ	0xFDD
 21649                           plusw2	equ	0xFDB
 21650                           fsr2h	equ	0xFDA
 21651                           fsr2l	equ	0xFD9
 21652                           status	equ	0xFD8
 21653                           
 21654 ;; *************** function _strchr *****************
 21655 ;; Defined at:
 21656 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 21657 ;; Parameters:    Size  Location     Type
 21658 ;;  ptr             2    0[BANK0 ] PTR const unsigned char 
 21659 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), NULL(0), WifiRxPacket.RxBuffer(200), 
 21660 ;;		 -> WifiRxPacket(203), 
 21661 ;;  chr             2    2[BANK0 ] int 
 21662 ;; Auto vars:     Size  Location     Type
 21663 ;;		None
 21664 ;; Return value:  Size  Location     Type
 21665 ;;                  2    0[BANK0 ] PTR unsigned char 
 21666 ;; Registers used:
 21667 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21668 ;; Tracked objects:
 21669 ;;		On entry : 0/0
 21670 ;;		On exit  : 0/0
 21671 ;;		Unchanged: 0/0
 21672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21673 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21676 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21677 ;;Total ram usage:        5 bytes
 21678 ;; Hardware stack levels used:    1
 21679 ;; Hardware stack levels required when called:   11
 21680 ;; This function calls:
 21681 ;;		Nothing
 21682 ;; This function is called by:
 21683 ;;		_strstr
 21684 ;; This function uses a non-reentrant model
 21685 ;;
 21686                           
 21687                           	psect	text96
 21688  0000'                    __ptext96:
 21689                           	opt stack 0
 21690  0000'                    _strchr:
 21691                           	opt stack 14
 21692                           
 21693                           ; BSR set to: 0
 21694                           ;incstack = 0
 21695  0000' C000' FFD9         	movff	strchr@ptr,fsr2l
 21696  0004' C001' FFDA         	movff	strchr@ptr+1,fsr2h
 21697  0008' 0100               	movlb	0	; () banked
 21698  000A' 5100'              	movf	strchr@chr& (0+255),w,b
 21699  000C' 18DE               	xorwf	postinc2,w,c
 21700  000E' A4D8               	btfss	status,2,c
 21701  0010' D005               	goto	l2886
 21702                           
 21703                           ; BSR set to: 0
 21704  0012' C000' F000'        	movff	strchr@ptr,?_strchr
 21705  0016' C001' F001'        	movff	strchr@ptr+1,?_strchr+1
 21706                           
 21707                           ; BSR set to: 0
 21708  001A' 0012               	return	
 21709  001C'                    l2886:
 21710                           
 21711                           ; BSR set to: 0
 21712                           
 21713                           ; BSR set to: 0
 21714  001C' C000' FFD9         	movff	strchr@ptr,fsr2l
 21715  0020' C001' FFDA         	movff	strchr@ptr+1,fsr2h
 21716  0024' 4B00'              	infsnz	strchr@ptr& (0+255),f,b
 21717  0026' 2B00'              	incf	(strchr@ptr+1)& (0+255),f,b
 21718  0028' 50DF               	movf	indf2,w,c
 21719  002A' A4D8               	btfss	status,2,c
 21720  002C' D7E9               	goto	_strchr
 21721                           
 21722                           ; BSR set to: 0
 21723                           
 21724                           ; BSR set to: 0
 21725  002E' 0E00               	movlw	0
 21726  0030' 6F00'              	movwf	?_strchr& (0+255),b
 21727  0032' 0E00               	movlw	0
 21728  0034' 6F00'              	movwf	(?_strchr+1)& (0+255),b
 21729  0036' 0012               	return	
 21730  0038'                    __end_of_strchr:
 21731                           	opt stack 0
 21732                           tosu	equ	0xFFF
 21733                           tosh	equ	0xFFE
 21734                           tosl	equ	0xFFD
 21735                           pclath	equ	0xFFA
 21736                           tblptru	equ	0xFF8
 21737                           tblptrh	equ	0xFF7
 21738                           tblptrl	equ	0xFF6
 21739                           tablat	equ	0xFF5
 21740                           prodh	equ	0xFF4
 21741                           prodl	equ	0xFF3
 21742                           intcon	equ	0xFF2
 21743                           intcon2	equ	0xFF1
 21744                           intcon3	equ	0xFF0
 21745                           indf0	equ	0xFEF
 21746                           postinc0	equ	0xFEE
 21747                           plusw0	equ	0xFEB
 21748                           fsr0h	equ	0xFEA
 21749                           fsr0l	equ	0xFE9
 21750                           wreg	equ	0xFE8
 21751                           indf1	equ	0xFE7
 21752                           postinc1	equ	0xFE6
 21753                           postdec1	equ	0xFE5
 21754                           fsr1h	equ	0xFE2
 21755                           fsr1l	equ	0xFE1
 21756                           indf2	equ	0xFDF
 21757                           postinc2	equ	0xFDE
 21758                           postdec2	equ	0xFDD
 21759                           plusw2	equ	0xFDB
 21760                           fsr2h	equ	0xFDA
 21761                           fsr2l	equ	0xFD9
 21762                           status	equ	0xFD8
 21763                           
 21764 ;; *************** function _strcpy *****************
 21765 ;; Defined at:
 21766 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 21767 ;; Parameters:    Size  Location     Type
 21768 ;;  to              2    0[BANK0 ] PTR unsigned char 
 21769 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 21770 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 21771 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), BufferLocal(100), SendDataSm@Data(103), AddressLocal(25), 
 21772 ;;		 -> StartConnectionSm@Data(100), 
 21773 ;;  from            2    2[BANK0 ] PTR const unsigned char 
 21774 ;;		 -> STR_62(21), STR_58(20), STR_53(14), STR_49(10), 
 21775 ;;		 -> STR_43(10), STR_41(13), STR_40(12), STR_36(11), 
 21776 ;;		 -> STR_32(12), STR_26(10), STR_21(11), BufferLocal(100), 
 21777 ;;		 -> STR_15(12), STR_3(13), 
 21778 ;; Auto vars:     Size  Location     Type
 21779 ;;  cp              2    4[BANK0 ] PTR unsigned char 
 21780 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 21781 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 21782 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), BufferLocal(100), SendDataSm@Data(103), AddressLocal(25), 
 21783 ;;		 -> StartConnectionSm@Data(100), 
 21784 ;; Return value:  Size  Location     Type
 21785 ;;                  2    0[BANK0 ] PTR unsigned char 
 21786 ;; Registers used:
 21787 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21788 ;; Tracked objects:
 21789 ;;		On entry : 0/0
 21790 ;;		On exit  : 0/0
 21791 ;;		Unchanged: 0/0
 21792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21794 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21796 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21797 ;;Total ram usage:        6 bytes
 21798 ;; Hardware stack levels used:    1
 21799 ;; Hardware stack levels required when called:   11
 21800 ;; This function calls:
 21801 ;;		Nothing
 21802 ;; This function is called by:
 21803 ;;		_StartConnectionSm
 21804 ;;		_SendDataSm
 21805 ;;		_Term_MainSm
 21806 ;;		_MdmWifiCmd_SetWifiMode
 21807 ;;		_MdmWifiCmd_JoinAccessPoint
 21808 ;;		_MdmWifiCmd_SetTransferMode
 21809 ;;		_MdmWifiCmd_SetConnectionMode
 21810 ;;		_MdmWifiCmd_StartConnection
 21811 ;;		_MdmWifiCmd_SendData
 21812 ;;		_MdmWifiCmd_CloseConnection
 21813 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 21814 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 21815 ;;		_MdmWifiCmd_ConfigureServer
 21816 ;; This function uses a non-reentrant model
 21817 ;;
 21818                           
 21819                           	psect	text97
 21820  0000'                    __ptext97:
 21821                           	opt stack 0
 21822  0000'                    _strcpy:
 21823                           	opt stack 15
 21824                           
 21825                           ; BSR set to: 0
 21826                           ;incstack = 0
 21827  0000' C000' F004'        	movff	strcpy@to,strcpy@cp
 21828  0004' C001' F005'        	movff	strcpy@to+1,strcpy@cp+1
 21829  0008' D005               	goto	l2784
 21830  000A' 0100               	movlb	0	; () banked
 21831  000C' 4B00'              	infsnz	strcpy@cp& (0+255),f,b
 21832  000E' 2B00'              	incf	(strcpy@cp+1)& (0+255),f,b
 21833  0010' 4B00'              	infsnz	strcpy@from& (0+255),f,b
 21834  0012' 2B00'              	incf	(strcpy@from+1)& (0+255),f,b
 21835  0014'                    l2784:
 21836                           
 21837                           ; BSR set to: 0
 21838  0014' C002' FFF6         	movff	strcpy@from,tblptrl
 21839  0018' C003' FFF7         	movff	strcpy@from+1,tblptrh
 21840  001C' 6AF8               	clrf	tblptru,c
 21841  001E' C004' FFD9         	movff	strcpy@cp,fsr2l
 21842  0022' C005' FFDA         	movff	strcpy@cp+1,fsr2h
 21843  0026' 0EFF'              	movlw	(high __ramtop+-1)
 21844  0028' 64F7               	cpfsgt	tblptrh,c
 21845  002A' D003               	bra	u6317
 21846  002C' 0008               	tblrd		*
 21847  002E' 50F5               	movf	tablat,w,c
 21848  0030' D005               	bra	u6310
 21849  0032'                    u6317:
 21850  0032' CFF6 FFE9          	movff	tblptrl,fsr0l
 21851  0036' CFF7 FFEA          	movff	tblptrh,fsr0h
 21852  003A' 50EF               	movf	indf0,w,c
 21853  003C'                    u6310:
 21854  003C' 6EDF               	movwf	indf2,c
 21855  003E' 50DF               	movf	indf2,w,c
 21856  0040' B4D8               	btfsc	status,2,c
 21857  0042' 0012               	return	
 21858  0044' D7E2               	goto	l2785
 21859  0046'                    __end_of_strcpy:
 21860                           	opt stack 0
 21861                           tosu	equ	0xFFF
 21862                           tosh	equ	0xFFE
 21863                           tosl	equ	0xFFD
 21864                           pclath	equ	0xFFA
 21865                           tblptru	equ	0xFF8
 21866                           tblptrh	equ	0xFF7
 21867                           tblptrl	equ	0xFF6
 21868                           tablat	equ	0xFF5
 21869                           prodh	equ	0xFF4
 21870                           prodl	equ	0xFF3
 21871                           intcon	equ	0xFF2
 21872                           intcon2	equ	0xFF1
 21873                           intcon3	equ	0xFF0
 21874                           indf0	equ	0xFEF
 21875                           postinc0	equ	0xFEE
 21876                           plusw0	equ	0xFEB
 21877                           fsr0h	equ	0xFEA
 21878                           fsr0l	equ	0xFE9
 21879                           wreg	equ	0xFE8
 21880                           indf1	equ	0xFE7
 21881                           postinc1	equ	0xFE6
 21882                           postdec1	equ	0xFE5
 21883                           fsr1h	equ	0xFE2
 21884                           fsr1l	equ	0xFE1
 21885                           indf2	equ	0xFDF
 21886                           postinc2	equ	0xFDE
 21887                           postdec2	equ	0xFDD
 21888                           plusw2	equ	0xFDB
 21889                           fsr2h	equ	0xFDA
 21890                           fsr2l	equ	0xFD9
 21891                           status	equ	0xFD8
 21892                           
 21893 ;; *************** function _strcat *****************
 21894 ;; Defined at:
 21895 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 21896 ;; Parameters:    Size  Location     Type
 21897 ;;  to              2    0[BANK0 ] PTR unsigned char 
 21898 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 21899 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 21900 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 21901 ;;  from            3    2[BANK0 ] PTR const unsigned char 
 21902 ;;		 -> STR_65(3), STR_64(2), STR_63(2), Term_MainSm@FwkBuildYearStr(4), 
 21903 ;;		 -> Term_MainSm@FwkBuildMonthStr(4), Term_MainSm@FwkBuildDayStr(4), STR_61(3), STR_60(2), 
 21904 ;;		 -> STR_59(2), Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 21905 ;;		 -> STR_57(3), MdmWifiCmd_ConfigureServer@PortAscii(10), STR_56(2), STR_55(2), 
 21906 ;;		 -> STR_54(2), STR_52(3), STR_51(2), STR_50(2), 
 21907 ;;		 -> STR_48(3), MdmWifiCmd_ConfigureSoftAPMode@EncAscii(5), STR_47(2), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(5), 
 21908 ;;		 -> STR_46(3), STR_45(4), STR_44(2), STR_42(3), 
 21909 ;;		 -> MdmWifiCmd_CloseConnection@IdAscii(1), STR_39(3), STR_38(2), STR_37(2), 
 21910 ;;		 -> STR_35(3), STR_34(2), STR_33(2), STR_30(3), 
 21911 ;;		 -> STR_29(2), STR_28(4), STR_27(2), STR_25(3), 
 21912 ;;		 -> STR_24(2), STR_23(2), STR_22(2), STR_19(3), 
 21913 ;;		 -> STR_17(3), SendDataSm@LenAscii(4), STR_16(2), SendDataSm@IdAscii(1), 
 21914 ;;		 -> ROM(65527), STR_13(3), STR_12(2), StartConnectionSm@PortAscii(4), 
 21915 ;;		 -> STR_11(2), AddressLocal(25), STR_10(2), STR_9(2), 
 21916 ;;		 -> STR_8(2), STR_7(4), STR_6(4), STR_5(2), 
 21917 ;;		 -> STR_4(2), StartConnectionSm@IdAscii(1), 
 21918 ;; Auto vars:     Size  Location     Type
 21919 ;;  cp              2    5[BANK0 ] PTR unsigned char 
 21920 ;;		 -> Term_MainSm@Data(50), MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifi
      +Cmd_ConfigureSoftAPMode@Data(100), 
 21921 ;;		 -> MdmWifiCmd_CloseConnection@Data(20), MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20),
      + MdmWifiCmd_JoinAccessPoint@Data(100), 
 21922 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 21923 ;; Return value:  Size  Location     Type
 21924 ;;                  2    0[BANK0 ] PTR unsigned char 
 21925 ;; Registers used:
 21926 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 21927 ;; Tracked objects:
 21928 ;;		On entry : 0/0
 21929 ;;		On exit  : 0/0
 21930 ;;		Unchanged: 0/0
 21931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21932 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21935 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21936 ;;Total ram usage:        7 bytes
 21937 ;; Hardware stack levels used:    1
 21938 ;; Hardware stack levels required when called:   11
 21939 ;; This function calls:
 21940 ;;		Nothing
 21941 ;; This function is called by:
 21942 ;;		_StartConnectionSm
 21943 ;;		_SendDataSm
 21944 ;;		_Term_MainSm
 21945 ;;		_MdmWifiCmd_SetWifiMode
 21946 ;;		_MdmWifiCmd_JoinAccessPoint
 21947 ;;		_MdmWifiCmd_SetTransferMode
 21948 ;;		_MdmWifiCmd_SetConnectionMode
 21949 ;;		_MdmWifiCmd_CloseConnection
 21950 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 21951 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 21952 ;;		_MdmWifiCmd_ConfigureServer
 21953 ;; This function uses a non-reentrant model
 21954 ;;
 21955                           
 21956                           	psect	text98
 21957  0000'                    __ptext98:
 21958                           	opt stack 0
 21959  0000'                    _strcat:
 21960                           	opt stack 15
 21961                           
 21962                           ;incstack = 0
 21963  0000' C000' F005'        	movff	strcat@to,strcat@cp
 21964  0004' C001' F006'        	movff	strcat@to+1,strcat@cp+1
 21965  0008' D003               	goto	l2775
 21966  000A' 0100               	movlb	0	; () banked
 21967  000C' 4B00'              	infsnz	strcat@cp& (0+255),f,b
 21968  000E' 2B00'              	incf	(strcat@cp+1)& (0+255),f,b
 21969  0010'                    l2775:
 21970                           
 21971                           ; BSR set to: 0
 21972  0010' C005' FFD9         	movff	strcat@cp,fsr2l
 21973  0014' C006' FFDA         	movff	strcat@cp+1,fsr2h
 21974  0018' 50DF               	movf	indf2,w,c
 21975  001A' B4D8               	btfsc	status,2,c
 21976  001C' D00A               	goto	l2778
 21977  001E' D7F5               	goto	l2776
 21978  0020' 0100               	movlb	0	; () banked
 21979  0022' 4B00'              	infsnz	strcat@cp& (0+255),f,b
 21980  0024' 2B00'              	incf	(strcat@cp+1)& (0+255),f,b
 21981                           
 21982                           ; BSR set to: 0
 21983  0026' 0E01               	movlw	1
 21984  0028' 2700'              	addwf	strcat@from& (0+255),f,b
 21985  002A' 0E00               	movlw	0
 21986  002C' 2300'              	addwfc	(strcat@from+1)& (0+255),f,b
 21987  002E' 0E00               	movlw	0
 21988  0030' 2300'              	addwfc	(strcat@from+2)& (0+255),f,b
 21989  0032'                    l2778:
 21990                           
 21991                           ; BSR set to: 0
 21992  0032' C002' FFF6         	movff	strcat@from,tblptrl
 21993  0036' C003' FFF7         	movff	strcat@from+1,tblptrh
 21994  003A' C004' FFF8         	movff	strcat@from+2,tblptru
 21995  003E' C005' FFD9         	movff	strcat@cp,fsr2l
 21996  0042' C006' FFDA         	movff	strcat@cp+1,fsr2h
 21997  0046' BAF8               	btfsc	tblptru,5,c
 21998  0048' D003               	bra	u6347
 21999  004A' 0008               	tblrd		*
 22000  004C' 50F5               	movf	tablat,w,c
 22001  004E' D005               	bra	u6340
 22002  0050'                    u6347:
 22003  0050' CFF6 FFE9          	movff	tblptrl,fsr0l
 22004  0054' CFF7 FFEA          	movff	tblptrh,fsr0h
 22005  0058' 50EF               	movf	indf0,w,c
 22006  005A'                    u6340:
 22007  005A' 6EDF               	movwf	indf2,c
 22008  005C' 50DF               	movf	indf2,w,c
 22009  005E' B4D8               	btfsc	status,2,c
 22010  0060' 0012               	return	
 22011  0062' D7DE               	goto	l2779
 22012  0064'                    __end_of_strcat:
 22013                           	opt stack 0
 22014                           tosu	equ	0xFFF
 22015                           tosh	equ	0xFFE
 22016                           tosl	equ	0xFFD
 22017                           pclath	equ	0xFFA
 22018                           tblptru	equ	0xFF8
 22019                           tblptrh	equ	0xFF7
 22020                           tblptrl	equ	0xFF6
 22021                           tablat	equ	0xFF5
 22022                           prodh	equ	0xFF4
 22023                           prodl	equ	0xFF3
 22024                           intcon	equ	0xFF2
 22025                           intcon2	equ	0xFF1
 22026                           intcon3	equ	0xFF0
 22027                           indf0	equ	0xFEF
 22028                           postinc0	equ	0xFEE
 22029                           plusw0	equ	0xFEB
 22030                           fsr0h	equ	0xFEA
 22031                           fsr0l	equ	0xFE9
 22032                           wreg	equ	0xFE8
 22033                           indf1	equ	0xFE7
 22034                           postinc1	equ	0xFE6
 22035                           postdec1	equ	0xFE5
 22036                           fsr1h	equ	0xFE2
 22037                           fsr1l	equ	0xFE1
 22038                           indf2	equ	0xFDF
 22039                           postinc2	equ	0xFDE
 22040                           postdec2	equ	0xFDD
 22041                           plusw2	equ	0xFDB
 22042                           fsr2h	equ	0xFDA
 22043                           fsr2l	equ	0xFD9
 22044                           status	equ	0xFD8
 22045                           
 22046 ;; *************** function _OsTmr_StartTimer *****************
 22047 ;; Defined at:
 22048 ;;		line 117 in file "../Source/c/02_Osl/os_timers.c"
 22049 ;; Parameters:    Size  Location     Type
 22050 ;;  Timer           2    4[BANK0 ] PTR struct _SwTimerType
 22051 ;;		 -> Term_MainSm@TermDelay(11), SendDataSm@SwTimer(11), 
 22052 ;;  Timeout         4    6[BANK0 ] unsigned long 
 22053 ;; Auto vars:     Size  Location     Type
 22054 ;;		None
 22055 ;; Return value:  Size  Location     Type
 22056 ;;                  1    wreg      void 
 22057 ;; Registers used:
 22058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22059 ;; Tracked objects:
 22060 ;;		On entry : 0/0
 22061 ;;		On exit  : 0/0
 22062 ;;		Unchanged: 0/0
 22063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22064 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22067 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22068 ;;Total ram usage:        6 bytes
 22069 ;; Hardware stack levels used:    1
 22070 ;; Hardware stack levels required when called:   12
 22071 ;; This function calls:
 22072 ;;		_GetOsTickCounter
 22073 ;; This function is called by:
 22074 ;;		_SendDataSm
 22075 ;;		_Term_MainSm
 22076 ;;		_OsTmr_Wait
 22077 ;; This function uses a non-reentrant model
 22078 ;;
 22079                           
 22080                           	psect	text99
 22081  0000'                    __ptext99:
 22082                           	opt stack 0
 22083  0000'                    _OsTmr_StartTimer:
 22084                           	opt stack 14
 22085                           
 22086                           ;os_timers.c: 120: Timer->Status = SwTmrNotExpired;
 22087                           
 22088                           ;incstack = 0
 22089  0000' 0100               	movlb	0	; () banked
 22090  0002' EE20 F001          	lfsr	2,1
 22091  0006' 5100'              	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 22092  0008' 26D9               	addwf	fsr2l,f,c
 22093  000A' 5100'              	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 22094  000C' 22DA               	addwfc	fsr2h,f,c
 22095  000E' 0E00               	movlw	0
 22096  0010' 6EDF               	movwf	indf2,c
 22097                           
 22098                           ; BSR set to: 0
 22099                           ;os_timers.c: 122: Timer->StartTime = GetOsTickCounter();
 22100  0012' EC00' F000'        	call	_GetOsTickCounter	;wreg free
 22101  0016' 0100               	movlb	0	; () banked
 22102  0018' EE20 F002          	lfsr	2,2
 22103  001C' 5100'              	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 22104  001E' 26D9               	addwf	fsr2l,f,c
 22105  0020' 5100'              	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 22106  0022' 22DA               	addwfc	fsr2h,f,c
 22107  0024' C000' FFDE         	movff	?_GetOsTickCounter,postinc2
 22108  0028' C001' FFDE         	movff	?_GetOsTickCounter+1,postinc2
 22109  002C' C002' FFDE         	movff	?_GetOsTickCounter+2,postinc2
 22110  0030' C003' FFDE         	movff	?_GetOsTickCounter+3,postinc2
 22111                           
 22112                           ; BSR set to: 0
 22113                           ;os_timers.c: 124: Timer->TargetTime = Timeout;
 22114  0034' EE20 F006          	lfsr	2,6
 22115  0038' 5100'              	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 22116  003A' 26D9               	addwf	fsr2l,f,c
 22117  003C' 5100'              	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 22118  003E' 22DA               	addwfc	fsr2h,f,c
 22119  0040' C006' FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 22120  0044' C007' FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 22121  0048' C008' FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 22122  004C' C009' FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 22123                           
 22124                           ; BSR set to: 0
 22125                           ;os_timers.c: 126: Timer->Enabled = 1u;
 22126  0050' C004' FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 22127  0054' C005' FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 22128  0058' 0E01               	movlw	1
 22129  005A' 6EDF               	movwf	indf2,c
 22130                           
 22131                           ; BSR set to: 0
 22132  005C' 0012               	return		;funcret
 22133  005E'                    __end_of_OsTmr_StartTimer:
 22134                           	opt stack 0
 22135                           tosu	equ	0xFFF
 22136                           tosh	equ	0xFFE
 22137                           tosl	equ	0xFFD
 22138                           pclath	equ	0xFFA
 22139                           tblptru	equ	0xFF8
 22140                           tblptrh	equ	0xFF7
 22141                           tblptrl	equ	0xFF6
 22142                           tablat	equ	0xFF5
 22143                           prodh	equ	0xFF4
 22144                           prodl	equ	0xFF3
 22145                           intcon	equ	0xFF2
 22146                           intcon2	equ	0xFF1
 22147                           intcon3	equ	0xFF0
 22148                           indf0	equ	0xFEF
 22149                           postinc0	equ	0xFEE
 22150                           plusw0	equ	0xFEB
 22151                           fsr0h	equ	0xFEA
 22152                           fsr0l	equ	0xFE9
 22153                           wreg	equ	0xFE8
 22154                           indf1	equ	0xFE7
 22155                           postinc1	equ	0xFE6
 22156                           postdec1	equ	0xFE5
 22157                           fsr1h	equ	0xFE2
 22158                           fsr1l	equ	0xFE1
 22159                           indf2	equ	0xFDF
 22160                           postinc2	equ	0xFDE
 22161                           postdec2	equ	0xFDD
 22162                           plusw2	equ	0xFDB
 22163                           fsr2h	equ	0xFDA
 22164                           fsr2l	equ	0xFD9
 22165                           status	equ	0xFD8
 22166                           
 22167 ;; *************** function _OsTmr_GetTimerStatus *****************
 22168 ;; Defined at:
 22169 ;;		line 191 in file "../Source/c/02_Osl/os_timers.c"
 22170 ;; Parameters:    Size  Location     Type
 22171 ;;  Timer           2   24[BANK0 ] PTR struct _SwTimerType
 22172 ;;		 -> Term_MainSm@TermDelay(11), SendDataSm@SwTimer(11), 
 22173 ;; Auto vars:     Size  Location     Type
 22174 ;;		None
 22175 ;; Return value:  Size  Location     Type
 22176 ;;                  1    wreg      enum E7734
 22177 ;; Registers used:
 22178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22179 ;; Tracked objects:
 22180 ;;		On entry : 0/0
 22181 ;;		On exit  : 0/0
 22182 ;;		Unchanged: 0/0
 22183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22184 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22186 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22187 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22188 ;;Total ram usage:        6 bytes
 22189 ;; Hardware stack levels used:    1
 22190 ;; Hardware stack levels required when called:   13
 22191 ;; This function calls:
 22192 ;;		_GetElapsedTime
 22193 ;; This function is called by:
 22194 ;;		_SendDataSm
 22195 ;;		_Term_MainSm
 22196 ;;		_OsTmr_Wait
 22197 ;; This function uses a non-reentrant model
 22198 ;;
 22199                           
 22200                           	psect	text100
 22201  0000'                    __ptext100:
 22202                           	opt stack 0
 22203  0000'                    _OsTmr_GetTimerStatus:
 22204                           	opt stack 13
 22205                           
 22206                           ;os_timers.c: 194: if (Timer->Enabled == 1u)
 22207                           
 22208                           ; BSR set to: 0
 22209                           ;incstack = 0
 22210  0000' C018' FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 22211  0004' C019' FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 22212  0008' 04DE               	decf	postinc2,w,c
 22213  000A' A4D8               	btfss	status,2,c
 22214  000C' D030               	goto	l793
 22215                           
 22216                           ;os_timers.c: 195: {
 22217                           ;os_timers.c: 197: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 22218  000E' 0100               	movlb	0	; () banked
 22219  0010' EE20 F006          	lfsr	2,6
 22220  0014' 5100'              	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22221  0016' 26D9               	addwf	fsr2l,f,c
 22222  0018' 5100'              	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22223  001A' 22DA               	addwfc	fsr2h,f,c
 22224  001C' EE10 F002          	lfsr	1,2
 22225  0020' 5100'              	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22226  0022' 26E1               	addwf	fsr1l,f,c
 22227  0024' 5100'              	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22228  0026' 22E2               	addwfc	fsr1h,f,c
 22229  0028' CFE6 F004'         	movff	postinc1,GetElapsedTime@StartTime
 22230  002C' CFE6 F005'         	movff	postinc1,GetElapsedTime@StartTime+1
 22231  0030' CFE6 F006'         	movff	postinc1,GetElapsedTime@StartTime+2
 22232  0034' CFE6 F007'         	movff	postinc1,GetElapsedTime@StartTime+3
 22233  0038' EC00' F000'        	call	_GetElapsedTime	;wreg free
 22234  003C' 50DE               	movf	postinc2,w,c
 22235  003E' 0100               	movlb	0	; () banked
 22236  0040' 5D00'              	subwf	?_GetElapsedTime& (0+255),w,b
 22237  0042' 50DE               	movf	postinc2,w,c
 22238  0044' 5900'              	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 22239  0046' 50DE               	movf	postinc2,w,c
 22240  0048' 5900'              	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 22241  004A' 50DE               	movf	postinc2,w,c
 22242  004C' 5900'              	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 22243  004E' A0D8               	btfss	status,0,c
 22244  0050' D017               	goto	l796
 22245                           
 22246                           ; BSR set to: 0
 22247                           ;os_timers.c: 198: {
 22248                           ;os_timers.c: 200: Timer->Enabled = 0u;
 22249  0052' C018' FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 22250  0056' C019' FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 22251  005A' 0E00               	movlw	0
 22252  005C' 6EDF               	movwf	indf2,c
 22253                           
 22254                           ; BSR set to: 0
 22255                           ;os_timers.c: 202: Timer->Status = SwTimerExpired;
 22256  005E' EE20 F001          	lfsr	2,1
 22257  0062' 5100'              	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22258  0064' 26D9               	addwf	fsr2l,f,c
 22259  0066' 5100'              	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22260  0068' 22DA               	addwfc	fsr2h,f,c
 22261  006A' 0E01               	movlw	1
 22262  006C' D008               	goto	L51
 22263  006E'                    l793:
 22264                           
 22265                           ;os_timers.c: 209: else
 22266                           ;os_timers.c: 210: {
 22267                           ;os_timers.c: 212: Timer->Status = SwTimerDisabled;
 22268                           
 22269                           ; BSR set to: 0
 22270  006E' 0100               	movlb	0	; () banked
 22271  0070' EE20 F001          	lfsr	2,1
 22272  0074' 5100'              	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22273  0076' 26D9               	addwf	fsr2l,f,c
 22274  0078' 5100'              	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22275  007A' 22DA               	addwfc	fsr2h,f,c
 22276  007C' 0E02               	movlw	2
 22277  007E'                    L51:
 22278  007E' 6EDF               	movwf	indf2,c
 22279  0080'                    l796:
 22280                           
 22281                           ; BSR set to: 0
 22282                           ;os_timers.c: 213: }
 22283                           ;os_timers.c: 216: return Timer->Status;
 22284  0080' EE20 F001          	lfsr	2,1
 22285  0084' 5100'              	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 22286  0086' 26D9               	addwf	fsr2l,f,c
 22287  0088' 5100'              	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 22288  008A' 22DA               	addwfc	fsr2h,f,c
 22289  008C' 50DF               	movf	indf2,w,c
 22290  008E' 0012               	return	
 22291  0090'                    __end_of_OsTmr_GetTimerStatus:
 22292                           	opt stack 0
 22293                           tosu	equ	0xFFF
 22294                           tosh	equ	0xFFE
 22295                           tosl	equ	0xFFD
 22296                           pclath	equ	0xFFA
 22297                           tblptru	equ	0xFF8
 22298                           tblptrh	equ	0xFF7
 22299                           tblptrl	equ	0xFF6
 22300                           tablat	equ	0xFF5
 22301                           prodh	equ	0xFF4
 22302                           prodl	equ	0xFF3
 22303                           intcon	equ	0xFF2
 22304                           intcon2	equ	0xFF1
 22305                           intcon3	equ	0xFF0
 22306                           indf0	equ	0xFEF
 22307                           postinc0	equ	0xFEE
 22308                           plusw0	equ	0xFEB
 22309                           fsr0h	equ	0xFEA
 22310                           fsr0l	equ	0xFE9
 22311                           wreg	equ	0xFE8
 22312                           indf1	equ	0xFE7
 22313                           postinc1	equ	0xFE6
 22314                           postdec1	equ	0xFE5
 22315                           fsr1h	equ	0xFE2
 22316                           fsr1l	equ	0xFE1
 22317                           indf2	equ	0xFDF
 22318                           postinc2	equ	0xFDE
 22319                           postdec2	equ	0xFDD
 22320                           plusw2	equ	0xFDB
 22321                           fsr2h	equ	0xFDA
 22322                           fsr2l	equ	0xFD9
 22323                           status	equ	0xFD8
 22324                           
 22325 ;; *************** function _GetElapsedTime *****************
 22326 ;; Defined at:
 22327 ;;		line 83 in file "../Source/c/02_Osl/os_timers.c"
 22328 ;; Parameters:    Size  Location     Type
 22329 ;;  StartTime       4    4[BANK0 ] unsigned long 
 22330 ;; Auto vars:     Size  Location     Type
 22331 ;;  CurrentTimes    4   20[BANK0 ] unsigned long 
 22332 ;;  TimeValue       4   16[BANK0 ] unsigned long 
 22333 ;; Return value:  Size  Location     Type
 22334 ;;                  4    4[BANK0 ] unsigned long 
 22335 ;; Registers used:
 22336 ;;		wreg, status,2, status,0, cstack
 22337 ;; Tracked objects:
 22338 ;;		On entry : 0/0
 22339 ;;		On exit  : 0/0
 22340 ;;		Unchanged: 0/0
 22341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22342 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22343 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22344 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22345 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22346 ;;Total ram usage:       20 bytes
 22347 ;; Hardware stack levels used:    1
 22348 ;; Hardware stack levels required when called:   12
 22349 ;; This function calls:
 22350 ;;		_GetOsTickCounter
 22351 ;; This function is called by:
 22352 ;;		_OsTmr_GetTimerStatus
 22353 ;;		_OsTmr_GetRemainingTime
 22354 ;; This function uses a non-reentrant model
 22355 ;;
 22356                           
 22357                           	psect	text101
 22358  0000'                    __ptext101:
 22359                           	opt stack 0
 22360  0000'                    _GetElapsedTime:
 22361                           	opt stack 13
 22362                           
 22363                           ;os_timers.c: 85: UINT32 CurrentTimestamp;
 22364                           ;os_timers.c: 86: UINT32 TimeValue;
 22365                           ;os_timers.c: 89: CurrentTimestamp = GetOsTickCounter();
 22366                           
 22367                           ; BSR set to: 0
 22368                           ;incstack = 0
 22369  0000' EC00' F000'        	call	_GetOsTickCounter	;wreg free
 22370  0004' C000' F014'        	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 22371  0008' C001' F015'        	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 22372  000C' C002' F016'        	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 22373  0010' C003' F017'        	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 22374                           
 22375                           ;os_timers.c: 92: if (CurrentTimestamp >= StartTime)
 22376  0014' 0100               	movlb	0	; () banked
 22377  0016' 5100'              	movf	GetElapsedTime@StartTime& (0+255),w,b
 22378  0018' 5D00'              	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 22379  001A' 5100'              	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 22380  001C' 5900'              	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 22381  001E' 5100'              	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 22382  0020' 5900'              	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 22383  0022' 5100'              	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 22384  0024' 5900'              	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 22385  0026' A0D8               	btfss	status,0,c
 22386  0028' D01D               	goto	l773
 22387                           
 22388                           ; BSR set to: 0
 22389                           ;os_timers.c: 93: {
 22390                           ;os_timers.c: 94: TimeValue = (CurrentTimestamp - StartTime);
 22391  002A' C004' F008'        	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 22392  002E' C005' F009'        	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 22393  0032' C006' F00A'        	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 22394  0036' C007' F00B'        	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 22395  003A' 1F00'              	comf	??_GetElapsedTime& (0+255),f,b
 22396  003C' 1F00'              	comf	(??_GetElapsedTime+1)& (0+255),f,b
 22397  003E' 1F00'              	comf	(??_GetElapsedTime+2)& (0+255),f,b
 22398  0040' 1F00'              	comf	(??_GetElapsedTime+3)& (0+255),f,b
 22399  0042' 2B00'              	incf	??_GetElapsedTime& (0+255),f,b
 22400  0044' 0E00               	movlw	0
 22401  0046' 2300'              	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 22402  0048' 2300'              	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 22403  004A' 2300'              	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 22404  004C' 5100'              	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 22405  004E' 2500'              	addwf	??_GetElapsedTime& (0+255),w,b
 22406  0050' 6F00'              	movwf	GetElapsedTime@TimeValue& (0+255),b
 22407  0052' 5100'              	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 22408  0054' 2100'              	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 22409  0056' 6F00'              	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 22410  0058' 5100'              	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 22411  005A' 2100'              	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 22412  005C' 6F00'              	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 22413  005E' 5100'              	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 22414  0060' 2100'              	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 22415  0062' D028               	goto	L25
 22416  0064'                    l773:
 22417                           
 22418                           ; BSR set to: 0
 22419                           ;os_timers.c: 96: else
 22420                           ;os_timers.c: 97: {
 22421                           ;os_timers.c: 98: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 22422                           
 22423                           ; BSR set to: 0
 22424  0064' C004' F008'        	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 22425  0068' C005' F009'        	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 22426  006C' C006' F00A'        	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 22427  0070' C007' F00B'        	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 22428  0074' 1F00'              	comf	??_GetElapsedTime& (0+255),f,b
 22429  0076' 1F00'              	comf	(??_GetElapsedTime+1)& (0+255),f,b
 22430  0078' 1F00'              	comf	(??_GetElapsedTime+2)& (0+255),f,b
 22431  007A' 1F00'              	comf	(??_GetElapsedTime+3)& (0+255),f,b
 22432  007C' 2B00'              	incf	??_GetElapsedTime& (0+255),f,b
 22433  007E' 0E00               	movlw	0
 22434  0080' 2300'              	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 22435  0082' 2300'              	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 22436  0084' 2300'              	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 22437  0086' 5100'              	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 22438  0088' 2500'              	addwf	??_GetElapsedTime& (0+255),w,b
 22439  008A' 6F00'              	movwf	(??_GetElapsedTime+4)& (0+255),b
 22440  008C' 5100'              	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 22441  008E' 2100'              	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 22442  0090' 6F00'              	movwf	(??_GetElapsedTime+5)& (0+255),b
 22443  0092' 5100'              	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 22444  0094' 2100'              	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 22445  0096' 6F00'              	movwf	(??_GetElapsedTime+6)& (0+255),b
 22446  0098' 5100'              	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 22447  009A' 2100'              	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 22448  009C' 6F00'              	movwf	(??_GetElapsedTime+7)& (0+255),b
 22449  009E' 0EFF               	movlw	255
 22450  00A0' 2500'              	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 22451  00A2' 6F00'              	movwf	GetElapsedTime@TimeValue& (0+255),b
 22452  00A4' 0EFF               	movlw	255
 22453  00A6' 2100'              	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 22454  00A8' 6F00'              	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 22455  00AA' 0EFF               	movlw	255
 22456  00AC' 2100'              	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 22457  00AE' 6F00'              	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 22458  00B0' 0EFF               	movlw	255
 22459  00B2' 2100'              	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 22460  00B4'                    L25:
 22461  00B4' 6F00'              	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 22462                           
 22463                           ; BSR set to: 0
 22464                           ;os_timers.c: 99: }
 22465                           ;os_timers.c: 101: return TimeValue;
 22466                           
 22467                           ; BSR set to: 0
 22468  00B6' C010' F004'        	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 22469  00BA' C011' F005'        	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 22470  00BE' C012' F006'        	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 22471  00C2' C013' F007'        	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 22472  00C6' 0012               	return	
 22473  00C8'                    __end_of_GetElapsedTime:
 22474                           	opt stack 0
 22475                           tosu	equ	0xFFF
 22476                           tosh	equ	0xFFE
 22477                           tosl	equ	0xFFD
 22478                           pclath	equ	0xFFA
 22479                           tblptru	equ	0xFF8
 22480                           tblptrh	equ	0xFF7
 22481                           tblptrl	equ	0xFF6
 22482                           tablat	equ	0xFF5
 22483                           prodh	equ	0xFF4
 22484                           prodl	equ	0xFF3
 22485                           intcon	equ	0xFF2
 22486                           intcon2	equ	0xFF1
 22487                           intcon3	equ	0xFF0
 22488                           indf0	equ	0xFEF
 22489                           postinc0	equ	0xFEE
 22490                           plusw0	equ	0xFEB
 22491                           fsr0h	equ	0xFEA
 22492                           fsr0l	equ	0xFE9
 22493                           wreg	equ	0xFE8
 22494                           indf1	equ	0xFE7
 22495                           postinc1	equ	0xFE6
 22496                           postdec1	equ	0xFE5
 22497                           fsr1h	equ	0xFE2
 22498                           fsr1l	equ	0xFE1
 22499                           indf2	equ	0xFDF
 22500                           postinc2	equ	0xFDE
 22501                           postdec2	equ	0xFDD
 22502                           plusw2	equ	0xFDB
 22503                           fsr2h	equ	0xFDA
 22504                           fsr2l	equ	0xFD9
 22505                           status	equ	0xFD8
 22506                           
 22507 ;; *************** function _GetOsTickCounter *****************
 22508 ;; Defined at:
 22509 ;;		line 69 in file "../Source/c/02_Osl/os_timers.c"
 22510 ;; Parameters:    Size  Location     Type
 22511 ;;		None
 22512 ;; Auto vars:     Size  Location     Type
 22513 ;;		None
 22514 ;; Return value:  Size  Location     Type
 22515 ;;                  4    0[BANK0 ] unsigned long 
 22516 ;; Registers used:
 22517 ;;		None
 22518 ;; Tracked objects:
 22519 ;;		On entry : 0/0
 22520 ;;		On exit  : 0/0
 22521 ;;		Unchanged: 0/0
 22522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22523 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22526 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22527 ;;Total ram usage:        4 bytes
 22528 ;; Hardware stack levels used:    1
 22529 ;; Hardware stack levels required when called:   11
 22530 ;; This function calls:
 22531 ;;		Nothing
 22532 ;; This function is called by:
 22533 ;;		_GetElapsedTime
 22534 ;;		_OsTmr_StartTimer
 22535 ;;		_OsTmr_GetElapsedTime
 22536 ;; This function uses a non-reentrant model
 22537 ;;
 22538                           
 22539                           	psect	text102
 22540  0000'                    __ptext102:
 22541                           	opt stack 0
 22542  0000'                    _GetOsTickCounter:
 22543                           	opt stack 14
 22544                           
 22545                           ;os_timers.c: 72: return OsTmr_OsTickCounter;
 22546                           
 22547                           ; BSR set to: 0
 22548                           ;incstack = 0
 22549  0000' C020' F000'        	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 22550  0004' C021' F001'        	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 22551  0008' C022' F002'        	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 22552  000C' C023' F003'        	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 22553  0010' 0012               	return		;funcret
 22554  0012'                    __end_of_GetOsTickCounter:
 22555                           	opt stack 0
 22556                           tosu	equ	0xFFF
 22557                           tosh	equ	0xFFE
 22558                           tosl	equ	0xFFD
 22559                           pclath	equ	0xFFA
 22560                           tblptru	equ	0xFF8
 22561                           tblptrh	equ	0xFF7
 22562                           tblptrl	equ	0xFF6
 22563                           tablat	equ	0xFF5
 22564                           prodh	equ	0xFF4
 22565                           prodl	equ	0xFF3
 22566                           intcon	equ	0xFF2
 22567                           intcon2	equ	0xFF1
 22568                           intcon3	equ	0xFF0
 22569                           indf0	equ	0xFEF
 22570                           postinc0	equ	0xFEE
 22571                           plusw0	equ	0xFEB
 22572                           fsr0h	equ	0xFEA
 22573                           fsr0l	equ	0xFE9
 22574                           wreg	equ	0xFE8
 22575                           indf1	equ	0xFE7
 22576                           postinc1	equ	0xFE6
 22577                           postdec1	equ	0xFE5
 22578                           fsr1h	equ	0xFE2
 22579                           fsr1l	equ	0xFE1
 22580                           indf2	equ	0xFDF
 22581                           postinc2	equ	0xFDE
 22582                           postdec2	equ	0xFDD
 22583                           plusw2	equ	0xFDB
 22584                           fsr2h	equ	0xFDA
 22585                           fsr2l	equ	0xFD9
 22586                           status	equ	0xFD8
 22587                           
 22588 ;; *************** function _MdmWifi_SendWifiMsg *****************
 22589 ;; Defined at:
 22590 ;;		line 424 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 22591 ;; Parameters:    Size  Location     Type
 22592 ;;  TxBuffer        2    6[BANK0 ] PTR unsigned char 
 22593 ;;		 -> MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifiCmd_ConfigureSoftAPMod
      +e@Data(100), MdmWifiCmd_CloseConnection@Data(20), 
 22594 ;;		 -> MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20), STR_31(11), MdmWifiCmd_JoinAccessPoi
      +nt@Data(100), 
 22595 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), STR_20(9), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22596 ;; Auto vars:     Size  Location     Type
 22597 ;;		None
 22598 ;; Return value:  Size  Location     Type
 22599 ;;                  1    wreg      void 
 22600 ;; Registers used:
 22601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22602 ;; Tracked objects:
 22603 ;;		On entry : 0/0
 22604 ;;		On exit  : 0/0
 22605 ;;		Unchanged: 0/0
 22606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22607 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22610 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22611 ;;Total ram usage:        2 bytes
 22612 ;; Hardware stack levels used:    1
 22613 ;; Hardware stack levels required when called:   13
 22614 ;; This function calls:
 22615 ;;		_Uart_WriteString
 22616 ;; This function is called by:
 22617 ;;		_StartConnectionSm
 22618 ;;		_SendDataSm
 22619 ;;		_MdmWifiCmd_RestartModem
 22620 ;;		_MdmWifiCmd_SetWifiMode
 22621 ;;		_MdmWifiCmd_JoinAccessPoint
 22622 ;;		_MdmWifiCmd_QuitAccessPoint
 22623 ;;		_MdmWifiCmd_SetTransferMode
 22624 ;;		_MdmWifiCmd_SetConnectionMode
 22625 ;;		_MdmWifiCmd_CloseConnection
 22626 ;;		_MdmWifiCmd_ConfigureSoftAPMode
 22627 ;;		_MdmWifiCmd_ConfigureSoftAPIpAddress
 22628 ;;		_MdmWifiCmd_ConfigureServer
 22629 ;; This function uses a non-reentrant model
 22630 ;;
 22631                           
 22632                           	psect	text103
 22633  0000'                    __ptext103:
 22634                           	opt stack 0
 22635  0000'                    _MdmWifi_SendWifiMsg:
 22636                           	opt stack 13
 22637                           
 22638                           ;mdm_wifi.c: 427: Uart_WriteString(((UINT8)(1)), TxBuffer);
 22639                           
 22640                           ;incstack = 0
 22641  0000' C006' F003'        	movff	MdmWifi_SendWifiMsg@TxBuffer,Uart_WriteString@StringToWrite
 22642  0004' C007' F004'        	movff	MdmWifi_SendWifiMsg@TxBuffer+1,Uart_WriteString@StringToWrite+1
 22643  0008' 0E01               	movlw	1
 22644  000A' EC00' F000'        	call	_Uart_WriteString
 22645  000E' 0012               	return		;funcret
 22646  0010'                    __end_of_MdmWifi_SendWifiMsg:
 22647                           	opt stack 0
 22648                           tosu	equ	0xFFF
 22649                           tosh	equ	0xFFE
 22650                           tosl	equ	0xFFD
 22651                           pclath	equ	0xFFA
 22652                           tblptru	equ	0xFF8
 22653                           tblptrh	equ	0xFF7
 22654                           tblptrl	equ	0xFF6
 22655                           tablat	equ	0xFF5
 22656                           prodh	equ	0xFF4
 22657                           prodl	equ	0xFF3
 22658                           intcon	equ	0xFF2
 22659                           intcon2	equ	0xFF1
 22660                           intcon3	equ	0xFF0
 22661                           indf0	equ	0xFEF
 22662                           postinc0	equ	0xFEE
 22663                           plusw0	equ	0xFEB
 22664                           fsr0h	equ	0xFEA
 22665                           fsr0l	equ	0xFE9
 22666                           wreg	equ	0xFE8
 22667                           indf1	equ	0xFE7
 22668                           postinc1	equ	0xFE6
 22669                           postdec1	equ	0xFE5
 22670                           fsr1h	equ	0xFE2
 22671                           fsr1l	equ	0xFE1
 22672                           indf2	equ	0xFDF
 22673                           postinc2	equ	0xFDE
 22674                           postdec2	equ	0xFDD
 22675                           plusw2	equ	0xFDB
 22676                           fsr2h	equ	0xFDA
 22677                           fsr2l	equ	0xFD9
 22678                           status	equ	0xFD8
 22679                           
 22680 ;; *************** function _Uart_WriteString *****************
 22681 ;; Defined at:
 22682 ;;		line 506 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22683 ;; Parameters:    Size  Location     Type
 22684 ;;  Module          1    wreg     unsigned char 
 22685 ;;  StringToWrit    2    3[BANK0 ] PTR unsigned char 
 22686 ;;		 -> MdmWifiCmd_ConfigureServer@Data(20), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(40), MdmWifiCmd_ConfigureSoftAPMod
      +e@Data(100), MdmWifiCmd_CloseConnection@Data(20), 
 22687 ;;		 -> MdmWifiCmd_SetConnectionMode@Data(20), MdmWifiCmd_SetTransferMode@Data(20), STR_31(11), MdmWifiCmd_JoinAccessPoi
      +nt@Data(100), 
 22688 ;;		 -> MdmWifiCmd_SetWifiMode@Data(20), STR_20(9), SendDataSm@Data(103), StartConnectionSm@Data(100), 
 22689 ;; Auto vars:     Size  Location     Type
 22690 ;;  Module          1    5[BANK0 ] unsigned char 
 22691 ;; Return value:  Size  Location     Type
 22692 ;;                  1    wreg      void 
 22693 ;; Registers used:
 22694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22695 ;; Tracked objects:
 22696 ;;		On entry : 0/0
 22697 ;;		On exit  : 0/0
 22698 ;;		Unchanged: 0/0
 22699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22700 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22701 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22703 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22704 ;;Total ram usage:        3 bytes
 22705 ;; Hardware stack levels used:    1
 22706 ;; Hardware stack levels required when called:   12
 22707 ;; This function calls:
 22708 ;;		_UartTxBufferStatus
 22709 ;;		_UartWriteByte
 22710 ;; This function is called by:
 22711 ;;		_MdmWifi_SendWifiMsg
 22712 ;; This function uses a non-reentrant model
 22713 ;;
 22714                           
 22715                           	psect	text104
 22716  0000'                    __ptext104:
 22717                           	opt stack 0
 22718  0000'                    _Uart_WriteString:
 22719                           	opt stack 13
 22720                           
 22721                           ;incstack = 0
 22722                           ;Uart_WriteString@Module stored from wreg
 22723  0000' 0100               	movlb	0	; () banked
 22724  0002' 6F00'              	movwf	Uart_WriteString@Module& (0+255),b
 22725                           
 22726                           ;uart_drv.c: 509: while (*StringToWrite)
 22727  0004' D01F               	goto	u5350
 22728  0006'                    
 22729                           ;uart_drv.c: 510: {
 22730                           ;uart_drv.c: 512: UartWriteByte(Module, *StringToWrite);
 22731  0006' C003' FFF6         	movff	Uart_WriteString@StringToWrite,tblptrl
 22732  000A' C004' FFF7         	movff	Uart_WriteString@StringToWrite+1,tblptrh
 22733  000E' 6AF8               	clrf	tblptru,c
 22734  0010' 0EFF'              	movlw	(high __ramtop+-1)
 22735  0012' 64F7               	cpfsgt	tblptrh,c
 22736  0014' D003               	bra	u5347
 22737  0016' 0008               	tblrd		*
 22738  0018' 50F5               	movf	tablat,w,c
 22739  001A' D005               	bra	u5340
 22740  001C'                    u5347:
 22741  001C' CFF6 FFE9          	movff	tblptrl,fsr0l
 22742  0020' CFF7 FFEA          	movff	tblptrh,fsr0h
 22743  0024' 50EF               	movf	indf0,w,c
 22744  0026'                    u5340:
 22745  0026' 0100               	movlb	0	; () banked
 22746  0028' 6F00'              	movwf	UartWriteByte@ByteToWrite& (0+255),b
 22747  002A' 5100'              	movf	Uart_WriteString@Module& (0+255),w,b
 22748  002C' EC00' F000'        	call	_UartWriteByte
 22749                           
 22750                           ;uart_drv.c: 514: StringToWrite++;
 22751  0030' 0100               	movlb	0	; () banked
 22752  0032' 4B00'              	infsnz	Uart_WriteString@StringToWrite& (0+255),f,b
 22753  0034' 2B00'              	incf	(Uart_WriteString@StringToWrite+1)& (0+255),f,b
 22754  0036'                    
 22755                           ; BSR set to: 0
 22756                           
 22757                           ; BSR set to: 0
 22758  0036' 0100               	movlb	0	; () banked
 22759  0038' 5100'              	movf	Uart_WriteString@Module& (0+255),w,b
 22760  003A' EC00' F000'        	call	_UartTxBufferStatus
 22761  003E' 06E8               	decf	wreg,f,c
 22762  0040' B4D8               	btfsc	status,2,c
 22763  0042' D7F9               	goto	l572
 22764  0044'                    u5350:
 22765  0044' C003' FFF6         	movff	Uart_WriteString@StringToWrite,tblptrl
 22766  0048' C004' FFF7         	movff	Uart_WriteString@StringToWrite+1,tblptrh
 22767  004C' 6AF8               	clrf	tblptru,c
 22768  004E' 0EFF'              	movlw	(high __ramtop+-1)
 22769  0050' 64F7               	cpfsgt	tblptrh,c
 22770  0052' D003               	bra	u5367
 22771  0054' 0008               	tblrd		*
 22772  0056' 50F5               	movf	tablat,w,c
 22773  0058' D005               	bra	u5360
 22774  005A'                    u5367:
 22775  005A' CFF6 FFE9          	movff	tblptrl,fsr0l
 22776  005E' CFF7 FFEA          	movff	tblptrh,fsr0h
 22777  0062' 50EF               	movf	indf0,w,c
 22778  0064'                    u5360:
 22779  0064' 0900               	iorlw	0
 22780  0066' B4D8               	btfsc	status,2,c
 22781  0068' 0012               	return	
 22782  006A' D7CD               	goto	l570
 22783  006C'                    __end_of_Uart_WriteString:
 22784                           	opt stack 0
 22785                           tosu	equ	0xFFF
 22786                           tosh	equ	0xFFE
 22787                           tosl	equ	0xFFD
 22788                           pclath	equ	0xFFA
 22789                           tblptru	equ	0xFF8
 22790                           tblptrh	equ	0xFF7
 22791                           tblptrl	equ	0xFF6
 22792                           tablat	equ	0xFF5
 22793                           prodh	equ	0xFF4
 22794                           prodl	equ	0xFF3
 22795                           intcon	equ	0xFF2
 22796                           intcon2	equ	0xFF1
 22797                           intcon3	equ	0xFF0
 22798                           indf0	equ	0xFEF
 22799                           postinc0	equ	0xFEE
 22800                           plusw0	equ	0xFEB
 22801                           fsr0h	equ	0xFEA
 22802                           fsr0l	equ	0xFE9
 22803                           wreg	equ	0xFE8
 22804                           indf1	equ	0xFE7
 22805                           postinc1	equ	0xFE6
 22806                           postdec1	equ	0xFE5
 22807                           fsr1h	equ	0xFE2
 22808                           fsr1l	equ	0xFE1
 22809                           indf2	equ	0xFDF
 22810                           postinc2	equ	0xFDE
 22811                           postdec2	equ	0xFDD
 22812                           plusw2	equ	0xFDB
 22813                           fsr2h	equ	0xFDA
 22814                           fsr2l	equ	0xFD9
 22815                           status	equ	0xFD8
 22816                           
 22817 ;; *************** function _UartWriteByte *****************
 22818 ;; Defined at:
 22819 ;;		line 173 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22820 ;; Parameters:    Size  Location     Type
 22821 ;;  Module          1    wreg     unsigned char 
 22822 ;;  ByteToWrite     1    0[BANK0 ] unsigned char 
 22823 ;; Auto vars:     Size  Location     Type
 22824 ;;  Module          1    1[BANK0 ] unsigned char 
 22825 ;; Return value:  Size  Location     Type
 22826 ;;                  1    wreg      void 
 22827 ;; Registers used:
 22828 ;;		wreg, status,2, status,0
 22829 ;; Tracked objects:
 22830 ;;		On entry : 0/0
 22831 ;;		On exit  : 0/0
 22832 ;;		Unchanged: 0/0
 22833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22834 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22835 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22837 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22838 ;;Total ram usage:        2 bytes
 22839 ;; Hardware stack levels used:    1
 22840 ;; Hardware stack levels required when called:   11
 22841 ;; This function calls:
 22842 ;;		Nothing
 22843 ;; This function is called by:
 22844 ;;		_Uart_WriteString
 22845 ;;		_Uart_WriteConstString
 22846 ;;		_Uart_WriteStringLen
 22847 ;; This function uses a non-reentrant model
 22848 ;;
 22849                           
 22850                           	psect	text105
 22851  0000'                    __ptext105:
 22852                           	opt stack 0
 22853  0000'                    _UartWriteByte:
 22854                           	opt stack 13
 22855                           
 22856                           ;incstack = 0
 22857                           ;UartWriteByte@Module stored from wreg
 22858  0000' 0100               	movlb	0	; () banked
 22859  0002' 6F00'              	movwf	UartWriteByte@Module& (0+255),b
 22860                           
 22861                           ;uart_drv.c: 175: if (Module == ((UINT8)(1)))
 22862  0004' 0100               	movlb	0	; () banked
 22863  0006' 0500'              	decf	UartWriteByte@Module& (0+255),w,b
 22864  0008' A4D8               	btfss	status,2,c
 22865  000A' D003               	goto	l521
 22866                           
 22867                           ; BSR set to: 0
 22868                           ;uart_drv.c: 176: {
 22869                           ;uart_drv.c: 178: TXREG1 = ByteToWrite;
 22870  000C' C000' FFAE         	movff	UartWriteByte@ByteToWrite,4014	;volatile
 22871                           
 22872                           ;uart_drv.c: 179: }
 22873  0010' 0012               	return	
 22874  0012'                    l521:
 22875                           
 22876                           ; BSR set to: 0
 22877                           ;uart_drv.c: 180: else if (Module == ((UINT8)(2)))
 22878                           
 22879                           ; BSR set to: 0
 22880  0012' 0E02               	movlw	2
 22881  0014' 1900'              	xorwf	UartWriteByte@Module& (0+255),w,b
 22882  0016' A4D8               	btfss	status,2,c
 22883  0018' 0012               	return	
 22884                           
 22885                           ; BSR set to: 0
 22886                           ;uart_drv.c: 181: {
 22887                           ;uart_drv.c: 183: TXREG2 = ByteToWrite;
 22888  001A' C000' FFA9         	movff	UartWriteByte@ByteToWrite,4009	;volatile
 22889                           
 22890                           ; BSR set to: 0
 22891  001E' 0012               	return	
 22892  0020'                    __end_of_UartWriteByte:
 22893                           	opt stack 0
 22894                           tosu	equ	0xFFF
 22895                           tosh	equ	0xFFE
 22896                           tosl	equ	0xFFD
 22897                           pclath	equ	0xFFA
 22898                           tblptru	equ	0xFF8
 22899                           tblptrh	equ	0xFF7
 22900                           tblptrl	equ	0xFF6
 22901                           tablat	equ	0xFF5
 22902                           prodh	equ	0xFF4
 22903                           prodl	equ	0xFF3
 22904                           intcon	equ	0xFF2
 22905                           intcon2	equ	0xFF1
 22906                           intcon3	equ	0xFF0
 22907                           indf0	equ	0xFEF
 22908                           postinc0	equ	0xFEE
 22909                           plusw0	equ	0xFEB
 22910                           fsr0h	equ	0xFEA
 22911                           fsr0l	equ	0xFE9
 22912                           wreg	equ	0xFE8
 22913                           indf1	equ	0xFE7
 22914                           postinc1	equ	0xFE6
 22915                           postdec1	equ	0xFE5
 22916                           fsr1h	equ	0xFE2
 22917                           fsr1l	equ	0xFE1
 22918                           indf2	equ	0xFDF
 22919                           postinc2	equ	0xFDE
 22920                           postdec2	equ	0xFDD
 22921                           plusw2	equ	0xFDB
 22922                           fsr2h	equ	0xFDA
 22923                           fsr2l	equ	0xFD9
 22924                           status	equ	0xFD8
 22925                           
 22926 ;; *************** function _UartTxBufferStatus *****************
 22927 ;; Defined at:
 22928 ;;		line 223 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 22929 ;; Parameters:    Size  Location     Type
 22930 ;;  Module          1    wreg     unsigned char 
 22931 ;; Auto vars:     Size  Location     Type
 22932 ;;  Module          1    1[BANK0 ] unsigned char 
 22933 ;;  TxBufferStat    1    2[BANK0 ] enum E8896
 22934 ;; Return value:  Size  Location     Type
 22935 ;;                  1    wreg      enum E8896
 22936 ;; Registers used:
 22937 ;;		wreg, status,2, status,0
 22938 ;; Tracked objects:
 22939 ;;		On entry : 0/0
 22940 ;;		On exit  : 0/0
 22941 ;;		Unchanged: 0/0
 22942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22944 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22945 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22946 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22947 ;;Total ram usage:        3 bytes
 22948 ;; Hardware stack levels used:    1
 22949 ;; Hardware stack levels required when called:   11
 22950 ;; This function calls:
 22951 ;;		Nothing
 22952 ;; This function is called by:
 22953 ;;		_Uart_WriteString
 22954 ;;		_Uart_WriteConstString
 22955 ;;		_Uart_WriteStringLen
 22956 ;; This function uses a non-reentrant model
 22957 ;;
 22958                           
 22959                           	psect	text106
 22960  0000'                    __ptext106:
 22961                           	opt stack 0
 22962  0000'                    _UartTxBufferStatus:
 22963                           	opt stack 13
 22964                           
 22965                           ; BSR set to: 0
 22966                           ;incstack = 0
 22967                           ;UartTxBufferStatus@Module stored from wreg
 22968  0000' 0100               	movlb	0	; () banked
 22969  0002' 6F00'              	movwf	UartTxBufferStatus@Module& (0+255),b
 22970                           
 22971                           ;uart_drv.c: 225: TxBufferStatusType TxBufferStatus = TxBufferNotFull;
 22972  0004' 0E00               	movlw	0
 22973  0006' 0100               	movlb	0	; () banked
 22974  0008' 6F00'              	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 22975                           
 22976                           ; BSR set to: 0
 22977                           ;uart_drv.c: 227: if (Module == ((UINT8)(1)))
 22978  000A' 0500'              	decf	UartTxBufferStatus@Module& (0+255),w,b
 22979  000C' A4D8               	btfss	status,2,c
 22980  000E' D00B               	goto	l533
 22981                           
 22982                           ; BSR set to: 0
 22983                           ;uart_drv.c: 228: {
 22984                           ;uart_drv.c: 230: if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 22985  0010' CFAD F000'         	movff	4013,??_UartTxBufferStatus	;volatile
 22986  0014' 90D8               	bcf	status,0,c
 22987  0016' 3300'              	rrcf	??_UartTxBufferStatus& (0+255),f,b
 22988  0018' B100'              	btfsc	??_UartTxBufferStatus& (0+255),0,b
 22989  001A' D002               	goto	l534
 22990  001C'                    u4990:
 22991                           
 22992                           ; BSR set to: 0
 22993                           ;uart_drv.c: 231: {
 22994                           ;uart_drv.c: 232: TxBufferStatus = TxBufferFull;
 22995  001C' 0E01               	movlw	1
 22996  001E' D014               	goto	L28
 22997  0020'                    l534:
 22998                           
 22999                           ; BSR set to: 0
 23000                           ;uart_drv.c: 234: else if (((TXSTA1 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 23001                           
 23002                           ; BSR set to: 0
 23003  0020' CFAD F000'         	movff	4013,??_UartTxBufferStatus	;volatile
 23004  0024' D00C               	goto	L52
 23005  0026'                    l533:
 23006                           
 23007                           ; BSR set to: 0
 23008                           ;uart_drv.c: 243: else if (Module == ((UINT8)(2)))
 23009                           
 23010                           ; BSR set to: 0
 23011  0026' 0E02               	movlw	2
 23012  0028' 1900'              	xorwf	UartTxBufferStatus@Module& (0+255),w,b
 23013  002A' A4D8               	btfss	status,2,c
 23014  002C' D00E               	goto	l542
 23015                           
 23016                           ; BSR set to: 0
 23017                           ;uart_drv.c: 244: {
 23018                           ;uart_drv.c: 246: if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(0)))
 23019  002E' CFA8 F000'         	movff	4008,??_UartTxBufferStatus	;volatile
 23020  0032' 90D8               	bcf	status,0,c
 23021  0034' 3300'              	rrcf	??_UartTxBufferStatus& (0+255),f,b
 23022  0036' A100'              	btfss	??_UartTxBufferStatus& (0+255),0,b
 23023  0038' D7F1               	goto	u4990
 23024                           
 23025                           ; BSR set to: 0
 23026                           ;uart_drv.c: 250: else if (((TXSTA2 >> ((UINT8)(1))) & ((UINT8)(0x01))) == ((UINT8)(1)))
 23027                           
 23028                           ; BSR set to: 0
 23029                           
 23030                           ;uart_drv.c: 249: }
 23031                           
 23032                           ; BSR set to: 0
 23033                           ;uart_drv.c: 247: {
 23034                           ;uart_drv.c: 248: TxBufferStatus = TxBufferFull;
 23035  003A' CFA8 F000'         	movff	4008,??_UartTxBufferStatus	;volatile
 23036  003E'                    L52:
 23037  003E' 90D8               	bcf	status,0,c
 23038  0040' 3300'              	rrcf	??_UartTxBufferStatus& (0+255),f,b
 23039  0042' A100'              	btfss	??_UartTxBufferStatus& (0+255),0,b
 23040  0044' D002               	goto	l542
 23041                           
 23042                           ; BSR set to: 0
 23043                           ;uart_drv.c: 251: {
 23044                           ;uart_drv.c: 252: TxBufferStatus = TxBufferEmpty;
 23045  0046' 0E02               	movlw	2
 23046  0048'                    L28:
 23047  0048' 6F00'              	movwf	UartTxBufferStatus@TxBufferStatus& (0+255),b
 23048  004A'                    l542:
 23049                           
 23050                           ; BSR set to: 0
 23051                           ;uart_drv.c: 257: }
 23052                           ;uart_drv.c: 258: }
 23053                           ;uart_drv.c: 260: return TxBufferStatus;
 23054                           
 23055                           ; BSR set to: 0
 23056                           
 23057                           ; BSR set to: 0
 23058                           
 23059                           ; BSR set to: 0
 23060                           
 23061                           ; BSR set to: 0
 23062                           
 23063                           ;uart_drv.c: 254: else
 23064                           ;uart_drv.c: 255: {
 23065                           
 23066                           ; BSR set to: 0
 23067  004A' 5100'              	movf	UartTxBufferStatus@TxBufferStatus& (0+255),w,b
 23068  004C' 0012               	return	
 23069  004E'                    __end_of_UartTxBufferStatus:
 23070                           	opt stack 0
 23071                           tosu	equ	0xFFF
 23072                           tosh	equ	0xFFE
 23073                           tosl	equ	0xFFD
 23074                           pclath	equ	0xFFA
 23075                           tblptru	equ	0xFF8
 23076                           tblptrh	equ	0xFF7
 23077                           tblptrl	equ	0xFF6
 23078                           tablat	equ	0xFF5
 23079                           prodh	equ	0xFF4
 23080                           prodl	equ	0xFF3
 23081                           intcon	equ	0xFF2
 23082                           intcon2	equ	0xFF1
 23083                           intcon3	equ	0xFF0
 23084                           indf0	equ	0xFEF
 23085                           postinc0	equ	0xFEE
 23086                           plusw0	equ	0xFEB
 23087                           fsr0h	equ	0xFEA
 23088                           fsr0l	equ	0xFE9
 23089                           wreg	equ	0xFE8
 23090                           indf1	equ	0xFE7
 23091                           postinc1	equ	0xFE6
 23092                           postdec1	equ	0xFE5
 23093                           fsr1h	equ	0xFE2
 23094                           fsr1l	equ	0xFE1
 23095                           indf2	equ	0xFDF
 23096                           postinc2	equ	0xFDE
 23097                           postdec2	equ	0xFDD
 23098                           plusw2	equ	0xFDB
 23099                           fsr2h	equ	0xFDA
 23100                           fsr2l	equ	0xFD9
 23101                           status	equ	0xFD8
 23102                           
 23103 ;; *************** function _MdmWifi_ReceiveWifiMsg *****************
 23104 ;; Defined at:
 23105 ;;		line 343 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi.c"
 23106 ;; Parameters:    Size  Location     Type
 23107 ;;  RxBuffer        2    8[BANK0 ] PTR unsigned char 
 23108 ;;		 -> SendDataSm@Data(103), StartConnectionSm@Data(100), 
 23109 ;;  DataLenght      2   10[BANK0 ] PTR unsigned char 
 23110 ;;		 -> SendDataSm@DataIndex(1), StartConnectionSm@DataIndex(1), 
 23111 ;; Auto vars:     Size  Location     Type
 23112 ;;  Ret             1   12[BANK0 ] enum E8855
 23113 ;; Return value:  Size  Location     Type
 23114 ;;                  1    wreg      enum E8855
 23115 ;; Registers used:
 23116 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23117 ;; Tracked objects:
 23118 ;;		On entry : 0/0
 23119 ;;		On exit  : 0/0
 23120 ;;		Unchanged: 0/0
 23121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23122 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23123 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23125 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23126 ;;Total ram usage:        5 bytes
 23127 ;; Hardware stack levels used:    1
 23128 ;; Hardware stack levels required when called:   12
 23129 ;; This function calls:
 23130 ;;		_ReceiveEvt
 23131 ;;		_StringCopy
 23132 ;; This function is called by:
 23133 ;;		_StartConnectionSm
 23134 ;;		_SendDataSm
 23135 ;; This function uses a non-reentrant model
 23136 ;;
 23137                           
 23138                           	psect	text107
 23139  0000'                    __ptext107:
 23140                           	opt stack 0
 23141  0000'                    _MdmWifi_ReceiveWifiMsg:
 23142                           	opt stack 14
 23143                           
 23144                           ;mdm_wifi.c: 345: WifiRxMsgStsType Ret;
 23145                           ;mdm_wifi.c: 348: if (ReceiveEvt(&WifiRxPacket.PacketRxNotificationEvt))
 23146                           
 23147                           ; BSR set to: 0
 23148                           ;incstack = 0
 23149  0000' 0E00'              	movlw	low (_WifiRxPacket+202)
 23150  0002' 0100               	movlb	0	; () banked
 23151  0004' 6F00'              	movwf	ReceiveEvt@Event& (0+255),b
 23152  0006' 0E00'              	movlw	high (_WifiRxPacket+202)
 23153  0008' 6F00'              	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23154  000A' EC00' F000'        	call	_ReceiveEvt	;wreg free
 23155  000E' 0900               	iorlw	0
 23156  0010' B4D8               	btfsc	status,2,c
 23157  0012' D017               	goto	l903
 23158                           
 23159                           ;mdm_wifi.c: 349: {
 23160                           ;mdm_wifi.c: 351: StringCopy(WifiRxPacket.RxBuffer, RxBuffer, WifiRxPacket.RxByteNum);
 23161  0014' 0E00'              	movlw	low _WifiRxPacket
 23162  0016' 0100               	movlb	0	; () banked
 23163  0018' 6F00'              	movwf	StringCopy@SourceStr& (0+255),b
 23164  001A' 0E00'              	movlw	high _WifiRxPacket
 23165  001C' 6F00'              	movwf	(StringCopy@SourceStr+1)& (0+255),b
 23166  001E' C008' F002'        	movff	MdmWifi_ReceiveWifiMsg@RxBuffer,StringCopy@DestStr
 23167  0022' C009' F003'        	movff	MdmWifi_ReceiveWifiMsg@RxBuffer+1,StringCopy@DestStr+1
 23168  0026' C0C8' F004'        	movff	_WifiRxPacket+200,StringCopy@Len
 23169  002A' C0C9' F005'        	movff	_WifiRxPacket+201,StringCopy@Len+1
 23170  002E' EC00' F000'        	call	_StringCopy	;wreg free
 23171                           
 23172                           ;mdm_wifi.c: 353: *DataLenght = WifiRxPacket.RxByteNum;
 23173  0032' C00A' FFD9         	movff	MdmWifi_ReceiveWifiMsg@DataLenght,fsr2l
 23174  0036' C00B' FFDA         	movff	MdmWifi_ReceiveWifiMsg@DataLenght+1,fsr2h
 23175  003A' C0C8' FFDF         	movff	_WifiRxPacket+200,indf2
 23176                           
 23177                           ;mdm_wifi.c: 355: Ret = WifiMsg_Received;
 23178  003E' 0E01               	movlw	1
 23179  0040' D001               	goto	L29
 23180  0042'                    l903:
 23181                           
 23182                           ;mdm_wifi.c: 357: else
 23183                           ;mdm_wifi.c: 358: {
 23184                           ;mdm_wifi.c: 360: Ret = WifiMsg_NotReceived;
 23185                           
 23186                           ; BSR set to: 0
 23187  0042' 0E00               	movlw	0
 23188  0044'                    L29:
 23189  0044' 0100               	movlb	0	; () banked
 23190  0046' 6F00'              	movwf	MdmWifi_ReceiveWifiMsg@Ret& (0+255),b
 23191                           
 23192                           ; BSR set to: 0
 23193                           ;mdm_wifi.c: 361: }
 23194                           ;mdm_wifi.c: 363: return Ret;
 23195  0048' 5100'              	movf	MdmWifi_ReceiveWifiMsg@Ret& (0+255),w,b
 23196  004A' 0012               	return	
 23197  004C'                    __end_of_MdmWifi_ReceiveWifiMsg:
 23198                           	opt stack 0
 23199                           tosu	equ	0xFFF
 23200                           tosh	equ	0xFFE
 23201                           tosl	equ	0xFFD
 23202                           pclath	equ	0xFFA
 23203                           tblptru	equ	0xFF8
 23204                           tblptrh	equ	0xFF7
 23205                           tblptrl	equ	0xFF6
 23206                           tablat	equ	0xFF5
 23207                           prodh	equ	0xFF4
 23208                           prodl	equ	0xFF3
 23209                           intcon	equ	0xFF2
 23210                           intcon2	equ	0xFF1
 23211                           intcon3	equ	0xFF0
 23212                           indf0	equ	0xFEF
 23213                           postinc0	equ	0xFEE
 23214                           plusw0	equ	0xFEB
 23215                           fsr0h	equ	0xFEA
 23216                           fsr0l	equ	0xFE9
 23217                           wreg	equ	0xFE8
 23218                           indf1	equ	0xFE7
 23219                           postinc1	equ	0xFE6
 23220                           postdec1	equ	0xFE5
 23221                           fsr1h	equ	0xFE2
 23222                           fsr1l	equ	0xFE1
 23223                           indf2	equ	0xFDF
 23224                           postinc2	equ	0xFDE
 23225                           postdec2	equ	0xFDD
 23226                           plusw2	equ	0xFDB
 23227                           fsr2h	equ	0xFDA
 23228                           fsr2l	equ	0xFD9
 23229                           status	equ	0xFD8
 23230                           
 23231 ;; *************** function _StringCopy *****************
 23232 ;; Defined at:
 23233 ;;		line 104 in file "../Source/c/03_Sml/02_Ssl/sf.c"
 23234 ;; Parameters:    Size  Location     Type
 23235 ;;  SourceStr       2    0[BANK0 ] PTR unsigned char 
 23236 ;;		 -> WifiRxPacket(203), MdmWifi_UartRxBuffer(200), 
 23237 ;;  DestStr         2    2[BANK0 ] PTR unsigned char 
 23238 ;;		 -> WifiTerminal@UartBuffer(200), SendDataSm@Data(103), StartConnectionSm@Data(100), WifiRxPacket(203), 
 23239 ;;  Len             2    4[BANK0 ] unsigned short 
 23240 ;; Auto vars:     Size  Location     Type
 23241 ;;  Index           2    6[BANK0 ] unsigned short 
 23242 ;; Return value:  Size  Location     Type
 23243 ;;                  1    wreg      void 
 23244 ;; Registers used:
 23245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 23246 ;; Tracked objects:
 23247 ;;		On entry : 0/0
 23248 ;;		On exit  : 0/0
 23249 ;;		Unchanged: 0/0
 23250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23251 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23252 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23254 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23255 ;;Total ram usage:        8 bytes
 23256 ;; Hardware stack levels used:    1
 23257 ;; Hardware stack levels required when called:   11
 23258 ;; This function calls:
 23259 ;;		Nothing
 23260 ;; This function is called by:
 23261 ;;		_MdmWifiGetUartData
 23262 ;;		_MdmWifi_ReceiveWifiMsg
 23263 ;;		_MdmWifi_ReceiveWifiMsgTerminal
 23264 ;;		_MdmWifiCmd_ReceiveWifiMsg
 23265 ;; This function uses a non-reentrant model
 23266 ;;
 23267                           
 23268                           	psect	text108
 23269  0000'                    __ptext108:
 23270                           	opt stack 0
 23271  0000'                    _StringCopy:
 23272                           	opt stack 15
 23273                           
 23274                           ;sf.c: 106: UINT16 Index = 0;
 23275                           
 23276                           ; BSR set to: 0
 23277                           ;incstack = 0
 23278  0000' 0E00               	movlw	0
 23279  0002' 0100               	movlb	0	; () banked
 23280  0004' 6F00'              	movwf	(StringCopy@Index+1)& (0+255),b
 23281  0006' 0E00               	movlw	0
 23282  0008' 6F00'              	movwf	StringCopy@Index& (0+255),b
 23283                           
 23284                           ;sf.c: 109: for (Index = 0; Index < Len; Index++)
 23285  000A' 0E00               	movlw	0
 23286  000C' 6F00'              	movwf	(StringCopy@Index+1)& (0+255),b
 23287  000E' 0E00               	movlw	0
 23288  0010' 6F00'              	movwf	StringCopy@Index& (0+255),b
 23289  0012' D010               	goto	l1984
 23290  0014'                    
 23291                           ; BSR set to: 0
 23292                           ;sf.c: 110: {
 23293                           ;sf.c: 111: DestStr[Index] = SourceStr[Index];
 23294                           
 23295                           ; BSR set to: 0
 23296  0014' 5100'              	movf	StringCopy@Index& (0+255),w,b
 23297  0016' 2500'              	addwf	StringCopy@SourceStr& (0+255),w,b
 23298  0018' 6ED9               	movwf	fsr2l,c
 23299  001A' 5100'              	movf	(StringCopy@Index+1)& (0+255),w,b
 23300  001C' 2100'              	addwfc	(StringCopy@SourceStr+1)& (0+255),w,b
 23301  001E' 6EDA               	movwf	fsr2h,c
 23302  0020' 5100'              	movf	StringCopy@Index& (0+255),w,b
 23303  0022' 2500'              	addwf	StringCopy@DestStr& (0+255),w,b
 23304  0024' 6EE1               	movwf	fsr1l,c
 23305  0026' 5100'              	movf	(StringCopy@Index+1)& (0+255),w,b
 23306  0028' 2100'              	addwfc	(StringCopy@DestStr+1)& (0+255),w,b
 23307  002A' 6EE2               	movwf	fsr1h,c
 23308  002C' CFDF FFE7          	movff	indf2,indf1
 23309                           
 23310                           ; BSR set to: 0
 23311  0030' 4B00'              	infsnz	StringCopy@Index& (0+255),f,b
 23312  0032' 2B00'              	incf	(StringCopy@Index+1)& (0+255),f,b
 23313  0034'                    l1984:
 23314                           
 23315                           ; BSR set to: 0
 23316                           
 23317                           ; BSR set to: 0
 23318  0034' 5100'              	movf	StringCopy@Len& (0+255),w,b
 23319  0036' 5D00'              	subwf	StringCopy@Index& (0+255),w,b
 23320  0038' 5100'              	movf	(StringCopy@Len+1)& (0+255),w,b
 23321  003A' 5900'              	subwfb	(StringCopy@Index+1)& (0+255),w,b
 23322  003C' B0D8               	btfsc	status,0,c
 23323  003E' 0012               	return	
 23324  0040' D7E9               	goto	l1985
 23325  0042'                    __end_of_StringCopy:
 23326                           	opt stack 0
 23327                           tosu	equ	0xFFF
 23328                           tosh	equ	0xFFE
 23329                           tosl	equ	0xFFD
 23330                           pclath	equ	0xFFA
 23331                           tblptru	equ	0xFF8
 23332                           tblptrh	equ	0xFF7
 23333                           tblptrl	equ	0xFF6
 23334                           tablat	equ	0xFF5
 23335                           prodh	equ	0xFF4
 23336                           prodl	equ	0xFF3
 23337                           intcon	equ	0xFF2
 23338                           intcon2	equ	0xFF1
 23339                           intcon3	equ	0xFF0
 23340                           indf0	equ	0xFEF
 23341                           postinc0	equ	0xFEE
 23342                           plusw0	equ	0xFEB
 23343                           fsr0h	equ	0xFEA
 23344                           fsr0l	equ	0xFE9
 23345                           wreg	equ	0xFE8
 23346                           indf1	equ	0xFE7
 23347                           postinc1	equ	0xFE6
 23348                           postdec1	equ	0xFE5
 23349                           fsr1h	equ	0xFE2
 23350                           fsr1l	equ	0xFE1
 23351                           indf2	equ	0xFDF
 23352                           postinc2	equ	0xFDE
 23353                           postdec2	equ	0xFDD
 23354                           plusw2	equ	0xFDB
 23355                           fsr2h	equ	0xFDA
 23356                           fsr2l	equ	0xFD9
 23357                           status	equ	0xFD8
 23358                           
 23359 ;; *************** function _ReceiveDataSm *****************
 23360 ;; Defined at:
 23361 ;;		line 291 in file "../Source/c/03_Sml/01_Pml/01_Mdm/mdm_wifi_cmd.c"
 23362 ;; Parameters:    Size  Location     Type
 23363 ;;		None
 23364 ;; Auto vars:     Size  Location     Type
 23365 ;;		None
 23366 ;; Return value:  Size  Location     Type
 23367 ;;                  1    wreg      void 
 23368 ;; Registers used:
 23369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23370 ;; Tracked objects:
 23371 ;;		On entry : 0/0
 23372 ;;		On exit  : 0/0
 23373 ;;		Unchanged: 0/0
 23374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23379 ;;Total ram usage:        0 bytes
 23380 ;; Hardware stack levels used:    1
 23381 ;; Hardware stack levels required when called:   12
 23382 ;; This function calls:
 23383 ;;		_GenerateEvt
 23384 ;;		_ReceiveEvt
 23385 ;; This function is called by:
 23386 ;;		_MdmWifiCmd_MainTask
 23387 ;; This function uses a non-reentrant model
 23388 ;;
 23389                           
 23390                           	psect	text109
 23391  0000'                    __ptext109:
 23392                           	opt stack 0
 23393  0000'                    _ReceiveDataSm:
 23394                           	opt stack 15
 23395                           
 23396                           ;mdm_wifi_cmd.c: 293: static WifiReceiveDataStateType WifiReceiveDataState = WiFiRcv_Wai
      +                          tEvt;
 23397                           ;mdm_wifi_cmd.c: 296: switch (WifiReceiveDataState)
 23398                           
 23399                           ; BSR set to: 0
 23400                           ;incstack = 0
 23401  0000' D019               	goto	l1024
 23402  0002'                    
 23403                           ;mdm_wifi_cmd.c: 300: if (ReceiveEvt(&WifiReceiveNetData))
 23404  0002' 0E00'              	movlw	low _WifiReceiveNetData
 23405  0004' 0100               	movlb	0	; () banked
 23406  0006' 6F00'              	movwf	ReceiveEvt@Event& (0+255),b
 23407  0008' 0E00'              	movlw	high _WifiReceiveNetData
 23408  000A' 6F00'              	movwf	(ReceiveEvt@Event+1)& (0+255),b
 23409  000C' EC00' F000'        	call	_ReceiveEvt	;wreg free
 23410  0010' 0900               	iorlw	0
 23411  0012' B4D8               	btfsc	status,2,c
 23412  0014' 0012               	return	
 23413                           
 23414                           ;mdm_wifi_cmd.c: 301: {
 23415                           ;mdm_wifi_cmd.c: 302: WifiReceiveDataState = WiFiRcv_GetData;
 23416  0016' 0E01               	movlw	1
 23417  0018' 0101               	movlb	1	; () banked
 23418  001A' 6F00'              	movwf	ReceiveDataSm@WifiReceiveDataState& (0+255),b
 23419                           
 23420                           ; BSR set to: 1
 23421                           ;mdm_wifi_cmd.c: 303: }
 23422                           ;mdm_wifi_cmd.c: 304: break;
 23423  001C' 0012               	return	
 23424  001E'                    
 23425                           ; BSR set to: 1
 23426                           ;mdm_wifi_cmd.c: 308: GenerateEvt(&WifiReceiveData);
 23427                           
 23428                           ; BSR set to: 1
 23429  001E' 0E00'              	movlw	low _WifiReceiveData
 23430  0020' 0100               	movlb	0	; () banked
 23431  0022' 6F00'              	movwf	GenerateEvt@Event& (0+255),b
 23432  0024' 0E00'              	movlw	high _WifiReceiveData
 23433  0026' 6F00'              	movwf	(GenerateEvt@Event+1)& (0+255),b
 23434  0028' EC00' F000'        	call	_GenerateEvt	;wreg free
 23435                           
 23436                           ;mdm_wifi_cmd.c: 310: WifiReceiveDataState = WiFiRcv_WaitEvt;
 23437  002C' 0E00               	movlw	0
 23438  002E' 0101               	movlb	1	; () banked
 23439  0030' 6F00'              	movwf	ReceiveDataSm@WifiReceiveDataState& (0+255),b
 23440                           
 23441                           ; BSR set to: 1
 23442                           ;mdm_wifi_cmd.c: 315: }
 23443                           
 23444                           ; BSR set to: 1
 23445                           ;mdm_wifi_cmd.c: 314: break;
 23446                           
 23447                           ;mdm_wifi_cmd.c: 313: default:
 23448                           
 23449                           ;mdm_wifi_cmd.c: 311: break;
 23450  0032' 0012               	return	
 23451  0034'                    l1024:
 23452                           
 23453                           ; BSR set to: 1
 23454  0034' 0101               	movlb	1	; () banked
 23455  0036' 5100'              	movf	ReceiveDataSm@WifiReceiveDataState& (0+255),w,b
 23456                           
 23457                           ; Switch size 1, requested type "space"
 23458                           ; Number of cases is 2, Range of values is 0 to 1
 23459                           ; switch strategies available:
 23460                           ; Name         Instructions Cycles
 23461                           ; simple_byte            7     4 (average)
 23462                           ;	Chosen strategy is simple_byte
 23463  0038' 0A00               	xorlw	0	; case 0
 23464  003A' B4D8               	btfsc	status,2,c
 23465  003C' D7E2               	goto	l1025
 23466  003E' 0A01               	xorlw	1	; case 1
 23467  0040' A4D8               	btfss	status,2,c
 23468  0042' 0012               	return	
 23469  0044' D7EC               	goto	l1028
 23470  0046'                    __end_of_ReceiveDataSm:
 23471                           	opt stack 0
 23472                           tosu	equ	0xFFF
 23473                           tosh	equ	0xFFE
 23474                           tosl	equ	0xFFD
 23475                           pclath	equ	0xFFA
 23476                           tblptru	equ	0xFF8
 23477                           tblptrh	equ	0xFF7
 23478                           tblptrl	equ	0xFF6
 23479                           tablat	equ	0xFF5
 23480                           prodh	equ	0xFF4
 23481                           prodl	equ	0xFF3
 23482                           intcon	equ	0xFF2
 23483                           intcon2	equ	0xFF1
 23484                           intcon3	equ	0xFF0
 23485                           indf0	equ	0xFEF
 23486                           postinc0	equ	0xFEE
 23487                           plusw0	equ	0xFEB
 23488                           fsr0h	equ	0xFEA
 23489                           fsr0l	equ	0xFE9
 23490                           wreg	equ	0xFE8
 23491                           indf1	equ	0xFE7
 23492                           postinc1	equ	0xFE6
 23493                           postdec1	equ	0xFE5
 23494                           fsr1h	equ	0xFE2
 23495                           fsr1l	equ	0xFE1
 23496                           indf2	equ	0xFDF
 23497                           postinc2	equ	0xFDE
 23498                           postdec2	equ	0xFDD
 23499                           plusw2	equ	0xFDB
 23500                           fsr2h	equ	0xFDA
 23501                           fsr2l	equ	0xFD9
 23502                           status	equ	0xFD8
 23503                           
 23504 ;; *************** function _LedStateMachine *****************
 23505 ;; Defined at:
 23506 ;;		line 231 in file "../Source/c/03_Sml/02_Ssl/led.c"
 23507 ;; Parameters:    Size  Location     Type
 23508 ;;  Led             1    wreg     unsigned char 
 23509 ;;  LedSts          2   12[BANK0 ] PTR enum E8878
 23510 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 23511 ;;  LedBlink        2   14[BANK0 ] PTR struct _LedBlinkType
 23512 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 23513 ;;  LedPulse        2   16[BANK0 ] PTR struct _LedPulseType
 23514 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 23515 ;; Auto vars:     Size  Location     Type
 23516 ;;  Led             1   18[BANK0 ] unsigned char 
 23517 ;;  LedOutSts       1   19[BANK0 ] unsigned char 
 23518 ;; Return value:  Size  Location     Type
 23519 ;;                  1    wreg      unsigned char 
 23520 ;; Registers used:
 23521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23522 ;; Tracked objects:
 23523 ;;		On entry : 0/0
 23524 ;;		On exit  : 0/0
 23525 ;;		Unchanged: 0/0
 23526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23527 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23528 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23530 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23531 ;;Total ram usage:        8 bytes
 23532 ;; Hardware stack levels used:    1
 23533 ;; Hardware stack levels required when called:   13
 23534 ;; This function calls:
 23535 ;;		_LedBlinkStateMachine
 23536 ;;		_LedPulseStateMachine
 23537 ;; This function is called by:
 23538 ;;		_Led_MainTask
 23539 ;; This function uses a non-reentrant model
 23540 ;;
 23541                           
 23542                           	psect	text110
 23543  0000'                    __ptext110:
 23544                           	opt stack 0
 23545  0000'                    _LedStateMachine:
 23546                           	opt stack 14
 23547                           
 23548                           ;incstack = 0
 23549                           ;LedStateMachine@Led stored from wreg
 23550  0000' 0100               	movlb	0	; () banked
 23551  0002' 6F00'              	movwf	LedStateMachine@Led& (0+255),b
 23552                           
 23553                           ;led.c: 234: UINT8 LedOutSts = 0u;
 23554  0004' 0E00               	movlw	0
 23555  0006' 0100               	movlb	0	; () banked
 23556  0008' 6F00'              	movwf	LedStateMachine@LedOutSts& (0+255),b
 23557                           
 23558                           ;led.c: 237: switch (*LedSts)
 23559  000A' D017               	goto	l1829
 23560  000C'                    
 23561                           ; BSR set to: 0
 23562                           ;led.c: 241: LedOutSts = ((UINT8)(0));
 23563                           
 23564                           ; BSR set to: 0
 23565  000C' 0E00               	movlw	0
 23566  000E' D009               	goto	L31
 23567  0010'                    
 23568                           ; BSR set to: 0
 23569                           ;led.c: 246: LedOutSts = ((UINT8)(1));
 23570                           
 23571                           ; BSR set to: 0
 23572  0010' 0E01               	movlw	1
 23573  0012' D007               	goto	L31
 23574  0014'                    
 23575                           ; BSR set to: 0
 23576                           ;led.c: 251: LedOutSts = LedBlinkStateMachine(LedBlink);
 23577                           
 23578                           ; BSR set to: 0
 23579  0014' C00E' F007'        	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 23580  0018' C00F' F008'        	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 23581  001C' EC00' F000'        	call	_LedBlinkStateMachine	;wreg free
 23582  0020' D00A               	goto	L32
 23583  0022'                    L31:
 23584  0022' 6F00'              	movwf	LedStateMachine@LedOutSts& (0+255),b
 23585                           
 23586                           ;led.c: 252: break;
 23587  0024' D01B               	goto	l1831
 23588  0026'                    
 23589                           ; BSR set to: 0
 23590                           ;led.c: 256: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 23591                           
 23592                           ; BSR set to: 0
 23593  0026' C010' F007'        	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 23594  002A' C011' F008'        	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 23595  002E' C012' F009'        	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 23596  0032' EC00' F000'        	call	_LedPulseStateMachine	;wreg free
 23597  0036'                    L32:
 23598  0036' 0100               	movlb	0	; () banked
 23599  0038' D7F4               	goto	L31
 23600  003A'                    l1829:
 23601                           
 23602                           ; BSR set to: 0
 23603                           
 23604                           ; BSR set to: 0
 23605  003A' C00C' FFD9         	movff	LedStateMachine@LedSts,fsr2l
 23606  003E' C00D' FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 23607  0042' 50DF               	movf	indf2,w,c
 23608                           
 23609                           ; Switch size 1, requested type "space"
 23610                           ; Number of cases is 4, Range of values is 0 to 3
 23611                           ; switch strategies available:
 23612                           ; Name         Instructions Cycles
 23613                           ; simple_byte           13     7 (average)
 23614                           ;	Chosen strategy is simple_byte
 23615  0044' 0A00               	xorlw	0	; case 0
 23616  0046' B4D8               	btfsc	status,2,c
 23617  0048' D7E1               	goto	l1830
 23618  004A' 0A01               	xorlw	1	; case 1
 23619  004C' B4D8               	btfsc	status,2,c
 23620  004E' D7E0               	goto	l1832
 23621  0050' 0A03               	xorlw	3	; case 2
 23622  0052' B4D8               	btfsc	status,2,c
 23623  0054' D7DF               	goto	l1833
 23624  0056' 0A01               	xorlw	1	; case 3
 23625  0058' B4D8               	btfsc	status,2,c
 23626  005A' D7E5               	goto	l1834
 23627  005C'                    l1831:
 23628                           
 23629                           ; BSR set to: 0
 23630                           ;led.c: 263: return LedOutSts;
 23631                           
 23632                           ; BSR set to: 0
 23633  005C' 5100'              	movf	LedStateMachine@LedOutSts& (0+255),w,b
 23634  005E' 0012               	return	
 23635  0060'                    __end_of_LedStateMachine:
 23636                           	opt stack 0
 23637                           tosu	equ	0xFFF
 23638                           tosh	equ	0xFFE
 23639                           tosl	equ	0xFFD
 23640                           pclath	equ	0xFFA
 23641                           tblptru	equ	0xFF8
 23642                           tblptrh	equ	0xFF7
 23643                           tblptrl	equ	0xFF6
 23644                           tablat	equ	0xFF5
 23645                           prodh	equ	0xFF4
 23646                           prodl	equ	0xFF3
 23647                           intcon	equ	0xFF2
 23648                           intcon2	equ	0xFF1
 23649                           intcon3	equ	0xFF0
 23650                           indf0	equ	0xFEF
 23651                           postinc0	equ	0xFEE
 23652                           plusw0	equ	0xFEB
 23653                           fsr0h	equ	0xFEA
 23654                           fsr0l	equ	0xFE9
 23655                           wreg	equ	0xFE8
 23656                           indf1	equ	0xFE7
 23657                           postinc1	equ	0xFE6
 23658                           postdec1	equ	0xFE5
 23659                           fsr1h	equ	0xFE2
 23660                           fsr1l	equ	0xFE1
 23661                           indf2	equ	0xFDF
 23662                           postinc2	equ	0xFDE
 23663                           postdec2	equ	0xFDD
 23664                           plusw2	equ	0xFDB
 23665                           fsr2h	equ	0xFDA
 23666                           fsr2l	equ	0xFD9
 23667                           status	equ	0xFD8
 23668                           
 23669 ;; *************** function _LedPulseStateMachine *****************
 23670 ;; Defined at:
 23671 ;;		line 178 in file "../Source/c/03_Sml/02_Ssl/led.c"
 23672 ;; Parameters:    Size  Location     Type
 23673 ;;  LedPulse        2    7[BANK0 ] PTR struct _LedPulseType
 23674 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 23675 ;;  Led             1    9[BANK0 ] unsigned char 
 23676 ;; Auto vars:     Size  Location     Type
 23677 ;;		None
 23678 ;; Return value:  Size  Location     Type
 23679 ;;                  1    wreg      unsigned char 
 23680 ;; Registers used:
 23681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23682 ;; Tracked objects:
 23683 ;;		On entry : 0/0
 23684 ;;		On exit  : 0/0
 23685 ;;		Unchanged: 0/0
 23686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23687 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23689 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23690 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23691 ;;Total ram usage:        5 bytes
 23692 ;; Hardware stack levels used:    1
 23693 ;; Hardware stack levels required when called:   12
 23694 ;; This function calls:
 23695 ;;		_Led_SetLedStatus
 23696 ;;		___lwdiv
 23697 ;; This function is called by:
 23698 ;;		_LedStateMachine
 23699 ;; This function uses a non-reentrant model
 23700 ;;
 23701                           
 23702                           	psect	text111
 23703  0000'                    __ptext111:
 23704                           	opt stack 0
 23705  0000'                    _LedPulseStateMachine:
 23706                           	opt stack 14
 23707                           
 23708                           ;led.c: 181: switch (LedPulse->LedPulseState)
 23709                           
 23710                           ; BSR set to: 0
 23711                           ;incstack = 0
 23712  0000' D05C               	goto	l1819
 23713  0002'                    
 23714                           ;led.c: 185: LedPulse->LedOutState = ((UINT8)(1));
 23715  0002' 0100               	movlb	0	; () banked
 23716  0004' EE20 F001          	lfsr	2,1
 23717  0008' 5100'              	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 23718  000A' 26D9               	addwf	fsr2l,f,c
 23719  000C' 5100'              	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 23720  000E' 22DA               	addwfc	fsr2h,f,c
 23721  0010' 0E01               	movlw	1
 23722  0012' 6EDF               	movwf	indf2,c
 23723                           
 23724                           ; BSR set to: 0
 23725                           ;led.c: 187: LedPulse->LedPulseState = LedPulseDelay;
 23726  0014' C007' FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 23727  0018' C008' FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 23728  001C' 0E01               	movlw	1
 23729  001E' D036               	goto	L33
 23730  0020'                    
 23731                           ;led.c: 192: LedPulse->LedPulseCounter++;
 23732                           
 23733                           ; BSR set to: 0
 23734  0020' 0100               	movlb	0	; () banked
 23735  0022' EE20 F002          	lfsr	2,2
 23736  0026' 5100'              	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 23737  0028' 26D9               	addwf	fsr2l,f,c
 23738  002A' 5100'              	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 23739  002C' 22DA               	addwfc	fsr2h,f,c
 23740  002E' 2ADE               	incf	postinc2,f,c
 23741  0030' 0E00               	movlw	0
 23742  0032' 22DD               	addwfc	postdec2,f,c
 23743                           
 23744                           ; BSR set to: 0
 23745                           ;led.c: 194: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 23746  0034' EE20 F004          	lfsr	2,4
 23747  0038' 5100'              	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 23748  003A' 26D9               	addwf	fsr2l,f,c
 23749  003C' 5100'              	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 23750  003E' 22DA               	addwfc	fsr2h,f,c
 23751  0040' CFDE F000'         	movff	postinc2,___lwdiv@dividend
 23752  0044' CFDD F001'         	movff	postdec2,___lwdiv@dividend+1
 23753  0048' 0E00               	movlw	0
 23754  004A' 6F00'              	movwf	(___lwdiv@divisor+1)& (0+255),b
 23755  004C' 0E32               	movlw	50
 23756  004E' 6F00'              	movwf	___lwdiv@divisor& (0+255),b
 23757  0050' EC00' F000'        	call	___lwdiv	;wreg free
 23758  0054' 0100               	movlb	0	; () banked
 23759  0056' EE20 F002          	lfsr	2,2
 23760  005A' 5100'              	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 23761  005C' 26D9               	addwf	fsr2l,f,c
 23762  005E' 5100'              	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 23763  0060' 22DA               	addwfc	fsr2h,f,c
 23764  0062' 5100'              	movf	?___lwdiv& (0+255),w,b
 23765  0064' 5CDE               	subwf	postinc2,w,c
 23766  0066' 5100'              	movf	(?___lwdiv+1)& (0+255),w,b
 23767  0068' 58DE               	subwfb	postinc2,w,c
 23768  006A' A0D8               	btfss	status,0,c
 23769  006C' D034               	goto	l1821
 23770                           
 23771                           ; BSR set to: 0
 23772                           ;led.c: 195: {
 23773                           ;led.c: 197: LedPulse->LedPulseCounter = 0;
 23774  006E' EE20 F002          	lfsr	2,2
 23775  0072' 5100'              	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 23776  0074' 26D9               	addwf	fsr2l,f,c
 23777  0076' 5100'              	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 23778  0078' 22DA               	addwfc	fsr2h,f,c
 23779  007A' 0E00               	movlw	0
 23780  007C' 6EDE               	movwf	postinc2,c
 23781  007E' 0E00               	movlw	0
 23782  0080' 6EDD               	movwf	postdec2,c
 23783                           
 23784                           ; BSR set to: 0
 23785                           ;led.c: 199: LedPulse->LedPulseState = LedPulseOff;
 23786  0082' C007' FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 23787  0086' C008' FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 23788  008A' 0E02               	movlw	2
 23789  008C'                    L33:
 23790  008C' 6EDF               	movwf	indf2,c
 23791                           
 23792                           ; BSR set to: 0
 23793                           ;led.c: 200: }
 23794                           ;led.c: 201: break;
 23795  008E' D023               	goto	l1821
 23796  0090'                    
 23797                           ;led.c: 205: LedPulse->LedOutState = ((UINT8)(0));
 23798                           
 23799                           ; BSR set to: 0
 23800  0090' 0100               	movlb	0	; () banked
 23801  0092' EE20 F001          	lfsr	2,1
 23802  0096' 5100'              	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 23803  0098' 26D9               	addwf	fsr2l,f,c
 23804  009A' 5100'              	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 23805  009C' 22DA               	addwfc	fsr2h,f,c
 23806  009E' 0E00               	movlw	0
 23807  00A0' 6EDF               	movwf	indf2,c
 23808                           
 23809                           ; BSR set to: 0
 23810                           ;led.c: 207: LedPulse->LedPulseState = LedPulseOn;
 23811  00A2' C007' FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 23812  00A6' C008' FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 23813  00AA' 0E00               	movlw	0
 23814  00AC' 6EDF               	movwf	indf2,c
 23815                           
 23816                           ; BSR set to: 0
 23817                           ;led.c: 209: Led_SetLedStatus(Led,LED_STS_OFF);
 23818  00AE' 0E00               	movlw	0
 23819  00B0' 6F00'              	movwf	Led_SetLedStatus@LedSts& (0+255),b
 23820  00B2' 5100'              	movf	LedPulseStateMachine@Led& (0+255),w,b
 23821  00B4' EC00' F000'        	call	_Led_SetLedStatus
 23822                           
 23823                           ;led.c: 214: }
 23824                           
 23825                           ;led.c: 213: break;
 23826                           
 23827                           ;led.c: 212: default:
 23828                           
 23829                           ;led.c: 210: break;
 23830  00B8' D00E               	goto	l1821
 23831  00BA'                    l1819:
 23832  00BA' C007' FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 23833  00BE' C008' FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 23834  00C2' 50DF               	movf	indf2,w,c
 23835                           
 23836                           ; Switch size 1, requested type "space"
 23837                           ; Number of cases is 3, Range of values is 0 to 2
 23838                           ; switch strategies available:
 23839                           ; Name         Instructions Cycles
 23840                           ; simple_byte           10     6 (average)
 23841                           ;	Chosen strategy is simple_byte
 23842  00C4' 0A00               	xorlw	0	; case 0
 23843  00C6' B4D8               	btfsc	status,2,c
 23844  00C8' D79C               	goto	l1820
 23845  00CA' 0A01               	xorlw	1	; case 1
 23846  00CC' B4D8               	btfsc	status,2,c
 23847  00CE' D7A8               	goto	l1822
 23848  00D0' 0A03               	xorlw	3	; case 2
 23849  00D2' B4D8               	btfsc	status,2,c
 23850  00D4' D7DD               	goto	l1824
 23851  00D6'                    l1821:
 23852                           
 23853                           ;led.c: 217: return (LedPulse->LedOutState);
 23854  00D6' 0100               	movlb	0	; () banked
 23855  00D8' EE20 F001          	lfsr	2,1
 23856  00DC' 5100'              	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 23857  00DE' 26D9               	addwf	fsr2l,f,c
 23858  00E0' 5100'              	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 23859  00E2' 22DA               	addwfc	fsr2h,f,c
 23860  00E4' 50DF               	movf	indf2,w,c
 23861  00E6' 0012               	return	
 23862  00E8'                    __end_of_LedPulseStateMachine:
 23863                           	opt stack 0
 23864                           tosu	equ	0xFFF
 23865                           tosh	equ	0xFFE
 23866                           tosl	equ	0xFFD
 23867                           pclath	equ	0xFFA
 23868                           tblptru	equ	0xFF8
 23869                           tblptrh	equ	0xFF7
 23870                           tblptrl	equ	0xFF6
 23871                           tablat	equ	0xFF5
 23872                           prodh	equ	0xFF4
 23873                           prodl	equ	0xFF3
 23874                           intcon	equ	0xFF2
 23875                           intcon2	equ	0xFF1
 23876                           intcon3	equ	0xFF0
 23877                           indf0	equ	0xFEF
 23878                           postinc0	equ	0xFEE
 23879                           plusw0	equ	0xFEB
 23880                           fsr0h	equ	0xFEA
 23881                           fsr0l	equ	0xFE9
 23882                           wreg	equ	0xFE8
 23883                           indf1	equ	0xFE7
 23884                           postinc1	equ	0xFE6
 23885                           postdec1	equ	0xFE5
 23886                           fsr1h	equ	0xFE2
 23887                           fsr1l	equ	0xFE1
 23888                           indf2	equ	0xFDF
 23889                           postinc2	equ	0xFDE
 23890                           postdec2	equ	0xFDD
 23891                           plusw2	equ	0xFDB
 23892                           fsr2h	equ	0xFDA
 23893                           fsr2l	equ	0xFD9
 23894                           status	equ	0xFD8
 23895                           
 23896 ;; *************** function _Led_SetLedStatus *****************
 23897 ;; Defined at:
 23898 ;;		line 318 in file "../Source/c/03_Sml/02_Ssl/led.c"
 23899 ;; Parameters:    Size  Location     Type
 23900 ;;  Led             1    wreg     unsigned char 
 23901 ;;  LedSts          1    0[BANK0 ] unsigned char 
 23902 ;; Auto vars:     Size  Location     Type
 23903 ;;  Led             1    1[BANK0 ] unsigned char 
 23904 ;; Return value:  Size  Location     Type
 23905 ;;                  1    wreg      void 
 23906 ;; Registers used:
 23907 ;;		wreg, status,2, status,0
 23908 ;; Tracked objects:
 23909 ;;		On entry : 0/0
 23910 ;;		On exit  : 0/0
 23911 ;;		Unchanged: 0/0
 23912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23913 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23914 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23917 ;;Total ram usage:        2 bytes
 23918 ;; Hardware stack levels used:    1
 23919 ;; Hardware stack levels required when called:   11
 23920 ;; This function calls:
 23921 ;;		Nothing
 23922 ;; This function is called by:
 23923 ;;		_LedPulseStateMachine
 23924 ;; This function uses a non-reentrant model
 23925 ;;
 23926                           
 23927                           	psect	text112
 23928  0000'                    __ptext112:
 23929                           	opt stack 0
 23930  0000'                    _Led_SetLedStatus:
 23931                           	opt stack 14
 23932                           
 23933                           ; BSR set to: 0
 23934                           ;incstack = 0
 23935                           ;Led_SetLedStatus@Led stored from wreg
 23936  0000' 0100               	movlb	0	; () banked
 23937  0002' 6F00'              	movwf	Led_SetLedStatus@Led& (0+255),b
 23938                           
 23939                           ;led.c: 321: switch (Led)
 23940  0004' D009               	goto	l1847
 23941  0006'                    l1848:
 23942                           
 23943                           ; BSR set to: 0
 23944                           ;led.c: 324: Led1Sts = LedSts;
 23945  0006' C000' F02D'        	movff	Led_SetLedStatus@LedSts,_Led1Sts
 23946                           
 23947                           ;led.c: 325: break;
 23948  000A' 0012               	return	
 23949  000C'                    l1850:
 23950                           
 23951                           ; BSR set to: 0
 23952                           ;led.c: 328: Led2Sts = LedSts;
 23953  000C' C000' F02C'        	movff	Led_SetLedStatus@LedSts,_Led2Sts
 23954                           
 23955                           ;led.c: 329: break;
 23956  0010' 0012               	return	
 23957  0012'                    l1851:
 23958                           
 23959                           ; BSR set to: 0
 23960                           ;led.c: 332: Led3Sts = LedSts;
 23961  0012' C000' F02B'        	movff	Led_SetLedStatus@LedSts,_Led3Sts
 23962                           
 23963                           ; BSR set to: 0
 23964                           ;led.c: 337: }
 23965                           
 23966                           ; BSR set to: 0
 23967                           ;led.c: 336: break;
 23968                           
 23969                           ;led.c: 335: default:
 23970                           
 23971                           ;led.c: 333: break;
 23972  0016' 0012               	return	
 23973  0018'                    l1847:
 23974                           
 23975                           ; BSR set to: 0
 23976  0018' 0100               	movlb	0	; () banked
 23977  001A' 5100'              	movf	Led_SetLedStatus@Led& (0+255),w,b
 23978                           
 23979                           ; Switch size 1, requested type "space"
 23980                           ; Number of cases is 3, Range of values is 1 to 3
 23981                           ; switch strategies available:
 23982                           ; Name         Instructions Cycles
 23983                           ; simple_byte           10     6 (average)
 23984                           ;	Chosen strategy is simple_byte
 23985  001C' 0A01               	xorlw	1	; case 1
 23986  001E' B4D8               	btfsc	status,2,c
 23987  0020' D7F2               	goto	l1848
 23988  0022' 0A03               	xorlw	3	; case 2
 23989  0024' B4D8               	btfsc	status,2,c
 23990  0026' D7F2               	goto	l1850
 23991  0028' 0A01               	xorlw	1	; case 3
 23992  002A' A4D8               	btfss	status,2,c
 23993  002C' 0012               	return	
 23994  002E' D7F1               	goto	l1851
 23995  0030'                    __end_of_Led_SetLedStatus:
 23996                           	opt stack 0
 23997                           tosu	equ	0xFFF
 23998                           tosh	equ	0xFFE
 23999                           tosl	equ	0xFFD
 24000                           pclath	equ	0xFFA
 24001                           tblptru	equ	0xFF8
 24002                           tblptrh	equ	0xFF7
 24003                           tblptrl	equ	0xFF6
 24004                           tablat	equ	0xFF5
 24005                           prodh	equ	0xFF4
 24006                           prodl	equ	0xFF3
 24007                           intcon	equ	0xFF2
 24008                           intcon2	equ	0xFF1
 24009                           intcon3	equ	0xFF0
 24010                           indf0	equ	0xFEF
 24011                           postinc0	equ	0xFEE
 24012                           plusw0	equ	0xFEB
 24013                           fsr0h	equ	0xFEA
 24014                           fsr0l	equ	0xFE9
 24015                           wreg	equ	0xFE8
 24016                           indf1	equ	0xFE7
 24017                           postinc1	equ	0xFE6
 24018                           postdec1	equ	0xFE5
 24019                           fsr1h	equ	0xFE2
 24020                           fsr1l	equ	0xFE1
 24021                           indf2	equ	0xFDF
 24022                           postinc2	equ	0xFDE
 24023                           postdec2	equ	0xFDD
 24024                           plusw2	equ	0xFDB
 24025                           fsr2h	equ	0xFDA
 24026                           fsr2l	equ	0xFD9
 24027                           status	equ	0xFD8
 24028                           
 24029 ;; *************** function _LedBlinkStateMachine *****************
 24030 ;; Defined at:
 24031 ;;		line 121 in file "../Source/c/03_Sml/02_Ssl/led.c"
 24032 ;; Parameters:    Size  Location     Type
 24033 ;;  LedBlink        2    7[BANK0 ] PTR struct _LedBlinkType
 24034 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 24035 ;; Auto vars:     Size  Location     Type
 24036 ;;		None
 24037 ;; Return value:  Size  Location     Type
 24038 ;;                  1    wreg      unsigned char 
 24039 ;; Registers used:
 24040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24041 ;; Tracked objects:
 24042 ;;		On entry : 0/0
 24043 ;;		On exit  : 0/0
 24044 ;;		Unchanged: 0/0
 24045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24049 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24050 ;;Total ram usage:        4 bytes
 24051 ;; Hardware stack levels used:    1
 24052 ;; Hardware stack levels required when called:   12
 24053 ;; This function calls:
 24054 ;;		___lwdiv
 24055 ;; This function is called by:
 24056 ;;		_LedStateMachine
 24057 ;; This function uses a non-reentrant model
 24058 ;;
 24059                           
 24060                           	psect	text113
 24061  0000'                    __ptext113:
 24062                           	opt stack 0
 24063  0000'                    _LedBlinkStateMachine:
 24064                           	opt stack 14
 24065                           
 24066                           ;led.c: 124: switch (LedBlink->LedBlinkState)
 24067                           
 24068                           ; BSR set to: 0
 24069                           ;incstack = 0
 24070  0000' D08F               	goto	l1806
 24071  0002'                    
 24072                           ;led.c: 128: LedBlink->LedOutState = LedBlink->LedInitStatus;
 24073  0002' 0100               	movlb	0	; () banked
 24074  0004' EE20 F008          	lfsr	2,8
 24075  0008' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24076  000A' 26D9               	addwf	fsr2l,f,c
 24077  000C' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24078  000E' 22DA               	addwfc	fsr2h,f,c
 24079  0010' EE10 F001          	lfsr	1,1
 24080  0014' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24081  0016' 26E1               	addwf	fsr1l,f,c
 24082  0018' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24083  001A' 22E2               	addwfc	fsr1h,f,c
 24084  001C' CFDF FFE7          	movff	indf2,indf1
 24085                           
 24086                           ; BSR set to: 0
 24087                           ;led.c: 130: LedBlink->LedBlinkState = LedBlinkRunning;
 24088  0020' C007' FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 24089  0024' C008' FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 24090  0028' D040               	goto	L34
 24091  002A'                    
 24092                           ;led.c: 135: LedBlink->LedBlinkCounter++;
 24093                           
 24094                           ; BSR set to: 0
 24095  002A' 0100               	movlb	0	; () banked
 24096  002C' EE20 F002          	lfsr	2,2
 24097  0030' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24098  0032' 26D9               	addwf	fsr2l,f,c
 24099  0034' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24100  0036' 22DA               	addwfc	fsr2h,f,c
 24101  0038' 2ADE               	incf	postinc2,f,c
 24102  003A' 0E00               	movlw	0
 24103  003C' 22DD               	addwfc	postdec2,f,c
 24104                           
 24105                           ;led.c: 137: if (LedBlink->LedOutState == OffState)
 24106  003E' EE20 F001          	lfsr	2,1
 24107  0042' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24108  0044' 26D9               	addwf	fsr2l,f,c
 24109  0046' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24110  0048' 22DA               	addwfc	fsr2h,f,c
 24111  004A' 50DF               	movf	indf2,w,c
 24112  004C' A4D8               	btfss	status,2,c
 24113  004E' D02F               	goto	l1810
 24114                           
 24115                           ; BSR set to: 0
 24116                           ;led.c: 138: {
 24117                           ;led.c: 140: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 24118  0050' EE20 F006          	lfsr	2,6
 24119  0054' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24120  0056' 26D9               	addwf	fsr2l,f,c
 24121  0058' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24122  005A' 22DA               	addwfc	fsr2h,f,c
 24123  005C' CFDE F000'         	movff	postinc2,___lwdiv@dividend
 24124  0060' CFDD F001'         	movff	postdec2,___lwdiv@dividend+1
 24125  0064' 0E00               	movlw	0
 24126  0066' 6F00'              	movwf	(___lwdiv@divisor+1)& (0+255),b
 24127  0068' 0E32               	movlw	50
 24128  006A' 6F00'              	movwf	___lwdiv@divisor& (0+255),b
 24129  006C' EC00' F000'        	call	___lwdiv	;wreg free
 24130  0070' 0100               	movlb	0	; () banked
 24131  0072' EE20 F002          	lfsr	2,2
 24132  0076' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24133  0078' 26D9               	addwf	fsr2l,f,c
 24134  007A' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24135  007C' 22DA               	addwfc	fsr2h,f,c
 24136  007E' 5100'              	movf	?___lwdiv& (0+255),w,b
 24137  0080' 5CDE               	subwf	postinc2,w,c
 24138  0082' 5100'              	movf	(?___lwdiv+1)& (0+255),w,b
 24139  0084' 58DE               	subwfb	postinc2,w,c
 24140  0086' A0D8               	btfss	status,0,c
 24141  0088' D056               	goto	l1808
 24142                           
 24143                           ; BSR set to: 0
 24144                           ;led.c: 141: {
 24145                           ;led.c: 143: LedBlink->LedBlinkCounter = 0;
 24146  008A' EE20 F002          	lfsr	2,2
 24147  008E' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24148  0090' 26D9               	addwf	fsr2l,f,c
 24149  0092' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24150  0094' 22DA               	addwfc	fsr2h,f,c
 24151  0096' 0E00               	movlw	0
 24152  0098' 6EDE               	movwf	postinc2,c
 24153  009A' 0E00               	movlw	0
 24154  009C' 6EDD               	movwf	postdec2,c
 24155                           
 24156                           ;led.c: 145: LedBlink->LedOutState = OnState;
 24157  009E' EE20 F001          	lfsr	2,1
 24158  00A2' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24159  00A4' 26D9               	addwf	fsr2l,f,c
 24160  00A6' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24161  00A8' 22DA               	addwfc	fsr2h,f,c
 24162  00AA'                    L34:
 24163  00AA' 0E01               	movlw	1
 24164  00AC' D037               	goto	L35
 24165  00AE'                    l1810:
 24166                           
 24167                           ; BSR set to: 0
 24168                           ;led.c: 148: else if (LedBlink->LedOutState == OnState)
 24169                           
 24170                           ; BSR set to: 0
 24171  00AE' EE20 F001          	lfsr	2,1
 24172  00B2' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24173  00B4' 26D9               	addwf	fsr2l,f,c
 24174  00B6' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24175  00B8' 22DA               	addwfc	fsr2h,f,c
 24176  00BA' 04DE               	decf	postinc2,w,c
 24177  00BC' A4D8               	btfss	status,2,c
 24178  00BE' D03B               	goto	l1808
 24179                           
 24180                           ; BSR set to: 0
 24181                           ;led.c: 149: {
 24182                           ;led.c: 151: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 24183  00C0' EE20 F004          	lfsr	2,4
 24184  00C4' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24185  00C6' 26D9               	addwf	fsr2l,f,c
 24186  00C8' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24187  00CA' 22DA               	addwfc	fsr2h,f,c
 24188  00CC' CFDE F000'         	movff	postinc2,___lwdiv@dividend
 24189  00D0' CFDD F001'         	movff	postdec2,___lwdiv@dividend+1
 24190  00D4' 0E00               	movlw	0
 24191  00D6' 6F00'              	movwf	(___lwdiv@divisor+1)& (0+255),b
 24192  00D8' 0E32               	movlw	50
 24193  00DA' 6F00'              	movwf	___lwdiv@divisor& (0+255),b
 24194  00DC' EC00' F000'        	call	___lwdiv	;wreg free
 24195  00E0' 0100               	movlb	0	; () banked
 24196  00E2' EE20 F002          	lfsr	2,2
 24197  00E6' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24198  00E8' 26D9               	addwf	fsr2l,f,c
 24199  00EA' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24200  00EC' 22DA               	addwfc	fsr2h,f,c
 24201  00EE' 5100'              	movf	?___lwdiv& (0+255),w,b
 24202  00F0' 5CDE               	subwf	postinc2,w,c
 24203  00F2' 5100'              	movf	(?___lwdiv+1)& (0+255),w,b
 24204  00F4' 58DE               	subwfb	postinc2,w,c
 24205  00F6' A0D8               	btfss	status,0,c
 24206  00F8' D01E               	goto	l1808
 24207                           
 24208                           ; BSR set to: 0
 24209                           ;led.c: 152: {
 24210                           ;led.c: 154: LedBlink->LedBlinkCounter = 0;
 24211  00FA' EE20 F002          	lfsr	2,2
 24212  00FE' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24213  0100' 26D9               	addwf	fsr2l,f,c
 24214  0102' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24215  0104' 22DA               	addwfc	fsr2h,f,c
 24216  0106' 0E00               	movlw	0
 24217  0108' 6EDE               	movwf	postinc2,c
 24218  010A' 0E00               	movlw	0
 24219  010C' 6EDD               	movwf	postdec2,c
 24220                           
 24221                           ;led.c: 156: LedBlink->LedOutState = OffState;
 24222  010E' EE20 F001          	lfsr	2,1
 24223  0112' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24224  0114' 26D9               	addwf	fsr2l,f,c
 24225  0116' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24226  0118' 22DA               	addwfc	fsr2h,f,c
 24227  011A' 0E00               	movlw	0
 24228  011C'                    L35:
 24229  011C' 6EDF               	movwf	indf2,c
 24230                           
 24231                           ; BSR set to: 0
 24232                           ;led.c: 163: }
 24233                           
 24234                           ; BSR set to: 0
 24235                           ;led.c: 162: break;
 24236                           
 24237                           ;led.c: 161: default:
 24238                           
 24239                           ; BSR set to: 0
 24240                           ;led.c: 157: }
 24241                           ;led.c: 158: }
 24242                           ;led.c: 159: break;
 24243                           
 24244                           ; BSR set to: 0
 24245                           
 24246                           ; BSR set to: 0
 24247  011E' D00B               	goto	l1808
 24248  0120'                    l1806:
 24249                           
 24250                           ; BSR set to: 0
 24251  0120' C007' FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 24252  0124' C008' FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 24253  0128' 50DF               	movf	indf2,w,c
 24254                           
 24255                           ; Switch size 1, requested type "space"
 24256                           ; Number of cases is 2, Range of values is 0 to 1
 24257                           ; switch strategies available:
 24258                           ; Name         Instructions Cycles
 24259                           ; simple_byte            7     4 (average)
 24260                           ;	Chosen strategy is simple_byte
 24261  012A' 0A00               	xorlw	0	; case 0
 24262  012C' B4D8               	btfsc	status,2,c
 24263  012E' D769               	goto	l1807
 24264  0130' 0A01               	xorlw	1	; case 1
 24265  0132' B4D8               	btfsc	status,2,c
 24266  0134' D77A               	goto	l1809
 24267  0136'                    l1808:
 24268                           
 24269                           ;led.c: 166: return (LedBlink->LedOutState);
 24270  0136' 0100               	movlb	0	; () banked
 24271  0138' EE20 F001          	lfsr	2,1
 24272  013C' 5100'              	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 24273  013E' 26D9               	addwf	fsr2l,f,c
 24274  0140' 5100'              	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 24275  0142' 22DA               	addwfc	fsr2h,f,c
 24276  0144' 50DF               	movf	indf2,w,c
 24277  0146' 0012               	return	
 24278  0148'                    __end_of_LedBlinkStateMachine:
 24279                           	opt stack 0
 24280                           tosu	equ	0xFFF
 24281                           tosh	equ	0xFFE
 24282                           tosl	equ	0xFFD
 24283                           pclath	equ	0xFFA
 24284                           tblptru	equ	0xFF8
 24285                           tblptrh	equ	0xFF7
 24286                           tblptrl	equ	0xFF6
 24287                           tablat	equ	0xFF5
 24288                           prodh	equ	0xFF4
 24289                           prodl	equ	0xFF3
 24290                           intcon	equ	0xFF2
 24291                           intcon2	equ	0xFF1
 24292                           intcon3	equ	0xFF0
 24293                           indf0	equ	0xFEF
 24294                           postinc0	equ	0xFEE
 24295                           plusw0	equ	0xFEB
 24296                           fsr0h	equ	0xFEA
 24297                           fsr0l	equ	0xFE9
 24298                           wreg	equ	0xFE8
 24299                           indf1	equ	0xFE7
 24300                           postinc1	equ	0xFE6
 24301                           postdec1	equ	0xFE5
 24302                           fsr1h	equ	0xFE2
 24303                           fsr1l	equ	0xFE1
 24304                           indf2	equ	0xFDF
 24305                           postinc2	equ	0xFDE
 24306                           postdec2	equ	0xFDD
 24307                           plusw2	equ	0xFDB
 24308                           fsr2h	equ	0xFDA
 24309                           fsr2l	equ	0xFD9
 24310                           status	equ	0xFD8
 24311                           
 24312 ;; *************** function ___lwdiv *****************
 24313 ;; Defined at:
 24314 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 24315 ;; Parameters:    Size  Location     Type
 24316 ;;  dividend        2    0[BANK0 ] unsigned int 
 24317 ;;  divisor         2    2[BANK0 ] unsigned int 
 24318 ;; Auto vars:     Size  Location     Type
 24319 ;;  quotient        2    4[BANK0 ] unsigned int 
 24320 ;;  counter         1    6[BANK0 ] unsigned char 
 24321 ;; Return value:  Size  Location     Type
 24322 ;;                  2    0[BANK0 ] unsigned int 
 24323 ;; Registers used:
 24324 ;;		wreg, status,2, status,0
 24325 ;; Tracked objects:
 24326 ;;		On entry : 0/0
 24327 ;;		On exit  : 0/0
 24328 ;;		Unchanged: 0/0
 24329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24330 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24331 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24333 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24334 ;;Total ram usage:        7 bytes
 24335 ;; Hardware stack levels used:    1
 24336 ;; Hardware stack levels required when called:   11
 24337 ;; This function calls:
 24338 ;;		Nothing
 24339 ;; This function is called by:
 24340 ;;		_LedBlinkStateMachine
 24341 ;;		_LedPulseStateMachine
 24342 ;;		_utoa
 24343 ;; This function uses a non-reentrant model
 24344 ;;
 24345                           
 24346                           	psect	text114
 24347  0000'                    __ptext114:
 24348                           	opt stack 0
 24349  0000'                    ___lwdiv:
 24350                           	opt stack 14
 24351                           
 24352                           ; BSR set to: 0
 24353                           ;incstack = 0
 24354  0000' 0E00               	movlw	0
 24355  0002' 0100               	movlb	0	; () banked
 24356  0004' 6F00'              	movwf	(___lwdiv@quotient+1)& (0+255),b
 24357  0006' 0E00               	movlw	0
 24358  0008' 6F00'              	movwf	___lwdiv@quotient& (0+255),b
 24359                           
 24360                           ; BSR set to: 0
 24361  000A' 5100'              	movf	___lwdiv@divisor& (0+255),w,b
 24362  000C' 1100'              	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 24363  000E' B4D8               	btfsc	status,2,c
 24364  0010' D01C               	goto	l2624
 24365                           
 24366                           ; BSR set to: 0
 24367  0012' 0E01               	movlw	1
 24368  0014' 6F00'              	movwf	___lwdiv@counter& (0+255),b
 24369  0016' D004               	goto	l2619
 24370  0018'                    
 24371                           ; BSR set to: 0
 24372                           
 24373                           ; BSR set to: 0
 24374  0018' 90D8               	bcf	status,0,c
 24375  001A' 3700'              	rlcf	___lwdiv@divisor& (0+255),f,b
 24376  001C' 3700'              	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 24377  001E' 2B00'              	incf	___lwdiv@counter& (0+255),f,b
 24378  0020'                    l2619:
 24379                           
 24380                           ; BSR set to: 0
 24381                           
 24382                           ; BSR set to: 0
 24383  0020' AF00'              	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 24384  0022' D7FA               	goto	l2620
 24385  0024'                    u4890:
 24386                           
 24387                           ; BSR set to: 0
 24388                           
 24389                           ; BSR set to: 0
 24390                           
 24391                           ; BSR set to: 0
 24392  0024' 90D8               	bcf	status,0,c
 24393  0026' 3700'              	rlcf	___lwdiv@quotient& (0+255),f,b
 24394  0028' 3700'              	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 24395                           
 24396                           ; BSR set to: 0
 24397  002A' 5100'              	movf	___lwdiv@divisor& (0+255),w,b
 24398  002C' 5D00'              	subwf	___lwdiv@dividend& (0+255),w,b
 24399  002E' 5100'              	movf	(___lwdiv@divisor+1)& (0+255),w,b
 24400  0030' 5900'              	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 24401  0032' A0D8               	btfss	status,0,c
 24402  0034' D005               	goto	l2623
 24403                           
 24404                           ; BSR set to: 0
 24405  0036' 5100'              	movf	___lwdiv@divisor& (0+255),w,b
 24406  0038' 5F00'              	subwf	___lwdiv@dividend& (0+255),f,b
 24407  003A' 5100'              	movf	(___lwdiv@divisor+1)& (0+255),w,b
 24408  003C' 5B00'              	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 24409                           
 24410                           ; BSR set to: 0
 24411  003E' 8100'              	bsf	___lwdiv@quotient& (0+255),0,b
 24412  0040'                    l2623:
 24413                           
 24414                           ; BSR set to: 0
 24415                           
 24416                           ; BSR set to: 0
 24417  0040' 90D8               	bcf	status,0,c
 24418  0042' 3300'              	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 24419  0044' 3300'              	rrcf	___lwdiv@divisor& (0+255),f,b
 24420                           
 24421                           ; BSR set to: 0
 24422  0046' 2F00'              	decfsz	___lwdiv@counter& (0+255),f,b
 24423  0048' D7ED               	goto	u4890
 24424  004A'                    l2624:
 24425                           
 24426                           ; BSR set to: 0
 24427                           
 24428                           ; BSR set to: 0
 24429  004A' C004' F000'        	movff	___lwdiv@quotient,?___lwdiv
 24430  004E' C005' F001'        	movff	___lwdiv@quotient+1,?___lwdiv+1
 24431                           
 24432                           ; BSR set to: 0
 24433  0052' 0012               	return		;funcret
 24434  0054'                    __end_of___lwdiv:
 24435                           	opt stack 0
 24436                           tosu	equ	0xFFF
 24437                           tosh	equ	0xFFE
 24438                           tosl	equ	0xFFD
 24439                           pclath	equ	0xFFA
 24440                           tblptru	equ	0xFF8
 24441                           tblptrh	equ	0xFF7
 24442                           tblptrl	equ	0xFF6
 24443                           tablat	equ	0xFF5
 24444                           prodh	equ	0xFF4
 24445                           prodl	equ	0xFF3
 24446                           intcon	equ	0xFF2
 24447                           intcon2	equ	0xFF1
 24448                           intcon3	equ	0xFF0
 24449                           indf0	equ	0xFEF
 24450                           postinc0	equ	0xFEE
 24451                           plusw0	equ	0xFEB
 24452                           fsr0h	equ	0xFEA
 24453                           fsr0l	equ	0xFE9
 24454                           wreg	equ	0xFE8
 24455                           indf1	equ	0xFE7
 24456                           postinc1	equ	0xFE6
 24457                           postdec1	equ	0xFE5
 24458                           fsr1h	equ	0xFE2
 24459                           fsr1l	equ	0xFE1
 24460                           indf2	equ	0xFDF
 24461                           postinc2	equ	0xFDE
 24462                           postdec2	equ	0xFDD
 24463                           plusw2	equ	0xFDB
 24464                           fsr2h	equ	0xFDA
 24465                           fsr2l	equ	0xFD9
 24466                           status	equ	0xFD8
 24467                           
 24468 ;; *************** function _OsAlrm_SetOsAlarm *****************
 24469 ;; Defined at:
 24470 ;;		line 76 in file "../Source/c/02_Osl/os_alarms.c"
 24471 ;; Parameters:    Size  Location     Type
 24472 ;;  OsAlarmId       2    6[BANK0 ] unsigned short 
 24473 ;;  OsAlarmTimeo    4    8[BANK0 ] unsigned long 
 24474 ;;  AlarmCallbac    2   12[BANK0 ] PTR FTN()void 
 24475 ;;		 -> I2cDummyTx(1), 
 24476 ;; Auto vars:     Size  Location     Type
 24477 ;;		None
 24478 ;; Return value:  Size  Location     Type
 24479 ;;                  1    wreg      void 
 24480 ;; Registers used:
 24481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24482 ;; Tracked objects:
 24483 ;;		On entry : 0/0
 24484 ;;		On exit  : 0/0
 24485 ;;		Unchanged: 0/0
 24486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24487 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24490 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24491 ;;Total ram usage:        8 bytes
 24492 ;; Hardware stack levels used:    1
 24493 ;; Hardware stack levels required when called:   12
 24494 ;; This function calls:
 24495 ;;		___wmul
 24496 ;; This function is called by:
 24497 ;;		_I2cSlv_MainTask
 24498 ;; This function uses a non-reentrant model
 24499 ;;
 24500                           
 24501                           	psect	text115
 24502  0000'                    __ptext115:
 24503                           	opt stack 0
 24504  0000'                    _OsAlrm_SetOsAlarm:
 24505                           	opt stack 15
 24506                           
 24507                           ;os_alarms.c: 79: OsAlarms[OsAlarmId].Enabled = 1u;
 24508                           
 24509                           ; BSR set to: 0
 24510                           ;incstack = 0
 24511  0000' C006' F000'        	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 24512  0004' C007' F001'        	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 24513  0008' 0E00               	movlw	0
 24514  000A' 0100               	movlb	0	; () banked
 24515  000C' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 24516  000E' 0E0B               	movlw	11
 24517  0010' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 24518  0012' EC00' F000'        	call	___wmul	;wreg free
 24519  0016' 0E00'              	movlw	low _OsAlarms
 24520  0018' 0100               	movlb	0	; () banked
 24521  001A' 2500'              	addwf	?___wmul& (0+255),w,b
 24522  001C' 6ED9               	movwf	fsr2l,c
 24523  001E' 0E00'              	movlw	high _OsAlarms
 24524  0020' 2100'              	addwfc	(?___wmul+1)& (0+255),w,b
 24525  0022' 6EDA               	movwf	fsr2h,c
 24526  0024' 0E01               	movlw	1
 24527  0026' 6EDF               	movwf	indf2,c
 24528                           
 24529                           ;os_alarms.c: 81: OsAlarms[OsAlarmId].Counter = 0;
 24530  0028' C006' F000'        	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 24531  002C' C007' F001'        	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 24532  0030' 0E00               	movlw	0
 24533  0032' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 24534  0034' 0E0B               	movlw	11
 24535  0036' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 24536  0038' EC00' F000'        	call	___wmul	;wreg free
 24537  003C' 0E01               	movlw	1
 24538  003E' 0100               	movlb	0	; () banked
 24539  0040' 2700'              	addwf	?___wmul& (0+255),f,b
 24540  0042' 0E00               	movlw	0
 24541  0044' 2300'              	addwfc	(?___wmul+1)& (0+255),f,b
 24542  0046' 0E00'              	movlw	low _OsAlarms
 24543  0048' 2500'              	addwf	?___wmul& (0+255),w,b
 24544  004A' 6ED9               	movwf	fsr2l,c
 24545  004C' 0E00'              	movlw	high _OsAlarms
 24546  004E' 2100'              	addwfc	(?___wmul+1)& (0+255),w,b
 24547  0050' 6EDA               	movwf	fsr2h,c
 24548  0052' 6ADE               	clrf	postinc2,c
 24549  0054' 6ADE               	clrf	postinc2,c
 24550  0056' 6ADE               	clrf	postinc2,c
 24551  0058' 6ADD               	clrf	postdec2,c
 24552                           
 24553                           ;os_alarms.c: 83: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 24554  005A' C006' F000'        	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 24555  005E' C007' F001'        	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 24556  0062' 0E00               	movlw	0
 24557  0064' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 24558  0066' 0E0B               	movlw	11
 24559  0068' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 24560  006A' EC00' F000'        	call	___wmul	;wreg free
 24561  006E' 0E05               	movlw	5
 24562  0070' 0100               	movlb	0	; () banked
 24563  0072' 2700'              	addwf	?___wmul& (0+255),f,b
 24564  0074' 0E00               	movlw	0
 24565  0076' 2300'              	addwfc	(?___wmul+1)& (0+255),f,b
 24566  0078' 0E00'              	movlw	low _OsAlarms
 24567  007A' 2500'              	addwf	?___wmul& (0+255),w,b
 24568  007C' 6ED9               	movwf	fsr2l,c
 24569  007E' 0E00'              	movlw	high _OsAlarms
 24570  0080' 2100'              	addwfc	(?___wmul+1)& (0+255),w,b
 24571  0082' 6EDA               	movwf	fsr2h,c
 24572  0084' C008' FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 24573  0088' C009' FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 24574  008C' C00A' FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 24575  0090' C00B' FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 24576                           
 24577                           ;os_alarms.c: 85: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 24578  0094' C006' F000'        	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 24579  0098' C007' F001'        	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 24580  009C' 0E00               	movlw	0
 24581  009E' 6F00'              	movwf	(___wmul@multiplicand+1)& (0+255),b
 24582  00A0' 0E0B               	movlw	11
 24583  00A2' 6F00'              	movwf	___wmul@multiplicand& (0+255),b
 24584  00A4' EC00' F000'        	call	___wmul	;wreg free
 24585  00A8' 0E09               	movlw	9
 24586  00AA' 0100               	movlb	0	; () banked
 24587  00AC' 2700'              	addwf	?___wmul& (0+255),f,b
 24588  00AE' 0E00               	movlw	0
 24589  00B0' 2300'              	addwfc	(?___wmul+1)& (0+255),f,b
 24590  00B2' 0E00'              	movlw	low _OsAlarms
 24591  00B4' 2500'              	addwf	?___wmul& (0+255),w,b
 24592  00B6' 6ED9               	movwf	fsr2l,c
 24593  00B8' 0E00'              	movlw	high _OsAlarms
 24594  00BA' 2100'              	addwfc	(?___wmul+1)& (0+255),w,b
 24595  00BC' 6EDA               	movwf	fsr2h,c
 24596  00BE' C00C' FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 24597  00C2' C00D' FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 24598                           
 24599                           ; BSR set to: 0
 24600  00C6' 0012               	return		;funcret
 24601  00C8'                    __end_of_OsAlrm_SetOsAlarm:
 24602                           	opt stack 0
 24603                           tosu	equ	0xFFF
 24604                           tosh	equ	0xFFE
 24605                           tosl	equ	0xFFD
 24606                           pclath	equ	0xFFA
 24607                           tblptru	equ	0xFF8
 24608                           tblptrh	equ	0xFF7
 24609                           tblptrl	equ	0xFF6
 24610                           tablat	equ	0xFF5
 24611                           prodh	equ	0xFF4
 24612                           prodl	equ	0xFF3
 24613                           intcon	equ	0xFF2
 24614                           intcon2	equ	0xFF1
 24615                           intcon3	equ	0xFF0
 24616                           indf0	equ	0xFEF
 24617                           postinc0	equ	0xFEE
 24618                           plusw0	equ	0xFEB
 24619                           fsr0h	equ	0xFEA
 24620                           fsr0l	equ	0xFE9
 24621                           wreg	equ	0xFE8
 24622                           indf1	equ	0xFE7
 24623                           postinc1	equ	0xFE6
 24624                           postdec1	equ	0xFE5
 24625                           fsr1h	equ	0xFE2
 24626                           fsr1l	equ	0xFE1
 24627                           indf2	equ	0xFDF
 24628                           postinc2	equ	0xFDE
 24629                           postdec2	equ	0xFDD
 24630                           plusw2	equ	0xFDB
 24631                           fsr2h	equ	0xFDA
 24632                           fsr2l	equ	0xFD9
 24633                           status	equ	0xFD8
 24634                           
 24635 ;; *************** function ___wmul *****************
 24636 ;; Defined at:
 24637 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 24638 ;; Parameters:    Size  Location     Type
 24639 ;;  multiplier      2    0[BANK0 ] unsigned int 
 24640 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 24641 ;; Auto vars:     Size  Location     Type
 24642 ;;  product         2    4[BANK0 ] unsigned int 
 24643 ;; Return value:  Size  Location     Type
 24644 ;;                  2    0[BANK0 ] unsigned int 
 24645 ;; Registers used:
 24646 ;;		wreg, status,2, status,0, prodl, prodh
 24647 ;; Tracked objects:
 24648 ;;		On entry : 0/0
 24649 ;;		On exit  : 0/0
 24650 ;;		Unchanged: 0/0
 24651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24652 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24653 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24655 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24656 ;;Total ram usage:        6 bytes
 24657 ;; Hardware stack levels used:    1
 24658 ;; Hardware stack levels required when called:   11
 24659 ;; This function calls:
 24660 ;;		Nothing
 24661 ;; This function is called by:
 24662 ;;		_OsAlrm_SetOsAlarm
 24663 ;;		_atoi
 24664 ;; This function uses a non-reentrant model
 24665 ;;
 24666                           
 24667                           	psect	text116
 24668  0000'                    __ptext116:
 24669                           	opt stack 0
 24670  0000'                    ___wmul:
 24671                           	opt stack 13
 24672                           
 24673                           ; BSR set to: 0
 24674                           ;incstack = 0
 24675  0000' 0100               	movlb	0	; () banked
 24676  0002' 5100'              	movf	___wmul@multiplier& (0+255),w,b
 24677  0004' 0300'              	mulwf	___wmul@multiplicand& (0+255),b
 24678  0006' CFF3 F004'         	movff	prodl,___wmul@product
 24679  000A' CFF4 F005'         	movff	prodh,___wmul@product+1
 24680  000E' 5100'              	movf	___wmul@multiplier& (0+255),w,b
 24681  0010' 0300'              	mulwf	(___wmul@multiplicand+1)& (0+255),b
 24682  0012' 50F3               	movf	prodl,w,c
 24683  0014' 2700'              	addwf	(___wmul@product+1)& (0+255),f,b
 24684  0016' 5100'              	movf	(___wmul@multiplier+1)& (0+255),w,b
 24685  0018' 0300'              	mulwf	___wmul@multiplicand& (0+255),b
 24686  001A' 50F3               	movf	prodl,w,c
 24687  001C' 2700'              	addwf	(___wmul@product+1)& (0+255),f,b
 24688                           
 24689                           ; BSR set to: 0
 24690  001E' C004' F000'        	movff	___wmul@product,?___wmul
 24691  0022' C005' F001'        	movff	___wmul@product+1,?___wmul+1
 24692  0026' 0012               	return	
 24693  0028'                    __end_of___wmul:
 24694                           	opt stack 0
 24695                           tosu	equ	0xFFF
 24696                           tosh	equ	0xFFE
 24697                           tosl	equ	0xFFD
 24698                           pclath	equ	0xFFA
 24699                           tblptru	equ	0xFF8
 24700                           tblptrh	equ	0xFF7
 24701                           tblptrl	equ	0xFF6
 24702                           tablat	equ	0xFF5
 24703                           prodh	equ	0xFF4
 24704                           prodl	equ	0xFF3
 24705                           intcon	equ	0xFF2
 24706                           intcon2	equ	0xFF1
 24707                           intcon3	equ	0xFF0
 24708                           indf0	equ	0xFEF
 24709                           postinc0	equ	0xFEE
 24710                           plusw0	equ	0xFEB
 24711                           fsr0h	equ	0xFEA
 24712                           fsr0l	equ	0xFE9
 24713                           wreg	equ	0xFE8
 24714                           indf1	equ	0xFE7
 24715                           postinc1	equ	0xFE6
 24716                           postdec1	equ	0xFE5
 24717                           fsr1h	equ	0xFE2
 24718                           fsr1l	equ	0xFE1
 24719                           indf2	equ	0xFDF
 24720                           postinc2	equ	0xFDE
 24721                           postdec2	equ	0xFDD
 24722                           plusw2	equ	0xFDB
 24723                           fsr2h	equ	0xFDA
 24724                           fsr2l	equ	0xFD9
 24725                           status	equ	0xFD8
 24726                           
 24727 ;; *************** function _I2c_InitI2cModule *****************
 24728 ;; Defined at:
 24729 ;;		line 228 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 24730 ;; Parameters:    Size  Location     Type
 24731 ;;  I2cConfig       2   37[BANK0 ] PTR struct _I2cConfig
 24732 ;;		 -> I2cConfig(10), 
 24733 ;; Auto vars:     Size  Location     Type
 24734 ;;		None
 24735 ;; Return value:  Size  Location     Type
 24736 ;;                  1    wreg      void 
 24737 ;; Registers used:
 24738 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24739 ;; Tracked objects:
 24740 ;;		On entry : 0/0
 24741 ;;		On exit  : 0/0
 24742 ;;		Unchanged: 0/0
 24743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24744 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24746 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24747 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24748 ;;Total ram usage:        4 bytes
 24749 ;; Hardware stack levels used:    1
 24750 ;; Hardware stack levels required when called:   13
 24751 ;; This function calls:
 24752 ;;		_SetBaudRate
 24753 ;; This function is called by:
 24754 ;;		_I2cSlv_MainTask
 24755 ;; This function uses a non-reentrant model
 24756 ;;
 24757                           
 24758                           	psect	text117
 24759  0000'                    __ptext117:
 24760                           	opt stack 0
 24761  0000'                    _I2c_InitI2cModule:
 24762                           	opt stack 14
 24763                           
 24764                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 24765                           
 24766                           ; BSR set to: 0
 24767                           ;incstack = 0
 24768  0000' 8295               	bsf	3989,1,c	;volatile
 24769                           
 24770                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 24771  0002' 8095               	bsf	3989,0,c	;volatile
 24772                           
 24773                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 24774  0004' C025' FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 24775  0008' C026' FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 24776  000C' CFDE F019'         	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 24777  0010' CFDE F01A'         	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 24778  0014' CFDE F01B'         	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 24779  0018' CFDE F01C'         	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 24780  001C' 0100               	movlb	0	; () banked
 24781  001E' EE20 F004          	lfsr	2,4
 24782  0022' 5100'              	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24783  0024' 26D9               	addwf	fsr2l,f,c
 24784  0026' 5100'              	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24785  0028' 22DA               	addwfc	fsr2h,f,c
 24786  002A' CFDE F01D'         	movff	postinc2,SetBaudRate@McuClockHz
 24787  002E' CFDE F01E'         	movff	postinc2,SetBaudRate@McuClockHz+1
 24788  0032' CFDE F01F'         	movff	postinc2,SetBaudRate@McuClockHz+2
 24789  0036' CFDE F020'         	movff	postinc2,SetBaudRate@McuClockHz+3
 24790  003A' EC00' F000'        	call	_SetBaudRate	;wreg free
 24791                           
 24792                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 24793  003E' 0100               	movlb	0	; () banked
 24794  0040' EE20 F008          	lfsr	2,8
 24795  0044' 5100'              	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24796  0046' 26D9               	addwf	fsr2l,f,c
 24797  0048' 5100'              	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24798  004A' 22DA               	addwfc	fsr2h,f,c
 24799  004C' 50DF               	movf	indf2,w,c
 24800  004E' 1272               	iorwf	3954,f,c	;volatile
 24801                           
 24802                           ; BSR set to: 0
 24803                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 24804  0050' EE20 F009          	lfsr	2,9
 24805  0054' 5100'              	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 24806  0056' 26D9               	addwf	fsr2l,f,c
 24807  0058' 5100'              	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 24808  005A' 22DA               	addwfc	fsr2h,f,c
 24809  005C' 50DF               	movf	indf2,w,c
 24810  005E' 6F00'              	movwf	??_I2c_InitI2cModule& (0+255),b
 24811  0060' 0E05               	movlw	5
 24812  0062' 6F00'              	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 24813  0064'                    u6895:
 24814  0064' 90D8               	bcf	status,0,c
 24815  0066' 3700'              	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 24816  0068' 2F00'              	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 24817  006A' D7FC               	goto	u6895
 24818  006C' 5100'              	movf	??_I2c_InitI2cModule& (0+255),w,b
 24819  006E' 1272               	iorwf	3954,f,c	;volatile
 24820                           
 24821                           ; BSR set to: 0
 24822  0070' 0012               	return		;funcret
 24823  0072'                    __end_of_I2c_InitI2cModule:
 24824                           	opt stack 0
 24825                           tosu	equ	0xFFF
 24826                           tosh	equ	0xFFE
 24827                           tosl	equ	0xFFD
 24828                           pclath	equ	0xFFA
 24829                           tblptru	equ	0xFF8
 24830                           tblptrh	equ	0xFF7
 24831                           tblptrl	equ	0xFF6
 24832                           tablat	equ	0xFF5
 24833                           prodh	equ	0xFF4
 24834                           prodl	equ	0xFF3
 24835                           intcon	equ	0xFF2
 24836                           intcon2	equ	0xFF1
 24837                           intcon3	equ	0xFF0
 24838                           indf0	equ	0xFEF
 24839                           postinc0	equ	0xFEE
 24840                           plusw0	equ	0xFEB
 24841                           fsr0h	equ	0xFEA
 24842                           fsr0l	equ	0xFE9
 24843                           wreg	equ	0xFE8
 24844                           indf1	equ	0xFE7
 24845                           postinc1	equ	0xFE6
 24846                           postdec1	equ	0xFE5
 24847                           fsr1h	equ	0xFE2
 24848                           fsr1l	equ	0xFE1
 24849                           indf2	equ	0xFDF
 24850                           postinc2	equ	0xFDE
 24851                           postdec2	equ	0xFDD
 24852                           plusw2	equ	0xFDB
 24853                           fsr2h	equ	0xFDA
 24854                           fsr2l	equ	0xFD9
 24855                           status	equ	0xFD8
 24856                           
 24857 ;; *************** function _SetBaudRate *****************
 24858 ;; Defined at:
 24859 ;;		line 78 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 24860 ;; Parameters:    Size  Location     Type
 24861 ;;  DesiredI2cBu    4   25[BANK0 ] unsigned long 
 24862 ;;  McuClockHz      4   29[BANK0 ] unsigned long 
 24863 ;; Auto vars:     Size  Location     Type
 24864 ;;		None
 24865 ;; Return value:  Size  Location     Type
 24866 ;;                  1    wreg      void 
 24867 ;; Registers used:
 24868 ;;		wreg, status,2, status,0, cstack
 24869 ;; Tracked objects:
 24870 ;;		On entry : 0/0
 24871 ;;		On exit  : 0/0
 24872 ;;		Unchanged: 0/0
 24873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24874 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24876 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24877 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24878 ;;Total ram usage:       12 bytes
 24879 ;; Hardware stack levels used:    1
 24880 ;; Hardware stack levels required when called:   12
 24881 ;; This function calls:
 24882 ;;		___lldiv
 24883 ;; This function is called by:
 24884 ;;		_I2c_InitI2cModule
 24885 ;; This function uses a non-reentrant model
 24886 ;;
 24887                           
 24888                           	psect	text118
 24889  0000'                    __ptext118:
 24890                           	opt stack 0
 24891  0000'                    _SetBaudRate:
 24892                           	opt stack 14
 24893                           
 24894                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 24895                           
 24896                           ; BSR set to: 0
 24897                           ;incstack = 0
 24898  0000' C01D' F00C'        	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 24899  0004' C01E' F00D'        	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 24900  0008' C01F' F00E'        	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 24901  000C' C020' F00F'        	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 24902  0010' C019' F021'        	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 24903  0014' C01A' F022'        	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 24904  0018' C01B' F023'        	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 24905  001C' C01C' F024'        	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 24906  0020' 0E02               	movlw	2
 24907  0022'                    u6015:
 24908  0022' 90D8               	bcf	status,0,c
 24909  0024' 0100               	movlb	0	; () banked
 24910  0026' 3700'              	rlcf	??_SetBaudRate& (0+255),f,b
 24911  0028' 3700'              	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 24912  002A' 3700'              	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 24913  002C' 3700'              	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 24914  002E' 2EE8               	decfsz	wreg,f,c
 24915  0030' D7F8               	goto	u6015
 24916  0032' C021' F010'        	movff	??_SetBaudRate,___lldiv@divisor
 24917  0036' C022' F011'        	movff	??_SetBaudRate+1,___lldiv@divisor+1
 24918  003A' C023' F012'        	movff	??_SetBaudRate+2,___lldiv@divisor+2
 24919  003E' C024' F013'        	movff	??_SetBaudRate+3,___lldiv@divisor+3
 24920  0042' EC00' F000'        	call	___lldiv	;wreg free
 24921  0046' 0100               	movlb	0	; () banked
 24922  0048' 0500'              	decf	?___lldiv& (0+255),w,b
 24923  004A' 6E74               	movwf	3956,c	;volatile
 24924                           
 24925                           ; BSR set to: 0
 24926  004C' 0012               	return		;funcret
 24927  004E'                    __end_of_SetBaudRate:
 24928                           	opt stack 0
 24929                           tosu	equ	0xFFF
 24930                           tosh	equ	0xFFE
 24931                           tosl	equ	0xFFD
 24932                           pclath	equ	0xFFA
 24933                           tblptru	equ	0xFF8
 24934                           tblptrh	equ	0xFF7
 24935                           tblptrl	equ	0xFF6
 24936                           tablat	equ	0xFF5
 24937                           prodh	equ	0xFF4
 24938                           prodl	equ	0xFF3
 24939                           intcon	equ	0xFF2
 24940                           intcon2	equ	0xFF1
 24941                           intcon3	equ	0xFF0
 24942                           indf0	equ	0xFEF
 24943                           postinc0	equ	0xFEE
 24944                           plusw0	equ	0xFEB
 24945                           fsr0h	equ	0xFEA
 24946                           fsr0l	equ	0xFE9
 24947                           wreg	equ	0xFE8
 24948                           indf1	equ	0xFE7
 24949                           postinc1	equ	0xFE6
 24950                           postdec1	equ	0xFE5
 24951                           fsr1h	equ	0xFE2
 24952                           fsr1l	equ	0xFE1
 24953                           indf2	equ	0xFDF
 24954                           postinc2	equ	0xFDE
 24955                           postdec2	equ	0xFDD
 24956                           plusw2	equ	0xFDB
 24957                           fsr2h	equ	0xFDA
 24958                           fsr2l	equ	0xFD9
 24959                           status	equ	0xFD8
 24960                           
 24961 ;; *************** function ___lldiv *****************
 24962 ;; Defined at:
 24963 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 24964 ;; Parameters:    Size  Location     Type
 24965 ;;  dividend        4   12[BANK0 ] unsigned long 
 24966 ;;  divisor         4   16[BANK0 ] unsigned long 
 24967 ;; Auto vars:     Size  Location     Type
 24968 ;;  quotient        4   20[BANK0 ] unsigned long 
 24969 ;;  counter         1   24[BANK0 ] unsigned char 
 24970 ;; Return value:  Size  Location     Type
 24971 ;;                  4   12[BANK0 ] unsigned long 
 24972 ;; Registers used:
 24973 ;;		wreg, status,2, status,0
 24974 ;; Tracked objects:
 24975 ;;		On entry : 0/0
 24976 ;;		On exit  : 0/0
 24977 ;;		Unchanged: 0/0
 24978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24979 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24980 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24982 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24983 ;;Total ram usage:       13 bytes
 24984 ;; Hardware stack levels used:    1
 24985 ;; Hardware stack levels required when called:   11
 24986 ;; This function calls:
 24987 ;;		Nothing
 24988 ;; This function is called by:
 24989 ;;		_SetBaudRate
 24990 ;;		_Tmr_TmrBPrSet
 24991 ;;		_SetUartBaudRate
 24992 ;; This function uses a non-reentrant model
 24993 ;;
 24994                           
 24995                           	psect	text119
 24996  0000'                    __ptext119:
 24997                           	opt stack 0
 24998  0000'                    ___lldiv:
 24999                           	opt stack 15
 25000                           
 25001                           ; BSR set to: 0
 25002                           ;incstack = 0
 25003  0000' 0E00               	movlw	0
 25004  0002' 0100               	movlb	0	; () banked
 25005  0004' 6F00'              	movwf	___lldiv@quotient& (0+255),b
 25006  0006' 0E00               	movlw	0
 25007  0008' 6F00'              	movwf	(___lldiv@quotient+1)& (0+255),b
 25008  000A' 0E00               	movlw	0
 25009  000C' 6F00'              	movwf	(___lldiv@quotient+2)& (0+255),b
 25010  000E' 0E00               	movlw	0
 25011  0010' 6F00'              	movwf	(___lldiv@quotient+3)& (0+255),b
 25012                           
 25013                           ; BSR set to: 0
 25014  0012' 5100'              	movf	___lldiv@divisor& (0+255),w,b
 25015  0014' 1100'              	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 25016  0016' 1100'              	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 25017  0018' 1100'              	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 25018  001A' B4D8               	btfsc	status,2,c
 25019  001C' D02A               	goto	l2571
 25020                           
 25021                           ; BSR set to: 0
 25022  001E' 0E01               	movlw	1
 25023  0020' 6F00'              	movwf	___lldiv@counter& (0+255),b
 25024  0022' D006               	goto	l2566
 25025  0024'                    
 25026                           ; BSR set to: 0
 25027                           
 25028                           ; BSR set to: 0
 25029  0024' 90D8               	bcf	status,0,c
 25030  0026' 3700'              	rlcf	___lldiv@divisor& (0+255),f,b
 25031  0028' 3700'              	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 25032  002A' 3700'              	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 25033  002C' 3700'              	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 25034  002E' 2B00'              	incf	___lldiv@counter& (0+255),f,b
 25035  0030'                    l2566:
 25036                           
 25037                           ; BSR set to: 0
 25038                           
 25039                           ; BSR set to: 0
 25040  0030' AF00'              	btfss	(___lldiv@divisor+3)& (0+255),7,b
 25041  0032' D7F8               	goto	l2567
 25042  0034'                    u5940:
 25043                           
 25044                           ; BSR set to: 0
 25045                           
 25046                           ; BSR set to: 0
 25047                           
 25048                           ; BSR set to: 0
 25049  0034' 90D8               	bcf	status,0,c
 25050  0036' 3700'              	rlcf	___lldiv@quotient& (0+255),f,b
 25051  0038' 3700'              	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 25052  003A' 3700'              	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 25053  003C' 3700'              	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 25054                           
 25055                           ; BSR set to: 0
 25056  003E' 5100'              	movf	___lldiv@divisor& (0+255),w,b
 25057  0040' 5D00'              	subwf	___lldiv@dividend& (0+255),w,b
 25058  0042' 5100'              	movf	(___lldiv@divisor+1)& (0+255),w,b
 25059  0044' 5900'              	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 25060  0046' 5100'              	movf	(___lldiv@divisor+2)& (0+255),w,b
 25061  0048' 5900'              	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 25062  004A' 5100'              	movf	(___lldiv@divisor+3)& (0+255),w,b
 25063  004C' 5900'              	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 25064  004E' A0D8               	btfss	status,0,c
 25065  0050' D009               	goto	l2570
 25066                           
 25067                           ; BSR set to: 0
 25068  0052' 5100'              	movf	___lldiv@divisor& (0+255),w,b
 25069  0054' 5F00'              	subwf	___lldiv@dividend& (0+255),f,b
 25070  0056' 5100'              	movf	(___lldiv@divisor+1)& (0+255),w,b
 25071  0058' 5B00'              	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 25072  005A' 5100'              	movf	(___lldiv@divisor+2)& (0+255),w,b
 25073  005C' 5B00'              	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 25074  005E' 5100'              	movf	(___lldiv@divisor+3)& (0+255),w,b
 25075  0060' 5B00'              	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 25076                           
 25077                           ; BSR set to: 0
 25078  0062' 8100'              	bsf	___lldiv@quotient& (0+255),0,b
 25079  0064'                    l2570:
 25080                           
 25081                           ; BSR set to: 0
 25082                           
 25083                           ; BSR set to: 0
 25084  0064' 90D8               	bcf	status,0,c
 25085  0066' 3300'              	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 25086  0068' 3300'              	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 25087  006A' 3300'              	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 25088  006C' 3300'              	rrcf	___lldiv@divisor& (0+255),f,b
 25089                           
 25090                           ; BSR set to: 0
 25091  006E' 2F00'              	decfsz	___lldiv@counter& (0+255),f,b
 25092  0070' D7E1               	goto	u5940
 25093  0072'                    l2571:
 25094                           
 25095                           ; BSR set to: 0
 25096                           
 25097                           ; BSR set to: 0
 25098  0072' C014' F00C'        	movff	___lldiv@quotient,?___lldiv
 25099  0076' C015' F00D'        	movff	___lldiv@quotient+1,?___lldiv+1
 25100  007A' C016' F00E'        	movff	___lldiv@quotient+2,?___lldiv+2
 25101  007E' C017' F00F'        	movff	___lldiv@quotient+3,?___lldiv+3
 25102                           
 25103                           ; BSR set to: 0
 25104  0082' 0012               	return		;funcret
 25105  0084'                    __end_of___lldiv:
 25106                           	opt stack 0
 25107                           tosu	equ	0xFFF
 25108                           tosh	equ	0xFFE
 25109                           tosl	equ	0xFFD
 25110                           pclath	equ	0xFFA
 25111                           tblptru	equ	0xFF8
 25112                           tblptrh	equ	0xFF7
 25113                           tblptrl	equ	0xFF6
 25114                           tablat	equ	0xFF5
 25115                           prodh	equ	0xFF4
 25116                           prodl	equ	0xFF3
 25117                           intcon	equ	0xFF2
 25118                           intcon2	equ	0xFF1
 25119                           intcon3	equ	0xFF0
 25120                           indf0	equ	0xFEF
 25121                           postinc0	equ	0xFEE
 25122                           plusw0	equ	0xFEB
 25123                           fsr0h	equ	0xFEA
 25124                           fsr0l	equ	0xFE9
 25125                           wreg	equ	0xFE8
 25126                           indf1	equ	0xFE7
 25127                           postinc1	equ	0xFE6
 25128                           postdec1	equ	0xFE5
 25129                           fsr1h	equ	0xFE2
 25130                           fsr1l	equ	0xFE1
 25131                           indf2	equ	0xFDF
 25132                           postinc2	equ	0xFDE
 25133                           postdec2	equ	0xFDD
 25134                           plusw2	equ	0xFDB
 25135                           fsr2h	equ	0xFDA
 25136                           fsr2l	equ	0xFD9
 25137                           status	equ	0xFD8
 25138                           
 25139 ;; *************** function _I2cSetConfig *****************
 25140 ;; Defined at:
 25141 ;;		line 89 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25142 ;; Parameters:    Size  Location     Type
 25143 ;;		None
 25144 ;; Auto vars:     Size  Location     Type
 25145 ;;		None
 25146 ;; Return value:  Size  Location     Type
 25147 ;;                  1    wreg      void 
 25148 ;; Registers used:
 25149 ;;		wreg, status,2
 25150 ;; Tracked objects:
 25151 ;;		On entry : 0/0
 25152 ;;		On exit  : 0/0
 25153 ;;		Unchanged: 0/0
 25154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25159 ;;Total ram usage:        0 bytes
 25160 ;; Hardware stack levels used:    1
 25161 ;; Hardware stack levels required when called:   11
 25162 ;; This function calls:
 25163 ;;		Nothing
 25164 ;; This function is called by:
 25165 ;;		_I2cSlv_MainTask
 25166 ;; This function uses a non-reentrant model
 25167 ;;
 25168                           
 25169                           	psect	text120
 25170  0000'                    __ptext120:
 25171                           	opt stack 0
 25172  0000'                    _I2cSetConfig:
 25173                           	opt stack 16
 25174                           
 25175                           ;i2c_slv.c: 91: I2cConfig.I2cBaudRateHz = ((UINT32)(100000));
 25176                           
 25177                           ; BSR set to: 0
 25178                           ;incstack = 0
 25179  0000' 0EA0               	movlw	160
 25180  0002' 0103               	movlb	3	; () banked
 25181  0004' 6F00'              	movwf	_I2cConfig& (0+255),b
 25182  0006' 0E86               	movlw	134
 25183  0008' 6F00'              	movwf	(_I2cConfig+1)& (0+255),b
 25184  000A' 0E01               	movlw	1
 25185  000C' 6F00'              	movwf	(_I2cConfig+2)& (0+255),b
 25186  000E' 0E00               	movlw	0
 25187  0010' 6F00'              	movwf	(_I2cConfig+3)& (0+255),b
 25188                           
 25189                           ;i2c_slv.c: 92: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 25190  0012' 0E00               	movlw	0
 25191  0014' 6F00'              	movwf	(_I2cConfig+4)& (0+255),b
 25192  0016' 0E6C               	movlw	108
 25193  0018' 6F00'              	movwf	(_I2cConfig+5)& (0+255),b
 25194  001A' 0EDC               	movlw	220
 25195  001C' 6F00'              	movwf	(_I2cConfig+6)& (0+255),b
 25196  001E' 0E02               	movlw	2
 25197  0020' 6F00'              	movwf	(_I2cConfig+7)& (0+255),b
 25198                           
 25199                           ;i2c_slv.c: 93: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 25200  0022' 0E08               	movlw	8
 25201  0024' 6F00'              	movwf	(_I2cConfig+8)& (0+255),b
 25202                           
 25203                           ;i2c_slv.c: 94: I2cConfig.EnableI2cModule = ((UINT8)(1));
 25204  0026' 0E01               	movlw	1
 25205  0028' 6F00'              	movwf	(_I2cConfig+9)& (0+255),b
 25206                           
 25207                           ; BSR set to: 3
 25208  002A' 0012               	return		;funcret
 25209  002C'                    __end_of_I2cSetConfig:
 25210                           	opt stack 0
 25211                           tosu	equ	0xFFF
 25212                           tosh	equ	0xFFE
 25213                           tosl	equ	0xFFD
 25214                           pclath	equ	0xFFA
 25215                           tblptru	equ	0xFF8
 25216                           tblptrh	equ	0xFF7
 25217                           tblptrl	equ	0xFF6
 25218                           tablat	equ	0xFF5
 25219                           prodh	equ	0xFF4
 25220                           prodl	equ	0xFF3
 25221                           intcon	equ	0xFF2
 25222                           intcon2	equ	0xFF1
 25223                           intcon3	equ	0xFF0
 25224                           indf0	equ	0xFEF
 25225                           postinc0	equ	0xFEE
 25226                           plusw0	equ	0xFEB
 25227                           fsr0h	equ	0xFEA
 25228                           fsr0l	equ	0xFE9
 25229                           wreg	equ	0xFE8
 25230                           indf1	equ	0xFE7
 25231                           postinc1	equ	0xFE6
 25232                           postdec1	equ	0xFE5
 25233                           fsr1h	equ	0xFE2
 25234                           fsr1l	equ	0xFE1
 25235                           indf2	equ	0xFDF
 25236                           postinc2	equ	0xFDE
 25237                           postdec2	equ	0xFDD
 25238                           plusw2	equ	0xFDB
 25239                           fsr2h	equ	0xFDA
 25240                           fsr2l	equ	0xFD9
 25241                           status	equ	0xFD8
 25242                           
 25243 ;; *************** function _I2cSendMsgSm *****************
 25244 ;; Defined at:
 25245 ;;		line 105 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 25246 ;; Parameters:    Size  Location     Type
 25247 ;;		None
 25248 ;; Auto vars:     Size  Location     Type
 25249 ;;		None
 25250 ;; Return value:  Size  Location     Type
 25251 ;;                  1    wreg      void 
 25252 ;; Registers used:
 25253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25254 ;; Tracked objects:
 25255 ;;		On entry : 0/0
 25256 ;;		On exit  : 0/0
 25257 ;;		Unchanged: 0/0
 25258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25263 ;;Total ram usage:        0 bytes
 25264 ;; Hardware stack levels used:    1
 25265 ;; Hardware stack levels required when called:   13
 25266 ;; This function calls:
 25267 ;;		_I2c_ReadData
 25268 ;;		_I2c_WriteData
 25269 ;;		_ReceiveEvt
 25270 ;; This function is called by:
 25271 ;;		_I2cSlv_MainTask
 25272 ;; This function uses a non-reentrant model
 25273 ;;
 25274                           
 25275                           	psect	text121
 25276  0000'                    __ptext121:
 25277                           	opt stack 0
 25278  0000'                    _I2cSendMsgSm:
 25279                           	opt stack 14
 25280                           
 25281                           ;i2c_slv.c: 108: static I2cComStateType I2cComState = I2cComIdle;
 25282                           ;i2c_slv.c: 110: switch(I2cComState)
 25283                           
 25284                           ; BSR set to: 3
 25285                           ;incstack = 0
 25286  0000' D049               	goto	l1163
 25287  0002'                    
 25288                           ;i2c_slv.c: 114: if (ReceiveEvt(&I2cWriteDataEvt))
 25289  0002' 0E00'              	movlw	low _I2cWriteDataEvt
 25290  0004' 0100               	movlb	0	; () banked
 25291  0006' 6F00'              	movwf	ReceiveEvt@Event& (0+255),b
 25292  0008' 0E00'              	movlw	high _I2cWriteDataEvt
 25293  000A' 6F00'              	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25294  000C' EC00' F000'        	call	_ReceiveEvt	;wreg free
 25295  0010' 0900               	iorlw	0
 25296  0012' B4D8               	btfsc	status,2,c
 25297  0014' D006               	goto	l1165
 25298                           
 25299                           ;i2c_slv.c: 115: {
 25300                           ;i2c_slv.c: 117: I2cComState = I2cComWriteData;
 25301  0016' 0E01               	movlw	1
 25302  0018' 0101               	movlb	1	; () banked
 25303  001A' 6F00'              	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 25304                           
 25305                           ;i2c_slv.c: 119: I2cComSts = TxInProgress;
 25306  001C' 0E01               	movlw	1
 25307  001E' 6E18'              	movwf	_I2cComSts,c
 25308                           
 25309                           ;i2c_slv.c: 120: }
 25310  0020' 0012               	return	
 25311  0022'                    l1165:
 25312                           
 25313                           ;i2c_slv.c: 121: else if (ReceiveEvt(&I2cReadDataEvt))
 25314                           
 25315                           ; BSR set to: 1
 25316  0022' 0E00'              	movlw	low _I2cReadDataEvt
 25317  0024' 0100               	movlb	0	; () banked
 25318  0026' 6F00'              	movwf	ReceiveEvt@Event& (0+255),b
 25319  0028' 0E00'              	movlw	high _I2cReadDataEvt
 25320  002A' 6F00'              	movwf	(ReceiveEvt@Event+1)& (0+255),b
 25321  002C' EC00' F000'        	call	_ReceiveEvt	;wreg free
 25322  0030' 0900               	iorlw	0
 25323  0032' B4D8               	btfsc	status,2,c
 25324  0034' D006               	goto	l1167
 25325                           
 25326                           ;i2c_slv.c: 122: {
 25327                           ;i2c_slv.c: 124: I2cComState = I2cComReadData;
 25328  0036' 0E02               	movlw	2
 25329  0038' 0101               	movlb	1	; () banked
 25330  003A' 6F00'              	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 25331                           
 25332                           ;i2c_slv.c: 126: I2cComSts = RxInProgress;
 25333  003C' 0E02               	movlw	2
 25334  003E' 6E18'              	movwf	_I2cComSts,c
 25335                           
 25336                           ;i2c_slv.c: 127: }
 25337  0040' 0012               	return	
 25338  0042'                    l1167:
 25339                           
 25340                           ;i2c_slv.c: 128: else
 25341                           ;i2c_slv.c: 129: {
 25342                           ;i2c_slv.c: 131: I2cComSts = TxRxIdle;
 25343                           
 25344                           ; BSR set to: 1
 25345  0042' 0E00               	movlw	0
 25346  0044' 6E18'              	movwf	_I2cComSts,c
 25347                           
 25348                           ;i2c_slv.c: 132: }
 25349                           ;i2c_slv.c: 133: break;
 25350  0046' 0012               	return	
 25351  0048'                    
 25352                           ;i2c_slv.c: 137: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 25353  0048' 0E00'              	movlw	low _I2cTxPacket
 25354  004A' 0100               	movlb	0	; () banked
 25355  004C' 6F00'              	movwf	I2c_WriteData@WritePacket& (0+255),b
 25356  004E' 0E00'              	movlw	high _I2cTxPacket
 25357  0050' 6F00'              	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 25358  0052' EC00' F000'        	call	_I2c_WriteData	;wreg free
 25359  0056' 0900               	iorlw	0
 25360  0058' B4D8               	btfsc	status,2,c
 25361  005A' 0012               	return	
 25362                           
 25363                           ;i2c_slv.c: 138: {
 25364                           ;i2c_slv.c: 140: I2cComState = I2cComWriteComplete;
 25365  005C' 0E03               	movlw	3
 25366  005E' 0101               	movlb	1	; () banked
 25367  0060' 6F00'              	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 25368                           
 25369                           ; BSR set to: 1
 25370                           ;i2c_slv.c: 141: }
 25371                           ;i2c_slv.c: 142: break;
 25372  0062' 0012               	return	
 25373  0064'                    
 25374                           ; BSR set to: 1
 25375                           ;i2c_slv.c: 146: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 25376                           
 25377                           ; BSR set to: 1
 25378  0064' 0E00'              	movlw	low _I2cRxPacket
 25379  0066' 0100               	movlb	0	; () banked
 25380  0068' 6F00'              	movwf	I2c_ReadData@ReadPacket& (0+255),b
 25381  006A' 0E00'              	movlw	high _I2cRxPacket
 25382  006C' 6F00'              	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 25383  006E' EC00' F000'        	call	_I2c_ReadData	;wreg free
 25384  0072' 0900               	iorlw	0
 25385  0074' B4D8               	btfsc	status,2,c
 25386  0076' 0012               	return	
 25387                           
 25388                           ;i2c_slv.c: 147: {
 25389                           ;i2c_slv.c: 149: I2cComState = I2cComReadComplete;
 25390  0078' 0E04               	movlw	4
 25391  007A' 0101               	movlb	1	; () banked
 25392  007C' 6F00'              	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 25393                           
 25394                           ; BSR set to: 1
 25395                           ;i2c_slv.c: 150: }
 25396                           ;i2c_slv.c: 152: break;
 25397  007E' 0012               	return	
 25398  0080'                    
 25399                           ; BSR set to: 1
 25400                           ;i2c_slv.c: 156: I2cComState = I2cComIdle;
 25401                           
 25402                           ; BSR set to: 1
 25403  0080' 0E00               	movlw	0
 25404  0082' 6F00'              	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 25405                           
 25406                           ;i2c_slv.c: 158: I2cComSts = TxRxIdle;
 25407  0084' 0E00               	movlw	0
 25408  0086' 6E18'              	movwf	_I2cComSts,c
 25409                           
 25410                           ;i2c_slv.c: 159: break;
 25411  0088' 0012               	return	
 25412  008A'                    
 25413                           ; BSR set to: 1
 25414                           ;i2c_slv.c: 163: I2cComState = I2cComIdle;
 25415                           
 25416                           ; BSR set to: 1
 25417  008A' 0E00               	movlw	0
 25418  008C' 6F00'              	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 25419                           
 25420                           ;i2c_slv.c: 165: I2cComSts = TxRxIdle;
 25421  008E' 0E00               	movlw	0
 25422  0090' 6E18'              	movwf	_I2cComSts,c
 25423                           
 25424                           ; BSR set to: 1
 25425                           ;i2c_slv.c: 170: }
 25426                           
 25427                           ; BSR set to: 1
 25428                           ;i2c_slv.c: 169: break;
 25429                           
 25430                           ;i2c_slv.c: 168: default:
 25431                           
 25432                           ;i2c_slv.c: 166: break;
 25433  0092' 0012               	return	
 25434  0094'                    l1163:
 25435                           
 25436                           ; BSR set to: 1
 25437  0094' 0101               	movlb	1	; () banked
 25438  0096' 5100'              	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 25439                           
 25440                           ; Switch size 1, requested type "space"
 25441                           ; Number of cases is 5, Range of values is 0 to 4
 25442                           ; switch strategies available:
 25443                           ; Name         Instructions Cycles
 25444                           ; simple_byte           16     9 (average)
 25445                           ;	Chosen strategy is simple_byte
 25446  0098' 0A00               	xorlw	0	; case 0
 25447  009A' B4D8               	btfsc	status,2,c
 25448  009C' D7B2               	goto	l1164
 25449  009E' 0A01               	xorlw	1	; case 1
 25450  00A0' B4D8               	btfsc	status,2,c
 25451  00A2' D7D2               	goto	l1170
 25452  00A4' 0A03               	xorlw	3	; case 2
 25453  00A6' B4D8               	btfsc	status,2,c
 25454  00A8' D7DD               	goto	l1172
 25455  00AA' 0A01               	xorlw	1	; case 3
 25456  00AC' B4D8               	btfsc	status,2,c
 25457  00AE' D7E8               	goto	l1174
 25458  00B0' 0A07               	xorlw	7	; case 4
 25459  00B2' A4D8               	btfss	status,2,c
 25460  00B4' 0012               	return	
 25461  00B6' D7E9               	goto	l1175
 25462  00B8'                    __end_of_I2cSendMsgSm:
 25463                           	opt stack 0
 25464                           tosu	equ	0xFFF
 25465                           tosh	equ	0xFFE
 25466                           tosl	equ	0xFFD
 25467                           pclath	equ	0xFFA
 25468                           tblptru	equ	0xFF8
 25469                           tblptrh	equ	0xFF7
 25470                           tblptrl	equ	0xFF6
 25471                           tablat	equ	0xFF5
 25472                           prodh	equ	0xFF4
 25473                           prodl	equ	0xFF3
 25474                           intcon	equ	0xFF2
 25475                           intcon2	equ	0xFF1
 25476                           intcon3	equ	0xFF0
 25477                           indf0	equ	0xFEF
 25478                           postinc0	equ	0xFEE
 25479                           plusw0	equ	0xFEB
 25480                           fsr0h	equ	0xFEA
 25481                           fsr0l	equ	0xFE9
 25482                           wreg	equ	0xFE8
 25483                           indf1	equ	0xFE7
 25484                           postinc1	equ	0xFE6
 25485                           postdec1	equ	0xFE5
 25486                           fsr1h	equ	0xFE2
 25487                           fsr1l	equ	0xFE1
 25488                           indf2	equ	0xFDF
 25489                           postinc2	equ	0xFDE
 25490                           postdec2	equ	0xFDD
 25491                           plusw2	equ	0xFDB
 25492                           fsr2h	equ	0xFDA
 25493                           fsr2l	equ	0xFD9
 25494                           status	equ	0xFD8
 25495                           
 25496 ;; *************** function _ReceiveEvt *****************
 25497 ;; Defined at:
 25498 ;;		line 95 in file "../Source/c/02_Osl/os_ser.c"
 25499 ;; Parameters:    Size  Location     Type
 25500 ;;  Event           2    0[BANK0 ] PTR struct EventStructur
 25501 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), WifiReceiveData(1), 
 25502 ;;		 -> WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), NewWifiPacketParser(1), 
 25503 ;;		 -> NewWifiPacket(1), WifiRxPacket(203), StartWifiModem(1), NewWifiUartData(1), 
 25504 ;; Auto vars:     Size  Location     Type
 25505 ;;  EventStatus     1    3[BANK0 ] enum E7721
 25506 ;; Return value:  Size  Location     Type
 25507 ;;                  1    wreg      enum E7693
 25508 ;; Registers used:
 25509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25510 ;; Tracked objects:
 25511 ;;		On entry : 0/0
 25512 ;;		On exit  : 0/0
 25513 ;;		Unchanged: 0/0
 25514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25515 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25517 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25518 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25519 ;;Total ram usage:        4 bytes
 25520 ;; Hardware stack levels used:    1
 25521 ;; Hardware stack levels required when called:   11
 25522 ;; This function calls:
 25523 ;;		Nothing
 25524 ;; This function is called by:
 25525 ;;		_MdmWifi_StartWifiModemSm
 25526 ;;		_MdmWifiGetUartData
 25527 ;;		_MdmWifiEvtParser
 25528 ;;		_MdmWifi_ReceiveWifiMsg
 25529 ;;		_StartConnectionSm
 25530 ;;		_SendDataSm
 25531 ;;		_ReceiveDataSm
 25532 ;;		_I2cSendMsgSm
 25533 ;;		_I2cSlv_I2cReadMsgSts
 25534 ;;		_MdmWifi_ReceiveWifiMsgTerminal
 25535 ;;		_MdmWifiCmd_ReceiveWifiMsg
 25536 ;; This function uses a non-reentrant model
 25537 ;;
 25538                           
 25539                           	psect	text122
 25540  0000'                    __ptext122:
 25541                           	opt stack 0
 25542  0000'                    _ReceiveEvt:
 25543                           	opt stack 13
 25544                           
 25545                           ;os_ser.c: 98: EventStatusType EventStatus = EventIdle;
 25546                           
 25547                           ;incstack = 0
 25548  0000' 0E00               	movlw	0
 25549  0002' 0100               	movlb	0	; () banked
 25550  0004' 6F00'              	movwf	ReceiveEvt@EventStatus& (0+255),b
 25551                           
 25552                           ; BSR set to: 0
 25553                           ;os_ser.c: 101: if (Event->EventStatus == EventSent)
 25554  0006' C000' FFD9         	movff	ReceiveEvt@Event,fsr2l
 25555  000A' C001' FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 25556  000E' 0E02               	movlw	2
 25557  0010' 18DE               	xorwf	postinc2,w,c
 25558  0012' A4D8               	btfss	status,2,c
 25559  0014' D008               	goto	l761
 25560                           
 25561                           ; BSR set to: 0
 25562                           ;os_ser.c: 102: {
 25563                           ;os_ser.c: 104: Event->EventStatus = EventReceived;
 25564  0016' C000' FFD9         	movff	ReceiveEvt@Event,fsr2l
 25565  001A' C001' FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 25566  001E' 0E01               	movlw	1
 25567  0020' 6EDF               	movwf	indf2,c
 25568                           
 25569                           ; BSR set to: 0
 25570                           ;os_ser.c: 106: EventStatus = EventReceived;
 25571  0022' 0E01               	movlw	1
 25572  0024' D001               	goto	L36
 25573  0026'                    l761:
 25574                           
 25575                           ; BSR set to: 0
 25576                           ;os_ser.c: 108: else
 25577                           ;os_ser.c: 109: {
 25578                           ;os_ser.c: 111: EventStatus = EventIdle;
 25579                           
 25580                           ; BSR set to: 0
 25581  0026' 0E00               	movlw	0
 25582  0028'                    L36:
 25583  0028' 6F00'              	movwf	ReceiveEvt@EventStatus& (0+255),b
 25584                           
 25585                           ; BSR set to: 0
 25586                           ;os_ser.c: 112: }
 25587                           ;os_ser.c: 115: return(EventStatus);
 25588  002A' 5100'              	movf	ReceiveEvt@EventStatus& (0+255),w,b
 25589  002C' 0012               	return	
 25590  002E'                    __end_of_ReceiveEvt:
 25591                           	opt stack 0
 25592                           tosu	equ	0xFFF
 25593                           tosh	equ	0xFFE
 25594                           tosl	equ	0xFFD
 25595                           pclath	equ	0xFFA
 25596                           tblptru	equ	0xFF8
 25597                           tblptrh	equ	0xFF7
 25598                           tblptrl	equ	0xFF6
 25599                           tablat	equ	0xFF5
 25600                           prodh	equ	0xFF4
 25601                           prodl	equ	0xFF3
 25602                           intcon	equ	0xFF2
 25603                           intcon2	equ	0xFF1
 25604                           intcon3	equ	0xFF0
 25605                           indf0	equ	0xFEF
 25606                           postinc0	equ	0xFEE
 25607                           plusw0	equ	0xFEB
 25608                           fsr0h	equ	0xFEA
 25609                           fsr0l	equ	0xFE9
 25610                           wreg	equ	0xFE8
 25611                           indf1	equ	0xFE7
 25612                           postinc1	equ	0xFE6
 25613                           postdec1	equ	0xFE5
 25614                           fsr1h	equ	0xFE2
 25615                           fsr1l	equ	0xFE1
 25616                           indf2	equ	0xFDF
 25617                           postinc2	equ	0xFDE
 25618                           postdec2	equ	0xFDD
 25619                           plusw2	equ	0xFDB
 25620                           fsr2h	equ	0xFDA
 25621                           fsr2l	equ	0xFD9
 25622                           status	equ	0xFD8
 25623                           
 25624 ;; *************** function _I2c_WriteData *****************
 25625 ;; Defined at:
 25626 ;;		line 252 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 25627 ;; Parameters:    Size  Location     Type
 25628 ;;  WritePacket     2    1[BANK0 ] PTR struct _I2cWritePack
 25629 ;;		 -> I2cTxPacket(5), 
 25630 ;; Auto vars:     Size  Location     Type
 25631 ;;		None
 25632 ;; Return value:  Size  Location     Type
 25633 ;;                  1    wreg      enum E7734
 25634 ;; Registers used:
 25635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25636 ;; Tracked objects:
 25637 ;;		On entry : 0/0
 25638 ;;		On exit  : 0/0
 25639 ;;		Unchanged: 0/0
 25640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 25641 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25643 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25644 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 25645 ;;Total ram usage:        4 bytes
 25646 ;; Hardware stack levels used:    1
 25647 ;; Hardware stack levels required when called:   12
 25648 ;; This function calls:
 25649 ;;		_CheckAckStatus
 25650 ;;		_CheckTxStatus
 25651 ;;		_StartCondition
 25652 ;;		_StopCondition
 25653 ;;		_WriteByte
 25654 ;; This function is called by:
 25655 ;;		_I2cSendMsgSm
 25656 ;; This function uses a non-reentrant model
 25657 ;;
 25658                           
 25659                           	psect	text123
 25660  0000'                    __ptext123:
 25661                           	opt stack 0
 25662  0000'                    _I2c_WriteData:
 25663                           	opt stack 14
 25664                           
 25665                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 25666                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 25667                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 25668                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 25669                           ;i2c_drv.c: 260: switch (I2cWriteState)
 25670                           
 25671                           ; BSR set to: 0
 25672                           ;incstack = 0
 25673  0000' D09C               	goto	l160
 25674  0002'                    
 25675                           ;i2c_drv.c: 264: StartCondition();
 25676  0002' EC00' F000'        	call	_StartCondition	;wreg free
 25677                           
 25678                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 25679  0006' 0E00               	movlw	0
 25680  0008' 0101               	movlb	1	; () banked
 25681  000A' 6F00'              	movwf	I2c_WriteData@WriteStatus& (0+255),b
 25682                           
 25683                           ; BSR set to: 1
 25684                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 25685  000C' 0E01               	movlw	1
 25686  000E' D06C               	goto	L40
 25687  0010'                    
 25688                           ; BSR set to: 1
 25689                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 25690                           
 25691                           ; BSR set to: 1
 25692  0010' 0100               	movlb	0	; () banked
 25693  0012' EE20 F001          	lfsr	2,1
 25694  0016' 5100'              	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25695  0018' 26D9               	addwf	fsr2l,f,c
 25696  001A' 5100'              	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25697  001C' 22DA               	addwfc	fsr2h,f,c
 25698  001E' 50DF               	movf	indf2,w,c
 25699  0020' 6F00'              	movwf	??_I2c_WriteData& (0+255),b
 25700  0022' C001' FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 25701  0026' C002' FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 25702  002A' 50DF               	movf	indf2,w,c
 25703  002C' 6F00'              	movwf	(??_I2c_WriteData+1)& (0+255),b
 25704  002E' 90D8               	bcf	status,0,c
 25705  0030' 3500'              	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 25706  0032' 1100'              	iorwf	??_I2c_WriteData& (0+255),w,b
 25707  0034' C001' FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 25708  0038' C002' FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 25709  003C' 6EDF               	movwf	indf2,c
 25710                           
 25711                           ; BSR set to: 0
 25712                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 25713  003E' C001' FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 25714  0042' C002' FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 25715  0046' 50DF               	movf	indf2,w,c
 25716  0048' EC00' F000'        	call	_WriteByte
 25717                           
 25718                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 25719  004C' 0E02               	movlw	2
 25720  004E' 0101               	movlb	1	; () banked
 25721  0050' 6F00'              	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25722  0052'                    
 25723                           ; BSR set to: 1
 25724                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 25725                           
 25726                           ; BSR set to: 1
 25727  0052' EC00' F000'        	call	_CheckTxStatus	;wreg free
 25728  0056' 0900               	iorlw	0
 25729  0058' A4D8               	btfss	status,2,c
 25730  005A' D08F               	goto	l162
 25731                           
 25732                           ;i2c_drv.c: 282: {
 25733                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 25734  005C' 0E03               	movlw	3
 25735  005E' D01B               	goto	L44
 25736  0060'                    
 25737                           ; BSR set to: 1
 25738                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 25739                           
 25740                           ; BSR set to: 1
 25741  0060' 0100               	movlb	0	; () banked
 25742  0062' EE20 F002          	lfsr	2,2
 25743  0066' 5100'              	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25744  0068' 26D9               	addwf	fsr2l,f,c
 25745  006A' 5100'              	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25746  006C' 22DA               	addwfc	fsr2h,f,c
 25747  006E' CFDE F003'         	movff	postinc2,??_I2c_WriteData
 25748  0072' CFDD F004'         	movff	postdec2,??_I2c_WriteData+1
 25749  0076' C003' FFD9         	movff	??_I2c_WriteData,fsr2l
 25750  007A' C004' FFDA         	movff	??_I2c_WriteData+1,fsr2h
 25751  007E' 50DF               	movf	indf2,w,c
 25752  0080' EC00' F000'        	call	_WriteByte
 25753                           
 25754                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 25755  0084' 0E04               	movlw	4
 25756  0086'                    L43:
 25757  0086' 0101               	movlb	1	; () banked
 25758  0088' D02F               	goto	L40
 25759  008A'                    
 25760                           ; BSR set to: 1
 25761                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 25762                           
 25763                           ; BSR set to: 1
 25764  008A' EC00' F000'        	call	_CheckTxStatus	;wreg free
 25765  008E' 0900               	iorlw	0
 25766  0090' A4D8               	btfss	status,2,c
 25767  0092' D073               	goto	l162
 25768                           
 25769                           ;i2c_drv.c: 300: {
 25770                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 25771  0094' 0E05               	movlw	5
 25772  0096'                    L44:
 25773  0096' 0101               	movlb	1	; () banked
 25774  0098' 6F00'              	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25775                           
 25776                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 25777  009A' 0E08               	movlw	8
 25778  009C' D025               	goto	L40
 25779  009E'                    
 25780                           ; BSR set to: 1
 25781                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 25782                           
 25783                           ; BSR set to: 1
 25784  009E' 0100               	movlb	0	; () banked
 25785  00A0' EE20 F004          	lfsr	2,4
 25786  00A4' 5100'              	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25787  00A6' 26D9               	addwf	fsr2l,f,c
 25788  00A8' 5100'              	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25789  00AA' 22DA               	addwfc	fsr2h,f,c
 25790  00AC' 50DF               	movf	indf2,w,c
 25791  00AE' B4D8               	btfsc	status,2,c
 25792  00B0' D010               	goto	l170
 25793                           
 25794                           ; BSR set to: 0
 25795                           ;i2c_drv.c: 310: {
 25796                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 25797  00B2' EE20 F004          	lfsr	2,4
 25798  00B6' 5100'              	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25799  00B8' 26D9               	addwf	fsr2l,f,c
 25800  00BA' 5100'              	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25801  00BC' 22DA               	addwfc	fsr2h,f,c
 25802  00BE' 06DF               	decf	indf2,f,c
 25803                           
 25804                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 25805  00C0' EE20 F002          	lfsr	2,2
 25806  00C4' 5100'              	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25807  00C6' 26D9               	addwf	fsr2l,f,c
 25808  00C8' 5100'              	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25809  00CA' 22DA               	addwfc	fsr2h,f,c
 25810  00CC' 2ADE               	incf	postinc2,f,c
 25811  00CE' 0E00               	movlw	0
 25812  00D0' 22DD               	addwfc	postdec2,f,c
 25813  00D2'                    l170:
 25814                           
 25815                           ; BSR set to: 0
 25816                           ;i2c_drv.c: 315: }
 25817                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 25818  00D2' EE20 F004          	lfsr	2,4
 25819  00D6' 5100'              	movf	I2c_WriteData@WritePacket& (0+255),w,b
 25820  00D8' 26D9               	addwf	fsr2l,f,c
 25821  00DA' 5100'              	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 25822  00DC' 22DA               	addwfc	fsr2h,f,c
 25823  00DE' 50DF               	movf	indf2,w,c
 25824  00E0' A4D8               	btfss	status,2,c
 25825  00E2' D004               	goto	l171
 25826                           
 25827                           ; BSR set to: 0
 25828                           ;i2c_drv.c: 319: {
 25829                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 25830  00E4' 0E06               	movlw	6
 25831  00E6' D7CF               	goto	L43
 25832  00E8'                    L40:
 25833  00E8' 6F00'              	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25834                           
 25835                           ;i2c_drv.c: 322: }
 25836  00EA' D047               	goto	l162
 25837  00EC'                    l171:
 25838                           
 25839                           ;i2c_drv.c: 323: else
 25840                           ;i2c_drv.c: 324: {
 25841                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 25842                           
 25843                           ; BSR set to: 1
 25844  00EC' 0E03               	movlw	3
 25845  00EE' D7CB               	goto	L43
 25846  00F0'                    
 25847                           ; BSR set to: 1
 25848                           ;i2c_drv.c: 332: StopCondition();
 25849                           
 25850                           ; BSR set to: 1
 25851  00F0' EC00' F000'        	call	_StopCondition	;wreg free
 25852                           
 25853                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 25854  00F4' 0E07               	movlw	7
 25855  00F6' D7C7               	goto	L43
 25856  00F8'                    
 25857                           ; BSR set to: 1
 25858                           ;i2c_drv.c: 339: TentativeCounter++;
 25859                           
 25860                           ; BSR set to: 1
 25861  00F8' 2B00'              	incf	I2c_WriteData@TentativeCounter& (0+255),f,b
 25862                           
 25863                           ; BSR set to: 1
 25864                           ;i2c_drv.c: 341: if (CheckAckStatus() == ((UINT8)(0)))
 25865  00FA' EC00' F000'        	call	_CheckAckStatus	;wreg free
 25866  00FE' 0900               	iorlw	0
 25867  0100' A4D8               	btfss	status,2,c
 25868  0102' D006               	goto	l175
 25869                           
 25870                           ;i2c_drv.c: 342: {
 25871                           ;i2c_drv.c: 344: TentativeCounter = 0;
 25872  0104' 0E00               	movlw	0
 25873  0106' 0101               	movlb	1	; () banked
 25874  0108' 6F00'              	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 25875                           
 25876                           ; BSR set to: 1
 25877                           ;i2c_drv.c: 346: I2cWriteState = I2cNextState;
 25878  010A' C028' F029'        	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 25879                           
 25880                           ;i2c_drv.c: 347: }
 25881  010E' D035               	goto	l162
 25882  0110'                    l175:
 25883                           
 25884                           ;i2c_drv.c: 348: else
 25885                           ;i2c_drv.c: 349: {
 25886                           ;i2c_drv.c: 351: if (TentativeCounter >= ((UINT8)(3)))
 25887                           
 25888                           ; BSR set to: 1
 25889  0110' 0E02               	movlw	2
 25890  0112' 0101               	movlb	1	; () banked
 25891  0114' 6500'              	cpfsgt	I2c_WriteData@TentativeCounter& (0+255),b
 25892  0116' D031               	goto	l162
 25893                           
 25894                           ; BSR set to: 1
 25895                           ;i2c_drv.c: 352: {
 25896                           ;i2c_drv.c: 354: I2cWriteState = TxErrorStatus;
 25897  0118' 0E09               	movlw	9
 25898  011A' D7E6               	goto	L40
 25899  011C'                    
 25900                           ; BSR set to: 1
 25901                           ;i2c_drv.c: 361: I2cWriteState = TxAssertStart;
 25902                           
 25903                           ; BSR set to: 1
 25904  011C' 0E00               	movlw	0
 25905  011E' 6F00'              	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25906                           
 25907                           ;i2c_drv.c: 362: I2cNextState = TxAssertStart;
 25908  0120' 0E00               	movlw	0
 25909  0122' 6F00'              	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25910                           
 25911                           ;i2c_drv.c: 364: WriteStatus = I2cWriteOk;
 25912  0124' 0E02               	movlw	2
 25913  0126' D007               	goto	L42
 25914  0128'                    
 25915                           ; BSR set to: 1
 25916                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 25917                           
 25918                           ; BSR set to: 1
 25919  0128' 0E00               	movlw	0
 25920  012A' 6F00'              	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 25921                           
 25922                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 25923  012C' 0E00               	movlw	0
 25924  012E' 6F00'              	movwf	I2c_WriteData@I2cNextState& (0+255),b
 25925                           
 25926                           ;i2c_drv.c: 372: TentativeCounter = 0;
 25927  0130' 0E00               	movlw	0
 25928  0132' 6F00'              	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 25929                           
 25930                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 25931  0134' 0E01               	movlw	1
 25932  0136'                    L42:
 25933  0136' 6F00'              	movwf	I2c_WriteData@WriteStatus& (0+255),b
 25934                           
 25935                           ; BSR set to: 1
 25936                           ;i2c_drv.c: 379: }
 25937                           
 25938                           ; BSR set to: 1
 25939                           ;i2c_drv.c: 378: break;
 25940                           
 25941                           ;i2c_drv.c: 377: default:
 25942                           
 25943                           ;i2c_drv.c: 375: break;
 25944  0138' D020               	goto	l162
 25945  013A'                    l160:
 25946                           
 25947                           ; BSR set to: 1
 25948  013A' 0101               	movlb	1	; () banked
 25949  013C' 5100'              	movf	I2c_WriteData@I2cWriteState& (0+255),w,b
 25950                           
 25951                           ; Switch size 1, requested type "space"
 25952                           ; Number of cases is 10, Range of values is 0 to 9
 25953                           ; switch strategies available:
 25954                           ; Name         Instructions Cycles
 25955                           ; simple_byte           31    16 (average)
 25956                           ;	Chosen strategy is simple_byte
 25957  013E' 0A00               	xorlw	0	; case 0
 25958  0140' B4D8               	btfsc	status,2,c
 25959  0142' D75F               	goto	l161
 25960  0144' 0A01               	xorlw	1	; case 1
 25961  0146' B4D8               	btfsc	status,2,c
 25962  0148' D763               	goto	l163
 25963  014A' 0A03               	xorlw	3	; case 2
 25964  014C' B4D8               	btfsc	status,2,c
 25965  014E' D781               	goto	l164
 25966  0150' 0A01               	xorlw	1	; case 3
 25967  0152' B4D8               	btfsc	status,2,c
 25968  0154' D785               	goto	l166
 25969  0156' 0A07               	xorlw	7	; case 4
 25970  0158' B4D8               	btfsc	status,2,c
 25971  015A' D797               	goto	l167
 25972  015C' 0A01               	xorlw	1	; case 5
 25973  015E' B4D8               	btfsc	status,2,c
 25974  0160' D79E               	goto	l169
 25975  0162' 0A03               	xorlw	3	; case 6
 25976  0164' B4D8               	btfsc	status,2,c
 25977  0166' D7C4               	goto	l173
 25978  0168' 0A01               	xorlw	1	; case 7
 25979  016A' B4D8               	btfsc	status,2,c
 25980  016C' D7D7               	goto	l178
 25981  016E' 0A0F               	xorlw	15	; case 8
 25982  0170' B4D8               	btfsc	status,2,c
 25983  0172' D7C2               	goto	l174
 25984  0174' 0A01               	xorlw	1	; case 9
 25985  0176' B4D8               	btfsc	status,2,c
 25986  0178' D7D7               	goto	l179
 25987  017A'                    l162:
 25988                           
 25989                           ;i2c_drv.c: 382: return WriteStatus;
 25990                           
 25991                           ; BSR set to: 1
 25992  017A' 0101               	movlb	1	; () banked
 25993  017C' 5100'              	movf	I2c_WriteData@WriteStatus& (0+255),w,b
 25994  017E' 0012               	return	
 25995  0180'                    __end_of_I2c_WriteData:
 25996                           	opt stack 0
 25997                           tosu	equ	0xFFF
 25998                           tosh	equ	0xFFE
 25999                           tosl	equ	0xFFD
 26000                           pclath	equ	0xFFA
 26001                           tblptru	equ	0xFF8
 26002                           tblptrh	equ	0xFF7
 26003                           tblptrl	equ	0xFF6
 26004                           tablat	equ	0xFF5
 26005                           prodh	equ	0xFF4
 26006                           prodl	equ	0xFF3
 26007                           intcon	equ	0xFF2
 26008                           intcon2	equ	0xFF1
 26009                           intcon3	equ	0xFF0
 26010                           indf0	equ	0xFEF
 26011                           postinc0	equ	0xFEE
 26012                           plusw0	equ	0xFEB
 26013                           fsr0h	equ	0xFEA
 26014                           fsr0l	equ	0xFE9
 26015                           wreg	equ	0xFE8
 26016                           indf1	equ	0xFE7
 26017                           postinc1	equ	0xFE6
 26018                           postdec1	equ	0xFE5
 26019                           fsr1h	equ	0xFE2
 26020                           fsr1l	equ	0xFE1
 26021                           indf2	equ	0xFDF
 26022                           postinc2	equ	0xFDE
 26023                           postdec2	equ	0xFDD
 26024                           plusw2	equ	0xFDB
 26025                           fsr2h	equ	0xFDA
 26026                           fsr2l	equ	0xFD9
 26027                           status	equ	0xFD8
 26028                           
 26029 ;; *************** function _I2c_ReadData *****************
 26030 ;; Defined at:
 26031 ;;		line 393 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26032 ;; Parameters:    Size  Location     Type
 26033 ;;  ReadPacket      2    3[BANK0 ] PTR struct _I2cReadPacke
 26034 ;;		 -> I2cRxPacket(6), 
 26035 ;; Auto vars:     Size  Location     Type
 26036 ;;		None
 26037 ;; Return value:  Size  Location     Type
 26038 ;;                  1    wreg      enum E7781
 26039 ;; Registers used:
 26040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26041 ;; Tracked objects:
 26042 ;;		On entry : 0/0
 26043 ;;		On exit  : 0/0
 26044 ;;		Unchanged: 0/0
 26045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26048 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26049 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26050 ;;Total ram usage:        4 bytes
 26051 ;; Hardware stack levels used:    1
 26052 ;; Hardware stack levels required when called:   12
 26053 ;; This function calls:
 26054 ;;		_CheckAckStatus
 26055 ;;		_CheckTxStatus
 26056 ;;		_EnableReceiver
 26057 ;;		_GenerateEvt
 26058 ;;		_ReadByte
 26059 ;;		_SetAckStatus
 26060 ;;		_StartCondition
 26061 ;;		_StopCondition
 26062 ;;		_WriteByte
 26063 ;; This function is called by:
 26064 ;;		_I2cSendMsgSm
 26065 ;; This function uses a non-reentrant model
 26066 ;;
 26067                           
 26068                           	psect	text124
 26069  0000'                    __ptext124:
 26070                           	opt stack 0
 26071  0000'                    _I2c_ReadData:
 26072                           	opt stack 14
 26073                           
 26074                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 26075                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 26076                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 26077                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 26078                           ;i2c_drv.c: 402: switch (I2cReadState)
 26079                           
 26080                           ; BSR set to: 1
 26081                           ;incstack = 0
 26082  0000' D09A               	goto	l192
 26083  0002'                    
 26084                           ;i2c_drv.c: 406: StartCondition();
 26085  0002' EC00' F000'        	call	_StartCondition	;wreg free
 26086                           
 26087                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 26088  0006' 0E00               	movlw	0
 26089  0008' 0101               	movlb	1	; () banked
 26090  000A' 6F00'              	movwf	I2c_ReadData@ReadStatus& (0+255),b
 26091                           
 26092                           ; BSR set to: 1
 26093                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 26094  000C' 0E01               	movlw	1
 26095  000E' D020               	goto	L45
 26096  0010'                    
 26097                           ; BSR set to: 1
 26098                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 26099                           
 26100                           ; BSR set to: 1
 26101  0010' 0100               	movlb	0	; () banked
 26102  0012' EE20 F001          	lfsr	2,1
 26103  0016' 5100'              	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 26104  0018' 26D9               	addwf	fsr2l,f,c
 26105  001A' 5100'              	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 26106  001C' 22DA               	addwfc	fsr2h,f,c
 26107  001E' 50DF               	movf	indf2,w,c
 26108  0020' 6F00'              	movwf	??_I2c_ReadData& (0+255),b
 26109  0022' C003' FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 26110  0026' C004' FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 26111  002A' 50DF               	movf	indf2,w,c
 26112  002C' 6F00'              	movwf	(??_I2c_ReadData+1)& (0+255),b
 26113  002E' 90D8               	bcf	status,0,c
 26114  0030' 3500'              	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 26115  0032' 1100'              	iorwf	??_I2c_ReadData& (0+255),w,b
 26116  0034' C003' FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 26117  0038' C004' FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 26118  003C' 6EDF               	movwf	indf2,c
 26119                           
 26120                           ; BSR set to: 0
 26121                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 26122  003E' C003' FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 26123  0042' C004' FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 26124  0046' 50DF               	movf	indf2,w,c
 26125  0048' EC00' F000'        	call	_WriteByte
 26126                           
 26127                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 26128  004C' 0E02               	movlw	2
 26129  004E' D06C               	goto	L49
 26130  0050'                    L45:
 26131  0050' 6F00'              	movwf	I2c_ReadData@I2cReadState& (0+255),b
 26132                           
 26133                           ;i2c_drv.c: 420: break;
 26134  0052' D08E               	goto	l194
 26135  0054'                    
 26136                           ; BSR set to: 1
 26137                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 26138                           
 26139                           ; BSR set to: 1
 26140  0054' EC00' F000'        	call	_CheckTxStatus	;wreg free
 26141  0058' 0900               	iorlw	0
 26142  005A' A4D8               	btfss	status,2,c
 26143  005C' D089               	goto	l194
 26144                           
 26145                           ;i2c_drv.c: 425: {
 26146                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 26147  005E' 0E03               	movlw	3
 26148  0060' D063               	goto	L49
 26149  0062'                    
 26150                           ; BSR set to: 1
 26151                           ;i2c_drv.c: 433: TentativeCounter++;
 26152                           
 26153                           ; BSR set to: 1
 26154  0062' 2B00'              	incf	I2c_ReadData@TentativeCounter& (0+255),f,b
 26155                           
 26156                           ; BSR set to: 1
 26157                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 26158  0064' EC00' F000'        	call	_CheckAckStatus	;wreg free
 26159  0068' 0900               	iorlw	0
 26160  006A' A4D8               	btfss	status,2,c
 26161  006C' D005               	goto	l199
 26162                           
 26163                           ;i2c_drv.c: 436: {
 26164                           ;i2c_drv.c: 438: TentativeCounter = 0;
 26165  006E' 0E00               	movlw	0
 26166  0070' 0101               	movlb	1	; () banked
 26167  0072' 6F00'              	movwf	I2c_ReadData@TentativeCounter& (0+255),b
 26168                           
 26169                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 26170  0074' 0E04               	movlw	4
 26171  0076' D7EC               	goto	L45
 26172  0078'                    l199:
 26173                           
 26174                           ;i2c_drv.c: 442: else
 26175                           ;i2c_drv.c: 443: {
 26176                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 26177                           
 26178                           ; BSR set to: 1
 26179  0078' 0E02               	movlw	2
 26180  007A' 0101               	movlb	1	; () banked
 26181  007C' 6500'              	cpfsgt	I2c_ReadData@TentativeCounter& (0+255),b
 26182  007E' D078               	goto	l194
 26183                           
 26184                           ; BSR set to: 1
 26185                           ;i2c_drv.c: 446: {
 26186                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 26187  0080' 0E08               	movlw	8
 26188  0082' D7E6               	goto	L45
 26189  0084'                    
 26190                           ; BSR set to: 1
 26191                           ;i2c_drv.c: 455: EnableReceiver();
 26192                           
 26193                           ; BSR set to: 1
 26194  0084' EC00' F000'        	call	_EnableReceiver	;wreg free
 26195                           
 26196                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 26197  0088' 0E05               	movlw	5
 26198  008A' D04E               	goto	L49
 26199  008C'                    
 26200                           ; BSR set to: 1
 26201                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 26202                           
 26203                           ; BSR set to: 1
 26204  008C' EC00' F000'        	call	_CheckTxStatus	;wreg free
 26205  0090' 0900               	iorlw	0
 26206  0092' A4D8               	btfss	status,2,c
 26207  0094' D06D               	goto	l194
 26208                           
 26209                           ;i2c_drv.c: 463: {
 26210                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 26211  0096' 0100               	movlb	0	; () banked
 26212  0098' EE20 F002          	lfsr	2,2
 26213  009C' 5100'              	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 26214  009E' 26D9               	addwf	fsr2l,f,c
 26215  00A0' 5100'              	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 26216  00A2' 22DA               	addwfc	fsr2h,f,c
 26217  00A4' CFDE F005'         	movff	postinc2,??_I2c_ReadData
 26218  00A8' CFDD F006'         	movff	postdec2,??_I2c_ReadData+1
 26219  00AC' C005' FFD9         	movff	??_I2c_ReadData,fsr2l
 26220  00B0' C006' FFDA         	movff	??_I2c_ReadData+1,fsr2h
 26221  00B4' EC00' F000'        	call	_ReadByte	;wreg free
 26222  00B8' 6EDF               	movwf	indf2,c
 26223                           
 26224                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 26225  00BA' 0100               	movlb	0	; () banked
 26226  00BC' EE20 F002          	lfsr	2,2
 26227  00C0' 5100'              	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 26228  00C2' 26D9               	addwf	fsr2l,f,c
 26229  00C4' 5100'              	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 26230  00C6' 22DA               	addwfc	fsr2h,f,c
 26231  00C8' 2ADE               	incf	postinc2,f,c
 26232  00CA' 0E00               	movlw	0
 26233  00CC' 22DD               	addwfc	postdec2,f,c
 26234                           
 26235                           ; BSR set to: 0
 26236                           ;i2c_drv.c: 469: DataCounter++;
 26237  00CE' 0101               	movlb	1	; () banked
 26238  00D0' 2B00'              	incf	I2c_ReadData@DataCounter& (0+255),f,b
 26239                           
 26240                           ; BSR set to: 1
 26241                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 26242  00D2' 0E06               	movlw	6
 26243  00D4' D7BD               	goto	L45
 26244  00D6'                    
 26245                           ; BSR set to: 1
 26246                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 26247                           
 26248                           ; BSR set to: 1
 26249  00D6' 0100               	movlb	0	; () banked
 26250  00D8' EE20 F004          	lfsr	2,4
 26251  00DC' 5100'              	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 26252  00DE' 26D9               	addwf	fsr2l,f,c
 26253  00E0' 5100'              	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 26254  00E2' 22DA               	addwfc	fsr2h,f,c
 26255  00E4' 50DE               	movf	postinc2,w,c
 26256  00E6' 0101               	movlb	1	; () banked
 26257  00E8' 5D00'              	subwf	I2c_ReadData@DataCounter& (0+255),w,b
 26258  00EA' A0D8               	btfss	status,0,c
 26259  00EC' D009               	goto	l206
 26260                           
 26261                           ; BSR set to: 1
 26262                           ;i2c_drv.c: 478: {
 26263                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 26264  00EE' 0E01               	movlw	1
 26265  00F0' EC00' F000'        	call	_SetAckStatus
 26266                           
 26267                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 26268  00F4' 0E07               	movlw	7
 26269  00F6' 0101               	movlb	1	; () banked
 26270  00F8' 6F00'              	movwf	I2c_ReadData@I2cReadState& (0+255),b
 26271                           
 26272                           ; BSR set to: 1
 26273                           ;i2c_drv.c: 484: DataCounter = 0;
 26274  00FA' 0E00               	movlw	0
 26275  00FC' 6F00'              	movwf	I2c_ReadData@DataCounter& (0+255),b
 26276                           
 26277                           ;i2c_drv.c: 485: }
 26278  00FE' D038               	goto	l194
 26279  0100'                    l206:
 26280                           
 26281                           ; BSR set to: 1
 26282                           ;i2c_drv.c: 486: else
 26283                           ;i2c_drv.c: 487: {
 26284                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 26285                           
 26286                           ; BSR set to: 1
 26287  0100' 0E00               	movlw	0
 26288  0102' EC00' F000'        	call	_SetAckStatus
 26289                           
 26290                           ;i2c_drv.c: 491: I2cReadState = RxGetData;
 26291  0106' 0E04               	movlw	4
 26292  0108' D00F               	goto	L49
 26293  010A'                    
 26294                           ; BSR set to: 1
 26295                           ;i2c_drv.c: 497: StopCondition();
 26296                           
 26297                           ; BSR set to: 1
 26298  010A' EC00' F000'        	call	_StopCondition	;wreg free
 26299                           
 26300                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 26301  010E' 0E02               	movlw	2
 26302  0110' 0101               	movlb	1	; () banked
 26303  0112' 6F00'              	movwf	I2c_ReadData@ReadStatus& (0+255),b
 26304                           
 26305                           ; BSR set to: 1
 26306                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 26307  0114' 0E05               	movlw	5
 26308  0116' 0100               	movlb	0	; () banked
 26309  0118' 2500'              	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 26310  011A' 6F00'              	movwf	GenerateEvt@Event& (0+255),b
 26311  011C' 0E00               	movlw	0
 26312  011E' 2100'              	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 26313  0120' 6F00'              	movwf	(GenerateEvt@Event+1)& (0+255),b
 26314  0122' EC00' F000'        	call	_GenerateEvt	;wreg free
 26315                           
 26316                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 26317  0126' 0E00               	movlw	0
 26318  0128'                    L49:
 26319  0128' 0101               	movlb	1	; () banked
 26320  012A' D792               	goto	L45
 26321  012C'                    
 26322                           ; BSR set to: 1
 26323                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 26324                           
 26325                           ; BSR set to: 1
 26326  012C' 0E00               	movlw	0
 26327  012E' 6F00'              	movwf	I2c_ReadData@I2cReadState& (0+255),b
 26328                           
 26329                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 26330  0130' 0E01               	movlw	1
 26331  0132' 6F00'              	movwf	I2c_ReadData@ReadStatus& (0+255),b
 26332                           
 26333                           ; BSR set to: 1
 26334                           ;i2c_drv.c: 515: }
 26335                           
 26336                           ; BSR set to: 1
 26337                           ;i2c_drv.c: 514: break;
 26338                           
 26339                           ;i2c_drv.c: 513: default:
 26340                           
 26341                           ;i2c_drv.c: 511: break;
 26342  0134' D01D               	goto	l194
 26343  0136'                    l192:
 26344                           
 26345                           ; BSR set to: 1
 26346  0136' 0101               	movlb	1	; () banked
 26347  0138' 5100'              	movf	I2c_ReadData@I2cReadState& (0+255),w,b
 26348                           
 26349                           ; Switch size 1, requested type "space"
 26350                           ; Number of cases is 9, Range of values is 0 to 8
 26351                           ; switch strategies available:
 26352                           ; Name         Instructions Cycles
 26353                           ; simple_byte           28    15 (average)
 26354                           ;	Chosen strategy is simple_byte
 26355  013A' 0A00               	xorlw	0	; case 0
 26356  013C' B4D8               	btfsc	status,2,c
 26357  013E' D761               	goto	l193
 26358  0140' 0A01               	xorlw	1	; case 1
 26359  0142' B4D8               	btfsc	status,2,c
 26360  0144' D765               	goto	l195
 26361  0146' 0A03               	xorlw	3	; case 2
 26362  0148' B4D8               	btfsc	status,2,c
 26363  014A' D784               	goto	l196
 26364  014C' 0A01               	xorlw	1	; case 3
 26365  014E' B4D8               	btfsc	status,2,c
 26366  0150' D788               	goto	l198
 26367  0152' 0A07               	xorlw	7	; case 4
 26368  0154' B4D8               	btfsc	status,2,c
 26369  0156' D796               	goto	l202
 26370  0158' 0A01               	xorlw	1	; case 5
 26371  015A' B4D8               	btfsc	status,2,c
 26372  015C' D797               	goto	l203
 26373  015E' 0A03               	xorlw	3	; case 6
 26374  0160' B4D8               	btfsc	status,2,c
 26375  0162' D7B9               	goto	l205
 26376  0164' 0A01               	xorlw	1	; case 7
 26377  0166' B4D8               	btfsc	status,2,c
 26378  0168' D7D0               	goto	l208
 26379  016A' 0A0F               	xorlw	15	; case 8
 26380  016C' B4D8               	btfsc	status,2,c
 26381  016E' D7DE               	goto	l209
 26382  0170'                    l194:
 26383                           
 26384                           ;i2c_drv.c: 518: return ReadStatus;
 26385                           
 26386                           ; BSR set to: 1
 26387  0170' 0101               	movlb	1	; () banked
 26388  0172' 5100'              	movf	I2c_ReadData@ReadStatus& (0+255),w,b
 26389  0174' 0012               	return	
 26390  0176'                    __end_of_I2c_ReadData:
 26391                           	opt stack 0
 26392                           tosu	equ	0xFFF
 26393                           tosh	equ	0xFFE
 26394                           tosl	equ	0xFFD
 26395                           pclath	equ	0xFFA
 26396                           tblptru	equ	0xFF8
 26397                           tblptrh	equ	0xFF7
 26398                           tblptrl	equ	0xFF6
 26399                           tablat	equ	0xFF5
 26400                           prodh	equ	0xFF4
 26401                           prodl	equ	0xFF3
 26402                           intcon	equ	0xFF2
 26403                           intcon2	equ	0xFF1
 26404                           intcon3	equ	0xFF0
 26405                           indf0	equ	0xFEF
 26406                           postinc0	equ	0xFEE
 26407                           plusw0	equ	0xFEB
 26408                           fsr0h	equ	0xFEA
 26409                           fsr0l	equ	0xFE9
 26410                           wreg	equ	0xFE8
 26411                           indf1	equ	0xFE7
 26412                           postinc1	equ	0xFE6
 26413                           postdec1	equ	0xFE5
 26414                           fsr1h	equ	0xFE2
 26415                           fsr1l	equ	0xFE1
 26416                           indf2	equ	0xFDF
 26417                           postinc2	equ	0xFDE
 26418                           postdec2	equ	0xFDD
 26419                           plusw2	equ	0xFDB
 26420                           fsr2h	equ	0xFDA
 26421                           fsr2l	equ	0xFD9
 26422                           status	equ	0xFD8
 26423                           
 26424 ;; *************** function _WriteByte *****************
 26425 ;; Defined at:
 26426 ;;		line 190 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26427 ;; Parameters:    Size  Location     Type
 26428 ;;  Byte            1    wreg     unsigned char 
 26429 ;; Auto vars:     Size  Location     Type
 26430 ;;  Byte            1    0[BANK0 ] unsigned char 
 26431 ;; Return value:  Size  Location     Type
 26432 ;;                  1    wreg      void 
 26433 ;; Registers used:
 26434 ;;		wreg
 26435 ;; Tracked objects:
 26436 ;;		On entry : 0/0
 26437 ;;		On exit  : 0/0
 26438 ;;		Unchanged: 0/0
 26439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26443 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26444 ;;Total ram usage:        1 bytes
 26445 ;; Hardware stack levels used:    1
 26446 ;; Hardware stack levels required when called:   11
 26447 ;; This function calls:
 26448 ;;		Nothing
 26449 ;; This function is called by:
 26450 ;;		_I2c_WriteData
 26451 ;;		_I2c_ReadData
 26452 ;; This function uses a non-reentrant model
 26453 ;;
 26454                           
 26455                           	psect	text125
 26456  0000'                    __ptext125:
 26457                           	opt stack 0
 26458  0000'                    _WriteByte:
 26459                           	opt stack 14
 26460                           
 26461                           ; BSR set to: 1
 26462                           ;incstack = 0
 26463                           ;WriteByte@Byte stored from wreg
 26464  0000' 0100               	movlb	0	; () banked
 26465  0002' 6F00'              	movwf	WriteByte@Byte& (0+255),b
 26466                           
 26467                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 26468  0004' C000' FF75         	movff	WriteByte@Byte,3957	;volatile
 26469  0008' 0012               	return		;funcret
 26470  000A'                    __end_of_WriteByte:
 26471                           	opt stack 0
 26472                           tosu	equ	0xFFF
 26473                           tosh	equ	0xFFE
 26474                           tosl	equ	0xFFD
 26475                           pclath	equ	0xFFA
 26476                           tblptru	equ	0xFF8
 26477                           tblptrh	equ	0xFF7
 26478                           tblptrl	equ	0xFF6
 26479                           tablat	equ	0xFF5
 26480                           prodh	equ	0xFF4
 26481                           prodl	equ	0xFF3
 26482                           intcon	equ	0xFF2
 26483                           intcon2	equ	0xFF1
 26484                           intcon3	equ	0xFF0
 26485                           indf0	equ	0xFEF
 26486                           postinc0	equ	0xFEE
 26487                           plusw0	equ	0xFEB
 26488                           fsr0h	equ	0xFEA
 26489                           fsr0l	equ	0xFE9
 26490                           wreg	equ	0xFE8
 26491                           indf1	equ	0xFE7
 26492                           postinc1	equ	0xFE6
 26493                           postdec1	equ	0xFE5
 26494                           fsr1h	equ	0xFE2
 26495                           fsr1l	equ	0xFE1
 26496                           indf2	equ	0xFDF
 26497                           postinc2	equ	0xFDE
 26498                           postdec2	equ	0xFDD
 26499                           plusw2	equ	0xFDB
 26500                           fsr2h	equ	0xFDA
 26501                           fsr2l	equ	0xFD9
 26502                           status	equ	0xFD8
 26503                           
 26504 ;; *************** function _StopCondition *****************
 26505 ;; Defined at:
 26506 ;;		line 120 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26507 ;; Parameters:    Size  Location     Type
 26508 ;;		None
 26509 ;; Auto vars:     Size  Location     Type
 26510 ;;		None
 26511 ;; Return value:  Size  Location     Type
 26512 ;;                  1    wreg      void 
 26513 ;; Registers used:
 26514 ;;		status,2, status,0
 26515 ;; Tracked objects:
 26516 ;;		On entry : 0/0
 26517 ;;		On exit  : 0/0
 26518 ;;		Unchanged: 0/0
 26519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26524 ;;Total ram usage:        0 bytes
 26525 ;; Hardware stack levels used:    1
 26526 ;; Hardware stack levels required when called:   11
 26527 ;; This function calls:
 26528 ;;		Nothing
 26529 ;; This function is called by:
 26530 ;;		_I2c_WriteData
 26531 ;;		_I2c_ReadData
 26532 ;; This function uses a non-reentrant model
 26533 ;;
 26534                           
 26535                           	psect	text126
 26536  0000'                    __ptext126:
 26537                           	opt stack 0
 26538  0000'                    _StopCondition:
 26539                           	opt stack 14
 26540                           
 26541                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 26542                           
 26543                           ;incstack = 0
 26544  0000' 8471               	bsf	3953,2,c	;volatile
 26545  0002' 0012               	return		;funcret
 26546  0004'                    __end_of_StopCondition:
 26547                           	opt stack 0
 26548                           tosu	equ	0xFFF
 26549                           tosh	equ	0xFFE
 26550                           tosl	equ	0xFFD
 26551                           pclath	equ	0xFFA
 26552                           tblptru	equ	0xFF8
 26553                           tblptrh	equ	0xFF7
 26554                           tblptrl	equ	0xFF6
 26555                           tablat	equ	0xFF5
 26556                           prodh	equ	0xFF4
 26557                           prodl	equ	0xFF3
 26558                           intcon	equ	0xFF2
 26559                           intcon2	equ	0xFF1
 26560                           intcon3	equ	0xFF0
 26561                           indf0	equ	0xFEF
 26562                           postinc0	equ	0xFEE
 26563                           plusw0	equ	0xFEB
 26564                           fsr0h	equ	0xFEA
 26565                           fsr0l	equ	0xFE9
 26566                           wreg	equ	0xFE8
 26567                           indf1	equ	0xFE7
 26568                           postinc1	equ	0xFE6
 26569                           postdec1	equ	0xFE5
 26570                           fsr1h	equ	0xFE2
 26571                           fsr1l	equ	0xFE1
 26572                           indf2	equ	0xFDF
 26573                           postinc2	equ	0xFDE
 26574                           postdec2	equ	0xFDD
 26575                           plusw2	equ	0xFDB
 26576                           fsr2h	equ	0xFDA
 26577                           fsr2l	equ	0xFD9
 26578                           status	equ	0xFD8
 26579                           
 26580 ;; *************** function _StartCondition *****************
 26581 ;; Defined at:
 26582 ;;		line 92 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26583 ;; Parameters:    Size  Location     Type
 26584 ;;		None
 26585 ;; Auto vars:     Size  Location     Type
 26586 ;;		None
 26587 ;; Return value:  Size  Location     Type
 26588 ;;                  1    wreg      void 
 26589 ;; Registers used:
 26590 ;;		status,2, status,0
 26591 ;; Tracked objects:
 26592 ;;		On entry : 0/0
 26593 ;;		On exit  : 0/0
 26594 ;;		Unchanged: 0/0
 26595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26600 ;;Total ram usage:        0 bytes
 26601 ;; Hardware stack levels used:    1
 26602 ;; Hardware stack levels required when called:   11
 26603 ;; This function calls:
 26604 ;;		Nothing
 26605 ;; This function is called by:
 26606 ;;		_I2c_WriteData
 26607 ;;		_I2c_ReadData
 26608 ;; This function uses a non-reentrant model
 26609 ;;
 26610                           
 26611                           	psect	text127
 26612  0000'                    __ptext127:
 26613                           	opt stack 0
 26614  0000'                    _StartCondition:
 26615                           	opt stack 14
 26616                           
 26617                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 26618                           
 26619                           ;incstack = 0
 26620  0000' 8071               	bsf	3953,0,c	;volatile
 26621  0002' 0012               	return		;funcret
 26622  0004'                    __end_of_StartCondition:
 26623                           	opt stack 0
 26624                           tosu	equ	0xFFF
 26625                           tosh	equ	0xFFE
 26626                           tosl	equ	0xFFD
 26627                           pclath	equ	0xFFA
 26628                           tblptru	equ	0xFF8
 26629                           tblptrh	equ	0xFF7
 26630                           tblptrl	equ	0xFF6
 26631                           tablat	equ	0xFF5
 26632                           prodh	equ	0xFF4
 26633                           prodl	equ	0xFF3
 26634                           intcon	equ	0xFF2
 26635                           intcon2	equ	0xFF1
 26636                           intcon3	equ	0xFF0
 26637                           indf0	equ	0xFEF
 26638                           postinc0	equ	0xFEE
 26639                           plusw0	equ	0xFEB
 26640                           fsr0h	equ	0xFEA
 26641                           fsr0l	equ	0xFE9
 26642                           wreg	equ	0xFE8
 26643                           indf1	equ	0xFE7
 26644                           postinc1	equ	0xFE6
 26645                           postdec1	equ	0xFE5
 26646                           fsr1h	equ	0xFE2
 26647                           fsr1l	equ	0xFE1
 26648                           indf2	equ	0xFDF
 26649                           postinc2	equ	0xFDE
 26650                           postdec2	equ	0xFDD
 26651                           plusw2	equ	0xFDB
 26652                           fsr2h	equ	0xFDA
 26653                           fsr2l	equ	0xFD9
 26654                           status	equ	0xFD8
 26655                           
 26656 ;; *************** function _SetAckStatus *****************
 26657 ;; Defined at:
 26658 ;;		line 162 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26659 ;; Parameters:    Size  Location     Type
 26660 ;;  AckSts          1    wreg     unsigned char 
 26661 ;; Auto vars:     Size  Location     Type
 26662 ;;  AckSts          1    0[BANK0 ] unsigned char 
 26663 ;; Return value:  Size  Location     Type
 26664 ;;                  1    wreg      void 
 26665 ;; Registers used:
 26666 ;;		wreg
 26667 ;; Tracked objects:
 26668 ;;		On entry : 0/0
 26669 ;;		On exit  : 0/0
 26670 ;;		Unchanged: 0/0
 26671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26675 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26676 ;;Total ram usage:        1 bytes
 26677 ;; Hardware stack levels used:    1
 26678 ;; Hardware stack levels required when called:   11
 26679 ;; This function calls:
 26680 ;;		Nothing
 26681 ;; This function is called by:
 26682 ;;		_I2c_ReadData
 26683 ;; This function uses a non-reentrant model
 26684 ;;
 26685                           
 26686                           	psect	text128
 26687  0000'                    __ptext128:
 26688                           	opt stack 0
 26689  0000'                    _SetAckStatus:
 26690                           	opt stack 14
 26691                           
 26692                           ;incstack = 0
 26693                           ;SetAckStatus@AckSts stored from wreg
 26694  0000' 0100               	movlb	0	; () banked
 26695  0002' 6F00'              	movwf	SetAckStatus@AckSts& (0+255),b
 26696                           
 26697                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 26698  0004' 0100               	movlb	0	; () banked
 26699  0006' B100'              	btfsc	SetAckStatus@AckSts& (0+255),0,b
 26700  0008' D002               	bra	u5335
 26701  000A' 9A71               	bcf	3953,5,c	;volatile
 26702  000C' D001               	bra	u5336
 26703  000E'                    u5335:
 26704  000E' 8A71               	bsf	3953,5,c	;volatile
 26705  0010'                    u5336:
 26706                           
 26707                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 26708  0010' 8871               	bsf	3953,4,c	;volatile
 26709  0012' 0012               	return		;funcret
 26710  0014'                    __end_of_SetAckStatus:
 26711                           	opt stack 0
 26712                           tosu	equ	0xFFF
 26713                           tosh	equ	0xFFE
 26714                           tosl	equ	0xFFD
 26715                           pclath	equ	0xFFA
 26716                           tblptru	equ	0xFF8
 26717                           tblptrh	equ	0xFF7
 26718                           tblptrl	equ	0xFF6
 26719                           tablat	equ	0xFF5
 26720                           prodh	equ	0xFF4
 26721                           prodl	equ	0xFF3
 26722                           intcon	equ	0xFF2
 26723                           intcon2	equ	0xFF1
 26724                           intcon3	equ	0xFF0
 26725                           indf0	equ	0xFEF
 26726                           postinc0	equ	0xFEE
 26727                           plusw0	equ	0xFEB
 26728                           fsr0h	equ	0xFEA
 26729                           fsr0l	equ	0xFE9
 26730                           wreg	equ	0xFE8
 26731                           indf1	equ	0xFE7
 26732                           postinc1	equ	0xFE6
 26733                           postdec1	equ	0xFE5
 26734                           fsr1h	equ	0xFE2
 26735                           fsr1l	equ	0xFE1
 26736                           indf2	equ	0xFDF
 26737                           postinc2	equ	0xFDE
 26738                           postdec2	equ	0xFDD
 26739                           plusw2	equ	0xFDB
 26740                           fsr2h	equ	0xFDA
 26741                           fsr2l	equ	0xFD9
 26742                           status	equ	0xFD8
 26743                           
 26744 ;; *************** function _ReadByte *****************
 26745 ;; Defined at:
 26746 ;;		line 204 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26747 ;; Parameters:    Size  Location     Type
 26748 ;;		None
 26749 ;; Auto vars:     Size  Location     Type
 26750 ;;  Byte            1    0[BANK0 ] unsigned char 
 26751 ;; Return value:  Size  Location     Type
 26752 ;;                  1    wreg      unsigned char 
 26753 ;; Registers used:
 26754 ;;		wreg, status,2
 26755 ;; Tracked objects:
 26756 ;;		On entry : 0/0
 26757 ;;		On exit  : 0/0
 26758 ;;		Unchanged: 0/0
 26759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26763 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26764 ;;Total ram usage:        1 bytes
 26765 ;; Hardware stack levels used:    1
 26766 ;; Hardware stack levels required when called:   11
 26767 ;; This function calls:
 26768 ;;		Nothing
 26769 ;; This function is called by:
 26770 ;;		_I2c_ReadData
 26771 ;; This function uses a non-reentrant model
 26772 ;;
 26773                           
 26774                           	psect	text129
 26775  0000'                    __ptext129:
 26776                           	opt stack 0
 26777  0000'                    _ReadByte:
 26778                           	opt stack 14
 26779                           
 26780                           ;i2c_drv.c: 207: UINT8 Byte;
 26781                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 26782                           
 26783                           ;incstack = 0
 26784  0000' CF75 F000'         	movff	3957,ReadByte@Byte	;volatile
 26785                           
 26786                           ;i2c_drv.c: 213: return Byte;
 26787  0004' 0100               	movlb	0	; () banked
 26788  0006' 5100'              	movf	ReadByte@Byte& (0+255),w,b
 26789  0008' 0012               	return	
 26790  000A'                    __end_of_ReadByte:
 26791                           	opt stack 0
 26792                           tosu	equ	0xFFF
 26793                           tosh	equ	0xFFE
 26794                           tosl	equ	0xFFD
 26795                           pclath	equ	0xFFA
 26796                           tblptru	equ	0xFF8
 26797                           tblptrh	equ	0xFF7
 26798                           tblptrl	equ	0xFF6
 26799                           tablat	equ	0xFF5
 26800                           prodh	equ	0xFF4
 26801                           prodl	equ	0xFF3
 26802                           intcon	equ	0xFF2
 26803                           intcon2	equ	0xFF1
 26804                           intcon3	equ	0xFF0
 26805                           indf0	equ	0xFEF
 26806                           postinc0	equ	0xFEE
 26807                           plusw0	equ	0xFEB
 26808                           fsr0h	equ	0xFEA
 26809                           fsr0l	equ	0xFE9
 26810                           wreg	equ	0xFE8
 26811                           indf1	equ	0xFE7
 26812                           postinc1	equ	0xFE6
 26813                           postdec1	equ	0xFE5
 26814                           fsr1h	equ	0xFE2
 26815                           fsr1l	equ	0xFE1
 26816                           indf2	equ	0xFDF
 26817                           postinc2	equ	0xFDE
 26818                           postdec2	equ	0xFDD
 26819                           plusw2	equ	0xFDB
 26820                           fsr2h	equ	0xFDA
 26821                           fsr2l	equ	0xFD9
 26822                           status	equ	0xFD8
 26823                           
 26824 ;; *************** function _GenerateEvt *****************
 26825 ;; Defined at:
 26826 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 26827 ;; Parameters:    Size  Location     Type
 26828 ;;  Event           2    0[BANK0 ] PTR struct EventStructur
 26829 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 26830 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 26831 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(203), 
 26832 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 26833 ;; Auto vars:     Size  Location     Type
 26834 ;;  EventStatus     1    2[BANK0 ] enum E7721
 26835 ;; Return value:  Size  Location     Type
 26836 ;;                  1    wreg      enum E7693
 26837 ;; Registers used:
 26838 ;;		wreg, fsr2l, fsr2h, status,2
 26839 ;; Tracked objects:
 26840 ;;		On entry : 0/0
 26841 ;;		On exit  : 0/0
 26842 ;;		Unchanged: 0/0
 26843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26844 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26845 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26847 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26848 ;;Total ram usage:        3 bytes
 26849 ;; Hardware stack levels used:    1
 26850 ;; Hardware stack levels required when called:   11
 26851 ;; This function calls:
 26852 ;;		Nothing
 26853 ;; This function is called by:
 26854 ;;		_I2c_ReadData
 26855 ;;		_MdmWifi_StartWifiModemSm
 26856 ;;		_MdmWifiGetUartData
 26857 ;;		_MdmWifiEvtParser
 26858 ;;		_ReceiveDataSm
 26859 ;;		_I2cSlv_SendI2cMsg
 26860 ;;		_I2cSlv_ReceiveI2cMsg
 26861 ;;		_MdmWifi_RestartModem
 26862 ;;		_MdmWifiCmd_StartConnection
 26863 ;;		_MdmWifiCmd_SendData
 26864 ;;		_Alarm
 26865 ;; This function uses a non-reentrant model
 26866 ;;
 26867                           
 26868                           	psect	text130
 26869  0000'                    __ptext130:
 26870                           	opt stack 0
 26871  0000'                    _GenerateEvt:
 26872                           	opt stack 13
 26873                           
 26874                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 26875                           
 26876                           ; BSR set to: 0
 26877                           ;incstack = 0
 26878  0000' 0E00               	movlw	0
 26879  0002' 0100               	movlb	0	; () banked
 26880  0004' 6F00'              	movwf	GenerateEvt@EventStatus& (0+255),b
 26881                           
 26882                           ; BSR set to: 0
 26883                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 26884  0006' C000' FFD9         	movff	GenerateEvt@Event,fsr2l
 26885  000A' C001' FFDA         	movff	GenerateEvt@Event+1,fsr2h
 26886  000E' 0E02               	movlw	2
 26887  0010' 6EDF               	movwf	indf2,c
 26888                           
 26889                           ; BSR set to: 0
 26890                           ;os_ser.c: 81: EventStatus = EventSent;
 26891  0012' 0E02               	movlw	2
 26892  0014' 6F00'              	movwf	GenerateEvt@EventStatus& (0+255),b
 26893  0016' 0012               	return	
 26894  0018'                    __end_of_GenerateEvt:
 26895                           	opt stack 0
 26896                           tosu	equ	0xFFF
 26897                           tosh	equ	0xFFE
 26898                           tosl	equ	0xFFD
 26899                           pclath	equ	0xFFA
 26900                           tblptru	equ	0xFF8
 26901                           tblptrh	equ	0xFF7
 26902                           tblptrl	equ	0xFF6
 26903                           tablat	equ	0xFF5
 26904                           prodh	equ	0xFF4
 26905                           prodl	equ	0xFF3
 26906                           intcon	equ	0xFF2
 26907                           intcon2	equ	0xFF1
 26908                           intcon3	equ	0xFF0
 26909                           indf0	equ	0xFEF
 26910                           postinc0	equ	0xFEE
 26911                           plusw0	equ	0xFEB
 26912                           fsr0h	equ	0xFEA
 26913                           fsr0l	equ	0xFE9
 26914                           wreg	equ	0xFE8
 26915                           indf1	equ	0xFE7
 26916                           postinc1	equ	0xFE6
 26917                           postdec1	equ	0xFE5
 26918                           fsr1h	equ	0xFE2
 26919                           fsr1l	equ	0xFE1
 26920                           indf2	equ	0xFDF
 26921                           postinc2	equ	0xFDE
 26922                           postdec2	equ	0xFDD
 26923                           plusw2	equ	0xFDB
 26924                           fsr2h	equ	0xFDA
 26925                           fsr2l	equ	0xFD9
 26926                           status	equ	0xFD8
 26927                           
 26928 ;; *************** function _EnableReceiver *****************
 26929 ;; Defined at:
 26930 ;;		line 177 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 26931 ;; Parameters:    Size  Location     Type
 26932 ;;		None
 26933 ;; Auto vars:     Size  Location     Type
 26934 ;;		None
 26935 ;; Return value:  Size  Location     Type
 26936 ;;                  1    wreg      void 
 26937 ;; Registers used:
 26938 ;;		status,2, status,0
 26939 ;; Tracked objects:
 26940 ;;		On entry : 0/0
 26941 ;;		On exit  : 0/0
 26942 ;;		Unchanged: 0/0
 26943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 26944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 26948 ;;Total ram usage:        0 bytes
 26949 ;; Hardware stack levels used:    1
 26950 ;; Hardware stack levels required when called:   11
 26951 ;; This function calls:
 26952 ;;		Nothing
 26953 ;; This function is called by:
 26954 ;;		_I2c_ReadData
 26955 ;; This function uses a non-reentrant model
 26956 ;;
 26957                           
 26958                           	psect	text131
 26959  0000'                    __ptext131:
 26960                           	opt stack 0
 26961  0000'                    _EnableReceiver:
 26962                           	opt stack 14
 26963                           
 26964                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 26965                           
 26966                           ; BSR set to: 0
 26967                           ;incstack = 0
 26968  0000' 8671               	bsf	3953,3,c	;volatile
 26969  0002' 0012               	return		;funcret
 26970  0004'                    __end_of_EnableReceiver:
 26971                           	opt stack 0
 26972                           tosu	equ	0xFFF
 26973                           tosh	equ	0xFFE
 26974                           tosl	equ	0xFFD
 26975                           pclath	equ	0xFFA
 26976                           tblptru	equ	0xFF8
 26977                           tblptrh	equ	0xFF7
 26978                           tblptrl	equ	0xFF6
 26979                           tablat	equ	0xFF5
 26980                           prodh	equ	0xFF4
 26981                           prodl	equ	0xFF3
 26982                           intcon	equ	0xFF2
 26983                           intcon2	equ	0xFF1
 26984                           intcon3	equ	0xFF0
 26985                           indf0	equ	0xFEF
 26986                           postinc0	equ	0xFEE
 26987                           plusw0	equ	0xFEB
 26988                           fsr0h	equ	0xFEA
 26989                           fsr0l	equ	0xFE9
 26990                           wreg	equ	0xFE8
 26991                           indf1	equ	0xFE7
 26992                           postinc1	equ	0xFE6
 26993                           postdec1	equ	0xFE5
 26994                           fsr1h	equ	0xFE2
 26995                           fsr1l	equ	0xFE1
 26996                           indf2	equ	0xFDF
 26997                           postinc2	equ	0xFDE
 26998                           postdec2	equ	0xFDD
 26999                           plusw2	equ	0xFDB
 27000                           fsr2h	equ	0xFDA
 27001                           fsr2l	equ	0xFD9
 27002                           status	equ	0xFD8
 27003                           
 27004 ;; *************** function _CheckTxStatus *****************
 27005 ;; Defined at:
 27006 ;;		line 148 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 27007 ;; Parameters:    Size  Location     Type
 27008 ;;		None
 27009 ;; Auto vars:     Size  Location     Type
 27010 ;;		None
 27011 ;; Return value:  Size  Location     Type
 27012 ;;                  1    wreg      unsigned char 
 27013 ;; Registers used:
 27014 ;;		wreg, status,2, status,0
 27015 ;; Tracked objects:
 27016 ;;		On entry : 0/0
 27017 ;;		On exit  : 0/0
 27018 ;;		Unchanged: 0/0
 27019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27023 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27024 ;;Total ram usage:        0 bytes
 27025 ;; Hardware stack levels used:    1
 27026 ;; Hardware stack levels required when called:   11
 27027 ;; This function calls:
 27028 ;;		Nothing
 27029 ;; This function is called by:
 27030 ;;		_I2c_WriteData
 27031 ;;		_I2c_ReadData
 27032 ;; This function uses a non-reentrant model
 27033 ;;
 27034                           
 27035                           	psect	text132
 27036  0000'                    __ptext132:
 27037                           	opt stack 0
 27038  0000'                    _CheckTxStatus:
 27039                           	opt stack 14
 27040                           
 27041                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 27042                           
 27043                           ;incstack = 0
 27044  0000' 4073               	rrncf	3955,w,c	;volatile
 27045  0002' 42E8               	rrncf	wreg,f,c
 27046  0004' 0B3F               	andlw	63
 27047  0006' 0B01               	andlw	1
 27048  0008' 0012               	return	
 27049  000A'                    __end_of_CheckTxStatus:
 27050                           	opt stack 0
 27051                           tosu	equ	0xFFF
 27052                           tosh	equ	0xFFE
 27053                           tosl	equ	0xFFD
 27054                           pclath	equ	0xFFA
 27055                           tblptru	equ	0xFF8
 27056                           tblptrh	equ	0xFF7
 27057                           tblptrl	equ	0xFF6
 27058                           tablat	equ	0xFF5
 27059                           prodh	equ	0xFF4
 27060                           prodl	equ	0xFF3
 27061                           intcon	equ	0xFF2
 27062                           intcon2	equ	0xFF1
 27063                           intcon3	equ	0xFF0
 27064                           indf0	equ	0xFEF
 27065                           postinc0	equ	0xFEE
 27066                           plusw0	equ	0xFEB
 27067                           fsr0h	equ	0xFEA
 27068                           fsr0l	equ	0xFE9
 27069                           wreg	equ	0xFE8
 27070                           indf1	equ	0xFE7
 27071                           postinc1	equ	0xFE6
 27072                           postdec1	equ	0xFE5
 27073                           fsr1h	equ	0xFE2
 27074                           fsr1l	equ	0xFE1
 27075                           indf2	equ	0xFDF
 27076                           postinc2	equ	0xFDE
 27077                           postdec2	equ	0xFDD
 27078                           plusw2	equ	0xFDB
 27079                           fsr2h	equ	0xFDA
 27080                           fsr2l	equ	0xFD9
 27081                           status	equ	0xFD8
 27082                           
 27083 ;; *************** function _CheckAckStatus *****************
 27084 ;; Defined at:
 27085 ;;		line 134 in file "../Source/c/01_Hal/02_Drv/i2c_drv.c"
 27086 ;; Parameters:    Size  Location     Type
 27087 ;;		None
 27088 ;; Auto vars:     Size  Location     Type
 27089 ;;		None
 27090 ;; Return value:  Size  Location     Type
 27091 ;;                  1    wreg      unsigned char 
 27092 ;; Registers used:
 27093 ;;		wreg, status,2, status,0
 27094 ;; Tracked objects:
 27095 ;;		On entry : 0/0
 27096 ;;		On exit  : 0/0
 27097 ;;		Unchanged: 0/0
 27098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27103 ;;Total ram usage:        0 bytes
 27104 ;; Hardware stack levels used:    1
 27105 ;; Hardware stack levels required when called:   11
 27106 ;; This function calls:
 27107 ;;		Nothing
 27108 ;; This function is called by:
 27109 ;;		_I2c_WriteData
 27110 ;;		_I2c_ReadData
 27111 ;; This function uses a non-reentrant model
 27112 ;;
 27113                           
 27114                           	psect	text133
 27115  0000'                    __ptext133:
 27116                           	opt stack 0
 27117  0000'                    _CheckAckStatus:
 27118                           	opt stack 14
 27119                           
 27120                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 27121                           
 27122                           ;incstack = 0
 27123  0000' 4471               	rlncf	3953,w,c	;volatile
 27124  0002' 46E8               	rlncf	wreg,f,c
 27125  0004' 0B03               	andlw	3
 27126  0006' 0B01               	andlw	1
 27127  0008' 0012               	return	
 27128  000A'                    __end_of_CheckAckStatus:
 27129                           	opt stack 0
 27130                           tosu	equ	0xFFF
 27131                           tosh	equ	0xFFE
 27132                           tosl	equ	0xFFD
 27133                           pclath	equ	0xFFA
 27134                           tblptru	equ	0xFF8
 27135                           tblptrh	equ	0xFF7
 27136                           tblptrl	equ	0xFF6
 27137                           tablat	equ	0xFF5
 27138                           prodh	equ	0xFF4
 27139                           prodl	equ	0xFF3
 27140                           intcon	equ	0xFF2
 27141                           intcon2	equ	0xFF1
 27142                           intcon3	equ	0xFF0
 27143                           indf0	equ	0xFEF
 27144                           postinc0	equ	0xFEE
 27145                           plusw0	equ	0xFEB
 27146                           fsr0h	equ	0xFEA
 27147                           fsr0l	equ	0xFE9
 27148                           wreg	equ	0xFE8
 27149                           indf1	equ	0xFE7
 27150                           postinc1	equ	0xFE6
 27151                           postdec1	equ	0xFE5
 27152                           fsr1h	equ	0xFE2
 27153                           fsr1l	equ	0xFE1
 27154                           indf2	equ	0xFDF
 27155                           postinc2	equ	0xFDE
 27156                           postdec2	equ	0xFDD
 27157                           plusw2	equ	0xFDB
 27158                           fsr2h	equ	0xFDA
 27159                           fsr2l	equ	0xFD9
 27160                           status	equ	0xFD8
 27161                           
 27162 ;; *************** function _LowPriorityIsr *****************
 27163 ;; Defined at:
 27164 ;;		line 236 in file "../Source/c/01_Hal/01_Sys/irq.c"
 27165 ;; Parameters:    Size  Location     Type
 27166 ;;		None
 27167 ;; Auto vars:     Size  Location     Type
 27168 ;;		None
 27169 ;; Return value:  Size  Location     Type
 27170 ;;                  1    wreg      void 
 27171 ;; Registers used:
 27172 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 27173 ;; Tracked objects:
 27174 ;;		On entry : 0/0
 27175 ;;		On exit  : 0/0
 27176 ;;		Unchanged: 0/0
 27177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27180 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27181 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27182 ;;Total ram usage:       21 bytes
 27183 ;; Hardware stack levels used:    1
 27184 ;; Hardware stack levels required when called:   10
 27185 ;; This function calls:
 27186 ;;		_Tmr_Tmr2Isr
 27187 ;; This function is called by:
 27188 ;;		Interrupt level 1
 27189 ;; This function uses a non-reentrant model
 27190 ;;
 27191                           
 27192                           	psect	intcodelo
 27193  0000'                    __pintcodelo:
 27194                           	opt stack 0
 27195  0000'                    _LowPriorityIsr:
 27196                           	opt stack 8
 27197                           
 27198                           ;incstack = 0
 27199  0000' 8000'              	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 27200  0002' CFD8 F028'         	movff	status,??_LowPriorityIsr
 27201  0006' CFE8 F029'         	movff	wreg,??_LowPriorityIsr+1
 27202  000A' CFE0 F02A'         	movff	bsr,??_LowPriorityIsr+2
 27203  000E' CFFA F02B'         	movff	pclath,??_LowPriorityIsr+3
 27204  0012' CFFB F02C'         	movff	pclatu,??_LowPriorityIsr+4
 27205  0016' CFE9 F02D'         	movff	fsr0l,??_LowPriorityIsr+5
 27206  001A' CFEA F02E'         	movff	fsr0h,??_LowPriorityIsr+6
 27207  001E' CFE1 F02F'         	movff	fsr1l,??_LowPriorityIsr+7
 27208  0022' CFE2 F030'         	movff	fsr1h,??_LowPriorityIsr+8
 27209  0026' CFD9 F031'         	movff	fsr2l,??_LowPriorityIsr+9
 27210  002A' CFDA F032'         	movff	fsr2h,??_LowPriorityIsr+10
 27211  002E' CFF3 F033'         	movff	prodl,??_LowPriorityIsr+11
 27212  0032' CFF4 F034'         	movff	prodh,??_LowPriorityIsr+12
 27213  0036' CFF6 F035'         	movff	tblptrl,??_LowPriorityIsr+13
 27214  003A' CFF7 F036'         	movff	tblptrh,??_LowPriorityIsr+14
 27215  003E' CFF8 F037'         	movff	tblptru,??_LowPriorityIsr+15
 27216  0042' CFF5 F038'         	movff	tablat,??_LowPriorityIsr+16
 27217  0046' C000' F039'        	movff	btemp,??_LowPriorityIsr+17
 27218  004A' C001' F03A'        	movff	btemp+1,??_LowPriorityIsr+18
 27219  004E' C002' F03B'        	movff	btemp+2,??_LowPriorityIsr+19
 27220  0052' C003' F03C'        	movff	btemp+3,??_LowPriorityIsr+20
 27221                           
 27222                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 27223  0056' B29E               	btfsc	3998,1,c	;volatile
 27224                           
 27225                           ;irq.c: 259: {
 27226                           ;irq.c: 261: Tmr_Tmr2Isr();
 27227  0058' EC00' F000'        	call	_Tmr_Tmr2Isr	;wreg free
 27228  005C' C03C' F003'        	movff	??_LowPriorityIsr+20,btemp+3
 27229  0060' C03B' F002'        	movff	??_LowPriorityIsr+19,btemp+2
 27230  0064' C03A' F001'        	movff	??_LowPriorityIsr+18,btemp+1
 27231  0068' C039' F000'        	movff	??_LowPriorityIsr+17,btemp
 27232  006C' C038' FFF5         	movff	??_LowPriorityIsr+16,tablat
 27233  0070' C037' FFF8         	movff	??_LowPriorityIsr+15,tblptru
 27234  0074' C036' FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 27235  0078' C035' FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 27236  007C' C034' FFF4         	movff	??_LowPriorityIsr+12,prodh
 27237  0080' C033' FFF3         	movff	??_LowPriorityIsr+11,prodl
 27238  0084' C032' FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 27239  0088' C031' FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 27240  008C' C030' FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 27241  0090' C02F' FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 27242  0094' C02E' FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 27243  0098' C02D' FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 27244  009C' C02C' FFFB         	movff	??_LowPriorityIsr+4,pclatu
 27245  00A0' C02B' FFFA         	movff	??_LowPriorityIsr+3,pclath
 27246  00A4' C02A' FFE0         	movff	??_LowPriorityIsr+2,bsr
 27247  00A8' C029' FFE8         	movff	??_LowPriorityIsr+1,wreg
 27248  00AC' C028' FFD8         	movff	??_LowPriorityIsr,status
 27249  00B0' 9000'              	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 27250  00B2' 0010               	retfie	
 27251  00B4'                    __end_of_LowPriorityIsr:
 27252                           	opt stack 0
 27253                           tosu	equ	0xFFF
 27254                           tosh	equ	0xFFE
 27255                           tosl	equ	0xFFD
 27256                           pclatu	equ	0xFFB
 27257                           pclath	equ	0xFFA
 27258                           tblptru	equ	0xFF8
 27259                           tblptrh	equ	0xFF7
 27260                           tblptrl	equ	0xFF6
 27261                           tablat	equ	0xFF5
 27262                           prodh	equ	0xFF4
 27263                           prodl	equ	0xFF3
 27264                           intcon	equ	0xFF2
 27265                           intcon2	equ	0xFF1
 27266                           intcon3	equ	0xFF0
 27267                           indf0	equ	0xFEF
 27268                           postinc0	equ	0xFEE
 27269                           plusw0	equ	0xFEB
 27270                           fsr0h	equ	0xFEA
 27271                           fsr0l	equ	0xFE9
 27272                           wreg	equ	0xFE8
 27273                           indf1	equ	0xFE7
 27274                           postinc1	equ	0xFE6
 27275                           postdec1	equ	0xFE5
 27276                           fsr1h	equ	0xFE2
 27277                           fsr1l	equ	0xFE1
 27278                           bsr	equ	0xFE0
 27279                           indf2	equ	0xFDF
 27280                           postinc2	equ	0xFDE
 27281                           postdec2	equ	0xFDD
 27282                           plusw2	equ	0xFDB
 27283                           fsr2h	equ	0xFDA
 27284                           fsr2l	equ	0xFD9
 27285                           status	equ	0xFD8
 27286                           
 27287 ;; *************** function _Tmr_Tmr2Isr *****************
 27288 ;; Defined at:
 27289 ;;		line 308 in file "../Source/c/01_Hal/02_Drv/tmr_drv.c"
 27290 ;; Parameters:    Size  Location     Type
 27291 ;;		None
 27292 ;; Auto vars:     Size  Location     Type
 27293 ;;		None
 27294 ;; Return value:  Size  Location     Type
 27295 ;;                  1    wreg      void 
 27296 ;; Registers used:
 27297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 27298 ;; Tracked objects:
 27299 ;;		On entry : 0/0
 27300 ;;		On exit  : 0/0
 27301 ;;		Unchanged: 0/0
 27302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27307 ;;Total ram usage:        0 bytes
 27308 ;; Hardware stack levels used:    1
 27309 ;; Hardware stack levels required when called:    9
 27310 ;; This function calls:
 27311 ;;		Absolute function
 27312 ;;		_Sch_SchmIntService
 27313 ;; This function is called by:
 27314 ;;		_LowPriorityIsr
 27315 ;; This function uses a non-reentrant model
 27316 ;;
 27317                           
 27318                           	psect	text135
 27319  0000'                    __ptext135:
 27320                           	opt stack 0
 27321  0000'                    _Tmr_Tmr2Isr:
 27322                           	opt stack 8
 27323                           
 27324                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 27325                           
 27326                           ;incstack = 0
 27327  0000' 929E               	bcf	3998,1,c	;volatile
 27328                           
 27329                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 27330  0002' 0101               	movlb	1	; () banked
 27331  0004' 5100'              	movf	_Tmr2IsrCallback& (0+255),w,b
 27332  0006' 1100'              	iorwf	(_Tmr2IsrCallback+1)& (0+255),w,b
 27333  0008' B4D8               	btfsc	status,2,c
 27334  000A' 0012               	return	
 27335                           
 27336                           ; BSR set to: 1
 27337                           ;tmr_drv.c: 315: {
 27338                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 27339  000C' D801               	call	i1u806_28
 27340  000E' 0012               	return	
 27341  0010'                    i1u806_28:
 27342  0010' 0005               	push	
 27343  0012' 6EFA               	movwf	pclath,c
 27344  0014' 5100'              	movf	_Tmr2IsrCallback& (0+255),w,b
 27345  0016' 6EFD               	movwf	tosl,c
 27346  0018' 5100'              	movf	(_Tmr2IsrCallback+1)& (0+255),w,b
 27347  001A' 6EFE               	movwf	tosh,c
 27348  001C' 6AFF               	clrf	tosu,c
 27349  001E' 50FA               	movf	pclath,w,c
 27350  0020' 0012               	return		;indir
 27351  0022'                    __end_of_Tmr_Tmr2Isr:
 27352                           	opt stack 0
 27353                           tosu	equ	0xFFF
 27354                           tosh	equ	0xFFE
 27355                           tosl	equ	0xFFD
 27356                           pclatu	equ	0xFFB
 27357                           pclath	equ	0xFFA
 27358                           tblptru	equ	0xFF8
 27359                           tblptrh	equ	0xFF7
 27360                           tblptrl	equ	0xFF6
 27361                           tablat	equ	0xFF5
 27362                           prodh	equ	0xFF4
 27363                           prodl	equ	0xFF3
 27364                           intcon	equ	0xFF2
 27365                           intcon2	equ	0xFF1
 27366                           intcon3	equ	0xFF0
 27367                           indf0	equ	0xFEF
 27368                           postinc0	equ	0xFEE
 27369                           plusw0	equ	0xFEB
 27370                           fsr0h	equ	0xFEA
 27371                           fsr0l	equ	0xFE9
 27372                           wreg	equ	0xFE8
 27373                           indf1	equ	0xFE7
 27374                           postinc1	equ	0xFE6
 27375                           postdec1	equ	0xFE5
 27376                           fsr1h	equ	0xFE2
 27377                           fsr1l	equ	0xFE1
 27378                           bsr	equ	0xFE0
 27379                           indf2	equ	0xFDF
 27380                           postinc2	equ	0xFDE
 27381                           postdec2	equ	0xFDD
 27382                           plusw2	equ	0xFDB
 27383                           fsr2h	equ	0xFDA
 27384                           fsr2l	equ	0xFD9
 27385                           status	equ	0xFD8
 27386                           
 27387 ;; *************** function _Sch_SchmIntService *****************
 27388 ;; Defined at:
 27389 ;;		line 214 in file "../Source/c/02_Osl/os_sched.c"
 27390 ;; Parameters:    Size  Location     Type
 27391 ;;		None
 27392 ;; Auto vars:     Size  Location     Type
 27393 ;;		None
 27394 ;; Return value:  Size  Location     Type
 27395 ;;                  1    wreg      void 
 27396 ;; Registers used:
 27397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 27398 ;; Tracked objects:
 27399 ;;		On entry : 0/0
 27400 ;;		On exit  : 0/0
 27401 ;;		Unchanged: 0/0
 27402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27407 ;;Total ram usage:        0 bytes
 27408 ;; Hardware stack levels used:    1
 27409 ;; Hardware stack levels required when called:    8
 27410 ;; This function calls:
 27411 ;;		_OsAlrm_ProcessOsAlarms
 27412 ;;		_UpdateOsCounters
 27413 ;;		_UpdateSchFlag
 27414 ;; This function is called by:
 27415 ;;		_SystemInit
 27416 ;;		_Tmr_Tmr2Isr
 27417 ;; This function uses a non-reentrant model
 27418 ;;
 27419                           
 27420                           	psect	text136
 27421  0000'                    __ptext136:
 27422                           	opt stack 0
 27423  0000'                    _Sch_SchmIntService:
 27424                           	opt stack 8
 27425                           
 27426                           ;os_sched.c: 217: UpdateSchFlag();
 27427                           
 27428                           ;incstack = 0
 27429  0000' EC00' F000'        	call	_UpdateSchFlag	;wreg free
 27430                           
 27431                           ;os_sched.c: 219: UpdateOsCounters();
 27432  0004' EC00' F000'        	call	_UpdateOsCounters	;wreg free
 27433                           
 27434                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 27435  0008' EC00' F000'        	call	_OsAlrm_ProcessOsAlarms	;wreg free
 27436  000C' 0012               	return		;funcret
 27437  000E'                    __end_of_Sch_SchmIntService:
 27438                           	opt stack 0
 27439                           tosu	equ	0xFFF
 27440                           tosh	equ	0xFFE
 27441                           tosl	equ	0xFFD
 27442                           pclatu	equ	0xFFB
 27443                           pclath	equ	0xFFA
 27444                           tblptru	equ	0xFF8
 27445                           tblptrh	equ	0xFF7
 27446                           tblptrl	equ	0xFF6
 27447                           tablat	equ	0xFF5
 27448                           prodh	equ	0xFF4
 27449                           prodl	equ	0xFF3
 27450                           intcon	equ	0xFF2
 27451                           intcon2	equ	0xFF1
 27452                           intcon3	equ	0xFF0
 27453                           indf0	equ	0xFEF
 27454                           postinc0	equ	0xFEE
 27455                           plusw0	equ	0xFEB
 27456                           fsr0h	equ	0xFEA
 27457                           fsr0l	equ	0xFE9
 27458                           wreg	equ	0xFE8
 27459                           indf1	equ	0xFE7
 27460                           postinc1	equ	0xFE6
 27461                           postdec1	equ	0xFE5
 27462                           fsr1h	equ	0xFE2
 27463                           fsr1l	equ	0xFE1
 27464                           bsr	equ	0xFE0
 27465                           indf2	equ	0xFDF
 27466                           postinc2	equ	0xFDE
 27467                           postdec2	equ	0xFDD
 27468                           plusw2	equ	0xFDB
 27469                           fsr2h	equ	0xFDA
 27470                           fsr2l	equ	0xFD9
 27471                           status	equ	0xFD8
 27472                           
 27473 ;; *************** function _UpdateSchFlag *****************
 27474 ;; Defined at:
 27475 ;;		line 132 in file "../Source/c/02_Osl/os_sched.c"
 27476 ;; Parameters:    Size  Location     Type
 27477 ;;		None
 27478 ;; Auto vars:     Size  Location     Type
 27479 ;;		None
 27480 ;; Return value:  Size  Location     Type
 27481 ;;                  1    wreg      void 
 27482 ;; Registers used:
 27483 ;;		wreg, status,2, status,0
 27484 ;; Tracked objects:
 27485 ;;		On entry : 0/0
 27486 ;;		On exit  : 0/0
 27487 ;;		Unchanged: 0/0
 27488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27493 ;;Total ram usage:        0 bytes
 27494 ;; Hardware stack levels used:    1
 27495 ;; Hardware stack levels required when called:    4
 27496 ;; This function calls:
 27497 ;;		Nothing
 27498 ;; This function is called by:
 27499 ;;		_Sch_SchmIntService
 27500 ;; This function uses a non-reentrant model
 27501 ;;
 27502                           
 27503                           	psect	text137
 27504  0000'                    __ptext137:
 27505                           	opt stack 0
 27506  0000'                    _UpdateSchFlag:
 27507                           	opt stack 11
 27508                           
 27509                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 27510                           ;os_sched.c: 138: InterruptCounter++;
 27511                           
 27512                           ;incstack = 0
 27513  0000' 0102               	movlb	2	; () banked
 27514  0002' 4B00'              	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 27515  0004' 2B00'              	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 27516                           
 27517                           ; BSR set to: 2
 27518                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 27519  0006' 5100'              	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 27520  0008' 1100'              	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 27521  000A' B4D8               	btfsc	status,2,c
 27522  000C' 0012               	return	
 27523                           
 27524                           ; BSR set to: 2
 27525                           ;os_sched.c: 141: {
 27526                           ;os_sched.c: 143: InterruptCounter = 0;
 27527  000E' 0E00               	movlw	0
 27528  0010' 6F00'              	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 27529  0012' 0E00               	movlw	0
 27530  0014' 6F00'              	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 27531                           
 27532                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 27533  0016' 0E00               	movlw	0
 27534  0018' 0101               	movlb	1	; () banked
 27535  001A' 6F00'              	movwf	_MainSystemTimebaseFlag& (0+255),b
 27536  001C' 0012               	return	
 27537  001E'                    __end_of_UpdateSchFlag:
 27538                           	opt stack 0
 27539                           tosu	equ	0xFFF
 27540                           tosh	equ	0xFFE
 27541                           tosl	equ	0xFFD
 27542                           pclatu	equ	0xFFB
 27543                           pclath	equ	0xFFA
 27544                           tblptru	equ	0xFF8
 27545                           tblptrh	equ	0xFF7
 27546                           tblptrl	equ	0xFF6
 27547                           tablat	equ	0xFF5
 27548                           prodh	equ	0xFF4
 27549                           prodl	equ	0xFF3
 27550                           intcon	equ	0xFF2
 27551                           intcon2	equ	0xFF1
 27552                           intcon3	equ	0xFF0
 27553                           indf0	equ	0xFEF
 27554                           postinc0	equ	0xFEE
 27555                           plusw0	equ	0xFEB
 27556                           fsr0h	equ	0xFEA
 27557                           fsr0l	equ	0xFE9
 27558                           wreg	equ	0xFE8
 27559                           indf1	equ	0xFE7
 27560                           postinc1	equ	0xFE6
 27561                           postdec1	equ	0xFE5
 27562                           fsr1h	equ	0xFE2
 27563                           fsr1l	equ	0xFE1
 27564                           bsr	equ	0xFE0
 27565                           indf2	equ	0xFDF
 27566                           postinc2	equ	0xFDE
 27567                           postdec2	equ	0xFDD
 27568                           plusw2	equ	0xFDB
 27569                           fsr2h	equ	0xFDA
 27570                           fsr2l	equ	0xFD9
 27571                           status	equ	0xFD8
 27572                           
 27573 ;; *************** function _UpdateOsCounters *****************
 27574 ;; Defined at:
 27575 ;;		line 157 in file "../Source/c/02_Osl/os_sched.c"
 27576 ;; Parameters:    Size  Location     Type
 27577 ;;		None
 27578 ;; Auto vars:     Size  Location     Type
 27579 ;;		None
 27580 ;; Return value:  Size  Location     Type
 27581 ;;                  1    wreg      void 
 27582 ;; Registers used:
 27583 ;;		wreg, status,2, status,0
 27584 ;; Tracked objects:
 27585 ;;		On entry : 0/0
 27586 ;;		On exit  : 0/0
 27587 ;;		Unchanged: 0/0
 27588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27593 ;;Total ram usage:        0 bytes
 27594 ;; Hardware stack levels used:    1
 27595 ;; Hardware stack levels required when called:    4
 27596 ;; This function calls:
 27597 ;;		Nothing
 27598 ;; This function is called by:
 27599 ;;		_Sch_SchmIntService
 27600 ;; This function uses a non-reentrant model
 27601 ;;
 27602                           
 27603                           	psect	text138
 27604  0000'                    __ptext138:
 27605                           	opt stack 0
 27606  0000'                    _UpdateOsCounters:
 27607                           	opt stack 11
 27608                           
 27609                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 27610                           
 27611                           ;incstack = 0
 27612  0000' 0E01               	movlw	1
 27613  0002' 0103               	movlb	3	; () banked
 27614  0004' 2700'              	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 27615  0006' 0E00               	movlw	0
 27616  0008' 2300'              	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 27617  000A' 2300'              	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 27618  000C' 2300'              	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 27619                           
 27620                           ; BSR set to: 3
 27621  000E' 0012               	return		;funcret
 27622  0010'                    __end_of_UpdateOsCounters:
 27623                           	opt stack 0
 27624                           tosu	equ	0xFFF
 27625                           tosh	equ	0xFFE
 27626                           tosl	equ	0xFFD
 27627                           pclatu	equ	0xFFB
 27628                           pclath	equ	0xFFA
 27629                           tblptru	equ	0xFF8
 27630                           tblptrh	equ	0xFF7
 27631                           tblptrl	equ	0xFF6
 27632                           tablat	equ	0xFF5
 27633                           prodh	equ	0xFF4
 27634                           prodl	equ	0xFF3
 27635                           intcon	equ	0xFF2
 27636                           intcon2	equ	0xFF1
 27637                           intcon3	equ	0xFF0
 27638                           indf0	equ	0xFEF
 27639                           postinc0	equ	0xFEE
 27640                           plusw0	equ	0xFEB
 27641                           fsr0h	equ	0xFEA
 27642                           fsr0l	equ	0xFE9
 27643                           wreg	equ	0xFE8
 27644                           indf1	equ	0xFE7
 27645                           postinc1	equ	0xFE6
 27646                           postdec1	equ	0xFE5
 27647                           fsr1h	equ	0xFE2
 27648                           fsr1l	equ	0xFE1
 27649                           bsr	equ	0xFE0
 27650                           indf2	equ	0xFDF
 27651                           postinc2	equ	0xFDE
 27652                           postdec2	equ	0xFDD
 27653                           plusw2	equ	0xFDB
 27654                           fsr2h	equ	0xFDA
 27655                           fsr2l	equ	0xFD9
 27656                           status	equ	0xFD8
 27657                           
 27658 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 27659 ;; Defined at:
 27660 ;;		line 114 in file "../Source/c/02_Osl/os_alarms.c"
 27661 ;; Parameters:    Size  Location     Type
 27662 ;;		None
 27663 ;; Auto vars:     Size  Location     Type
 27664 ;;  AlarmIndex      2   38[COMRAM] unsigned short 
 27665 ;; Return value:  Size  Location     Type
 27666 ;;                  1    wreg      void 
 27667 ;; Registers used:
 27668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 27669 ;; Tracked objects:
 27670 ;;		On entry : 0/0
 27671 ;;		On exit  : 0/0
 27672 ;;		Unchanged: 0/0
 27673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27676 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27677 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27678 ;;Total ram usage:       10 bytes
 27679 ;; Hardware stack levels used:    1
 27680 ;; Hardware stack levels required when called:    7
 27681 ;; This function calls:
 27682 ;;		_I2cDummyTx
 27683 ;;		_OsAlrm_ClearOsAlarm
 27684 ;;		i1___wmul
 27685 ;; This function is called by:
 27686 ;;		_Sch_SchmIntService
 27687 ;; This function uses a non-reentrant model
 27688 ;;
 27689                           
 27690                           	psect	text139
 27691  0000'                    __ptext139:
 27692                           	opt stack 0
 27693  0000'                    _OsAlrm_ProcessOsAlarms:
 27694                           	opt stack 8
 27695                           
 27696                           ;os_alarms.c: 116: UINT16 AlarmIndex;
 27697                           ;os_alarms.c: 119: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 27698                           
 27699                           ; BSR set to: 3
 27700                           ;incstack = 0
 27701  0000' 0E00               	movlw	0
 27702  0002' 6E27'              	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 27703  0004' 0E00               	movlw	0
 27704  0006' 6E26'              	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 27705  0008' 5027'              	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 27706  000A' E105               	bnz	i1u781_20
 27707  000C' 0E14               	movlw	20
 27708  000E' 5C26'              	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 27709  0010' B0D8               	btfsc	status,0,c
 27710  0012' 0012               	return	
 27711  0014' D001               	goto	i1l673
 27712  0016'                    i1u781_20:
 27713  0016' 0012               	return	
 27714  0018'                    i1l673:
 27715                           
 27716                           ;os_alarms.c: 120: {
 27717                           ;os_alarms.c: 122: if (OsAlarms[AlarmIndex].Enabled == 1u)
 27718  0018' C026' F016'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27719  001C' C027' F017'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27720  0020' 0E00               	movlw	0
 27721  0022' 6E19'              	movwf	i1___wmul@multiplicand+1,c
 27722  0024' 0E0B               	movlw	11
 27723  0026' 6E18'              	movwf	i1___wmul@multiplicand,c
 27724  0028' EC00' F000'        	call	i1___wmul	;wreg free
 27725  002C' 0E00'              	movlw	low _OsAlarms
 27726  002E' 2416'              	addwf	?i1___wmul,w,c
 27727  0030' 6ED9               	movwf	fsr2l,c
 27728  0032' 0E00'              	movlw	high _OsAlarms
 27729  0034' 2017'              	addwfc	?i1___wmul+1,w,c
 27730  0036' 6EDA               	movwf	fsr2h,c
 27731  0038' 04DE               	decf	postinc2,w,c
 27732  003A' A4D8               	btfss	status,2,c
 27733  003C' D089               	goto	i1u785_29
 27734                           
 27735                           ;os_alarms.c: 123: {
 27736                           ;os_alarms.c: 125: OsAlarms[AlarmIndex].Counter++;
 27737  003E' C026' F016'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27738  0042' C027' F017'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27739  0046' 0E00               	movlw	0
 27740  0048' 6E19'              	movwf	i1___wmul@multiplicand+1,c
 27741  004A' 0E0B               	movlw	11
 27742  004C' 6E18'              	movwf	i1___wmul@multiplicand,c
 27743  004E' EC00' F000'        	call	i1___wmul	;wreg free
 27744  0052' 0E01               	movlw	1
 27745  0054' 2616'              	addwf	?i1___wmul,f,c
 27746  0056' 0E00               	movlw	0
 27747  0058' 2217'              	addwfc	?i1___wmul+1,f,c
 27748  005A' 0E00'              	movlw	low _OsAlarms
 27749  005C' 2416'              	addwf	?i1___wmul,w,c
 27750  005E' 6ED9               	movwf	fsr2l,c
 27751  0060' 0E00'              	movlw	high _OsAlarms
 27752  0062' 2017'              	addwfc	?i1___wmul+1,w,c
 27753  0064' 6EDA               	movwf	fsr2h,c
 27754  0066' 2ADE               	incf	postinc2,f,c
 27755  0068' 0E00               	movlw	0
 27756  006A' 22DE               	addwfc	postinc2,f,c
 27757  006C' 22DE               	addwfc	postinc2,f,c
 27758  006E' 22DE               	addwfc	postinc2,f,c
 27759                           
 27760                           ;os_alarms.c: 127: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 27761  0070' C026' F016'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27762  0074' C027' F017'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27763  0078' 0E00               	movlw	0
 27764  007A' 6E19'              	movwf	i1___wmul@multiplicand+1,c
 27765  007C' 0E0B               	movlw	11
 27766  007E' 6E18'              	movwf	i1___wmul@multiplicand,c
 27767  0080' EC00' F000'        	call	i1___wmul	;wreg free
 27768  0084' 0E05               	movlw	5
 27769  0086' 2616'              	addwf	?i1___wmul,f,c
 27770  0088' 0E00               	movlw	0
 27771  008A' 2217'              	addwfc	?i1___wmul+1,f,c
 27772  008C' 0E00'              	movlw	low _OsAlarms
 27773  008E' 2416'              	addwf	?i1___wmul,w,c
 27774  0090' 6ED9               	movwf	fsr2l,c
 27775  0092' 0E00'              	movlw	high _OsAlarms
 27776  0094' 2017'              	addwfc	?i1___wmul+1,w,c
 27777  0096' 6EDA               	movwf	fsr2h,c
 27778  0098' C026' F016'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27779  009C' C027' F017'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27780  00A0' 0E00               	movlw	0
 27781  00A2' 6E19'              	movwf	i1___wmul@multiplicand+1,c
 27782  00A4' 0E0B               	movlw	11
 27783  00A6' 6E18'              	movwf	i1___wmul@multiplicand,c
 27784  00A8' EC00' F000'        	call	i1___wmul	;wreg free
 27785  00AC' 0E01               	movlw	1
 27786  00AE' 2616'              	addwf	?i1___wmul,f,c
 27787  00B0' 0E00               	movlw	0
 27788  00B2' 2217'              	addwfc	?i1___wmul+1,f,c
 27789  00B4' 0E00'              	movlw	low _OsAlarms
 27790  00B6' 2416'              	addwf	?i1___wmul,w,c
 27791  00B8' 6EE1               	movwf	fsr1l,c
 27792  00BA' 0E00'              	movlw	high _OsAlarms
 27793  00BC' 2017'              	addwfc	?i1___wmul+1,w,c
 27794  00BE' 6EE2               	movwf	fsr1h,c
 27795  00C0' 50DE               	movf	postinc2,w,c
 27796  00C2' 5CE6               	subwf	postinc1,w,c
 27797  00C4' 50DE               	movf	postinc2,w,c
 27798  00C6' 58E6               	subwfb	postinc1,w,c
 27799  00C8' 50DE               	movf	postinc2,w,c
 27800  00CA' 58E6               	subwfb	postinc1,w,c
 27801  00CC' 50DE               	movf	postinc2,w,c
 27802  00CE' 58E6               	subwfb	postinc1,w,c
 27803  00D0' A0D8               	btfss	status,0,c
 27804  00D2' D03E               	goto	i1u785_29
 27805                           
 27806                           ;os_alarms.c: 128: {
 27807                           ;os_alarms.c: 130: OsAlrm_ClearOsAlarm(AlarmIndex);
 27808  00D4' 5026'              	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 27809  00D6' EC00' F000'        	call	_OsAlrm_ClearOsAlarm
 27810                           
 27811                           ;os_alarms.c: 132: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 27812  00DA' C026' F016'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27813  00DE' C027' F017'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27814  00E2' 0E00               	movlw	0
 27815  00E4' 6E19'              	movwf	i1___wmul@multiplicand+1,c
 27816  00E6' 0E0B               	movlw	11
 27817  00E8' 6E18'              	movwf	i1___wmul@multiplicand,c
 27818  00EA' EC00' F000'        	call	i1___wmul	;wreg free
 27819  00EE' 0E09               	movlw	9
 27820  00F0' 2616'              	addwf	?i1___wmul,f,c
 27821  00F2' 0E00               	movlw	0
 27822  00F4' 2217'              	addwfc	?i1___wmul+1,f,c
 27823  00F6' 0E00'              	movlw	low _OsAlarms
 27824  00F8' 2416'              	addwf	?i1___wmul,w,c
 27825  00FA' 6ED9               	movwf	fsr2l,c
 27826  00FC' 0E00'              	movlw	high _OsAlarms
 27827  00FE' 2017'              	addwfc	?i1___wmul+1,w,c
 27828  0100' 6EDA               	movwf	fsr2h,c
 27829  0102' 50DE               	movf	postinc2,w,c
 27830  0104' 10DE               	iorwf	postinc2,w,c
 27831  0106' B4D8               	btfsc	status,2,c
 27832  0108' D023               	goto	i1u785_29
 27833                           
 27834                           ;os_alarms.c: 133: {
 27835                           ;os_alarms.c: 135: OsAlarms[AlarmIndex].AlrmCbk();
 27836  010A' C026' F016'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 27837  010E' C027' F017'        	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 27838  0112' 0E00               	movlw	0
 27839  0114' 6E19'              	movwf	i1___wmul@multiplicand+1,c
 27840  0116' 0E0B               	movlw	11
 27841  0118' 6E18'              	movwf	i1___wmul@multiplicand,c
 27842  011A' EC00' F000'        	call	i1___wmul	;wreg free
 27843  011E' 0E09               	movlw	9
 27844  0120' 2616'              	addwf	?i1___wmul,f,c
 27845  0122' 0E00               	movlw	0
 27846  0124' 2217'              	addwfc	?i1___wmul+1,f,c
 27847  0126' 0E00'              	movlw	low _OsAlarms
 27848  0128' 2416'              	addwf	?i1___wmul,w,c
 27849  012A' 6ED9               	movwf	fsr2l,c
 27850  012C' 0E00'              	movlw	high _OsAlarms
 27851  012E' 2017'              	addwfc	?i1___wmul+1,w,c
 27852  0130' 6EDA               	movwf	fsr2h,c
 27853  0132' CFDE F01E'         	movff	postinc2,??_OsAlrm_ProcessOsAlarms
 27854  0136' CFDD F01F'         	movff	postdec2,??_OsAlrm_ProcessOsAlarms+1
 27855  013A' D801               	call	i1u785_28
 27856  013C' D009               	goto	i1u785_29
 27857  013E'                    i1u785_28:
 27858  013E' 0005               	push	
 27859  0140' 6EFA               	movwf	pclath,c
 27860  0142' 501E'              	movf	??_OsAlrm_ProcessOsAlarms,w,c
 27861  0144' 6EFD               	movwf	tosl,c
 27862  0146' 501F'              	movf	??_OsAlrm_ProcessOsAlarms+1,w,c
 27863  0148' 6EFE               	movwf	tosh,c
 27864  014A' 6AFF               	clrf	tosu,c
 27865  014C' 50FA               	movf	pclath,w,c
 27866  014E' 0012               	return		;indir
 27867  0150'                    i1u785_29:
 27868  0150' 4A26'              	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 27869  0152' 2A27'              	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 27870  0154' 5027'              	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 27871  0156' E101               	bnz	i1l678
 27872  0158' D759               	goto	L50
 27873  015A'                    i1l678:
 27874  015A' 0012               	return		;funcret
 27875  015C'                    __end_of_OsAlrm_ProcessOsAlarms:
 27876                           	opt stack 0
 27877                           tosu	equ	0xFFF
 27878                           tosh	equ	0xFFE
 27879                           tosl	equ	0xFFD
 27880                           pclatu	equ	0xFFB
 27881                           pclath	equ	0xFFA
 27882                           tblptru	equ	0xFF8
 27883                           tblptrh	equ	0xFF7
 27884                           tblptrl	equ	0xFF6
 27885                           tablat	equ	0xFF5
 27886                           prodh	equ	0xFF4
 27887                           prodl	equ	0xFF3
 27888                           intcon	equ	0xFF2
 27889                           intcon2	equ	0xFF1
 27890                           intcon3	equ	0xFF0
 27891                           indf0	equ	0xFEF
 27892                           postinc0	equ	0xFEE
 27893                           plusw0	equ	0xFEB
 27894                           fsr0h	equ	0xFEA
 27895                           fsr0l	equ	0xFE9
 27896                           wreg	equ	0xFE8
 27897                           indf1	equ	0xFE7
 27898                           postinc1	equ	0xFE6
 27899                           postdec1	equ	0xFE5
 27900                           fsr1h	equ	0xFE2
 27901                           fsr1l	equ	0xFE1
 27902                           bsr	equ	0xFE0
 27903                           indf2	equ	0xFDF
 27904                           postinc2	equ	0xFDE
 27905                           postdec2	equ	0xFDD
 27906                           plusw2	equ	0xFDB
 27907                           fsr2h	equ	0xFDA
 27908                           fsr2l	equ	0xFD9
 27909                           status	equ	0xFD8
 27910                           
 27911 ;; *************** function i1___wmul *****************
 27912 ;; Defined at:
 27913 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 27914 ;; Parameters:    Size  Location     Type
 27915 ;;  multiplier      2   22[COMRAM] unsigned int 
 27916 ;;  multiplicand    2   24[COMRAM] unsigned int 
 27917 ;; Auto vars:     Size  Location     Type
 27918 ;;  __wmul          2   26[COMRAM] unsigned int 
 27919 ;; Return value:  Size  Location     Type
 27920 ;;                  2   22[COMRAM] unsigned int 
 27921 ;; Registers used:
 27922 ;;		wreg, status,2, status,0, prodl, prodh
 27923 ;; Tracked objects:
 27924 ;;		On entry : 0/0
 27925 ;;		On exit  : 0/0
 27926 ;;		Unchanged: 0/0
 27927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 27928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27929 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27931 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 27932 ;;Total ram usage:        6 bytes
 27933 ;; Hardware stack levels used:    1
 27934 ;; Hardware stack levels required when called:    4
 27935 ;; This function calls:
 27936 ;;		Nothing
 27937 ;; This function is called by:
 27938 ;;		_OsAlrm_ProcessOsAlarms
 27939 ;; This function uses a non-reentrant model
 27940 ;;
 27941                           
 27942                           	psect	text140
 27943  0000'                    __ptext140:
 27944                           	opt stack 0
 27945  0000'                    i1___wmul:
 27946                           	opt stack 10
 27947                           
 27948                           ;incstack = 0
 27949  0000' 5016'              	movf	i1___wmul@multiplier,w,c
 27950  0002' 0218'              	mulwf	i1___wmul@multiplicand,c
 27951  0004' CFF3 F01A'         	movff	prodl,i1___wmul@product
 27952  0008' CFF4 F01B'         	movff	prodh,i1___wmul@product+1
 27953  000C' 5016'              	movf	i1___wmul@multiplier,w,c
 27954  000E' 0219'              	mulwf	i1___wmul@multiplicand+1,c
 27955  0010' 50F3               	movf	prodl,w,c
 27956  0012' 261B'              	addwf	i1___wmul@product+1,f,c
 27957  0014' 5017'              	movf	i1___wmul@multiplier+1,w,c
 27958  0016' 0218'              	mulwf	i1___wmul@multiplicand,c
 27959  0018' 50F3               	movf	prodl,w,c
 27960  001A' 261B'              	addwf	i1___wmul@product+1,f,c
 27961  001C' C01A' F016'        	movff	i1___wmul@product,?i1___wmul
 27962  0020' C01B' F017'        	movff	i1___wmul@product+1,?i1___wmul+1
 27963  0024' 0012               	return	
 27964  0026'                    __end_ofi1___wmul:
 27965                           	opt stack 0
 27966                           tosu	equ	0xFFF
 27967                           tosh	equ	0xFFE
 27968                           tosl	equ	0xFFD
 27969                           pclatu	equ	0xFFB
 27970                           pclath	equ	0xFFA
 27971                           tblptru	equ	0xFF8
 27972                           tblptrh	equ	0xFF7
 27973                           tblptrl	equ	0xFF6
 27974                           tablat	equ	0xFF5
 27975                           prodh	equ	0xFF4
 27976                           prodl	equ	0xFF3
 27977                           intcon	equ	0xFF2
 27978                           intcon2	equ	0xFF1
 27979                           intcon3	equ	0xFF0
 27980                           indf0	equ	0xFEF
 27981                           postinc0	equ	0xFEE
 27982                           plusw0	equ	0xFEB
 27983                           fsr0h	equ	0xFEA
 27984                           fsr0l	equ	0xFE9
 27985                           wreg	equ	0xFE8
 27986                           indf1	equ	0xFE7
 27987                           postinc1	equ	0xFE6
 27988                           postdec1	equ	0xFE5
 27989                           fsr1h	equ	0xFE2
 27990                           fsr1l	equ	0xFE1
 27991                           bsr	equ	0xFE0
 27992                           indf2	equ	0xFDF
 27993                           postinc2	equ	0xFDE
 27994                           postdec2	equ	0xFDD
 27995                           plusw2	equ	0xFDB
 27996                           fsr2h	equ	0xFDA
 27997                           fsr2l	equ	0xFD9
 27998                           status	equ	0xFD8
 27999                           
 28000 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 28001 ;; Defined at:
 28002 ;;		line 96 in file "../Source/c/02_Osl/os_alarms.c"
 28003 ;; Parameters:    Size  Location     Type
 28004 ;;  OsAlarmId       1    wreg     unsigned char 
 28005 ;; Auto vars:     Size  Location     Type
 28006 ;;  OsAlarmId       1   22[COMRAM] unsigned char 
 28007 ;; Return value:  Size  Location     Type
 28008 ;;                  1    wreg      void 
 28009 ;; Registers used:
 28010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 28011 ;; Tracked objects:
 28012 ;;		On entry : 0/0
 28013 ;;		On exit  : 0/0
 28014 ;;		Unchanged: 0/0
 28015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28020 ;;Total ram usage:        1 bytes
 28021 ;; Hardware stack levels used:    1
 28022 ;; Hardware stack levels required when called:    4
 28023 ;; This function calls:
 28024 ;;		Nothing
 28025 ;; This function is called by:
 28026 ;;		_OsAlrm_ProcessOsAlarms
 28027 ;; This function uses a non-reentrant model
 28028 ;;
 28029                           
 28030                           	psect	text141
 28031  0000'                    __ptext141:
 28032                           	opt stack 0
 28033  0000'                    _OsAlrm_ClearOsAlarm:
 28034                           	opt stack 10
 28035                           
 28036                           ;incstack = 0
 28037                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 28038  0000' 6E16'              	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 28039                           
 28040                           ;os_alarms.c: 99: OsAlarms[OsAlarmId].Enabled = 0u;
 28041  0002' 5016'              	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 28042  0004' 0D0B               	mullw	11
 28043  0006' 0E00'              	movlw	low _OsAlarms
 28044  0008' 24F3               	addwf	prodl,w,c
 28045  000A' 6ED9               	movwf	fsr2l,c
 28046  000C' 0E00'              	movlw	high _OsAlarms
 28047  000E' 20F4               	addwfc	prodh,w,c
 28048  0010' 6EDA               	movwf	fsr2h,c
 28049  0012' 0E00               	movlw	0
 28050  0014' 6EDF               	movwf	indf2,c
 28051                           
 28052                           ;os_alarms.c: 101: OsAlarms[OsAlarmId].Counter = 0;
 28053  0016' 5016'              	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 28054  0018' 0D0B               	mullw	11
 28055  001A' 0E01               	movlw	1
 28056  001C' 26F3               	addwf	prodl,f,c
 28057  001E' 0E00               	movlw	0
 28058  0020' 22F4               	addwfc	prodh,f,c
 28059  0022' 0E00'              	movlw	low _OsAlarms
 28060  0024' 24F3               	addwf	prodl,w,c
 28061  0026' 6ED9               	movwf	fsr2l,c
 28062  0028' 0E00'              	movlw	high _OsAlarms
 28063  002A' 20F4               	addwfc	prodh,w,c
 28064  002C' 6EDA               	movwf	fsr2h,c
 28065  002E' 6ADE               	clrf	postinc2,c
 28066  0030' 6ADE               	clrf	postinc2,c
 28067  0032' 6ADE               	clrf	postinc2,c
 28068  0034' 6ADD               	clrf	postdec2,c
 28069                           
 28070                           ;os_alarms.c: 103: OsAlarms[OsAlarmId].AlarmTime = 0;
 28071  0036' 5016'              	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 28072  0038' 0D0B               	mullw	11
 28073  003A' 0E05               	movlw	5
 28074  003C' 26F3               	addwf	prodl,f,c
 28075  003E' 0E00               	movlw	0
 28076  0040' 22F4               	addwfc	prodh,f,c
 28077  0042' 0E00'              	movlw	low _OsAlarms
 28078  0044' 24F3               	addwf	prodl,w,c
 28079  0046' 6ED9               	movwf	fsr2l,c
 28080  0048' 0E00'              	movlw	high _OsAlarms
 28081  004A' 20F4               	addwfc	prodh,w,c
 28082  004C' 6EDA               	movwf	fsr2h,c
 28083  004E' 6ADE               	clrf	postinc2,c
 28084  0050' 6ADE               	clrf	postinc2,c
 28085  0052' 6ADE               	clrf	postinc2,c
 28086  0054' 6ADD               	clrf	postdec2,c
 28087  0056' 0012               	return		;funcret
 28088  0058'                    __end_of_OsAlrm_ClearOsAlarm:
 28089                           	opt stack 0
 28090                           tosu	equ	0xFFF
 28091                           tosh	equ	0xFFE
 28092                           tosl	equ	0xFFD
 28093                           pclatu	equ	0xFFB
 28094                           pclath	equ	0xFFA
 28095                           tblptru	equ	0xFF8
 28096                           tblptrh	equ	0xFF7
 28097                           tblptrl	equ	0xFF6
 28098                           tablat	equ	0xFF5
 28099                           prodh	equ	0xFF4
 28100                           prodl	equ	0xFF3
 28101                           intcon	equ	0xFF2
 28102                           intcon2	equ	0xFF1
 28103                           intcon3	equ	0xFF0
 28104                           indf0	equ	0xFEF
 28105                           postinc0	equ	0xFEE
 28106                           plusw0	equ	0xFEB
 28107                           fsr0h	equ	0xFEA
 28108                           fsr0l	equ	0xFE9
 28109                           wreg	equ	0xFE8
 28110                           indf1	equ	0xFE7
 28111                           postinc1	equ	0xFE6
 28112                           postdec1	equ	0xFE5
 28113                           fsr1h	equ	0xFE2
 28114                           fsr1l	equ	0xFE1
 28115                           bsr	equ	0xFE0
 28116                           indf2	equ	0xFDF
 28117                           postinc2	equ	0xFDE
 28118                           postdec2	equ	0xFDD
 28119                           plusw2	equ	0xFDB
 28120                           fsr2h	equ	0xFDA
 28121                           fsr2l	equ	0xFD9
 28122                           status	equ	0xFD8
 28123                           
 28124 ;; *************** function _I2cDummyTx *****************
 28125 ;; Defined at:
 28126 ;;		line 181 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 28127 ;; Parameters:    Size  Location     Type
 28128 ;;		None
 28129 ;; Auto vars:     Size  Location     Type
 28130 ;;		None
 28131 ;; Return value:  Size  Location     Type
 28132 ;;                  1    wreg      void 
 28133 ;; Registers used:
 28134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28135 ;; Tracked objects:
 28136 ;;		On entry : 0/0
 28137 ;;		On exit  : 0/0
 28138 ;;		Unchanged: 0/0
 28139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28144 ;;Total ram usage:        0 bytes
 28145 ;; Hardware stack levels used:    1
 28146 ;; Hardware stack levels required when called:    6
 28147 ;; This function calls:
 28148 ;;		i1_I2cSlv_SendI2cMsg
 28149 ;; This function is called by:
 28150 ;;		_I2cSlv_MainTask
 28151 ;;		_OsAlrm_ProcessOsAlarms
 28152 ;; This function uses a non-reentrant model
 28153 ;;
 28154                           
 28155                           	psect	text142
 28156  0000'                    __ptext142:
 28157                           	opt stack 0
 28158  0000'                    _I2cDummyTx:
 28159                           	opt stack 8
 28160                           
 28161                           ;i2c_slv.c: 183: static UINT8 DummyBuffer = 0x00;
 28162                           ;i2c_slv.c: 186: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 28163                           
 28164                           ;incstack = 0
 28165  0000' 0E00'              	movlw	low I2cDummyTx@DummyBuffer
 28166  0002' 6E19'              	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 28167  0004' 0E00'              	movlw	high I2cDummyTx@DummyBuffer
 28168  0006' 6E1A'              	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 28169  0008' 0E00               	movlw	0
 28170  000A' 6E1B'              	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 28171  000C' 0E01               	movlw	1
 28172  000E' 6E1C'              	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 28173  0010' EC00' F000'        	call	i1_I2cSlv_SendI2cMsg	;wreg free
 28174                           
 28175                           ;i2c_slv.c: 188: I2cBusStatus = I2cBusReady;
 28176  0014' 0E01               	movlw	1
 28177  0016' 0101               	movlb	1	; () banked
 28178  0018' 6F00'              	movwf	_I2cBusStatus& (0+255),b
 28179                           
 28180                           ; BSR set to: 1
 28181  001A' 0012               	return		;funcret
 28182  001C'                    __end_of_I2cDummyTx:
 28183                           	opt stack 0
 28184                           tosu	equ	0xFFF
 28185                           tosh	equ	0xFFE
 28186                           tosl	equ	0xFFD
 28187                           pclatu	equ	0xFFB
 28188                           pclath	equ	0xFFA
 28189                           tblptru	equ	0xFF8
 28190                           tblptrh	equ	0xFF7
 28191                           tblptrl	equ	0xFF6
 28192                           tablat	equ	0xFF5
 28193                           prodh	equ	0xFF4
 28194                           prodl	equ	0xFF3
 28195                           intcon	equ	0xFF2
 28196                           intcon2	equ	0xFF1
 28197                           intcon3	equ	0xFF0
 28198                           indf0	equ	0xFEF
 28199                           postinc0	equ	0xFEE
 28200                           plusw0	equ	0xFEB
 28201                           fsr0h	equ	0xFEA
 28202                           fsr0l	equ	0xFE9
 28203                           wreg	equ	0xFE8
 28204                           indf1	equ	0xFE7
 28205                           postinc1	equ	0xFE6
 28206                           postdec1	equ	0xFE5
 28207                           fsr1h	equ	0xFE2
 28208                           fsr1l	equ	0xFE1
 28209                           bsr	equ	0xFE0
 28210                           indf2	equ	0xFDF
 28211                           postinc2	equ	0xFDE
 28212                           postdec2	equ	0xFDD
 28213                           plusw2	equ	0xFDB
 28214                           fsr2h	equ	0xFDA
 28215                           fsr2l	equ	0xFD9
 28216                           status	equ	0xFD8
 28217                           
 28218 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 28219 ;; Defined at:
 28220 ;;		line 240 in file "../Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 28221 ;; Parameters:    Size  Location     Type
 28222 ;;  TxBuffer        2   25[COMRAM] PTR unsigned char 
 28223 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 28224 ;;  SlaveAddr       1   27[COMRAM] unsigned char 
 28225 ;;  DataLenght      1   28[COMRAM] unsigned char 
 28226 ;; Auto vars:     Size  Location     Type
 28227 ;;  I2cSlv_SendI    1   29[COMRAM] unsigned char 
 28228 ;; Return value:  Size  Location     Type
 28229 ;;                  1    wreg      unsigned char 
 28230 ;; Registers used:
 28231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28232 ;; Tracked objects:
 28233 ;;		On entry : 0/0
 28234 ;;		On exit  : 0/0
 28235 ;;		Unchanged: 0/0
 28236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28237 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28238 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28240 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28241 ;;Total ram usage:        5 bytes
 28242 ;; Hardware stack levels used:    1
 28243 ;; Hardware stack levels required when called:    5
 28244 ;; This function calls:
 28245 ;;		i1_GenerateEvt
 28246 ;; This function is called by:
 28247 ;;		_I2cDummyTx
 28248 ;; This function uses a non-reentrant model
 28249 ;;
 28250                           
 28251                           	psect	text143
 28252  0000'                    __ptext143:
 28253                           	opt stack 0
 28254  0000'                    i1_I2cSlv_SendI2cMsg:
 28255                           	opt stack 8
 28256                           
 28257                           ;i2c_slv.c: 242: UINT8 TxSts = 0u;
 28258                           
 28259                           ; BSR set to: 1
 28260                           ;incstack = 0
 28261  0000' 0E00               	movlw	0
 28262  0002' 6E1D'              	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 28263                           
 28264                           ;i2c_slv.c: 244: if (I2cComSts != TxInProgress)
 28265  0004' 0418'              	decf	_I2cComSts,w,c
 28266  0006' B4D8               	btfsc	status,2,c
 28267  0008' D014               	goto	i1l1193
 28268                           
 28269                           ;i2c_slv.c: 245: {
 28270                           ;i2c_slv.c: 247: I2cTxPacket.SlaveAddress = SlaveAddr;
 28271  000A' C01B' F0D2'        	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 28272                           
 28273                           ;i2c_slv.c: 248: I2cTxPacket.ReadWrite = ((UINT8)(0));
 28274  000E' 0E00               	movlw	0
 28275  0010' 0103               	movlb	3	; () banked
 28276  0012' 6F00'              	movwf	(_I2cTxPacket+1)& (0+255),b
 28277                           
 28278                           ; BSR set to: 3
 28279                           ;i2c_slv.c: 249: I2cTxPacket.Lenght = DataLenght;
 28280  0014' C01C' F0D6'        	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 28281                           
 28282                           ; BSR set to: 3
 28283                           ;i2c_slv.c: 250: I2cTxPacket.Buffer = TxBuffer;
 28284  0018' C019' F0D4'        	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 28285  001C' C01A' F0D5'        	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 28286                           
 28287                           ; BSR set to: 3
 28288                           ;i2c_slv.c: 253: GenerateEvt(&I2cWriteDataEvt);
 28289  0020' 0E00'              	movlw	low _I2cWriteDataEvt
 28290  0022' 6E16'              	movwf	i1GenerateEvt@Event,c
 28291  0024' 0E00'              	movlw	high _I2cWriteDataEvt
 28292  0026' 6E17'              	movwf	i1GenerateEvt@Event+1,c
 28293  0028' EC00' F000'        	call	i1_GenerateEvt	;wreg free
 28294                           
 28295                           ;i2c_slv.c: 255: TxSts = 1u;
 28296  002C' 0E01               	movlw	1
 28297  002E' 6E1D'              	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 28298                           
 28299                           ;i2c_slv.c: 256: }
 28300  0030' 0012               	return	
 28301  0032'                    i1l1193:
 28302                           
 28303                           ;i2c_slv.c: 257: else
 28304                           ;i2c_slv.c: 258: {
 28305                           ;i2c_slv.c: 260: TxSts = 0u;
 28306  0032' 0E00               	movlw	0
 28307  0034' 6E1D'              	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 28308  0036' 0012               	return	
 28309  0038'                    __end_ofi1_I2cSlv_SendI2cMsg:
 28310                           	opt stack 0
 28311                           tosu	equ	0xFFF
 28312                           tosh	equ	0xFFE
 28313                           tosl	equ	0xFFD
 28314                           pclatu	equ	0xFFB
 28315                           pclath	equ	0xFFA
 28316                           tblptru	equ	0xFF8
 28317                           tblptrh	equ	0xFF7
 28318                           tblptrl	equ	0xFF6
 28319                           tablat	equ	0xFF5
 28320                           prodh	equ	0xFF4
 28321                           prodl	equ	0xFF3
 28322                           intcon	equ	0xFF2
 28323                           intcon2	equ	0xFF1
 28324                           intcon3	equ	0xFF0
 28325                           indf0	equ	0xFEF
 28326                           postinc0	equ	0xFEE
 28327                           plusw0	equ	0xFEB
 28328                           fsr0h	equ	0xFEA
 28329                           fsr0l	equ	0xFE9
 28330                           wreg	equ	0xFE8
 28331                           indf1	equ	0xFE7
 28332                           postinc1	equ	0xFE6
 28333                           postdec1	equ	0xFE5
 28334                           fsr1h	equ	0xFE2
 28335                           fsr1l	equ	0xFE1
 28336                           bsr	equ	0xFE0
 28337                           indf2	equ	0xFDF
 28338                           postinc2	equ	0xFDE
 28339                           postdec2	equ	0xFDD
 28340                           plusw2	equ	0xFDB
 28341                           fsr2h	equ	0xFDA
 28342                           fsr2l	equ	0xFD9
 28343                           status	equ	0xFD8
 28344                           
 28345 ;; *************** function i1_GenerateEvt *****************
 28346 ;; Defined at:
 28347 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 28348 ;; Parameters:    Size  Location     Type
 28349 ;;  Event           2   22[COMRAM] PTR struct EventStructur
 28350 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 28351 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 28352 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(203), 
 28353 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 28354 ;; Auto vars:     Size  Location     Type
 28355 ;;  GenerateEvt     1   24[COMRAM] enum E7721
 28356 ;; Return value:  Size  Location     Type
 28357 ;;                  1    wreg      enum E7693
 28358 ;; Registers used:
 28359 ;;		wreg, fsr2l, fsr2h, status,2
 28360 ;; Tracked objects:
 28361 ;;		On entry : 0/0
 28362 ;;		On exit  : 0/0
 28363 ;;		Unchanged: 0/0
 28364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28365 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28366 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28368 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28369 ;;Total ram usage:        3 bytes
 28370 ;; Hardware stack levels used:    1
 28371 ;; Hardware stack levels required when called:    4
 28372 ;; This function calls:
 28373 ;;		Nothing
 28374 ;; This function is called by:
 28375 ;;		i1_I2cSlv_SendI2cMsg
 28376 ;; This function uses a non-reentrant model
 28377 ;;
 28378                           
 28379                           	psect	text144
 28380  0000'                    __ptext144:
 28381                           	opt stack 0
 28382  0000'                    i1_GenerateEvt:
 28383                           	opt stack 8
 28384                           
 28385                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 28386                           
 28387                           ;incstack = 0
 28388  0000' 0E00               	movlw	0
 28389  0002' 6E18'              	movwf	i1GenerateEvt@EventStatus,c
 28390                           
 28391                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 28392  0004' C016' FFD9         	movff	i1GenerateEvt@Event,fsr2l
 28393  0008' C017' FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 28394  000C' 0E02               	movlw	2
 28395  000E' 6EDF               	movwf	indf2,c
 28396                           
 28397                           ;os_ser.c: 81: EventStatus = EventSent;
 28398  0010' 0E02               	movlw	2
 28399  0012' 6E18'              	movwf	i1GenerateEvt@EventStatus,c
 28400  0014' 0012               	return	
 28401  0016'                    __end_ofi1_GenerateEvt:
 28402                           	opt stack 0
 28403                           tosu	equ	0xFFF
 28404                           tosh	equ	0xFFE
 28405                           tosl	equ	0xFFD
 28406                           pclatu	equ	0xFFB
 28407                           pclath	equ	0xFFA
 28408                           tblptru	equ	0xFF8
 28409                           tblptrh	equ	0xFF7
 28410                           tblptrl	equ	0xFF6
 28411                           tablat	equ	0xFF5
 28412                           prodh	equ	0xFF4
 28413                           prodl	equ	0xFF3
 28414                           intcon	equ	0xFF2
 28415                           intcon2	equ	0xFF1
 28416                           intcon3	equ	0xFF0
 28417                           indf0	equ	0xFEF
 28418                           postinc0	equ	0xFEE
 28419                           plusw0	equ	0xFEB
 28420                           fsr0h	equ	0xFEA
 28421                           fsr0l	equ	0xFE9
 28422                           wreg	equ	0xFE8
 28423                           indf1	equ	0xFE7
 28424                           postinc1	equ	0xFE6
 28425                           postdec1	equ	0xFE5
 28426                           fsr1h	equ	0xFE2
 28427                           fsr1l	equ	0xFE1
 28428                           bsr	equ	0xFE0
 28429                           indf2	equ	0xFDF
 28430                           postinc2	equ	0xFDE
 28431                           postdec2	equ	0xFDD
 28432                           plusw2	equ	0xFDB
 28433                           fsr2h	equ	0xFDA
 28434                           fsr2l	equ	0xFD9
 28435                           status	equ	0xFD8
 28436                           
 28437 ;; *************** function _HighPriorityIsr *****************
 28438 ;; Defined at:
 28439 ;;		line 153 in file "../Source/c/01_Hal/01_Sys/irq.c"
 28440 ;; Parameters:    Size  Location     Type
 28441 ;;		None
 28442 ;; Auto vars:     Size  Location     Type
 28443 ;;		None
 28444 ;; Return value:  Size  Location     Type
 28445 ;;                  1    wreg      void 
 28446 ;; Registers used:
 28447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28448 ;; Tracked objects:
 28449 ;;		On entry : 0/0
 28450 ;;		On exit  : 0/0
 28451 ;;		Unchanged: 0/0
 28452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28455 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28456 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28457 ;;Total ram usage:       18 bytes
 28458 ;; Hardware stack levels used:    1
 28459 ;; Hardware stack levels required when called:    3
 28460 ;; This function calls:
 28461 ;;		_Mcu_Int0Isr
 28462 ;;		_Mcu_Int1Isr
 28463 ;;		_Rtcc_RtcIsr
 28464 ;;		_Uart_Uart1RxIsr
 28465 ;; This function is called by:
 28466 ;;		Interrupt level 2
 28467 ;; This function uses a non-reentrant model
 28468 ;;
 28469                           
 28470                           	psect	intcode
 28471  0000'                    __pintcode:
 28472                           	opt stack 0
 28473  0000'                    _HighPriorityIsr:
 28474                           	opt stack 8
 28475                           
 28476                           ;incstack = 0
 28477  0000' 8200'              	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 28478  0002' EF00' F000'        	goto	int_func
 28479                           tosu	equ	0xFFF
 28480                           tosh	equ	0xFFE
 28481                           tosl	equ	0xFFD
 28482                           pclatu	equ	0xFFB
 28483                           pclath	equ	0xFFA
 28484                           tblptru	equ	0xFF8
 28485                           tblptrh	equ	0xFF7
 28486                           tblptrl	equ	0xFF6
 28487                           tablat	equ	0xFF5
 28488                           prodh	equ	0xFF4
 28489                           prodl	equ	0xFF3
 28490                           intcon	equ	0xFF2
 28491                           intcon2	equ	0xFF1
 28492                           intcon3	equ	0xFF0
 28493                           indf0	equ	0xFEF
 28494                           postinc0	equ	0xFEE
 28495                           plusw0	equ	0xFEB
 28496                           fsr0h	equ	0xFEA
 28497                           fsr0l	equ	0xFE9
 28498                           wreg	equ	0xFE8
 28499                           indf1	equ	0xFE7
 28500                           postinc1	equ	0xFE6
 28501                           postdec1	equ	0xFE5
 28502                           fsr1h	equ	0xFE2
 28503                           fsr1l	equ	0xFE1
 28504                           bsr	equ	0xFE0
 28505                           indf2	equ	0xFDF
 28506                           postinc2	equ	0xFDE
 28507                           postdec2	equ	0xFDD
 28508                           plusw2	equ	0xFDB
 28509                           fsr2h	equ	0xFDA
 28510                           fsr2l	equ	0xFD9
 28511                           status	equ	0xFD8
 28512                           
 28513                           	psect	intcode_body
 28514  0000'                    __pintcode_body:
 28515                           	opt stack 8
 28516  0000'                    int_func:
 28517                           	opt stack 8
 28518  0000' CFFA F004'         	movff	pclath,??_HighPriorityIsr
 28519  0004' CFFB F005'         	movff	pclatu,??_HighPriorityIsr+1
 28520  0008' CFE9 F006'         	movff	fsr0l,??_HighPriorityIsr+2
 28521  000C' CFEA F007'         	movff	fsr0h,??_HighPriorityIsr+3
 28522  0010' CFE1 F008'         	movff	fsr1l,??_HighPriorityIsr+4
 28523  0014' CFE2 F009'         	movff	fsr1h,??_HighPriorityIsr+5
 28524  0018' CFD9 F00A'         	movff	fsr2l,??_HighPriorityIsr+6
 28525  001C' CFDA F00B'         	movff	fsr2h,??_HighPriorityIsr+7
 28526  0020' CFF3 F00C'         	movff	prodl,??_HighPriorityIsr+8
 28527  0024' CFF4 F00D'         	movff	prodh,??_HighPriorityIsr+9
 28528  0028' CFF6 F00E'         	movff	tblptrl,??_HighPriorityIsr+10
 28529  002C' CFF7 F00F'         	movff	tblptrh,??_HighPriorityIsr+11
 28530  0030' CFF8 F010'         	movff	tblptru,??_HighPriorityIsr+12
 28531  0034' CFF5 F011'         	movff	tablat,??_HighPriorityIsr+13
 28532  0038' C000' F012'        	movff	btemp,??_HighPriorityIsr+14
 28533  003C' C001' F013'        	movff	btemp+1,??_HighPriorityIsr+15
 28534  0040' C002' F014'        	movff	btemp+2,??_HighPriorityIsr+16
 28535  0044' C003' F015'        	movff	btemp+3,??_HighPriorityIsr+17
 28536                           
 28537                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 28538  0048' B2F2               	btfsc	intcon,1,c	;volatile
 28539                           
 28540                           ;irq.c: 158: {
 28541                           ;irq.c: 160: Mcu_Int0Isr();
 28542  004A' EC00' F000'        	call	_Mcu_Int0Isr	;wreg free
 28543                           
 28544                           ;irq.c: 161: }
 28545                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 28546  004E' B0F0               	btfsc	intcon3,0,c	;volatile
 28547                           
 28548                           ;irq.c: 167: {
 28549                           ;irq.c: 169: Mcu_Int1Isr();
 28550  0050' EC00' F000'        	call	_Mcu_Int1Isr	;wreg free
 28551                           
 28552                           ;irq.c: 170: }
 28553                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 28554  0054' B0A4               	btfsc	4004,0,c	;volatile
 28555                           
 28556                           ;irq.c: 203: {
 28557                           ;irq.c: 205: Rtcc_RtcIsr();
 28558  0056' EC00' F000'        	call	_Rtcc_RtcIsr	;wreg free
 28559                           
 28560                           ;irq.c: 206: }
 28561                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 28562  005A' BA9E               	btfsc	3998,5,c	;volatile
 28563                           
 28564                           ;irq.c: 212: {
 28565                           ;irq.c: 214: Uart_Uart1RxIsr();
 28566  005C' EC00' F000'        	call	_Uart_Uart1RxIsr	;wreg free
 28567  0060' C015' F003'        	movff	??_HighPriorityIsr+17,btemp+3
 28568  0064' C014' F002'        	movff	??_HighPriorityIsr+16,btemp+2
 28569  0068' C013' F001'        	movff	??_HighPriorityIsr+15,btemp+1
 28570  006C' C012' F000'        	movff	??_HighPriorityIsr+14,btemp
 28571  0070' C011' FFF5         	movff	??_HighPriorityIsr+13,tablat
 28572  0074' C010' FFF8         	movff	??_HighPriorityIsr+12,tblptru
 28573  0078' C00F' FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 28574  007C' C00E' FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 28575  0080' C00D' FFF4         	movff	??_HighPriorityIsr+9,prodh
 28576  0084' C00C' FFF3         	movff	??_HighPriorityIsr+8,prodl
 28577  0088' C00B' FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 28578  008C' C00A' FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 28579  0090' C009' FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 28580  0094' C008' FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 28581  0098' C007' FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 28582  009C' C006' FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 28583  00A0' C005' FFFB         	movff	??_HighPriorityIsr+1,pclatu
 28584  00A4' C004' FFFA         	movff	??_HighPriorityIsr,pclath
 28585  00A8' 9200'              	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 28586  00AA' 0011               	retfie		f
 28587  00AC'                    __end_of_HighPriorityIsr:
 28588                           	opt stack 0
 28589                           tosu	equ	0xFFF
 28590                           tosh	equ	0xFFE
 28591                           tosl	equ	0xFFD
 28592                           pclatu	equ	0xFFB
 28593                           pclath	equ	0xFFA
 28594                           tblptru	equ	0xFF8
 28595                           tblptrh	equ	0xFF7
 28596                           tblptrl	equ	0xFF6
 28597                           tablat	equ	0xFF5
 28598                           prodh	equ	0xFF4
 28599                           prodl	equ	0xFF3
 28600                           intcon	equ	0xFF2
 28601                           intcon2	equ	0xFF1
 28602                           intcon3	equ	0xFF0
 28603                           indf0	equ	0xFEF
 28604                           postinc0	equ	0xFEE
 28605                           plusw0	equ	0xFEB
 28606                           fsr0h	equ	0xFEA
 28607                           fsr0l	equ	0xFE9
 28608                           wreg	equ	0xFE8
 28609                           indf1	equ	0xFE7
 28610                           postinc1	equ	0xFE6
 28611                           postdec1	equ	0xFE5
 28612                           fsr1h	equ	0xFE2
 28613                           fsr1l	equ	0xFE1
 28614                           bsr	equ	0xFE0
 28615                           indf2	equ	0xFDF
 28616                           postinc2	equ	0xFDE
 28617                           postdec2	equ	0xFDD
 28618                           plusw2	equ	0xFDB
 28619                           fsr2h	equ	0xFDA
 28620                           fsr2l	equ	0xFD9
 28621                           status	equ	0xFD8
 28622                           
 28623 ;; *************** function _Uart_Uart1RxIsr *****************
 28624 ;; Defined at:
 28625 ;;		line 572 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 28626 ;; Parameters:    Size  Location     Type
 28627 ;;		None
 28628 ;; Auto vars:     Size  Location     Type
 28629 ;;		None
 28630 ;; Return value:  Size  Location     Type
 28631 ;;                  1    wreg      void 
 28632 ;; Registers used:
 28633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28634 ;; Tracked objects:
 28635 ;;		On entry : 0/0
 28636 ;;		On exit  : 0/0
 28637 ;;		Unchanged: 0/0
 28638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28642 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28643 ;;Total ram usage:        0 bytes
 28644 ;; Hardware stack levels used:    1
 28645 ;; Hardware stack levels required when called:    2
 28646 ;; This function calls:
 28647 ;;		_Uart_MdmWifiReadService
 28648 ;; This function is called by:
 28649 ;;		_HighPriorityIsr
 28650 ;; This function uses a non-reentrant model
 28651 ;;
 28652                           
 28653                           	psect	text146
 28654  0000'                    __ptext146:
 28655                           	opt stack 0
 28656  0000'                    _Uart_Uart1RxIsr:
 28657                           	opt stack 8
 28658                           
 28659                           ;uart_drv.c: 575: static UINT8 UartRxData = 0;
 28660                           ;uart_drv.c: 578: UartRxData = RCREG1;
 28661                           
 28662                           ;incstack = 0
 28663  0000' CFAF F021'         	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 28664                           
 28665                           ;uart_drv.c: 592: Uart_MdmWifiReadService(1,UartRxData);
 28666  0004' C021' F003'        	movff	Uart_Uart1RxIsr@UartRxData,Uart_MdmWifiReadService@UartData
 28667  0008' 0E01               	movlw	1
 28668  000A' EC00' F000'        	call	_Uart_MdmWifiReadService
 28669  000E' 0012               	return		;funcret
 28670  0010'                    __end_of_Uart_Uart1RxIsr:
 28671                           	opt stack 0
 28672                           tosu	equ	0xFFF
 28673                           tosh	equ	0xFFE
 28674                           tosl	equ	0xFFD
 28675                           pclatu	equ	0xFFB
 28676                           pclath	equ	0xFFA
 28677                           tblptru	equ	0xFF8
 28678                           tblptrh	equ	0xFF7
 28679                           tblptrl	equ	0xFF6
 28680                           tablat	equ	0xFF5
 28681                           prodh	equ	0xFF4
 28682                           prodl	equ	0xFF3
 28683                           intcon	equ	0xFF2
 28684                           intcon2	equ	0xFF1
 28685                           intcon3	equ	0xFF0
 28686                           indf0	equ	0xFEF
 28687                           postinc0	equ	0xFEE
 28688                           plusw0	equ	0xFEB
 28689                           fsr0h	equ	0xFEA
 28690                           fsr0l	equ	0xFE9
 28691                           wreg	equ	0xFE8
 28692                           indf1	equ	0xFE7
 28693                           postinc1	equ	0xFE6
 28694                           postdec1	equ	0xFE5
 28695                           fsr1h	equ	0xFE2
 28696                           fsr1l	equ	0xFE1
 28697                           bsr	equ	0xFE0
 28698                           indf2	equ	0xFDF
 28699                           postinc2	equ	0xFDE
 28700                           postdec2	equ	0xFDD
 28701                           plusw2	equ	0xFDB
 28702                           fsr2h	equ	0xFDA
 28703                           fsr2l	equ	0xFD9
 28704                           status	equ	0xFD8
 28705                           
 28706 ;; *************** function _Uart_MdmWifiReadService *****************
 28707 ;; Defined at:
 28708 ;;		line 462 in file "../Source/c/01_Hal/02_Drv/uart_drv.c"
 28709 ;; Parameters:    Size  Location     Type
 28710 ;;  Module          1    wreg     unsigned char 
 28711 ;;  UartData        1    3[COMRAM] unsigned char 
 28712 ;; Auto vars:     Size  Location     Type
 28713 ;;  Module          1    0[COMRAM] unsigned char 
 28714 ;; Return value:  Size  Location     Type
 28715 ;;                  1    wreg      void 
 28716 ;; Registers used:
 28717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28718 ;; Tracked objects:
 28719 ;;		On entry : 0/0
 28720 ;;		On exit  : 0/0
 28721 ;;		Unchanged: 0/0
 28722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28723 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28726 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28727 ;;Total ram usage:        1 bytes
 28728 ;; Hardware stack levels used:    1
 28729 ;; Hardware stack levels required when called:    1
 28730 ;; This function calls:
 28731 ;;		i2_GenerateEvt
 28732 ;; This function is called by:
 28733 ;;		_Uart_Uart1RxIsr
 28734 ;; This function uses a non-reentrant model
 28735 ;;
 28736                           
 28737                           	psect	text147
 28738  0000'                    __ptext147:
 28739                           	opt stack 0
 28740  0000'                    _Uart_MdmWifiReadService:
 28741                           	opt stack 8
 28742                           
 28743                           ;uart_drv.c: 464: if (MdmWifi_UartRxCounter < sizeof(MdmWifi_UartRxBuffer))
 28744                           
 28745                           ;incstack = 0
 28746  0000' 0101               	movlb	1	; () banked
 28747  0002' 5100'              	movf	(_MdmWifi_UartRxCounter+1)& (0+255),w,b
 28748  0004' E115               	bnz	i2l557
 28749  0006' 0EC8               	movlw	200
 28750  0008' 5D00'              	subwf	_MdmWifi_UartRxCounter& (0+255),w,b
 28751  000A' B0D8               	btfsc	status,0,c
 28752  000C' 0012               	return	
 28753                           
 28754                           ; BSR set to: 1
 28755                           ;uart_drv.c: 465: {
 28756                           ;uart_drv.c: 467: MdmWifi_UartRxBuffer[MdmWifi_UartRxCounter] = UartData;
 28757  000E' 0E00'              	movlw	low _MdmWifi_UartRxBuffer
 28758  0010' 2500'              	addwf	_MdmWifi_UartRxCounter& (0+255),w,b
 28759  0012' 6ED9               	movwf	fsr2l,c
 28760  0014' 0E00'              	movlw	high _MdmWifi_UartRxBuffer
 28761  0016' 2100'              	addwfc	(_MdmWifi_UartRxCounter+1)& (0+255),w,b
 28762  0018' 6EDA               	movwf	fsr2h,c
 28763  001A' C003' FFDF         	movff	Uart_MdmWifiReadService@UartData,indf2
 28764                           
 28765                           ; BSR set to: 1
 28766                           ;uart_drv.c: 469: MdmWifi_UartRxCounter++;
 28767  001E' 4B00'              	infsnz	_MdmWifi_UartRxCounter& (0+255),f,b
 28768  0020' 2B00'              	incf	(_MdmWifi_UartRxCounter+1)& (0+255),f,b
 28769                           
 28770                           ; BSR set to: 1
 28771                           ;uart_drv.c: 471: GenerateEvt(&NewWifiUartData);
 28772  0022' 0E00'              	movlw	low _NewWifiUartData
 28773  0024' 6E00'              	movwf	i2GenerateEvt@Event,c
 28774  0026' 0E00'              	movlw	high _NewWifiUartData
 28775  0028' 6E01'              	movwf	i2GenerateEvt@Event+1,c
 28776  002A' EC00' F000'        	call	i2_GenerateEvt	;wreg free
 28777  002E' 0012               	return	
 28778  0030'                    i2l557:
 28779  0030' 0012               	return		;funcret
 28780  0032'                    __end_of_Uart_MdmWifiReadService:
 28781                           	opt stack 0
 28782                           tosu	equ	0xFFF
 28783                           tosh	equ	0xFFE
 28784                           tosl	equ	0xFFD
 28785                           pclatu	equ	0xFFB
 28786                           pclath	equ	0xFFA
 28787                           tblptru	equ	0xFF8
 28788                           tblptrh	equ	0xFF7
 28789                           tblptrl	equ	0xFF6
 28790                           tablat	equ	0xFF5
 28791                           prodh	equ	0xFF4
 28792                           prodl	equ	0xFF3
 28793                           intcon	equ	0xFF2
 28794                           intcon2	equ	0xFF1
 28795                           intcon3	equ	0xFF0
 28796                           indf0	equ	0xFEF
 28797                           postinc0	equ	0xFEE
 28798                           plusw0	equ	0xFEB
 28799                           fsr0h	equ	0xFEA
 28800                           fsr0l	equ	0xFE9
 28801                           wreg	equ	0xFE8
 28802                           indf1	equ	0xFE7
 28803                           postinc1	equ	0xFE6
 28804                           postdec1	equ	0xFE5
 28805                           fsr1h	equ	0xFE2
 28806                           fsr1l	equ	0xFE1
 28807                           bsr	equ	0xFE0
 28808                           indf2	equ	0xFDF
 28809                           postinc2	equ	0xFDE
 28810                           postdec2	equ	0xFDD
 28811                           plusw2	equ	0xFDB
 28812                           fsr2h	equ	0xFDA
 28813                           fsr2l	equ	0xFD9
 28814                           status	equ	0xFD8
 28815                           
 28816 ;; *************** function i2_GenerateEvt *****************
 28817 ;; Defined at:
 28818 ;;		line 73 in file "../Source/c/02_Osl/os_ser.c"
 28819 ;; Parameters:    Size  Location     Type
 28820 ;;  Event           2    0[COMRAM] PTR struct EventStructur
 28821 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 28822 ;;		 -> WifiReceiveData(1), WifiSendData(1), StartConnection(1), WifiReceiveNetData(1), 
 28823 ;;		 -> WifiGenericError(1), NewWifiPacketParser(1), NewWifiPacket(1), WifiRxPacket(203), 
 28824 ;;		 -> StartWifiModem(1), NewWifiUartData(1), 
 28825 ;; Auto vars:     Size  Location     Type
 28826 ;;  GenerateEvt     1    2[COMRAM] enum E7721
 28827 ;; Return value:  Size  Location     Type
 28828 ;;                  1    wreg      enum E7693
 28829 ;; Registers used:
 28830 ;;		wreg, fsr2l, fsr2h, status,2
 28831 ;; Tracked objects:
 28832 ;;		On entry : 0/0
 28833 ;;		On exit  : 0/0
 28834 ;;		Unchanged: 0/0
 28835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28839 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28840 ;;Total ram usage:        3 bytes
 28841 ;; Hardware stack levels used:    1
 28842 ;; This function calls:
 28843 ;;		Nothing
 28844 ;; This function is called by:
 28845 ;;		_Uart_MdmWifiReadService
 28846 ;; This function uses a non-reentrant model
 28847 ;;
 28848                           
 28849                           	psect	text148
 28850  0000'                    __ptext148:
 28851                           	opt stack 0
 28852  0000'                    i2_GenerateEvt:
 28853                           	opt stack 8
 28854                           
 28855                           ;os_ser.c: 76: EventStatusType EventStatus = EventIdle;
 28856                           
 28857                           ;incstack = 0
 28858  0000' 0E00               	movlw	0
 28859  0002' 6E02'              	movwf	i2GenerateEvt@EventStatus,c
 28860                           
 28861                           ;os_ser.c: 79: Event->EventStatus = EventSent;
 28862  0004' C000' FFD9         	movff	i2GenerateEvt@Event,fsr2l
 28863  0008' C001' FFDA         	movff	i2GenerateEvt@Event+1,fsr2h
 28864  000C' 0E02               	movlw	2
 28865  000E' 6EDF               	movwf	indf2,c
 28866                           
 28867                           ;os_ser.c: 81: EventStatus = EventSent;
 28868  0010' 0E02               	movlw	2
 28869  0012' 6E02'              	movwf	i2GenerateEvt@EventStatus,c
 28870  0014' 0012               	return	
 28871  0016'                    __end_ofi2_GenerateEvt:
 28872                           	opt stack 0
 28873                           tosu	equ	0xFFF
 28874                           tosh	equ	0xFFE
 28875                           tosl	equ	0xFFD
 28876                           pclatu	equ	0xFFB
 28877                           pclath	equ	0xFFA
 28878                           tblptru	equ	0xFF8
 28879                           tblptrh	equ	0xFF7
 28880                           tblptrl	equ	0xFF6
 28881                           tablat	equ	0xFF5
 28882                           prodh	equ	0xFF4
 28883                           prodl	equ	0xFF3
 28884                           intcon	equ	0xFF2
 28885                           intcon2	equ	0xFF1
 28886                           intcon3	equ	0xFF0
 28887                           indf0	equ	0xFEF
 28888                           postinc0	equ	0xFEE
 28889                           plusw0	equ	0xFEB
 28890                           fsr0h	equ	0xFEA
 28891                           fsr0l	equ	0xFE9
 28892                           wreg	equ	0xFE8
 28893                           indf1	equ	0xFE7
 28894                           postinc1	equ	0xFE6
 28895                           postdec1	equ	0xFE5
 28896                           fsr1h	equ	0xFE2
 28897                           fsr1l	equ	0xFE1
 28898                           bsr	equ	0xFE0
 28899                           indf2	equ	0xFDF
 28900                           postinc2	equ	0xFDE
 28901                           postdec2	equ	0xFDD
 28902                           plusw2	equ	0xFDB
 28903                           fsr2h	equ	0xFDA
 28904                           fsr2l	equ	0xFD9
 28905                           status	equ	0xFD8
 28906                           
 28907 ;; *************** function _Rtcc_RtcIsr *****************
 28908 ;; Defined at:
 28909 ;;		line 537 in file "../Source/c/01_Hal/02_Drv/rtcc_drv.c"
 28910 ;; Parameters:    Size  Location     Type
 28911 ;;		None
 28912 ;; Auto vars:     Size  Location     Type
 28913 ;;		None
 28914 ;; Return value:  Size  Location     Type
 28915 ;;                  1    wreg      void 
 28916 ;; Registers used:
 28917 ;;		wreg, status,2, status,0
 28918 ;; Tracked objects:
 28919 ;;		On entry : 0/0
 28920 ;;		On exit  : 0/0
 28921 ;;		Unchanged: 0/0
 28922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 28927 ;;Total ram usage:        0 bytes
 28928 ;; Hardware stack levels used:    1
 28929 ;; This function calls:
 28930 ;;		Nothing
 28931 ;; This function is called by:
 28932 ;;		_HighPriorityIsr
 28933 ;; This function uses a non-reentrant model
 28934 ;;
 28935                           
 28936                           	psect	text149
 28937  0000'                    __ptext149:
 28938                           	opt stack 0
 28939  0000'                    _Rtcc_RtcIsr:
 28940                           	opt stack 10
 28941                           
 28942                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 28943                           
 28944                           ;incstack = 0
 28945  0000' 90A4               	bcf	4004,0,c	;volatile
 28946  0002' 0012               	return	
 28947  0004'                    __end_of_Rtcc_RtcIsr:
 28948                           	opt stack 0
 28949                           tosu	equ	0xFFF
 28950                           tosh	equ	0xFFE
 28951                           tosl	equ	0xFFD
 28952                           pclatu	equ	0xFFB
 28953                           pclath	equ	0xFFA
 28954                           tblptru	equ	0xFF8
 28955                           tblptrh	equ	0xFF7
 28956                           tblptrl	equ	0xFF6
 28957                           tablat	equ	0xFF5
 28958                           prodh	equ	0xFF4
 28959                           prodl	equ	0xFF3
 28960                           intcon	equ	0xFF2
 28961                           intcon2	equ	0xFF1
 28962                           intcon3	equ	0xFF0
 28963                           indf0	equ	0xFEF
 28964                           postinc0	equ	0xFEE
 28965                           plusw0	equ	0xFEB
 28966                           fsr0h	equ	0xFEA
 28967                           fsr0l	equ	0xFE9
 28968                           wreg	equ	0xFE8
 28969                           indf1	equ	0xFE7
 28970                           postinc1	equ	0xFE6
 28971                           postdec1	equ	0xFE5
 28972                           fsr1h	equ	0xFE2
 28973                           fsr1l	equ	0xFE1
 28974                           bsr	equ	0xFE0
 28975                           indf2	equ	0xFDF
 28976                           postinc2	equ	0xFDE
 28977                           postdec2	equ	0xFDD
 28978                           plusw2	equ	0xFDB
 28979                           fsr2h	equ	0xFDA
 28980                           fsr2l	equ	0xFD9
 28981                           status	equ	0xFD8
 28982                           
 28983 ;; *************** function _Mcu_Int1Isr *****************
 28984 ;; Defined at:
 28985 ;;		line 155 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
 28986 ;; Parameters:    Size  Location     Type
 28987 ;;		None
 28988 ;; Auto vars:     Size  Location     Type
 28989 ;;		None
 28990 ;; Return value:  Size  Location     Type
 28991 ;;                  1    wreg      void 
 28992 ;; Registers used:
 28993 ;;		wreg, status,2, status,0
 28994 ;; Tracked objects:
 28995 ;;		On entry : 0/0
 28996 ;;		On exit  : 0/0
 28997 ;;		Unchanged: 0/0
 28998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 28999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29003 ;;Total ram usage:        0 bytes
 29004 ;; Hardware stack levels used:    1
 29005 ;; This function calls:
 29006 ;;		Nothing
 29007 ;; This function is called by:
 29008 ;;		_HighPriorityIsr
 29009 ;; This function uses a non-reentrant model
 29010 ;;
 29011                           
 29012                           	psect	text150
 29013  0000'                    __ptext150:
 29014                           	opt stack 0
 29015  0000'                    _Mcu_Int1Isr:
 29016                           	opt stack 10
 29017                           
 29018                           ;mcu_drv.c: 158: INTCON3bits.INT1IF = 0u;
 29019                           
 29020                           ;incstack = 0
 29021  0000' 90F0               	bcf	intcon3,0,c	;volatile
 29022  0002' 0012               	return	
 29023  0004'                    __end_of_Mcu_Int1Isr:
 29024                           	opt stack 0
 29025                           tosu	equ	0xFFF
 29026                           tosh	equ	0xFFE
 29027                           tosl	equ	0xFFD
 29028                           pclatu	equ	0xFFB
 29029                           pclath	equ	0xFFA
 29030                           tblptru	equ	0xFF8
 29031                           tblptrh	equ	0xFF7
 29032                           tblptrl	equ	0xFF6
 29033                           tablat	equ	0xFF5
 29034                           prodh	equ	0xFF4
 29035                           prodl	equ	0xFF3
 29036                           intcon	equ	0xFF2
 29037                           intcon2	equ	0xFF1
 29038                           intcon3	equ	0xFF0
 29039                           indf0	equ	0xFEF
 29040                           postinc0	equ	0xFEE
 29041                           plusw0	equ	0xFEB
 29042                           fsr0h	equ	0xFEA
 29043                           fsr0l	equ	0xFE9
 29044                           wreg	equ	0xFE8
 29045                           indf1	equ	0xFE7
 29046                           postinc1	equ	0xFE6
 29047                           postdec1	equ	0xFE5
 29048                           fsr1h	equ	0xFE2
 29049                           fsr1l	equ	0xFE1
 29050                           bsr	equ	0xFE0
 29051                           indf2	equ	0xFDF
 29052                           postinc2	equ	0xFDE
 29053                           postdec2	equ	0xFDD
 29054                           plusw2	equ	0xFDB
 29055                           fsr2h	equ	0xFDA
 29056                           fsr2l	equ	0xFD9
 29057                           status	equ	0xFD8
 29058                           
 29059 ;; *************** function _Mcu_Int0Isr *****************
 29060 ;; Defined at:
 29061 ;;		line 120 in file "../Source/c/01_Hal/02_Drv/mcu_drv.c"
 29062 ;; Parameters:    Size  Location     Type
 29063 ;;		None
 29064 ;; Auto vars:     Size  Location     Type
 29065 ;;		None
 29066 ;; Return value:  Size  Location     Type
 29067 ;;                  1    wreg      void 
 29068 ;; Registers used:
 29069 ;;		wreg, status,2, status,0
 29070 ;; Tracked objects:
 29071 ;;		On entry : 0/0
 29072 ;;		On exit  : 0/0
 29073 ;;		Unchanged: 0/0
 29074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 29075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 29079 ;;Total ram usage:        0 bytes
 29080 ;; Hardware stack levels used:    1
 29081 ;; This function calls:
 29082 ;;		Nothing
 29083 ;; This function is called by:
 29084 ;;		_HighPriorityIsr
 29085 ;; This function uses a non-reentrant model
 29086 ;;
 29087                           
 29088                           	psect	text151
 29089  0000'                    __ptext151:
 29090                           	opt stack 0
 29091  0000'                    _Mcu_Int0Isr:
 29092                           	opt stack 10
 29093                           
 29094                           ;mcu_drv.c: 123: INTCONbits.INT0IF = 0u;
 29095                           
 29096                           ;incstack = 0
 29097  0000' 92F2               	bcf	intcon,1,c	;volatile
 29098  0002' 0012               	return	
 29099  0004'                    __end_of_Mcu_Int0Isr:
 29100                           	opt stack 0
 29101                           tosu	equ	0xFFF
 29102                           tosh	equ	0xFFE
 29103                           tosl	equ	0xFFD
 29104                           pclatu	equ	0xFFB
 29105                           pclath	equ	0xFFA
 29106                           tblptru	equ	0xFF8
 29107                           tblptrh	equ	0xFF7
 29108                           tblptrl	equ	0xFF6
 29109                           tablat	equ	0xFF5
 29110                           prodh	equ	0xFF4
 29111                           prodl	equ	0xFF3
 29112                           intcon	equ	0xFF2
 29113                           intcon2	equ	0xFF1
 29114                           intcon3	equ	0xFF0
 29115                           indf0	equ	0xFEF
 29116                           postinc0	equ	0xFEE
 29117                           plusw0	equ	0xFEB
 29118                           fsr0h	equ	0xFEA
 29119                           fsr0l	equ	0xFE9
 29120                           wreg	equ	0xFE8
 29121                           indf1	equ	0xFE7
 29122                           postinc1	equ	0xFE6
 29123                           postdec1	equ	0xFE5
 29124                           fsr1h	equ	0xFE2
 29125                           fsr1l	equ	0xFE1
 29126                           bsr	equ	0xFE0
 29127                           indf2	equ	0xFDF
 29128                           postinc2	equ	0xFDE
 29129                           postdec2	equ	0xFDD
 29130                           plusw2	equ	0xFDB
 29131                           fsr2h	equ	0xFDA
 29132                           fsr2l	equ	0xFD9
 29133                           status	equ	0xFD8
 29134                           tosu	equ	0xFFF
 29135                           tosh	equ	0xFFE
 29136                           tosl	equ	0xFFD
 29137                           pclatu	equ	0xFFB
 29138                           pclath	equ	0xFFA
 29139                           tblptru	equ	0xFF8
 29140                           tblptrh	equ	0xFF7
 29141                           tblptrl	equ	0xFF6
 29142                           tablat	equ	0xFF5
 29143                           prodh	equ	0xFF4
 29144                           prodl	equ	0xFF3
 29145                           intcon	equ	0xFF2
 29146                           intcon2	equ	0xFF1
 29147                           intcon3	equ	0xFF0
 29148                           indf0	equ	0xFEF
 29149                           postinc0	equ	0xFEE
 29150                           plusw0	equ	0xFEB
 29151                           fsr0h	equ	0xFEA
 29152                           fsr0l	equ	0xFE9
 29153                           wreg	equ	0xFE8
 29154                           indf1	equ	0xFE7
 29155                           postinc1	equ	0xFE6
 29156                           postdec1	equ	0xFE5
 29157                           fsr1h	equ	0xFE2
 29158                           fsr1l	equ	0xFE1
 29159                           bsr	equ	0xFE0
 29160                           indf2	equ	0xFDF
 29161                           postinc2	equ	0xFDE
 29162                           postdec2	equ	0xFDD
 29163                           plusw2	equ	0xFDB
 29164                           fsr2h	equ	0xFDA
 29165                           fsr2l	equ	0xFD9
 29166                           status	equ	0xFD8
 29167                           
 29168                           	psect	text152
 29169  0000'                    __ptext152:
 29170                           	opt stack 0
 29171                           tosu	equ	0xFFF
 29172                           tosh	equ	0xFFE
 29173                           tosl	equ	0xFFD
 29174                           pclatu	equ	0xFFB
 29175                           pclath	equ	0xFFA
 29176                           tblptru	equ	0xFF8
 29177                           tblptrh	equ	0xFF7
 29178                           tblptrl	equ	0xFF6
 29179                           tablat	equ	0xFF5
 29180                           prodh	equ	0xFF4
 29181                           prodl	equ	0xFF3
 29182                           intcon	equ	0xFF2
 29183                           intcon2	equ	0xFF1
 29184                           intcon3	equ	0xFF0
 29185                           indf0	equ	0xFEF
 29186                           postinc0	equ	0xFEE
 29187                           plusw0	equ	0xFEB
 29188                           fsr0h	equ	0xFEA
 29189                           fsr0l	equ	0xFE9
 29190                           wreg	equ	0xFE8
 29191                           indf1	equ	0xFE7
 29192                           postinc1	equ	0xFE6
 29193                           postdec1	equ	0xFE5
 29194                           fsr1h	equ	0xFE2
 29195                           fsr1l	equ	0xFE1
 29196                           bsr	equ	0xFE0
 29197                           indf2	equ	0xFDF
 29198                           postinc2	equ	0xFDE
 29199                           postdec2	equ	0xFDD
 29200                           plusw2	equ	0xFDB
 29201                           fsr2h	equ	0xFDA
 29202                           fsr2l	equ	0xFD9
 29203                           status	equ	0xFD8
 29204                           
 29205                           	psect	rparam
 29206  0000                     tosu	equ	0xFFF
 29207                           tosh	equ	0xFFE
 29208                           tosl	equ	0xFFD
 29209                           pclatu	equ	0xFFB
 29210                           pclath	equ	0xFFA
 29211                           tblptru	equ	0xFF8
 29212                           tblptrh	equ	0xFF7
 29213                           tblptrl	equ	0xFF6
 29214                           tablat	equ	0xFF5
 29215                           prodh	equ	0xFF4
 29216                           prodl	equ	0xFF3
 29217                           intcon	equ	0xFF2
 29218                           intcon2	equ	0xFF1
 29219                           intcon3	equ	0xFF0
 29220                           indf0	equ	0xFEF
 29221                           postinc0	equ	0xFEE
 29222                           plusw0	equ	0xFEB
 29223                           fsr0h	equ	0xFEA
 29224                           fsr0l	equ	0xFE9
 29225                           wreg	equ	0xFE8
 29226                           indf1	equ	0xFE7
 29227                           postinc1	equ	0xFE6
 29228                           postdec1	equ	0xFE5
 29229                           fsr1h	equ	0xFE2
 29230                           fsr1l	equ	0xFE1
 29231                           bsr	equ	0xFE0
 29232                           indf2	equ	0xFDF
 29233                           postinc2	equ	0xFDE
 29234                           postdec2	equ	0xFDD
 29235                           plusw2	equ	0xFDB
 29236                           fsr2h	equ	0xFDA
 29237                           fsr2l	equ	0xFD9
 29238                           status	equ	0xFD8
 29239                           
 29240                           	psect	temp
 29241  0000'                    btemp:
 29242                           	opt stack 0
 29243  0000'                    	ds	1
 29244  0000                     int$flags	set	btemp
 29245  0000                     wtemp6	set	btemp+1
 29246                           tosu	equ	0xFFF
 29247                           tosh	equ	0xFFE
 29248                           tosl	equ	0xFFD
 29249                           pclatu	equ	0xFFB
 29250                           pclath	equ	0xFFA
 29251                           tblptru	equ	0xFF8
 29252                           tblptrh	equ	0xFF7
 29253                           tblptrl	equ	0xFF6
 29254                           tablat	equ	0xFF5
 29255                           prodh	equ	0xFF4
 29256                           prodl	equ	0xFF3
 29257                           intcon	equ	0xFF2
 29258                           intcon2	equ	0xFF1
 29259                           intcon3	equ	0xFF0
 29260                           indf0	equ	0xFEF
 29261                           postinc0	equ	0xFEE
 29262                           plusw0	equ	0xFEB
 29263                           fsr0h	equ	0xFEA
 29264                           fsr0l	equ	0xFE9
 29265                           wreg	equ	0xFE8
 29266                           indf1	equ	0xFE7
 29267                           postinc1	equ	0xFE6
 29268                           postdec1	equ	0xFE5
 29269                           fsr1h	equ	0xFE2
 29270                           fsr1l	equ	0xFE1
 29271                           bsr	equ	0xFE0
 29272                           indf2	equ	0xFDF
 29273                           postinc2	equ	0xFDE
 29274                           postdec2	equ	0xFDD
 29275                           plusw2	equ	0xFDB
 29276                           fsr2h	equ	0xFDA
 29277                           fsr2l	equ	0xFD9
 29278                           status	equ	0xFD8


Data Sizes:
    Strings     237
    Constant    563
    Data        96
    BSS         2150
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      92
    BANK0           160    160     160
    BANK1           256    201     256
    BANK2           256    200     255
    BANK3           256      0     249
    BANK4           192      0     136
    BANK5           256      0     220
    BANK6           256      0     244
    BANK7           256      0     203
    BANK8           256      0     200
    BANK9           256      0     203
    BANK10          256      0     200
    BANK11          256      0     200
    BANK12          256      0     250
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(COMRAM[1]), USBActiveConfiguration(COMRAM[1]), BDT(BIGRAMl[48]), NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), STR_1(CODE[6]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 203
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[200]), 
		 -> WifiRxPacket(BANK7[203]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 203
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[200]), 
		 -> WifiRxPacket(BANK7[203]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK6[80]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 203
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[200]), 
		 -> WifiRxPacket(BANK7[203]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), STR_1(CODE[6]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 203
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[200]), 
		 -> WifiRxPacket(BANK7[203]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), STR_18(CODE[2]), STR_14(CODE[8]), STR_2(CODE[5]), 
		 -> STR_1(CODE[6]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 100
		 -> STR_62(CODE[21]), STR_58(CODE[20]), STR_53(CODE[14]), STR_49(CODE[10]), 
		 -> STR_43(CODE[10]), STR_41(CODE[13]), STR_40(CODE[12]), STR_36(CODE[11]), 
		 -> STR_32(CODE[12]), STR_26(CODE[10]), STR_21(CODE[11]), BufferLocal(BANK6[100]), 
		 -> STR_15(CODE[12]), STR_3(CODE[13]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK3[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK3[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    strcat@from	PTR const unsigned char  size(3) Largest target is 65527
		 -> STR_65(CODE[3]), STR_64(CODE[2]), STR_63(CODE[2]), Term_MainSm@FwkBuildYearStr(BANK0[4]), 
		 -> Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), STR_61(CODE[3]), STR_60(CODE[2]), 
		 -> STR_59(CODE[2]), Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), 
		 -> STR_57(CODE[3]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), STR_56(CODE[2]), STR_55(CODE[2]), 
		 -> STR_54(CODE[2]), STR_52(CODE[3]), STR_51(CODE[2]), STR_50(CODE[2]), 
		 -> STR_48(CODE[3]), MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), STR_47(CODE[2]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), 
		 -> STR_46(CODE[3]), STR_45(CODE[4]), STR_44(CODE[2]), STR_42(CODE[3]), 
		 -> MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), STR_39(CODE[3]), STR_38(CODE[2]), STR_37(CODE[2]), 
		 -> STR_35(CODE[3]), STR_34(CODE[2]), STR_33(CODE[2]), STR_30(CODE[3]), 
		 -> STR_29(CODE[2]), STR_28(CODE[4]), STR_27(CODE[2]), STR_25(CODE[3]), 
		 -> STR_24(CODE[2]), STR_23(CODE[2]), STR_22(CODE[2]), STR_19(CODE[3]), 
		 -> STR_17(CODE[3]), SendDataSm@LenAscii(BANK0[4]), STR_16(CODE[2]), SendDataSm@IdAscii(BANK0[1]), 
		 -> ROM(CODE[65527]), STR_13(CODE[3]), STR_12(CODE[2]), StartConnectionSm@PortAscii(BANK0[4]), 
		 -> STR_11(CODE[2]), AddressLocal(BANK3[25]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[4]), STR_6(CODE[4]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), StartConnectionSm@IdAscii(BANK0[1]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildYearStr(BANK0[4]), Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK6[80]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), 
		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), SendDataSm@LenAscii(BANK0[4]), 
		 -> SendDataSm@IdAscii(BANK0[1]), StartConnectionSm@PortAscii(BANK0[4]), StartConnectionSm@IdAscii(BANK0[1]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK6[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK6[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK2[4]), Terminal@Len(BANK3[4]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK6[80]), 

    ClearBuffer@Buffer	PTR unsigned char  size(2) Largest target is 200
		 -> WifiTerminal@UartBuffer(BANK8[200]), AddressLocal(BANK3[25]), MdmWifi_UartRxBuffer(BANK11[200]), 

    StringCopy@SourceStr	PTR unsigned char  size(2) Largest target is 203
		 -> WifiRxPacket(BANK7[203]), MdmWifi_UartRxBuffer(BANK11[200]), 

    StringCopy@DestStr	PTR unsigned char  size(2) Largest target is 203
		 -> WifiTerminal@UartBuffer(BANK8[200]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), WifiRxPacket(BANK7[203]), 

    LedStateMachine@LedSts	PTR enum E8878 size(2) Largest target is 1
		 -> Led3Sts(BANK1[1]), Led2Sts(BANK1[1]), Led1Sts(BANK1[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK3[6]), Led2Pulse(BANK3[6]), Led1Pulse(BANK3[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK3[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 236
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK0[50]), MsgFormat(CODE[236]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK1[200]), Terminal@TermRxBuffer(BANK3[50]), Terminal@Payload(BANK6[80]), Terminal@UsbRxBuffer(BANK2[200]), 
		 -> WifiTerminal@UartBuffer(BANK8[200]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK2[200]), WifiTerminal@UsbBuffer(BANK10[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S4327$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S4327$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S4327$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S4327$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK6[64]), cdc_data_rx(BANK4[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), NULL(NULL[0]), 

    S2781$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2771$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2771$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2747$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2747$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2747$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2747$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK0[50]), USBAlternateInterface(BANK2[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK3[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK0[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK3[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK0[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildYearStr(BANK0[4]), Term_MainSm@FwkBuildMonthStr(BANK0[4]), Term_MainSm@FwkBuildDayStr(BANK0[4]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK6[80]), MdmWifiCmd_ConfigureServer@PortAscii(COMRAM[10]), 
		 -> MdmWifiCmd_ConfigureSoftAPMode@EncAscii(COMRAM[5]), MdmWifiCmd_ConfigureSoftAPMode@ChIdAscii(COMRAM[5]), MdmWifiCmd_CloseConnection@IdAscii(COMRAM[1]), SendDataSm@LenAscii(BANK0[4]), 
		 -> SendDataSm@IdAscii(BANK0[1]), StartConnectionSm@PortAscii(BANK0[4]), StartConnectionSm@IdAscii(BANK0[1]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 103
		 -> Term_MainSm@Data(BANK0[50]), MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), 
		 -> MdmWifiCmd_CloseConnection@Data(COMRAM[20]), MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), BufferLocal(BANK6[100]), SendDataSm@Data(BANK0[103]), AddressLocal(BANK3[25]), 
		 -> StartConnectionSm@Data(BANK0[100]), 

    MdmWifi_SendWifiMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 103
		 -> MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), MdmWifiCmd_CloseConnection@Data(COMRAM[20]), 
		 -> MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), STR_31(CODE[11]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), STR_20(CODE[9]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    MdmWifi_ReceiveWifiMsg@DataLenght	PTR unsigned char  size(2) Largest target is 1
		 -> SendDataSm@DataIndex(BANK0[1]), StartConnectionSm@DataIndex(BANK0[1]), 

    MdmWifi_ReceiveWifiMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 103
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 203
		 -> SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), NULL(NULL[0]), WifiRxPacket.RxBuffer(BANK7[200]), 
		 -> WifiRxPacket(BANK7[203]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), SendDataSm@SwTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), SendDataSm@SwTimer(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 203
		 -> I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK1[1]), I2cWriteDataEvt(COMRAM[1]), WifiReceiveData(BANK1[1]), 
		 -> WifiSendData(BANK1[1]), StartConnection(BANK1[1]), WifiReceiveNetData(BANK1[1]), NewWifiPacketParser(BANK1[1]), 
		 -> NewWifiPacket(COMRAM[1]), WifiRxPacket(BANK7[203]), StartWifiModem(COMRAM[1]), NewWifiUartData(COMRAM[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 203
		 -> AlarmEvent(BANK1[1]), I2cRxPacket(BANK3[6]), I2cReadDataEvt(BANK1[1]), I2cWriteDataEvt(COMRAM[1]), 
		 -> WifiReceiveData(BANK1[1]), WifiSendData(BANK1[1]), StartConnection(BANK1[1]), WifiReceiveNetData(BANK1[1]), 
		 -> WifiGenericError(BANK1[1]), NewWifiPacketParser(BANK1[1]), NewWifiPacket(COMRAM[1]), WifiRxPacket(BANK7[203]), 
		 -> StartWifiModem(COMRAM[1]), NewWifiUartData(COMRAM[1]), 

    S1896_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), UsbDevice_MainTask(), 
		 -> MdmWifiHttp_MainTask(), MdmWifiCmd_MainTask(), MdmWifi_MainTask(), I2cSlv_MainTask(), 
		 -> MdmWifi_DrvMainFn(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), UsbDevice_MainTask(), 
		 -> MdmWifiHttp_MainTask(), MdmWifiCmd_MainTask(), MdmWifi_MainTask(), I2cSlv_MainTask(), 
		 -> MdmWifi_DrvMainFn(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S1861_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Uart_WriteString@StringToWrite	PTR unsigned char  size(2) Largest target is 103
		 -> MdmWifiCmd_ConfigureServer@Data(COMRAM[20]), MdmWifiCmd_ConfigureSoftAPIpAddress@Data(COMRAM[40]), MdmWifiCmd_ConfigureSoftAPMode@Data(BANK0[100]), MdmWifiCmd_CloseConnection@Data(COMRAM[20]), 
		 -> MdmWifiCmd_SetConnectionMode@Data(COMRAM[20]), MdmWifiCmd_SetTransferMode@Data(COMRAM[20]), STR_31(CODE[11]), MdmWifiCmd_JoinAccessPoint@Data(BANK0[100]), 
		 -> MdmWifiCmd_SetWifiMode@Data(COMRAM[20]), STR_20(CODE[9]), SendDataSm@Data(BANK0[103]), StartConnectionSm@Data(BANK0[100]), 

    Uart_InitUartModule@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    SetUartBaudRate@UartConfig	PTR struct _UartConfig size(2) Largest target is 21
		 -> UartConfig(BANK3[21]), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK3[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK3[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK3[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK3[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK3[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK0[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK0[50]), I2cDummyTx@DummyBuffer(BANK1[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK3[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK3[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    _Uart_Uart1RxIsr->_Uart_MdmWifiReadService
    _Uart_MdmWifiReadService->i2_GenerateEvt

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Terminal->_strtol
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MdmWifi_MainTask->_Uart_InitUartModule
    _Uart_InitUartModule->_SetUartBaudRate
    _SetUartBaudRate->___lldiv
    _MdmWifiGetUartData->_StringCopy
    _MdmWifiEvtParser->_strstr
    _MdmWifi_StartWifiModemSm->_ReceiveEvt
    _MdmWifiCmd_MainTask->_SendDataSm
    _StartConnectionSm->_strstr
    _SendDataSm->_OsTmr_GetTimerStatus
    _utoa->___lwdiv
    _strstr->_strncmp
    _strncmp->_strlen
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _MdmWifi_SendWifiMsg->_Uart_WriteString
    _Uart_WriteString->_UartTxBufferStatus
    _MdmWifi_ReceiveWifiMsg->_StringCopy
    _ReceiveDataSm->_ReceiveEvt
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    ___lldiv->___lmul
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    None.

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Sch_MainScheduler->_ScheduleTasks
    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  412861
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    3901
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    3523
                                             39 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3371
                                             35 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2109
                                             25 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  408960
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  204546
                                            156 BANK0      4     4      0
                                            200 BANK1      1     1      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                _MdmWifiCmd_MainTask *
               _MdmWifiHttp_MainTask *
                  _MdmWifi_DrvMainFn *
                   _MdmWifi_MainTask *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  204414
                                            156 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                _MdmWifiCmd_MainTask *
               _MdmWifiHttp_MainTask *
                  _MdmWifi_DrvMainFn *
                   _MdmWifi_MainTask *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   44242
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   40538
                                             27 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5092
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    1900
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   23316
                                             26 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   22677
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   17493
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    6880
                                             20 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    5475
                                             20 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5092
                                             12 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2400
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                              8 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    1804
                                              7 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   55222
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         74    74      0   55222
                                             82 BANK0     74    74      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    1698
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           454   454      0   26559
                                             28 BANK0     54    54      0
                                              0 BANK1    200   200      0
                                              0 BANK2    200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strtol
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2033
                                             12 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0      90
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     158
                                              3 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    1824
                                              6 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    5898
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2090
                                              7 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    1667
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    8507
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    1870
                                              3 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    1681
                                              3 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0    1250
                                              4 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7334
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             12 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                              8 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                              4 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                              1 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MdmWifi_MainTask                                     1     1      0   11991
                   _MdmWifiEvtParser
                 _MdmWifiGetUartData
                      _UartSetConfig
                _Uart_InitUartModule
 ---------------------------------------------------------------------------------
 (4) _Uart_InitUartModule                                  5     3      2    2942
                                             32 BANK0      5     3      2
                    _SetUartBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetUartBaudRate                                      7     5      2    2193
                                             25 BANK0      7     5      2
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     702
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (4) _UartSetConfig                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MdmWifiGetUartData                                   0     0      0    4571
                        _ClearBuffer
                        _GenerateEvt
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (4) _MdmWifiEvtParser                                     0     0      0    4478
                        _GenerateEvt
                         _ReceiveEvt
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _MdmWifi_DrvMainFn                                    1     1      0    2565
           _MdmWifi_StartWifiModemSm
 ---------------------------------------------------------------------------------
 (4) _MdmWifi_StartWifiModemSm                             0     0      0    2565
                        _GenerateEvt
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _MdmWifiHttp_MainTask                                 1     1      0       0
 ---------------------------------------------------------------------------------
 (3) _MdmWifiCmd_MainTask                                  1     1      0   66510
                      _ReceiveDataSm
                         _SendDataSm
                  _StartConnectionSm
 ---------------------------------------------------------------------------------
 (4) _StartConnectionSm                                  106   106      0   31707
                                             19 BANK0    106   106      0
                        _ClearBuffer
             _MdmWifi_ReceiveWifiMsg
                _MdmWifi_SendWifiMsg
                         _ReceiveEvt
                             _strcat
                             _strcpy
                             _strstr
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _ClearBuffer                                          6     2      4     803
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _SendDataSm                                         109   109      0   32238
                                             30 BANK0    109   109      0
             _MdmWifi_ReceiveWifiMsg
                _MdmWifi_SendWifiMsg
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                         _ReceiveEvt
                             _strcat
                             _strcpy
                             _strstr
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    5468
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) _strstr                                               4     0      4    1913
                                             15 BANK0      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              9     3      6     401
                                              6 BANK0      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     357
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _strchr                                               5     1      4     266
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4    3279
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _strcat                                               7     2      5   13804
                                              0 BANK0      7     2      5
 ---------------------------------------------------------------------------------
 (5) _OsTmr_StartTimer                                     6     0      6     644
                                              4 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (5) _OsTmr_GetTimerStatus                                 6     4      2     845
                                             24 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (6) _GetElapsedTime                                      20    16      4     424
                                              4 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (6) _GetOsTickCounter                                     4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) _MdmWifi_SendWifiMsg                                  2     0      2    1783
                                              6 BANK0      2     0      2
                   _Uart_WriteString
 ---------------------------------------------------------------------------------
 (6) _Uart_WriteString                                     3     1      2     604
                                              3 BANK0      3     1      2
                 _UartTxBufferStatus
                      _UartWriteByte
 ---------------------------------------------------------------------------------
 (7) _UartWriteByte                                        2     1      1     355
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (7) _UartTxBufferStatus                                   3     3      0      71
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) _MdmWifi_ReceiveWifiMsg                               5     1      4    2853
                                              8 BANK0      5     1      4
                         _ReceiveEvt
                         _StringCopy
 ---------------------------------------------------------------------------------
 (5) _StringCopy                                           8     2      6    1203
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (4) _ReceiveDataSm                                        0     0      0    2565
                        _GenerateEvt
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    3624
                                             20 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                      8     2      6    3624
                                             12 BANK0      8     2      6
               _LedBlinkStateMachine
               _LedPulseStateMachine
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    1443
                                              7 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) _Led_SetLedStatus                                     2     1      1     177
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1265
                                              7 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     824
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   12835
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    8254
                                              6 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    7855
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1375
                                             37 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1198
                                             25 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     976
                                             12 BANK0     13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    3206
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2    1226
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     309
                                              1 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2    1671
                                              3 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2    1339
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0     944
                                             40 COMRAM    21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0     944
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0     944
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0     944
                                             30 COMRAM    10    10      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             25 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             22 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0     167
                                              4 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0     167
            _Uart_MdmWifiReadService
 ---------------------------------------------------------------------------------
 (22) _Uart_MdmWifiReadService                             2     1      1     167
                                              3 COMRAM     1     0      1
                      i2_GenerateEvt
 ---------------------------------------------------------------------------------
 (23) i2_GenerateEvt                                       3     1      2      56
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 23
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
       _MdmWifiCmd_MainTask *
         _ReceiveDataSm
           _GenerateEvt
           _ReceiveEvt
         _SendDataSm
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _StartConnectionSm
           _ClearBuffer
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _MdmWifiHttp_MainTask *
       _MdmWifi_DrvMainFn *
         _MdmWifi_StartWifiModemSm
           _GenerateEvt
           _ReceiveEvt
       _MdmWifi_MainTask *
         _MdmWifiEvtParser
           _GenerateEvt
           _ReceiveEvt
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
         _MdmWifiGetUartData
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
           _memset
           _putUSBUSART
             _strlen (ARG)
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
               ___lmul (ARG)
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
       _MdmWifiCmd_MainTask *
         _ReceiveDataSm
           _GenerateEvt
           _ReceiveEvt
         _SendDataSm
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
         _StartConnectionSm
           _ClearBuffer
           _MdmWifi_ReceiveWifiMsg
             _ReceiveEvt
             _StringCopy
           _MdmWifi_SendWifiMsg
             _Uart_WriteString
               _UartTxBufferStatus
               _UartWriteByte
           _ReceiveEvt
           _strcat
           _strcpy
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
           _utoa
             ___lwdiv
             ___lwmod
       _MdmWifiHttp_MainTask *
       _MdmWifi_DrvMainFn *
         _MdmWifi_StartWifiModemSm
           _GenerateEvt
           _ReceiveEvt
       _MdmWifi_MainTask *
         _MdmWifiEvtParser
           _GenerateEvt
           _ReceiveEvt
           _strstr
             _strchr
             _strlen
             _strncmp
               _strlen (ARG)
         _MdmWifiGetUartData
           _ClearBuffer
           _GenerateEvt
           _ReceiveEvt
           _StringCopy
         _UartSetConfig
         _Uart_InitUartModule
           _SetUartBaudRate
             ___lldiv
               ___lmul (ARG)
             ___lmul
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
           _memset
           _putUSBUSART
             _strlen (ARG)
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
             ___lmul (ARG)
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr
     _Uart_MdmWifiReadService
       i2_GenerateEvt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0       0      36        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0      FA      30       97.7%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0      C8      28       78.1%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0      C8      26       78.1%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0      CB      24       79.3%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0      C8      22       78.1%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      CB      20       79.3%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      F4      18       95.3%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      DC      16       85.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      F9      12       97.3%
BITBANK2           100      0       0       9        0.0%
BANK2              100     C8      FF      10       99.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C9     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      88      14       70.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      5C       1       97.9%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     B34       8        0.0%
DATA                 0      0     B34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Dec 10 10:17:50 2018

                     SendDataSm@DataIndex 000089                                _USB_SD_Ptr 000001  
                         ??_UpdateSchFlag 000016                        _Mcu_StartSystemPll 000000  
                   ?_LedPulseStateMachine 000007                              ___awdiv@sign 000005  
                  I2c_ReadData@ReadPacket 000003                                        bsr 000FE0  
                  ??_LedBlinkStateMachine 000009                             _USBDeviceInit 000000  
                     ___wmul@multiplicand 000002            MdmWifi_ReceiveWifiMsg@RxBuffer 000008  
                        i1___wmul@product 00001A                        __size_of_CDCInitEP 000000  
                      i2GenerateEvt@Event 000000                  InitSchedTimer@TmrBConfig 000027  
                     _MdmWifiCmd_MainTask 000000                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 000006      USER_USB_CALLBACK_EVENT_HANDLER@event 00000C  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 00000E                    I2c_ReadData@ReadStatus 000022  
                                     l202 000084                                       l203 00008C  
                                     l300 00008E                                       l205 0000D6  
                                     l301 00000E                                       l206 000100  
                                     l302 000014                                       l303 000034  
                                     l231 00000C                                       l208 00010A  
                                     l160 00013A                                       l304 000040  
                                     l209 00012C                                       l161 000002  
                                     l305 00004C                                       l162 00017A  
                                     l170 0000D2                                       l306 000058  
                                     l330 00016E                                       l402 00003A  
                                     l410 0000E8                                       l171 0000EC  
                                     l163 000010                                       l323 0001FE  
                                     l331 0001B6                                       l403 000006  
                                     l411 0000D4                                       l164 000052  
                                     l324 000006                                       l420 00000E  
                                     l412 00007C                                       l173 0000F0  
                                     l421 000006                                       l405 000020  
                                     l413 0000E2                                       l174 0000F8  
                                     l166 000060                                       l326 00004E  
             __end_of_USBStdGetDscHandler 00012C                                       l414 0000A8  
                                     l175 000110                                       l167 00008A  
                                     l511 000086                                       l327 000096  
                                     l423 00000A                                       l192 000136  
                                     l328 0000DE                                       l193 000002  
                                     l169 00009E                                       l521 000012  
                                     l513 0000AE                                       l329 000126  
                                     l194 000170                                       l178 00011C  
                                     l195 000010                                       l179 000128  
                                     l515 000126                                       l507 00003A  
                                     l196 000054                                       l428 000058  
                                     l533 000026                                       l509 00005E  
                                     l429 000074                                       l198 000062  
                                     l542 00004A                                       l534 000020  
                                     l550 00017C                                       l382 000084  
                                     l199 000078                                       l392 000056  
                                     l384 000016                                       l721 00000A  
                                     l393 000046                                       l385 000006  
                                     l570 000006                                       l650 00001C  
                                     l298 000060                                       l706 000130  
                                     l394 00006A                                       l386 00002C  
                                     l299 000006                                       l395 00004A  
                                     l387 00000A                                       l572 000036  
                                     l652 00003E                                       l396 000050  
                                     l388 000010                                       l654 000060  
                                     l903 000042                                       l647 00006C  
                                     l648 000002                                       l761 000026  
                                     _BDT 000400                                       l773 000064  
                                     l880 00003A                                       l793 00006E  
                                     l875 0000C0                                       l796 000080  
                                     l876 000002                                       l990 000098  
                                     l991 0000E2                                       l879 00001E  
                                     l895 000022                                       l992 000102  
                                     l888 000042                                       l896 000002  
                                     l985 0002C0                                       l993 000264  
                                     l986 000002                                       l898 000018  
                                     l996 0002B4                                       l989 00001E  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                i2GenerateEvt@EventStatus 000002                   __end_of_HighPriorityIsr 0000AC  
                     ?_Mcu_StartSystemPll 000000                                _USBSuspend 000000  
                            ___awmod@sign 000005                      USBStdSetCfgHandler@i 000014  
                                     prod 000FF3                                       tosl 000FFD  
                                     wreg 000FE8              I2cSlv_ReceiveI2cMsg@RxBuffer 000003  
                          _USBDeviceTasks 000000                              __CFG_IESO$ON 000000  
                          _USBDeviceState 00002E               Rtcc_AlarmConfig@AlarmConfig 000000  
            __end_of_I2cSlv_ReceiveI2cMsg 000044                             ??_Mcu_Int0Isr 000000  
                           ??_Mcu_Int1Isr 000000                     ??_USBCtrlTrfRxService 000000  
                          ??_getsUSBUSART 00000A                  USBEnableEndpoint@options 000008  
                 ?_MdmWifi_ReceiveWifiMsg 000008             ??_Tmr_RegisterTmr2IsrCallback 000002  
                                    l1010 00001E                                      l1011 000098  
                                    l1012 00014A                                      l1013 00018E  
                                    l1006 000210                                      l1007 000002  
                                    l1024 000034                                      l1025 000002  
                                    l1017 0001AA                                      l1033 000010  
                                    l1203 000018                                      l1028 00001E  
                                    l1036 000002                                      l2101 000408  
                                    l2102 000014                                      l2120 000248  
                                    l1401 00001A                                      l2121 0001D6  
                                    l2105 000084                                      l1170 000048  
                                    l2122 000172                                      l2106 000106  
                                    l2114 0000F8                                      l1163 000094  
                                    l1403 000044                                      l1172 000064  
                                    l1164 000002                                      l2132 0002B4  
                                    l2124 000226                                      l2108 0000DA  
                                    l1420 000048                                      l1500 00000C  
                                    l1165 000022                                      l1405 0000A0  
                                    l2141 0003B4                                      l2125 0001E8  
                                    l2109 0000CC                                      l1174 000080  
                                    l2142 000400                                      l2134 0002F2  
                                    l1175 00008A                                      l1167 000042  
                                    l2151 0003B2                                      l1503 000094  
                                    l2152 000002                                      l1432 000066  
                                    l1504 00001C                                      l1193 000038  
                                    l2137 000348                                      l2161 000054  
                                    l1505 000020                                      l1361 0000AE  
                                    l1513 000040                                      l1521 00002E  
                                    l1185 000042                                      l2138 00030C  
                                    l2154 000028                                      l1506 00003C  
                                    l1426 000050                                      l1442 0000A6  
                                    l1514 00003E                                      l1522 00002C  
                                    l1370 000020                                      l1186 000002  
                                    l2171 0003AC                                      l2163 000074  
                                    l1451 000020                                      l2156 000044  
                                    l1460 000094                                      l1540 000058  
                                    l1428 000066                                      l1188 00003C  
                                    l2165 000094                                      l1453 00002A  
                                    l1437 00007C                                      l1357 00004A  
                                    l1381 0000C0                                      l1373 000048  
                                    l1198 00003E                                      l1470 0000B8  
                                    l1438 000026                                      l1382 0000CC  
                                    l1374 000058                                      l2351 00009A  
                                    l2167 000210                                      l1455 00008A  
                                    l1551 00009C                                      l1527 000084  
                                    l1359 000072                                      l1391 00015C  
                                    l1383 0000F6                                      l1375 000060  
                                    l2352 00005C                                      l1720 0000D6  
                                    l1712 00006E                                      l1456 000052  
                                    l1480 0000C2                                      l1528 00007E  
                                    l1384 000102                                      l1376 000076  
                                    l1368 00002C                                      l2176 000008  
                                    l2193 000012                                      l2345 000008  
                                    l2169 00038C                                      l1713 000072  
                                    l1705 000016                                      l1561 000098  
                                    l1393 00017A                                      l1377 000082  
                                    l1369 000022                                      l1810 0000AE  
                                    l2194 000026                                      l2354 0000CE  
                                    l2346 000002                                      l1546 000034  
                                    l1466 00005C                                      l1538 00000E  
                                    l1490 0000AC                                      l1570 000044  
                                    l1562 000010                                      l1386 000116  
                                    l2371 000064                                      l1723 000128  
                                    l1715 0000CC                                      l1707 000024  
                                    l1459 0000CC                                      l1547 00003A  
                                    l1467 000036                                      l1571 000060  
                                    l1379 0000AA                                      l2179 000002  
                                    l2620 000018                                      l1820 000002  
                                    l2372 00006E                                      l2364 000016  
                                    l2380 000038                                      l2348 00004A  
                                    l2532 000026                                      l1724 00012E  
                                    l1716 000094                                      l1548 0000B6  
                                    l1396 000014                                      l1660 000066  
                                    l1492 0000B2                                      l1572 000078  
                                    l1564 00001A                USBConfigureEndpoint@handle 000006  
                                    l1821 0000D6                                      l2373 00007C  
                                    l2365 000026                                      l2381 000030  
                                    l1709 00005A                                      l1549 00007A  
                                    l1469 0000D2                                      l1397 000024  
                                    l1661 00007C                                      l1581 00009A  
                                    l1493 000108                                      l1565 000020  
                                    l1389 00013C                                      l1806 000120  
                                    l1822 000020                                      l1830 00000C  
                                    l2630 000010                                      l2526 00001A  
                                    l1590 000174                                      l1486 000114  
                                    l1478 00004E                                      l1566 000026  
                                    l2623 000040                                      l1807 000002  
                                    l1831 00005C                                      l2367 000044  
                                    l1719 00010E                                      l1655 000084  
                                    l1583 0000E2                                      l1495 00010E  
                                    l1487 000010                                      l1567 000038  
                                    l2624 00004A                                      l1808 000136  
                                    l1824 000090                                      l1832 000010  
                                    l2536 000008                                      l2368 00003C  
                                    l2384 000050                                      l1680 00003E  
                                    l1656 000026                                      l1592 0001D6  
                                    l1584 0000E4                                      l1568 00003E  
                                    l1840 000002                                      l1809 00002A  
                                    l1833 000014                                      l2633 000030  
                                    l2385 00005A                                      l2377 000016  
                                    l1681 00006A                                      l1753 00000E  
                                    l1761 000008                                      l1593 0001E2  
                                    l1585 000100                                      l1489 000022  
                                    l1745 000012                                      l2570 000064  
                                    l1850 00000C                                      l1834 000026  
                                    l2802 000068                                      l2634 00003A  
                                    l2538 000044                                      l2386 000068  
                                    l2378 000022                                      l1682 000044  
                                    l2650 00000A                                      l1658 00003C  
                                    l1594 00025E                                      l1578 000020  
                                    l1746 000002                                      l1842 000010  
                                    l2571 000072                                      l2619 000020  
                                    l1851 000012                                      l1819 0000BA  
                                    l2803 000002                                      l2539 000086  
                                    l1659 000048                                      l1587 00018E  
                                    l1579 000026                                      l1499 00007E  
                                    l2643 000034                                      l2804 00003E  
                                    l2644 000012                                      l1748 000008  
                                    l1829 00003A                                      l2629 000018  
                                    l1677 000090                                      l2821 000040  
                                    l1597 000214                                      l1589 000156  
                                    l1925 00007C                                      l2566 000030  
                                    l1926 000002                                      l2567 000024  
                                    l1847 000018                                      l2831 0000BC  
                                    l2823 000058                                      l1759 000002  
                                    l1599 00026A                                      l1839 0000A4  
                                    l1848 000006                                      l2840 00018A  
                                    l2832 0000CC                                      l1928 000068  
                                    l2841 0001C4                                      l2825 0000AC  
                                    l2649 00001C                                      l2834 0000E6  
                                    l2845 000014                                      l2837 0000F8  
                                    l2790 000010                                      l1990 000028  
                                    l2838 000164                                      l2775 000010  
                                    l2791 00000A                                      l1991 000014  
                                    l2871 000026                                      l1984 000034  
                                    l2776 00000A                                      l2784 000014  
                                    l1985 000014                                      l2785 00000A  
                                    l2881 00001A                                      l2778 000032  
                                    l2779 000020                                      l2891 000070  
                                    l2892 000002                                      l2876 000022  
                                    l2893 000068                                      l2886 00001C  
                                    l8109 000042                                      l8137 0000A6  
                                    l7541 000096                                      l6645 00000A  
                                    l7391 000012                                      l9321 00000A  
                                    l6683 00002A                                      l9333 00000A  
                                    l8517 0000E8                                      l7753 000002  
                                    l6777 000046                                      l7941 00001A  
                                    l9293 00000C                                      l8911 00010E  
                                    STR_1 0002F9                                      STR_2 0002FF  
                                    l9937 000028                                      STR_3 000278  
                                    STR_4 000001                                      l9939 000058  
                                    STR_5 000002                                      STR_6 00030C  
                                    STR_7 000308                                      STR_8 000002  
                                    STR_9 000001                                      u6015 000022  
                                    u4610 000078                                      u5340 000026  
                                    u4460 00007A                                      u4620 0000A8  
                                    u7005 0000DA                                      u5350 000044  
                                    u6310 00003C                                      u5270 00001E  
                                    u5335 00000E                                      u6135 000010  
                                    u5336 000010                                      u5360 000064  
                                    u6136 000012                                      u4480 0000BC  
                                    u4640 0000FC                                      u6400 00010A  
                                    u7025 0001AC                                      u4617 00006E  
                                    u5530 000018                                      u5290 000016  
                                    u4570 00007A                                      u5347 00001C  
                                    u7035 0001CC                                      u4467 000070  
                                    u4627 00009E                                      u6340 00005A  
                                    u7060 000050                                      u5700 000092  
                                    u6317 000032                                      u7045 000252  
                                    u6190 000082                                      u5367 00005A  
                                    u4487 0000B2                                      u4647 0000F2  
                                    u4920 00001C                                      u6290 000080  
                                    u5650 000048                                      u6370 000066  
                                    u6347 000050                                      u5900 00003C  
                                    u4860 0001F8                                      u8028 0000E2  
                                    u8029 000112                     ??_USBCtrlTrfTxService 000000  
                                    u5840 000048                                      u5680 000082  
                                    u4890 000024                                      u5940 000034  
                                    u7701 00005C                                      u4990 00001C  
                                    u5790 000030                                      u7550 000180  
                                    _UCFG 000F39                                      u7640 0000BC  
                                    u5970 000032                                      u6850 000352  
                                    u6915 000010                                      u6916 000014  
                                    u7660 0000FE                                      _UEP0 000F26  
                                    u5797 000026                                      u6925 000010  
                                    _UEP1 000F27                                      u7670 000116  
                                    u6926 000012                                      u7647 0000B2  
                                    u6935 00001C                                      u6936 00001E  
                                    u6945 00002A                                      u7905 00000E  
                                    u6946 00002C                                      u7906 000010  
                                    u7667 0000F4                                      u6955 000036  
                                    u7915 00001A                                      _UEIE 000F37  
                                    u6956 000038                                      u7916 00001C  
                                    u7925 000026                  __size_of_Uart_Uart1RxIsr 000000  
                                    u7926 000028                                      u6895 000064  
                                    u6985 000034                                      u7881 00005A  
                                    u6995 000054                                      u7891 000072  
                                    _UEIR 000F63                                      _UCON 000F65  
                                    u7988 000048                                      u7989 000074  
                              _AlarmEvent 00002A                            ?_StopCondition 000000  
             __end_of_MdmWifi_SendWifiMsg 000010                      ?_MdmWifiCmd_MainTask 000000  
                     _OsTmr_OsTickCounter 000020                             __CFG_FCMEN$ON 000000  
                         _CDCDataInHandle 000000              I2c_ReadData@TentativeCounter 000023  
  USBStdFeatureReqHandler@current_ep_data 000017                                      _pDst 00001A  
                    _MdmWifiHttp_MainTask 000000                                      _atoi 000000  
                                    _main 000000                                      _itoa 000000  
                        ?_SetUartBaudRate 000019                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 000018  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 000000  
                                    _utoa 000000                             __CFG_T1DIG$ON 000000  
                  _Pm_DsReleasePinControl 000000               __size_of_Sch_SchmIntService 000000  
                       _Rtcc_GetRtccValue 000000               I2cSlv_SendI2cMsg@DataLenght 000006  
                    ??_Mcu_StartSystemPll 000000                                      prodh 000FF4  
                                    prodl 000FF3                                      start 000000* 
                     __end_of_GenerateEvt 000018                __end_of_USBCheckStdRequest 0000DC  
                         _Rtcm_SystemDate 00000A                    ??_USBCtrlTrfOutHandler 000002  
                __end_of_GetOsTickCounter 000012                        ?_Rtcc_GetRtccValue 000000  
         Uart_MdmWifiReadService@UartData 000003                            _GetElapsedTime 000000  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 000005                              ___param_bank 000000  
               Term_MainSm@FwkBuildDayStr 000090                 ??_USBStdFeatureReqHandler 000014  
                     StringCopy@SourceStr 000000               __end_of_OsAlrm_ClearOsAlarm 000058  
                                   EECON2 000FA7                  ??_USBStdGetStatusHandler 000000  
                     __size_of_I2cDummyTx 000000                            ?_USBDeviceInit 000000  
                           __CFG_PLLDIV$2 000000                          _Uart_WriteString 000000  
                     ??_Rtcc_GetRtccValue 000000                           __end_of_Welcome 000180  
                       ?_UpdateOsCounters 000000                        _MdmWifiGetUartData 000000  
                                   ?_atoi 000006                                     ?_main 000000  
                                   ?_itoa 000010                           __end_of___awdiv 000086  
                                   STR_10 000002                                     STR_11 000002  
                                   STR_12 000001                                     STR_20 0002E8  
                                   STR_13 000008                                     STR_21 0002B4  
                                   STR_22 000319                                     STR_14 0002F1  
                                   STR_23 00031B                                     STR_31 0002A9  
                                   STR_15 000285                                     STR_16 000001  
                                   STR_24 00031D                                     STR_40 00029D  
                                   STR_32 000291                                     STR_17 000008  
                                   STR_33 000317                                     STR_41 00026B  
                                   STR_18 00031F                                     STR_26 0002CA  
                                   STR_19 000008                                     STR_43 0002DE  
                                   STR_60 000000                                     STR_28 000304  
                                   STR_36 0002BF                           __end_of___awmod 000072  
                                   STR_61 000008                                     STR_53 00025D  
                                   STR_46 000310                                     STR_62 000234  
                                   STR_63 000313                                     STR_64 000000  
                                   STR_65 000008                                     STR_49 0002D4  
                                   STR_58 000249                                     STR_59 000315  
       __size_of_USBCtrlEPServiceComplete 000000                           __end_of___lldiv 000084  
                                   ?_utoa 000007                           ___awdiv@divisor 000002  
                  __end_of_USBDeviceTasks 000184                 ?_USBCtrlEPServiceComplete 000000  
                         __end_of___lwdiv 000054                           __end_of___lwmod 000044  
                      ??_UpdateOsCounters 000016                                     i1l673 000018  
                                   i1l678 00015A                                     i2l557 000030  
                                   _UADDR 000F38                           ___awdiv@counter 000004  
                                   _AlCfg 0000DB                   I2cSendMsgSm@I2cComState 000012  
                                   _USTAT 000F64                   __end_of_LedStateMachine 000060  
              MdmWifiCmd_MainTask@Options 000000                                _ConnStatus 000018  
      __size_of_USBCtrlEPAllowStatusStage 000000                       ___lmul@multiplicand 000004  
               __size_of_MdmWifiEvtParser 000000                              _AddressLocal 000058  
          __end_of_MdmWifi_ReceiveWifiMsg 00004C                                     _RxLen 000024  
                     ?_MdmWifiGetUartData 000000           __end_of_USBCtrlEPAllowDataStage 000098  
                                   _sd000 000230                                     _sd001 0001E9  
                                   _sd002 0001C3            ?_USBIncrement1msInternalTimers 000000  
             Rtcc_GetRtccValue@RtccPtrVal 000001                      __end_of_Led_MainTask 0000B6  
                  ??_OsTmr_GetTimerStatus 00001A              LedPulseStateMachine@LedPulse 000007  
                         __end_of_isalpha 000030                           __end_of_isdigit 000022  
                                   atoi@a 00000B                                     atoi@s 000006  
  MdmWifiGetUartData@WifiUartGetDataState 00001E                               _ClearBuffer 000000  
                         __end_of_isspace 00002A                 __size_of_MdmWifi_MainTask 000000  
              I2c_WriteData@I2cWriteState 000029                 Rtcc_GetRtccValue@RegValue 000003  
                 __size_of_Rtcc_RtcConfig 000000                           __end_of_isupper 000022  
                                   pclath 000FFA                     ??_MdmWifiCmd_MainTask 00008B  
                                   tablat 000FF5                          __end_ofi1___wmul 000026  
               __end_of_Rtcc_GetRtccValue 000094                     ?_MdmWifiHttp_MainTask 000000  
                                   plusw0 000FEB                                     plusw2 000FDB  
                       __end_of_CDCInitEP 00006C                                     utoa@c 00000F  
                           ??_SetBaudRate 000021                                     utoa@v 00000D  
                                   status 000FD8                           _I2cSlv_MainTask 000000  
               Rtcc_GetRtccValue@RetValue 000002                       i1___wmul@multiplier 000016  
                                   wtemp6 000001                       __end_of_Mcu_Int0Isr 000004  
                     __end_of_Mcu_Int1Isr 000004                           __end_of_strncmp 00008C  
                         __end_of_toupper 000018                  MdmWifi_DrvMainFn@Options 000000  
                  __end_of_GetElapsedTime 0000C8                     __end_of_UartSetConfig 000058  
        __end_of_MdmWifi_StartWifiModemSm 00008A                  ?_Uart_MdmWifiReadService 000003  
             Rtcc_SetRtccValue@RtccPtrVal 00000B                     __end_of_Term_MainTask 00001A  
                 LedStateMachine@LedBlink 00000E                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 000006              __size_of_USBStdSetCfgHandler 000000  
                    ??_MdmWifiGetUartData 000008                   OsTmr_StartTimer@Timeout 000006  
                    __end_of_I2cSetConfig 00002C                            _InitSchedTimer 000000  
                         __initialization 000000                      __end_of_I2c_ReadData 000176  
                 Rtcc_RtcConfig@RtcConfig 000001                      __end_of_I2cSendMsgSm 0000B8  
                 LedStateMachine@LedPulse 000010                         _StartConnectionSm 000000  
                            __end_of_atoi 0000D8                              __end_of_main 00000C  
                            __end_of_itoa 000044                    ??_LedPulseStateMachine 00000A  
                   _control_signal_bitmap 000007                              __end_of_utoa 0000AA  
                __end_of_Rtcm_SetRtccDate 000054                   __size_of_Rtcc_UnlockRtc 000000  
                        ??_StartCondition 000000                          __end_of_ReadByte 00000A  
                      ?_StartConnectionSm 000000                      Term_MainSm@TermDelay 000000  
                          __CFG_OSC$HSPLL 000000                          __end_of_MsgReady 00021E  
               __size_of_USBCtrlEPService 000000                                    ??_atoi 000008  
                                  ??_main 0000A0              __size_of_Uart_InitUartModule 000000  
                                  ??_itoa 000016                                    ??_utoa 00000D  
                           __activetblptr 000003                           ?_USBDeviceTasks 000000  
              Term_MainSm@FwkBuildYearStr 000098                          __end_of_TmrBInit 000096  
                              _ReceiveEvt 000000                    __size_of_ReceiveDataSm 000000  
                StartConnectionSm@IdAscii 00007C                               ?_USBSuspend 000000  
                       ?_Mcu_ConfigExtInt 000000                          ?_HighPriorityIsr 000000  
                     ??_StartConnectionSm 000013                          __end_of_Terminal 000420  
                           ?_SetAckStatus 000000                         ?_Led_SetLedStatus 000000  
                              _SendDataSm 000000                              _cdc_mem_type 000008  
                      ??_Mcu_ConfigExtInt 000000                           ReceiveEvt@Event 000000  
                        _CDCDataOutHandle 00000C                           ??_StopCondition 000000  
                      ??_Led_SetLedStatus 000001                          ___awdiv@dividend 000000  
              __end_of_UsbDevice_MainTask 000024                           getsUSBUSART@len 000009  
                   __end_of_UartWriteByte 000020                          ??_LowPriorityIsr 000028  
                                  _DSGPR0 000F4E                                    _DSGPR1 000F4F  
      Irq_InitIntController@IntPriorityEn 000002                     __size_of_CDCTxService 000000  
                                  i1l1193 000032                               _GenerateEvt 000000  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                             _NewWifiPacket 00001C  
               Uart_Uart1RxIsr@UartRxData 000021                             CDCTxService@i 000007  
                                  _RTCCAL 000F3E                                    _SPBRG1 000FB0  
                                  _SPBRG2 000FAB                                _TaskNumber 000009  
                             _BufferLocal 000000                            __CFG_WPCFG$OFF 000000  
                                  _TXREG1 000FAE                                    _TXREG2 000FA9  
                                  _TXSTA1 000FAD                                    _TXSTA2 000FA8  
                __end_of_Rtcc_AlarmConfig 00006C                    __end_of_InitSchedTimer 00002E  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 000004  
                          _EnableReceiver 000000                                _UartConfig 000071  
               __end_of_StartConnectionSm 0002D8                         ??_Uart_Uart1RxIsr 000004  
                       _shortPacketStatus 000017                             ??_Term_MainSm 000052  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 000000  
                         USBDeviceTasks@i 00001B               USBStdFeatureReqHandler@pUEP 000015  
                USBTransferOnePacket@data 000001                USBCtrlTrfInHandler@lastDTS 000001  
                           ??_RtccIrqInit 000000                  ??_OsAlrm_ProcessOsAlarms 00001E  
                         ??_USBDeviceInit 000008                       __end_of_SetBaudRate 00004E  
                                  ___lmul 000000                      _I2cSlv_ReceiveI2cMsg 000000  
                            ?_putUSBUSART 000006                                    ___wmul 000000  
                               ??___awdiv 000004            GetElapsedTime@CurrentTimestamp 000014  
                          __CFG_STVREN$ON 000000                                 ??___awmod 000004  
                       ?_Rtcm_GetRtccDate 000004                                 ??___lldiv 000014  
                    __end_of_getsUSBUSART 000094                                 ??___lwdiv 000004  
                  Tmr_TmrBPrSet@IntFreqHz 000019                                 ??___lwmod 000004  
                       _USBEnableEndpoint 000000           __size_of_USBStdGetStatusHandler 000000  
                           ??_Rtcc_RtcIsr 000000                              ReadByte@Byte 000000  
                                  _memcpy 000000                                    _memset 000000  
                                  clear_0 00006A                                    clear_1 000076  
                                  clear_2 000082                                    clear_3 00008E  
                                  clear_4 00009A                                    clear_5 0000A6  
                                  clear_6 0000B2                                    clear_7 0000BE  
                                  clear_8 0000CA                                    clear_9 0000D6  
                        ___awdiv@quotient 000006                        ??_Rtcm_GetRtccDate 00000C  
                         ___awmod@divisor 000002                        _ExtInt0IsrCallback 000022  
                       ?_OsTmr_StartTimer 000004                           ___awmod@counter 000004  
                     UartWriteByte@Module 000001                        ?_USBEnableEndpoint 000008  
                                  _strcat 000000                                    _strchr 000000  
                                  _strcpy 000000                                    _strlen 000000  
                                  _strtol 000000                                    _strstr 000000  
                        ClearBuffer@Index 000004             __size_of_USBTransferOnePacket 000000  
                      ??_OsTmr_StartTimer 00000A                                    itoa@cp 000016  
                               ??_isalpha 000003                                 ??_isdigit 000000  
                          ??_SetAckStatus 000000                              _CDCTxService 000000  
                        ?_LedStateMachine 00000C                              __mediumconst 000000* 
                               ??_isspace 000000                    __size_of_CheckTxStatus 000000  
                                  tblptrh 000FF7                                 ??_isupper 000000  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                     ??_USBEnableEndpoint 000009                   __end_of_I2cSlv_MainTask 000054  
                           ??_Tmr_Tmr2Isr 000028                              ??_I2cDummyTx 00001E  
               OsTmr_GetTimerStatus@Timer 000018                               _Mcu_Int0Isr 000000  
                             _Mcu_Int1Isr 000000                 MdmWifiGetUartData@Counter 00001D  
                  __size_of_ScheduleTasks 000000                               _CtrlTrfData 000438  
                               ??_strncmp 00000C                                 ??_toupper 000000  
                  ??_MdmWifiHttp_MainTask 000000                      _controlTransferState 000016  
                   __end_ofi1_GenerateEvt 000016           __end_of_Uart_MdmWifiReadService 000032  
                   __end_of_Rtcm_MainTask 00008E                __size_of_Rtcc_GetRtccValue 000000  
                      _ExtInt1IsrCallback 000020                                __accesstop 000000* 
                 __end_of__initialization 000100                    Tmr_TmrBPrSet@Prescaler 00001B  
                  __end_of_EnableReceiver 000004                        __size_of_WriteByte 000000  
                           _ReceiveDataSm 000000                             ___rparam_used 000001  
                __size_of_USBStallHandler 000000                           ?_InitSchedTimer 000000  
              __end_of_UartTxBufferStatus 00004E                      Terminal@FormatOption 000029  
                         __CFG_IOL1WAY$ON 000000                                _StringCopy 000000  
                   I2cDummyTx@DummyBuffer 00002E                      __CFG_WPEND$PAGE_WPFP 000000  
                     __size_of_USBSuspend 000000   MdmWifi_StartWifiModemSm@WifiModeSmState 00001F  
                   ?_I2cSlv_ReceiveI2cMsg 000003                            __pcstackCOMRAM 000000  
               __end_of_USBEnableEndpoint 000044                  LedStateMachine@LedOutSts 000013  
                           __end_of_sd000 000234                             __end_of_sd001 000207  
                           __end_of_sd002 0001E9                              __pidataBANK1 000000  
                            __pidataBANK2 000000                              __pidataBANK3 000000  
                            __pidataBANK4 000000                  _MdmWifi_StartWifiModemSm 000000  
        __size_of_USBCtrlEPAllowDataStage 000000             __size_of_USBConfigureEndpoint 000000  
                __size_of_InitializeTasks 000000                        __end_of_I2cDummyTx 00001C  
             __end_of_USBCtrlTrfInHandler 0000C0                           __CFG_DSWDTPS$G2 000000  
                     __end_of_Term_MainSm 0003EE                     LedStateMachine@LedSts 00000C  
                      LedStateMachine@Led 000012                                 ?i1___wmul 000016  
                     __end_of_RtccIrqInit 000016                     __size_of_Led_MainTask 000000  
                             ?_ReceiveEvt 000000                                _SystemInit 000000  
                              _cdc_notice 000000                     __end_of_Tmr_TmrBPrSet 0000EE  
                     __end_of_Rtcc_RtcIsr 000004                          _MdmWifiEvtParser 000000  
                              _cdc_rx_len 000013                         __end_of_MsgFormat 0000F7  
                              _cdc_tx_len 000012                               ?_SendDataSm 000000  
                     Terminal@UsbRxBuffer 000000                       Terminal@UsbTxBuffer 000000  
             __end_ofi1_I2cSlv_SendI2cMsg 000038                  ??_USBCtrlTrfSetupHandler 00001A  
                 _USBTicksSinceSuspendEnd 000009                            ClearBuffer@Len 000002  
                   _Irq_InitIntController 000000                    _USBStdGetStatusHandler 000000  
     Mcu_StartSystemPll@PllStartupCounter 000000               MdmWifiHttp_MainTask@Options 000000  
                          _Rtcc_RtcConfig 000000                          _MdmWifi_MainTask 000000  
                              __pbssBANK1 000000                                __pbssBANK2 000000  
                              __pbssBANK3 000000                                __pbssBANK4 000000  
                              __pbssBANK5 000000                                __pbssBANK6 000000  
                              __pbssBANK7 000000                                __pbssBANK8 000000  
                              __pbssBANK9 000000                   ?_Pm_DsReleasePinControl 000000  
                   __end_ofi2_GenerateEvt 000016                  __end_of_Uart_WriteString 00006C  
                               ?_ReadByte 000000                     __size_of_I2cSetConfig 000000  
                         ?_EnableReceiver 000000                            ?_ReceiveDataSm 000000  
                   __size_of_I2c_ReadData 000000                     __size_of_I2cSendMsgSm 000000  
                     __end_of_Tmr_Tmr2Isr 000022                               _SetBaudRate 000000  
             __size_of_USBWakeFromSuspend 000000                               _pBDTEntryIn 000006  
              __size_of_StartConnectionSm 000000          UartTxBufferStatus@TxBufferStatus 000002  
        __end_of_USBCtrlEPServiceComplete 0000FC                                 ?_TmrBInit 000000  
                           _CheckTxStatus 000000                          _WifiGenericError 000034  
                 __size_of_Tmr_TmrBConfig 000000               __size_of_USBCheckCDCRequest 000000  
                       ?_GetOsTickCounter 000000                   __size_of_Tmr_TmrBIrqSet 000000  
                    USBCtrlTrfRxService@i 000000                                 ?_Terminal 000000  
                                 ?___lmul 000000                              _Led_MainTask 000000  
                          _Rtcc_UnlockRtc 000000                              _I2cBusStatus 000013  
                                 ?___wmul 000000           __size_of_OsAlrm_ProcessOsAlarms 000000  
                           _ScheduleTasks 000000                 Uart_InitUartModule@Module 000024  
                   __end_of_I2c_WriteData 000180                        ??_GetOsTickCounter 000004  
                                 ?_memcpy 000000                                   ?_memset 000000  
                          ___lmul@product 000008                                _device_dsc 00021E  
                 __size_of_CheckAckStatus 000000                          _USBCtrlEPService 000000  
                   __end_of_UpdateSchFlag 00001E                                _ep_data_in 000017  
                         _I2cWriteDataEvt 00001B                  i1GenerateEvt@EventStatus 000018  
                           ?_Rtcc_LockRtc 000000                                   ?_strcat 000000  
                              ??i1___wmul 00001A                                   ?_strchr 000000  
                                 ?_strcpy 000000                                   ?_strlen 000000  
                                 ?_strtol 00000C                                   ?_strstr 00000F  
           __size_of_LedBlinkStateMachine 000000               __end_of_USBCtrlTrfRxService 00011C  
                       __end_of_WriteByte 00000A                        _USBCheckStdRequest 000000  
                       _configDescriptor1 000180                      _MdmWifi_UartRxBuffer 000000  
             __end_of_USBCtrlTrfTxService 0000D6                       _USBStdSetCfgHandler 000000  
                 MdmWifi_MainTask@Options 000000                      _MdmWifi_UartTxBuffer 000067  
           Uart_MdmWifiReadService@Module 000000                              _I2cSetConfig 000000  
                                 _SPBRGH1 000F7F                                   _SPBRGH2 000F7D  
                  __end_of_Rtcc_RtcConfig 0000A0                                   _SSP2ADD 000F74  
                                 _SSP2BUF 000F75                              _I2c_ReadData 000000  
                                 _RTCVALH 000F99                                   _RTCVALL 000F98  
                            _I2cSendMsgSm 000000                          ?_I2cSlv_MainTask 000000  
          __end_of_Pm_DsReleasePinControl 000006                 MdmWifi_ReceiveWifiMsg@Ret 00000C  
                     ?_USBCheckStdRequest 000000              __size_of_USBStdGetDscHandler 000000  
                                 _UIEbits 000F36                              ?_ClearBuffer 000000  
                                 _UIRbits 000F62                                   _IdLocal 00001B  
               __size_of_UpdateOsCounters 000000                                   _Led1Sts 00002D  
                                 _Led2Sts 00002C                                   _Led3Sts 00002B  
              __end_of_Sch_SchmIntService 00000E                             _cdc_trf_state 00002D  
                              ??_ReadByte 000000                       _Uart_InitUartModule 000000  
                          ?_CheckTxStatus 000000               __size_of_Mcu_StartSystemPll 000000  
                                 _pCDCDst 00000E                                   _pCDCSrc 000011  
                   __size_of_getsUSBUSART 000000                               ?_StringCopy 000000  
                     __size_of_ReceiveEvt 000000                                   __Hparam 000000  
                              ??_TmrBInit 000002                    ??_I2cSlv_ReceiveI2cMsg 000007  
         ??_USBIncrement1msInternalTimers 000000                            _I2cReadDataEvt 00002F  
                    ?_USBStdSetCfgHandler 000000                                 _CDCInitEP 000000  
                  __end_of_Rtcc_UnlockRtc 000010                                   __Lparam 000000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 000008                      __end_of_SetAckStatus 000014  
                             _Term_MainSm 000000              __size_of_MdmWifi_SendWifiMsg 000000  
                                 _Welcome 0000F7                __size_of_USBEnableEndpoint 000000  
                          ?_ScheduleTasks 000000                                ??_Terminal 00001C  
                     __size_of_SendDataSm 000000                         _Sch_MainScheduler 000000  
                    ??_USBCheckStdRequest 00001A                               _RtccIrqInit 000000  
           __size_of_USBCtrlTrfOutHandler 000000                                   ___awdiv 000000  
                    Term_MainTask@Options 000000                           __size_of___lmul 000000  
                __size_of_SetUartBaudRate 000000                                   ___awmod 000000  
                                 ___lldiv 000000                          ??_USBDeviceTasks 00001B  
                         __size_of___wmul 000000                                   ___lwdiv 000000  
                       ??_USBStallHandler 000000                                   ___lwmod 000000  
                       ?_Rtcm_SetRtccDate 00000C                        ?_Sch_MainScheduler 000000  
                             _Rtcc_RtcIsr 000000                      __size_of_putUSBUSART 000000  
                                 __pcinit 000000                        getsUSBUSART@buffer 000007  
                         __size_of_memcpy 000000                                 _I2cComSts 000018  
                         __size_of_memset 000000                                 _I2cConfig 000086  
                          ??_Rtcc_LockRtc 000000                 __end_of_configDescriptor1 0001C3  
                                 __ramtop 000000*                              Terminal@Len 0000D7  
                      ??_Rtcm_SetRtccDate 000014                     Tmr_TmrBIrqSet@TmrNumb 000002  
                    ?_Uart_InitUartModule 000020                                   __ptext0 000000  
                                 __ptext1 000000                                   __ptext2 000000  
                                 __ptext3 000000                                   __ptext4 000000  
                                 __ptext5 000000                                   __ptext6 000000  
                                 __ptext7 000000                                   __ptext8 000000  
                                 __ptext9 000000                                   _inPipes 000000  
              StartConnectionSm@DataIndex 00007B          __size_of_Uart_MdmWifiReadService 000000  
             _USBDeferOUTDataStagePackets 00000A                           __size_of_strcat 000000  
                         __size_of_strchr 000000                        _WifiReceiveNetData 000033  
                         __size_of_strcpy 000000                           __size_of_strlen 000000  
            __size_of_OsAlrm_ClearOsAlarm 000000                                 _T1CONbits 000FCD  
                         __size_of_strtol 000000                           __size_of_strstr 000000  
                            ??_USBSuspend 000014                                 _T2CONbits 000FCA  
                                 _isalpha 000000                                   _isdigit 000000  
                           ?_Tmr_StartTmr 000000                       ??_Sch_MainScheduler 0000A0  
                             ?_SystemInit 000000                                   clear_10 0000E2  
                                 clear_11 0000EE                                   clear_12 0000FA  
                        ___awmod@dividend 000000                         ??_InitializeTasks 00009C  
                               _T4CONbits 000F76                           _Tmr2IsrCallback 000004  
     __end_of_Tmr_RegisterTmr2IsrCallback 00000A               _Tmr_RegisterTmr2IsrCallback 000000  
                                 _isspace 000000               __end_of_MdmWifiCmd_MainTask 000022  
                                 _isupper 000000                    ?_Irq_InitIntController 000000  
                  Term_MainSm@FwkBuildStr 00008C                           ?_Rtcc_RtcConfig 000001  
                  _OsAlrm_ProcessOsAlarms 000000                        __end_of_USB_CD_Ptr 000009  
                             _Tmr_Tmr2Isr 000000           __size_of_USBCtrlTrfSetupHandler 000000  
                         _Uart_Uart1RxIsr 000000                    Term_MainSm@FwkMajorStr 000084  
                                 _strncmp 000000                            __pintcode_body 000000  
                                 _toupper 000000                         ClearBuffer@Buffer 000000  
                    end_of_initialization 000100                              _getsUSBUSART 000000  
                        ??_GetElapsedTime 000008             __size_of_OsTmr_GetTimerStatus 000000  
                            ?_GenerateEvt 000000                           ??_ReceiveDataSm 000004  
                  _MainSystemTimebaseFlag 000000             i1I2cSlv_SendI2cMsg@DataLenght 00001C  
                      __end_of_USB_SD_Ptr 000007       Irq_InitIntController@PerInt_LowPInt 000001  
                                 memcpy@d 000006                                   memcpy@n 000004  
                                 memcpy@s 000008                       _pBDTEntryEP0OutNext 00000E  
                                 itoa@buf 000010                                   memset@c 000002  
                  Term_MainSm@FwkMinorStr 000088                                   itoa@val 000012  
                                 memset@n 000004                                   memset@p 000006  
                                 int_func 000000                           _USB1msTickCount 00001C  
         _dummy_encapsulated_cmd_response 0000AB                  ?_USBStdFeatureReqHandler 000000  
               __size_of_Mcu_ConfigExtInt 000000                         ?_Rtcc_AlarmConfig 000000  
                   ??_USBStdSetCfgHandler 000014                           ___lldiv@divisor 000010  
               __end_of_Sch_MainScheduler 00001E                 __size_of_Led_SetLedStatus 000000  
                              ?_CDCInitEP 000000                           ___lldiv@counter 000018  
                       _Rtcc_SetRtccValue 000000                         _Rtcc_SetRtcStatus 000000  
                         ?_Rtcc_UnlockRtc 000000               __size_of_MdmWifiGetUartData 000000  
                      ??_Rtcc_AlarmConfig 000002                        __end_of_USBSuspend 000032  
                           StringCopy@Len 000004                   _USBCtrlEPAllowDataStage 000000  
                      _UsbDevice_MainTask 000000                                   postdec1 000FE5  
                                 postdec2 000FDD                        ?_Rtcc_SetRtccValue 000008  
                      ?_Rtcc_SetRtcStatus 000000                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                                 utoa@buf 000007                  _USBCtrlEPServiceComplete 000000  
                                 utoa@val 000009                     i1___wmul@multiplicand 000018  
                         _RtccIsrCallback 000024          OsAlrm_ProcessOsAlarms@AlarmIndex 000026  
                      Terminal@EchoOption 000000             __size_of_LedPulseStateMachine 000000  
                                 strlen@s 000000                _USBStatusStageEnabledFlag1 00000D  
              _USBStatusStageEnabledFlag2 00000C                     ??_Uart_InitUartModule 000022  
                                 strtol@a 000017                                   strtol@c 00001B  
                          _Rtcm_RtccAlarm 000012                                   strtol@s 00000C  
                      USBEnableEndpoint@p 000009                       ?_UsbDevice_MainTask 000000  
                               _PORTDbits 000F83                       ??_Rtcc_SetRtccValue 000009  
                     ??_Rtcc_SetRtcStatus 000000                          __CFG_DSBOREN$OFF 000000  
                          ??_Tmr_StartTmr 000000              __end_of_I2cSlv_I2cReadMsgSts 000022  
                i1I2cSlv_SendI2cMsg@TxSts 00001D                         StringCopy@DestStr 000002  
                        __CFG_CPUDIV$OSC1 000000                    __size_of_UartSetConfig 000000  
                         _Tmr4IsrCallback 000026                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                               _TRISEbits 000F96                       __size_of_StringCopy 000000  
                      _BothEP0OutUOWNsSet 00000F                              strtol@endptr 00000E  
                  __size_of_Term_MainTask 000000                              ?_Mcu_Int0Isr 000000  
               __size_of_Rtcm_GetRtccDate 000000                              ?_Mcu_Int1Isr 000000  
        MdmWifi_ReceiveWifiMsg@DataLenght 00000A                 I2c_WriteData@I2cNextState 000028  
              StartConnectionSm@PortAscii 000077                 USBConfigureEndpoint@EPNum 000005  
              ?_USBCtrlEPAllowStatusStage 000000                          ??_InitSchedTimer 000027  
     USER_USB_CALLBACK_EVENT_HANDLER@size 000010                                 _USTATcopy 000019  
                   __end_of_StopCondition 000004                  __size_of_HighPriorityIsr 000000  
               Tmr_TmrBPrSet@TmrBPrCfgSts 00001D                 __size_of_OsTmr_StartTimer 000000  
                      SendDataSm@LenAscii 000085                                 _Led1Blink 0000A2  
                               _Led2Blink 000099                      ??_UsbDevice_MainTask 00001C  
                               _Led3Blink 000090              __end_of_USBTransferOnePacket 0000BE  
                         ??_CheckTxStatus 000000                ??_MdmWifi_StartWifiModemSm 000004  
                   StartConnectionSm@Data 000013                                 _Led1Pulse 0000C6  
                       __CFG_WPFP$PAGE_63 000000                 __end_of_Rtcc_SetRtccValue 00022E  
               __end_of_Rtcc_SetRtcStatus 000016                                 _Led2Pulse 0000C0  
                               _Led3Pulse 0000BA                         _I2cSlv_SendI2cMsg 000000  
         SetBaudRate@DesiredI2cBusClockHz 000019                           ??_ScheduleTasks 00009C  
                          _Tmr_TmrBConfig 000000                   Tmr_TmrBPrSet@Postscaler 00001C  
                       putUSBUSART@length 000008                         _OsAlrm_SetOsAlarm 000000  
                __end_of_MdmWifiEvtParser 000070                      Terminal@TermRxBuffer 000026  
                      ?_I2cSlv_SendI2cMsg 000003                       __size_of_SystemInit 000000  
                          _Tmr_TmrBIrqSet 000000                       __CFG_MSSP7B_EN$MSK7 000000  
                         _StartConnection 000032                      Terminal@TermTxBuffer 00001E  
                  _USBCtrlTrfSetupHandler 000000                        ?_OsAlrm_SetOsAlarm 000006  
                   __end_of_USBDeviceInit 000150     __end_of_USBIncrement1msInternalTimers 000022  
  __size_of_USBIncrement1msInternalTimers 000000             _USBIncrement1msInternalTimers 000000  
                          __end_of___lmul 000058                            _CheckAckStatus 000000  
                          __end_of___wmul 000028                  __end_of_MdmWifi_MainTask 000034  
                     ??_I2cSlv_SendI2cMsg 000007                    __size_of_UartWriteByte 000000  
                ??_MdmWifi_ReceiveWifiMsg 00000C                            __end_of_memcpy 000048  
                      Terminal@PackageLen 00002B                            __end_of_memset 000030  
                      _UartTxBufferStatus 000000                       ??_OsAlrm_SetOsAlarm 00000E  
                        __CFG_DSWDTEN$OFF 000000                              ??_ReceiveEvt 000002  
                       _USBBusIsSuspended 000010                         ??_SetUartBaudRate 00001B  
                 __end_of_Uart_Uart1RxIsr 000010                            __end_of_strcat 000064  
                          __end_of_strchr 000038                            __end_of_strcpy 000046  
                          __end_of_strlen 000056                            __end_of_strtol 0001D6  
                          __end_of_strstr 00008A                       start_initialization 000000  
                       __size_ofi1___wmul 000000                   ?_USBStdGetStatusHandler 000000  
                            ??_SendDataSm 00001E                    Uart_WriteString@Module 000005  
           USBCtrlTrfRxService@byteToRead 000001                   __size_of_StartCondition 000000  
                    Rtcm_SetRtccDate@Date 00000C                       ?_UartTxBufferStatus 000000  
                               _ModeLocal 00001C                          ??_EnableReceiver 000000  
                             _cdc_data_rx 000000                               _cdc_data_tx 0000B4  
            __end_of_USBConfigureEndpoint 000098           __end_of_USBStdFeatureReqHandler 000292  
                               _MsgFormat 00000B                          _UpdateOsCounters 000000  
              I2c_InitI2cModule@I2cConfig 000025         __end_of_USBCtrlEPAllowStatusStage 0000C4  
               __end_of_I2cSlv_SendI2cMsg 00003E                  __size_of_LedStateMachine 000000  
                __end_of_USBCtrlEPService 000094                         ?_Uart_WriteString 000003  
                   __size_of_SetAckStatus 000000             __size_of_MdmWifiHttp_MainTask 000000  
                    __size_of_ClearBuffer 000000                      __end_of_Rtcc_LockRtc 000010  
                            ?_SetBaudRate 000019                    __end_of_Tmr_TmrBConfig 0000C8  
               __end_of_OsAlrm_SetOsAlarm 0000C8                    __end_of_Tmr_TmrBIrqSet 00004C  
                               _TaskTable 000000                 ??_USBCtrlEPAllowDataStage 000001  
                      ??_Uart_WriteString 000005                               _SystemState 00002F  
                       __size_of_ReadByte 000000                                 _RtcConfig 0000DF  
              __size_of_Sch_MainScheduler 000000             Uart_InitUartModule@UartConfig 000020  
                             ??_CDCInitEP 00000C                            USBDeviceInit@i 000008  
                           _UartSetConfig 000000                        __end_of_ReceiveEvt 00002E  
                  _pBDTEntryEP0OutCurrent 000010                             _Term_MainTask 000000  
                 USBTransferOnePacket@dir 000000                      ??_UartTxBufferStatus 000000  
                 USBTransferOnePacket@len 000003                     Tmr_TmrBConfig@TmrNumb 000026  
                 __size_of_LowPriorityIsr 000000           StartConnectionSm@StartConnState 000016  
                  __end_of_CheckAckStatus 00000A                                  ??___lmul 000008  
                                ??___wmul 000004                         __size_of_TmrBInit 000000  
  Tmr_RegisterTmr2IsrCallback@IsrCallback 000000                        __end_of_SendDataSm 00022E  
                     _USBStdGetDscHandler 000000                                 _PortLocal 000019  
              I2cSlv_SendI2cMsg@SlaveAddr 000005                               __pdataBANK1 000000  
                             __pdataBANK2 000000                               __pdataBANK3 000000  
                             __pdataBANK4 000000                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 000000                                  ??_memcpy 000006  
                                ??_memset 000006                   _Uart_MdmWifiReadService 000000  
                  __size_ofi1_GenerateEvt 000000                       Tmr_StartTmr@TmrNumb 000000  
                                ??_strcat 000005                                  ??_strchr 000004  
                                ??_strcpy 000004                                  ??_strlen 000002  
                  __size_of_Rtcm_MainTask 000000                         _MdmWifi_DrvMainFn 000000  
                                ??_strtol 000012                                  ??_strstr 000013  
                             __pbssBANK10 000000                               __pbssBANK11 000000  
                             __pbssBANK12 000000                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00001A            __end_of_USBStdGetStatusHandler 0000A8  
                           WriteByte@Byte 000000                        __end_of_TaskNumber 00000B  
         MdmWifi_StartWifiModemSm@Counter 00001E                               __pbssCOMRAM 000000  
                 GetElapsedTime@TimeValue 000010                        ?_MdmWifi_DrvMainFn 000000  
               __size_of_GetOsTickCounter 000000                             __pcstackBANK0 000000  
                           __pcstackBANK1 000000                             __pcstackBANK2 000000  
            __size_of_USBCtrlTrfInHandler 000000                              _SetAckStatus 000000  
                     _MdmWifi_SendWifiMsg 000000                              _isalpha$5951 000004  
                  GenerateEvt@EventStatus 000002                                 _WriteByte 000000  
                WifiTerminal@FirstRecFlag 000006                      ?_USBStdGetDscHandler 000000  
                            _isdigit$5686 000001             UpdateSchFlag@InterruptCounter 00001C  
               SetUartBaudRate@UartConfig 000019                       ??_MdmWifi_DrvMainFn 000004  
                 GetElapsedTime@StartTime 000004                             _UartWriteByte 000000  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 00003A  
            __end_of_LedBlinkStateMachine 000148                           _USBStallHandler 000000  
                            _pBDTEntryOut 000008                __size_of_Rtcc_SetRtccValue 000000  
                    __size_of_GenerateEvt 000000                           ?_Tmr_TmrBConfig 000023  
              __size_of_Rtcc_SetRtcStatus 000000                          _Mcu_ConfigExtInt 000000  
              __end_of_USBCheckCDCRequest 0000A6              __size_ofi1_I2cSlv_SendI2cMsg 000000  
                     _OsAlrm_ClearOsAlarm 000000                           ?_Tmr_TmrBIrqSet 000000  
                          ?_UartSetConfig 000000                      __end_of_Tmr_StartTmr 000020  
             SendDataSm@WifiSendDataState 000015                              ??_StringCopy 000006  
                        _Led_SetLedStatus 000000                         ??_HighPriorityIsr 000004  
                          ?_Term_MainTask 000000                          ___lwdiv@dividend 000000  
                            ?_Term_MainSm 000000                      _I2cSlv_I2cReadMsgSts 000000  
                        GenerateEvt@Event 000000                      ?_MdmWifi_SendWifiMsg 000006  
                  __size_of_Tmr_TmrBPrSet 000000                                 __pintcode 000000  
           Uart_WriteString@StringToWrite 000003                             __pmediumconst 000000  
                            ?_RtccIrqInit 000000                           ?_CheckAckStatus 000000  
                 Tmr_TmrBIrqSet@TmrIrqSts 000001                                  ?___awdiv 000000  
                               __ptext100 000000                                 __ptext101 000000  
                               __ptext110 000000                                 __ptext102 000000  
                               __ptext111 000000                                 __ptext103 000000  
                               __ptext120 000000                                 __ptext112 000000  
                               __ptext104 000000                                 __ptext121 000000  
                               __ptext113 000000                                 __ptext105 000000  
                               __ptext130 000000                                 __ptext122 000000  
                               __ptext114 000000                                 __ptext106 000000  
                           Terminal@Index 000051                                 __ptext131 000000  
                               __ptext123 000000                                 __ptext115 000000  
                               __ptext107 000000                                 __ptext140 000000  
                               __ptext132 000000                                 __ptext124 000000  
                               __ptext116 000000                                 __ptext108 000000  
                               __ptext141 000000                                 __ptext133 000000  
                               __ptext125 000000                                 __ptext117 000000  
                               __ptext109 000000                                 __ptext150 000000  
                               __ptext142 000000                                 __ptext126 000000  
                               __ptext118 000000                                 __ptext151 000000  
                               __ptext143 000000                                 __ptext135 000000  
                               __ptext127 000000                                 __ptext119 000000  
                               __ptext152 000000                                 __ptext144 000000  
                               __ptext136 000000                                 __ptext128 000000  
                               __ptext137 000000                                 __ptext129 000000  
                               __ptext146 000000                                 __ptext138 000000  
                               __ptext147 000000                                 __ptext139 000000  
                               __ptext148 000000                                 __ptext149 000000  
                                ?___awmod 000000                        _Sch_SchmIntService 000000  
                         _InitializeTasks 000000                                  ?___lldiv 00000C  
                                ?___lwdiv 000000                                  ?___lwmod 000000  
               __end_of_MdmWifi_DrvMainFn 000006                              ?_Rtcc_RtcIsr 000000  
                             __pintcodelo 000000                             _WifiMdmStatus 000020  
                  __size_ofi2_GenerateEvt 000000           __size_of_MdmWifi_ReceiveWifiMsg 000000  
                        ??_Rtcc_RtcConfig 000003                      ?_OsAlrm_ClearOsAlarm 000000  
                             _I2cRxPacket 0000CC                       _NewWifiPacketParser 000035  
                     ?_Sch_SchmIntService 000000                      _USBTransferOnePacket 000000  
                 ??_Irq_InitIntController 000002                   ?_OsAlrm_ProcessOsAlarms 000000  
                                _BAUDCON1 000F7E                                  _BAUDCON2 000F7C  
                        ?_Uart_Uart1RxIsr 000000                                  ?_isalpha 000000  
                            ??_SystemInit 00002E                                  ?_isdigit 000000  
                             _I2cTxPacket 0000D2            InitializeTasks@ActiveTaskIndex 00009E  
                    __CFG_RTCOSC$T1OSCREF 000000                                  ?_isspace 000000  
                                ?_isupper 000000                Term_MainSm@TermMainSmState 000028  
                         Terminal@Payload 000064                               _PADCFG1bits 000F3C  
            __end_of_USBCtrlTrfOutHandler 00005E                                ?_WriteByte 000000  
                   ??_USBStdGetDscHandler 000000                          _Rtcm_GetRtccDate 000000  
                      __end_of_StringCopy 000042                               _ep_data_out 000014  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 000004                              ?_Tmr_Tmr2Isr 000000  
               __size_of_Rtcm_SetRtccDate 000000              __size_of_USBCtrlTrfRxService 000000  
           USBConfigureEndpoint@direction 000000                                  ?_strncmp 000006  
                                ?_toupper 000000                            ?_UartWriteByte 000000  
                  __size_of_I2c_WriteData 000000                          _OsTmr_StartTimer 000000  
                    __size_of_Mcu_Int0Isr 000000                      __size_of_Mcu_Int1Isr 000000  
 Irq_InitIntController@GlobalInt_HighPInt 000000                __size_of_I2cSlv_SendI2cMsg 000000  
            __size_of_USBCtrlTrfTxService 000000                          ??_Rtcc_UnlockRtc 000000  
                           i1_GenerateEvt 000000                __end_of_Mcu_StartSystemPll 00001E  
                           _Rtcm_MainTask 000000                            ___wmul@product 000004  
                   Terminal@ReceivedBytes 000050                                  _LATEbits 000F8D  
                    ??_Sch_SchmIntService 000028                    __size_of_UpdateSchFlag 000000  
              __size_of_OsAlrm_SetOsAlarm 000000                ??_USBCtrlEPServiceComplete 000001  
                __size_of_I2cSlv_MainTask 000000                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 000009                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000000  
                   _MdmWifi_UartRxCounter 000002                     ?_I2cSlv_I2cReadMsgSts 000000  
                   ??_MdmWifi_SendWifiMsg 000008                         _I2c_InitI2cModule 000000  
                                i1u806_28 000010                                  _PIR1bits 000F9E  
                                _PIR2bits 000FA1                                  i1u781_20 000016  
                                _PIR3bits 000FA4                                  i1u785_28 00013E  
                                i1u785_29 000150                         ??_LedStateMachine 000012  
                      __end_of_SystemInit 000030                                  _RCONbits 000FD0  
                           ??_putUSBUSART 000009                          __CFG_WDTPS$32768 000000  
                                _UEP0bits 000F26             __size_of_I2cSlv_ReceiveI2cMsg 000000  
              _USBDeferINDataStagePackets 00000B                        ?_I2c_InitI2cModule 000025  
               ??_Uart_MdmWifiReadService 000004                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 000000  
                    Rtcm_MainTask@Options 000000              __end_of_OsTmr_GetTimerStatus 000090  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
             MdmWifi_SendWifiMsg@TxBuffer 000006                      _USBConfigureEndpoint 000000  
                         _NewWifiUartData 00001E                         SendDataSm@IdAscii 00008A  
        __size_of_USBStdFeatureReqHandler 000000                     SetUartBaudRate@Module 00001C  
          __end_of_OsAlrm_ProcessOsAlarms 00015C                     ??_OsAlrm_ClearOsAlarm 000016  
                       ___wmul@multiplier 000000                     ?_USBTransferOnePacket 000000  
                                i1___wmul 000000                       ??_I2c_InitI2cModule 000027  
               __size_of_Rtcc_AlarmConfig 000000                             ?_CDCTxService 000000  
          OsAlrm_SetOsAlarm@AlarmCallback 00000C                              _RemoteWakeup 000011  
                          _StartCondition 000000                        SetAckStatus@AckSts 000000  
                           _Tmr_TmrBPrSet 000000                              _isspace$5954 000001  
                 __end_of_USBStallHandler 000044                     __size_of_Rtcc_LockRtc 000000  
                       SendDataSm@SwTimer 00000B                         ___lmul@multiplier 000000  
                             _INTCON2bits 000FF1                               _INTCON3bits 000FF0  
                  I2cSlv_MainTask@Options 000000                                 copy_data0 000014  
                               copy_data1 000058                                  _LenLocal 000017  
            __end_of_LedPulseStateMachine 0000E8                    I2cSlv_SendI2cMsg@TxSts 000007  
             ??_USBCtrlEPAllowStatusStage 000000               __end_of_USBStdSetCfgHandler 0000E8  
                          ?i1_GenerateEvt 000016                  Tmr_TmrBConfig@TmrBConfig 000023  
                                _OsAlarms 000000                            ?_Rtcm_MainTask 000000  
                   OsTmr_StartTimer@Timer 000004                    _MdmWifi_ReceiveWifiMsg 000000  
            LedBlinkStateMachine@LedBlink 000007                                  _ReadByte 000000  
            __size_of_MdmWifiCmd_MainTask 000000                             i2_GenerateEvt 000000  
                         ??_UartSetConfig 000000                     __end_of_ReceiveDataSm 000046  
                      __end_of_device_dsc 000230                 __end_of_I2c_InitI2cModule 000072  
                                _MsgReady 000207                           ??_Term_MainTask 00009C  
              __end_of_MdmWifiGetUartData 0000D2                   __end_of_InitializeTasks 00007A  
                 ?_USBCtrlTrfSetupHandler 000000                                  _RxBuffer 000000  
                 USBStdGetStatusHandler@p 000001                                  __Hrparam 000000* 
                                _TmrBInit 000000                      __size_of_SetBaudRate 000000  
                          _LowPriorityIsr 000000                                 memcpy@tmp 00000A  
                    Tmr_TmrBPrSet@Divisor 00001F                                  __Lrparam 000000* 
                  USBTransferOnePacket@ep 000004                         ?_MdmWifiEvtParser 000000  
             __end_of_Uart_InitUartModule 0002F4                           _WifiReceiveData 000030  
                         _SetUartBaudRate 000000              i1I2cSlv_SendI2cMsg@SlaveAddr 00001B  
                                _Terminal 000000                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 000003                     SetBaudRate@McuClockHz 00001D  
                      ??_MdmWifiEvtParser 000013                     ?_USBConfigureEndpoint 000000  
            OsAlrm_ClearOsAlarm@OsAlarmId 000016                             _I2c_WriteData 000000  
                        __size_of___awdiv 000000                          __size_of___awmod 000000  
                __end_of_UpdateOsCounters 000010                          __size_of___lldiv 000000  
              __size_of_MdmWifi_DrvMainFn 000000                         Terminal@SlaveAddr 00002A  
                        __size_of___lwdiv 000000                      Tmr_TmrBPrSet@TmrNumb 00001E  
                        __size_of___lwmod 000000                         ?_MdmWifi_MainTask 000000  
                I2c_WriteData@WritePacket 000001                         Terminal@TermState 00002C  
                           _UpdateSchFlag 000000                       __end_of_putUSBUSART 000022  
                             _line_coding 0000B3                            _StartWifiModem 00001D  
                            _Rtcc_LockRtc 000000                      _LedBlinkStateMachine 000000  
                  __end_of_StartCondition 000004                            ??_CDCTxService 000007  
                ??_Pm_DsReleasePinControl 000000                 Rtcm_GetRtccDate@LocalDate 00000D  
                      ??_MdmWifi_MainTask 000025                  I2c_WriteData@WriteStatus 000026  
                            _isupper$5957 000001                                strcat@from 000002  
                 I2c_ReadData@DataCounter 000024                            ?_Tmr_TmrBPrSet 000019  
                        _GetOsTickCounter 000000                          __size_of_isalpha 000000  
                        __size_of_isdigit 000000                   __size_of_USBDeviceTasks 000000  
                         ___lwdiv@divisor 000002                              Terminal@Addr 000030  
                             ??_WriteByte 000000                          __size_of_isspace 000000  
                         ___lwdiv@counter 000006                                  __ptext10 000000  
                                __ptext11 000000                                  __ptext20 000000  
                                __ptext12 000000                                  __ptext21 000000  
                                __ptext13 000000                           ??_UartWriteByte 000001  
                                __ptext30 000000                                  __ptext22 000000  
                                __ptext14 000000                                  __ptext31 000000  
                                __ptext23 000000                                  __ptext15 000000  
                                __ptext40 000000                                  __ptext32 000000  
                                __ptext24 000000                                  __ptext16 000000  
                                __ptext41 000000                                  __ptext33 000000  
                                __ptext25 000000                                  __ptext17 000000  
                                __ptext50 000000                                  __ptext42 000000  
                                __ptext34 000000                                  __ptext26 000000  
                                __ptext18 000000                                  __ptext51 000000  
                                __ptext43 000000                                  __ptext35 000000  
                                __ptext27 000000                                  __ptext19 000000  
                                __ptext60 000000                                  __ptext52 000000  
                                __ptext44 000000                                  __ptext36 000000  
                                __ptext28 000000                                  __ptext61 000000  
                                __ptext53 000000                                  __ptext45 000000  
                                __ptext37 000000                                  __ptext29 000000  
                                __ptext70 000000                                  __ptext62 000000  
                                __ptext54 000000                                  __ptext46 000000  
                                __ptext38 000000                                  __ptext71 000000  
                                __ptext63 000000                                  __ptext55 000000  
                                __ptext47 000000                                  __ptext39 000000  
                                __ptext80 000000                                  __ptext72 000000  
                                __ptext64 000000                                  __ptext56 000000  
                                __ptext48 000000                                  __ptext81 000000  
                                __ptext73 000000                                  __ptext65 000000  
                                __ptext57 000000                                  __ptext49 000000  
                                __ptext90 000000                                  __ptext82 000000  
                                __ptext74 000000                                  __ptext66 000000  
                                __ptext58 000000                                  __ptext91 000000  
                                __ptext83 000000                                  __ptext75 000000  
                                __ptext67 000000                                  __ptext59 000000  
                                __ptext92 000000                                  __ptext84 000000  
                                __ptext76 000000                                  __ptext68 000000  
                                __ptext93 000000                                  __ptext85 000000  
                                __ptext77 000000                                  __ptext69 000000  
                                __ptext94 000000                                  __ptext86 000000  
                                __ptext78 000000                                  __ptext95 000000  
                                __ptext87 000000                                  __ptext79 000000  
                                __ptext96 000000                                  __ptext88 000000  
                                __ptext97 000000                                  __ptext89 000000  
                                __ptext98 000000                                  __ptext99 000000  
                        __size_of_isupper 000000                                _I2cDummyTx 000000  
                  Tmr_TmrBIrqSet@Priority 000000                              _SSP2CON2bits 000F71  
                          SendDataSm@Data 00001E                     __size_of_Tmr_StartTmr 000000  
                        __size_of_strncmp 000000                          __size_of_toupper 000000  
                          ?i2_GenerateEvt 000000                                _DSCONHbits 000F4D  
                              strcpy@from 000002                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 000016                              _WifiSendData 000031  
             __size_of_UsbDevice_MainTask 000000                             __size_of_atoi 000000  
                      TmrBInit@Postscaler 000001            __end_of_USBCtrlTrfSetupHandler 000088  
                           __size_of_main 000000                         ?_USBCtrlEPService 000000  
                           __size_of_itoa 000000                             __size_of_utoa 000000  
                     Led_MainTask@Options 000000                    ??_I2cSlv_I2cReadMsgSts 000004  
                              strncmp@len 00000A                    __end_of_LowPriorityIsr 0000B4  
                            _WifiRxPacket 000000                     __end_of_CheckTxStatus 00000A  
                      ??_USBCtrlEPService 00001A                              _WifiTxPacket 000000  
                     _USBCtrlTrfInHandler 000000                  I2c_ReadData@I2cReadState 000025  
                   __end_of_ScheduleTasks 000134                   __size_of_GetElapsedTime 000000  
                           ?_Led_MainTask 000000                                  _outPipes 000000  
                    _USBCtrlTrfOutHandler 000000                       Led_SetLedStatus@Led 000001  
                                int$flags 000000                                strtol@base 000010  
                          ?_I2c_WriteData 000001                                  atoi@sign 00000A  
                       ??_I2cSlv_MainTask 000029                           StringCopy@Index 000006  
               _USBCtrlEPAllowStatusStage 000000                      __size_of_Term_MainSm 000000  
            ScheduleTasks@ActiveTaskIndex 0000C8                                strtol@sign 000016  
                         Term_MainSm@Data 000052                      __size_of_RtccIrqInit 000000  
            __end_of_MdmWifiHttp_MainTask 00000E                 __size_of_Uart_WriteString 000000  
                  ??_USBTransferOnePacket 000004                            ?_UpdateSchFlag 000000  
       __size_of_MdmWifi_StartWifiModemSm 000000                    __size_of_StopCondition 000000  
               ?_MdmWifi_StartWifiModemSm 000000                     ?_LedBlinkStateMachine 000007  
                    __size_of_Rtcc_RtcIsr 000000                       i1_I2cSlv_SendI2cMsg 000000  
                __end_of_Mcu_ConfigExtInt 000010                           ?_StartCondition 000000  
               _USBDeferStatusStagePacket 000014                  CDCTxService@byte_to_send 000008  
           I2c_WriteData@TentativeCounter 000027                               _OSCTUNEbits 000F9B  
                              _INTCONbits 000FF2                  UartWriteByte@ByteToWrite 000000  
                            _Tmr_StartTmr 000000                  __end_of_Led_SetLedStatus 000030  
             Term_MainSm@FwkBuildMonthStr 000094                      ?_USBCtrlTrfInHandler 000000  
                                memcpy@d1 000000                                  memcpy@s1 000002  
              I2cSlv_I2cReadMsgSts@Result 000004             USBCtrlTrfTxService@byteToSend 000000  
                           ?_I2cSetConfig 000000                                  itoa@base 000014  
             i1I2cSlv_SendI2cMsg@TxBuffer 000019                             ?_I2c_ReadData 000003  
                           ?_I2cSendMsgSm 000000                                  isalpha@c 000005  
                                isdigit@c 000002                                  memset@p1 000000  
                           _ProtocolLocal 00001A                          ?_USBStallHandler 000000  
                         ??i1_GenerateEvt 000018                          _Rtcm_SetRtccDate 000000  
                USBStdFeatureReqHandler@p 000018                          ??_Tmr_TmrBConfig 000025  
                           ??_ClearBuffer 000004                           _HighPriorityIsr 000000  
                         ??_Rtcm_MainTask 000015                          ??_Tmr_TmrBIrqSet 000002  
                                intlevel1 000000*                                 intlevel2 000000* 
                    _OsTmr_GetTimerStatus 000000                         TmrBInit@Prescaler 000000  
                    __size_of_Tmr_Tmr2Isr 000000                    __size_of_USBDeviceInit 000000  
 __end_of_USER_USB_CALLBACK_EVENT_HANDLER 00005E  __size_of_USER_USB_CALLBACK_EVENT_HANDLER 000000  
       ??_USER_USB_CALLBACK_EVENT_HANDLER 000012          ?_USER_USB_CALLBACK_EVENT_HANDLER 00000C  
         _USER_USB_CALLBACK_EVENT_HANDLER 000000                                 strchr@chr 000002  
                 Rtcc_SetRtcStatus@Status 000000                          ___lwmod@dividend 000000  
                               strchr@ptr 000000                   __end_of_SetUartBaudRate 000138  
                                isspace@c 000002                          ___lldiv@dividend 00000C  
                    ?i1_I2cSlv_SendI2cMsg 000019                __size_of_I2c_InitI2cModule 000000  
                        ??_CheckAckStatus 000000                           ?_LowPriorityIsr 000000  
                        ?_InitializeTasks 000000                                  isupper@c 000002  
                               strncmp@s1 000006                                 strncmp@s2 000008  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 000007  
                          ??_Led_MainTask 000014                   __size_of_InitSchedTimer 000000  
                  ??_USBConfigureEndpoint 000001                     ?_USBCtrlTrfOutHandler 000000  
             __size_of_UartTxBufferStatus 000000                  __end_of_Rtcm_GetRtccDate 000066  
                             _putUSBUSART 000000                       _USBCtrlTrfRxService 000000  
                  Rtcc_SetRtccValue@Value 000008                        _USBWakeFromSuspend 000000  
                 _USBStdFeatureReqHandler 000000                  __end_of_OsTmr_StartTimer 00005E  
                    _LedPulseStateMachine 000000                        _USBCheckCDCRequest 000000  
                     _USBCtrlTrfTxService 000000                       RtccIrqInit@Priority 000000  
                                utoa@base 00000B                                _RTCCFGbits 000F3F  
                        _Rtcc_AlarmConfig 000000                           ??_Tmr_TmrBPrSet 00001D  
                                strcat@cp 000005                                  strcat@to 000000  
                     ?_USBWakeFromSuspend 000000           __size_of_Pm_DsReleasePinControl 000000  
                        ___lldiv@quotient 000014                           ___lwmod@divisor 000002  
                   ??_USBCtrlTrfInHandler 000001                                  strcpy@cp 000004  
                                strlen@cp 000004                                  strcpy@to 000000  
               UsbDevice_MainTask@Options 000000                     _USBAlternateInterface 000034  
                         ___lwmod@counter 000004                            ??_I2cSetConfig 000000  
          __size_of_Irq_InitIntController 000000                                  toupper@c 000000  
         SetUartBaudRate@BaudRateRegister 00001D                       ?_USBCheckCDCRequest 000000  
                          ??_I2c_ReadData 000005                            ??_I2cSendMsgSm 000007  
           __end_of_Irq_InitIntController 00002A                     ReceiveEvt@EventStatus 000003  
            ?_Tmr_RegisterTmr2IsrCallback 000000                       USBEnableEndpoint@ep 00000B  
                                strstr@s1 00000F                                  strstr@s2 000011  
                         _endpoint_number 000015                                _WDTCONbits 000FC0  
                             ?_I2cDummyTx 000000                      ?_USBCtrlTrfRxService 000000  
                         ??i2_GenerateEvt 000002                             ?_getsUSBUSART 000007  
                UartTxBufferStatus@Module 000001                     ?_OsTmr_GetTimerStatus 000018  
           SetUartBaudRate@DivisionFactor 00001F            I2cSlv_ReceiveI2cMsg@DataLenght 000006  
                           ??_GenerateEvt 000002         ReceiveDataSm@WifiReceiveDataState 000014  
                         _LedStateMachine 000000                           TmrBInit@TmrNumb 000003  
                ?_USBCtrlEPAllowDataStage 000000                      ?_USBCtrlTrfTxService 000000  
                           _StopCondition 000000                     ??i1_I2cSlv_SendI2cMsg 00001D  
                  Led_SetLedStatus@LedSts 000000              _USBStatusStageTimeoutCounter 00000E  
                  WifiTerminal@UartBuffer 000000                      ??_USBWakeFromSuspend 000014  
              USBTransferOnePacket@handle 000005                       __end_of_ClearBuffer 000036  
                    __end_of_CDCTxService 000150                      ??_USBCheckCDCRequest 000000  
                 __size_of_EnableReceiver 000000                                _USB_CD_Ptr 000007  
                   WifiTerminal@UsbBuffer 000000                           ??_I2c_WriteData 000003  
