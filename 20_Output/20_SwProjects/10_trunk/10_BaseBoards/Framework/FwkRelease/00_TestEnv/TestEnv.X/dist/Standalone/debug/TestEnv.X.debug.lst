

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Nov 01 15:45:36 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAMl,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK7,global,class=BANK7,space=1,delta=1,noexec
    23                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text88,global,reloc=2,class=CODE,delta=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=2,class=CODE,delta=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=2,class=CODE,delta=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=2,class=CODE,delta=1
   125                           	psect	text98,global,reloc=2,class=CODE,delta=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1
   127                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text101,global,reloc=2,class=CODE,delta=1
   129                           	psect	text102,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1
   131                           	psect	text104,global,reloc=2,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text106,global,reloc=2,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=2,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	text110,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=2,class=CODE,delta=1
   139                           	psect	text112,global,reloc=2,class=CODE,delta=1
   140                           	psect	text113,global,reloc=2,class=CODE,delta=1
   141                           	psect	text114,global,reloc=2,class=CODE,delta=1
   142                           	psect	text115,global,reloc=2,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	text117,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	text119,global,reloc=2,class=CODE,delta=1
   147                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
   148                           	psect	text121,global,reloc=2,class=CODE,delta=1
   149                           	psect	text122,global,reloc=2,class=CODE,delta=1
   150                           	psect	text123,global,reloc=2,class=CODE,delta=1
   151                           	psect	text124,global,reloc=2,class=CODE,delta=1
   152                           	psect	text125,global,reloc=2,class=CODE,delta=1
   153                           	psect	text126,global,reloc=2,class=CODE,delta=1
   154                           	psect	text127,global,reloc=2,class=CODE,delta=1
   155                           	psect	text128,global,reloc=2,class=CODE,delta=1
   156                           	psect	text129,global,reloc=2,class=CODE,delta=1
   157                           	psect	text130,global,reloc=2,class=CODE,delta=1
   158                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   159                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   160                           	psect	text132,global,reloc=2,class=CODE,delta=1
   161                           	psect	text133,global,reloc=2,class=CODE,delta=1
   162                           	psect	text134,global,reloc=2,class=CODE,delta=1
   163                           	psect	text135,global,reloc=2,class=CODE,delta=1
   164                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   165                           	psect	text136,global,reloc=2,class=CODE,delta=1
   166                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   167                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   168                           	dabs	1,0x400,48,_BDT
   169                           	dabs	1,0x438,8,_CtrlTrfData
   170                           	dabs	1,0x430,8,_SetupPkt
   171  0000                     
   172                           ; Version 1.45
   173                           ; Generated 16/11/2017 GMT
   174                           ; 
   175                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   176                           ; All rights reserved.
   177                           ; 
   178                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   179                           ; 
   180                           ; Redistribution and use in source and binary forms, with or without modification, are
   181                           ; permitted provided that the following conditions are met:
   182                           ; 
   183                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   184                           ;        conditions and the following disclaimer.
   185                           ; 
   186                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   187                           ;        of conditions and the following disclaimer in the documentation and/or other
   188                           ;        materials provided with the distribution.
   189                           ; 
   190                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   191                           ;        software without specific prior written permission.
   192                           ; 
   193                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   194                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   195                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   196                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   197                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   198                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   199                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   200                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   201                           ; 
   202                           ; 
   203                           ; Code-generator required, PIC18F46J50 Definitions
   204                           ; 
   205                           ; SFR Addresses
   206  0000                     
   207                           	psect	idataBANK0
   208  00437E                     __pidataBANK0:
   209                           	opt stack 0
   210                           
   211                           ;initializer for _MainSystemTimebaseFlag
   212  00437E  01                 	db	1
   213                           
   214                           	psect	idataBANK2
   215  00437F                     __pidataBANK2:
   216                           	opt stack 0
   217                           
   218                           ;initializer for Terminal@EchoOption
   219  00437F  01                 	db	1
   220                           
   221                           	psect	idataBANK3
   222  003C14                     __pidataBANK3:
   223                           	opt stack 0
   224                           
   225                           ;initializer for _TaskTable
   226  003C14  D2                 	db	low _I2cSlv_MainTask
   227  003C15  38                 	db	high _I2cSlv_MainTask
   228  003C16  00                 	db	0
   229  003C17  0000               	dw	0
   230  003C19  0001               	dw	1
   231  003C1B  00                 	db	0
   232  003C1C  44                 	db	low _UsbDevice_MainTask
   233  003C1D  40                 	db	high _UsbDevice_MainTask
   234  003C1E  00                 	db	0
   235  003C1F  0000               	dw	0
   236  003C21  0001               	dw	1
   237  003C23  00                 	db	0
   238  003C24  68                 	db	low _Wdg_MainTask
   239  003C25  40                 	db	high _Wdg_MainTask
   240  003C26  00                 	db	0
   241  003C27  0000               	dw	0
   242  003C29  0064               	dw	100
   243  003C2B  00                 	db	0
   244  003C2C  38                 	db	low _Led_MainTask
   245  003C2D  22                 	db	high _Led_MainTask
   246  003C2E  00                 	db	0
   247  003C2F  0000               	dw	0
   248  003C31  0032               	dw	50
   249  003C33  00                 	db	0
   250  003C34  FC                 	db	low _Rtcm_MainTask
   251  003C35  31                 	db	high _Rtcm_MainTask
   252  003C36  00                 	db	0
   253  003C37  0000               	dw	0
   254  003C39  0064               	dw	100
   255  003C3B  00                 	db	0
   256  003C3C  E4                 	db	low _Term_MainTask
   257  003C3D  41                 	db	high _Term_MainTask
   258  003C3E  00                 	db	0
   259  003C3F  0000               	dw	0
   260  003C41  0001               	dw	1
   261  003C43  00                 	db	0
   262  003C44  C2                 	db	low _MyApp_Task
   263  003C45  3D                 	db	high _MyApp_Task
   264  003C46  00                 	db	0
   265  003C47  0000               	dw	0
   266  003C49  0032               	dw	50
   267  003C4B  00                 	db	0
   268                           
   269                           ;initializer for Term_MainSm@TermDelay
   270  003C4C  01                 	db	1
   271  003C4D  01                 	db	1
   272  003C4E  0000               	dw	0
   273  003C50  0000               	dw	0
   274  003C52  0000               	dw	0
   275  003C54  0000               	dw	0
   276  003C56  00                 	db	0
   277                           
   278                           	psect	mediumconst
   279  00FD88                     __pmediumconst:
   280                           	opt stack 0
   281  00FD88  00                 	db	0
   282  00FD89                     _USB_SD_Ptr:
   283                           	opt stack 0
   284  00FD89  B8                 	db	low _sd000
   285  00FD8A  FF                 	db	high _sd000
   286  00FD8B  71                 	db	low _sd001
   287  00FD8C  FF                 	db	high _sd001
   288  00FD8D  4B                 	db	low _sd002
   289  00FD8E  FF                 	db	high _sd002
   290  00FD8F                     __end_of_USB_SD_Ptr:
   291                           	opt stack 0
   292  00FD8F                     _USB_CD_Ptr:
   293                           	opt stack 0
   294  00FD8F  08                 	db	low _configDescriptor1
   295  00FD90  FF                 	db	high _configDescriptor1
   296  00FD91                     __end_of_USB_CD_Ptr:
   297                           	opt stack 0
   298  00FD91                     _TaskNumber:
   299                           	opt stack 0
   300  00FD91  0007               	dw	7
   301  00FD93                     __end_of_TaskNumber:
   302                           	opt stack 0
   303  00FD93                     _MsgFormat:
   304                           	opt stack 0
   305  00FD93  48                 	db	72
   306  00FD94  6F                 	db	111
   307  00FD95  73                 	db	115
   308  00FD96  74                 	db	116
   309  00FD97  20                 	db	32
   310  00FD98  6D                 	db	109
   311  00FD99  65                 	db	101
   312  00FD9A  73                 	db	115
   313  00FD9B  73                 	db	115
   314  00FD9C  61                 	db	97
   315  00FD9D  67                 	db	103
   316  00FD9E  65                 	db	101
   317  00FD9F  20                 	db	32
   318  00FDA0  66                 	db	102
   319  00FDA1  6F                 	db	111
   320  00FDA2  72                 	db	114
   321  00FDA3  6D                 	db	109
   322  00FDA4  61                 	db	97
   323  00FDA5  74                 	db	116
   324  00FDA6  3A                 	db	58
   325  00FDA7  20                 	db	32
   326  00FDA8  0D                 	db	13
   327  00FDA9  0A                 	db	10
   328  00FDAA  5B                 	db	91
   329  00FDAB  6F                 	db	111
   330  00FDAC  70                 	db	112
   331  00FDAD  5F                 	db	95
   332  00FDAE  74                 	db	116
   333  00FDAF  79                 	db	121
   334  00FDB0  70                 	db	112
   335  00FDB1  65                 	db	101
   336  00FDB2  5D                 	db	93
   337  00FDB3  3A                 	db	58
   338  00FDB4  5B                 	db	91
   339  00FDB5  6F                 	db	111
   340  00FDB6  70                 	db	112
   341  00FDB7  5D                 	db	93
   342  00FDB8  3A                 	db	58
   343  00FDB9  5B                 	db	91
   344  00FDBA  6C                 	db	108
   345  00FDBB  65                 	db	101
   346  00FDBC  6E                 	db	110
   347  00FDBD  5D                 	db	93
   348  00FDBE  3A                 	db	58
   349  00FDBF  5B                 	db	91
   350  00FDC0  61                 	db	97
   351  00FDC1  64                 	db	100
   352  00FDC2  64                 	db	100
   353  00FDC3  72                 	db	114
   354  00FDC4  5D                 	db	93
   355  00FDC5  3A                 	db	58
   356  00FDC6  5B                 	db	91
   357  00FDC7  70                 	db	112
   358  00FDC8  61                 	db	97
   359  00FDC9  79                 	db	121
   360  00FDCA  6C                 	db	108
   361  00FDCB  6F                 	db	111
   362  00FDCC  61                 	db	97
   363  00FDCD  64                 	db	100
   364  00FDCE  5D                 	db	93
   365  00FDCF  0D                 	db	13
   366  00FDD0  0A                 	db	10
   367  00FDD1  0D                 	db	13
   368  00FDD2  0A                 	db	10
   369  00FDD3  5B                 	db	91
   370  00FDD4  6F                 	db	111
   371  00FDD5  70                 	db	112
   372  00FDD6  5F                 	db	95
   373  00FDD7  74                 	db	116
   374  00FDD8  79                 	db	121
   375  00FDD9  70                 	db	112
   376  00FDDA  65                 	db	101
   377  00FDDB  5D                 	db	93
   378  00FDDC  20                 	db	32
   379  00FDDD  3D                 	db	61
   380  00FDDE  20                 	db	32
   381  00FDDF  53                 	db	83
   382  00FDE0  4F                 	db	79
   383  00FDE1  2C                 	db	44
   384  00FDE2  53                 	db	83
   385  00FDE3  42                 	db	66
   386  00FDE4  0D                 	db	13
   387  00FDE5  0A                 	db	10
   388  00FDE6  5B                 	db	91
   389  00FDE7  6F                 	db	111
   390  00FDE8  70                 	db	112
   391  00FDE9  5D                 	db	93
   392  00FDEA  20                 	db	32
   393  00FDEB  3D                 	db	61
   394  00FDEC  20                 	db	32
   395  00FDED  52                 	db	82
   396  00FDEE  3A                 	db	58
   397  00FDEF  20                 	db	32
   398  00FDF0  72                 	db	114
   399  00FDF1  65                 	db	101
   400  00FDF2  61                 	db	97
   401  00FDF3  64                 	db	100
   402  00FDF4  2C                 	db	44
   403  00FDF5  57                 	db	87
   404  00FDF6  3A                 	db	58
   405  00FDF7  20                 	db	32
   406  00FDF8  77                 	db	119
   407  00FDF9  72                 	db	114
   408  00FDFA  69                 	db	105
   409  00FDFB  74                 	db	116
   410  00FDFC  65                 	db	101
   411  00FDFD  0D                 	db	13
   412  00FDFE  0A                 	db	10
   413  00FDFF  5B                 	db	91
   414  00FE00  6C                 	db	108
   415  00FE01  65                 	db	101
   416  00FE02  6E                 	db	110
   417  00FE03  5D                 	db	93
   418  00FE04  20                 	db	32
   419  00FE05  3D                 	db	61
   420  00FE06  20                 	db	32
   421  00FE07  32                 	db	50
   422  00FE08  20                 	db	32
   423  00FE09  62                 	db	98
   424  00FE0A  79                 	db	121
   425  00FE0B  74                 	db	116
   426  00FE0C  65                 	db	101
   427  00FE0D  20                 	db	32
   428  00FE0E  41                 	db	65
   429  00FE0F  53                 	db	83
   430  00FE10  43                 	db	67
   431  00FE11  49                 	db	73
   432  00FE12  49                 	db	73
   433  00FE13  0D                 	db	13
   434  00FE14  0A                 	db	10
   435  00FE15  5B                 	db	91
   436  00FE16  61                 	db	97
   437  00FE17  64                 	db	100
   438  00FE18  64                 	db	100
   439  00FE19  72                 	db	114
   440  00FE1A  5D                 	db	93
   441  00FE1B  20                 	db	32
   442  00FE1C  3D                 	db	61
   443  00FE1D  20                 	db	32
   444  00FE1E  32                 	db	50
   445  00FE1F  20                 	db	32
   446  00FE20  62                 	db	98
   447  00FE21  79                 	db	121
   448  00FE22  74                 	db	116
   449  00FE23  65                 	db	101
   450  00FE24  20                 	db	32
   451  00FE25  41                 	db	65
   452  00FE26  53                 	db	83
   453  00FE27  43                 	db	67
   454  00FE28  49                 	db	73
   455  00FE29  49                 	db	73
   456  00FE2A  0D                 	db	13
   457  00FE2B  0A                 	db	10
   458  00FE2C  5B                 	db	91
   459  00FE2D  70                 	db	112
   460  00FE2E  61                 	db	97
   461  00FE2F  79                 	db	121
   462  00FE30  6C                 	db	108
   463  00FE31  6F                 	db	111
   464  00FE32  61                 	db	97
   465  00FE33  64                 	db	100
   466  00FE34  5D                 	db	93
   467  00FE35  20                 	db	32
   468  00FE36  3D                 	db	61
   469  00FE37  20                 	db	32
   470  00FE38  6D                 	db	109
   471  00FE39  61                 	db	97
   472  00FE3A  78                 	db	120
   473  00FE3B  20                 	db	32
   474  00FE3C  32                 	db	50
   475  00FE3D  30                 	db	48
   476  00FE3E  20                 	db	32
   477  00FE3F  62                 	db	98
   478  00FE40  79                 	db	121
   479  00FE41  74                 	db	116
   480  00FE42  65                 	db	101
   481  00FE43  20                 	db	32
   482  00FE44  41                 	db	65
   483  00FE45  53                 	db	83
   484  00FE46  43                 	db	67
   485  00FE47  49                 	db	73
   486  00FE48  49                 	db	73
   487  00FE49  0D                 	db	13
   488  00FE4A  0A                 	db	10
   489  00FE4B  0D                 	db	13
   490  00FE4C  0A                 	db	10
   491  00FE4D  54                 	db	84
   492  00FE4E  65                 	db	101
   493  00FE4F  72                 	db	114
   494  00FE50  6D                 	db	109
   495  00FE51  69                 	db	105
   496  00FE52  6E                 	db	110
   497  00FE53  61                 	db	97
   498  00FE54  6C                 	db	108
   499  00FE55  20                 	db	32
   500  00FE56  4D                 	db	77
   501  00FE57  6F                 	db	111
   502  00FE58  64                 	db	100
   503  00FE59  65                 	db	101
   504  00FE5A  3A                 	db	58
   505  00FE5B  20                 	db	32
   506  00FE5C  43                 	db	67
   507  00FE5D  4F                 	db	79
   508  00FE5E  4D                 	db	77
   509  00FE5F  4D                 	db	77
   510  00FE60  41                 	db	65
   511  00FE61  4E                 	db	78
   512  00FE62  44                 	db	68
   513  00FE63  20                 	db	32
   514  00FE64  4D                 	db	77
   515  00FE65  4F                 	db	79
   516  00FE66  44                 	db	68
   517  00FE67  45                 	db	69
   518  00FE68  0D                 	db	13
   519  00FE69  0A                 	db	10
   520  00FE6A  4D                 	db	77
   521  00FE6B  6F                 	db	111
   522  00FE6C  64                 	db	100
   523  00FE6D  65                 	db	101
   524  00FE6E  6D                 	db	109
   525  00FE6F  20                 	db	32
   526  00FE70  54                 	db	84
   527  00FE71  79                 	db	121
   528  00FE72  70                 	db	112
   529  00FE73  65                 	db	101
   530  00FE74  3A                 	db	58
   531  00FE75  20                 	db	32
   532  00FE76  4E                 	db	78
   533  00FE77  6F                 	db	111
   534  00FE78  6E                 	db	110
   535  00FE79  65                 	db	101
   536  00FE7A  0D                 	db	13
   537  00FE7B  0A                 	db	10
   538  00FE7C  0D                 	db	13
   539  00FE7D  0A                 	db	10
   540  00FE7E  00                 	db	0
   541  00FE7F                     __end_of_MsgFormat:
   542                           	opt stack 0
   543  00FE7F                     _Welcome:
   544                           	opt stack 0
   545  00FE7F  2A                 	db	42
   546  00FE80  2A                 	db	42
   547  00FE81  2A                 	db	42
   548  00FE82  2A                 	db	42
   549  00FE83  2A                 	db	42
   550  00FE84  2A                 	db	42
   551  00FE85  2A                 	db	42
   552  00FE86  2A                 	db	42
   553  00FE87  2A                 	db	42
   554  00FE88  2A                 	db	42
   555  00FE89  2A                 	db	42
   556  00FE8A  2A                 	db	42
   557  00FE8B  2A                 	db	42
   558  00FE8C  2A                 	db	42
   559  00FE8D  2A                 	db	42
   560  00FE8E  2A                 	db	42
   561  00FE8F  2A                 	db	42
   562  00FE90  2A                 	db	42
   563  00FE91  2A                 	db	42
   564  00FE92  2A                 	db	42
   565  00FE93  2A                 	db	42
   566  00FE94  2A                 	db	42
   567  00FE95  2A                 	db	42
   568  00FE96  2A                 	db	42
   569  00FE97  2A                 	db	42
   570  00FE98  2A                 	db	42
   571  00FE99  2A                 	db	42
   572  00FE9A  2A                 	db	42
   573  00FE9B  2A                 	db	42
   574  00FE9C  2A                 	db	42
   575  00FE9D  2A                 	db	42
   576  00FE9E  2A                 	db	42
   577  00FE9F  2A                 	db	42
   578  00FEA0  2A                 	db	42
   579  00FEA1  2A                 	db	42
   580  00FEA2  2A                 	db	42
   581  00FEA3  2A                 	db	42
   582  00FEA4  2A                 	db	42
   583  00FEA5  2A                 	db	42
   584  00FEA6  2A                 	db	42
   585  00FEA7  2A                 	db	42
   586  00FEA8  2A                 	db	42
   587  00FEA9  2A                 	db	42
   588  00FEAA  2A                 	db	42
   589  00FEAB  2A                 	db	42
   590  00FEAC  2A                 	db	42
   591  00FEAD  2A                 	db	42
   592  00FEAE  2A                 	db	42
   593  00FEAF  2A                 	db	42
   594  00FEB0  0D                 	db	13
   595  00FEB1  0A                 	db	10
   596  00FEB2  20                 	db	32
   597  00FEB3  20                 	db	32
   598  00FEB4  20                 	db	32
   599  00FEB5  20                 	db	32
   600  00FEB6  20                 	db	32
   601  00FEB7  20                 	db	32
   602  00FEB8  20                 	db	32
   603  00FEB9  20                 	db	32
   604  00FEBA  20                 	db	32
   605  00FEBB  20                 	db	32
   606  00FEBC  20                 	db	32
   607  00FEBD  20                 	db	32
   608  00FEBE  20                 	db	32
   609  00FEBF  20                 	db	32
   610  00FEC0  20                 	db	32
   611  00FEC1  20                 	db	32
   612  00FEC2  20                 	db	32
   613  00FEC3  20                 	db	32
   614  00FEC4  4D                 	db	77
   615  00FEC5  45                 	db	69
   616  00FEC6  52                 	db	82
   617  00FEC7  43                 	db	67
   618  00FEC8  55                 	db	85
   619  00FEC9  52                 	db	82
   620  00FECA  59                 	db	89
   621  00FECB  20                 	db	32
   622  00FECC  53                 	db	83
   623  00FECD  59                 	db	89
   624  00FECE  53                 	db	83
   625  00FECF  54                 	db	84
   626  00FED0  45                 	db	69
   627  00FED1  4D                 	db	77
   628  00FED2  0D                 	db	13
   629  00FED3  0A                 	db	10
   630  00FED4  2A                 	db	42
   631  00FED5  2A                 	db	42
   632  00FED6  2A                 	db	42
   633  00FED7  2A                 	db	42
   634  00FED8  2A                 	db	42
   635  00FED9  2A                 	db	42
   636  00FEDA  2A                 	db	42
   637  00FEDB  2A                 	db	42
   638  00FEDC  2A                 	db	42
   639  00FEDD  2A                 	db	42
   640  00FEDE  2A                 	db	42
   641  00FEDF  2A                 	db	42
   642  00FEE0  2A                 	db	42
   643  00FEE1  2A                 	db	42
   644  00FEE2  2A                 	db	42
   645  00FEE3  2A                 	db	42
   646  00FEE4  2A                 	db	42
   647  00FEE5  2A                 	db	42
   648  00FEE6  2A                 	db	42
   649  00FEE7  2A                 	db	42
   650  00FEE8  2A                 	db	42
   651  00FEE9  2A                 	db	42
   652  00FEEA  2A                 	db	42
   653  00FEEB  2A                 	db	42
   654  00FEEC  2A                 	db	42
   655  00FEED  2A                 	db	42
   656  00FEEE  2A                 	db	42
   657  00FEEF  2A                 	db	42
   658  00FEF0  2A                 	db	42
   659  00FEF1  2A                 	db	42
   660  00FEF2  2A                 	db	42
   661  00FEF3  2A                 	db	42
   662  00FEF4  2A                 	db	42
   663  00FEF5  2A                 	db	42
   664  00FEF6  2A                 	db	42
   665  00FEF7  2A                 	db	42
   666  00FEF8  2A                 	db	42
   667  00FEF9  2A                 	db	42
   668  00FEFA  2A                 	db	42
   669  00FEFB  2A                 	db	42
   670  00FEFC  2A                 	db	42
   671  00FEFD  2A                 	db	42
   672  00FEFE  2A                 	db	42
   673  00FEFF  2A                 	db	42
   674  00FF00  2A                 	db	42
   675  00FF01  2A                 	db	42
   676  00FF02  2A                 	db	42
   677  00FF03  2A                 	db	42
   678  00FF04  2A                 	db	42
   679  00FF05  0D                 	db	13
   680  00FF06  0A                 	db	10
   681  00FF07  00                 	db	0
   682  00FF08                     __end_of_Welcome:
   683                           	opt stack 0
   684  00FF08                     _configDescriptor1:
   685                           	opt stack 0
   686  00FF08  09                 	db	9
   687  00FF09  02                 	db	2
   688  00FF0A  43                 	db	67
   689  00FF0B  00                 	db	0
   690  00FF0C  02                 	db	2
   691  00FF0D  01                 	db	1
   692  00FF0E  00                 	db	0
   693  00FF0F  C0                 	db	192
   694  00FF10  32                 	db	50
   695  00FF11  09                 	db	9
   696  00FF12  04                 	db	4
   697  00FF13  00                 	db	0
   698  00FF14  00                 	db	0
   699  00FF15  01                 	db	1
   700  00FF16  02                 	db	2
   701  00FF17  02                 	db	2
   702  00FF18  01                 	db	1
   703  00FF19  00                 	db	0
   704  00FF1A  05                 	db	5
   705  00FF1B  24                 	db	36
   706  00FF1C  00                 	db	0
   707  00FF1D  10                 	db	16
   708  00FF1E  01                 	db	1
   709  00FF1F  04                 	db	4
   710  00FF20  24                 	db	36
   711  00FF21  02                 	db	2
   712  00FF22  02                 	db	2
   713  00FF23  05                 	db	5
   714  00FF24  24                 	db	36
   715  00FF25  06                 	db	6
   716  00FF26  00                 	db	0
   717  00FF27  01                 	db	1
   718  00FF28  05                 	db	5
   719  00FF29  24                 	db	36
   720  00FF2A  01                 	db	1
   721  00FF2B  00                 	db	0
   722  00FF2C  01                 	db	1
   723  00FF2D  07                 	db	7
   724  00FF2E  05                 	db	5
   725  00FF2F  81                 	db	129
   726  00FF30  03                 	db	3
   727  00FF31  08                 	db	8
   728  00FF32  00                 	db	0
   729  00FF33  02                 	db	2
   730  00FF34  09                 	db	9
   731  00FF35  04                 	db	4
   732  00FF36  01                 	db	1
   733  00FF37  00                 	db	0
   734  00FF38  02                 	db	2
   735  00FF39  0A                 	db	10
   736  00FF3A  00                 	db	0
   737  00FF3B  00                 	db	0
   738  00FF3C  00                 	db	0
   739  00FF3D  07                 	db	7
   740  00FF3E  05                 	db	5
   741  00FF3F  02                 	db	2
   742  00FF40  02                 	db	2
   743  00FF41  40                 	db	64
   744  00FF42  00                 	db	0
   745  00FF43  00                 	db	0
   746  00FF44  07                 	db	7
   747  00FF45  05                 	db	5
   748  00FF46  82                 	db	130
   749  00FF47  02                 	db	2
   750  00FF48  40                 	db	64
   751  00FF49  00                 	db	0
   752  00FF4A  00                 	db	0
   753  00FF4B                     __end_of_configDescriptor1:
   754                           	opt stack 0
   755  00FF4B                     _sd002:
   756                           	opt stack 0
   757  00FF4B  26                 	db	38
   758  00FF4C  03                 	db	3
   759  00FF4D  0054               	dw	84
   760  00FF4F  0065               	dw	101
   761  00FF51  0072               	dw	114
   762  00FF53  006D               	dw	109
   763  00FF55  0069               	dw	105
   764  00FF57  006E               	dw	110
   765  00FF59  0061               	dw	97
   766  00FF5B  006C               	dw	108
   767  00FF5D  0020               	dw	32
   768  00FF5F  0049               	dw	73
   769  00FF61  006E               	dw	110
   770  00FF63  0074               	dw	116
   771  00FF65  0065               	dw	101
   772  00FF67  0072               	dw	114
   773  00FF69  0066               	dw	102
   774  00FF6B  0061               	dw	97
   775  00FF6D  0063               	dw	99
   776  00FF6F  0065               	dw	101
   777  00FF71                     __end_of_sd002:
   778                           	opt stack 0
   779  00FF71                     _sd001:
   780                           	opt stack 0
   781  00FF71  1E                 	db	30
   782  00FF72  03                 	db	3
   783  00FF73  004D               	dw	77
   784  00FF75  0065               	dw	101
   785  00FF77  0072               	dw	114
   786  00FF79  0063               	dw	99
   787  00FF7B  0075               	dw	117
   788  00FF7D  0072               	dw	114
   789  00FF7F  0079               	dw	121
   790  00FF81  0020               	dw	32
   791  00FF83  0053               	dw	83
   792  00FF85  0079               	dw	121
   793  00FF87  0073               	dw	115
   794  00FF89  0074               	dw	116
   795  00FF8B  0065               	dw	101
   796  00FF8D  006D               	dw	109
   797  00FF8F                     __end_of_sd001:
   798                           	opt stack 0
   799  00FF8F                     _MsgReady:
   800                           	opt stack 0
   801  00FF8F  0D                 	db	13
   802  00FF90  0A                 	db	10
   803  00FF91  53                 	db	83
   804  00FF92  79                 	db	121
   805  00FF93  73                 	db	115
   806  00FF94  74                 	db	116
   807  00FF95  65                 	db	101
   808  00FF96  6D                 	db	109
   809  00FF97  20                 	db	32
   810  00FF98  52                 	db	82
   811  00FF99  65                 	db	101
   812  00FF9A  61                 	db	97
   813  00FF9B  64                 	db	100
   814  00FF9C  79                 	db	121
   815  00FF9D  2E                 	db	46
   816  00FF9E  2E                 	db	46
   817  00FF9F  2E                 	db	46
   818  00FFA0  20                 	db	32
   819  00FFA1  0D                 	db	13
   820  00FFA2  0A                 	db	10
   821  00FFA3  0D                 	db	13
   822  00FFA4  0A                 	db	10
   823  00FFA5  00                 	db	0
   824  00FFA6                     __end_of_MsgReady:
   825                           	opt stack 0
   826  00FFA6                     _device_dsc:
   827                           	opt stack 0
   828  00FFA6  12                 	db	18
   829  00FFA7  01                 	db	1
   830  00FFA8  0200               	dw	512
   831  00FFAA  02                 	db	2
   832  00FFAB  00                 	db	0
   833  00FFAC  00                 	db	0
   834  00FFAD  08                 	db	8
   835  00FFAE  04D8               	dw	1240
   836  00FFB0  000A               	dw	10
   837  00FFB2  0100               	dw	256
   838  00FFB4  01                 	db	1
   839  00FFB5  02                 	db	2
   840  00FFB6  00                 	db	0
   841  00FFB7  01                 	db	1
   842  00FFB8                     __end_of_device_dsc:
   843                           	opt stack 0
   844  00FFB8                     _sd000:
   845                           	opt stack 0
   846  00FFB8  04                 	db	4
   847  00FFB9  03                 	db	3
   848  00FFBA  0409               	dw	1033
   849  00FFBC                     __end_of_sd000:
   850                           	opt stack 0
   851  0000                     _RPINR1	set	3815
   852  0000                     _UEP0bits	set	3878
   853  0000                     _UIEbits	set	3894
   854  0000                     _UADDR	set	3896
   855  0000                     _UIE	set	3894
   856  0000                     _UEIE	set	3895
   857  0000                     _UCFG	set	3897
   858  0000                     _RTCCAL	set	3902
   859  0000                     _PADCFG1bits	set	3900
   860  0000                     _RTCCFGbits	set	3903
   861  0000                     _DSCONLbits	set	3916
   862  0000                     _DSGPR1	set	3919
   863  0000                     _DSGPR0	set	3918
   864  0000                     _DSCONHbits	set	3917
   865  0000                     _ANCON1bits	set	3913
   866  0000                     _UEP1	set	3879
   867  0000                     _UEP0	set	3878
   868  0000                     _T1CONbits	set	4045
   869  0000                     _PORTDbits	set	3971
   870  0000                     _USTAT	set	3940
   871  0000                     _PIR2bits	set	4001
   872  0000                     _UCON	set	3941
   873  0000                     _UIRbits	set	3938
   874  0000                     _UCONbits	set	3941
   875  0000                     _UIR	set	3938
   876  0000                     _UEIR	set	3939
   877  0000                     _PIE2bits	set	4000
   878  0000                     _BAUDCON2	set	3964
   879  0000                     _RCSTA2	set	3996
   880  0000                     _BAUDCON1	set	3966
   881  0000                     _RCSTA1	set	4012
   882  0000                     _TRISCbits	set	3988
   883  0000                     _TXSTA2	set	4008
   884  0000                     _TXSTA1	set	4013
   885  0000                     _RCREG2	set	4010
   886  0000                     _RCREG1	set	4015
   887  0000                     _TXREG2	set	4009
   888  0000                     _TXREG1	set	4014
   889  0000                     _SPBRG2	set	4011
   890  0000                     _SPBRGH2	set	3965
   891  0000                     _SPBRG1	set	4016
   892  0000                     _SPBRGH1	set	3967
   893  0000                     _PR4	set	3959
   894  0000                     _PR2	set	4043
   895  0000                     _PIE1bits	set	3997
   896  0000                     _IPR1bits	set	3999
   897  0000                     _T4CONbits	set	3958
   898  0000                     _T2CONbits	set	4042
   899  0000                     _ALRMVALL	set	3982
   900  0000                     _ALRMVALH	set	3983
   901  0000                     _RTCVALH	set	3993
   902  0000                     _RTCVALL	set	3992
   903  0000                     _ALRMRPTbits	set	3984
   904  0000                     _ALRMCFGbits	set	3985
   905  0000                     _PIE3bits	set	4003
   906  0000                     _IPR3bits	set	4005
   907  0000                     _OSCCONbits	set	4051
   908  0000                     _WDTCONbits	set	4032
   909  0000                     _INTCON2bits	set	4081
   910  0000                     _TRISBbits	set	3987
   911  0000                     _OSCTUNEbits	set	3995
   912  0000                     _SSP2CON1	set	3954
   913  0000                     _TRISDbits	set	3989
   914  0000                     _SSP2BUF	set	3957
   915  0000                     _SSP2CON2bits	set	3953
   916  0000                     _SSP2STAT	set	3955
   917  0000                     _SSP2CON2	set	3953
   918  0000                     _SSP2ADD	set	3956
   919  0000                     _PIR1bits	set	3998
   920  0000                     _PIR3bits	set	4004
   921  0000                     _INTCON3bits	set	4080
   922  0000                     _INTCONbits	set	4082
   923  0000                     _RCONbits	set	4048
   924  00FFBC                     STR_1:
   925  00FFBC  46                 	db	70	;'F'
   926  00FFBD  72                 	db	114	;'r'
   927  00FFBE  61                 	db	97	;'a'
   928  00FFBF  6D                 	db	109	;'m'
   929  00FFC0  65                 	db	101	;'e'
   930  00FFC1  77                 	db	119	;'w'
   931  00FFC2  6F                 	db	111	;'o'
   932  00FFC3  72                 	db	114	;'r'
   933  00FFC4  6B                 	db	107	;'k'
   934  00FFC5  20                 	db	32
   935  00FFC6  56                 	db	86	;'V'
   936  00FFC7  65                 	db	101	;'e'
   937  00FFC8  72                 	db	114	;'r'
   938  00FFC9  73                 	db	115	;'s'
   939  00FFCA  69                 	db	105	;'i'
   940  00FFCB  6F                 	db	111	;'o'
   941  00FFCC  6E                 	db	110	;'n'
   942  00FFCD  3A                 	db	58	;':'
   943  00FFCE  20                 	db	32
   944  00FFCF  00                 	db	0
   945  00FFD0                     STR_5:
   946  00FFD0  42                 	db	66	;'B'
   947  00FFD1  75                 	db	117	;'u'
   948  00FFD2  69                 	db	105	;'i'
   949  00FFD3  6C                 	db	108	;'l'
   950  00FFD4  64                 	db	100	;'d'
   951  00FFD5  20                 	db	32
   952  00FFD6  44                 	db	68	;'D'
   953  00FFD7  61                 	db	97	;'a'
   954  00FFD8  74                 	db	116	;'t'
   955  00FFD9  65                 	db	101	;'e'
   956  00FFDA  3A                 	db	58	;':'
   957  00FFDB  20                 	db	32
   958  00FFDC  25                 	db	37
   959  00FFDD  73                 	db	115	;'s'
   960  00FFDE  0D                 	db	13
   961  00FFDF  0A                 	db	10
   962  00FFE0  00                 	db	0
   963  00FFE1                     STR_6:
   964  00FFE1  4E                 	db	78	;'N'
   965  00FFE2  6F                 	db	111	;'o'
   966  00FFE3  76                 	db	118	;'v'
   967  00FFE4  20                 	db	32
   968  00FFE5  30                 	db	48	;'0'
   969  00FFE6  31                 	db	49	;'1'
   970  00FFE7  20                 	db	32
   971  00FFE8  32                 	db	50	;'2'
   972  00FFE9  30                 	db	48	;'0'
   973  00FFEA  31                 	db	49	;'1'
   974  00FFEB  39                 	db	57	;'9'
   975  00FFEC  00                 	db	0
   976  00FFED                     STR_7:
   977  00FFED  28                 	db	40
   978  00FFEE  6E                 	db	110	;'n'
   979  00FFEF  75                 	db	117	;'u'
   980  00FFF0  6C                 	db	108	;'l'
   981  00FFF1  6C                 	db	108	;'l'
   982  00FFF2  29                 	db	41
   983  00FFF3  00                 	db	0
   984  00FFF4                     STR_2:
   985  00FFF4  2E                 	db	46
   986  00FFF5  00                 	db	0
   987  0000                     
   988                           ; #config settings
   989  00FFF6  00                 	db	0	; dummy byte at the end
   990  0000                     
   991                           	psect	cinit
   992  002628                     __pcinit:
   993                           	opt stack 0
   994  002628                     start_initialization:
   995                           	opt stack 0
   996  002628                     __initialization:
   997                           	opt stack 0
   998                           
   999                           ; Initialize objects allocated to BANK3 (67 bytes)
  1000                           ; load TBLPTR registers with __pidataBANK3
  1001  002628  0E14               	movlw	low __pidataBANK3
  1002  00262A  6EF6               	movwf	tblptrl,c
  1003  00262C  0E3C               	movlw	high __pidataBANK3
  1004  00262E  6EF7               	movwf	tblptrh,c
  1005  002630  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1006  002632  6EF8               	movwf	tblptru,c
  1007  002634  EE03  F0BC         	lfsr	0,__pdataBANK3
  1008  002638  EE10 F043          	lfsr	1,67
  1009  00263C                     copy_data0:
  1010  00263C  0009               	tblrd		*+
  1011  00263E  CFF5 FFEE          	movff	tablat,postinc0
  1012  002642  50E5               	movf	postdec1,w,c
  1013  002644  50E1               	movf	fsr1l,w,c
  1014  002646  E1FA               	bnz	copy_data0
  1015                           
  1016                           ; Initialize objects allocated to BANK2 (1 bytes)
  1017                           ; load TBLPTR registers with __pidataBANK2
  1018  002648  0E7F               	movlw	low __pidataBANK2
  1019  00264A  6EF6               	movwf	tblptrl,c
  1020  00264C  0E43               	movlw	high __pidataBANK2
  1021  00264E  6EF7               	movwf	tblptrh,c
  1022  002650  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1023  002652  6EF8               	movwf	tblptru,c
  1024  002654  0009               	tblrd		*+	;fetch initializer
  1025  002656  CFF5 F269          	movff	tablat,__pdataBANK2
  1026                           
  1027                           ; Initialize objects allocated to BANK0 (1 bytes)
  1028                           ; load TBLPTR registers with __pidataBANK0
  1029  00265A  0E7E               	movlw	low __pidataBANK0
  1030  00265C  6EF6               	movwf	tblptrl,c
  1031  00265E  0E43               	movlw	high __pidataBANK0
  1032  002660  6EF7               	movwf	tblptrh,c
  1033  002662  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1034  002664  6EF8               	movwf	tblptru,c
  1035  002666  0009               	tblrd		*+	;fetch initializer
  1036  002668  CFF5 F0E1          	movff	tablat,__pdataBANK0
  1037                           
  1038                           ; Clear objects allocated to BIGRAMl (400 bytes)
  1039  00266C  EE07  F0C8         	lfsr	0,__pbssBIGRAMl
  1040  002670  EE11 F090          	lfsr	1,400
  1041  002674                     clear_0:
  1042  002674  6AEE               	clrf	postinc0,c
  1043  002676  50E5               	movf	postdec1,w,c
  1044  002678  50E1               	movf	fsr1l,w,c
  1045  00267A  E1FC               	bnz	clear_0
  1046  00267C  50E2               	movf	fsr1h,w,c
  1047  00267E  E1FA               	bnz	clear_0
  1048                           
  1049                           ; Clear objects allocated to BANK6 (64 bytes)
  1050  002680  EE06  F000         	lfsr	0,__pbssBANK6
  1051  002684  0E40               	movlw	64
  1052  002686                     clear_1:
  1053  002686  6AEE               	clrf	postinc0,c
  1054  002688  06E8               	decf	wreg,f,c
  1055  00268A  E1FD               	bnz	clear_1
  1056                           
  1057                           ; Clear objects allocated to BANK5 (220 bytes)
  1058  00268C  EE05  F000         	lfsr	0,__pbssBANK5
  1059  002690  0EDC               	movlw	220
  1060  002692                     clear_2:
  1061  002692  6AEE               	clrf	postinc0,c
  1062  002694  06E8               	decf	wreg,f,c
  1063  002696  E1FD               	bnz	clear_2
  1064                           
  1065                           ; Clear objects allocated to BANK3 (188 bytes)
  1066  002698  EE03  F000         	lfsr	0,__pbssBANK3
  1067  00269C  0EBC               	movlw	188
  1068  00269E                     clear_3:
  1069  00269E  6AEE               	clrf	postinc0,c
  1070  0026A0  06E8               	decf	wreg,f,c
  1071  0026A2  E1FD               	bnz	clear_3
  1072                           
  1073                           ; Clear objects allocated to BANK2 (55 bytes)
  1074  0026A4  EE02  F000         	lfsr	0,__pbssBANK2
  1075  0026A8  0E37               	movlw	55
  1076  0026AA                     clear_4:
  1077  0026AA  6AEE               	clrf	postinc0,c
  1078  0026AC  06E8               	decf	wreg,f,c
  1079  0026AE  E1FD               	bnz	clear_4
  1080                           
  1081                           ; Clear objects allocated to BANK1 (56 bytes)
  1082  0026B0  EE01  F0C8         	lfsr	0,__pbssBANK1
  1083  0026B4  0E38               	movlw	56
  1084  0026B6                     clear_5:
  1085  0026B6  6AEE               	clrf	postinc0,c
  1086  0026B8  06E8               	decf	wreg,f,c
  1087  0026BA  E1FD               	bnz	clear_5
  1088                           
  1089                           ; Clear objects allocated to BANK4 (130 bytes)
  1090  0026BC  EE04  F040         	lfsr	0,__pbssBANK4
  1091  0026C0  0E82               	movlw	130
  1092  0026C2                     clear_6:
  1093  0026C2  6AEE               	clrf	postinc0,c
  1094  0026C4  06E8               	decf	wreg,f,c
  1095  0026C6  E1FD               	bnz	clear_6
  1096                           
  1097                           ; Clear objects allocated to BANK0 (59 bytes)
  1098  0026C8  EE00  F0A6         	lfsr	0,__pbssBANK0
  1099  0026CC  0E3B               	movlw	59
  1100  0026CE                     clear_7:
  1101  0026CE  6AEE               	clrf	postinc0,c
  1102  0026D0  06E8               	decf	wreg,f,c
  1103  0026D2  E1FD               	bnz	clear_7
  1104                           
  1105                           ; Clear objects allocated to COMRAM (36 bytes)
  1106  0026D4  EE00  F001         	lfsr	0,__pbssCOMRAM
  1107  0026D8  0E24               	movlw	36
  1108  0026DA                     clear_8:
  1109  0026DA  6AEE               	clrf	postinc0,c
  1110  0026DC  06E8               	decf	wreg,f,c
  1111  0026DE  E1FD               	bnz	clear_8
  1112  0026E0                     end_of_initialization:
  1113                           	opt stack 0
  1114  0026E0                     __end_of__initialization:
  1115                           	opt stack 0
  1116  0026E0  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1117  0026E2  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1118  0026E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1119  0026E6  6EF8               	movwf	tblptru,c
  1120  0026E8  0100               	movlb	0
  1121  0026EA  EF8C  F021         	goto	_main	;jump to C main() function
  1122                           tblptru	equ	0xFF8
  1123                           tblptrh	equ	0xFF7
  1124                           tblptrl	equ	0xFF6
  1125                           tablat	equ	0xFF5
  1126                           postinc0	equ	0xFEE
  1127                           wreg	equ	0xFE8
  1128                           postdec1	equ	0xFE5
  1129                           fsr1h	equ	0xFE2
  1130                           fsr1l	equ	0xFE1
  1131                           
  1132                           	psect	bssCOMRAM
  1133  000001                     __pbssCOMRAM:
  1134                           	opt stack 0
  1135  000001                     _outPipes:
  1136                           	opt stack 0
  1137  000001                     	ds	8
  1138  000009                     _pCDCDst:
  1139                           	opt stack 0
  1140  000009                     	ds	3
  1141  00000C                     _pCDCSrc:
  1142                           	opt stack 0
  1143  00000C                     	ds	3
  1144  00000F                     _ep_data_out:
  1145                           	opt stack 0
  1146  00000F                     	ds	3
  1147  000012                     _ep_data_in:
  1148                           	opt stack 0
  1149  000012                     	ds	3
  1150  000015                     _CDCDataInHandle:
  1151                           	opt stack 0
  1152  000015                     	ds	2
  1153  000017                     _pDst:
  1154                           	opt stack 0
  1155  000017                     	ds	2
  1156  000019                     _Tmr4IsrCallback:
  1157                           	opt stack 0
  1158  000019                     	ds	2
  1159  00001B                     _Tmr2IsrCallback:
  1160                           	opt stack 0
  1161  00001B                     	ds	2
  1162  00001D                     _control_signal_bitmap:
  1163                           	opt stack 0
  1164  00001D                     	ds	1
  1165  00001E                     I2cSlv_QueryI2cData@Ret:
  1166                           	opt stack 0
  1167  00001E                     	ds	1
  1168  00001F                     I2cSlv_QueryI2cData@I2cOpState:
  1169                           	opt stack 0
  1170  00001F                     	ds	1
  1171  000020                     _I2cBusStatus:
  1172                           	opt stack 0
  1173  000020                     	ds	1
  1174  000021                     Uart_Uart1RxIsr@UartRxData:
  1175                           	opt stack 0
  1176  000021                     	ds	1
  1177  000022                     _USBAlternateInterface:
  1178                           	opt stack 0
  1179  000022                     	ds	2
  1180  000024                     I2cDummyTx@DummyBuffer:
  1181                           	opt stack 0
  1182  000024                     	ds	1
  1183                           tblptru	equ	0xFF8
  1184                           tblptrh	equ	0xFF7
  1185                           tblptrl	equ	0xFF6
  1186                           tablat	equ	0xFF5
  1187                           postinc0	equ	0xFEE
  1188                           wreg	equ	0xFE8
  1189                           postdec1	equ	0xFE5
  1190                           fsr1h	equ	0xFE2
  1191                           fsr1l	equ	0xFE1
  1192                           
  1193                           	psect	bssBANK0
  1194  0000A6                     __pbssBANK0:
  1195                           	opt stack 0
  1196  0000A6                     _inPipes:
  1197                           	opt stack 0
  1198  0000A6                     	ds	6
  1199  0000AC                     _pBDTEntryIn:
  1200                           	opt stack 0
  1201  0000AC                     	ds	6
  1202  0000B2                     _CDCDataOutHandle:
  1203                           	opt stack 0
  1204  0000B2                     	ds	2
  1205  0000B4                     _pBDTEntryEP0OutNext:
  1206                           	opt stack 0
  1207  0000B4                     	ds	2
  1208  0000B6                     _pBDTEntryEP0OutCurrent:
  1209                           	opt stack 0
  1210  0000B6                     	ds	2
  1211  0000B8                     Term_MainSm@TermMainSmState:
  1212                           	opt stack 0
  1213  0000B8                     	ds	1
  1214  0000B9                     _cdc_mem_type:
  1215                           	opt stack 0
  1216  0000B9                     	ds	1
  1217  0000BA                     _cdc_tx_len:
  1218                           	opt stack 0
  1219  0000BA                     	ds	1
  1220  0000BB                     _cdc_trf_state:
  1221                           	opt stack 0
  1222  0000BB                     	ds	1
  1223  0000BC                     _cdc_rx_len:
  1224                           	opt stack 0
  1225  0000BC                     	ds	1
  1226  0000BD                     _USBTicksSinceSuspendEnd:
  1227                           	opt stack 0
  1228  0000BD                     	ds	1
  1229  0000BE                     _USBDeferOUTDataStagePackets:
  1230                           	opt stack 0
  1231  0000BE                     	ds	1
  1232  0000BF                     _USBDeferINDataStagePackets:
  1233                           	opt stack 0
  1234  0000BF                     	ds	1
  1235  0000C0                     _USBStatusStageEnabledFlag2:
  1236                           	opt stack 0
  1237  0000C0                     	ds	1
  1238  0000C1                     _USBStatusStageEnabledFlag1:
  1239                           	opt stack 0
  1240  0000C1                     	ds	1
  1241  0000C2                     _USBDeferStatusStagePacket:
  1242                           	opt stack 0
  1243  0000C2                     	ds	1
  1244  0000C3                     _USBStatusStageTimeoutCounter:
  1245                           	opt stack 0
  1246  0000C3                     	ds	1
  1247  0000C4                     _BothEP0OutUOWNsSet:
  1248                           	opt stack 0
  1249  0000C4                     	ds	1
  1250  0000C5                     _endpoint_number:
  1251                           	opt stack 0
  1252  0000C5                     	ds	1
  1253  0000C6                     _USBBusIsSuspended:
  1254                           	opt stack 0
  1255  0000C6                     	ds	1
  1256  0000C7                     _RemoteWakeup:
  1257                           	opt stack 0
  1258  0000C7                     	ds	1
  1259  0000C8                     _controlTransferState:
  1260                           	opt stack 0
  1261  0000C8                     	ds	1
  1262  0000C9                     _shortPacketStatus:
  1263                           	opt stack 0
  1264  0000C9                     	ds	1
  1265  0000CA                     _USBDeviceState:
  1266                           	opt stack 0
  1267  0000CA                     	ds	1
  1268  0000CB                     I2cSendMsgSm@I2cComState:
  1269                           	opt stack 0
  1270  0000CB                     	ds	1
  1271  0000CC                     _I2cComSts:
  1272                           	opt stack 0
  1273  0000CC                     	ds	1
  1274  0000CD                     _SystemState:
  1275                           	opt stack 0
  1276  0000CD                     	ds	1
  1277  0000CE                     I2c_ReadData@ReadStatus:
  1278                           	opt stack 0
  1279  0000CE                     	ds	1
  1280  0000CF                     I2c_ReadData@TentativeCounter:
  1281                           	opt stack 0
  1282  0000CF                     	ds	1
  1283  0000D0                     I2c_ReadData@DataCounter:
  1284                           	opt stack 0
  1285  0000D0                     	ds	1
  1286  0000D1                     I2c_ReadData@I2cReadState:
  1287                           	opt stack 0
  1288  0000D1                     	ds	1
  1289  0000D2                     I2c_WriteData@WriteStatus:
  1290                           	opt stack 0
  1291  0000D2                     	ds	1
  1292  0000D3                     I2c_WriteData@TentativeCounter:
  1293                           	opt stack 0
  1294  0000D3                     	ds	1
  1295  0000D4                     I2c_WriteData@I2cNextState:
  1296                           	opt stack 0
  1297  0000D4                     	ds	1
  1298  0000D5                     I2c_WriteData@I2cWriteState:
  1299                           	opt stack 0
  1300  0000D5                     	ds	1
  1301  0000D6                     _AlarmEvent:
  1302                           	opt stack 0
  1303  0000D6                     	ds	1
  1304  0000D7                     _Led3OutSts:
  1305                           	opt stack 0
  1306  0000D7                     	ds	1
  1307  0000D8                     _Led3Sts:
  1308                           	opt stack 0
  1309  0000D8                     	ds	1
  1310  0000D9                     _Led2OutSts:
  1311                           	opt stack 0
  1312  0000D9                     	ds	1
  1313  0000DA                     _Led2Sts:
  1314                           	opt stack 0
  1315  0000DA                     	ds	1
  1316  0000DB                     _Led1OutSts:
  1317                           	opt stack 0
  1318  0000DB                     	ds	1
  1319  0000DC                     _Led1Sts:
  1320                           	opt stack 0
  1321  0000DC                     	ds	1
  1322  0000DD                     _USTATcopy:
  1323                           	opt stack 0
  1324  0000DD                     	ds	1
  1325  0000DE                     _USBActiveConfiguration:
  1326                           	opt stack 0
  1327  0000DE                     	ds	1
  1328  0000DF                     _I2cReadDataEvt:
  1329                           	opt stack 0
  1330  0000DF                     	ds	1
  1331  0000E0                     _I2cWriteDataEvt:
  1332                           	opt stack 0
  1333  0000E0                     	ds	1
  1334                           tblptru	equ	0xFF8
  1335                           tblptrh	equ	0xFF7
  1336                           tblptrl	equ	0xFF6
  1337                           tablat	equ	0xFF5
  1338                           postinc0	equ	0xFEE
  1339                           wreg	equ	0xFE8
  1340                           postdec1	equ	0xFE5
  1341                           fsr1h	equ	0xFE2
  1342                           fsr1l	equ	0xFE1
  1343                           
  1344                           	psect	dataBANK0
  1345  0000E1                     __pdataBANK0:
  1346                           	opt stack 0
  1347  0000E1                     _MainSystemTimebaseFlag:
  1348                           	opt stack 0
  1349  0000E1                     	ds	1
  1350                           tblptru	equ	0xFF8
  1351                           tblptrh	equ	0xFF7
  1352                           tblptrl	equ	0xFF6
  1353                           tablat	equ	0xFF5
  1354                           postinc0	equ	0xFEE
  1355                           wreg	equ	0xFE8
  1356                           postdec1	equ	0xFE5
  1357                           fsr1h	equ	0xFE2
  1358                           fsr1l	equ	0xFE1
  1359                           
  1360                           	psect	bssBANK1
  1361  0001C8                     __pbssBANK1:
  1362                           	opt stack 0
  1363  0001C8                     _pBDTEntryOut:
  1364                           	opt stack 0
  1365  0001C8                     	ds	6
  1366  0001CE                     _OsTmr_OsTickCounter:
  1367                           	opt stack 0
  1368  0001CE                     	ds	4
  1369  0001D2                     UpdateSchFlag@InterruptCounter:
  1370                           	opt stack 0
  1371  0001D2                     	ds	2
  1372  0001D4                     _RxLen:
  1373                           	opt stack 0
  1374  0001D4                     	ds	2
  1375  0001D6                     _ExtInt1IsrCallback:
  1376                           	opt stack 0
  1377  0001D6                     	ds	2
  1378  0001D8                     _ExtInt0IsrCallback:
  1379                           	opt stack 0
  1380  0001D8                     	ds	2
  1381  0001DA                     _RtccIsrCallback:
  1382                           	opt stack 0
  1383  0001DA                     	ds	2
  1384  0001DC                     _I2cConfig:
  1385                           	opt stack 0
  1386  0001DC                     	ds	10
  1387  0001E6                     _line_coding:
  1388                           	opt stack 0
  1389  0001E6                     	ds	7
  1390  0001ED                     _I2cRxPacket:
  1391                           	opt stack 0
  1392  0001ED                     	ds	6
  1393  0001F3                     _I2cTxPacket:
  1394                           	opt stack 0
  1395  0001F3                     	ds	5
  1396  0001F8                     _AlCfg:
  1397                           	opt stack 0
  1398  0001F8                     	ds	4
  1399  0001FC                     _RtcConfig:
  1400                           	opt stack 0
  1401  0001FC                     	ds	4
  1402                           tblptru	equ	0xFF8
  1403                           tblptrh	equ	0xFF7
  1404                           tblptrl	equ	0xFF6
  1405                           tablat	equ	0xFF5
  1406                           postinc0	equ	0xFEE
  1407                           wreg	equ	0xFE8
  1408                           postdec1	equ	0xFE5
  1409                           fsr1h	equ	0xFE2
  1410                           fsr1l	equ	0xFE1
  1411                           
  1412                           	psect	bssBANK2
  1413  000200                     __pbssBANK2:
  1414                           	opt stack 0
  1415  000200                     _BaudRateGen:
  1416                           	opt stack 0
  1417  000200                     	ds	4
  1418  000204                     _USB1msTickCount:
  1419                           	opt stack 0
  1420  000204                     	ds	4
  1421  000208                     Terminal@FormatOption:
  1422                           	opt stack 0
  1423  000208                     	ds	1
  1424  000209                     Terminal@SlaveAddr:
  1425                           	opt stack 0
  1426  000209                     	ds	1
  1427  00020A                     Terminal@PackageLen:
  1428                           	opt stack 0
  1429  00020A                     	ds	1
  1430  00020B                     Terminal@TermState:
  1431                           	opt stack 0
  1432  00020B                     	ds	1
  1433  00020C                     _Led2Blink:
  1434                           	opt stack 0
  1435  00020C                     	ds	9
  1436  000215                     _dummy_encapsulated_cmd_response:
  1437                           	opt stack 0
  1438  000215                     	ds	8
  1439  00021D                     _Led3Pulse:
  1440                           	opt stack 0
  1441  00021D                     	ds	6
  1442  000223                     _Led2Pulse:
  1443                           	opt stack 0
  1444  000223                     	ds	6
  1445  000229                     _Led1Pulse:
  1446                           	opt stack 0
  1447  000229                     	ds	6
  1448  00022F                     Terminal@Addr:
  1449                           	opt stack 0
  1450  00022F                     	ds	4
  1451  000233                     Terminal@Len:
  1452                           	opt stack 0
  1453  000233                     	ds	4
  1454                           tblptru	equ	0xFF8
  1455                           tblptrh	equ	0xFF7
  1456                           tblptrl	equ	0xFF6
  1457                           tablat	equ	0xFF5
  1458                           postinc0	equ	0xFEE
  1459                           wreg	equ	0xFE8
  1460                           postdec1	equ	0xFE5
  1461                           fsr1h	equ	0xFE2
  1462                           fsr1l	equ	0xFE1
  1463                           
  1464                           	psect	dataBANK2
  1465  000269                     __pdataBANK2:
  1466                           	opt stack 0
  1467  000269                     Terminal@EchoOption:
  1468                           	opt stack 0
  1469  000269                     	ds	1
  1470                           tblptru	equ	0xFF8
  1471                           tblptrh	equ	0xFF7
  1472                           tblptrl	equ	0xFF6
  1473                           tablat	equ	0xFF5
  1474                           postinc0	equ	0xFEE
  1475                           wreg	equ	0xFE8
  1476                           postdec1	equ	0xFE5
  1477                           fsr1h	equ	0xFE2
  1478                           fsr1l	equ	0xFE1
  1479                           
  1480                           	psect	bssBANK3
  1481  000300                     __pbssBANK3:
  1482                           	opt stack 0
  1483  000300                     	ds	10
  1484  00030A                     _cdc_notice:
  1485                           	opt stack 0
  1486  00030A                     	ds	10
  1487  000314                     _Rtcm_SystemDate:
  1488                           	opt stack 0
  1489  000314                     	ds	8
  1490  00031C                     _Rtcm_RtccAlarm:
  1491                           	opt stack 0
  1492  00031C                     	ds	6
  1493  000322                     _cdc_data_rx:
  1494                           	opt stack 0
  1495  000322                     	ds	64
  1496  000362                     Term_MainSm@Data:
  1497                           	opt stack 0
  1498  000362                     	ds	50
  1499  000394                     I2cSlv_QueryI2cData@TimeoutTimer:
  1500                           	opt stack 0
  1501  000394                     	ds	11
  1502  00039F                     I2cSlv_QueryI2cData@QueryTimer:
  1503                           	opt stack 0
  1504  00039F                     	ds	11
  1505  0003AA                     _Led3Blink:
  1506                           	opt stack 0
  1507  0003AA                     	ds	9
  1508  0003B3                     _Led1Blink:
  1509                           	opt stack 0
  1510  0003B3                     	ds	9
  1511                           tblptru	equ	0xFF8
  1512                           tblptrh	equ	0xFF7
  1513                           tblptrl	equ	0xFF6
  1514                           tablat	equ	0xFF5
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           postdec1	equ	0xFE5
  1518                           fsr1h	equ	0xFE2
  1519                           fsr1l	equ	0xFE1
  1520                           
  1521                           	psect	dataBANK3
  1522  0003BC                     __pdataBANK3:
  1523                           	opt stack 0
  1524  0003BC                     _TaskTable:
  1525                           	opt stack 0
  1526  0003BC                     	ds	56
  1527  0003F4                     Term_MainSm@TermDelay:
  1528                           	opt stack 0
  1529  0003F4                     	ds	11
  1530                           tblptru	equ	0xFF8
  1531                           tblptrh	equ	0xFF7
  1532                           tblptrl	equ	0xFF6
  1533                           tablat	equ	0xFF5
  1534                           postinc0	equ	0xFEE
  1535                           wreg	equ	0xFE8
  1536                           postdec1	equ	0xFE5
  1537                           fsr1h	equ	0xFE2
  1538                           fsr1l	equ	0xFE1
  1539                           
  1540                           	psect	bssBANK4
  1541  000440                     __pbssBANK4:
  1542                           	opt stack 0
  1543  000440                     Terminal@Payload:
  1544                           	opt stack 0
  1545  000440                     	ds	80
  1546  000490                     Terminal@TermRxBuffer:
  1547                           	opt stack 0
  1548  000490                     	ds	50
  1549                           tblptru	equ	0xFF8
  1550                           tblptrh	equ	0xFF7
  1551                           tblptrl	equ	0xFF6
  1552                           tablat	equ	0xFF5
  1553                           postinc0	equ	0xFEE
  1554                           wreg	equ	0xFE8
  1555                           postdec1	equ	0xFE5
  1556                           fsr1h	equ	0xFE2
  1557                           fsr1l	equ	0xFE1
  1558                           
  1559                           	psect	bssBANK5
  1560  000500                     __pbssBANK5:
  1561                           	opt stack 0
  1562  000500                     _OsAlarms:
  1563                           	opt stack 0
  1564  000500                     	ds	220
  1565                           tblptru	equ	0xFF8
  1566                           tblptrh	equ	0xFF7
  1567                           tblptrl	equ	0xFF6
  1568                           tablat	equ	0xFF5
  1569                           postinc0	equ	0xFEE
  1570                           wreg	equ	0xFE8
  1571                           postdec1	equ	0xFE5
  1572                           fsr1h	equ	0xFE2
  1573                           fsr1l	equ	0xFE1
  1574                           
  1575                           	psect	bssBANK6
  1576  000600                     __pbssBANK6:
  1577                           	opt stack 0
  1578  000600                     _cdc_data_tx:
  1579                           	opt stack 0
  1580  000600                     	ds	64
  1581                           tblptru	equ	0xFF8
  1582                           tblptrh	equ	0xFF7
  1583                           tblptrl	equ	0xFF6
  1584                           tablat	equ	0xFF5
  1585                           postinc0	equ	0xFEE
  1586                           wreg	equ	0xFE8
  1587                           postdec1	equ	0xFE5
  1588                           fsr1h	equ	0xFE2
  1589                           fsr1l	equ	0xFE1
  1590                           
  1591                           	psect	bssBIGRAMl
  1592  0007C8                     __pbssBIGRAMl:
  1593                           	opt stack 0
  1594  0007C8                     _RxBuffer:
  1595                           	opt stack 0
  1596  0007C8                     	ds	400
  1597                           tblptru	equ	0xFF8
  1598                           tblptrh	equ	0xFF7
  1599                           tblptrl	equ	0xFF6
  1600                           tablat	equ	0xFF5
  1601                           postinc0	equ	0xFEE
  1602                           wreg	equ	0xFE8
  1603                           postdec1	equ	0xFE5
  1604                           fsr1h	equ	0xFE2
  1605                           fsr1l	equ	0xFE1
  1606                           
  1607                           	psect	cstackBANK7
  1608  000700                     __pcstackBANK7:
  1609                           	opt stack 0
  1610  000700                     Terminal@UsbRxBuffer:
  1611                           	opt stack 0
  1612                           
  1613                           ; 200 bytes @ 0x0
  1614  000700                     	ds	200
  1615                           tblptru	equ	0xFF8
  1616                           tblptrh	equ	0xFF7
  1617                           tblptrl	equ	0xFF6
  1618                           tablat	equ	0xFF5
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           postdec1	equ	0xFE5
  1622                           fsr1h	equ	0xFE2
  1623                           fsr1l	equ	0xFE1
  1624                           
  1625                           	psect	cstackBANK2
  1626  000237                     __pcstackBANK2:
  1627                           	opt stack 0
  1628  000237                     Terminal@TermTxBuffer:
  1629                           	opt stack 0
  1630                           
  1631                           ; 50 bytes @ 0x0
  1632  000237                     	ds	50
  1633                           tblptru	equ	0xFF8
  1634                           tblptrh	equ	0xFF7
  1635                           tblptrl	equ	0xFF6
  1636                           tablat	equ	0xFF5
  1637                           postinc0	equ	0xFEE
  1638                           wreg	equ	0xFE8
  1639                           postdec1	equ	0xFE5
  1640                           fsr1h	equ	0xFE2
  1641                           fsr1l	equ	0xFE1
  1642                           
  1643                           	psect	cstackBANK1
  1644  000100                     __pcstackBANK1:
  1645                           	opt stack 0
  1646  000100                     Terminal@UsbTxBuffer:
  1647                           	opt stack 0
  1648                           
  1649                           ; 200 bytes @ 0x0
  1650  000100                     	ds	200
  1651                           tblptru	equ	0xFF8
  1652                           tblptrh	equ	0xFF7
  1653                           tblptrl	equ	0xFF6
  1654                           tablat	equ	0xFF5
  1655                           postinc0	equ	0xFEE
  1656                           wreg	equ	0xFE8
  1657                           postdec1	equ	0xFE5
  1658                           fsr1h	equ	0xFE2
  1659                           fsr1l	equ	0xFE1
  1660                           
  1661                           	psect	cstackBANK0
  1662  000060                     __pcstackBANK0:
  1663                           	opt stack 0
  1664  000060                     ??_LowPriorityIsr:
  1665                           
  1666                           ; 1 bytes @ 0x0
  1667  000060                     	ds	21
  1668  000075                     ??_isdigit:
  1669  000075                     ??_isspace:
  1670  000075                     ??_isupper:
  1671  000075                     ??_Rtcc_GetRtccValue:
  1672  000075                     ??_USBStdGetDscHandler:
  1673  000075                     ??_USBStdGetStatusHandler:
  1674  000075                     ?_USBTransferOnePacket:
  1675                           	opt stack 0
  1676  000075                     ?_strlen:
  1677                           	opt stack 0
  1678  000075                     ?_sprintf:
  1679                           	opt stack 0
  1680  000075                     ?___wmul:
  1681                           	opt stack 0
  1682  000075                     ?___awdiv:
  1683                           	opt stack 0
  1684  000075                     ?___awmod:
  1685                           	opt stack 0
  1686  000075                     ?___lwdiv:
  1687                           	opt stack 0
  1688  000075                     ?___lwmod:
  1689                           	opt stack 0
  1690  000075                     ?_GetOsTickCounter:
  1691                           	opt stack 0
  1692  000075                     ?___lmul:
  1693                           	opt stack 0
  1694  000075                     ?___lldiv:
  1695                           	opt stack 0
  1696  000075                     Irq_InitIntController@GlobalInt_HighPInt:
  1697                           	opt stack 0
  1698  000075                     SetAckStatus@AckSts:
  1699                           	opt stack 0
  1700  000075                     WriteByte@Byte:
  1701                           	opt stack 0
  1702  000075                     ReadByte@Byte:
  1703                           	opt stack 0
  1704  000075                     Mcu_SetWdgSts@WdgSts:
  1705                           	opt stack 0
  1706  000075                     RtccIrqInit@Priority:
  1707                           	opt stack 0
  1708  000075                     Rtcc_SetRtcStatus@Status:
  1709                           	opt stack 0
  1710  000075                     TmrBInit@Prescaler:
  1711                           	opt stack 0
  1712  000075                     Tmr_TmrBIrqSet@Priority:
  1713                           	opt stack 0
  1714  000075                     Tmr_StartTmr@TmrNumb:
  1715                           	opt stack 0
  1716  000075                     USBTransferOnePacket@dir:
  1717                           	opt stack 0
  1718  000075                     USBConfigureEndpoint@direction:
  1719                           	opt stack 0
  1720  000075                     USBCtrlTrfTxService@byteToSend:
  1721                           	opt stack 0
  1722  000075                     USBCtrlTrfRxService@i:
  1723                           	opt stack 0
  1724  000075                     Led_SetLedStatus@LedSts:
  1725                           	opt stack 0
  1726  000075                     toupper@c:
  1727                           	opt stack 0
  1728  000075                     tolower@c:
  1729                           	opt stack 0
  1730  000075                     Mcu_StartSystemPll@PllStartupCounter:
  1731                           	opt stack 0
  1732  000075                     Rtcc_AlarmConfig@AlarmConfig:
  1733                           	opt stack 0
  1734  000075                     Tmr_RegisterTmr2IsrCallback@IsrCallback:
  1735                           	opt stack 0
  1736  000075                     GenerateEvt@Event:
  1737                           	opt stack 0
  1738  000075                     ReceiveEvt@Event:
  1739                           	opt stack 0
  1740  000075                     Led_SetLedBlinkTime@OnTimeMs:
  1741                           	opt stack 0
  1742  000075                     sprintf@sp:
  1743                           	opt stack 0
  1744  000075                     ___wmul@multiplier:
  1745                           	opt stack 0
  1746  000075                     ___awdiv@dividend:
  1747                           	opt stack 0
  1748  000075                     ___awmod@dividend:
  1749                           	opt stack 0
  1750  000075                     ___lwdiv@dividend:
  1751                           	opt stack 0
  1752  000075                     ___lwmod@dividend:
  1753                           	opt stack 0
  1754  000075                     memcpy@d1:
  1755                           	opt stack 0
  1756  000075                     memset@p1:
  1757                           	opt stack 0
  1758  000075                     strcat@to:
  1759                           	opt stack 0
  1760  000075                     strcpy@to:
  1761                           	opt stack 0
  1762  000075                     strlen@s:
  1763                           	opt stack 0
  1764  000075                     ___lmul@multiplier:
  1765                           	opt stack 0
  1766  000075                     ___lldiv@dividend:
  1767                           	opt stack 0
  1768                           
  1769                           ; 4 bytes @ 0x15
  1770  000075                     	ds	1
  1771  000076                     ??_USBConfigureEndpoint:
  1772  000076                     Irq_InitIntController@PerInt_LowPInt:
  1773                           	opt stack 0
  1774  000076                     Rtcc_GetRtccValue@RtccPtrVal:
  1775                           	opt stack 0
  1776  000076                     TmrBInit@Postscaler:
  1777                           	opt stack 0
  1778  000076                     Tmr_TmrBIrqSet@TmrIrqSts:
  1779                           	opt stack 0
  1780  000076                     USBCtrlTrfRxService@byteToRead:
  1781                           	opt stack 0
  1782  000076                     USBCtrlTrfInHandler@lastDTS:
  1783                           	opt stack 0
  1784  000076                     Led_SetLedStatus@Led:
  1785                           	opt stack 0
  1786  000076                     _isdigit$5418:
  1787                           	opt stack 0
  1788  000076                     _isspace$5687:
  1789                           	opt stack 0
  1790  000076                     _isupper$5690:
  1791                           	opt stack 0
  1792  000076                     I2c_WriteData@WritePacket:
  1793                           	opt stack 0
  1794  000076                     Rtcc_RtcConfig@RtcConfig:
  1795                           	opt stack 0
  1796  000076                     USBTransferOnePacket@data:
  1797                           	opt stack 0
  1798  000076                     USBStdGetStatusHandler@p:
  1799                           	opt stack 0
  1800                           
  1801                           ; 2 bytes @ 0x16
  1802  000076                     	ds	1
  1803  000077                     ??_strlen:
  1804  000077                     ??_Rtcc_AlarmConfig:
  1805  000077                     ??_TmrBInit:
  1806  000077                     Irq_InitIntController@IntPriorityEn:
  1807                           	opt stack 0
  1808  000077                     Rtcc_GetRtccValue@RetValue:
  1809                           	opt stack 0
  1810  000077                     Tmr_TmrBIrqSet@TmrNumb:
  1811                           	opt stack 0
  1812  000077                     GenerateEvt@EventStatus:
  1813                           	opt stack 0
  1814  000077                     isdigit@c:
  1815                           	opt stack 0
  1816  000077                     isspace@c:
  1817                           	opt stack 0
  1818  000077                     isupper@c:
  1819                           	opt stack 0
  1820  000077                     Led_SetLedBlinkTime@OffTimeMs:
  1821                           	opt stack 0
  1822  000077                     sprintf@f:
  1823                           	opt stack 0
  1824  000077                     ___wmul@multiplicand:
  1825                           	opt stack 0
  1826  000077                     ___awdiv@divisor:
  1827                           	opt stack 0
  1828  000077                     ___awmod@divisor:
  1829                           	opt stack 0
  1830  000077                     ___lwdiv@divisor:
  1831                           	opt stack 0
  1832  000077                     ___lwmod@divisor:
  1833                           	opt stack 0
  1834  000077                     memcpy@s1:
  1835                           	opt stack 0
  1836  000077                     memset@c:
  1837                           	opt stack 0
  1838  000077                     strcat@from:
  1839                           	opt stack 0
  1840  000077                     strcpy@from:
  1841                           	opt stack 0
  1842                           
  1843                           ; 2 bytes @ 0x17
  1844  000077                     	ds	1
  1845  000078                     ??_isalpha:
  1846  000078                     ??_isxdigit:
  1847  000078                     ??_I2c_WriteData:
  1848  000078                     ??_Rtcc_RtcConfig:
  1849  000078                     Rtcc_GetRtccValue@RegValue:
  1850                           	opt stack 0
  1851  000078                     TmrBInit@TmrNumb:
  1852                           	opt stack 0
  1853  000078                     ReceiveEvt@EventStatus:
  1854                           	opt stack 0
  1855  000078                     USBTransferOnePacket@len:
  1856                           	opt stack 0
  1857  000078                     I2c_ReadData@ReadPacket:
  1858                           	opt stack 0
  1859  000078                     I2cSlv_SendI2cMsg@TxBuffer:
  1860                           	opt stack 0
  1861  000078                     I2cSlv_ReceiveI2cMsg@RxBuffer:
  1862                           	opt stack 0
  1863                           
  1864                           ; 2 bytes @ 0x18
  1865  000078                     	ds	1
  1866  000079                     ?_GetElapsedTime:
  1867                           	opt stack 0
  1868  000079                     ?_Rtcm_GetRtccDate:
  1869                           	opt stack 0
  1870  000079                     I2cSlv_I2cReadMsgSts@Result:
  1871                           	opt stack 0
  1872  000079                     USBTransferOnePacket@ep:
  1873                           	opt stack 0
  1874  000079                     Led_SetLedBlinkTime@Led:
  1875                           	opt stack 0
  1876  000079                     ___awdiv@counter:
  1877                           	opt stack 0
  1878  000079                     ___awmod@counter:
  1879                           	opt stack 0
  1880  000079                     ___lwdiv@counter:
  1881                           	opt stack 0
  1882  000079                     ___lwmod@counter:
  1883                           	opt stack 0
  1884  000079                     _isalpha$5684:
  1885                           	opt stack 0
  1886  000079                     _isxdigit$5694:
  1887                           	opt stack 0
  1888  000079                     OsTmr_StartTimer@Timer:
  1889                           	opt stack 0
  1890  000079                     ___wmul@product:
  1891                           	opt stack 0
  1892  000079                     memcpy@n:
  1893                           	opt stack 0
  1894  000079                     memset@n:
  1895                           	opt stack 0
  1896  000079                     strcat@cp:
  1897                           	opt stack 0
  1898  000079                     strcpy@cp:
  1899                           	opt stack 0
  1900  000079                     strlen@cp:
  1901                           	opt stack 0
  1902  000079                     GetElapsedTime@StartTime:
  1903                           	opt stack 0
  1904  000079                     ___lmul@multiplicand:
  1905                           	opt stack 0
  1906  000079                     ___lldiv@divisor:
  1907                           	opt stack 0
  1908                           
  1909                           ; 4 bytes @ 0x19
  1910  000079                     	ds	1
  1911  00007A                     ??_I2c_ReadData:
  1912  00007A                     I2cSlv_SendI2cMsg@SlaveAddr:
  1913                           	opt stack 0
  1914  00007A                     I2cSlv_ReceiveI2cMsg@SlaveAddr:
  1915                           	opt stack 0
  1916  00007A                     USBConfigureEndpoint@EPNum:
  1917                           	opt stack 0
  1918  00007A                     ___awdiv@sign:
  1919                           	opt stack 0
  1920  00007A                     ___awmod@sign:
  1921                           	opt stack 0
  1922  00007A                     isalpha@c:
  1923                           	opt stack 0
  1924  00007A                     isxdigit@c:
  1925                           	opt stack 0
  1926  00007A                     USBTransferOnePacket@handle:
  1927                           	opt stack 0
  1928  00007A                     ___lwdiv@quotient:
  1929                           	opt stack 0
  1930                           
  1931                           ; 2 bytes @ 0x1A
  1932  00007A                     	ds	1
  1933  00007B                     ?_atoi:
  1934                           	opt stack 0
  1935  00007B                     ?_xtoi:
  1936                           	opt stack 0
  1937  00007B                     I2cSlv_SendI2cMsg@DataLenght:
  1938                           	opt stack 0
  1939  00007B                     I2cSlv_ReceiveI2cMsg@DataLenght:
  1940                           	opt stack 0
  1941  00007B                     sprintf@flag:
  1942                           	opt stack 0
  1943  00007B                     OsAlrm_SetOsAlarm@OsAlarmId:
  1944                           	opt stack 0
  1945  00007B                     USBConfigureEndpoint@handle:
  1946                           	opt stack 0
  1947  00007B                     putUSBUSART@data:
  1948                           	opt stack 0
  1949  00007B                     atoi@s:
  1950                           	opt stack 0
  1951  00007B                     ___awdiv@quotient:
  1952                           	opt stack 0
  1953  00007B                     memcpy@d:
  1954                           	opt stack 0
  1955  00007B                     memset@p:
  1956                           	opt stack 0
  1957  00007B                     xtoi@s:
  1958                           	opt stack 0
  1959  00007B                     OsTmr_StartTimer@Timeout:
  1960                           	opt stack 0
  1961                           
  1962                           ; 4 bytes @ 0x1B
  1963  00007B                     	ds	1
  1964  00007C                     I2cSlv_SendI2cMsg@TxSts:
  1965                           	opt stack 0
  1966  00007C                     I2cSlv_ReceiveI2cMsg@RxSts:
  1967                           	opt stack 0
  1968  00007C                     CDCTxService@i:
  1969                           	opt stack 0
  1970  00007C                     getsUSBUSART@buffer:
  1971                           	opt stack 0
  1972  00007C                     LedBlinkStateMachine@LedBlink:
  1973                           	opt stack 0
  1974  00007C                     LedPulseStateMachine@LedPulse:
  1975                           	opt stack 0
  1976  00007C                     sprintf@ap:
  1977                           	opt stack 0
  1978  00007C                     utoa@buf:
  1979                           	opt stack 0
  1980                           
  1981                           ; 2 bytes @ 0x1C
  1982  00007C                     	ds	1
  1983  00007D                     ??_atoi:
  1984  00007D                     ??_xtoi:
  1985  00007D                     ??_GetElapsedTime:
  1986  00007D                     Rtcc_SetRtccValue@Value:
  1987                           	opt stack 0
  1988  00007D                     USBDeviceInit@i:
  1989                           	opt stack 0
  1990  00007D                     USBEnableEndpoint@options:
  1991                           	opt stack 0
  1992  00007D                     putUSBUSART@length:
  1993                           	opt stack 0
  1994  00007D                     CDCTxService@byte_to_send:
  1995                           	opt stack 0
  1996  00007D                     memcpy@s:
  1997                           	opt stack 0
  1998  00007D                     OsAlrm_SetOsAlarm@OsAlarmTimeout:
  1999                           	opt stack 0
  2000  00007D                     ___lmul@product:
  2001                           	opt stack 0
  2002  00007D                     ___lldiv@quotient:
  2003                           	opt stack 0
  2004                           
  2005                           ; 4 bytes @ 0x1D
  2006  00007D                     	ds	1
  2007  00007E                     ??_Rtcc_SetRtccValue:
  2008  00007E                     getsUSBUSART@len:
  2009                           	opt stack 0
  2010  00007E                     LedPulseStateMachine@Led:
  2011                           	opt stack 0
  2012  00007E                     sprintf@c:
  2013                           	opt stack 0
  2014  00007E                     USBEnableEndpoint@p:
  2015                           	opt stack 0
  2016  00007E                     utoa@val:
  2017                           	opt stack 0
  2018                           
  2019                           ; 2 bytes @ 0x1E
  2020  00007E                     	ds	1
  2021  00007F                     atoi@sign:
  2022                           	opt stack 0
  2023  00007F                     memcpy@tmp:
  2024                           	opt stack 0
  2025  00007F                     xtoi@sign:
  2026                           	opt stack 0
  2027  00007F                     sprintf@cp:
  2028                           	opt stack 0
  2029                           
  2030                           ; 2 bytes @ 0x1F
  2031  00007F                     	ds	1
  2032  000080                     Rtcc_SetRtccValue@RtccPtrVal:
  2033                           	opt stack 0
  2034  000080                     USBEnableEndpoint@ep:
  2035                           	opt stack 0
  2036  000080                     atoi@a:
  2037                           	opt stack 0
  2038  000080                     utoa@base:
  2039                           	opt stack 0
  2040  000080                     xtoi@val:
  2041                           	opt stack 0
  2042                           
  2043                           ; 2 bytes @ 0x20
  2044  000080                     	ds	1
  2045  000081                     ??_Rtcm_GetRtccDate:
  2046  000081                     ?_strtol:
  2047                           	opt stack 0
  2048  000081                     ___lldiv@counter:
  2049                           	opt stack 0
  2050  000081                     OsAlrm_SetOsAlarm@AlarmCallback:
  2051                           	opt stack 0
  2052  000081                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2053                           	opt stack 0
  2054  000081                     LedStateMachine@LedSts:
  2055                           	opt stack 0
  2056  000081                     strtol@s:
  2057                           	opt stack 0
  2058  000081                     Rtcm_SetRtccDate@Date:
  2059                           	opt stack 0
  2060                           
  2061                           ; 8 bytes @ 0x21
  2062  000081                     	ds	1
  2063  000082                     xtoi@c:
  2064                           	opt stack 0
  2065  000082                     Tmr_TmrBPrSet@IntFreqHz:
  2066                           	opt stack 0
  2067  000082                     utoa@v:
  2068                           	opt stack 0
  2069  000082                     SetBaudRate@DesiredI2cBusClockHz:
  2070                           	opt stack 0
  2071  000082                     Rtcm_GetRtccDate@LocalDate:
  2072                           	opt stack 0
  2073                           
  2074                           ; 8 bytes @ 0x22
  2075  000082                     	ds	1
  2076  000083                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2077                           	opt stack 0
  2078  000083                     LedStateMachine@LedOut:
  2079                           	opt stack 0
  2080  000083                     strtol@endptr:
  2081                           	opt stack 0
  2082                           
  2083                           ; 2 bytes @ 0x23
  2084  000083                     	ds	1
  2085  000084                     Tmr_TmrBPrSet@Prescaler:
  2086                           	opt stack 0
  2087  000084                     utoa@c:
  2088                           	opt stack 0
  2089                           
  2090                           ; 1 bytes @ 0x24
  2091  000084                     	ds	1
  2092  000085                     Tmr_TmrBPrSet@Postscaler:
  2093                           	opt stack 0
  2094  000085                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2095                           	opt stack 0
  2096  000085                     LedStateMachine@LedBlink:
  2097                           	opt stack 0
  2098  000085                     itoa@buf:
  2099                           	opt stack 0
  2100  000085                     strtol@base:
  2101                           	opt stack 0
  2102  000085                     GetElapsedTime@TimeValue:
  2103                           	opt stack 0
  2104                           
  2105                           ; 4 bytes @ 0x25
  2106  000085                     	ds	1
  2107  000086                     Tmr_TmrBPrSet@TmrBPrCfgSts:
  2108                           	opt stack 0
  2109  000086                     SetBaudRate@McuClockHz:
  2110                           	opt stack 0
  2111                           
  2112                           ; 4 bytes @ 0x26
  2113  000086                     	ds	1
  2114  000087                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2115  000087                     ??_strtol:
  2116  000087                     Tmr_TmrBPrSet@TmrNumb:
  2117                           	opt stack 0
  2118  000087                     LedStateMachine@LedPulse:
  2119                           	opt stack 0
  2120  000087                     itoa@val:
  2121                           	opt stack 0
  2122                           
  2123                           ; 2 bytes @ 0x27
  2124  000087                     	ds	1
  2125  000088                     Tmr_TmrBPrSet@Divisor:
  2126                           	opt stack 0
  2127                           
  2128                           ; 4 bytes @ 0x28
  2129  000088                     	ds	1
  2130  000089                     ??_USBStdFeatureReqHandler:
  2131  000089                     USBStdSetCfgHandler@i:
  2132                           	opt stack 0
  2133  000089                     itoa@base:
  2134                           	opt stack 0
  2135  000089                     GetElapsedTime@CurrentTimestamp:
  2136                           	opt stack 0
  2137                           
  2138                           ; 4 bytes @ 0x29
  2139  000089                     	ds	1
  2140  00008A                     ??_SetBaudRate:
  2141  00008A                     LedStateMachine@LedOutSts:
  2142                           	opt stack 0
  2143  00008A                     USBStdFeatureReqHandler@pUEP:
  2144                           	opt stack 0
  2145                           
  2146                           ; 2 bytes @ 0x2A
  2147  00008A                     	ds	1
  2148  00008B                     LedStateMachine@Led:
  2149                           	opt stack 0
  2150  00008B                     strtol@sign:
  2151                           	opt stack 0
  2152  00008B                     itoa@cp:
  2153                           	opt stack 0
  2154                           
  2155                           ; 2 bytes @ 0x2B
  2156  00008B                     	ds	1
  2157  00008C                     ??_Led_MainTask:
  2158  00008C                     USBStdFeatureReqHandler@current_ep_data:
  2159                           	opt stack 0
  2160  00008C                     Tmr_TmrBConfig@TmrBConfig:
  2161                           	opt stack 0
  2162  00008C                     strtol@a:
  2163                           	opt stack 0
  2164                           
  2165                           ; 4 bytes @ 0x2C
  2166  00008C                     	ds	1
  2167  00008D                     OsTmr_GetTimerStatus@Timer:
  2168                           	opt stack 0
  2169  00008D                     USBStdFeatureReqHandler@p:
  2170                           	opt stack 0
  2171                           
  2172                           ; 2 bytes @ 0x2D
  2173  00008D                     	ds	1
  2174  00008E                     I2c_InitI2cModule@I2cConfig:
  2175                           	opt stack 0
  2176                           
  2177                           ; 2 bytes @ 0x2E
  2178  00008E                     	ds	1
  2179  00008F                     ??_USBCtrlEPService:
  2180  00008F                     Tmr_TmrBConfig@TmrNumb:
  2181                           	opt stack 0
  2182                           
  2183                           ; 1 bytes @ 0x2F
  2184  00008F                     	ds	1
  2185  000090                     ??_I2c_InitI2cModule:
  2186  000090                     USBDeviceTasks@i:
  2187                           	opt stack 0
  2188  000090                     strtol@c:
  2189                           	opt stack 0
  2190  000090                     InitSchedTimer@TmrBConfig:
  2191                           	opt stack 0
  2192                           
  2193                           ; 7 bytes @ 0x30
  2194  000090                     	ds	1
  2195  000091                     ??_Terminal:
  2196                           
  2197                           ; 1 bytes @ 0x31
  2198  000091                     	ds	1
  2199  000092                     
  2200                           ; 1 bytes @ 0x32
  2201  000092                     	ds	1
  2202  000093                     Terminal@ReceivedBytes:
  2203                           	opt stack 0
  2204                           
  2205                           ; 1 bytes @ 0x33
  2206  000093                     	ds	1
  2207  000094                     Terminal@Index:
  2208                           	opt stack 0
  2209                           
  2210                           ; 1 bytes @ 0x34
  2211  000094                     	ds	1
  2212  000095                     Term_MainSm@FwkMajorStr:
  2213                           	opt stack 0
  2214                           
  2215                           ; 4 bytes @ 0x35
  2216  000095                     	ds	2
  2217  000097                     
  2218                           ; 1 bytes @ 0x37
  2219  000097                     	ds	2
  2220  000099                     Term_MainSm@FwkMinorStr:
  2221                           	opt stack 0
  2222                           
  2223                           ; 4 bytes @ 0x39
  2224  000099                     	ds	4
  2225  00009D                     Term_MainSm@FwkBuildStr:
  2226                           	opt stack 0
  2227                           
  2228                           ; 4 bytes @ 0x3D
  2229  00009D                     	ds	4
  2230  0000A1                     ??_InitializeTasks:
  2231  0000A1                     ??_ScheduleTasks:
  2232                           
  2233                           ; 1 bytes @ 0x41
  2234  0000A1                     	ds	2
  2235  0000A3                     InitializeTasks@ActiveTaskIndex:
  2236                           	opt stack 0
  2237                           
  2238                           ; 1 bytes @ 0x43
  2239  0000A3                     	ds	2
  2240  0000A5                     ScheduleTasks@ActiveTaskIndex:
  2241                           	opt stack 0
  2242                           
  2243                           ; 1 bytes @ 0x45
  2244  0000A5                     	ds	1
  2245  0000A6                     tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           postinc0	equ	0xFEE
  2250                           wreg	equ	0xFE8
  2251                           postdec1	equ	0xFE5
  2252                           fsr1h	equ	0xFE2
  2253                           fsr1l	equ	0xFE1
  2254                           
  2255                           ; 1 bytes @ 0x46
  2256                           
  2257                           	psect	cstackCOMRAM
  2258  000025                     __pcstackCOMRAM:
  2259                           	opt stack 0
  2260  000025                     ??_HighPriorityIsr:
  2261  000025                     
  2262                           ; 1 bytes @ 0x0
  2263  000025                     	ds	18
  2264  000037                     ?i1___wmul:
  2265                           	opt stack 0
  2266  000037                     OsAlrm_ClearOsAlarm@OsAlarmId:
  2267                           	opt stack 0
  2268  000037                     i1GenerateEvt@Event:
  2269                           	opt stack 0
  2270  000037                     i1___wmul@multiplier:
  2271                           	opt stack 0
  2272                           
  2273                           ; 2 bytes @ 0x12
  2274  000037                     	ds	2
  2275  000039                     i1GenerateEvt@EventStatus:
  2276                           	opt stack 0
  2277  000039                     i1___wmul@multiplicand:
  2278                           	opt stack 0
  2279                           
  2280                           ; 2 bytes @ 0x14
  2281  000039                     	ds	1
  2282  00003A                     i1I2cSlv_SendI2cMsg@TxBuffer:
  2283                           	opt stack 0
  2284                           
  2285                           ; 2 bytes @ 0x15
  2286  00003A                     	ds	1
  2287  00003B                     i1___wmul@product:
  2288                           	opt stack 0
  2289                           
  2290                           ; 2 bytes @ 0x16
  2291  00003B                     	ds	1
  2292  00003C                     i1I2cSlv_SendI2cMsg@SlaveAddr:
  2293                           	opt stack 0
  2294                           
  2295                           ; 1 bytes @ 0x17
  2296  00003C                     	ds	1
  2297  00003D                     i1I2cSlv_SendI2cMsg@DataLenght:
  2298                           	opt stack 0
  2299                           
  2300                           ; 1 bytes @ 0x18
  2301  00003D                     	ds	1
  2302  00003E                     i1I2cSlv_SendI2cMsg@TxSts:
  2303                           	opt stack 0
  2304                           
  2305                           ; 1 bytes @ 0x19
  2306  00003E                     	ds	1
  2307  00003F                     
  2308                           ; 1 bytes @ 0x1A
  2309  00003F                     	ds	8
  2310  000047                     OsAlrm_ProcessOsAlarms@AlarmIndex:
  2311                           	opt stack 0
  2312                           
  2313                           ; 2 bytes @ 0x22
  2314  000047                     	ds	2
  2315  000049                     tblptru	equ	0xFF8
  2316                           tblptrh	equ	0xFF7
  2317                           tblptrl	equ	0xFF6
  2318                           tablat	equ	0xFF5
  2319                           postinc0	equ	0xFEE
  2320                           wreg	equ	0xFE8
  2321                           postdec1	equ	0xFE5
  2322                           fsr1h	equ	0xFE2
  2323                           fsr1l	equ	0xFE1
  2324                           
  2325                           ; 1 bytes @ 0x24
  2326 ;;
  2327 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2328 ;;
  2329 ;; *************** function _main *****************
  2330 ;; Defined at:
  2331 ;;		line 58 in file "../../../MercuryFwk/Source/c/00_Main/main.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  2   14[None  ] short 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2349 ;;Total ram usage:        0 bytes
  2350 ;; Hardware stack levels required when called:   21
  2351 ;; This function calls:
  2352 ;;		_Sch_MainScheduler
  2353 ;;		_SystemInit
  2354 ;; This function is called by:
  2355 ;;		Startup code after reset
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text0
  2360  004318                     __ptext0:
  2361                           	opt stack 0
  2362  004318                     _main:
  2363                           	opt stack 10
  2364                           
  2365                           ;main.c: 61: SystemInit();
  2366                           
  2367                           ;incstack = 0
  2368  004318  EC15  F01F         	call	_SystemInit	;wreg free
  2369                           
  2370                           ;main.c: 64: Sch_MainScheduler();
  2371  00431C  ECD7  F020         	call	_Sch_MainScheduler	;wreg free
  2372                           
  2373                           ;main.c: 67: return 0;
  2374                           ;	Return value of _main is never used
  2375  004320  EF66  F000         	goto	start
  2376  004324                     __end_of_main:
  2377                           	opt stack 0
  2378                           tblptru	equ	0xFF8
  2379                           tblptrh	equ	0xFF7
  2380                           tblptrl	equ	0xFF6
  2381                           tablat	equ	0xFF5
  2382                           postinc0	equ	0xFEE
  2383                           wreg	equ	0xFE8
  2384                           postdec1	equ	0xFE5
  2385                           fsr1h	equ	0xFE2
  2386                           fsr1l	equ	0xFE1
  2387                           
  2388 ;; *************** function _SystemInit *****************
  2389 ;; Defined at:
  2390 ;;		line 121 in file "../../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;		None
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2408 ;;Total ram usage:        0 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:   13
  2411 ;; This function calls:
  2412 ;;		_InitSchedTimer
  2413 ;;		_Irq_InitIntController
  2414 ;;		_Mcu_ConfigExtInt
  2415 ;;		_Mcu_StartSystemPll
  2416 ;;		_Pm_DsReleasePinControl
  2417 ;;		_Tmr_RegisterTmr2IsrCallback
  2418 ;; This function is called by:
  2419 ;;		_main
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           	psect	text1
  2424  003E2A                     __ptext1:
  2425                           	opt stack 0
  2426  003E2A                     _SystemInit:
  2427                           	opt stack 17
  2428                           
  2429                           ;sys_init.c: 124: Pm_DsReleasePinControl();
  2430                           
  2431                           ;incstack = 0
  2432  003E2A  ECAB  F021         	call	_Pm_DsReleasePinControl	;wreg free
  2433                           
  2434                           ;sys_init.c: 126: Mcu_StartSystemPll();
  2435  003E2E  ECAA  F020         	call	_Mcu_StartSystemPll	;wreg free
  2436                           
  2437                           ;sys_init.c: 128: Irq_InitIntController(IntPriorityMode,1u,1u);
  2438  003E32  0E01               	movlw	1
  2439  003E34  0100               	movlb	0	; () banked
  2440  003E36  6F75               	movwf	Irq_InitIntController@GlobalInt_HighPInt& (0+255),b
  2441  003E38  0E01               	movlw	1
  2442  003E3A  6F76               	movwf	Irq_InitIntController@PerInt_LowPInt& (0+255),b
  2443  003E3C  0E01               	movlw	1
  2444  003E3E  ECD1  F01F         	call	_Irq_InitIntController
  2445                           
  2446                           ;sys_init.c: 130: Tmr_RegisterTmr2IsrCallback(&Sch_SchmIntService);
  2447  003E42  0E0A               	movlw	low _Sch_SchmIntService
  2448  003E44  0100               	movlb	0	; () banked
  2449  003E46  6F75               	movwf	Tmr_RegisterTmr2IsrCallback@IsrCallback& (0+255),b
  2450  003E48  0E43               	movlw	high _Sch_SchmIntService
  2451  003E4A  6F76               	movwf	(Tmr_RegisterTmr2IsrCallback@IsrCallback+1)& (0+255),b
  2452  003E4C  EC92  F021         	call	_Tmr_RegisterTmr2IsrCallback	;wreg free
  2453                           
  2454                           ;sys_init.c: 132: InitSchedTimer();
  2455  003E50  EC8D  F01F         	call	_InitSchedTimer	;wreg free
  2456                           
  2457                           ;sys_init.c: 134: Mcu_ConfigExtInt();
  2458  003E54  ECE5  F020         	call	_Mcu_ConfigExtInt	;wreg free
  2459  003E58  0012               	return		;funcret
  2460  003E5A                     __end_of_SystemInit:
  2461                           	opt stack 0
  2462                           tblptru	equ	0xFF8
  2463                           tblptrh	equ	0xFF7
  2464                           tblptrl	equ	0xFF6
  2465                           tablat	equ	0xFF5
  2466                           postinc0	equ	0xFEE
  2467                           wreg	equ	0xFE8
  2468                           postdec1	equ	0xFE5
  2469                           fsr1h	equ	0xFE2
  2470                           fsr1l	equ	0xFE1
  2471                           
  2472 ;; *************** function _Tmr_RegisterTmr2IsrCallback *****************
  2473 ;; Defined at:
  2474 ;;		line 329 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;  IsrCallback     2   21[BANK0 ] PTR FTN()void 
  2477 ;;		 -> Sch_SchmIntService(1), 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2489 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2492 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2493 ;;Total ram usage:        2 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; Hardware stack levels required when called:    9
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		_SystemInit
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text2
  2504  004324                     __ptext2:
  2505                           	opt stack 0
  2506  004324                     _Tmr_RegisterTmr2IsrCallback:
  2507                           	opt stack 20
  2508                           
  2509                           ;tmr_drv.c: 332: Tmr2IsrCallback = IsrCallback;
  2510                           
  2511                           ;incstack = 0
  2512  004324  C075  F01B         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback,_Tmr2IsrCallback
  2513  004328  C076  F01C         	movff	Tmr_RegisterTmr2IsrCallback@IsrCallback+1,_Tmr2IsrCallback+1
  2514  00432C  0012               	return		;funcret
  2515  00432E                     __end_of_Tmr_RegisterTmr2IsrCallback:
  2516                           	opt stack 0
  2517                           tblptru	equ	0xFF8
  2518                           tblptrh	equ	0xFF7
  2519                           tblptrl	equ	0xFF6
  2520                           tablat	equ	0xFF5
  2521                           postinc0	equ	0xFEE
  2522                           wreg	equ	0xFE8
  2523                           postdec1	equ	0xFE5
  2524                           fsr1h	equ	0xFE2
  2525                           fsr1l	equ	0xFE1
  2526                           
  2527 ;; *************** function _Pm_DsReleasePinControl *****************
  2528 ;; Defined at:
  2529 ;;		line 166 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/pm_drv.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		None
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2547 ;;Total ram usage:        0 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; Hardware stack levels required when called:    9
  2550 ;; This function calls:
  2551 ;;		Nothing
  2552 ;; This function is called by:
  2553 ;;		_SystemInit
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text3
  2558  004356                     __ptext3:
  2559                           	opt stack 0
  2560  004356                     _Pm_DsReleasePinControl:
  2561                           	opt stack 20
  2562                           
  2563                           ;pm_drv.c: 169: DSCONLbits.RELEASE = 0u;
  2564                           
  2565                           ;incstack = 0
  2566  004356  010F               	movlb	15	; () banked
  2567  004358  914C               	bcf	76,0,b	;volatile
  2568                           
  2569                           ; BSR set to: 15
  2570  00435A  0012               	return		;funcret
  2571  00435C                     __end_of_Pm_DsReleasePinControl:
  2572                           	opt stack 0
  2573                           tblptru	equ	0xFF8
  2574                           tblptrh	equ	0xFF7
  2575                           tblptrl	equ	0xFF6
  2576                           tablat	equ	0xFF5
  2577                           postinc0	equ	0xFEE
  2578                           wreg	equ	0xFE8
  2579                           postdec1	equ	0xFE5
  2580                           fsr1h	equ	0xFE2
  2581                           fsr1l	equ	0xFE1
  2582                           
  2583 ;; *************** function _Mcu_StartSystemPll *****************
  2584 ;; Defined at:
  2585 ;;		line 81 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  PllStartupCo    2   21[BANK0 ] volatile unsigned short 
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2600 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2602 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2603 ;;Total ram usage:        2 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    9
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_SystemInit
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           	psect	text4
  2614  004154                     __ptext4:
  2615                           	opt stack 0
  2616  004154                     _Mcu_StartSystemPll:
  2617                           	opt stack 20
  2618                           
  2619                           ;mcu_drv.c: 83: volatile UINT16 PllStartupCounter = ((UINT16)(1000));
  2620                           
  2621                           ; BSR set to: 15
  2622                           ;incstack = 0
  2623  004154  0E03               	movlw	3
  2624  004156  0100               	movlb	0	; () banked
  2625  004158  6F76               	movwf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),b	;volatile
  2626  00415A  0EE8               	movlw	232
  2627  00415C  6F75               	movwf	Mcu_StartSystemPll@PllStartupCounter& (0+255),b	;volatile
  2628                           
  2629                           ; BSR set to: 0
  2630                           ;mcu_drv.c: 86: OSCTUNEbits.PLLEN = ((UINT8)(1));
  2631  00415E  8C9B               	bsf	3995,6,c	;volatile
  2632  004160                     l8363:
  2633                           
  2634                           ; BSR set to: 0
  2635  004160  0775               	decf	Mcu_StartSystemPll@PllStartupCounter& (0+255),f,b	;volatile
  2636  004162  A0D8               	btfss	status,0,c
  2637  004164  0776               	decf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),f,b	;volatile
  2638  004166  2975               	incf	Mcu_StartSystemPll@PllStartupCounter& (0+255),w,b	;volatile
  2639  004168  E1FB               	bnz	l8363
  2640  00416A  2976               	incf	(Mcu_StartSystemPll@PllStartupCounter+1)& (0+255),w,b	;volatile
  2641  00416C  B4D8               	btfsc	status,2,c
  2642  00416E  0012               	return	
  2643  004170  D7F7               	goto	l237
  2644  004172                     __end_of_Mcu_StartSystemPll:
  2645                           	opt stack 0
  2646                           tblptru	equ	0xFF8
  2647                           tblptrh	equ	0xFF7
  2648                           tblptrl	equ	0xFF6
  2649                           tablat	equ	0xFF5
  2650                           postinc0	equ	0xFEE
  2651                           wreg	equ	0xFE8
  2652                           postdec1	equ	0xFE5
  2653                           fsr1h	equ	0xFE2
  2654                           fsr1l	equ	0xFE1
  2655                           status	equ	0xFD8
  2656                           
  2657 ;; *************** function _Mcu_ConfigExtInt *****************
  2658 ;; Defined at:
  2659 ;;		line 99 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;		None
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;		None
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2677 ;;Total ram usage:        0 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    9
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_SystemInit
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text5
  2688  0041CA                     __ptext5:
  2689                           	opt stack 0
  2690  0041CA                     _Mcu_ConfigExtInt:
  2691                           	opt stack 20
  2692                           
  2693                           ;mcu_drv.c: 102: TRISBbits.TRISB0 = ((UINT8)(1));
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;incstack = 0
  2697  0041CA  8093               	bsf	3987,0,c	;volatile
  2698                           
  2699                           ;mcu_drv.c: 103: TRISDbits.TRISD3 = ((UINT8)(1));
  2700  0041CC  8695               	bsf	3989,3,c	;volatile
  2701                           
  2702                           ;mcu_drv.c: 106: ANCON1bits.PCFG12 = 1u;
  2703  0041CE  010F               	movlb	15	; () banked
  2704  0041D0  8949               	bsf	73,4,b	;volatile
  2705                           
  2706                           ; BSR set to: 15
  2707                           ;mcu_drv.c: 108: RPINR1 = 20;
  2708  0041D2  0E14               	movlw	20
  2709  0041D4  010E               	movlb	14	; () banked
  2710  0041D6  6FE7               	movwf	231,b	;volatile
  2711                           
  2712                           ; BSR set to: 14
  2713                           ;mcu_drv.c: 111: INTCONbits.INT0IE = 1u;
  2714  0041D8  88F2               	bsf	intcon,4,c	;volatile
  2715                           
  2716                           ; BSR set to: 14
  2717                           ;mcu_drv.c: 112: INTCON3bits.INT1IE = 1u;
  2718  0041DA  86F0               	bsf	intcon3,3,c	;volatile
  2719                           
  2720                           ; BSR set to: 14
  2721                           ;mcu_drv.c: 113: INTCON3bits.INT1IP = 1u;
  2722  0041DC  8CF0               	bsf	intcon3,6,c	;volatile
  2723                           
  2724                           ; BSR set to: 14
  2725                           ;mcu_drv.c: 114: INTCON2bits.INTEDG0 = 0u;
  2726  0041DE  9CF1               	bcf	intcon2,6,c	;volatile
  2727                           
  2728                           ; BSR set to: 14
  2729                           ;mcu_drv.c: 115: INTCON2bits.INTEDG1 = 0u;
  2730  0041E0  9AF1               	bcf	intcon2,5,c	;volatile
  2731                           
  2732                           ; BSR set to: 14
  2733  0041E2  0012               	return		;funcret
  2734  0041E4                     __end_of_Mcu_ConfigExtInt:
  2735                           	opt stack 0
  2736                           tblptru	equ	0xFF8
  2737                           tblptrh	equ	0xFF7
  2738                           tblptrl	equ	0xFF6
  2739                           tablat	equ	0xFF5
  2740                           intcon	equ	0xFF2
  2741                           intcon2	equ	0xFF1
  2742                           intcon3	equ	0xFF0
  2743                           postinc0	equ	0xFEE
  2744                           wreg	equ	0xFE8
  2745                           postdec1	equ	0xFE5
  2746                           fsr1h	equ	0xFE2
  2747                           fsr1l	equ	0xFE1
  2748                           status	equ	0xFD8
  2749                           
  2750 ;; *************** function _Irq_InitIntController *****************
  2751 ;; Defined at:
  2752 ;;		line 75 in file "../../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  IntPriorityE    1    wreg     enum E7720
  2755 ;;  GlobalInt_Hi    1   21[BANK0 ] unsigned char 
  2756 ;;  PerInt_LowPI    1   22[BANK0 ] unsigned char 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  IntPriorityE    1   23[BANK0 ] enum E7720
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2768 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2771 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2772 ;;Total ram usage:        3 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    9
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_SystemInit
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text6
  2783  003FA2                     __ptext6:
  2784                           	opt stack 0
  2785  003FA2                     _Irq_InitIntController:
  2786                           	opt stack 20
  2787                           
  2788                           ; BSR set to: 14
  2789                           ;incstack = 0
  2790                           ;Irq_InitIntController@IntPriorityEn stored from wreg
  2791  003FA2  0100               	movlb	0	; () banked
  2792  003FA4  6F77               	movwf	Irq_InitIntController@IntPriorityEn& (0+255),b
  2793                           
  2794                           ;irq.c: 78: RCONbits.IPEN = IntPriorityEn;
  2795  003FA6  0100               	movlb	0	; () banked
  2796  003FA8  B177               	btfsc	Irq_InitIntController@IntPriorityEn& (0+255),0,b
  2797  003FAA  D002               	bra	u7105
  2798  003FAC  9ED0               	bcf	4048,7,c	;volatile
  2799  003FAE  D001               	bra	u7106
  2800  003FB0                     u7105:
  2801  003FB0  8ED0               	bsf	4048,7,c	;volatile
  2802  003FB2                     u7106:
  2803                           
  2804                           ;irq.c: 80: INTCONbits.GIE_GIEH = GlobalInt_HighPInt;
  2805  003FB2  0100               	movlb	0	; () banked
  2806  003FB4  B175               	btfsc	Irq_InitIntController@GlobalInt_HighPInt& (0+255),0,b
  2807  003FB6  D002               	bra	u7115
  2808  003FB8  9EF2               	bcf	intcon,7,c	;volatile
  2809  003FBA  D001               	bra	u7116
  2810  003FBC                     u7115:
  2811  003FBC  8EF2               	bsf	intcon,7,c	;volatile
  2812  003FBE                     u7116:
  2813                           
  2814                           ;irq.c: 82: INTCONbits.PEIE_GIEL = PerInt_LowPInt;
  2815  003FBE  0100               	movlb	0	; () banked
  2816  003FC0  B176               	btfsc	Irq_InitIntController@PerInt_LowPInt& (0+255),0,b
  2817  003FC2  D002               	bra	u7125
  2818  003FC4  9CF2               	bcf	intcon,6,c	;volatile
  2819  003FC6  D001               	bra	u7126
  2820  003FC8                     u7125:
  2821  003FC8  8CF2               	bsf	intcon,6,c	;volatile
  2822  003FCA                     u7126:
  2823  003FCA  0012               	return		;funcret
  2824  003FCC                     __end_of_Irq_InitIntController:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           intcon	equ	0xFF2
  2831                           intcon2	equ	0xFF1
  2832                           intcon3	equ	0xFF0
  2833                           postinc0	equ	0xFEE
  2834                           wreg	equ	0xFE8
  2835                           postdec1	equ	0xFE5
  2836                           fsr1h	equ	0xFE2
  2837                           fsr1l	equ	0xFE1
  2838                           status	equ	0xFD8
  2839                           
  2840 ;; *************** function _InitSchedTimer *****************
  2841 ;; Defined at:
  2842 ;;		line 69 in file "../../../MercuryFwk/Source/c/01_Hal/01_Sys/sys_init.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  TmrBConfig      7   48[BANK0 ] struct _TmrBConfigType
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2857 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2859 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2860 ;;Total ram usage:        7 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:   12
  2863 ;; This function calls:
  2864 ;;		_Tmr_TmrBConfig
  2865 ;; This function is called by:
  2866 ;;		_SystemInit
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text7
  2871  003F1A                     __ptext7:
  2872                           	opt stack 0
  2873  003F1A                     _InitSchedTimer:
  2874                           	opt stack 17
  2875                           
  2876                           ;sys_init.c: 71: TmrBConfigType TmrBConfig;
  2877                           ;sys_init.c: 74: TmrBConfig.PreScaler = 4;
  2878                           
  2879                           ;incstack = 0
  2880  003F1A  0E04               	movlw	4
  2881  003F1C  0100               	movlb	0	; () banked
  2882  003F1E  6F90               	movwf	InitSchedTimer@TmrBConfig& (0+255),b
  2883                           
  2884                           ;sys_init.c: 75: TmrBConfig.PostScaler = 12;
  2885  003F20  0E0C               	movlw	12
  2886  003F22  6F91               	movwf	(InitSchedTimer@TmrBConfig+1)& (0+255),b
  2887                           
  2888                           ;sys_init.c: 76: TmrBConfig.IntPriority = 0u;
  2889  003F24  0E00               	movlw	0
  2890  003F26  6F93               	movwf	(InitSchedTimer@TmrBConfig+3)& (0+255),b
  2891                           
  2892                           ;sys_init.c: 77: TmrBConfig.IntEnable = 1u;
  2893  003F28  0E01               	movlw	1
  2894  003F2A  6F92               	movwf	(InitSchedTimer@TmrBConfig+2)& (0+255),b
  2895                           
  2896                           ;sys_init.c: 78: TmrBConfig.IntFreqHz = ((UINT16)(1000));
  2897  003F2C  0E03               	movlw	3
  2898  003F2E  6F95               	movwf	(InitSchedTimer@TmrBConfig+5)& (0+255),b
  2899  003F30  0EE8               	movlw	232
  2900  003F32  6F94               	movwf	(InitSchedTimer@TmrBConfig+4)& (0+255),b
  2901                           
  2902                           ;sys_init.c: 79: TmrBConfig.StartTmrRequest = StartTmrReq;
  2903  003F34  0E01               	movlw	1
  2904  003F36  6F96               	movwf	(InitSchedTimer@TmrBConfig+6)& (0+255),b
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;sys_init.c: 82: Tmr_TmrBConfig(((UINT8)(2)),&TmrBConfig);
  2908  003F38  0E90               	movlw	low InitSchedTimer@TmrBConfig
  2909  003F3A  6F8C               	movwf	Tmr_TmrBConfig@TmrBConfig& (0+255),b
  2910  003F3C  0E00               	movlw	high InitSchedTimer@TmrBConfig
  2911  003F3E  6F8D               	movwf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),b
  2912  003F40  0E02               	movlw	2
  2913  003F42  ECE8  F011         	call	_Tmr_TmrBConfig
  2914  003F46  0012               	return		;funcret
  2915  003F48                     __end_of_InitSchedTimer:
  2916                           	opt stack 0
  2917                           tblptru	equ	0xFF8
  2918                           tblptrh	equ	0xFF7
  2919                           tblptrl	equ	0xFF6
  2920                           tablat	equ	0xFF5
  2921                           intcon	equ	0xFF2
  2922                           intcon2	equ	0xFF1
  2923                           intcon3	equ	0xFF0
  2924                           postinc0	equ	0xFEE
  2925                           wreg	equ	0xFE8
  2926                           postdec1	equ	0xFE5
  2927                           fsr1h	equ	0xFE2
  2928                           fsr1l	equ	0xFE1
  2929                           status	equ	0xFD8
  2930                           
  2931 ;; *************** function _Tmr_TmrBConfig *****************
  2932 ;; Defined at:
  2933 ;;		line 271 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  TmrNumb         1    wreg     unsigned char 
  2936 ;;  TmrBConfig      2   44[BANK0 ] PTR struct _TmrBConfigTy
  2937 ;;		 -> InitAuxTimer@TmrBConfig(7), InitSchedTimer@TmrBConfig(7), 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  TmrNumb         1   47[BANK0 ] unsigned char 
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2952 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2953 ;;Total ram usage:        4 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:   11
  2956 ;; This function calls:
  2957 ;;		_TmrBInit
  2958 ;;		_Tmr_StartTmr
  2959 ;;		_Tmr_TmrBIrqSet
  2960 ;;		_Tmr_TmrBPrSet
  2961 ;; This function is called by:
  2962 ;;		_InitSchedTimer
  2963 ;;		_InitAuxTimer
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967                           	psect	text8
  2968  0023D0                     __ptext8:
  2969                           	opt stack 0
  2970  0023D0                     _Tmr_TmrBConfig:
  2971                           	opt stack 17
  2972                           
  2973                           ;incstack = 0
  2974                           ;Tmr_TmrBConfig@TmrNumb stored from wreg
  2975  0023D0  0100               	movlb	0	; () banked
  2976  0023D2  6F8F               	movwf	Tmr_TmrBConfig@TmrNumb& (0+255),b
  2977                           
  2978                           ;tmr_drv.c: 274: TmrBInit(TmrNumb,TmrBConfig->PreScaler,TmrBConfig->PostScaler);
  2979  0023D4  C08C  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  2980  0023D8  C08D  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  2981  0023DC  50DF               	movf	indf2,w,c
  2982  0023DE  0100               	movlb	0	; () banked
  2983  0023E0  6F75               	movwf	TmrBInit@Prescaler& (0+255),b
  2984  0023E2  EE20 F001          	lfsr	2,1
  2985  0023E6  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  2986  0023E8  26D9               	addwf	fsr2l,f,c
  2987  0023EA  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  2988  0023EC  22DA               	addwfc	fsr2h,f,c
  2989  0023EE  50DF               	movf	indf2,w,c
  2990  0023F0  6F76               	movwf	TmrBInit@Postscaler& (0+255),b
  2991  0023F2  518F               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  2992  0023F4  EC8C  F017         	call	_TmrBInit
  2993                           
  2994                           ;tmr_drv.c: 276: if (TmrBConfig->IntEnable == EnableInt)
  2995  0023F8  0100               	movlb	0	; () banked
  2996  0023FA  EE20 F002          	lfsr	2,2
  2997  0023FE  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  2998  002400  26D9               	addwf	fsr2l,f,c
  2999  002402  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3000  002404  22DA               	addwfc	fsr2h,f,c
  3001  002406  04DE               	decf	postinc2,w,c
  3002  002408  A4D8               	btfss	status,2,c
  3003  00240A  D00E               	goto	l474
  3004                           
  3005                           ; BSR set to: 0
  3006                           ;tmr_drv.c: 277: {
  3007                           ;tmr_drv.c: 279: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,1u);
  3008  00240C  EE20 F003          	lfsr	2,3
  3009  002410  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3010  002412  26D9               	addwf	fsr2l,f,c
  3011  002414  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3012  002416  22DA               	addwfc	fsr2h,f,c
  3013  002418  50DF               	movf	indf2,w,c
  3014  00241A  6F75               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3015  00241C  0E01               	movlw	1
  3016  00241E  6F76               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3017  002420  518F               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3018  002422  EC38  F01D         	call	_Tmr_TmrBIrqSet
  3019                           
  3020                           ;tmr_drv.c: 280: }
  3021  002426  D00E               	goto	l475
  3022  002428                     l474:
  3023                           
  3024                           ;tmr_drv.c: 281: else
  3025                           ;tmr_drv.c: 282: {
  3026                           ;tmr_drv.c: 284: Tmr_TmrBIrqSet(TmrNumb,TmrBConfig->IntPriority,0u);
  3027  002428  0100               	movlb	0	; () banked
  3028  00242A  EE20 F003          	lfsr	2,3
  3029  00242E  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3030  002430  26D9               	addwf	fsr2l,f,c
  3031  002432  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3032  002434  22DA               	addwfc	fsr2h,f,c
  3033  002436  50DF               	movf	indf2,w,c
  3034  002438  6F75               	movwf	Tmr_TmrBIrqSet@Priority& (0+255),b
  3035  00243A  0E00               	movlw	0
  3036  00243C  6F76               	movwf	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),b
  3037  00243E  518F               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3038  002440  EC38  F01D         	call	_Tmr_TmrBIrqSet
  3039  002444                     l475:
  3040                           
  3041                           ;tmr_drv.c: 285: }
  3042                           ;tmr_drv.c: 287: Tmr_TmrBPrSet(TmrNumb,TmrBConfig->IntFreqHz,TmrBConfig->PreScaler,TmrBC
      +                          onfig->PostScaler);
  3043  002444  0100               	movlb	0	; () banked
  3044  002446  EE20 F004          	lfsr	2,4
  3045  00244A  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3046  00244C  26D9               	addwf	fsr2l,f,c
  3047  00244E  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3048  002450  22DA               	addwfc	fsr2h,f,c
  3049  002452  CFDE F082          	movff	postinc2,Tmr_TmrBPrSet@IntFreqHz
  3050  002456  CFDD F083          	movff	postdec2,Tmr_TmrBPrSet@IntFreqHz+1
  3051  00245A  C08C  FFD9         	movff	Tmr_TmrBConfig@TmrBConfig,fsr2l
  3052  00245E  C08D  FFDA         	movff	Tmr_TmrBConfig@TmrBConfig+1,fsr2h
  3053  002462  50DF               	movf	indf2,w,c
  3054  002464  6F84               	movwf	Tmr_TmrBPrSet@Prescaler& (0+255),b
  3055  002466  EE20 F001          	lfsr	2,1
  3056  00246A  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3057  00246C  26D9               	addwf	fsr2l,f,c
  3058  00246E  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3059  002470  22DA               	addwfc	fsr2h,f,c
  3060  002472  50DF               	movf	indf2,w,c
  3061  002474  6F85               	movwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3062  002476  518F               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3063  002478  EC06  F00E         	call	_Tmr_TmrBPrSet
  3064                           
  3065                           ;tmr_drv.c: 289: if (TmrBConfig->StartTmrRequest == StartTmrReq)
  3066  00247C  0100               	movlb	0	; () banked
  3067  00247E  EE20 F006          	lfsr	2,6
  3068  002482  518C               	movf	Tmr_TmrBConfig@TmrBConfig& (0+255),w,b
  3069  002484  26D9               	addwf	fsr2l,f,c
  3070  002486  518D               	movf	(Tmr_TmrBConfig@TmrBConfig+1)& (0+255),w,b
  3071  002488  22DA               	addwfc	fsr2h,f,c
  3072  00248A  04DE               	decf	postinc2,w,c
  3073  00248C  A4D8               	btfss	status,2,c
  3074  00248E  0012               	return	
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;tmr_drv.c: 290: {
  3078                           ;tmr_drv.c: 292: Tmr_StartTmr(TmrNumb);
  3079  002490  518F               	movf	Tmr_TmrBConfig@TmrNumb& (0+255),w,b
  3080  002492  EC9A  F020         	call	_Tmr_StartTmr
  3081                           
  3082                           ;tmr_drv.c: 293: }
  3083  002496  0012               	return	
  3084  002498                     __end_of_Tmr_TmrBConfig:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           intcon	equ	0xFF2
  3091                           intcon2	equ	0xFF1
  3092                           intcon3	equ	0xFF0
  3093                           postinc0	equ	0xFEE
  3094                           wreg	equ	0xFE8
  3095                           postdec1	equ	0xFE5
  3096                           fsr1h	equ	0xFE2
  3097                           fsr1l	equ	0xFE1
  3098                           indf2	equ	0xFDF
  3099                           postinc2	equ	0xFDE
  3100                           postdec2	equ	0xFDD
  3101                           fsr2h	equ	0xFDA
  3102                           fsr2l	equ	0xFD9
  3103                           status	equ	0xFD8
  3104                           
  3105 ;; *************** function _Tmr_TmrBPrSet *****************
  3106 ;; Defined at:
  3107 ;;		line 193 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  TmrNumb         1    wreg     unsigned char 
  3110 ;;  IntFreqHz       2   34[BANK0 ] unsigned short 
  3111 ;;  Prescaler       1   36[BANK0 ] unsigned char 
  3112 ;;  Postscaler      1   37[BANK0 ] unsigned char 
  3113 ;; Auto vars:     Size  Location     Type
  3114 ;;  TmrNumb         1   39[BANK0 ] unsigned char 
  3115 ;;  Divisor         4   40[BANK0 ] unsigned long 
  3116 ;;  TmrBPrCfgSts    1   38[BANK0 ] enum E7736
  3117 ;; Return value:  Size  Location     Type
  3118 ;;                  1    wreg      enum E7736
  3119 ;; Registers used:
  3120 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3121 ;; Tracked objects:
  3122 ;;		On entry : 0/0
  3123 ;;		On exit  : 0/0
  3124 ;;		Unchanged: 0/0
  3125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3126 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3127 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3129 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3130 ;;Total ram usage:       10 bytes
  3131 ;; Hardware stack levels used:    1
  3132 ;; Hardware stack levels required when called:   10
  3133 ;; This function calls:
  3134 ;;		___lldiv
  3135 ;;		___lmul
  3136 ;; This function is called by:
  3137 ;;		_Tmr_TmrBConfig
  3138 ;; This function uses a non-reentrant model
  3139 ;;
  3140                           
  3141                           	psect	text9
  3142  001C0C                     __ptext9:
  3143                           	opt stack 0
  3144  001C0C                     _Tmr_TmrBPrSet:
  3145                           	opt stack 17
  3146                           
  3147                           ;incstack = 0
  3148                           ;Tmr_TmrBPrSet@TmrNumb stored from wreg
  3149  001C0C  0100               	movlb	0	; () banked
  3150  001C0E  6F87               	movwf	Tmr_TmrBPrSet@TmrNumb& (0+255),b
  3151                           
  3152                           ;tmr_drv.c: 195: CfgStsType TmrBPrCfgSts;
  3153                           ;tmr_drv.c: 196: UINT32 Divisor = 0;
  3154  001C10  0E00               	movlw	0
  3155  001C12  0100               	movlb	0	; () banked
  3156  001C14  6F88               	movwf	Tmr_TmrBPrSet@Divisor& (0+255),b
  3157  001C16  0E00               	movlw	0
  3158  001C18  6F89               	movwf	(Tmr_TmrBPrSet@Divisor+1)& (0+255),b
  3159  001C1A  0E00               	movlw	0
  3160  001C1C  6F8A               	movwf	(Tmr_TmrBPrSet@Divisor+2)& (0+255),b
  3161  001C1E  0E00               	movlw	0
  3162  001C20  6F8B               	movwf	(Tmr_TmrBPrSet@Divisor+3)& (0+255),b
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;tmr_drv.c: 199: Divisor = (UINT32)Prescaler*(UINT32)Postscaler*(UINT32)IntFreqHz;
  3166  001C22  5184               	movf	Tmr_TmrBPrSet@Prescaler& (0+255),w,b
  3167  001C24  0385               	mulwf	Tmr_TmrBPrSet@Postscaler& (0+255),b
  3168  001C26  CFF3 F075          	movff	prodl,___lmul@multiplier
  3169  001C2A  CFF4 F076          	movff	prodh,___lmul@multiplier+1
  3170  001C2E  6B77               	clrf	(___lmul@multiplier+2)& (0+255),b
  3171  001C30  6B78               	clrf	(___lmul@multiplier+3)& (0+255),b
  3172  001C32  C082  F079         	movff	Tmr_TmrBPrSet@IntFreqHz,___lmul@multiplicand
  3173  001C36  C083  F07A         	movff	Tmr_TmrBPrSet@IntFreqHz+1,___lmul@multiplicand+1
  3174  001C3A  6B7B               	clrf	(___lmul@multiplicand+2)& (0+255),b
  3175  001C3C  6B7C               	clrf	(___lmul@multiplicand+3)& (0+255),b
  3176  001C3E  EC11  F01C         	call	___lmul	;wreg free
  3177  001C42  C075  F088         	movff	?___lmul,Tmr_TmrBPrSet@Divisor
  3178  001C46  C076  F089         	movff	?___lmul+1,Tmr_TmrBPrSet@Divisor+1
  3179  001C4A  C077  F08A         	movff	?___lmul+2,Tmr_TmrBPrSet@Divisor+2
  3180  001C4E  C078  F08B         	movff	?___lmul+3,Tmr_TmrBPrSet@Divisor+3
  3181                           
  3182                           ;tmr_drv.c: 202: if (((((UINT32)(48000000))/(UINT32)(4))/Divisor) <= 255)
  3183  001C52  0E00               	movlw	0
  3184  001C54  0100               	movlb	0	; () banked
  3185  001C56  6F75               	movwf	___lldiv@dividend& (0+255),b
  3186  001C58  0E1B               	movlw	27
  3187  001C5A  6F76               	movwf	(___lldiv@dividend+1)& (0+255),b
  3188  001C5C  0EB7               	movlw	183
  3189  001C5E  6F77               	movwf	(___lldiv@dividend+2)& (0+255),b
  3190  001C60  0E00               	movlw	0
  3191  001C62  6F78               	movwf	(___lldiv@dividend+3)& (0+255),b
  3192  001C64  C088  F079         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3193  001C68  C089  F07A         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3194  001C6C  C08A  F07B         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3195  001C70  C08B  F07C         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3196  001C74  ECCB  F019         	call	___lldiv	;wreg free
  3197  001C78  0100               	movlb	0	; () banked
  3198  001C7A  5178               	movf	(?___lldiv+3)& (0+255),w,b
  3199  001C7C  1177               	iorwf	(?___lldiv+2)& (0+255),w,b
  3200  001C7E  E13A               	bnz	l9961
  3201  001C80  0576               	decf	(?___lldiv+1)& (0+255),w,b
  3202  001C82  A0D8               	btfss	status,0,c
  3203  001C84  D02D               	goto	l457
  3204  001C86  D036               	goto	l456
  3205  001C88                     
  3206                           ; BSR set to: 0
  3207                           ;tmr_drv.c: 209: PR2 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3208                           
  3209                           ; BSR set to: 0
  3210  001C88  0E00               	movlw	0
  3211  001C8A  6F75               	movwf	___lldiv@dividend& (0+255),b
  3212  001C8C  0E1B               	movlw	27
  3213  001C8E  6F76               	movwf	(___lldiv@dividend+1)& (0+255),b
  3214  001C90  0EB7               	movlw	183
  3215  001C92  6F77               	movwf	(___lldiv@dividend+2)& (0+255),b
  3216  001C94  0E00               	movlw	0
  3217  001C96  6F78               	movwf	(___lldiv@dividend+3)& (0+255),b
  3218  001C98  C088  F079         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3219  001C9C  C089  F07A         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3220  001CA0  C08A  F07B         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3221  001CA4  C08B  F07C         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3222  001CA8  ECCB  F019         	call	___lldiv	;wreg free
  3223  001CAC  0100               	movlb	0	; () banked
  3224  001CAE  5175               	movf	?___lldiv& (0+255),w,b
  3225  001CB0  6ECB               	movwf	4043,c	;volatile
  3226                           
  3227                           ;tmr_drv.c: 210: break;
  3228  001CB2  D01D               	goto	l459
  3229  001CB4                     
  3230                           ; BSR set to: 0
  3231                           ;tmr_drv.c: 214: PR4 = (((UINT32)(48000000))/(UINT32)(4))/Divisor;
  3232                           
  3233                           ; BSR set to: 0
  3234  001CB4  0E00               	movlw	0
  3235  001CB6  6F75               	movwf	___lldiv@dividend& (0+255),b
  3236  001CB8  0E1B               	movlw	27
  3237  001CBA  6F76               	movwf	(___lldiv@dividend+1)& (0+255),b
  3238  001CBC  0EB7               	movlw	183
  3239  001CBE  6F77               	movwf	(___lldiv@dividend+2)& (0+255),b
  3240  001CC0  0E00               	movlw	0
  3241  001CC2  6F78               	movwf	(___lldiv@dividend+3)& (0+255),b
  3242  001CC4  C088  F079         	movff	Tmr_TmrBPrSet@Divisor,___lldiv@divisor
  3243  001CC8  C089  F07A         	movff	Tmr_TmrBPrSet@Divisor+1,___lldiv@divisor+1
  3244  001CCC  C08A  F07B         	movff	Tmr_TmrBPrSet@Divisor+2,___lldiv@divisor+2
  3245  001CD0  C08B  F07C         	movff	Tmr_TmrBPrSet@Divisor+3,___lldiv@divisor+3
  3246  001CD4  ECCB  F019         	call	___lldiv	;wreg free
  3247  001CD8  0100               	movlb	0	; () banked
  3248  001CDA  5175               	movf	?___lldiv& (0+255),w,b
  3249  001CDC  6E77               	movwf	3959,c	;volatile
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;tmr_drv.c: 219: }
  3253                           
  3254                           ; BSR set to: 0
  3255                           ;tmr_drv.c: 218: break;
  3256                           
  3257                           ;tmr_drv.c: 217: default:
  3258                           
  3259                           ;tmr_drv.c: 215: break;
  3260  001CDE  D007               	goto	l459
  3261  001CE0                     l457:
  3262                           
  3263                           ; BSR set to: 0
  3264                           
  3265                           ; BSR set to: 0
  3266  001CE0  5187               	movf	Tmr_TmrBPrSet@TmrNumb& (0+255),w,b
  3267                           
  3268                           ; Switch size 1, requested type "space"
  3269                           ; Number of cases is 2, Range of values is 2 to 4
  3270                           ; switch strategies available:
  3271                           ; Name         Instructions Cycles
  3272                           ; simple_byte            7     4 (average)
  3273                           ;	Chosen strategy is simple_byte
  3274  001CE2  0A02               	xorlw	2	; case 2
  3275  001CE4  B4D8               	btfsc	status,2,c
  3276  001CE6  D7D0               	goto	l458
  3277  001CE8  0A06               	xorlw	6	; case 4
  3278  001CEA  B4D8               	btfsc	status,2,c
  3279  001CEC  D7E3               	goto	l460
  3280  001CEE                     l459:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;tmr_drv.c: 222: TmrBPrCfgSts = CfgOk;
  3284                           
  3285                           ; BSR set to: 0
  3286  001CEE  0E00               	movlw	0
  3287  001CF0  6F86               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3288                           
  3289                           ;tmr_drv.c: 223: }
  3290  001CF2  0012               	return	
  3291  001CF4                     l456:
  3292  001CF4                     l9961:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;tmr_drv.c: 224: else
  3296                           ;tmr_drv.c: 225: {
  3297                           ;tmr_drv.c: 227: TmrBPrCfgSts = CfgError;
  3298  001CF4  0E01               	movlw	1
  3299  001CF6  6F86               	movwf	Tmr_TmrBPrSet@TmrBPrCfgSts& (0+255),b
  3300                           
  3301                           ; BSR set to: 0
  3302  001CF8  0012               	return	
  3303  001CFA                     __end_of_Tmr_TmrBPrSet:
  3304                           	opt stack 0
  3305                           tblptru	equ	0xFF8
  3306                           tblptrh	equ	0xFF7
  3307                           tblptrl	equ	0xFF6
  3308                           tablat	equ	0xFF5
  3309                           prodh	equ	0xFF4
  3310                           prodl	equ	0xFF3
  3311                           intcon	equ	0xFF2
  3312                           intcon2	equ	0xFF1
  3313                           intcon3	equ	0xFF0
  3314                           postinc0	equ	0xFEE
  3315                           wreg	equ	0xFE8
  3316                           postdec1	equ	0xFE5
  3317                           fsr1h	equ	0xFE2
  3318                           fsr1l	equ	0xFE1
  3319                           indf2	equ	0xFDF
  3320                           postinc2	equ	0xFDE
  3321                           postdec2	equ	0xFDD
  3322                           fsr2h	equ	0xFDA
  3323                           fsr2l	equ	0xFD9
  3324                           status	equ	0xFD8
  3325                           
  3326 ;; *************** function _Tmr_TmrBIrqSet *****************
  3327 ;; Defined at:
  3328 ;;		line 153 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  TmrNumb         1    wreg     unsigned char 
  3331 ;;  Priority        1   21[BANK0 ] enum E7716
  3332 ;;  TmrIrqSts       1   22[BANK0 ] unsigned char 
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;  TmrNumb         1   23[BANK0 ] unsigned char 
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, status,2, status,0
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3344 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3345 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3347 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3348 ;;Total ram usage:        3 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    9
  3351 ;; This function calls:
  3352 ;;		Nothing
  3353 ;; This function is called by:
  3354 ;;		_Tmr_TmrBConfig
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text10
  3359  003A70                     __ptext10:
  3360                           	opt stack 0
  3361  003A70                     _Tmr_TmrBIrqSet:
  3362                           	opt stack 18
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;incstack = 0
  3366                           ;Tmr_TmrBIrqSet@TmrNumb stored from wreg
  3367  003A70  0100               	movlb	0	; () banked
  3368  003A72  6F77               	movwf	Tmr_TmrBIrqSet@TmrNumb& (0+255),b
  3369                           
  3370                           ;tmr_drv.c: 156: switch (TmrNumb)
  3371  003A74  D01A               	goto	l448
  3372  003A76                     l449:
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;tmr_drv.c: 160: PIR1bits.TMR2IF = 0u;
  3376  003A76  929E               	bcf	3998,1,c	;volatile
  3377                           
  3378                           ;tmr_drv.c: 162: IPR1bits.TMR2IP = Priority;
  3379  003A78  B175               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3380  003A7A  D002               	bra	u6405
  3381  003A7C  929F               	bcf	3999,1,c	;volatile
  3382  003A7E  D001               	bra	u6406
  3383  003A80                     u6405:
  3384  003A80  829F               	bsf	3999,1,c	;volatile
  3385  003A82                     u6406:
  3386                           
  3387                           ;tmr_drv.c: 164: PIE1bits.TMR2IE = TmrIrqSts;
  3388  003A82  0100               	movlb	0	; () banked
  3389  003A84  B176               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3390  003A86  D002               	bra	u6415
  3391  003A88  929D               	bcf	3997,1,c	;volatile
  3392  003A8A  D001               	bra	u6416
  3393  003A8C                     u6415:
  3394  003A8C  829D               	bsf	3997,1,c	;volatile
  3395  003A8E                     u6416:
  3396                           
  3397                           ;tmr_drv.c: 165: break;
  3398  003A8E  0012               	return	
  3399  003A90                     l451:
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;tmr_drv.c: 169: PIR3bits.TMR4IF = 0u;
  3403  003A90  96A4               	bcf	4004,3,c	;volatile
  3404                           
  3405                           ;tmr_drv.c: 171: IPR3bits.TMR4IP = Priority;
  3406  003A92  B175               	btfsc	Tmr_TmrBIrqSet@Priority& (0+255),0,b
  3407  003A94  D002               	bra	u6425
  3408  003A96  96A5               	bcf	4005,3,c	;volatile
  3409  003A98  D001               	bra	u6426
  3410  003A9A                     u6425:
  3411  003A9A  86A5               	bsf	4005,3,c	;volatile
  3412  003A9C                     u6426:
  3413                           
  3414                           ;tmr_drv.c: 173: PIE3bits.TMR4IE = TmrIrqSts;
  3415  003A9C  0100               	movlb	0	; () banked
  3416  003A9E  B176               	btfsc	Tmr_TmrBIrqSet@TmrIrqSts& (0+255),0,b
  3417  003AA0  D002               	bra	u6435
  3418  003AA2  96A3               	bcf	4003,3,c	;volatile
  3419  003AA4  D001               	bra	u6436
  3420  003AA6                     u6435:
  3421  003AA6  86A3               	bsf	4003,3,c	;volatile
  3422  003AA8                     u6436:
  3423                           
  3424                           ;tmr_drv.c: 178: }
  3425                           
  3426                           ;tmr_drv.c: 177: break;
  3427                           
  3428                           ;tmr_drv.c: 176: default:
  3429                           
  3430                           ;tmr_drv.c: 174: break;
  3431  003AA8  0012               	return	
  3432  003AAA                     l448:
  3433  003AAA  0100               	movlb	0	; () banked
  3434  003AAC  5177               	movf	Tmr_TmrBIrqSet@TmrNumb& (0+255),w,b
  3435                           
  3436                           ; Switch size 1, requested type "space"
  3437                           ; Number of cases is 2, Range of values is 2 to 4
  3438                           ; switch strategies available:
  3439                           ; Name         Instructions Cycles
  3440                           ; simple_byte            7     4 (average)
  3441                           ;	Chosen strategy is simple_byte
  3442  003AAE  0A02               	xorlw	2	; case 2
  3443  003AB0  B4D8               	btfsc	status,2,c
  3444  003AB2  D7E1               	goto	l449
  3445  003AB4  0A06               	xorlw	6	; case 4
  3446  003AB6  A4D8               	btfss	status,2,c
  3447  003AB8  0012               	return	
  3448  003ABA  D7EA               	goto	l451
  3449  003ABC                     __end_of_Tmr_TmrBIrqSet:
  3450                           	opt stack 0
  3451                           tblptru	equ	0xFF8
  3452                           tblptrh	equ	0xFF7
  3453                           tblptrl	equ	0xFF6
  3454                           tablat	equ	0xFF5
  3455                           prodh	equ	0xFF4
  3456                           prodl	equ	0xFF3
  3457                           intcon	equ	0xFF2
  3458                           intcon2	equ	0xFF1
  3459                           intcon3	equ	0xFF0
  3460                           postinc0	equ	0xFEE
  3461                           wreg	equ	0xFE8
  3462                           postdec1	equ	0xFE5
  3463                           fsr1h	equ	0xFE2
  3464                           fsr1l	equ	0xFE1
  3465                           indf2	equ	0xFDF
  3466                           postinc2	equ	0xFDE
  3467                           postdec2	equ	0xFDD
  3468                           fsr2h	equ	0xFDA
  3469                           fsr2l	equ	0xFD9
  3470                           status	equ	0xFD8
  3471                           
  3472 ;; *************** function _Tmr_StartTmr *****************
  3473 ;; Defined at:
  3474 ;;		line 242 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  TmrNumb         1    wreg     unsigned char 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  TmrNumb         1   21[BANK0 ] unsigned char 
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3489 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3491 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3492 ;;Total ram usage:        1 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    9
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_Tmr_TmrBConfig
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text11
  3503  004134                     __ptext11:
  3504                           	opt stack 0
  3505  004134                     _Tmr_StartTmr:
  3506                           	opt stack 18
  3507                           
  3508                           ;incstack = 0
  3509                           ;Tmr_StartTmr@TmrNumb stored from wreg
  3510  004134  0100               	movlb	0	; () banked
  3511  004136  6F75               	movwf	Tmr_StartTmr@TmrNumb& (0+255),b
  3512                           
  3513                           ;tmr_drv.c: 245: switch (TmrNumb)
  3514  004138  D004               	goto	l466
  3515  00413A                     l467:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;tmr_drv.c: 249: T2CONbits.TMR2ON = 1u;
  3519  00413A  84CA               	bsf	4042,2,c	;volatile
  3520                           
  3521                           ;tmr_drv.c: 250: break;
  3522  00413C  0012               	return	
  3523  00413E                     l469:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;tmr_drv.c: 254: T4CONbits.TMR4ON = 1u;
  3527  00413E  8476               	bsf	3958,2,c	;volatile
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;tmr_drv.c: 259: }
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;tmr_drv.c: 258: break;
  3534                           
  3535                           ;tmr_drv.c: 257: default:
  3536                           
  3537                           ;tmr_drv.c: 255: break;
  3538  004140  0012               	return	
  3539  004142                     l466:
  3540                           
  3541                           ; BSR set to: 0
  3542  004142  0100               	movlb	0	; () banked
  3543  004144  5175               	movf	Tmr_StartTmr@TmrNumb& (0+255),w,b
  3544                           
  3545                           ; Switch size 1, requested type "space"
  3546                           ; Number of cases is 2, Range of values is 2 to 4
  3547                           ; switch strategies available:
  3548                           ; Name         Instructions Cycles
  3549                           ; simple_byte            7     4 (average)
  3550                           ;	Chosen strategy is simple_byte
  3551  004146  0A02               	xorlw	2	; case 2
  3552  004148  B4D8               	btfsc	status,2,c
  3553  00414A  D7F7               	goto	l467
  3554  00414C  0A06               	xorlw	6	; case 4
  3555  00414E  A4D8               	btfss	status,2,c
  3556  004150  0012               	return	
  3557  004152  D7F5               	goto	l469
  3558  004154                     __end_of_Tmr_StartTmr:
  3559                           	opt stack 0
  3560                           tblptru	equ	0xFF8
  3561                           tblptrh	equ	0xFF7
  3562                           tblptrl	equ	0xFF6
  3563                           tablat	equ	0xFF5
  3564                           prodh	equ	0xFF4
  3565                           prodl	equ	0xFF3
  3566                           intcon	equ	0xFF2
  3567                           intcon2	equ	0xFF1
  3568                           intcon3	equ	0xFF0
  3569                           postinc0	equ	0xFEE
  3570                           wreg	equ	0xFE8
  3571                           postdec1	equ	0xFE5
  3572                           fsr1h	equ	0xFE2
  3573                           fsr1l	equ	0xFE1
  3574                           indf2	equ	0xFDF
  3575                           postinc2	equ	0xFDE
  3576                           postdec2	equ	0xFDD
  3577                           fsr2h	equ	0xFDA
  3578                           fsr2l	equ	0xFD9
  3579                           status	equ	0xFD8
  3580                           
  3581 ;; *************** function _TmrBInit *****************
  3582 ;; Defined at:
  3583 ;;		line 72 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  TmrNumb         1    wreg     unsigned char 
  3586 ;;  Prescaler       1   21[BANK0 ] unsigned char 
  3587 ;;  Postscaler      1   22[BANK0 ] unsigned char 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  TmrNumb         1   24[BANK0 ] unsigned char 
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3599 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3600 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3601 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3602 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3603 ;;Total ram usage:        4 bytes
  3604 ;; Hardware stack levels used:    1
  3605 ;; Hardware stack levels required when called:    9
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_Tmr_TmrBConfig
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text12
  3614  002F18                     __ptext12:
  3615                           	opt stack 0
  3616  002F18                     _TmrBInit:
  3617                           	opt stack 18
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;incstack = 0
  3621                           ;TmrBInit@TmrNumb stored from wreg
  3622  002F18  0100               	movlb	0	; () banked
  3623  002F1A  6F78               	movwf	TmrBInit@TmrNumb& (0+255),b
  3624                           
  3625                           ;tmr_drv.c: 75: switch (TmrNumb)
  3626  002F1C  D03F               	goto	l428
  3627  002F1E                     l431:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;tmr_drv.c: 83: T2CONbits.T2CKPS0 = 0u;
  3631  002F1E  90CA               	bcf	4042,0,c	;volatile
  3632  002F20  D001               	goto	L1
  3633  002F22                     l433:
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;tmr_drv.c: 89: T2CONbits.T2CKPS0 = 1u;
  3637  002F22  80CA               	bsf	4042,0,c	;volatile
  3638  002F24                     L1:
  3639                           
  3640                           ;tmr_drv.c: 90: T2CONbits.T2CKPS1 = 0u;
  3641  002F24  92CA               	bcf	4042,1,c	;volatile
  3642                           
  3643                           ;tmr_drv.c: 91: break;
  3644  002F26  D00E               	goto	l432
  3645  002F28                     l434:
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;tmr_drv.c: 94: T2CONbits.T2CKPS0 = 1u;
  3649  002F28  80CA               	bsf	4042,0,c	;volatile
  3650                           
  3651                           ;tmr_drv.c: 95: T2CONbits.T2CKPS1 = 1u;
  3652  002F2A  82CA               	bsf	4042,1,c	;volatile
  3653                           
  3654                           ; BSR set to: 0
  3655                           ;tmr_drv.c: 100: }
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;tmr_drv.c: 99: break;
  3659                           
  3660                           ;tmr_drv.c: 98: default:
  3661                           
  3662                           ;tmr_drv.c: 96: break;
  3663  002F2C  D00B               	goto	l432
  3664  002F2E                     
  3665                           ; BSR set to: 0
  3666  002F2E  0100               	movlb	0	; () banked
  3667  002F30  5175               	movf	TmrBInit@Prescaler& (0+255),w,b
  3668                           
  3669                           ; Switch size 1, requested type "space"
  3670                           ; Number of cases is 3, Range of values is 1 to 16
  3671                           ; switch strategies available:
  3672                           ; Name         Instructions Cycles
  3673                           ; simple_byte           10     6 (average)
  3674                           ;	Chosen strategy is simple_byte
  3675  002F32  0A01               	xorlw	1	; case 1
  3676  002F34  B4D8               	btfsc	status,2,c
  3677  002F36  D7F3               	goto	l431
  3678  002F38  0A05               	xorlw	5	; case 4
  3679  002F3A  B4D8               	btfsc	status,2,c
  3680  002F3C  D7F2               	goto	l433
  3681  002F3E  0A14               	xorlw	20	; case 16
  3682  002F40  B4D8               	btfsc	status,2,c
  3683  002F42  D7F2               	goto	l434
  3684  002F44                     l432:
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;tmr_drv.c: 103: T2CONbits.T2OUTPS = (Postscaler - 1);
  3688                           
  3689                           ; BSR set to: 0
  3690  002F44  C076  F077         	movff	TmrBInit@Postscaler,??_TmrBInit
  3691  002F48  0EFF               	movlw	255
  3692  002F4A  2777               	addwf	??_TmrBInit& (0+255),f,b
  3693  002F4C  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3694  002F4E  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3695  002F50  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3696  002F52  50CA               	movf	4042,w,c	;volatile
  3697  002F54  1977               	xorwf	??_TmrBInit& (0+255),w,b
  3698  002F56  0B87               	andlw	-121
  3699  002F58  1977               	xorwf	??_TmrBInit& (0+255),w,b
  3700  002F5A  6ECA               	movwf	4042,c	;volatile
  3701                           
  3702                           ;tmr_drv.c: 104: break;
  3703  002F5C  0012               	return	
  3704  002F5E                     l439:
  3705                           
  3706                           ; BSR set to: 0
  3707                           ;tmr_drv.c: 112: T4CONbits.T4CKPS0 = 0u;
  3708  002F5E  9076               	bcf	3958,0,c	;volatile
  3709  002F60  D001               	goto	L2
  3710  002F62                     l441:
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;tmr_drv.c: 118: T4CONbits.T4CKPS0 = 1u;
  3714  002F62  8076               	bsf	3958,0,c	;volatile
  3715  002F64                     L2:
  3716                           
  3717                           ;tmr_drv.c: 119: T4CONbits.T4CKPS1 = 0u;
  3718  002F64  9276               	bcf	3958,1,c	;volatile
  3719                           
  3720                           ;tmr_drv.c: 120: break;
  3721  002F66  D00D               	goto	l440
  3722  002F68                     l442:
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;tmr_drv.c: 123: T4CONbits.T4CKPS0 = 1u;
  3726  002F68  8076               	bsf	3958,0,c	;volatile
  3727                           
  3728                           ;tmr_drv.c: 124: T4CONbits.T4CKPS1 = 1u;
  3729  002F6A  8276               	bsf	3958,1,c	;volatile
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;tmr_drv.c: 129: }
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;tmr_drv.c: 128: break;
  3736                           
  3737                           ;tmr_drv.c: 127: default:
  3738                           
  3739                           ;tmr_drv.c: 125: break;
  3740  002F6C  D00A               	goto	l440
  3741  002F6E                     
  3742                           ; BSR set to: 0
  3743                           
  3744                           ; BSR set to: 0
  3745  002F6E  5175               	movf	TmrBInit@Prescaler& (0+255),w,b
  3746                           
  3747                           ; Switch size 1, requested type "space"
  3748                           ; Number of cases is 3, Range of values is 1 to 16
  3749                           ; switch strategies available:
  3750                           ; Name         Instructions Cycles
  3751                           ; simple_byte           10     6 (average)
  3752                           ;	Chosen strategy is simple_byte
  3753  002F70  0A01               	xorlw	1	; case 1
  3754  002F72  B4D8               	btfsc	status,2,c
  3755  002F74  D7F4               	goto	l439
  3756  002F76  0A05               	xorlw	5	; case 4
  3757  002F78  B4D8               	btfsc	status,2,c
  3758  002F7A  D7F3               	goto	l441
  3759  002F7C  0A14               	xorlw	20	; case 16
  3760  002F7E  B4D8               	btfsc	status,2,c
  3761  002F80  D7F3               	goto	l442
  3762  002F82                     l440:
  3763                           
  3764                           ; BSR set to: 0
  3765                           ;tmr_drv.c: 132: T4CONbits.T4OUTPS = (Postscaler - 1);
  3766                           
  3767                           ; BSR set to: 0
  3768  002F82  C076  F077         	movff	TmrBInit@Postscaler,??_TmrBInit
  3769  002F86  0EFF               	movlw	255
  3770  002F88  2777               	addwf	??_TmrBInit& (0+255),f,b
  3771  002F8A  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3772  002F8C  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3773  002F8E  4777               	rlncf	??_TmrBInit& (0+255),f,b
  3774  002F90  5076               	movf	3958,w,c	;volatile
  3775  002F92  1977               	xorwf	??_TmrBInit& (0+255),w,b
  3776  002F94  0B87               	andlw	-121
  3777  002F96  1977               	xorwf	??_TmrBInit& (0+255),w,b
  3778  002F98  6E76               	movwf	3958,c	;volatile
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;tmr_drv.c: 137: }
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;tmr_drv.c: 136: break;
  3785                           
  3786                           ;tmr_drv.c: 135: default:
  3787                           
  3788                           ;tmr_drv.c: 133: break;
  3789  002F9A  0012               	return	
  3790  002F9C                     l428:
  3791                           
  3792                           ; BSR set to: 0
  3793  002F9C  0100               	movlb	0	; () banked
  3794  002F9E  5178               	movf	TmrBInit@TmrNumb& (0+255),w,b
  3795                           
  3796                           ; Switch size 1, requested type "space"
  3797                           ; Number of cases is 2, Range of values is 2 to 4
  3798                           ; switch strategies available:
  3799                           ; Name         Instructions Cycles
  3800                           ; simple_byte            7     4 (average)
  3801                           ;	Chosen strategy is simple_byte
  3802  002FA0  0A02               	xorlw	2	; case 2
  3803  002FA2  B4D8               	btfsc	status,2,c
  3804  002FA4  D7C4               	goto	l430
  3805  002FA6  0A06               	xorlw	6	; case 4
  3806  002FA8  A4D8               	btfss	status,2,c
  3807  002FAA  0012               	return	
  3808  002FAC  D7E0               	goto	l438
  3809  002FAE                     __end_of_TmrBInit:
  3810                           	opt stack 0
  3811                           tblptru	equ	0xFF8
  3812                           tblptrh	equ	0xFF7
  3813                           tblptrl	equ	0xFF6
  3814                           tablat	equ	0xFF5
  3815                           prodh	equ	0xFF4
  3816                           prodl	equ	0xFF3
  3817                           intcon	equ	0xFF2
  3818                           intcon2	equ	0xFF1
  3819                           intcon3	equ	0xFF0
  3820                           postinc0	equ	0xFEE
  3821                           wreg	equ	0xFE8
  3822                           postdec1	equ	0xFE5
  3823                           fsr1h	equ	0xFE2
  3824                           fsr1l	equ	0xFE1
  3825                           indf2	equ	0xFDF
  3826                           postinc2	equ	0xFDE
  3827                           postdec2	equ	0xFDD
  3828                           fsr2h	equ	0xFDA
  3829                           fsr2l	equ	0xFD9
  3830                           status	equ	0xFD8
  3831                           
  3832 ;; *************** function _Sch_MainScheduler *****************
  3833 ;; Defined at:
  3834 ;;		line 175 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;		None
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3852 ;;Total ram usage:        0 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; Hardware stack levels required when called:   20
  3855 ;; This function calls:
  3856 ;;		_InitializeTasks
  3857 ;;		_ScheduleTasks
  3858 ;; This function is called by:
  3859 ;;		_main
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text13
  3864  0041AE                     __ptext13:
  3865                           	opt stack 0
  3866  0041AE                     _Sch_MainScheduler:
  3867                           	opt stack 10
  3868                           
  3869                           ;os_sched.c: 178: InitializeTasks();
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;incstack = 0
  3873  0041AE  EC7F  F01A         	call	_InitializeTasks	;wreg free
  3874                           
  3875                           ;os_sched.c: 180: SystemState = RunningState;
  3876  0041B2  0E01               	movlw	1
  3877  0041B4  0100               	movlb	0	; () banked
  3878  0041B6  6FCD               	movwf	_SystemState& (0+255),b
  3879  0041B8                     
  3880                           ; BSR set to: 0
  3881                           ;os_sched.c: 188: {
  3882                           ;os_sched.c: 190: if (MainSystemTimebaseFlag == CallTaskPhase)
  3883                           
  3884                           ; BSR set to: 0
  3885  0041B8  51E1               	movf	_MainSystemTimebaseFlag& (0+255),w,b
  3886  0041BA  A4D8               	btfss	status,2,c
  3887  0041BC  D7FD               	goto	l687
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;os_sched.c: 191: {
  3891                           ;os_sched.c: 196: ScheduleTasks();
  3892  0041BE  EC71  F00C         	call	_ScheduleTasks	;wreg free
  3893                           
  3894                           ;os_sched.c: 201: MainSystemTimebaseFlag = WaitTriggerPhase;
  3895  0041C2  0E01               	movlw	1
  3896  0041C4  0100               	movlb	0	; () banked
  3897  0041C6  6FE1               	movwf	_MainSystemTimebaseFlag& (0+255),b
  3898                           
  3899                           ; BSR set to: 0
  3900                           
  3901                           ; BSR set to: 0
  3902  0041C8  D7F7               	goto	l687
  3903  0041CA                     __end_of_Sch_MainScheduler:
  3904                           	opt stack 0
  3905                           tblptru	equ	0xFF8
  3906                           tblptrh	equ	0xFF7
  3907                           tblptrl	equ	0xFF6
  3908                           tablat	equ	0xFF5
  3909                           prodh	equ	0xFF4
  3910                           prodl	equ	0xFF3
  3911                           intcon	equ	0xFF2
  3912                           intcon2	equ	0xFF1
  3913                           intcon3	equ	0xFF0
  3914                           postinc0	equ	0xFEE
  3915                           wreg	equ	0xFE8
  3916                           postdec1	equ	0xFE5
  3917                           fsr1h	equ	0xFE2
  3918                           fsr1l	equ	0xFE1
  3919                           indf2	equ	0xFDF
  3920                           postinc2	equ	0xFDE
  3921                           postdec2	equ	0xFDD
  3922                           fsr2h	equ	0xFDA
  3923                           fsr2l	equ	0xFD9
  3924                           status	equ	0xFD8
  3925                           
  3926 ;; *************** function _ScheduleTasks *****************
  3927 ;; Defined at:
  3928 ;;		line 99 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  ActiveTaskIn    1   69[BANK0 ] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3943 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3944 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3945 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3946 ;;Total ram usage:        5 bytes
  3947 ;; Hardware stack levels used:    1
  3948 ;; Hardware stack levels required when called:   19
  3949 ;; This function calls:
  3950 ;;		_I2cSlv_MainTask
  3951 ;;		_Led_MainTask
  3952 ;;		_MyApp_Task
  3953 ;;		_Rtcm_MainTask
  3954 ;;		_Term_MainTask
  3955 ;;		_UsbDevice_MainTask
  3956 ;;		_Wdg_MainTask
  3957 ;; This function is called by:
  3958 ;;		_Sch_MainScheduler
  3959 ;; This function uses a non-reentrant model
  3960 ;;
  3961                           
  3962                           	psect	text14
  3963  0018E2                     __ptext14:
  3964                           	opt stack 0
  3965  0018E2                     _ScheduleTasks:
  3966                           	opt stack 10
  3967                           
  3968                           ;os_sched.c: 102: UINT8 ActiveTaskIndex = 0u;
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;incstack = 0
  3972  0018E2  0E00               	movlw	0
  3973  0018E4  0100               	movlb	0	; () banked
  3974  0018E6  6FA5               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  3975                           
  3976                           ;os_sched.c: 105: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInd
      +                          ex++)
  3977  0018E8  0E00               	movlw	0
  3978  0018EA  6FA5               	movwf	ScheduleTasks@ActiveTaskIndex& (0+255),b
  3979  0018EC                     l10345:
  3980                           
  3981                           ; BSR set to: 0
  3982  0018EC  0E91               	movlw	low _TaskNumber
  3983  0018EE  6EF6               	movwf	tblptrl,c
  3984  0018F0                     	if	1	;There is more than 1 active tblptr byte
  3985  0018F0  0EFD               	movlw	high _TaskNumber
  3986  0018F2  6EF7               	movwf	tblptrh,c
  3987  0018F4                     	endif
  3988  0018F4                     	if	0	;There are less than 3 active tblptr bytes
  3989  0018F4                     	endif
  3990  0018F4  51A5               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  3991  0018F6  6FA1               	movwf	??_ScheduleTasks& (0+255),b
  3992  0018F8  6BA2               	clrf	(??_ScheduleTasks+1)& (0+255),b
  3993  0018FA  0009               	tblrd		*+
  3994  0018FC  50F5               	movf	tablat,w,c
  3995  0018FE  5DA1               	subwf	??_ScheduleTasks& (0+255),w,b
  3996  001900  0009               	tblrd		*+
  3997  001902  50F5               	movf	tablat,w,c
  3998  001904  59A2               	subwfb	(??_ScheduleTasks+1)& (0+255),w,b
  3999  001906  B0D8               	btfsc	status,0,c
  4000  001908  0012               	return	
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;os_sched.c: 106: {
  4004                           ;os_sched.c: 108: TaskTable[ActiveTaskIndex].Counter++;
  4005                           
  4006                           ; BSR set to: 0
  4007                           
  4008                           ; BSR set to: 0
  4009  00190A  51A5               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4010  00190C  0D08               	mullw	8
  4011  00190E  0E03               	movlw	3
  4012  001910  26F3               	addwf	prodl,f,c
  4013  001912  0E00               	movlw	0
  4014  001914  22F4               	addwfc	prodh,f,c
  4015  001916  0EBC               	movlw	low _TaskTable
  4016  001918  24F3               	addwf	prodl,w,c
  4017  00191A  6ED9               	movwf	fsr2l,c
  4018  00191C  0E03               	movlw	high _TaskTable
  4019  00191E  20F4               	addwfc	prodh,w,c
  4020  001920  6EDA               	movwf	fsr2h,c
  4021  001922  2ADE               	incf	postinc2,f,c
  4022  001924  0E00               	movlw	0
  4023  001926  22DD               	addwfc	postdec2,f,c
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;os_sched.c: 110: if (TaskTable[ActiveTaskIndex].Counter >= (TaskTable[ActiveTaskIndex].
      +                          TimeoutMs/((((UINT16)(1000))*((UINT16)(1)))/1000)))
  4027  001928  51A5               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4028  00192A  0D08               	mullw	8
  4029  00192C  0E05               	movlw	5
  4030  00192E  26F3               	addwf	prodl,f,c
  4031  001930  0E00               	movlw	0
  4032  001932  22F4               	addwfc	prodh,f,c
  4033  001934  0EBC               	movlw	low _TaskTable
  4034  001936  24F3               	addwf	prodl,w,c
  4035  001938  6ED9               	movwf	fsr2l,c
  4036  00193A  0E03               	movlw	high _TaskTable
  4037  00193C  20F4               	addwfc	prodh,w,c
  4038  00193E  6EDA               	movwf	fsr2h,c
  4039  001940  51A5               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4040  001942  0D08               	mullw	8
  4041  001944  0E03               	movlw	3
  4042  001946  26F3               	addwf	prodl,f,c
  4043  001948  0E00               	movlw	0
  4044  00194A  22F4               	addwfc	prodh,f,c
  4045  00194C  0EBC               	movlw	low _TaskTable
  4046  00194E  24F3               	addwf	prodl,w,c
  4047  001950  6EE1               	movwf	fsr1l,c
  4048  001952  0E03               	movlw	high _TaskTable
  4049  001954  20F4               	addwfc	prodh,w,c
  4050  001956  6EE2               	movwf	fsr1h,c
  4051  001958  50DE               	movf	postinc2,w,c
  4052  00195A  5CE6               	subwf	postinc1,w,c
  4053  00195C  50DE               	movf	postinc2,w,c
  4054  00195E  58E6               	subwfb	postinc1,w,c
  4055  001960  A0D8               	btfss	status,0,c
  4056  001962  D04E               	goto	l672
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;os_sched.c: 111: {
  4060                           ;os_sched.c: 112: TaskTable[ActiveTaskIndex].Counter = ((UINT8)(0));
  4061  001964  51A5               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4062  001966  0D08               	mullw	8
  4063  001968  0E03               	movlw	3
  4064  00196A  26F3               	addwf	prodl,f,c
  4065  00196C  0E00               	movlw	0
  4066  00196E  22F4               	addwfc	prodh,f,c
  4067  001970  0EBC               	movlw	low _TaskTable
  4068  001972  24F3               	addwf	prodl,w,c
  4069  001974  6ED9               	movwf	fsr2l,c
  4070  001976  0E03               	movlw	high _TaskTable
  4071  001978  20F4               	addwfc	prodh,w,c
  4072  00197A  6EDA               	movwf	fsr2h,c
  4073  00197C  0E00               	movlw	0
  4074  00197E  6EDE               	movwf	postinc2,c
  4075  001980  0E00               	movlw	0
  4076  001982  6EDD               	movwf	postdec2,c
  4077                           
  4078                           ;os_sched.c: 113: TaskTable[ActiveTaskIndex].State = TaskRunning;
  4079  001984  51A5               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4080  001986  0D08               	mullw	8
  4081  001988  0E02               	movlw	2
  4082  00198A  26F3               	addwf	prodl,f,c
  4083  00198C  0E00               	movlw	0
  4084  00198E  22F4               	addwfc	prodh,f,c
  4085  001990  0EBC               	movlw	low _TaskTable
  4086  001992  24F3               	addwf	prodl,w,c
  4087  001994  6ED9               	movwf	fsr2l,c
  4088  001996  0E03               	movlw	high _TaskTable
  4089  001998  20F4               	addwfc	prodh,w,c
  4090  00199A  6EDA               	movwf	fsr2h,c
  4091  00199C  0E01               	movlw	1
  4092  00199E  6EDF               	movwf	indf2,c
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;os_sched.c: 114: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4096  0019A0  51A5               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4097  0019A2  0D08               	mullw	8
  4098  0019A4  0EBC               	movlw	low _TaskTable
  4099  0019A6  24F3               	addwf	prodl,w,c
  4100  0019A8  6ED9               	movwf	fsr2l,c
  4101  0019AA  0E03               	movlw	high _TaskTable
  4102  0019AC  20F4               	addwfc	prodh,w,c
  4103  0019AE  6EDA               	movwf	fsr2h,c
  4104  0019B0  D801               	call	u9738
  4105  0019B2  D017               	goto	u9739
  4106  0019B4                     u9738:
  4107  0019B4  0005               	push	
  4108  0019B6  6EFA               	movwf	pclath,c
  4109  0019B8  50DE               	movf	postinc2,w,c
  4110  0019BA  6EFD               	movwf	tosl,c
  4111  0019BC  50DE               	movf	postinc2,w,c
  4112  0019BE  6EFE               	movwf	tosh,c
  4113  0019C0  50F8               	movf	tblptru,w,c
  4114  0019C2  6EFF               	movwf	tosu,c
  4115  0019C4  50FA               	movf	pclath,w,c
  4116  0019C6  51A5               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4117  0019C8  0D08               	mullw	8
  4118  0019CA  0E07               	movlw	7
  4119  0019CC  26F3               	addwf	prodl,f,c
  4120  0019CE  0E00               	movlw	0
  4121  0019D0  22F4               	addwfc	prodh,f,c
  4122  0019D2  0EBC               	movlw	low _TaskTable
  4123  0019D4  24F3               	addwf	prodl,w,c
  4124  0019D6  6ED9               	movwf	fsr2l,c
  4125  0019D8  0E03               	movlw	high _TaskTable
  4126  0019DA  20F4               	addwfc	prodh,w,c
  4127  0019DC  6EDA               	movwf	fsr2h,c
  4128  0019DE  50DF               	movf	indf2,w,c
  4129  0019E0  0012               	return		;indir
  4130  0019E2                     u9739:
  4131                           
  4132                           ;os_sched.c: 115: TaskTable[ActiveTaskIndex].State = TaskIdle;
  4133  0019E2  0100               	movlb	0	; () banked
  4134  0019E4  51A5               	movf	ScheduleTasks@ActiveTaskIndex& (0+255),w,b
  4135  0019E6  0D08               	mullw	8
  4136  0019E8  0E02               	movlw	2
  4137  0019EA  26F3               	addwf	prodl,f,c
  4138  0019EC  0E00               	movlw	0
  4139  0019EE  22F4               	addwfc	prodh,f,c
  4140  0019F0  0EBC               	movlw	low _TaskTable
  4141  0019F2  24F3               	addwf	prodl,w,c
  4142  0019F4  6ED9               	movwf	fsr2l,c
  4143  0019F6  0E03               	movlw	high _TaskTable
  4144  0019F8  20F4               	addwfc	prodh,w,c
  4145  0019FA  6EDA               	movwf	fsr2h,c
  4146  0019FC  0E00               	movlw	0
  4147  0019FE  6EDF               	movwf	indf2,c
  4148  001A00                     l672:
  4149                           
  4150                           ; BSR set to: 0
  4151                           
  4152                           ; BSR set to: 0
  4153                           
  4154                           ;os_sched.c: 117: else
  4155                           ;os_sched.c: 118: {
  4156                           
  4157                           ; BSR set to: 0
  4158  001A00  2BA5               	incf	ScheduleTasks@ActiveTaskIndex& (0+255),f,b
  4159  001A02  D774               	goto	l10345
  4160  001A04                     __end_of_ScheduleTasks:
  4161                           	opt stack 0
  4162                           tosu	equ	0xFFF
  4163                           tosh	equ	0xFFE
  4164                           tosl	equ	0xFFD
  4165                           pclath	equ	0xFFA
  4166                           tblptru	equ	0xFF8
  4167                           tblptrh	equ	0xFF7
  4168                           tblptrl	equ	0xFF6
  4169                           tablat	equ	0xFF5
  4170                           prodh	equ	0xFF4
  4171                           prodl	equ	0xFF3
  4172                           intcon	equ	0xFF2
  4173                           intcon2	equ	0xFF1
  4174                           intcon3	equ	0xFF0
  4175                           postinc0	equ	0xFEE
  4176                           wreg	equ	0xFE8
  4177                           postinc1	equ	0xFE6
  4178                           postdec1	equ	0xFE5
  4179                           fsr1h	equ	0xFE2
  4180                           fsr1l	equ	0xFE1
  4181                           indf2	equ	0xFDF
  4182                           postinc2	equ	0xFDE
  4183                           postdec2	equ	0xFDD
  4184                           fsr2h	equ	0xFDA
  4185                           fsr2l	equ	0xFD9
  4186                           status	equ	0xFD8
  4187                           
  4188 ;; *************** function _InitializeTasks *****************
  4189 ;; Defined at:
  4190 ;;		line 79 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;		None
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;  ActiveTaskIn    1   67[BANK0 ] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4205 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4206 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4207 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4208 ;;Total ram usage:        3 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; Hardware stack levels required when called:   19
  4211 ;; This function calls:
  4212 ;;		_I2cSlv_MainTask
  4213 ;;		_Led_MainTask
  4214 ;;		_MyApp_Task
  4215 ;;		_Rtcm_MainTask
  4216 ;;		_Term_MainTask
  4217 ;;		_UsbDevice_MainTask
  4218 ;;		_Wdg_MainTask
  4219 ;; This function is called by:
  4220 ;;		_Sch_MainScheduler
  4221 ;; This function uses a non-reentrant model
  4222 ;;
  4223                           
  4224                           	psect	text15
  4225  0034FE                     __ptext15:
  4226                           	opt stack 0
  4227  0034FE                     _InitializeTasks:
  4228                           	opt stack 10
  4229                           
  4230                           ;os_sched.c: 82: UINT8 ActiveTaskIndex = 0u;
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;incstack = 0
  4234  0034FE  0E00               	movlw	0
  4235  003500  0100               	movlb	0	; () banked
  4236  003502  6FA3               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4237                           
  4238                           ;os_sched.c: 85: for (ActiveTaskIndex = 0u; ActiveTaskIndex < TaskNumber; ActiveTaskInde
      +                          x++)
  4239  003504  0E00               	movlw	0
  4240  003506  6FA3               	movwf	InitializeTasks@ActiveTaskIndex& (0+255),b
  4241  003508                     l10333:
  4242                           
  4243                           ; BSR set to: 0
  4244  003508  0E91               	movlw	low _TaskNumber
  4245  00350A  6EF6               	movwf	tblptrl,c
  4246  00350C                     	if	1	;There is more than 1 active tblptr byte
  4247  00350C  0EFD               	movlw	high _TaskNumber
  4248  00350E  6EF7               	movwf	tblptrh,c
  4249  003510                     	endif
  4250  003510                     	if	0	;There are less than 3 active tblptr bytes
  4251  003510                     	endif
  4252  003510  51A3               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4253  003512  6FA1               	movwf	??_InitializeTasks& (0+255),b
  4254  003514  6BA2               	clrf	(??_InitializeTasks+1)& (0+255),b
  4255  003516  0009               	tblrd		*+
  4256  003518  50F5               	movf	tablat,w,c
  4257  00351A  5DA1               	subwf	??_InitializeTasks& (0+255),w,b
  4258  00351C  0009               	tblrd		*+
  4259  00351E  50F5               	movf	tablat,w,c
  4260  003520  59A2               	subwfb	(??_InitializeTasks+1)& (0+255),w,b
  4261  003522  B0D8               	btfsc	status,0,c
  4262  003524  0012               	return	
  4263                           
  4264                           ; BSR set to: 0
  4265                           ;os_sched.c: 86: {
  4266                           ;os_sched.c: 87: TaskTable[ActiveTaskIndex].Task(TaskTable[ActiveTaskIndex].Options);
  4267                           
  4268                           ; BSR set to: 0
  4269                           
  4270                           ; BSR set to: 0
  4271  003526  51A3               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4272  003528  0D08               	mullw	8
  4273  00352A  0EBC               	movlw	low _TaskTable
  4274  00352C  24F3               	addwf	prodl,w,c
  4275  00352E  6ED9               	movwf	fsr2l,c
  4276  003530  0E03               	movlw	high _TaskTable
  4277  003532  20F4               	addwfc	prodh,w,c
  4278  003534  6EDA               	movwf	fsr2h,c
  4279  003536  D801               	call	u9698
  4280  003538  D017               	goto	u9699
  4281  00353A                     u9698:
  4282  00353A  0005               	push	
  4283  00353C  6EFA               	movwf	pclath,c
  4284  00353E  50DE               	movf	postinc2,w,c
  4285  003540  6EFD               	movwf	tosl,c
  4286  003542  50DE               	movf	postinc2,w,c
  4287  003544  6EFE               	movwf	tosh,c
  4288  003546  50F8               	movf	tblptru,w,c
  4289  003548  6EFF               	movwf	tosu,c
  4290  00354A  50FA               	movf	pclath,w,c
  4291  00354C  51A3               	movf	InitializeTasks@ActiveTaskIndex& (0+255),w,b
  4292  00354E  0D08               	mullw	8
  4293  003550  0E07               	movlw	7
  4294  003552  26F3               	addwf	prodl,f,c
  4295  003554  0E00               	movlw	0
  4296  003556  22F4               	addwfc	prodh,f,c
  4297  003558  0EBC               	movlw	low _TaskTable
  4298  00355A  24F3               	addwf	prodl,w,c
  4299  00355C  6ED9               	movwf	fsr2l,c
  4300  00355E  0E03               	movlw	high _TaskTable
  4301  003560  20F4               	addwfc	prodh,w,c
  4302  003562  6EDA               	movwf	fsr2h,c
  4303  003564  50DF               	movf	indf2,w,c
  4304  003566  0012               	return		;indir
  4305  003568                     u9699:
  4306  003568  0100               	movlb	0	; () banked
  4307  00356A  2BA3               	incf	InitializeTasks@ActiveTaskIndex& (0+255),f,b
  4308  00356C  D7CD               	goto	l10333
  4309  00356E                     __end_of_InitializeTasks:
  4310                           	opt stack 0
  4311                           tosu	equ	0xFFF
  4312                           tosh	equ	0xFFE
  4313                           tosl	equ	0xFFD
  4314                           pclath	equ	0xFFA
  4315                           tblptru	equ	0xFF8
  4316                           tblptrh	equ	0xFF7
  4317                           tblptrl	equ	0xFF6
  4318                           tablat	equ	0xFF5
  4319                           prodh	equ	0xFF4
  4320                           prodl	equ	0xFF3
  4321                           intcon	equ	0xFF2
  4322                           intcon2	equ	0xFF1
  4323                           intcon3	equ	0xFF0
  4324                           postinc0	equ	0xFEE
  4325                           wreg	equ	0xFE8
  4326                           postinc1	equ	0xFE6
  4327                           postdec1	equ	0xFE5
  4328                           fsr1h	equ	0xFE2
  4329                           fsr1l	equ	0xFE1
  4330                           indf2	equ	0xFDF
  4331                           postinc2	equ	0xFDE
  4332                           postdec2	equ	0xFDD
  4333                           fsr2h	equ	0xFDA
  4334                           fsr2l	equ	0xFD9
  4335                           status	equ	0xFD8
  4336                           
  4337 ;; *************** function _MyApp_Task *****************
  4338 ;; Defined at:
  4339 ;;		line 73 in file "../Source/c/04_App/app.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  Options         1    wreg     unsigned char 
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;  Options         1    0[COMRAM] unsigned char 
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  1    wreg      void 
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0, cstack
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4357 ;;Total ram usage:        0 bytes
  4358 ;; Hardware stack levels used:    1
  4359 ;; Hardware stack levels required when called:   10
  4360 ;; This function calls:
  4361 ;;		_Led_SetLedBlinkTime
  4362 ;;		_Led_SetLedStatus
  4363 ;; This function is called by:
  4364 ;;		_InitializeTasks
  4365 ;;		_ScheduleTasks
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text16
  4370  003DC2                     __ptext16:
  4371                           	opt stack 0
  4372  003DC2                     _MyApp_Task:
  4373                           	opt stack 18
  4374                           
  4375                           ;app.c: 75: switch (SystemState)
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;incstack = 0
  4379  003DC2  D013               	goto	l1924
  4380  003DC4                     
  4381                           ;app.c: 80: Led_SetLedBlinkTime(1u,100,900);
  4382  003DC4  0E00               	movlw	0
  4383  003DC6  0100               	movlb	0	; () banked
  4384  003DC8  6F76               	movwf	(Led_SetLedBlinkTime@OnTimeMs+1)& (0+255),b
  4385  003DCA  0E64               	movlw	100
  4386  003DCC  6F75               	movwf	Led_SetLedBlinkTime@OnTimeMs& (0+255),b
  4387  003DCE  0E03               	movlw	3
  4388  003DD0  6F78               	movwf	(Led_SetLedBlinkTime@OffTimeMs+1)& (0+255),b
  4389  003DD2  0E84               	movlw	132
  4390  003DD4  6F77               	movwf	Led_SetLedBlinkTime@OffTimeMs& (0+255),b
  4391  003DD6  0E01               	movlw	1
  4392  003DD8  ECBD  F01C         	call	_Led_SetLedBlinkTime
  4393                           
  4394                           ;app.c: 81: Led_SetLedStatus(1u, LED_STS_BLINK);
  4395  003DDC  0E03               	movlw	3
  4396  003DDE  0100               	movlb	0	; () banked
  4397  003DE0  6F75               	movwf	Led_SetLedStatus@LedSts& (0+255),b
  4398  003DE2  0E01               	movlw	1
  4399  003DE4  EC75  F01F         	call	_Led_SetLedStatus
  4400                           
  4401                           ;app.c: 93: }
  4402                           
  4403                           ;app.c: 92: break;
  4404                           
  4405                           ;app.c: 91: default:
  4406                           
  4407                           ;app.c: 88: break;
  4408                           
  4409                           ;app.c: 85: case RunningState:
  4410                           
  4411                           ;app.c: 82: break;
  4412  003DE8  0012               	return	
  4413  003DEA                     l1924:
  4414  003DEA  0100               	movlb	0	; () banked
  4415  003DEC  51CD               	movf	_SystemState& (0+255),w,b
  4416                           
  4417                           ; Switch size 1, requested type "space"
  4418                           ; Number of cases is 2, Range of values is 0 to 1
  4419                           ; switch strategies available:
  4420                           ; Name         Instructions Cycles
  4421                           ; simple_byte            7     4 (average)
  4422                           ;	Chosen strategy is simple_byte
  4423  003DEE  0A00               	xorlw	0	; case 0
  4424  003DF0  B4D8               	btfsc	status,2,c
  4425  003DF2  D7E8               	goto	l1925
  4426  003DF4  0A01               	xorlw	1	; case 1
  4427  003DF6  0012               	return	
  4428  003DF8                     __end_of_MyApp_Task:
  4429                           	opt stack 0
  4430                           tosu	equ	0xFFF
  4431                           tosh	equ	0xFFE
  4432                           tosl	equ	0xFFD
  4433                           pclath	equ	0xFFA
  4434                           tblptru	equ	0xFF8
  4435                           tblptrh	equ	0xFF7
  4436                           tblptrl	equ	0xFF6
  4437                           tablat	equ	0xFF5
  4438                           prodh	equ	0xFF4
  4439                           prodl	equ	0xFF3
  4440                           intcon	equ	0xFF2
  4441                           intcon2	equ	0xFF1
  4442                           intcon3	equ	0xFF0
  4443                           postinc0	equ	0xFEE
  4444                           wreg	equ	0xFE8
  4445                           postinc1	equ	0xFE6
  4446                           postdec1	equ	0xFE5
  4447                           fsr1h	equ	0xFE2
  4448                           fsr1l	equ	0xFE1
  4449                           indf2	equ	0xFDF
  4450                           postinc2	equ	0xFDE
  4451                           postdec2	equ	0xFDD
  4452                           fsr2h	equ	0xFDA
  4453                           fsr2l	equ	0xFD9
  4454                           status	equ	0xFD8
  4455                           
  4456 ;; *************** function _Term_MainTask *****************
  4457 ;; Defined at:
  4458 ;;		line 809 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  Options         1    wreg     unsigned char 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;  Options         1    0[COMRAM] unsigned char 
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4476 ;;Total ram usage:        0 bytes
  4477 ;; Hardware stack levels used:    1
  4478 ;; Hardware stack levels required when called:   14
  4479 ;; This function calls:
  4480 ;;		_Term_MainSm
  4481 ;; This function is called by:
  4482 ;;		_InitializeTasks
  4483 ;;		_ScheduleTasks
  4484 ;; This function uses a non-reentrant model
  4485 ;;
  4486                           
  4487                           	psect	text17
  4488  0041E4                     __ptext17:
  4489                           	opt stack 0
  4490  0041E4                     _Term_MainTask:
  4491                           	opt stack 14
  4492                           
  4493                           ;term.c: 811: switch (SystemState)
  4494                           
  4495                           ;incstack = 0
  4496  0041E4  D003               	goto	l1872
  4497  0041E6                     
  4498                           ;term.c: 822: Term_MainSm();
  4499  0041E6  EC83  F002         	call	_Term_MainSm	;wreg free
  4500                           
  4501                           ;term.c: 829: }
  4502                           
  4503                           ;term.c: 828: break;
  4504                           
  4505                           ;term.c: 827: default:
  4506                           
  4507                           ;term.c: 824: break;
  4508  0041EA  0012               	return	
  4509  0041EC                     l1872:
  4510  0041EC  0100               	movlb	0	; () banked
  4511  0041EE  51CD               	movf	_SystemState& (0+255),w,b
  4512                           
  4513                           ; Switch size 1, requested type "space"
  4514                           ; Number of cases is 2, Range of values is 0 to 1
  4515                           ; switch strategies available:
  4516                           ; Name         Instructions Cycles
  4517                           ; simple_byte            7     4 (average)
  4518                           ;	Chosen strategy is simple_byte
  4519  0041F0  0A00               	xorlw	0	; case 0
  4520  0041F2  B4D8               	btfsc	status,2,c
  4521  0041F4  0012               	return	
  4522  0041F6  0A01               	xorlw	1	; case 1
  4523  0041F8  A4D8               	btfss	status,2,c
  4524  0041FA  0012               	return	
  4525  0041FC  D7F4               	goto	l1875
  4526  0041FE                     __end_of_Term_MainTask:
  4527                           	opt stack 0
  4528                           tosu	equ	0xFFF
  4529                           tosh	equ	0xFFE
  4530                           tosl	equ	0xFFD
  4531                           pclath	equ	0xFFA
  4532                           tblptru	equ	0xFF8
  4533                           tblptrh	equ	0xFF7
  4534                           tblptrl	equ	0xFF6
  4535                           tablat	equ	0xFF5
  4536                           prodh	equ	0xFF4
  4537                           prodl	equ	0xFF3
  4538                           intcon	equ	0xFF2
  4539                           intcon2	equ	0xFF1
  4540                           intcon3	equ	0xFF0
  4541                           postinc0	equ	0xFEE
  4542                           wreg	equ	0xFE8
  4543                           postinc1	equ	0xFE6
  4544                           postdec1	equ	0xFE5
  4545                           fsr1h	equ	0xFE2
  4546                           fsr1l	equ	0xFE1
  4547                           indf2	equ	0xFDF
  4548                           postinc2	equ	0xFDE
  4549                           postdec2	equ	0xFDD
  4550                           fsr2h	equ	0xFDA
  4551                           fsr2l	equ	0xFD9
  4552                           status	equ	0xFD8
  4553                           
  4554 ;; *************** function _Rtcm_MainTask *****************
  4555 ;; Defined at:
  4556 ;;		line 99 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  Options         1    wreg     unsigned char 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  Options         1    0[COMRAM] unsigned char 
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4574 ;;Total ram usage:        0 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:   12
  4577 ;; This function calls:
  4578 ;;		_Rtcc_AlarmConfig
  4579 ;;		_Rtcc_LockRtc
  4580 ;;		_Rtcc_RtcConfig
  4581 ;;		_Rtcc_SetRtcStatus
  4582 ;;		_Rtcc_UnlockRtc
  4583 ;;		_Rtcm_GetRtccDate
  4584 ;;		_Rtcm_SetRtccDate
  4585 ;; This function is called by:
  4586 ;;		_InitializeTasks
  4587 ;;		_ScheduleTasks
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text18
  4592  0031FC                     __ptext18:
  4593                           	opt stack 0
  4594  0031FC                     _Rtcm_MainTask:
  4595                           	opt stack 16
  4596                           
  4597                           ;rtcm.c: 101: switch (SystemState)
  4598                           
  4599                           ;incstack = 0
  4600  0031FC  D03D               	goto	l1654
  4601  0031FE                     l1655:
  4602                           
  4603                           ; BSR set to: 0
  4604                           ;rtcm.c: 106: T1CONbits.T1OSCEN = 1u;
  4605  0031FE  86CD               	bsf	4045,3,c	;volatile
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;rtcm.c: 108: RtcConfig.RtcOutPinEnable = 0u;
  4609  003200  0E00               	movlw	0
  4610  003202  0101               	movlb	1	; () banked
  4611  003204  6FFC               	movwf	_RtcConfig& (0+255),b
  4612                           
  4613                           ;rtcm.c: 109: RtcConfig.RtcOutputSelectBit = RtccAlarmPulseOnRtccPin;
  4614  003206  0E00               	movlw	0
  4615  003208  6FFD               	movwf	(_RtcConfig+1)& (0+255),b
  4616                           
  4617                           ;rtcm.c: 110: RtcConfig.IntEnable = EnableInt;
  4618  00320A  0E01               	movlw	1
  4619  00320C  6FFE               	movwf	(_RtcConfig+2)& (0+255),b
  4620                           
  4621                           ;rtcm.c: 111: RtcConfig.IntPriority = 1u;
  4622  00320E  0E01               	movlw	1
  4623  003210  6FFF               	movwf	(_RtcConfig+3)& (0+255),b
  4624                           
  4625                           ;rtcm.c: 114: AlCfg.RtcAlarmEnable = 1u;
  4626  003212  0E01               	movlw	1
  4627  003214  6FF8               	movwf	_AlCfg& (0+255),b
  4628                           
  4629                           ;rtcm.c: 115: AlCfg.RtcChimeEnable = 1u;
  4630  003216  0E01               	movlw	1
  4631  003218  6FF9               	movwf	(_AlCfg+1)& (0+255),b
  4632                           
  4633                           ;rtcm.c: 116: AlCfg.AlarmMask = EverySecond;
  4634  00321A  0E01               	movlw	1
  4635  00321C  6FFA               	movwf	(_AlCfg+2)& (0+255),b
  4636                           
  4637                           ;rtcm.c: 117: AlCfg.AlarmRepeat = 0;
  4638  00321E  0E00               	movlw	0
  4639  003220  6FFB               	movwf	(_AlCfg+3)& (0+255),b
  4640                           
  4641                           ; BSR set to: 1
  4642                           ;rtcm.c: 120: Rtcc_UnlockRtc();
  4643  003222  EC6D  F021         	call	_Rtcc_UnlockRtc	;wreg free
  4644                           
  4645                           ;rtcm.c: 122: Rtcc_RtcConfig(&RtcConfig);
  4646  003226  0EFC               	movlw	low _RtcConfig
  4647  003228  0100               	movlb	0	; () banked
  4648  00322A  6F76               	movwf	Rtcc_RtcConfig@RtcConfig& (0+255),b
  4649  00322C  0E01               	movlw	high _RtcConfig
  4650  00322E  6F77               	movwf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),b
  4651  003230  ECA1  F016         	call	_Rtcc_RtcConfig	;wreg free
  4652                           
  4653                           ;rtcm.c: 123: Rtcc_AlarmConfig(&AlCfg);
  4654  003234  0EF8               	movlw	low _AlCfg
  4655  003236  0100               	movlb	0	; () banked
  4656  003238  6F75               	movwf	Rtcc_AlarmConfig@AlarmConfig& (0+255),b
  4657  00323A  0E01               	movlw	high _AlCfg
  4658  00323C  6F76               	movwf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),b
  4659  00323E  ECB7  F01A         	call	_Rtcc_AlarmConfig	;wreg free
  4660                           
  4661                           ;rtcm.c: 125: Rtcc_SetRtcStatus(1u);
  4662  003242  0E01               	movlw	1
  4663  003244  EC30  F021         	call	_Rtcc_SetRtcStatus
  4664                           
  4665                           ;rtcm.c: 127: Rtcc_LockRtc();
  4666  003248  EC75  F021         	call	_Rtcc_LockRtc	;wreg free
  4667                           
  4668                           ;rtcm.c: 129: Rtcm_SetRtccDate(Rtcm_SystemDate);
  4669  00324C  EE23  F014         	lfsr	2,_Rtcm_SystemDate
  4670  003250  EE00  F081         	lfsr	0,Rtcm_SetRtccDate@Date
  4671  003254  0E07               	movlw	7
  4672  003256                     u7081:
  4673  003256  CFDB FFEB          	movff	plusw2,plusw0
  4674  00325A  06E8               	decf	wreg,f,c
  4675  00325C  E2FC               	bc	u7081
  4676  00325E  EC93  F01C         	call	_Rtcm_SetRtccDate	;wreg free
  4677                           
  4678                           ;rtcm.c: 154: break;
  4679  003262  0012               	return	
  4680  003264                     
  4681                           ;rtcm.c: 159: Rtcm_SystemDate = Rtcm_GetRtccDate();
  4682  003264  EC22  F01B         	call	_Rtcm_GetRtccDate	;wreg free
  4683  003268  EE23  F014         	lfsr	2,_Rtcm_SystemDate
  4684  00326C  0E07               	movlw	7
  4685  00326E                     u7091:
  4686  00326E  CFEB FFDB          	movff	plusw0,plusw2
  4687  003272  06E8               	decf	wreg,f,c
  4688  003274  E2FC               	bc	u7091
  4689                           
  4690                           ;rtcm.c: 165: }
  4691                           
  4692                           ;rtcm.c: 164: break;
  4693                           
  4694                           ;rtcm.c: 163: default:
  4695                           
  4696                           ;rtcm.c: 160: break;
  4697  003276  0012               	return	
  4698  003278                     l1654:
  4699  003278  0100               	movlb	0	; () banked
  4700  00327A  51CD               	movf	_SystemState& (0+255),w,b
  4701                           
  4702                           ; Switch size 1, requested type "space"
  4703                           ; Number of cases is 2, Range of values is 0 to 1
  4704                           ; switch strategies available:
  4705                           ; Name         Instructions Cycles
  4706                           ; simple_byte            7     4 (average)
  4707                           ;	Chosen strategy is simple_byte
  4708  00327C  0A00               	xorlw	0	; case 0
  4709  00327E  B4D8               	btfsc	status,2,c
  4710  003280  D7BE               	goto	l1655
  4711  003282  0A01               	xorlw	1	; case 1
  4712  003284  A4D8               	btfss	status,2,c
  4713  003286  0012               	return	
  4714  003288  D7ED               	goto	l1657
  4715  00328A                     __end_of_Rtcm_MainTask:
  4716                           	opt stack 0
  4717                           tosu	equ	0xFFF
  4718                           tosh	equ	0xFFE
  4719                           tosl	equ	0xFFD
  4720                           pclath	equ	0xFFA
  4721                           tblptru	equ	0xFF8
  4722                           tblptrh	equ	0xFF7
  4723                           tblptrl	equ	0xFF6
  4724                           tablat	equ	0xFF5
  4725                           prodh	equ	0xFF4
  4726                           prodl	equ	0xFF3
  4727                           intcon	equ	0xFF2
  4728                           intcon2	equ	0xFF1
  4729                           intcon3	equ	0xFF0
  4730                           postinc0	equ	0xFEE
  4731                           plusw0	equ	0xFEB
  4732                           wreg	equ	0xFE8
  4733                           postinc1	equ	0xFE6
  4734                           postdec1	equ	0xFE5
  4735                           fsr1h	equ	0xFE2
  4736                           fsr1l	equ	0xFE1
  4737                           indf2	equ	0xFDF
  4738                           postinc2	equ	0xFDE
  4739                           postdec2	equ	0xFDD
  4740                           plusw2	equ	0xFDB
  4741                           fsr2h	equ	0xFDA
  4742                           fsr2l	equ	0xFD9
  4743                           status	equ	0xFD8
  4744                           
  4745 ;; *************** function _Led_MainTask *****************
  4746 ;; Defined at:
  4747 ;;		line 298 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  Options         1    wreg     unsigned char 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  Options         1    0[COMRAM] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4763 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4764 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4765 ;;Total ram usage:        1 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:   12
  4768 ;; This function calls:
  4769 ;;		_LedStateMachine
  4770 ;; This function is called by:
  4771 ;;		_InitializeTasks
  4772 ;;		_ScheduleTasks
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           	psect	text19
  4777  002238                     __ptext19:
  4778                           	opt stack 0
  4779  002238                     _Led_MainTask:
  4780                           	opt stack 16
  4781                           
  4782                           ;led.c: 300: switch (SystemState)
  4783                           
  4784                           ;incstack = 0
  4785  002238  D05C               	goto	l1568
  4786  00223A                     l1569:
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;led.c: 305: TRISDbits.TRISD4 = ((UINT8)(0));
  4790  00223A  9895               	bcf	3989,4,c	;volatile
  4791                           
  4792                           ;led.c: 306: TRISDbits.TRISD5 = ((UINT8)(0));
  4793  00223C  9A95               	bcf	3989,5,c	;volatile
  4794                           
  4795                           ;led.c: 307: TRISDbits.TRISD6 = ((UINT8)(0));
  4796  00223E  9C95               	bcf	3989,6,c	;volatile
  4797                           
  4798                           ;led.c: 308: PORTDbits.RD4 = ((UINT8)(0));
  4799  002240  9883               	bcf	3971,4,c	;volatile
  4800                           
  4801                           ;led.c: 309: PORTDbits.RD5 = ((UINT8)(0));
  4802  002242  9A83               	bcf	3971,5,c	;volatile
  4803                           
  4804                           ;led.c: 310: PORTDbits.RD6 = ((UINT8)(0));
  4805  002244  9C83               	bcf	3971,6,c	;volatile
  4806                           
  4807                           ;led.c: 311: break;
  4808  002246  0012               	return	
  4809  002248                     
  4810                           ; BSR set to: 0
  4811                           ;led.c: 316: PORTDbits.RD4 = LedStateMachine(1u,&Led1Sts,&Led1OutSts,&Led1Blink,&Led1Pul
      +                          se);
  4812                           
  4813                           ; BSR set to: 0
  4814  002248  0EDC               	movlw	low _Led1Sts
  4815  00224A  6F81               	movwf	LedStateMachine@LedSts& (0+255),b
  4816  00224C  0E00               	movlw	high _Led1Sts
  4817  00224E  6F82               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  4818  002250  0EDB               	movlw	low _Led1OutSts
  4819  002252  6F83               	movwf	LedStateMachine@LedOut& (0+255),b
  4820  002254  0E00               	movlw	high _Led1OutSts
  4821  002256  6F84               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  4822  002258  0EB3               	movlw	low _Led1Blink
  4823  00225A  6F85               	movwf	LedStateMachine@LedBlink& (0+255),b
  4824  00225C  0E03               	movlw	high _Led1Blink
  4825  00225E  6F86               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  4826  002260  0E29               	movlw	low _Led1Pulse
  4827  002262  6F87               	movwf	LedStateMachine@LedPulse& (0+255),b
  4828  002264  0E02               	movlw	high _Led1Pulse
  4829  002266  6F88               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  4830  002268  0E01               	movlw	1
  4831  00226A  EC4D  F016         	call	_LedStateMachine
  4832  00226E  0100               	movlb	0	; () banked
  4833  002270  6F8C               	movwf	??_Led_MainTask& (0+255),b
  4834  002272  3B8C               	swapf	??_Led_MainTask& (0+255),f,b
  4835  002274  5083               	movf	3971,w,c	;volatile
  4836  002276  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4837  002278  0BEF               	andlw	-17
  4838  00227A  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4839  00227C  6E83               	movwf	3971,c	;volatile
  4840                           
  4841                           ;led.c: 318: PORTDbits.RD5 = LedStateMachine(2u,&Led2Sts,&Led2OutSts,&Led2Blink,&Led2Pul
      +                          se);
  4842  00227E  0EDA               	movlw	low _Led2Sts
  4843  002280  6F81               	movwf	LedStateMachine@LedSts& (0+255),b
  4844  002282  0E00               	movlw	high _Led2Sts
  4845  002284  6F82               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  4846  002286  0ED9               	movlw	low _Led2OutSts
  4847  002288  6F83               	movwf	LedStateMachine@LedOut& (0+255),b
  4848  00228A  0E00               	movlw	high _Led2OutSts
  4849  00228C  6F84               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  4850  00228E  0E0C               	movlw	low _Led2Blink
  4851  002290  6F85               	movwf	LedStateMachine@LedBlink& (0+255),b
  4852  002292  0E02               	movlw	high _Led2Blink
  4853  002294  6F86               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  4854  002296  0E23               	movlw	low _Led2Pulse
  4855  002298  6F87               	movwf	LedStateMachine@LedPulse& (0+255),b
  4856  00229A  0E02               	movlw	high _Led2Pulse
  4857  00229C  6F88               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  4858  00229E  0E02               	movlw	2
  4859  0022A0  EC4D  F016         	call	_LedStateMachine
  4860  0022A4  0100               	movlb	0	; () banked
  4861  0022A6  6F8C               	movwf	??_Led_MainTask& (0+255),b
  4862  0022A8  3B8C               	swapf	??_Led_MainTask& (0+255),f,b
  4863  0022AA  478C               	rlncf	??_Led_MainTask& (0+255),f,b
  4864  0022AC  5083               	movf	3971,w,c	;volatile
  4865  0022AE  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4866  0022B0  0BDF               	andlw	-33
  4867  0022B2  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4868  0022B4  6E83               	movwf	3971,c	;volatile
  4869                           
  4870                           ;led.c: 320: PORTDbits.RD6 = LedStateMachine(3u,&Led3Sts,&Led3OutSts,&Led3Blink,&Led3Pul
      +                          se);
  4871  0022B6  0ED8               	movlw	low _Led3Sts
  4872  0022B8  6F81               	movwf	LedStateMachine@LedSts& (0+255),b
  4873  0022BA  0E00               	movlw	high _Led3Sts
  4874  0022BC  6F82               	movwf	(LedStateMachine@LedSts+1)& (0+255),b
  4875  0022BE  0ED7               	movlw	low _Led3OutSts
  4876  0022C0  6F83               	movwf	LedStateMachine@LedOut& (0+255),b
  4877  0022C2  0E00               	movlw	high _Led3OutSts
  4878  0022C4  6F84               	movwf	(LedStateMachine@LedOut+1)& (0+255),b
  4879  0022C6  0EAA               	movlw	low _Led3Blink
  4880  0022C8  6F85               	movwf	LedStateMachine@LedBlink& (0+255),b
  4881  0022CA  0E03               	movlw	high _Led3Blink
  4882  0022CC  6F86               	movwf	(LedStateMachine@LedBlink+1)& (0+255),b
  4883  0022CE  0E1D               	movlw	low _Led3Pulse
  4884  0022D0  6F87               	movwf	LedStateMachine@LedPulse& (0+255),b
  4885  0022D2  0E02               	movlw	high _Led3Pulse
  4886  0022D4  6F88               	movwf	(LedStateMachine@LedPulse+1)& (0+255),b
  4887  0022D6  0E03               	movlw	3
  4888  0022D8  EC4D  F016         	call	_LedStateMachine
  4889  0022DC  0100               	movlb	0	; () banked
  4890  0022DE  6F8C               	movwf	??_Led_MainTask& (0+255),b
  4891  0022E0  3B8C               	swapf	??_Led_MainTask& (0+255),f,b
  4892  0022E2  478C               	rlncf	??_Led_MainTask& (0+255),f,b
  4893  0022E4  478C               	rlncf	??_Led_MainTask& (0+255),f,b
  4894  0022E6  5083               	movf	3971,w,c	;volatile
  4895  0022E8  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4896  0022EA  0BBF               	andlw	-65
  4897  0022EC  198C               	xorwf	??_Led_MainTask& (0+255),w,b
  4898  0022EE  6E83               	movwf	3971,c	;volatile
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;led.c: 326: }
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;led.c: 325: break;
  4905                           
  4906                           ;led.c: 324: default:
  4907                           
  4908                           ;led.c: 321: break;
  4909  0022F0  0012               	return	
  4910  0022F2                     l1568:
  4911                           
  4912                           ; BSR set to: 0
  4913  0022F2  0100               	movlb	0	; () banked
  4914  0022F4  51CD               	movf	_SystemState& (0+255),w,b
  4915                           
  4916                           ; Switch size 1, requested type "space"
  4917                           ; Number of cases is 2, Range of values is 0 to 1
  4918                           ; switch strategies available:
  4919                           ; Name         Instructions Cycles
  4920                           ; simple_byte            7     4 (average)
  4921                           ;	Chosen strategy is simple_byte
  4922  0022F6  0A00               	xorlw	0	; case 0
  4923  0022F8  B4D8               	btfsc	status,2,c
  4924  0022FA  D79F               	goto	l1569
  4925  0022FC  0A01               	xorlw	1	; case 1
  4926  0022FE  A4D8               	btfss	status,2,c
  4927  002300  0012               	return	
  4928  002302  D7A2               	goto	l1571
  4929  002304                     __end_of_Led_MainTask:
  4930                           	opt stack 0
  4931                           tosu	equ	0xFFF
  4932                           tosh	equ	0xFFE
  4933                           tosl	equ	0xFFD
  4934                           pclath	equ	0xFFA
  4935                           tblptru	equ	0xFF8
  4936                           tblptrh	equ	0xFF7
  4937                           tblptrl	equ	0xFF6
  4938                           tablat	equ	0xFF5
  4939                           prodh	equ	0xFF4
  4940                           prodl	equ	0xFF3
  4941                           intcon	equ	0xFF2
  4942                           intcon2	equ	0xFF1
  4943                           intcon3	equ	0xFF0
  4944                           postinc0	equ	0xFEE
  4945                           plusw0	equ	0xFEB
  4946                           wreg	equ	0xFE8
  4947                           postinc1	equ	0xFE6
  4948                           postdec1	equ	0xFE5
  4949                           fsr1h	equ	0xFE2
  4950                           fsr1l	equ	0xFE1
  4951                           indf2	equ	0xFDF
  4952                           postinc2	equ	0xFDE
  4953                           postdec2	equ	0xFDD
  4954                           plusw2	equ	0xFDB
  4955                           fsr2h	equ	0xFDA
  4956                           fsr2l	equ	0xFD9
  4957                           status	equ	0xFD8
  4958                           
  4959 ;; *************** function _UsbDevice_MainTask *****************
  4960 ;; Defined at:
  4961 ;;		line 72 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  Options         1    wreg     unsigned char 
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;  Options         1    0[COMRAM] unsigned char 
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4979 ;;Total ram usage:        0 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:   18
  4982 ;; This function calls:
  4983 ;;		_CDCTxService
  4984 ;;		_USBDeviceInit
  4985 ;;		_USBDeviceTasks
  4986 ;; This function is called by:
  4987 ;;		_InitializeTasks
  4988 ;;		_ScheduleTasks
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           	psect	text20
  4993  004044                     __ptext20:
  4994                           	opt stack 0
  4995  004044                     _UsbDevice_MainTask:
  4996                           	opt stack 10
  4997                           
  4998                           ;usb_device_mgr.c: 74: switch (SystemState)
  4999                           
  5000                           ; BSR set to: 0
  5001                           ;incstack = 0
  5002  004044  D008               	goto	l1471
  5003  004046                     
  5004                           ;usb_device_mgr.c: 79: USBDeviceInit();
  5005  004046  ECF4  F009         	call	_USBDeviceInit	;wreg free
  5006                           
  5007                           ;usb_device_mgr.c: 80: ;
  5008                           ;usb_device_mgr.c: 81: break;
  5009  00404A  0012               	return	
  5010  00404C                     
  5011                           ;usb_device_mgr.c: 86: USBDeviceTasks();
  5012  00404C  EC16  F007         	call	_USBDeviceTasks	;wreg free
  5013                           
  5014                           ;usb_device_mgr.c: 90: CDCTxService();
  5015  004050  EC3E  F00B         	call	_CDCTxService	;wreg free
  5016                           
  5017                           ;usb_device_mgr.c: 101: }
  5018                           
  5019                           ;usb_device_mgr.c: 100: break;
  5020                           
  5021                           ;usb_device_mgr.c: 99: default:
  5022                           
  5023                           ;usb_device_mgr.c: 96: break;
  5024  004054  0012               	return	
  5025  004056                     l1471:
  5026  004056  0100               	movlb	0	; () banked
  5027  004058  51CD               	movf	_SystemState& (0+255),w,b
  5028                           
  5029                           ; Switch size 1, requested type "space"
  5030                           ; Number of cases is 2, Range of values is 0 to 1
  5031                           ; switch strategies available:
  5032                           ; Name         Instructions Cycles
  5033                           ; simple_byte            7     4 (average)
  5034                           ;	Chosen strategy is simple_byte
  5035  00405A  0A00               	xorlw	0	; case 0
  5036  00405C  B4D8               	btfsc	status,2,c
  5037  00405E  D7F3               	goto	l1472
  5038  004060  0A01               	xorlw	1	; case 1
  5039  004062  A4D8               	btfss	status,2,c
  5040  004064  0012               	return	
  5041  004066  D7F2               	goto	l1474
  5042  004068                     __end_of_UsbDevice_MainTask:
  5043                           	opt stack 0
  5044                           tosu	equ	0xFFF
  5045                           tosh	equ	0xFFE
  5046                           tosl	equ	0xFFD
  5047                           pclath	equ	0xFFA
  5048                           tblptru	equ	0xFF8
  5049                           tblptrh	equ	0xFF7
  5050                           tblptrl	equ	0xFF6
  5051                           tablat	equ	0xFF5
  5052                           prodh	equ	0xFF4
  5053                           prodl	equ	0xFF3
  5054                           intcon	equ	0xFF2
  5055                           intcon2	equ	0xFF1
  5056                           intcon3	equ	0xFF0
  5057                           postinc0	equ	0xFEE
  5058                           plusw0	equ	0xFEB
  5059                           wreg	equ	0xFE8
  5060                           postinc1	equ	0xFE6
  5061                           postdec1	equ	0xFE5
  5062                           fsr1h	equ	0xFE2
  5063                           fsr1l	equ	0xFE1
  5064                           indf2	equ	0xFDF
  5065                           postinc2	equ	0xFDE
  5066                           postdec2	equ	0xFDD
  5067                           plusw2	equ	0xFDB
  5068                           fsr2h	equ	0xFDA
  5069                           fsr2l	equ	0xFD9
  5070                           status	equ	0xFD8
  5071                           
  5072 ;; *************** function _I2cSlv_MainTask *****************
  5073 ;; Defined at:
  5074 ;;		line 213 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
  5075 ;; Parameters:    Size  Location     Type
  5076 ;;  Options         1    wreg     unsigned char 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  Options         1    0[COMRAM] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  1    wreg      void 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5092 ;;Total ram usage:        0 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:   12
  5095 ;; This function calls:
  5096 ;;		_I2cSendMsgSm
  5097 ;;		_I2cSetConfig
  5098 ;;		_I2c_InitI2cModule
  5099 ;;		_OsAlrm_SetOsAlarm
  5100 ;; This function is called by:
  5101 ;;		_InitializeTasks
  5102 ;;		_ScheduleTasks
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text21
  5107  0038D2                     __ptext21:
  5108                           	opt stack 0
  5109  0038D2                     _I2cSlv_MainTask:
  5110                           	opt stack 16
  5111                           
  5112                           ;i2c_slv.c: 215: switch (SystemState)
  5113                           
  5114                           ;incstack = 0
  5115  0038D2  D020               	goto	l883
  5116  0038D4                     
  5117                           ;i2c_slv.c: 220: I2cSetConfig();
  5118  0038D4  ECBB  F01F         	call	_I2cSetConfig	;wreg free
  5119                           
  5120                           ;i2c_slv.c: 222: I2c_InitI2cModule(&I2cConfig);
  5121  0038D8  0EDC               	movlw	low _I2cConfig
  5122  0038DA  0100               	movlb	0	; () banked
  5123  0038DC  6F8E               	movwf	I2c_InitI2cModule@I2cConfig& (0+255),b
  5124  0038DE  0E01               	movlw	high _I2cConfig
  5125  0038E0  6F8F               	movwf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),b
  5126  0038E2  EC46  F01A         	call	_I2c_InitI2cModule	;wreg free
  5127                           
  5128                           ;i2c_slv.c: 224: OsAlrm_SetOsAlarm(0x00,50,&I2cDummyTx);
  5129  0038E6  0E00               	movlw	0
  5130  0038E8  0100               	movlb	0	; () banked
  5131  0038EA  6F7C               	movwf	(OsAlrm_SetOsAlarm@OsAlarmId+1)& (0+255),b
  5132  0038EC  0E00               	movlw	0
  5133  0038EE  6F7B               	movwf	OsAlrm_SetOsAlarm@OsAlarmId& (0+255),b
  5134  0038F0  0E32               	movlw	50
  5135  0038F2  6F7D               	movwf	OsAlrm_SetOsAlarm@OsAlarmTimeout& (0+255),b
  5136  0038F4  0E00               	movlw	0
  5137  0038F6  6F7E               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+1)& (0+255),b
  5138  0038F8  0E00               	movlw	0
  5139  0038FA  6F7F               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+2)& (0+255),b
  5140  0038FC  0E00               	movlw	0
  5141  0038FE  6F80               	movwf	(OsAlrm_SetOsAlarm@OsAlarmTimeout+3)& (0+255),b
  5142  003900  0EFE               	movlw	low _I2cDummyTx
  5143  003902  6F81               	movwf	OsAlrm_SetOsAlarm@AlarmCallback& (0+255),b
  5144  003904  0E41               	movlw	high _I2cDummyTx
  5145  003906  6F82               	movwf	(OsAlrm_SetOsAlarm@AlarmCallback+1)& (0+255),b
  5146  003908  ECB0  F012         	call	_OsAlrm_SetOsAlarm	;wreg free
  5147                           
  5148                           ;i2c_slv.c: 225: break;
  5149  00390C  0012               	return	
  5150  00390E                     
  5151                           ;i2c_slv.c: 230: I2cSendMsgSm();
  5152  00390E  EC97  F014         	call	_I2cSendMsgSm	;wreg free
  5153                           
  5154                           ;i2c_slv.c: 236: }
  5155                           
  5156                           ;i2c_slv.c: 235: break;
  5157                           
  5158                           ;i2c_slv.c: 234: default:
  5159                           
  5160                           ;i2c_slv.c: 231: break;
  5161  003912  0012               	return	
  5162  003914                     l883:
  5163  003914  0100               	movlb	0	; () banked
  5164  003916  51CD               	movf	_SystemState& (0+255),w,b
  5165                           
  5166                           ; Switch size 1, requested type "space"
  5167                           ; Number of cases is 2, Range of values is 0 to 1
  5168                           ; switch strategies available:
  5169                           ; Name         Instructions Cycles
  5170                           ; simple_byte            7     4 (average)
  5171                           ;	Chosen strategy is simple_byte
  5172  003918  0A00               	xorlw	0	; case 0
  5173  00391A  B4D8               	btfsc	status,2,c
  5174  00391C  D7DB               	goto	l884
  5175  00391E  0A01               	xorlw	1	; case 1
  5176  003920  A4D8               	btfss	status,2,c
  5177  003922  0012               	return	
  5178  003924  D7F4               	goto	l886
  5179  003926                     __end_of_I2cSlv_MainTask:
  5180                           	opt stack 0
  5181                           tosu	equ	0xFFF
  5182                           tosh	equ	0xFFE
  5183                           tosl	equ	0xFFD
  5184                           pclath	equ	0xFFA
  5185                           tblptru	equ	0xFF8
  5186                           tblptrh	equ	0xFF7
  5187                           tblptrl	equ	0xFF6
  5188                           tablat	equ	0xFF5
  5189                           prodh	equ	0xFF4
  5190                           prodl	equ	0xFF3
  5191                           intcon	equ	0xFF2
  5192                           intcon2	equ	0xFF1
  5193                           intcon3	equ	0xFF0
  5194                           postinc0	equ	0xFEE
  5195                           plusw0	equ	0xFEB
  5196                           wreg	equ	0xFE8
  5197                           postinc1	equ	0xFE6
  5198                           postdec1	equ	0xFE5
  5199                           fsr1h	equ	0xFE2
  5200                           fsr1l	equ	0xFE1
  5201                           indf2	equ	0xFDF
  5202                           postinc2	equ	0xFDE
  5203                           postdec2	equ	0xFDD
  5204                           plusw2	equ	0xFDB
  5205                           fsr2h	equ	0xFDA
  5206                           fsr2l	equ	0xFD9
  5207                           status	equ	0xFD8
  5208                           
  5209 ;; *************** function _Wdg_MainTask *****************
  5210 ;; Defined at:
  5211 ;;		line 73 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/wdg.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;  Options         1    wreg     unsigned char 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  Options         1    0[COMRAM] unsigned char 
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  1    wreg      void 
  5218 ;; Registers used:
  5219 ;;		wreg, status,2, status,0, cstack
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5229 ;;Total ram usage:        0 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; Hardware stack levels required when called:   10
  5232 ;; This function calls:
  5233 ;;		_Mcu_ClearWdg
  5234 ;;		_Mcu_SetWdgSts
  5235 ;; This function is called by:
  5236 ;;		_InitializeTasks
  5237 ;;		_ScheduleTasks
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text22
  5242  004068                     __ptext22:
  5243                           	opt stack 0
  5244  004068                     _Wdg_MainTask:
  5245                           	opt stack 18
  5246                           
  5247                           ;wdg.c: 75: switch (SystemState)
  5248                           
  5249                           ;incstack = 0
  5250  004068  D007               	goto	l1902
  5251  00406A                     
  5252                           ;wdg.c: 80: Mcu_SetWdgSts(1u);
  5253  00406A  0E01               	movlw	1
  5254  00406C  EC5B  F021         	call	_Mcu_SetWdgSts
  5255                           
  5256                           ;wdg.c: 81: break;
  5257  004070  0012               	return	
  5258  004072                     
  5259                           ;wdg.c: 86: Mcu_ClearWdg();
  5260  004072  ECB1  F021         	call	_Mcu_ClearWdg	;wreg free
  5261                           
  5262                           ;wdg.c: 92: }
  5263                           
  5264                           ;wdg.c: 91: break;
  5265                           
  5266                           ;wdg.c: 90: default:
  5267                           
  5268                           ;wdg.c: 87: break;
  5269  004076  0012               	return	
  5270  004078                     l1902:
  5271  004078  0100               	movlb	0	; () banked
  5272  00407A  51CD               	movf	_SystemState& (0+255),w,b
  5273                           
  5274                           ; Switch size 1, requested type "space"
  5275                           ; Number of cases is 2, Range of values is 0 to 1
  5276                           ; switch strategies available:
  5277                           ; Name         Instructions Cycles
  5278                           ; simple_byte            7     4 (average)
  5279                           ;	Chosen strategy is simple_byte
  5280  00407C  0A00               	xorlw	0	; case 0
  5281  00407E  B4D8               	btfsc	status,2,c
  5282  004080  D7F4               	goto	l1903
  5283  004082  0A01               	xorlw	1	; case 1
  5284  004084  A4D8               	btfss	status,2,c
  5285  004086  0012               	return	
  5286  004088  D7F4               	goto	l1905
  5287  00408A                     __end_of_Wdg_MainTask:
  5288                           	opt stack 0
  5289                           tosu	equ	0xFFF
  5290                           tosh	equ	0xFFE
  5291                           tosl	equ	0xFFD
  5292                           pclath	equ	0xFFA
  5293                           tblptru	equ	0xFF8
  5294                           tblptrh	equ	0xFF7
  5295                           tblptrl	equ	0xFF6
  5296                           tablat	equ	0xFF5
  5297                           prodh	equ	0xFF4
  5298                           prodl	equ	0xFF3
  5299                           intcon	equ	0xFF2
  5300                           intcon2	equ	0xFF1
  5301                           intcon3	equ	0xFF0
  5302                           postinc0	equ	0xFEE
  5303                           plusw0	equ	0xFEB
  5304                           wreg	equ	0xFE8
  5305                           postinc1	equ	0xFE6
  5306                           postdec1	equ	0xFE5
  5307                           fsr1h	equ	0xFE2
  5308                           fsr1l	equ	0xFE1
  5309                           indf2	equ	0xFDF
  5310                           postinc2	equ	0xFDE
  5311                           postdec2	equ	0xFDD
  5312                           plusw2	equ	0xFDB
  5313                           fsr2h	equ	0xFDA
  5314                           fsr2l	equ	0xFD9
  5315                           status	equ	0xFD8
  5316                           
  5317 ;; *************** function _Mcu_SetWdgSts *****************
  5318 ;; Defined at:
  5319 ;;		line 196 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  5320 ;; Parameters:    Size  Location     Type
  5321 ;;  WdgSts          1    wreg     unsigned char 
  5322 ;; Auto vars:     Size  Location     Type
  5323 ;;  WdgSts          1   21[BANK0 ] unsigned char 
  5324 ;; Return value:  Size  Location     Type
  5325 ;;                  1    wreg      void 
  5326 ;; Registers used:
  5327 ;;		wreg
  5328 ;; Tracked objects:
  5329 ;;		On entry : 0/0
  5330 ;;		On exit  : 0/0
  5331 ;;		Unchanged: 0/0
  5332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5336 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5337 ;;Total ram usage:        1 bytes
  5338 ;; Hardware stack levels used:    1
  5339 ;; Hardware stack levels required when called:    9
  5340 ;; This function calls:
  5341 ;;		Nothing
  5342 ;; This function is called by:
  5343 ;;		_Wdg_MainTask
  5344 ;; This function uses a non-reentrant model
  5345 ;;
  5346                           
  5347                           	psect	text23
  5348  0042B6                     __ptext23:
  5349                           	opt stack 0
  5350  0042B6                     _Mcu_SetWdgSts:
  5351                           	opt stack 18
  5352                           
  5353                           ;incstack = 0
  5354                           ;Mcu_SetWdgSts@WdgSts stored from wreg
  5355  0042B6  0100               	movlb	0	; () banked
  5356  0042B8  6F75               	movwf	Mcu_SetWdgSts@WdgSts& (0+255),b
  5357                           
  5358                           ;mcu_drv.c: 199: WDTCONbits.SWDTEN = WdgSts;
  5359  0042BA  0100               	movlb	0	; () banked
  5360  0042BC  B175               	btfsc	Mcu_SetWdgSts@WdgSts& (0+255),0,b
  5361  0042BE  D002               	bra	u6375
  5362  0042C0  90C0               	bcf	4032,0,c	;volatile
  5363  0042C2  D001               	bra	u6376
  5364  0042C4                     u6375:
  5365  0042C4  80C0               	bsf	4032,0,c	;volatile
  5366  0042C6                     u6376:
  5367  0042C6  0012               	return		;funcret
  5368  0042C8                     __end_of_Mcu_SetWdgSts:
  5369                           	opt stack 0
  5370                           tosu	equ	0xFFF
  5371                           tosh	equ	0xFFE
  5372                           tosl	equ	0xFFD
  5373                           pclath	equ	0xFFA
  5374                           tblptru	equ	0xFF8
  5375                           tblptrh	equ	0xFF7
  5376                           tblptrl	equ	0xFF6
  5377                           tablat	equ	0xFF5
  5378                           prodh	equ	0xFF4
  5379                           prodl	equ	0xFF3
  5380                           intcon	equ	0xFF2
  5381                           intcon2	equ	0xFF1
  5382                           intcon3	equ	0xFF0
  5383                           postinc0	equ	0xFEE
  5384                           plusw0	equ	0xFEB
  5385                           wreg	equ	0xFE8
  5386                           postinc1	equ	0xFE6
  5387                           postdec1	equ	0xFE5
  5388                           fsr1h	equ	0xFE2
  5389                           fsr1l	equ	0xFE1
  5390                           indf2	equ	0xFDF
  5391                           postinc2	equ	0xFDE
  5392                           postdec2	equ	0xFDD
  5393                           plusw2	equ	0xFDB
  5394                           fsr2h	equ	0xFDA
  5395                           fsr2l	equ	0xFD9
  5396                           status	equ	0xFD8
  5397                           
  5398 ;; *************** function _Mcu_ClearWdg *****************
  5399 ;; Defined at:
  5400 ;;		line 210 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;		None
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;		None
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      void 
  5407 ;; Registers used:
  5408 ;;		None
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5418 ;;Total ram usage:        0 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    9
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_Wdg_MainTask
  5425 ;; This function uses a non-reentrant model
  5426 ;;
  5427                           
  5428                           	psect	text24
  5429  004362                     __ptext24:
  5430                           	opt stack 0
  5431  004362                     _Mcu_ClearWdg:
  5432                           	opt stack 18
  5433                           
  5434                           ;incstack = 0
  5435  004362  0004               	clrwdt		;# 
  5436  004364  0012               	return		;funcret
  5437  004366                     __end_of_Mcu_ClearWdg:
  5438                           	opt stack 0
  5439                           tosu	equ	0xFFF
  5440                           tosh	equ	0xFFE
  5441                           tosl	equ	0xFFD
  5442                           pclath	equ	0xFFA
  5443                           tblptru	equ	0xFF8
  5444                           tblptrh	equ	0xFF7
  5445                           tblptrl	equ	0xFF6
  5446                           tablat	equ	0xFF5
  5447                           prodh	equ	0xFF4
  5448                           prodl	equ	0xFF3
  5449                           intcon	equ	0xFF2
  5450                           intcon2	equ	0xFF1
  5451                           intcon3	equ	0xFF0
  5452                           postinc0	equ	0xFEE
  5453                           plusw0	equ	0xFEB
  5454                           wreg	equ	0xFE8
  5455                           postinc1	equ	0xFE6
  5456                           postdec1	equ	0xFE5
  5457                           fsr1h	equ	0xFE2
  5458                           fsr1l	equ	0xFE1
  5459                           indf2	equ	0xFDF
  5460                           postinc2	equ	0xFDE
  5461                           postdec2	equ	0xFDD
  5462                           plusw2	equ	0xFDB
  5463                           fsr2h	equ	0xFDA
  5464                           fsr2l	equ	0xFD9
  5465                           status	equ	0xFD8
  5466                           
  5467 ;; *************** function _USBDeviceTasks *****************
  5468 ;; Defined at:
  5469 ;;		line 495 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  5470 ;; Parameters:    Size  Location     Type
  5471 ;;		None
  5472 ;; Auto vars:     Size  Location     Type
  5473 ;;  i               1   48[BANK0 ] unsigned char 
  5474 ;; Return value:  Size  Location     Type
  5475 ;;                  1    wreg      void 
  5476 ;; Registers used:
  5477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5478 ;; Tracked objects:
  5479 ;;		On entry : 0/0
  5480 ;;		On exit  : 0/0
  5481 ;;		Unchanged: 0/0
  5482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5484 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5486 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5487 ;;Total ram usage:        1 bytes
  5488 ;; Hardware stack levels used:    1
  5489 ;; Hardware stack levels required when called:   17
  5490 ;; This function calls:
  5491 ;;		_USBCtrlEPAllowStatusStage
  5492 ;;		_USBCtrlEPService
  5493 ;;		_USBDeviceInit
  5494 ;;		_USBIncrement1msInternalTimers
  5495 ;;		_USBStallHandler
  5496 ;;		_USBSuspend
  5497 ;;		_USBWakeFromSuspend
  5498 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5499 ;; This function is called by:
  5500 ;;		_UsbDevice_MainTask
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           	psect	text25
  5505  000E2C                     __ptext25:
  5506                           	opt stack 0
  5507  000E2C                     _USBDeviceTasks:
  5508                           	opt stack 10
  5509                           
  5510                           ;usb_device.c: 562: }
  5511                           ;usb_device.c: 584: if(USBDeviceState == DETACHED_STATE)
  5512                           
  5513                           ; BSR set to: 0
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;usb_device.c: 561: return;
  5517                           
  5518                           ; BSR set to: 0
  5519                           ;usb_device.c: 560: {PIR2bits.USBIF = 0;};
  5520                           
  5521                           ;usb_device.c: 532: USBDeviceState = DETACHED_STATE;
  5522                           
  5523                           ;usb_device.c: 529: UIE = 0;
  5524                           
  5525                           ;usb_device.c: 524: {
  5526                           ;usb_device.c: 526: UCON = 0;
  5527                           
  5528                           ;usb_device.c: 497: uint8_t i;
  5529                           ;usb_device.c: 523: if (1 != 1)
  5530                           
  5531                           ;incstack = 0
  5532  000E2C  0100               	movlb	0	; () banked
  5533  000E2E  51CA               	movf	_USBDeviceState& (0+255),w,b
  5534  000E30  A4D8               	btfss	status,2,c
  5535  000E32  D012               	goto	l1094
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;usb_device.c: 585: {
  5539                           ;usb_device.c: 587: UCON = 0;
  5540  000E34  0E00               	movlw	0
  5541  000E36  6E65               	movwf	3941,c	;volatile
  5542                           
  5543                           ;usb_device.c: 590: UIE = 0;
  5544  000E38  0E00               	movlw	0
  5545  000E3A  010F               	movlb	15	; () banked
  5546  000E3C  6F36               	movwf	54,b	;volatile
  5547                           
  5548                           ;usb_device.c: 594: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  5549  000E3E  0E16               	movlw	22
  5550  000E40  6F39               	movwf	57,b	;volatile
  5551  000E42  0E9F               	movlw	159
  5552  000E44  6F37               	movwf	55,b	;volatile
  5553  000E46  0E7B               	movlw	123
  5554  000E48  6F36               	movwf	54,b	;volatile
  5555                           
  5556                           ;usb_device.c: 597: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  5557  000E4A  D001               	goto	l1095
  5558  000E4C                     l1096:
  5559  000E4C  8665               	bsf	3941,3,c	;volatile
  5560  000E4E                     l1095:
  5561  000E4E  A665               	btfss	3941,3,c	;volatile
  5562  000E50  D7FD               	goto	l1096
  5563                           
  5564                           ;usb_device.c: 600: USBDeviceState = ATTACHED_STATE;
  5565  000E52  0E01               	movlw	1
  5566  000E54  0100               	movlb	0	; () banked
  5567  000E56  6FCA               	movwf	_USBDeviceState& (0+255),b
  5568  000E58                     l1094:
  5569                           
  5570                           ; BSR set to: 0
  5571                           ;usb_device.c: 605: }
  5572                           ;usb_device.c: 608: if(USBDeviceState == ATTACHED_STATE)
  5573                           
  5574                           ; BSR set to: 0
  5575  000E58  05CA               	decf	_USBDeviceState& (0+255),w,b
  5576  000E5A  B4D8               	btfsc	status,2,c
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;usb_device.c: 609: {
  5580                           ;usb_device.c: 619: if(!UCONbits.SE0)
  5581  000E5C  BA65               	btfsc	3941,5,c	;volatile
  5582  000E5E  D00A               	goto	l1099
  5583                           
  5584                           ; BSR set to: 0
  5585                           ;usb_device.c: 620: {
  5586                           ;usb_device.c: 626: {UIR = 0;};
  5587  000E60  0E00               	movlw	0
  5588  000E62  6E62               	movwf	3938,c	;volatile
  5589                           
  5590                           ;usb_device.c: 630: UIE=0;
  5591  000E64  0E00               	movlw	0
  5592  000E66  010F               	movlb	15	; () banked
  5593  000E68  6F36               	movwf	54,b	;volatile
  5594                           
  5595                           ; BSR set to: 15
  5596                           ;usb_device.c: 632: UIEbits.URSTIE = 1;
  5597  000E6A  8136               	bsf	54,0,b	;volatile
  5598                           
  5599                           ; BSR set to: 15
  5600                           ;usb_device.c: 633: UIEbits.IDLEIE = 1;
  5601  000E6C  8936               	bsf	54,4,b	;volatile
  5602                           
  5603                           ;usb_device.c: 634: USBDeviceState = POWERED_STATE;
  5604  000E6E  0E02               	movlw	2
  5605  000E70  0100               	movlb	0	; () banked
  5606  000E72  6FCA               	movwf	_USBDeviceState& (0+255),b
  5607  000E74                     l1099:
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;usb_device.c: 635: }
  5611                           ;usb_device.c: 636: }
  5612                           ;usb_device.c: 652: if(UIRbits.ACTVIF && UIEbits.ACTVIE)
  5613                           
  5614                           ; BSR set to: 0
  5615                           
  5616                           ; BSR set to: 0
  5617  000E74  A462               	btfss	3938,2,c	;volatile
  5618  000E76  D006               	goto	l1100
  5619                           
  5620                           ; BSR set to: 0
  5621  000E78  010F               	movlb	15	; () banked
  5622  000E7A  A536               	btfss	54,2,b	;volatile
  5623  000E7C  D003               	goto	l1100
  5624                           
  5625                           ; BSR set to: 15
  5626                           ;usb_device.c: 653: {
  5627                           ;usb_device.c: 654: (UIR &= 0xFB);
  5628  000E7E  9462               	bcf	3938,2,c	;volatile
  5629                           
  5630                           ; BSR set to: 15
  5631                           ;usb_device.c: 658: USBWakeFromSuspend();
  5632  000E80  ECC5  F01E         	call	_USBWakeFromSuspend	;wreg free
  5633  000E84                     l1100:
  5634                           
  5635                           ;usb_device.c: 660: }
  5636                           ;usb_device.c: 665: if(UCONbits.SUSPND==1)
  5637  000E84  A265               	btfss	3941,1,c	;volatile
  5638  000E86  D002               	goto	l1101
  5639                           
  5640                           ;usb_device.c: 666: {
  5641                           ;usb_device.c: 667: {PIR2bits.USBIF = 0;};
  5642  000E88  98A1               	bcf	4001,4,c	;volatile
  5643                           
  5644                           ;usb_device.c: 668: return;
  5645  000E8A  0012               	return	
  5646  000E8C                     l1101:
  5647                           
  5648                           ;usb_device.c: 669: }
  5649                           ;usb_device.c: 681: if(UIRbits.URSTIF && UIEbits.URSTIE)
  5650  000E8C  A062               	btfss	3938,0,c	;volatile
  5651  000E8E  D009               	goto	l1102
  5652  000E90  010F               	movlb	15	; () banked
  5653  000E92  A136               	btfss	54,0,b	;volatile
  5654  000E94  D006               	goto	l1102
  5655                           
  5656                           ; BSR set to: 15
  5657                           ;usb_device.c: 682: {
  5658                           ;usb_device.c: 683: USBDeviceInit();
  5659  000E96  ECF4  F009         	call	_USBDeviceInit	;wreg free
  5660                           
  5661                           ;usb_device.c: 687: ;
  5662                           ;usb_device.c: 689: USBDeviceState = DEFAULT_STATE;
  5663  000E9A  0E04               	movlw	4
  5664  000E9C  0100               	movlb	0	; () banked
  5665  000E9E  6FCA               	movwf	_USBDeviceState& (0+255),b
  5666                           
  5667                           ; BSR set to: 0
  5668                           ;usb_device.c: 699: (UIR &= 0xFE);
  5669  000EA0  9062               	bcf	3938,0,c	;volatile
  5670  000EA2                     l1102:
  5671                           
  5672                           ;usb_device.c: 700: }
  5673                           ;usb_device.c: 705: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
  5674                           
  5675                           ; BSR set to: 0
  5676  000EA2  A862               	btfss	3938,4,c	;volatile
  5677  000EA4  D004               	goto	l1103
  5678  000EA6  010F               	movlb	15	; () banked
  5679  000EA8  B936               	btfsc	54,4,b	;volatile
  5680                           
  5681                           ; BSR set to: 15
  5682                           ;usb_device.c: 706: {
  5683                           ;usb_device.c: 712: USBSuspend();
  5684  000EAA  EC2D  F01F         	call	_USBSuspend	;wreg free
  5685  000EAE                     l1103:
  5686                           
  5687                           ;usb_device.c: 714: }
  5688                           ;usb_device.c: 726: if(UIRbits.SOFIF)
  5689  000EAE  AC62               	btfss	3938,6,c	;volatile
  5690  000EB0  D01D               	goto	l1107
  5691                           
  5692                           ;usb_device.c: 727: {
  5693                           ;usb_device.c: 729: if(UIEbits.SOFIE)
  5694  000EB2  010F               	movlb	15	; () banked
  5695  000EB4  AD36               	btfss	54,6,b	;volatile
  5696  000EB6  D00F               	goto	l1105
  5697                           
  5698                           ; BSR set to: 15
  5699                           ;usb_device.c: 730: {
  5700                           ;usb_device.c: 731: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
  5701  000EB8  0E00               	movlw	0
  5702  000EBA  0100               	movlb	0	; () banked
  5703  000EBC  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  5704  000EBE  0E73               	movlw	115
  5705  000EC0  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  5706  000EC2  0E00               	movlw	0
  5707  000EC4  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  5708  000EC6  0E00               	movlw	0
  5709  000EC8  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  5710  000ECA  0E00               	movlw	0
  5711  000ECC  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  5712  000ECE  0E01               	movlw	1
  5713  000ED0  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  5714  000ED2  EC85  F01B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5715  000ED6                     l1105:
  5716                           
  5717                           ;usb_device.c: 732: }
  5718                           ;usb_device.c: 733: (UIR &= 0xBF);
  5719  000ED6  9C62               	bcf	3938,6,c	;volatile
  5720                           
  5721                           ;usb_device.c: 736: USBIncrement1msInternalTimers();
  5722  000ED8  EC45  F020         	call	_USBIncrement1msInternalTimers	;wreg free
  5723                           
  5724                           ;usb_device.c: 753: if(USBStatusStageTimeoutCounter != 0u)
  5725  000EDC  0100               	movlb	0	; () banked
  5726  000EDE  51C3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  5727  000EE0  A4D8               	btfss	status,2,c
  5728                           
  5729                           ; BSR set to: 0
  5730                           ;usb_device.c: 754: {
  5731                           ;usb_device.c: 755: USBStatusStageTimeoutCounter--;
  5732  000EE2  07C3               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;usb_device.c: 756: }
  5736                           ;usb_device.c: 762: if(USBStatusStageTimeoutCounter == 0)
  5737                           
  5738                           ; BSR set to: 0
  5739  000EE4  51C3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
  5740  000EE6  B4D8               	btfsc	status,2,c
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;usb_device.c: 763: {
  5744                           ;usb_device.c: 764: USBCtrlEPAllowStatusStage();
  5745  000EE8  EC77  F013         	call	_USBCtrlEPAllowStatusStage	;wreg free
  5746  000EEC                     l1107:
  5747                           
  5748                           ;usb_device.c: 765: }
  5749                           ;usb_device.c: 767: }
  5750                           ;usb_device.c: 769: if(UIRbits.STALLIF && UIEbits.STALLIE)
  5751  000EEC  AA62               	btfss	3938,5,c	;volatile
  5752  000EEE  D004               	goto	l1108
  5753  000EF0  010F               	movlb	15	; () banked
  5754  000EF2  BB36               	btfsc	54,5,b	;volatile
  5755                           
  5756                           ; BSR set to: 15
  5757                           ;usb_device.c: 770: {
  5758                           ;usb_device.c: 771: USBStallHandler();
  5759  000EF4  EC82  F01D         	call	_USBStallHandler	;wreg free
  5760  000EF8                     l1108:
  5761                           
  5762                           ;usb_device.c: 772: }
  5763                           ;usb_device.c: 774: if(UIRbits.UERRIF && UIEbits.UERRIE)
  5764  000EF8  A262               	btfss	3938,1,c	;volatile
  5765  000EFA  D013               	goto	l1109
  5766  000EFC  010F               	movlb	15	; () banked
  5767  000EFE  A336               	btfss	54,1,b	;volatile
  5768  000F00  D010               	goto	l1109
  5769                           
  5770                           ; BSR set to: 15
  5771                           ;usb_device.c: 775: {
  5772                           ;usb_device.c: 776: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR,0,1);
  5773  000F02  0E7F               	movlw	127
  5774  000F04  0100               	movlb	0	; () banked
  5775  000F06  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  5776  000F08  6981               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  5777  000F0A  0E00               	movlw	0
  5778  000F0C  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  5779  000F0E  0E00               	movlw	0
  5780  000F10  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  5781  000F12  0E00               	movlw	0
  5782  000F14  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  5783  000F16  0E01               	movlw	1
  5784  000F18  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  5785  000F1A  EC85  F01B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5786                           
  5787                           ;usb_device.c: 777: {UEIR = 0;};
  5788  000F1E  0E00               	movlw	0
  5789  000F20  6E63               	movwf	3939,c	;volatile
  5790  000F22                     l1109:
  5791                           
  5792                           ;usb_device.c: 785: }
  5793                           ;usb_device.c: 792: if(USBDeviceState < DEFAULT_STATE)
  5794  000F22  0E04               	movlw	4
  5795  000F24  0100               	movlb	0	; () banked
  5796  000F26  61CA               	cpfslt	_USBDeviceState& (0+255),b
  5797  000F28  D002               	goto	l1110
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;usb_device.c: 793: {
  5801                           ;usb_device.c: 794: {PIR2bits.USBIF = 0;};
  5802  000F2A  98A1               	bcf	4001,4,c	;volatile
  5803                           
  5804                           ;usb_device.c: 795: return;
  5805  000F2C  0012               	return	
  5806  000F2E                     l1110:
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;usb_device.c: 796: }
  5810                           ;usb_device.c: 801: if(UIEbits.TRNIE)
  5811  000F2E  010F               	movlb	15	; () banked
  5812  000F30  A736               	btfss	54,3,b	;volatile
  5813  000F32  D03B               	goto	u9420
  5814                           
  5815                           ; BSR set to: 15
  5816                           ;usb_device.c: 802: {
  5817                           ;usb_device.c: 803: for(i = 0; i < 4u; i++)
  5818  000F34  0E00               	movlw	0
  5819  000F36  0100               	movlb	0	; () banked
  5820  000F38  6F90               	movwf	USBDeviceTasks@i& (0+255),b
  5821  000F3A                     l10083:
  5822                           
  5823                           ; BSR set to: 0
  5824  000F3A  0E03               	movlw	3
  5825  000F3C  6590               	cpfsgt	USBDeviceTasks@i& (0+255),b
  5826  000F3E  D001               	goto	l1112
  5827  000F40  D034               	goto	u9420
  5828  000F42                     l1112:
  5829                           
  5830                           ; BSR set to: 0
  5831                           ;usb_device.c: 804: {
  5832                           ;usb_device.c: 805: if(UIRbits.TRNIF)
  5833  000F42  A662               	btfss	3938,3,c	;volatile
  5834  000F44  D032               	goto	u9420
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;usb_device.c: 806: {
  5838                           ;usb_device.c: 808: USTATcopy.Val = USTAT;
  5839  000F46  CF64 F0DD          	movff	3940,_USTATcopy	;volatile
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;usb_device.c: 809: endpoint_number = USTATcopy.endpoint_number;
  5843  000F4A  31DD               	rrcf	_USTATcopy& (0+255),w,b
  5844  000F4C  32E8               	rrcf	wreg,f,c
  5845  000F4E  32E8               	rrcf	wreg,f,c
  5846  000F50  0B0F               	andlw	15
  5847  000F52  6FC5               	movwf	_endpoint_number& (0+255),b
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;usb_device.c: 811: (UIR &= 0xF7);
  5851  000F54  9662               	bcf	3938,3,c	;volatile
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;usb_device.c: 816: if(USTATcopy.direction == 0)
  5855  000F56  B5DD               	btfsc	_USTATcopy& (0+255),2,b
  5856  000F58  D007               	goto	l1115
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;usb_device.c: 817: {
  5860                           ;usb_device.c: 818: ep_data_out[endpoint_number].bits.ping_pong_state ^= 1;
  5861  000F5A  51C5               	movf	_endpoint_number& (0+255),w,b
  5862  000F5C  0D01               	mullw	1
  5863  000F5E  0E0F               	movlw	low _ep_data_out
  5864  000F60  24F3               	addwf	prodl,w,c
  5865  000F62  6ED9               	movwf	fsr2l,c
  5866  000F64  0E00               	movlw	high _ep_data_out
  5867  000F66  D006               	goto	L3
  5868  000F68                     l1115:
  5869                           
  5870                           ; BSR set to: 0
  5871                           ;usb_device.c: 820: else
  5872                           ;usb_device.c: 821: {
  5873                           ;usb_device.c: 822: ep_data_in[endpoint_number].bits.ping_pong_state ^= 1;
  5874                           
  5875                           ; BSR set to: 0
  5876  000F68  51C5               	movf	_endpoint_number& (0+255),w,b
  5877  000F6A  0D01               	mullw	1
  5878  000F6C  0E12               	movlw	low _ep_data_in
  5879  000F6E  24F3               	addwf	prodl,w,c
  5880  000F70  6ED9               	movwf	fsr2l,c
  5881  000F72  0E00               	movlw	high _ep_data_in
  5882  000F74                     L3:
  5883  000F74  20F4               	addwfc	prodh,w,c
  5884  000F76  6EDA               	movwf	fsr2h,c
  5885  000F78  70DF               	btg	indf2,0,c
  5886                           
  5887                           ; BSR set to: 0
  5888                           ;usb_device.c: 823: }
  5889                           ;usb_device.c: 828: if(endpoint_number == 0)
  5890                           
  5891                           ; BSR set to: 0
  5892  000F7A  51C5               	movf	_endpoint_number& (0+255),w,b
  5893  000F7C  A4D8               	btfss	status,2,c
  5894  000F7E  D003               	goto	l1117
  5895                           
  5896                           ; BSR set to: 0
  5897                           ;usb_device.c: 829: {
  5898                           ;usb_device.c: 830: USBCtrlEPService();
  5899  000F80  EC22  F018         	call	_USBCtrlEPService	;wreg free
  5900                           
  5901                           ;usb_device.c: 831: }
  5902  000F84  D00F               	goto	l1119
  5903  000F86                     l1117:
  5904                           
  5905                           ;usb_device.c: 832: else
  5906                           ;usb_device.c: 833: {
  5907                           ;usb_device.c: 834: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.
      +                          Val,0);
  5908  000F86  0E00               	movlw	0
  5909  000F88  0100               	movlb	0	; () banked
  5910  000F8A  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  5911  000F8C  0E72               	movlw	114
  5912  000F8E  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  5913  000F90  0EDD               	movlw	low _USTATcopy
  5914  000F92  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  5915  000F94  0E00               	movlw	high _USTATcopy
  5916  000F96  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  5917  000F98  0E00               	movlw	0
  5918  000F9A  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  5919  000F9C  0E00               	movlw	0
  5920  000F9E  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  5921  000FA0  EC85  F01B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  5922  000FA4                     l1119:
  5923  000FA4  0100               	movlb	0	; () banked
  5924  000FA6  2B90               	incf	USBDeviceTasks@i& (0+255),f,b
  5925  000FA8  D7C8               	goto	l10083
  5926  000FAA                     u9420:
  5927                           
  5928                           ;usb_device.c: 840: }
  5929                           ;usb_device.c: 841: }
  5930                           ;usb_device.c: 842: }
  5931                           ;usb_device.c: 844: {PIR2bits.USBIF = 0;};
  5932                           
  5933                           ; BSR set to: 0
  5934  000FAA  98A1               	bcf	4001,4,c	;volatile
  5935  000FAC  0012               	return		;funcret
  5936  000FAE                     __end_of_USBDeviceTasks:
  5937                           	opt stack 0
  5938                           tosu	equ	0xFFF
  5939                           tosh	equ	0xFFE
  5940                           tosl	equ	0xFFD
  5941                           pclath	equ	0xFFA
  5942                           tblptru	equ	0xFF8
  5943                           tblptrh	equ	0xFF7
  5944                           tblptrl	equ	0xFF6
  5945                           tablat	equ	0xFF5
  5946                           prodh	equ	0xFF4
  5947                           prodl	equ	0xFF3
  5948                           intcon	equ	0xFF2
  5949                           intcon2	equ	0xFF1
  5950                           intcon3	equ	0xFF0
  5951                           postinc0	equ	0xFEE
  5952                           plusw0	equ	0xFEB
  5953                           wreg	equ	0xFE8
  5954                           postinc1	equ	0xFE6
  5955                           postdec1	equ	0xFE5
  5956                           fsr1h	equ	0xFE2
  5957                           fsr1l	equ	0xFE1
  5958                           indf2	equ	0xFDF
  5959                           postinc2	equ	0xFDE
  5960                           postdec2	equ	0xFDD
  5961                           plusw2	equ	0xFDB
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function _USBWakeFromSuspend *****************
  5967 ;; Defined at:
  5968 ;;		line 2321 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;		None
  5971 ;; Auto vars:     Size  Location     Type
  5972 ;;		None
  5973 ;; Return value:  Size  Location     Type
  5974 ;;                  1    wreg      void 
  5975 ;; Registers used:
  5976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5977 ;; Tracked objects:
  5978 ;;		On entry : 0/0
  5979 ;;		On exit  : 0/0
  5980 ;;		Unchanged: 0/0
  5981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5985 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5986 ;;Total ram usage:        0 bytes
  5987 ;; Hardware stack levels used:    1
  5988 ;; Hardware stack levels required when called:   13
  5989 ;; This function calls:
  5990 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  5991 ;; This function is called by:
  5992 ;;		_USBDeviceTasks
  5993 ;; This function uses a non-reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text26
  5997  003D8A                     __ptext26:
  5998                           	opt stack 0
  5999  003D8A                     _USBWakeFromSuspend:
  6000                           	opt stack 13
  6001                           
  6002                           ;usb_device.c: 2323: USBBusIsSuspended = 0;
  6003                           
  6004                           ;incstack = 0
  6005  003D8A  0E00               	movlw	0
  6006  003D8C  0100               	movlb	0	; () banked
  6007  003D8E  6FC6               	movwf	_USBBusIsSuspended& (0+255),b
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;usb_device.c: 2329: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
  6011  003D90  0E00               	movlw	0
  6012  003D92  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6013  003D94  0E74               	movlw	116
  6014  003D96  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6015  003D98  0E00               	movlw	0
  6016  003D9A  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6017  003D9C  0E00               	movlw	0
  6018  003D9E  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6019  003DA0  0E00               	movlw	0
  6020  003DA2  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6021  003DA4  0E00               	movlw	0
  6022  003DA6  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6023  003DA8  EC85  F01B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6024                           
  6025                           ;usb_device.c: 2336: UCONbits.SUSPND = 0;
  6026  003DAC  9265               	bcf	3941,1,c	;volatile
  6027                           
  6028                           ;usb_device.c: 2341: UIEbits.ACTVIE = 0;
  6029  003DAE  010F               	movlb	15	; () banked
  6030  003DB0  9536               	bcf	54,2,b	;volatile
  6031                           
  6032                           ;usb_device.c: 2359: while(UIRbits.ACTVIF)
  6033  003DB2  D001               	goto	l1247
  6034  003DB4                     
  6035                           ;usb_device.c: 2361: {
  6036                           ;usb_device.c: 2362: (UIR &= 0xFB);
  6037                           
  6038                           ; BSR set to: 15
  6039  003DB4  9462               	bcf	3938,2,c	;volatile
  6040  003DB6                     l1247:
  6041  003DB6  B462               	btfsc	3938,2,c	;volatile
  6042  003DB8  D7FD               	goto	l1248
  6043                           
  6044                           ;usb_device.c: 2363: }
  6045                           ;usb_device.c: 2365: USBTicksSinceSuspendEnd = 0;
  6046  003DBA  0E00               	movlw	0
  6047  003DBC  0100               	movlb	0	; () banked
  6048  003DBE  6FBD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6049                           
  6050                           ; BSR set to: 0
  6051  003DC0  0012               	return		;funcret
  6052  003DC2                     __end_of_USBWakeFromSuspend:
  6053                           	opt stack 0
  6054                           tosu	equ	0xFFF
  6055                           tosh	equ	0xFFE
  6056                           tosl	equ	0xFFD
  6057                           pclath	equ	0xFFA
  6058                           tblptru	equ	0xFF8
  6059                           tblptrh	equ	0xFF7
  6060                           tblptrl	equ	0xFF6
  6061                           tablat	equ	0xFF5
  6062                           prodh	equ	0xFF4
  6063                           prodl	equ	0xFF3
  6064                           intcon	equ	0xFF2
  6065                           intcon2	equ	0xFF1
  6066                           intcon3	equ	0xFF0
  6067                           postinc0	equ	0xFEE
  6068                           plusw0	equ	0xFEB
  6069                           wreg	equ	0xFE8
  6070                           postinc1	equ	0xFE6
  6071                           postdec1	equ	0xFE5
  6072                           fsr1h	equ	0xFE2
  6073                           fsr1l	equ	0xFE1
  6074                           indf2	equ	0xFDF
  6075                           postinc2	equ	0xFDE
  6076                           postdec2	equ	0xFDD
  6077                           plusw2	equ	0xFDB
  6078                           fsr2h	equ	0xFDA
  6079                           fsr2l	equ	0xFD9
  6080                           status	equ	0xFD8
  6081                           
  6082 ;; *************** function _USBSuspend *****************
  6083 ;; Defined at:
  6084 ;;		line 2263 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;		None
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      void 
  6091 ;; Registers used:
  6092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6102 ;;Total ram usage:        0 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:   13
  6105 ;; This function calls:
  6106 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  6107 ;; This function is called by:
  6108 ;;		_USBDeviceTasks
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text27
  6113  003E5A                     __ptext27:
  6114                           	opt stack 0
  6115  003E5A                     _USBSuspend:
  6116                           	opt stack 13
  6117                           
  6118                           ;usb_device.c: 2288: UIEbits.ACTVIE = 1;
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;incstack = 0
  6122  003E5A  010F               	movlb	15	; () banked
  6123  003E5C  8536               	bsf	54,2,b	;volatile
  6124                           
  6125                           ; BSR set to: 15
  6126                           ;usb_device.c: 2289: (UIR &= 0xEF);
  6127  003E5E  9862               	bcf	3938,4,c	;volatile
  6128                           
  6129                           ; BSR set to: 15
  6130                           ;usb_device.c: 2292: UCONbits.SUSPND = 1;
  6131  003E60  8265               	bsf	3941,1,c	;volatile
  6132                           
  6133                           ; BSR set to: 15
  6134                           ;usb_device.c: 2295: USBBusIsSuspended = 1;
  6135  003E62  0E01               	movlw	1
  6136  003E64  0100               	movlb	0	; () banked
  6137  003E66  6FC6               	movwf	_USBBusIsSuspended& (0+255),b
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;usb_device.c: 2296: USBTicksSinceSuspendEnd = 0;
  6141  003E68  0E00               	movlw	0
  6142  003E6A  6FBD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;usb_device.c: 2303: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
  6146  003E6C  0E00               	movlw	0
  6147  003E6E  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  6148  003E70  0E75               	movlw	117
  6149  003E72  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  6150  003E74  0E00               	movlw	0
  6151  003E76  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  6152  003E78  0E00               	movlw	0
  6153  003E7A  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  6154  003E7C  0E00               	movlw	0
  6155  003E7E  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  6156  003E80  0E00               	movlw	0
  6157  003E82  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  6158  003E84  EC85  F01B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  6159  003E88  0012               	return		;funcret
  6160  003E8A                     __end_of_USBSuspend:
  6161                           	opt stack 0
  6162                           tosu	equ	0xFFF
  6163                           tosh	equ	0xFFE
  6164                           tosl	equ	0xFFD
  6165                           pclath	equ	0xFFA
  6166                           tblptru	equ	0xFF8
  6167                           tblptrh	equ	0xFF7
  6168                           tblptrl	equ	0xFF6
  6169                           tablat	equ	0xFF5
  6170                           prodh	equ	0xFF4
  6171                           prodl	equ	0xFF3
  6172                           intcon	equ	0xFF2
  6173                           intcon2	equ	0xFF1
  6174                           intcon3	equ	0xFF0
  6175                           postinc0	equ	0xFEE
  6176                           plusw0	equ	0xFEB
  6177                           wreg	equ	0xFE8
  6178                           postinc1	equ	0xFE6
  6179                           postdec1	equ	0xFE5
  6180                           fsr1h	equ	0xFE2
  6181                           fsr1l	equ	0xFE1
  6182                           indf2	equ	0xFDF
  6183                           postinc2	equ	0xFDE
  6184                           postdec2	equ	0xFDD
  6185                           plusw2	equ	0xFDB
  6186                           fsr2h	equ	0xFDA
  6187                           fsr2l	equ	0xFD9
  6188                           status	equ	0xFD8
  6189                           
  6190 ;; *************** function _USBStallHandler *****************
  6191 ;; Defined at:
  6192 ;;		line 2220 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6193 ;; Parameters:    Size  Location     Type
  6194 ;;		None
  6195 ;; Auto vars:     Size  Location     Type
  6196 ;;		None
  6197 ;; Return value:  Size  Location     Type
  6198 ;;                  1    wreg      void 
  6199 ;; Registers used:
  6200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6201 ;; Tracked objects:
  6202 ;;		On entry : 0/0
  6203 ;;		On exit  : 0/0
  6204 ;;		Unchanged: 0/0
  6205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6208 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6209 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6210 ;;Total ram usage:        1 bytes
  6211 ;; Hardware stack levels used:    1
  6212 ;; Hardware stack levels required when called:    9
  6213 ;; This function calls:
  6214 ;;		Nothing
  6215 ;; This function is called by:
  6216 ;;		_USBDeviceTasks
  6217 ;; This function uses a non-reentrant model
  6218 ;;
  6219                           
  6220                           	psect	text28
  6221  003B04                     __ptext28:
  6222                           	opt stack 0
  6223  003B04                     _USBStallHandler:
  6224                           	opt stack 17
  6225                           
  6226                           ;usb_device.c: 2232: if(UEP0bits.EPSTALL == 1)
  6227                           
  6228                           ;incstack = 0
  6229  003B04  010F               	movlb	15	; () banked
  6230  003B06  A126               	btfss	38,0,b	;volatile
  6231  003B08  D01D               	goto	l1239
  6232                           
  6233                           ; BSR set to: 15
  6234                           ;usb_device.c: 2233: {
  6235                           ;usb_device.c: 2235: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80) && (pBDTEntryIn[0]->S
      +                          TAT.Val == (0x80|0x04)))
  6236  003B0A  C0B6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6237  003B0E  C0B7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6238  003B12  0E80               	movlw	128
  6239  003B14  18DE               	xorwf	postinc2,w,c
  6240  003B16  A4D8               	btfss	status,2,c
  6241  003B18  D014               	goto	l1240
  6242                           
  6243                           ; BSR set to: 15
  6244  003B1A  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
  6245  003B1E  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  6246  003B22  0E84               	movlw	132
  6247  003B24  18DE               	xorwf	postinc2,w,c
  6248  003B26  A4D8               	btfss	status,2,c
  6249  003B28  D00C               	goto	l1240
  6250                           
  6251                           ; BSR set to: 15
  6252                           ;usb_device.c: 2236: {
  6253                           ;usb_device.c: 2238: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  6254  003B2A  C0B6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6255  003B2E  C0B7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6256  003B32  0E0C               	movlw	12
  6257  003B34  6EDF               	movwf	indf2,c
  6258                           
  6259                           ; BSR set to: 15
  6260                           ;usb_device.c: 2239: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
  6261  003B36  C0B6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6262  003B3A  C0B7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6263  003B3E  0E00               	movlw	0
  6264  003B40  8EDB               	bsf	plusw2,7,c
  6265  003B42                     l1240:
  6266                           
  6267                           ; BSR set to: 15
  6268                           ;usb_device.c: 2240: }
  6269                           ;usb_device.c: 2241: UEP0bits.EPSTALL = 0;
  6270                           
  6271                           ; BSR set to: 15
  6272  003B42  9126               	bcf	38,0,b	;volatile
  6273  003B44                     l1239:
  6274                           
  6275                           ; BSR set to: 15
  6276                           ;usb_device.c: 2242: }
  6277                           ;usb_device.c: 2244: (UIR &= 0xDF);
  6278  003B44  9A62               	bcf	3938,5,c	;volatile
  6279                           
  6280                           ; BSR set to: 15
  6281  003B46  0012               	return		;funcret
  6282  003B48                     __end_of_USBStallHandler:
  6283                           	opt stack 0
  6284                           tosu	equ	0xFFF
  6285                           tosh	equ	0xFFE
  6286                           tosl	equ	0xFFD
  6287                           pclath	equ	0xFFA
  6288                           tblptru	equ	0xFF8
  6289                           tblptrh	equ	0xFF7
  6290                           tblptrl	equ	0xFF6
  6291                           tablat	equ	0xFF5
  6292                           prodh	equ	0xFF4
  6293                           prodl	equ	0xFF3
  6294                           intcon	equ	0xFF2
  6295                           intcon2	equ	0xFF1
  6296                           intcon3	equ	0xFF0
  6297                           postinc0	equ	0xFEE
  6298                           plusw0	equ	0xFEB
  6299                           wreg	equ	0xFE8
  6300                           postinc1	equ	0xFE6
  6301                           postdec1	equ	0xFE5
  6302                           fsr1h	equ	0xFE2
  6303                           fsr1l	equ	0xFE1
  6304                           indf2	equ	0xFDF
  6305                           postinc2	equ	0xFDE
  6306                           postdec2	equ	0xFDD
  6307                           plusw2	equ	0xFDB
  6308                           fsr2h	equ	0xFDA
  6309                           fsr2l	equ	0xFD9
  6310                           status	equ	0xFD8
  6311                           
  6312 ;; *************** function _USBIncrement1msInternalTimers *****************
  6313 ;; Defined at:
  6314 ;;		line 3042 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;		None
  6317 ;; Auto vars:     Size  Location     Type
  6318 ;;		None
  6319 ;; Return value:  Size  Location     Type
  6320 ;;                  1    wreg      void 
  6321 ;; Registers used:
  6322 ;;		wreg, status,2, status,0
  6323 ;; Tracked objects:
  6324 ;;		On entry : 0/0
  6325 ;;		On exit  : 0/0
  6326 ;;		Unchanged: 0/0
  6327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6332 ;;Total ram usage:        0 bytes
  6333 ;; Hardware stack levels used:    1
  6334 ;; Hardware stack levels required when called:    9
  6335 ;; This function calls:
  6336 ;;		Nothing
  6337 ;; This function is called by:
  6338 ;;		_USBDeviceTasks
  6339 ;; This function uses a non-reentrant model
  6340 ;;
  6341                           
  6342                           	psect	text29
  6343  00408A                     __ptext29:
  6344                           	opt stack 0
  6345  00408A                     _USBIncrement1msInternalTimers:
  6346                           	opt stack 17
  6347                           
  6348                           ;usb_device.c: 3050: USB1msTickCount++;
  6349                           
  6350                           ; BSR set to: 15
  6351                           ;incstack = 0
  6352  00408A  0E01               	movlw	1
  6353  00408C  0102               	movlb	2	; () banked
  6354  00408E  2704               	addwf	_USB1msTickCount& (0+255),f,b
  6355  004090  0E00               	movlw	0
  6356  004092  2305               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
  6357  004094  2306               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
  6358  004096  2307               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
  6359                           
  6360                           ; BSR set to: 2
  6361                           ;usb_device.c: 3051: if(USBBusIsSuspended == 0)
  6362  004098  0100               	movlb	0	; () banked
  6363  00409A  51C6               	movf	_USBBusIsSuspended& (0+255),w,b
  6364  00409C  A4D8               	btfss	status,2,c
  6365  00409E  0012               	return	
  6366                           
  6367                           ; BSR set to: 0
  6368                           ;usb_device.c: 3052: {
  6369                           ;usb_device.c: 3053: USBTicksSinceSuspendEnd++;
  6370  0040A0  2BBD               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;usb_device.c: 3055: if(USBTicksSinceSuspendEnd == 0)
  6374  0040A2  51BD               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
  6375  0040A4  A4D8               	btfss	status,2,c
  6376  0040A6  0012               	return	
  6377                           
  6378                           ; BSR set to: 0
  6379                           ;usb_device.c: 3056: {
  6380                           ;usb_device.c: 3057: USBTicksSinceSuspendEnd = 255;
  6381  0040A8  69BD               	setf	_USBTicksSinceSuspendEnd& (0+255),b
  6382                           
  6383                           ; BSR set to: 0
  6384  0040AA  0012               	return	
  6385  0040AC                     __end_of_USBIncrement1msInternalTimers:
  6386                           	opt stack 0
  6387                           tosu	equ	0xFFF
  6388                           tosh	equ	0xFFE
  6389                           tosl	equ	0xFFD
  6390                           pclath	equ	0xFFA
  6391                           tblptru	equ	0xFF8
  6392                           tblptrh	equ	0xFF7
  6393                           tblptrl	equ	0xFF6
  6394                           tablat	equ	0xFF5
  6395                           prodh	equ	0xFF4
  6396                           prodl	equ	0xFF3
  6397                           intcon	equ	0xFF2
  6398                           intcon2	equ	0xFF1
  6399                           intcon3	equ	0xFF0
  6400                           postinc0	equ	0xFEE
  6401                           plusw0	equ	0xFEB
  6402                           wreg	equ	0xFE8
  6403                           postinc1	equ	0xFE6
  6404                           postdec1	equ	0xFE5
  6405                           fsr1h	equ	0xFE2
  6406                           fsr1l	equ	0xFE1
  6407                           indf2	equ	0xFDF
  6408                           postinc2	equ	0xFDE
  6409                           postdec2	equ	0xFDD
  6410                           plusw2	equ	0xFDB
  6411                           fsr2h	equ	0xFDA
  6412                           fsr2l	equ	0xFD9
  6413                           status	equ	0xFD8
  6414                           
  6415 ;; *************** function _USBDeviceInit *****************
  6416 ;; Defined at:
  6417 ;;		line 295 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6418 ;; Parameters:    Size  Location     Type
  6419 ;;		None
  6420 ;; Auto vars:     Size  Location     Type
  6421 ;;  i               1   29[BANK0 ] unsigned char 
  6422 ;; Return value:  Size  Location     Type
  6423 ;;                  1    wreg      void 
  6424 ;; Registers used:
  6425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6426 ;; Tracked objects:
  6427 ;;		On entry : 0/0
  6428 ;;		On exit  : 0/0
  6429 ;;		Unchanged: 0/0
  6430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6432 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6434 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6435 ;;Total ram usage:        1 bytes
  6436 ;; Hardware stack levels used:    1
  6437 ;; Hardware stack levels required when called:   10
  6438 ;; This function calls:
  6439 ;;		_memset
  6440 ;; This function is called by:
  6441 ;;		_USBDeviceTasks
  6442 ;;		_UsbDevice_MainTask
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text30
  6447  0013E8                     __ptext30:
  6448                           	opt stack 0
  6449  0013E8                     _USBDeviceInit:
  6450                           	opt stack 16
  6451                           
  6452                           ;usb_device.c: 297: uint8_t i;
  6453                           ;usb_device.c: 299: {PIE2bits.USBIE = 0;};
  6454                           
  6455                           ; BSR set to: 0
  6456                           ;incstack = 0
  6457  0013E8  98A0               	bcf	4000,4,c	;volatile
  6458                           
  6459                           ;usb_device.c: 303: ;
  6460                           ;usb_device.c: 306: {UEIR = 0;};
  6461  0013EA  0E00               	movlw	0
  6462  0013EC  6E63               	movwf	3939,c	;volatile
  6463                           
  6464                           ;usb_device.c: 309: {UIR = 0;};
  6465  0013EE  0E00               	movlw	0
  6466  0013F0  6E62               	movwf	3938,c	;volatile
  6467                           
  6468                           ;usb_device.c: 312: UEP0 = 0;
  6469  0013F2  0E00               	movlw	0
  6470  0013F4  010F               	movlb	15	; () banked
  6471  0013F6  6F26               	movwf	38,b	;volatile
  6472                           
  6473                           ; BSR set to: 15
  6474                           ;usb_device.c: 314: memset((void*)&UEP1,0x00,(2));;
  6475  0013F8  0E27               	movlw	39
  6476  0013FA  0100               	movlb	0	; () banked
  6477  0013FC  6F75               	movwf	memset@p1& (0+255),b
  6478  0013FE  0E0F               	movlw	15
  6479  001400  6F76               	movwf	(memset@p1+1)& (0+255),b
  6480  001402  0E00               	movlw	0
  6481  001404  6F78               	movwf	(memset@c+1)& (0+255),b
  6482  001406  0E00               	movlw	0
  6483  001408  6F77               	movwf	memset@c& (0+255),b
  6484  00140A  0E00               	movlw	0
  6485  00140C  6F7A               	movwf	(memset@n+1)& (0+255),b
  6486  00140E  0E02               	movlw	2
  6487  001410  6F79               	movwf	memset@n& (0+255),b
  6488  001412  EC45  F01F         	call	_memset	;wreg free
  6489                           
  6490                           ;usb_device.c: 316: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  6491  001416  0E16               	movlw	22
  6492  001418  010F               	movlb	15	; () banked
  6493  00141A  6F39               	movwf	57,b	;volatile
  6494                           
  6495                           ; BSR set to: 15
  6496  00141C  0E9F               	movlw	159
  6497  00141E  6F37               	movwf	55,b	;volatile
  6498                           
  6499                           ; BSR set to: 15
  6500  001420  0E7B               	movlw	123
  6501  001422  6F36               	movwf	54,b	;volatile
  6502                           
  6503                           ; BSR set to: 15
  6504                           ;usb_device.c: 319: ;
  6505                           ;usb_device.c: 322: ;
  6506                           ;usb_device.c: 325: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  6507  001424  0E00               	movlw	0
  6508  001426  0100               	movlb	0	; () banked
  6509  001428  6F7D               	movwf	USBDeviceInit@i& (0+255),b
  6510  00142A                     l7385:
  6511                           
  6512                           ; BSR set to: 0
  6513  00142A  0E0B               	movlw	11
  6514  00142C  657D               	cpfsgt	USBDeviceInit@i& (0+255),b
  6515  00142E  D001               	goto	l1083
  6516  001430  D00E               	goto	u5750
  6517  001432                     l1083:
  6518                           
  6519                           ; BSR set to: 0
  6520                           ;usb_device.c: 326: {
  6521                           ;usb_device.c: 327: BDT[i].Val = 0x00;
  6522                           
  6523                           ; BSR set to: 0
  6524  001432  517D               	movf	USBDeviceInit@i& (0+255),w,b
  6525  001434  0D04               	mullw	4
  6526  001436  0E00               	movlw	0
  6527  001438  24F3               	addwf	prodl,w,c
  6528  00143A  6ED9               	movwf	fsr2l,c
  6529  00143C  0E04               	movlw	4
  6530  00143E  20F4               	addwfc	prodh,w,c
  6531  001440  6EDA               	movwf	fsr2h,c
  6532  001442  6ADE               	clrf	postinc2,c
  6533  001444  6ADE               	clrf	postinc2,c
  6534  001446  6ADE               	clrf	postinc2,c
  6535  001448  6ADD               	clrf	postdec2,c
  6536                           
  6537                           ; BSR set to: 0
  6538  00144A  2B7D               	incf	USBDeviceInit@i& (0+255),f,b
  6539  00144C  D7EE               	goto	l7385
  6540  00144E                     u5750:
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;usb_device.c: 328: }
  6544                           ;usb_device.c: 331: UCONbits.PPBRST = 1;
  6545  00144E  8C65               	bsf	3941,6,c	;volatile
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;usb_device.c: 334: UADDR = 0x00;
  6549  001450  0E00               	movlw	0
  6550  001452  010F               	movlb	15	; () banked
  6551  001454  6F38               	movwf	56,b	;volatile
  6552                           
  6553                           ; BSR set to: 15
  6554                           ;usb_device.c: 337: UCONbits.PKTDIS = 0;
  6555  001456  9865               	bcf	3941,4,c	;volatile
  6556                           
  6557                           ; BSR set to: 15
  6558                           ;usb_device.c: 340: UCONbits.PPBRST = 0;
  6559  001458  9C65               	bcf	3941,6,c	;volatile
  6560  00145A                     
  6561                           ;usb_device.c: 344: {
  6562                           ;usb_device.c: 345: (UIR &= 0xF7);
  6563                           
  6564                           ; BSR set to: 15
  6565  00145A  9662               	bcf	3938,3,c	;volatile
  6566                           
  6567                           ;usb_device.c: 347: inPipes[0].info.Val = 0;
  6568  00145C  0E00               	movlw	0
  6569  00145E  0100               	movlb	0	; () banked
  6570  001460  6FA9               	movwf	(_inPipes+3)& (0+255),b
  6571                           
  6572                           ; BSR set to: 0
  6573                           ;usb_device.c: 348: outPipes[0].info.Val = 0;
  6574  001462  0E00               	movlw	0
  6575  001464  6E04               	movwf	_outPipes+3,c
  6576                           
  6577                           ; BSR set to: 0
  6578                           ;usb_device.c: 349: outPipes[0].wCount.Val = 0;
  6579  001466  0E00               	movlw	0
  6580  001468  6E06               	movwf	_outPipes+5,c
  6581  00146A  0E00               	movlw	0
  6582  00146C  6E05               	movwf	_outPipes+4,c
  6583                           
  6584                           ; BSR set to: 0
  6585                           ;usb_device.c: 350: }while(UIRbits.TRNIF == 1);
  6586  00146E  B662               	btfsc	3938,3,c	;volatile
  6587  001470  D7F4               	goto	l1085
  6588                           
  6589                           ; BSR set to: 0
  6590                           ;usb_device.c: 354: USBStatusStageEnabledFlag1 = 1;
  6591                           
  6592                           ; BSR set to: 0
  6593  001472  0E01               	movlw	1
  6594  001474  6FC1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  6595                           
  6596                           ;usb_device.c: 355: USBStatusStageEnabledFlag2 = 1;
  6597  001476  0E01               	movlw	1
  6598  001478  6FC0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  6599                           
  6600                           ;usb_device.c: 357: USBDeferINDataStagePackets = 0;
  6601  00147A  0E00               	movlw	0
  6602  00147C  6FBF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  6603                           
  6604                           ;usb_device.c: 358: USBDeferOUTDataStagePackets = 0;
  6605  00147E  0E00               	movlw	0
  6606  001480  6FBE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  6607                           
  6608                           ;usb_device.c: 359: USBBusIsSuspended = 0;
  6609  001482  0E00               	movlw	0
  6610  001484  6FC6               	movwf	_USBBusIsSuspended& (0+255),b
  6611                           
  6612                           ;usb_device.c: 363: for(i = 0; i < (uint8_t)(2+1u); i++)
  6613  001486  0E00               	movlw	0
  6614  001488  6F7D               	movwf	USBDeviceInit@i& (0+255),b
  6615  00148A                     l7413:
  6616                           
  6617                           ; BSR set to: 0
  6618  00148A  0E02               	movlw	2
  6619  00148C  657D               	cpfsgt	USBDeviceInit@i& (0+255),b
  6620  00148E  D001               	goto	l1087
  6621  001490  D02E               	goto	u5780
  6622  001492                     l1087:
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;usb_device.c: 364: {
  6626                           ;usb_device.c: 365: pBDTEntryIn[i] = 0u;
  6627                           
  6628                           ; BSR set to: 0
  6629  001492  517D               	movf	USBDeviceInit@i& (0+255),w,b
  6630  001494  0D02               	mullw	2
  6631  001496  0EAC               	movlw	low _pBDTEntryIn
  6632  001498  24F3               	addwf	prodl,w,c
  6633  00149A  6ED9               	movwf	fsr2l,c
  6634  00149C  0E00               	movlw	high _pBDTEntryIn
  6635  00149E  20F4               	addwfc	prodh,w,c
  6636  0014A0  6EDA               	movwf	fsr2h,c
  6637  0014A2  0E00               	movlw	0
  6638  0014A4  6EDE               	movwf	postinc2,c
  6639  0014A6  0E00               	movlw	0
  6640  0014A8  6EDD               	movwf	postdec2,c
  6641                           
  6642                           ;usb_device.c: 366: pBDTEntryOut[i] = 0u;
  6643  0014AA  517D               	movf	USBDeviceInit@i& (0+255),w,b
  6644  0014AC  0D02               	mullw	2
  6645  0014AE  0EC8               	movlw	low _pBDTEntryOut
  6646  0014B0  24F3               	addwf	prodl,w,c
  6647  0014B2  6ED9               	movwf	fsr2l,c
  6648  0014B4  0E01               	movlw	high _pBDTEntryOut
  6649  0014B6  20F4               	addwfc	prodh,w,c
  6650  0014B8  6EDA               	movwf	fsr2h,c
  6651  0014BA  0E00               	movlw	0
  6652  0014BC  6EDE               	movwf	postinc2,c
  6653  0014BE  0E00               	movlw	0
  6654  0014C0  6EDD               	movwf	postdec2,c
  6655                           
  6656                           ;usb_device.c: 367: ep_data_in[i].Val = 0u;
  6657  0014C2  517D               	movf	USBDeviceInit@i& (0+255),w,b
  6658  0014C4  0D01               	mullw	1
  6659  0014C6  0E12               	movlw	low _ep_data_in
  6660  0014C8  24F3               	addwf	prodl,w,c
  6661  0014CA  6ED9               	movwf	fsr2l,c
  6662  0014CC  0E00               	movlw	high _ep_data_in
  6663  0014CE  20F4               	addwfc	prodh,w,c
  6664  0014D0  6EDA               	movwf	fsr2h,c
  6665  0014D2  0E00               	movlw	0
  6666  0014D4  6EDF               	movwf	indf2,c
  6667                           
  6668                           ;usb_device.c: 368: ep_data_out[i].Val = 0u;
  6669  0014D6  517D               	movf	USBDeviceInit@i& (0+255),w,b
  6670  0014D8  0D01               	mullw	1
  6671  0014DA  0E0F               	movlw	low _ep_data_out
  6672  0014DC  24F3               	addwf	prodl,w,c
  6673  0014DE  6ED9               	movwf	fsr2l,c
  6674  0014E0  0E00               	movlw	high _ep_data_out
  6675  0014E2  20F4               	addwfc	prodh,w,c
  6676  0014E4  6EDA               	movwf	fsr2h,c
  6677  0014E6  0E00               	movlw	0
  6678  0014E8  6EDF               	movwf	indf2,c
  6679                           
  6680                           ; BSR set to: 0
  6681  0014EA  2B7D               	incf	USBDeviceInit@i& (0+255),f,b
  6682  0014EC  D7CE               	goto	l7413
  6683  0014EE                     u5780:
  6684                           
  6685                           ; BSR set to: 0
  6686                           ;usb_device.c: 369: }
  6687                           ;usb_device.c: 372: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  6688                           
  6689                           ; BSR set to: 0
  6690  0014EE  0E08               	movlw	8
  6691  0014F0  6FAC               	movwf	_pBDTEntryIn& (0+255),b
  6692  0014F2  0E04               	movlw	4
  6693  0014F4  6FAD               	movwf	(_pBDTEntryIn+1)& (0+255),b
  6694                           
  6695                           ; BSR set to: 0
  6696                           ;usb_device.c: 374: UEP0 = 0x06|0x10;
  6697  0014F6  0E16               	movlw	22
  6698  0014F8  010F               	movlb	15	; () banked
  6699  0014FA  6F26               	movwf	38,b	;volatile
  6700                           
  6701                           ; BSR set to: 15
  6702                           ;usb_device.c: 376: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  6703  0014FC  0E04               	movlw	4
  6704  0014FE  0104               	movlb	4	; () banked
  6705  001500  6F03               	movwf	3,b	;volatile
  6706  001502  0E30               	movlw	48
  6707  001504  6F02               	movwf	2,b	;volatile
  6708                           
  6709                           ; BSR set to: 4
  6710                           ;usb_device.c: 377: BDT[0].CNT = 8;
  6711  001506  0E08               	movlw	8
  6712  001508  6F01               	movwf	1,b	;volatile
  6713                           
  6714                           ; BSR set to: 4
  6715                           ;usb_device.c: 378: BDT[0].STAT.Val = 0x00|0x04;
  6716  00150A  0E04               	movlw	4
  6717  00150C  6F00               	movwf	0,b	;volatile
  6718                           
  6719                           ; BSR set to: 4
  6720                           ;usb_device.c: 379: BDT[0].STAT.Val |= 0x80;
  6721  00150E  8F00               	bsf	0,7,b	;volatile
  6722                           
  6723                           ; BSR set to: 4
  6724                           ;usb_device.c: 382: USBActiveConfiguration = 0;
  6725  001510  0E00               	movlw	0
  6726  001512  0100               	movlb	0	; () banked
  6727  001514  6FDE               	movwf	_USBActiveConfiguration& (0+255),b
  6728                           
  6729                           ; BSR set to: 0
  6730                           ;usb_device.c: 384: USB1msTickCount = 0;
  6731  001516  0E00               	movlw	0
  6732  001518  0102               	movlb	2	; () banked
  6733  00151A  6F04               	movwf	_USB1msTickCount& (0+255),b
  6734  00151C  0E00               	movlw	0
  6735  00151E  6F05               	movwf	(_USB1msTickCount+1)& (0+255),b
  6736  001520  0E00               	movlw	0
  6737  001522  6F06               	movwf	(_USB1msTickCount+2)& (0+255),b
  6738  001524  0E00               	movlw	0
  6739  001526  6F07               	movwf	(_USB1msTickCount+3)& (0+255),b
  6740                           
  6741                           ; BSR set to: 2
  6742                           ;usb_device.c: 385: USBTicksSinceSuspendEnd = 0;
  6743  001528  0E00               	movlw	0
  6744  00152A  0100               	movlb	0	; () banked
  6745  00152C  6FBD               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;usb_device.c: 388: USBDeviceState = DETACHED_STATE;
  6749  00152E  0E00               	movlw	0
  6750  001530  6FCA               	movwf	_USBDeviceState& (0+255),b
  6751                           
  6752                           ; BSR set to: 0
  6753  001532  0012               	return		;funcret
  6754  001534                     __end_of_USBDeviceInit:
  6755                           	opt stack 0
  6756                           tosu	equ	0xFFF
  6757                           tosh	equ	0xFFE
  6758                           tosl	equ	0xFFD
  6759                           pclath	equ	0xFFA
  6760                           tblptru	equ	0xFF8
  6761                           tblptrh	equ	0xFF7
  6762                           tblptrl	equ	0xFF6
  6763                           tablat	equ	0xFF5
  6764                           prodh	equ	0xFF4
  6765                           prodl	equ	0xFF3
  6766                           intcon	equ	0xFF2
  6767                           intcon2	equ	0xFF1
  6768                           intcon3	equ	0xFF0
  6769                           postinc0	equ	0xFEE
  6770                           plusw0	equ	0xFEB
  6771                           wreg	equ	0xFE8
  6772                           postinc1	equ	0xFE6
  6773                           postdec1	equ	0xFE5
  6774                           fsr1h	equ	0xFE2
  6775                           fsr1l	equ	0xFE1
  6776                           indf2	equ	0xFDF
  6777                           postinc2	equ	0xFDE
  6778                           postdec2	equ	0xFDD
  6779                           plusw2	equ	0xFDB
  6780                           fsr2h	equ	0xFDA
  6781                           fsr2l	equ	0xFD9
  6782                           status	equ	0xFD8
  6783                           
  6784 ;; *************** function _USBCtrlEPService *****************
  6785 ;; Defined at:
  6786 ;;		line 2390 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;		None
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;		None
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1    wreg      void 
  6793 ;; Registers used:
  6794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6802 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6803 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6804 ;;Total ram usage:        1 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:   16
  6807 ;; This function calls:
  6808 ;;		_USBCtrlTrfInHandler
  6809 ;;		_USBCtrlTrfOutHandler
  6810 ;;		_USBCtrlTrfSetupHandler
  6811 ;;		_memcpy
  6812 ;; This function is called by:
  6813 ;;		_USBDeviceTasks
  6814 ;; This function uses a non-reentrant model
  6815 ;;
  6816                           
  6817                           	psect	text31
  6818  003044                     __ptext31:
  6819                           	opt stack 0
  6820  003044                     _USBCtrlEPService:
  6821                           	opt stack 10
  6822                           
  6823                           ;usb_device.c: 2396: USBStatusStageTimeoutCounter = (uint8_t)45;
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;incstack = 0
  6827  003044  0E2D               	movlw	45
  6828  003046  0100               	movlb	0	; () banked
  6829  003048  6FC3               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;usb_device.c: 2400: if((USTATcopy.Val & ~0x02) == 0x00)
  6833  00304A  C0DD  F08F         	movff	_USTATcopy,??_USBCtrlEPService
  6834  00304E  0EFD               	movlw	253
  6835  003050  178F               	andwf	??_USBCtrlEPService& (0+255),f,b
  6836  003052  A4D8               	btfss	status,2,c
  6837  003054  D038               	goto	l1253
  6838                           
  6839                           ; BSR set to: 0
  6840                           ;usb_device.c: 2401: {
  6841                           ;usb_device.c: 2404: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[(USTATcopy.Val &
      +                           0x7E)>>1];
  6842  003056  C0DD  F08F         	movff	_USTATcopy,??_USBCtrlEPService
  6843  00305A  90D8               	bcf	status,0,c
  6844  00305C  338F               	rrcf	??_USBCtrlEPService& (0+255),f,b
  6845  00305E  0E3F               	movlw	63
  6846  003060  178F               	andwf	??_USBCtrlEPService& (0+255),f,b
  6847  003062  518F               	movf	??_USBCtrlEPService& (0+255),w,b
  6848  003064  0D04               	mullw	4
  6849  003066  0E00               	movlw	0
  6850  003068  24F3               	addwf	prodl,w,c
  6851  00306A  6FB6               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  6852  00306C  0E04               	movlw	4
  6853  00306E  20F4               	addwfc	prodh,w,c
  6854  003070  6FB7               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  6855                           
  6856                           ; BSR set to: 0
  6857                           ;usb_device.c: 2412: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  6858  003072  C0B6  F0B4         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  6859  003076  C0B7  F0B5         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  6860                           
  6861                           ; BSR set to: 0
  6862                           ;usb_device.c: 2414: ((uint8_t_VAL*)&pBDTEntryEP0OutNext)->Val ^= 0x0004;
  6863  00307A  0E04               	movlw	4
  6864  00307C  1BB4               	xorwf	_pBDTEntryEP0OutNext& (0+255),f,b
  6865                           
  6866                           ; BSR set to: 0
  6867                           ;usb_device.c: 2417: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
  6868  00307E  C0B6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
  6869  003082  C0B7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
  6870  003086  30DF               	rrcf	223,w,c
  6871  003088  32E8               	rrcf	wreg,f,c
  6872  00308A  0B0F               	andlw	15
  6873  00308C  0A0D               	xorlw	13
  6874  00308E  A4D8               	btfss	status,2,c
  6875  003090  D017               	goto	l1254
  6876                           
  6877                           ; BSR set to: 0
  6878                           ;usb_device.c: 2418: {
  6879                           ;usb_device.c: 2423: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void *)(pBDTEntryEP0OutCurr
      +                          ent->ADR)), 8);
  6880  003092  0E30               	movlw	48
  6881  003094  6F75               	movwf	memcpy@d1& (0+255),b
  6882  003096  0E04               	movlw	4
  6883  003098  6F76               	movwf	(memcpy@d1+1)& (0+255),b
  6884  00309A  EE20 F002          	lfsr	2,2
  6885  00309E  51B6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
  6886  0030A0  26D9               	addwf	fsr2l,f,c
  6887  0030A2  51B7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
  6888  0030A4  22DA               	addwfc	fsr2h,f,c
  6889  0030A6  CFDE F077          	movff	postinc2,memcpy@s1
  6890  0030AA  CFDD F078          	movff	postdec2,memcpy@s1+1
  6891  0030AE  0E00               	movlw	0
  6892  0030B0  6F7A               	movwf	(memcpy@n+1)& (0+255),b
  6893  0030B2  0E08               	movlw	8
  6894  0030B4  6F79               	movwf	memcpy@n& (0+255),b
  6895  0030B6  EC5E  F01D         	call	_memcpy	;wreg free
  6896                           
  6897                           ;usb_device.c: 2426: USBCtrlTrfSetupHandler();
  6898  0030BA  EC45  F019         	call	_USBCtrlTrfSetupHandler	;wreg free
  6899                           
  6900                           ;usb_device.c: 2427: }
  6901  0030BE  0012               	return	
  6902  0030C0                     l1254:
  6903                           
  6904                           ;usb_device.c: 2428: else
  6905                           ;usb_device.c: 2429: {
  6906                           ;usb_device.c: 2431: USBCtrlTrfOutHandler();
  6907  0030C0  EC55  F01B         	call	_USBCtrlTrfOutHandler	;wreg free
  6908                           
  6909                           ;usb_device.c: 2432: }
  6910                           ;usb_device.c: 2433: }
  6911  0030C4  0012               	return	
  6912  0030C6                     l1253:
  6913                           
  6914                           ;usb_device.c: 2434: else if((USTATcopy.Val & ~0x02) == 0x04)
  6915  0030C6  0100               	movlb	0	; () banked
  6916  0030C8  51DD               	movf	_USTATcopy& (0+255),w,b
  6917  0030CA  0BFD               	andlw	253
  6918  0030CC  0A04               	xorlw	4
  6919  0030CE  A4D8               	btfss	status,2,c
  6920  0030D0  0012               	return	
  6921                           
  6922                           ; BSR set to: 0
  6923                           ;usb_device.c: 2435: {
  6924                           ;usb_device.c: 2438: USBCtrlTrfInHandler();
  6925  0030D2  ECD9  F013         	call	_USBCtrlTrfInHandler	;wreg free
  6926  0030D6  0012               	return	
  6927  0030D8                     __end_of_USBCtrlEPService:
  6928                           	opt stack 0
  6929                           tosu	equ	0xFFF
  6930                           tosh	equ	0xFFE
  6931                           tosl	equ	0xFFD
  6932                           pclath	equ	0xFFA
  6933                           tblptru	equ	0xFF8
  6934                           tblptrh	equ	0xFF7
  6935                           tblptrl	equ	0xFF6
  6936                           tablat	equ	0xFF5
  6937                           prodh	equ	0xFF4
  6938                           prodl	equ	0xFF3
  6939                           intcon	equ	0xFF2
  6940                           intcon2	equ	0xFF1
  6941                           intcon3	equ	0xFF0
  6942                           postinc0	equ	0xFEE
  6943                           plusw0	equ	0xFEB
  6944                           wreg	equ	0xFE8
  6945                           postinc1	equ	0xFE6
  6946                           postdec1	equ	0xFE5
  6947                           fsr1h	equ	0xFE2
  6948                           fsr1l	equ	0xFE1
  6949                           indf2	equ	0xFDF
  6950                           postinc2	equ	0xFDE
  6951                           postdec2	equ	0xFDD
  6952                           plusw2	equ	0xFDB
  6953                           fsr2h	equ	0xFDA
  6954                           fsr2l	equ	0xFD9
  6955                           status	equ	0xFD8
  6956                           
  6957 ;; *************** function _memcpy *****************
  6958 ;; Defined at:
  6959 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memcpy.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;  d1              2   21[BANK0 ] PTR void 
  6962 ;;		 -> SetupPkt(8), 
  6963 ;;  s1              2   23[BANK0 ] PTR const void 
  6964 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  6965 ;;  n               2   25[BANK0 ] unsigned int 
  6966 ;; Auto vars:     Size  Location     Type
  6967 ;;  s               2   29[BANK0 ] PTR const unsigned char 
  6968 ;;		 -> RAM(3775), CtrlTrfData(8), SetupPkt(8), 
  6969 ;;  d               2   27[BANK0 ] PTR unsigned char 
  6970 ;;		 -> SetupPkt(8), 
  6971 ;;  tmp             1   31[BANK0 ] unsigned char 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  2   21[BANK0 ] PTR void 
  6974 ;; Registers used:
  6975 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6981 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6982 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6985 ;;Total ram usage:       11 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    9
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_USBCtrlEPService
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           	psect	text32
  6996  003ABC                     __ptext32:
  6997                           	opt stack 0
  6998  003ABC                     _memcpy:
  6999                           	opt stack 16
  7000                           
  7001                           ;incstack = 0
  7002  003ABC  C077  F07D         	movff	memcpy@s1,memcpy@s
  7003  003AC0  C078  F07E         	movff	memcpy@s1+1,memcpy@s+1
  7004  003AC4  C075  F07B         	movff	memcpy@d1,memcpy@d
  7005  003AC8  C076  F07C         	movff	memcpy@d1+1,memcpy@d+1
  7006  003ACC  D011               	goto	l2412
  7007  003ACE                     l6777:
  7008  003ACE  C07D  FFD9         	movff	memcpy@s,fsr2l
  7009  003AD2  C07E  FFDA         	movff	memcpy@s+1,fsr2h
  7010  003AD6  50DF               	movf	indf2,w,c
  7011  003AD8  0100               	movlb	0	; () banked
  7012  003ADA  6F7F               	movwf	memcpy@tmp& (0+255),b
  7013                           
  7014                           ; BSR set to: 0
  7015  003ADC  4B7D               	infsnz	memcpy@s& (0+255),f,b
  7016  003ADE  2B7E               	incf	(memcpy@s+1)& (0+255),f,b
  7017                           
  7018                           ; BSR set to: 0
  7019  003AE0  C07B  FFD9         	movff	memcpy@d,fsr2l
  7020  003AE4  C07C  FFDA         	movff	memcpy@d+1,fsr2h
  7021  003AE8  C07F  FFDF         	movff	memcpy@tmp,indf2
  7022                           
  7023                           ; BSR set to: 0
  7024  003AEC  4B7B               	infsnz	memcpy@d& (0+255),f,b
  7025  003AEE  2B7C               	incf	(memcpy@d+1)& (0+255),f,b
  7026  003AF0                     l2412:
  7027                           
  7028                           ; BSR set to: 0
  7029  003AF0  0100               	movlb	0	; () banked
  7030  003AF2  0779               	decf	memcpy@n& (0+255),f,b
  7031  003AF4  A0D8               	btfss	status,0,c
  7032  003AF6  077A               	decf	(memcpy@n+1)& (0+255),f,b
  7033  003AF8  2979               	incf	memcpy@n& (0+255),w,b
  7034  003AFA  E1E9               	bnz	l6777
  7035  003AFC  297A               	incf	(memcpy@n+1)& (0+255),w,b
  7036  003AFE  B4D8               	btfsc	status,2,c
  7037  003B00  0012               	return	
  7038  003B02  D7E5               	goto	l2413
  7039  003B04                     __end_of_memcpy:
  7040                           	opt stack 0
  7041                           tosu	equ	0xFFF
  7042                           tosh	equ	0xFFE
  7043                           tosl	equ	0xFFD
  7044                           pclath	equ	0xFFA
  7045                           tblptru	equ	0xFF8
  7046                           tblptrh	equ	0xFF7
  7047                           tblptrl	equ	0xFF6
  7048                           tablat	equ	0xFF5
  7049                           prodh	equ	0xFF4
  7050                           prodl	equ	0xFF3
  7051                           intcon	equ	0xFF2
  7052                           intcon2	equ	0xFF1
  7053                           intcon3	equ	0xFF0
  7054                           postinc0	equ	0xFEE
  7055                           plusw0	equ	0xFEB
  7056                           wreg	equ	0xFE8
  7057                           postinc1	equ	0xFE6
  7058                           postdec1	equ	0xFE5
  7059                           fsr1h	equ	0xFE2
  7060                           fsr1l	equ	0xFE1
  7061                           indf2	equ	0xFDF
  7062                           postinc2	equ	0xFDE
  7063                           postdec2	equ	0xFDD
  7064                           plusw2	equ	0xFDB
  7065                           fsr2h	equ	0xFDA
  7066                           fsr2l	equ	0xFD9
  7067                           status	equ	0xFD8
  7068                           
  7069 ;; *************** function _USBCtrlTrfSetupHandler *****************
  7070 ;; Defined at:
  7071 ;;		line 2483 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7072 ;; Parameters:    Size  Location     Type
  7073 ;;		None
  7074 ;; Auto vars:     Size  Location     Type
  7075 ;;		None
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  1    wreg      void 
  7078 ;; Registers used:
  7079 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7089 ;;Total ram usage:        0 bytes
  7090 ;; Hardware stack levels used:    1
  7091 ;; Hardware stack levels required when called:   15
  7092 ;; This function calls:
  7093 ;;		_USBCheckStdRequest
  7094 ;;		_USBCtrlEPServiceComplete
  7095 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7096 ;; This function is called by:
  7097 ;;		_USBCtrlEPService
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101                           	psect	text33
  7102  00328A                     __ptext33:
  7103                           	opt stack 0
  7104  00328A                     _USBCtrlTrfSetupHandler:
  7105                           	opt stack 10
  7106                           
  7107                           ;usb_device.c: 2488: shortPacketStatus = 0;
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;incstack = 0
  7111  00328A  0E00               	movlw	0
  7112  00328C  0100               	movlb	0	; () banked
  7113  00328E  6FC9               	movwf	_shortPacketStatus& (0+255),b
  7114                           
  7115                           ;usb_device.c: 2489: USBDeferStatusStagePacket = 0;
  7116  003290  0E00               	movlw	0
  7117  003292  6FC2               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
  7118                           
  7119                           ;usb_device.c: 2490: USBDeferINDataStagePackets = 0;
  7120  003294  0E00               	movlw	0
  7121  003296  6FBF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7122                           
  7123                           ;usb_device.c: 2491: USBDeferOUTDataStagePackets = 0;
  7124  003298  0E00               	movlw	0
  7125  00329A  6FBE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7126                           
  7127                           ;usb_device.c: 2492: BothEP0OutUOWNsSet = 0;
  7128  00329C  0E00               	movlw	0
  7129  00329E  6FC4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
  7130                           
  7131                           ;usb_device.c: 2493: controlTransferState = 0;
  7132  0032A0  0E00               	movlw	0
  7133  0032A2  6FC8               	movwf	_controlTransferState& (0+255),b
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;usb_device.c: 2502: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7137  0032A4  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
  7138  0032A8  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7139  0032AC  0E7F               	movlw	127
  7140  0032AE  16DF               	andwf	indf2,f,c
  7141                           
  7142                           ; BSR set to: 0
  7143                           ;usb_device.c: 2503: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7144  0032B0  0E04               	movlw	4
  7145  0032B2  1BAC               	xorwf	_pBDTEntryIn& (0+255),f,b
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;usb_device.c: 2504: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
  7149  0032B4  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
  7150  0032B8  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7151  0032BC  0E7F               	movlw	127
  7152  0032BE  16DF               	andwf	indf2,f,c
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;usb_device.c: 2505: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
  7156  0032C0  0E04               	movlw	4
  7157  0032C2  1BAC               	xorwf	_pBDTEntryIn& (0+255),f,b
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;usb_device.c: 2506: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
  7161  0032C4  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7162  0032C8  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7163  0032CC  0E7F               	movlw	127
  7164  0032CE  16DF               	andwf	indf2,f,c
  7165                           
  7166                           ; BSR set to: 0
  7167                           ;usb_device.c: 2508: inPipes[0].info.Val = 0;
  7168  0032D0  0E00               	movlw	0
  7169  0032D2  6FA9               	movwf	(_inPipes+3)& (0+255),b
  7170                           
  7171                           ; BSR set to: 0
  7172                           ;usb_device.c: 2509: inPipes[0].wCount.Val = 0;
  7173  0032D4  0E00               	movlw	0
  7174  0032D6  6FAB               	movwf	(_inPipes+5)& (0+255),b
  7175  0032D8  0E00               	movlw	0
  7176  0032DA  6FAA               	movwf	(_inPipes+4)& (0+255),b
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;usb_device.c: 2510: outPipes[0].info.Val = 0;
  7180  0032DC  0E00               	movlw	0
  7181  0032DE  6E04               	movwf	_outPipes+3,c
  7182                           
  7183                           ; BSR set to: 0
  7184                           ;usb_device.c: 2511: outPipes[0].wCount.Val = 0;
  7185  0032E0  0E00               	movlw	0
  7186  0032E2  6E06               	movwf	_outPipes+5,c
  7187  0032E4  0E00               	movlw	0
  7188  0032E6  6E05               	movwf	_outPipes+4,c
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;usb_device.c: 2517: USBCheckStdRequest();
  7192  0032E8  ECD7  F00F         	call	_USBCheckStdRequest	;wreg free
  7193                           
  7194                           ;usb_device.c: 2518: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
  7195  0032EC  0E00               	movlw	0
  7196  0032EE  0100               	movlb	0	; () banked
  7197  0032F0  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7198  0032F2  0E03               	movlw	3
  7199  0032F4  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7200  0032F6  0E00               	movlw	0
  7201  0032F8  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7202  0032FA  0E00               	movlw	0
  7203  0032FC  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7204  0032FE  0E00               	movlw	0
  7205  003300  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7206  003302  0E00               	movlw	0
  7207  003304  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7208  003306  EC85  F01B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7209                           
  7210                           ;usb_device.c: 2531: USBCtrlEPServiceComplete();
  7211  00330A  EC89  F00D         	call	_USBCtrlEPServiceComplete	;wreg free
  7212  00330E  0012               	return		;funcret
  7213  003310                     __end_of_USBCtrlTrfSetupHandler:
  7214                           	opt stack 0
  7215                           tosu	equ	0xFFF
  7216                           tosh	equ	0xFFE
  7217                           tosl	equ	0xFFD
  7218                           pclath	equ	0xFFA
  7219                           tblptru	equ	0xFF8
  7220                           tblptrh	equ	0xFF7
  7221                           tblptrl	equ	0xFF6
  7222                           tablat	equ	0xFF5
  7223                           prodh	equ	0xFF4
  7224                           prodl	equ	0xFF3
  7225                           intcon	equ	0xFF2
  7226                           intcon2	equ	0xFF1
  7227                           intcon3	equ	0xFF0
  7228                           postinc0	equ	0xFEE
  7229                           plusw0	equ	0xFEB
  7230                           wreg	equ	0xFE8
  7231                           postinc1	equ	0xFE6
  7232                           postdec1	equ	0xFE5
  7233                           fsr1h	equ	0xFE2
  7234                           fsr1l	equ	0xFE1
  7235                           indf2	equ	0xFDF
  7236                           postinc2	equ	0xFDE
  7237                           postdec2	equ	0xFDD
  7238                           plusw2	equ	0xFDB
  7239                           fsr2h	equ	0xFDA
  7240                           fsr2l	equ	0xFD9
  7241                           status	equ	0xFD8
  7242                           
  7243 ;; *************** function _USBCtrlEPServiceComplete *****************
  7244 ;; Defined at:
  7245 ;;		line 1634 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;		None
  7248 ;; Auto vars:     Size  Location     Type
  7249 ;;		None
  7250 ;; Return value:  Size  Location     Type
  7251 ;;                  1    wreg      void 
  7252 ;; Registers used:
  7253 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7254 ;; Tracked objects:
  7255 ;;		On entry : 0/0
  7256 ;;		On exit  : 0/0
  7257 ;;		Unchanged: 0/0
  7258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7263 ;;Total ram usage:        0 bytes
  7264 ;; Hardware stack levels used:    1
  7265 ;; Hardware stack levels required when called:   11
  7266 ;; This function calls:
  7267 ;;		_USBCtrlEPAllowDataStage
  7268 ;;		_USBCtrlEPAllowStatusStage
  7269 ;; This function is called by:
  7270 ;;		_USBCtrlTrfSetupHandler
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           	psect	text34
  7275  001B12                     __ptext34:
  7276                           	opt stack 0
  7277  001B12                     _USBCtrlEPServiceComplete:
  7278                           	opt stack 13
  7279                           
  7280                           ;usb_device.c: 1640: UCONbits.PKTDIS = 0;
  7281                           
  7282                           ;incstack = 0
  7283  001B12  9865               	bcf	3941,4,c	;volatile
  7284                           
  7285                           ;usb_device.c: 1646: if(inPipes[0].info.bits.busy == 0)
  7286  001B14  0100               	movlb	0	; () banked
  7287  001B16  BFA9               	btfsc	(_inPipes+3)& (0+255),7,b
  7288  001B18  D039               	goto	l1163
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;usb_device.c: 1647: {
  7292                           ;usb_device.c: 1648: if(outPipes[0].info.bits.busy == 1)
  7293  001B1A  AE04               	btfss	_outPipes+3,7,c
  7294  001B1C  D00C               	goto	l1164
  7295                           
  7296                           ; BSR set to: 0
  7297                           ;usb_device.c: 1649: {
  7298                           ;usb_device.c: 1650: controlTransferState = 2;
  7299  001B1E  0E02               	movlw	2
  7300  001B20  6FC8               	movwf	_controlTransferState& (0+255),b
  7301                           
  7302                           ;usb_device.c: 1661: if(USBDeferOUTDataStagePackets == 0)
  7303  001B22  51BE               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
  7304  001B24  B4D8               	btfsc	status,2,c
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;usb_device.c: 1662: {
  7308                           ;usb_device.c: 1663: USBCtrlEPAllowDataStage();
  7309  001B26  ECF1  F016         	call	_USBCtrlEPAllowDataStage	;wreg free
  7310                           
  7311                           ;usb_device.c: 1664: }
  7312                           ;usb_device.c: 1668: USBStatusStageEnabledFlag2 = 0;
  7313  001B2A  0E00               	movlw	0
  7314  001B2C  0100               	movlb	0	; () banked
  7315  001B2E  6FC0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;usb_device.c: 1669: USBStatusStageEnabledFlag1 = 0;
  7319  001B30  0E00               	movlw	0
  7320  001B32  6FC1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7321                           
  7322                           ;usb_device.c: 1670: }
  7323  001B34  0012               	return	
  7324  001B36                     l1164:
  7325                           
  7326                           ; BSR set to: 0
  7327                           ;usb_device.c: 1671: else
  7328                           ;usb_device.c: 1672: {
  7329                           ;usb_device.c: 1677: pBDTEntryEP0OutNext->CNT = 8;
  7330                           
  7331                           ; BSR set to: 0
  7332  001B36  EE20 F001          	lfsr	2,1
  7333  001B3A  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7334  001B3C  26D9               	addwf	fsr2l,f,c
  7335  001B3E  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7336  001B40  22DA               	addwfc	fsr2h,f,c
  7337  001B42  0E08               	movlw	8
  7338  001B44  6EDF               	movwf	indf2,c
  7339                           
  7340                           ;usb_device.c: 1678: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7341  001B46  EE20 F002          	lfsr	2,2
  7342  001B4A  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7343  001B4C  26D9               	addwf	fsr2l,f,c
  7344  001B4E  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7345  001B50  22DA               	addwfc	fsr2h,f,c
  7346  001B52  0E30               	movlw	48
  7347  001B54  6EDE               	movwf	postinc2,c
  7348  001B56  0E04               	movlw	4
  7349  001B58  6EDD               	movwf	postdec2,c
  7350                           
  7351                           ; BSR set to: 0
  7352                           ;usb_device.c: 1679: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
  7353  001B5A  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7354  001B5E  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7355  001B62  0E0C               	movlw	12
  7356  001B64  6EDF               	movwf	indf2,c
  7357                           
  7358                           ; BSR set to: 0
  7359                           ;usb_device.c: 1680: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7360  001B66  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7361  001B6A  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7362  001B6E  0E00               	movlw	0
  7363  001B70  8EDB               	bsf	plusw2,7,c
  7364                           
  7365                           ;usb_device.c: 1681: pBDTEntryIn[0]->STAT.Val = 0x04;
  7366  001B72  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
  7367  001B76  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7368  001B7A  0E04               	movlw	4
  7369  001B7C  6EDF               	movwf	indf2,c
  7370                           
  7371                           ; BSR set to: 0
  7372                           ;usb_device.c: 1682: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7373  001B7E  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
  7374  001B82  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7375  001B86  0E00               	movlw	0
  7376  001B88  8EDB               	bsf	plusw2,7,c
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;usb_device.c: 1683: }
  7380                           ;usb_device.c: 1684: }
  7381  001B8A  0012               	return	
  7382  001B8C                     l1163:
  7383                           
  7384                           ; BSR set to: 0
  7385                           ;usb_device.c: 1685: else
  7386                           ;usb_device.c: 1686: {
  7387                           ;usb_device.c: 1687: if(SetupPkt.DataDir == (0x80>>7))
  7388  001B8C  0104               	movlb	4	; () banked
  7389  001B8E  AF30               	btfss	48,7,b	;volatile
  7390  001B90  D012               	goto	l1168
  7391                           
  7392                           ; BSR set to: 4
  7393                           ;usb_device.c: 1688: {
  7394                           ;usb_device.c: 1689: controlTransferState = 1;
  7395  001B92  0E01               	movlw	1
  7396  001B94  0100               	movlb	0	; () banked
  7397  001B96  6FC8               	movwf	_controlTransferState& (0+255),b
  7398                           
  7399                           ;usb_device.c: 1703: if(USBDeferINDataStagePackets == 0)
  7400  001B98  51BF               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
  7401  001B9A  B4D8               	btfsc	status,2,c
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;usb_device.c: 1704: {
  7405                           ;usb_device.c: 1705: USBCtrlEPAllowDataStage();
  7406  001B9C  ECF1  F016         	call	_USBCtrlEPAllowDataStage	;wreg free
  7407                           
  7408                           ;usb_device.c: 1706: }
  7409                           ;usb_device.c: 1728: USBStatusStageEnabledFlag2 = 0;
  7410  001BA0  0E00               	movlw	0
  7411  001BA2  0100               	movlb	0	; () banked
  7412  001BA4  6FC0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;usb_device.c: 1729: USBStatusStageEnabledFlag1 = 0;
  7416  001BA6  0E00               	movlw	0
  7417  001BA8  6FC1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7418                           
  7419                           ; BSR set to: 0
  7420                           ;usb_device.c: 1730: if(USBDeferStatusStagePacket == 0)
  7421  001BAA  51C2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  7422  001BAC  A4D8               	btfss	status,2,c
  7423  001BAE  0012               	return	
  7424                           
  7425                           ; BSR set to: 0
  7426                           ;usb_device.c: 1731: {
  7427                           ;usb_device.c: 1732: USBCtrlEPAllowStatusStage();
  7428  001BB0  EC77  F013         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7429                           
  7430                           ;usb_device.c: 1733: }
  7431                           ;usb_device.c: 1734: }
  7432  001BB4  0012               	return	
  7433  001BB6                     l1168:
  7434                           
  7435                           ;usb_device.c: 1735: else
  7436                           ;usb_device.c: 1736: {
  7437                           ;usb_device.c: 1747: controlTransferState = 2;
  7438  001BB6  0E02               	movlw	2
  7439  001BB8  0100               	movlb	0	; () banked
  7440  001BBA  6FC8               	movwf	_controlTransferState& (0+255),b
  7441                           
  7442                           ; BSR set to: 0
  7443                           ;usb_device.c: 1750: pBDTEntryEP0OutNext->CNT = 8;
  7444  001BBC  EE20 F001          	lfsr	2,1
  7445  001BC0  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7446  001BC2  26D9               	addwf	fsr2l,f,c
  7447  001BC4  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7448  001BC6  22DA               	addwfc	fsr2h,f,c
  7449  001BC8  0E08               	movlw	8
  7450  001BCA  6EDF               	movwf	indf2,c
  7451                           
  7452                           ; BSR set to: 0
  7453                           ;usb_device.c: 1751: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
  7454  001BCC  EE20 F002          	lfsr	2,2
  7455  001BD0  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7456  001BD2  26D9               	addwf	fsr2l,f,c
  7457  001BD4  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7458  001BD6  22DA               	addwfc	fsr2h,f,c
  7459  001BD8  0E30               	movlw	48
  7460  001BDA  6EDE               	movwf	postinc2,c
  7461  001BDC  0E04               	movlw	4
  7462  001BDE  6EDD               	movwf	postdec2,c
  7463                           
  7464                           ; BSR set to: 0
  7465                           ;usb_device.c: 1752: pBDTEntryEP0OutNext->STAT.Val = 0x04;
  7466  001BE0  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7467  001BE4  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7468  001BE8  0E04               	movlw	4
  7469  001BEA  6EDF               	movwf	indf2,c
  7470                           
  7471                           ; BSR set to: 0
  7472                           ;usb_device.c: 1753: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7473  001BEC  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7474  001BF0  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7475  001BF4  0E00               	movlw	0
  7476  001BF6  8EDB               	bsf	plusw2,7,c
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;usb_device.c: 1756: USBStatusStageEnabledFlag2 = 0;
  7480  001BF8  0E00               	movlw	0
  7481  001BFA  6FC0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
  7482                           
  7483                           ; BSR set to: 0
  7484                           ;usb_device.c: 1757: USBStatusStageEnabledFlag1 = 0;
  7485  001BFC  0E00               	movlw	0
  7486  001BFE  6FC1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
  7487                           
  7488                           ; BSR set to: 0
  7489                           ;usb_device.c: 1758: if(USBDeferStatusStagePacket == 0)
  7490  001C00  51C2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
  7491  001C02  A4D8               	btfss	status,2,c
  7492  001C04  0012               	return	
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;usb_device.c: 1759: {
  7496                           ;usb_device.c: 1760: USBCtrlEPAllowStatusStage();
  7497  001C06  EC77  F013         	call	_USBCtrlEPAllowStatusStage	;wreg free
  7498  001C0A  0012               	return	
  7499  001C0C                     __end_of_USBCtrlEPServiceComplete:
  7500                           	opt stack 0
  7501                           tosu	equ	0xFFF
  7502                           tosh	equ	0xFFE
  7503                           tosl	equ	0xFFD
  7504                           pclath	equ	0xFFA
  7505                           tblptru	equ	0xFF8
  7506                           tblptrh	equ	0xFF7
  7507                           tblptrl	equ	0xFF6
  7508                           tablat	equ	0xFF5
  7509                           prodh	equ	0xFF4
  7510                           prodl	equ	0xFF3
  7511                           intcon	equ	0xFF2
  7512                           intcon2	equ	0xFF1
  7513                           intcon3	equ	0xFF0
  7514                           postinc0	equ	0xFEE
  7515                           plusw0	equ	0xFEB
  7516                           wreg	equ	0xFE8
  7517                           postinc1	equ	0xFE6
  7518                           postdec1	equ	0xFE5
  7519                           fsr1h	equ	0xFE2
  7520                           fsr1l	equ	0xFE1
  7521                           indf2	equ	0xFDF
  7522                           postinc2	equ	0xFDE
  7523                           postdec2	equ	0xFDD
  7524                           plusw2	equ	0xFDB
  7525                           fsr2h	equ	0xFDA
  7526                           fsr2l	equ	0xFD9
  7527                           status	equ	0xFD8
  7528                           
  7529 ;; *************** function _USBCtrlEPAllowDataStage *****************
  7530 ;; Defined at:
  7531 ;;		line 1506 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;		None
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;		None
  7536 ;; Return value:  Size  Location     Type
  7537 ;;                  1    wreg      void 
  7538 ;; Registers used:
  7539 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7540 ;; Tracked objects:
  7541 ;;		On entry : 0/0
  7542 ;;		On exit  : 0/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7549 ;;Total ram usage:        0 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; Hardware stack levels required when called:   10
  7552 ;; This function calls:
  7553 ;;		_USBCtrlTrfTxService
  7554 ;; This function is called by:
  7555 ;;		_USBCtrlEPServiceComplete
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           	psect	text35
  7560  002DE2                     __ptext35:
  7561                           	opt stack 0
  7562  002DE2                     _USBCtrlEPAllowDataStage:
  7563                           	opt stack 13
  7564                           
  7565                           ;usb_device.c: 1508: USBDeferINDataStagePackets = 0;
  7566                           
  7567                           ;incstack = 0
  7568  002DE2  0E00               	movlw	0
  7569  002DE4  0100               	movlb	0	; () banked
  7570  002DE6  6FBF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
  7571                           
  7572                           ;usb_device.c: 1509: USBDeferOUTDataStagePackets = 0;
  7573  002DE8  0E00               	movlw	0
  7574  002DEA  6FBE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;usb_device.c: 1511: if(controlTransferState == 2)
  7578  002DEC  0E02               	movlw	2
  7579  002DEE  19C8               	xorwf	_controlTransferState& (0+255),w,b
  7580  002DF0  A4D8               	btfss	status,2,c
  7581  002DF2  D01F               	goto	l1152
  7582                           
  7583                           ; BSR set to: 0
  7584                           ;usb_device.c: 1512: {
  7585                           ;usb_device.c: 1514: pBDTEntryEP0OutNext->CNT = 8;
  7586  002DF4  EE20 F001          	lfsr	2,1
  7587  002DF8  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7588  002DFA  26D9               	addwf	fsr2l,f,c
  7589  002DFC  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7590  002DFE  22DA               	addwfc	fsr2h,f,c
  7591  002E00  0E08               	movlw	8
  7592  002E02  6EDF               	movwf	indf2,c
  7593                           
  7594                           ;usb_device.c: 1515: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
  7595  002E04  EE20 F002          	lfsr	2,2
  7596  002E08  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
  7597  002E0A  26D9               	addwf	fsr2l,f,c
  7598  002E0C  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
  7599  002E0E  22DA               	addwfc	fsr2h,f,c
  7600  002E10  0E38               	movlw	56
  7601  002E12  6EDE               	movwf	postinc2,c
  7602  002E14  0E04               	movlw	4
  7603  002E16  6EDD               	movwf	postdec2,c
  7604                           
  7605                           ; BSR set to: 0
  7606                           ;usb_device.c: 1516: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
  7607  002E18  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7608  002E1C  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7609  002E20  0E48               	movlw	72
  7610  002E22  6EDF               	movwf	indf2,c
  7611                           
  7612                           ; BSR set to: 0
  7613                           ;usb_device.c: 1517: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
  7614  002E24  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
  7615  002E28  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
  7616  002E2C  0E00               	movlw	0
  7617  002E2E  8EDB               	bsf	plusw2,7,c
  7618                           
  7619                           ;usb_device.c: 1518: }
  7620  002E30  0012               	return	
  7621  002E32                     l1152:
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;usb_device.c: 1519: else
  7625                           ;usb_device.c: 1520: {
  7626                           ;usb_device.c: 1523: if(SetupPkt.wLength < inPipes[0].wCount.Val)
  7627                           
  7628                           ; BSR set to: 0
  7629  002E32  51AA               	movf	(_inPipes+4)& (0+255),w,b
  7630  002E34  0104               	movlb	4	; () banked
  7631  002E36  5D36               	subwf	54,w,b	;volatile
  7632  002E38  0100               	movlb	0	; () banked
  7633  002E3A  51AB               	movf	(_inPipes+5)& (0+255),w,b
  7634  002E3C  0104               	movlb	4	; () banked
  7635  002E3E  5937               	subwfb	55,w,b	;volatile
  7636  002E40  B0D8               	btfsc	status,0,c
  7637  002E42  D004               	goto	l1154
  7638                           
  7639                           ; BSR set to: 4
  7640                           ;usb_device.c: 1524: {
  7641                           ;usb_device.c: 1525: inPipes[0].wCount.Val = SetupPkt.wLength;
  7642  002E44  C436 F0AA          	movff	1078,_inPipes+4	;volatile
  7643  002E48  C437 F0AB          	movff	1079,_inPipes+5	;volatile
  7644  002E4C                     l1154:
  7645                           
  7646                           ; BSR set to: 4
  7647                           ;usb_device.c: 1526: }
  7648                           ;usb_device.c: 1527: USBCtrlTrfTxService();
  7649                           
  7650                           ; BSR set to: 4
  7651  002E4C  EC82  F011         	call	_USBCtrlTrfTxService	;wreg free
  7652                           
  7653                           ;usb_device.c: 1532: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
  7654  002E50  0100               	movlb	0	; () banked
  7655  002E52  EE20 F002          	lfsr	2,2
  7656  002E56  51AC               	movf	_pBDTEntryIn& (0+255),w,b
  7657  002E58  26D9               	addwf	fsr2l,f,c
  7658  002E5A  51AD               	movf	(_pBDTEntryIn+1)& (0+255),w,b
  7659  002E5C  22DA               	addwfc	fsr2h,f,c
  7660  002E5E  0E38               	movlw	56
  7661  002E60  6EDE               	movwf	postinc2,c
  7662  002E62  0E04               	movlw	4
  7663  002E64  6EDD               	movwf	postdec2,c
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;usb_device.c: 1533: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
  7667  002E66  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
  7668  002E6A  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7669  002E6E  0E48               	movlw	72
  7670  002E70  6EDF               	movwf	indf2,c
  7671                           
  7672                           ; BSR set to: 0
  7673                           ;usb_device.c: 1534: pBDTEntryIn[0]->STAT.Val |= 0x80;
  7674  002E72  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
  7675  002E76  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
  7676  002E7A  0E00               	movlw	0
  7677  002E7C  8EDB               	bsf	plusw2,7,c
  7678  002E7E  0012               	return	
  7679  002E80                     __end_of_USBCtrlEPAllowDataStage:
  7680                           	opt stack 0
  7681                           tosu	equ	0xFFF
  7682                           tosh	equ	0xFFE
  7683                           tosl	equ	0xFFD
  7684                           pclath	equ	0xFFA
  7685                           tblptru	equ	0xFF8
  7686                           tblptrh	equ	0xFF7
  7687                           tblptrl	equ	0xFF6
  7688                           tablat	equ	0xFF5
  7689                           prodh	equ	0xFF4
  7690                           prodl	equ	0xFF3
  7691                           intcon	equ	0xFF2
  7692                           intcon2	equ	0xFF1
  7693                           intcon3	equ	0xFF0
  7694                           postinc0	equ	0xFEE
  7695                           plusw0	equ	0xFEB
  7696                           wreg	equ	0xFE8
  7697                           postinc1	equ	0xFE6
  7698                           postdec1	equ	0xFE5
  7699                           fsr1h	equ	0xFE2
  7700                           fsr1l	equ	0xFE1
  7701                           indf2	equ	0xFDF
  7702                           postinc2	equ	0xFDE
  7703                           postdec2	equ	0xFDD
  7704                           plusw2	equ	0xFDB
  7705                           fsr2h	equ	0xFDA
  7706                           fsr2l	equ	0xFD9
  7707                           status	equ	0xFD8
  7708                           
  7709 ;; *************** function _USBCheckStdRequest *****************
  7710 ;; Defined at:
  7711 ;;		line 2703 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7712 ;; Parameters:    Size  Location     Type
  7713 ;;		None
  7714 ;; Auto vars:     Size  Location     Type
  7715 ;;		None
  7716 ;; Return value:  Size  Location     Type
  7717 ;;                  1    wreg      void 
  7718 ;; Registers used:
  7719 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7720 ;; Tracked objects:
  7721 ;;		On entry : 0/0
  7722 ;;		On exit  : 0/0
  7723 ;;		Unchanged: 0/0
  7724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7729 ;;Total ram usage:        0 bytes
  7730 ;; Hardware stack levels used:    1
  7731 ;; Hardware stack levels required when called:   14
  7732 ;; This function calls:
  7733 ;;		_USBStdFeatureReqHandler
  7734 ;;		_USBStdGetDscHandler
  7735 ;;		_USBStdGetStatusHandler
  7736 ;;		_USBStdSetCfgHandler
  7737 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  7738 ;; This function is called by:
  7739 ;;		_USBCtrlTrfSetupHandler
  7740 ;; This function uses a non-reentrant model
  7741 ;;
  7742                           
  7743                           	psect	text36
  7744  001FAE                     __ptext36:
  7745                           	opt stack 0
  7746  001FAE                     _USBCheckStdRequest:
  7747                           	opt stack 10
  7748                           
  7749                           ;usb_device.c: 2705: if(SetupPkt.RequestType != (0x00>>5)) return;
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;incstack = 0
  7753  001FAE  0104               	movlb	4	; () banked
  7754  001FB0  3930               	swapf	48,w,b	;volatile
  7755  001FB2  32E8               	rrcf	wreg,f,c
  7756  001FB4  0B03               	andlw	3
  7757  001FB6  0900               	iorlw	0
  7758  001FB8  A4D8               	btfss	status,2,c
  7759  001FBA  0012               	return	
  7760  001FBC  D048               	goto	l1287
  7761  001FBE                     l1288:
  7762                           
  7763                           ; BSR set to: 4
  7764                           ;usb_device.c: 2710: inPipes[0].info.bits.busy = 1;
  7765  001FBE  0100               	movlb	0	; () banked
  7766  001FC0  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  7767                           
  7768                           ; BSR set to: 0
  7769                           ;usb_device.c: 2711: USBDeviceState = ADR_PENDING_STATE;
  7770  001FC2  0E08               	movlw	8
  7771  001FC4  6FCA               	movwf	_USBDeviceState& (0+255),b
  7772                           
  7773                           ;usb_device.c: 2713: break;
  7774  001FC6  0012               	return	
  7775  001FC8                     
  7776                           ;usb_device.c: 2715: USBStdGetDscHandler();
  7777                           
  7778                           ; BSR set to: 0
  7779  001FC8  ECDA  F00B         	call	_USBStdGetDscHandler	;wreg free
  7780                           
  7781                           ;usb_device.c: 2716: break;
  7782  001FCC  0012               	return	
  7783  001FCE                     
  7784                           ;usb_device.c: 2718: USBStdSetCfgHandler();
  7785  001FCE  ECF1  F00E         	call	_USBStdSetCfgHandler	;wreg free
  7786                           
  7787                           ;usb_device.c: 2719: break;
  7788  001FD2  0012               	return	
  7789  001FD4                     
  7790                           ;usb_device.c: 2721: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
  7791  001FD4  0EDE               	movlw	low _USBActiveConfiguration
  7792  001FD6  0100               	movlb	0	; () banked
  7793  001FD8  6FA6               	movwf	_inPipes& (0+255),b
  7794  001FDA  0E00               	movlw	high _USBActiveConfiguration
  7795  001FDC  6FA7               	movwf	(_inPipes+1)& (0+255),b
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;usb_device.c: 2722: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7799  001FDE  81A9               	bsf	(_inPipes+3)& (0+255),0,b
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;usb_device.c: 2723: inPipes[0].wCount.v[0] = 1;
  7803  001FE0  0E01               	movlw	1
  7804  001FE2  6FAA               	movwf	(_inPipes+4)& (0+255),b
  7805                           
  7806                           ; BSR set to: 0
  7807                           ;usb_device.c: 2724: inPipes[0].info.bits.busy = 1;
  7808  001FE4  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  7809                           
  7810                           ;usb_device.c: 2725: break;
  7811  001FE6  0012               	return	
  7812  001FE8                     
  7813                           ;usb_device.c: 2727: USBStdGetStatusHandler();
  7814                           
  7815                           ; BSR set to: 0
  7816  001FE8  ECF2  F014         	call	_USBStdGetStatusHandler	;wreg free
  7817                           
  7818                           ;usb_device.c: 2728: break;
  7819  001FEC  0012               	return	
  7820  001FEE                     
  7821                           ;usb_device.c: 2730: case 3:
  7822                           ;usb_device.c: 2731: USBStdFeatureReqHandler();
  7823  001FEE  ECCD  F003         	call	_USBStdFeatureReqHandler	;wreg free
  7824                           
  7825                           ;usb_device.c: 2732: break;
  7826  001FF2  0012               	return	
  7827  001FF4                     
  7828                           ;usb_device.c: 2734: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
  7829  001FF4  0104               	movlb	4	; () banked
  7830  001FF6  5134               	movf	52,w,b	;volatile
  7831  001FF8  0D01               	mullw	1
  7832  001FFA  0E22               	movlw	low _USBAlternateInterface
  7833  001FFC  24F3               	addwf	prodl,w,c
  7834  001FFE  0100               	movlb	0	; () banked
  7835  002000  6FA6               	movwf	_inPipes& (0+255),b
  7836  002002  0E00               	movlw	high _USBAlternateInterface
  7837  002004  20F4               	addwfc	prodh,w,c
  7838  002006  6FA7               	movwf	(_inPipes+1)& (0+255),b
  7839                           
  7840                           ; BSR set to: 0
  7841                           ;usb_device.c: 2735: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  7842  002008  81A9               	bsf	(_inPipes+3)& (0+255),0,b
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;usb_device.c: 2736: inPipes[0].wCount.v[0] = 1;
  7846  00200A  0E01               	movlw	1
  7847  00200C  6FAA               	movwf	(_inPipes+4)& (0+255),b
  7848                           
  7849                           ; BSR set to: 0
  7850                           ;usb_device.c: 2737: inPipes[0].info.bits.busy = 1;
  7851  00200E  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  7852                           
  7853                           ;usb_device.c: 2738: break;
  7854  002010  0012               	return	
  7855  002012                     l1297:
  7856                           
  7857                           ; BSR set to: 4
  7858                           ;usb_device.c: 2740: inPipes[0].info.bits.busy = 1;
  7859  002012  0100               	movlb	0	; () banked
  7860  002014  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;usb_device.c: 2741: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
  7864  002016  0104               	movlb	4	; () banked
  7865  002018  5134               	movf	52,w,b	;volatile
  7866  00201A  0D01               	mullw	1
  7867  00201C  0E22               	movlw	low _USBAlternateInterface
  7868  00201E  24F3               	addwf	prodl,w,c
  7869  002020  6ED9               	movwf	fsr2l,c
  7870  002022  0E00               	movlw	high _USBAlternateInterface
  7871  002024  20F4               	addwfc	prodh,w,c
  7872  002026  6EDA               	movwf	fsr2h,c
  7873  002028  C432 FFDF          	movff	1074,indf2	;volatile
  7874                           
  7875                           ;usb_device.c: 2742: break;
  7876  00202C  0012               	return	
  7877  00202E                     
  7878                           ; BSR set to: 4
  7879                           ;usb_device.c: 2744: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
  7880                           
  7881                           ; BSR set to: 4
  7882  00202E  0E00               	movlw	0
  7883  002030  0100               	movlb	0	; () banked
  7884  002032  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  7885  002034  0E02               	movlw	2
  7886  002036  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  7887  002038  0E00               	movlw	0
  7888  00203A  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  7889  00203C  0E00               	movlw	0
  7890  00203E  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  7891  002040  0E00               	movlw	0
  7892  002042  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  7893  002044  0E00               	movlw	0
  7894  002046  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  7895  002048  EC85  F01B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  7896                           
  7897                           ;usb_device.c: 2749: }
  7898                           
  7899                           ;usb_device.c: 2748: break;
  7900                           
  7901                           ;usb_device.c: 2747: default:
  7902                           
  7903                           ;usb_device.c: 2746: case 12:
  7904                           
  7905                           ;usb_device.c: 2745: break;
  7906  00204C  0012               	return	
  7907  00204E                     l1287:
  7908  00204E  0104               	movlb	4	; () banked
  7909  002050  5131               	movf	49,w,b	;volatile
  7910                           
  7911                           ; Switch size 1, requested type "space"
  7912                           ; Number of cases is 11, Range of values is 0 to 12
  7913                           ; switch strategies available:
  7914                           ; Name         Instructions Cycles
  7915                           ; simple_byte           34    18 (average)
  7916                           ;	Chosen strategy is simple_byte
  7917  002052  0A00               	xorlw	0	; case 0
  7918  002054  B4D8               	btfsc	status,2,c
  7919  002056  D7C8               	goto	l1293
  7920  002058  0A01               	xorlw	1	; case 1
  7921  00205A  B4D8               	btfsc	status,2,c
  7922  00205C  D7C8               	goto	l1294
  7923  00205E  0A02               	xorlw	2	; case 3
  7924  002060  B4D8               	btfsc	status,2,c
  7925  002062  D7C5               	goto	l1294
  7926  002064  0A06               	xorlw	6	; case 5
  7927  002066  B4D8               	btfsc	status,2,c
  7928  002068  D7AA               	goto	l1288
  7929  00206A  0A03               	xorlw	3	; case 6
  7930  00206C  B4D8               	btfsc	status,2,c
  7931  00206E  D7AC               	goto	l1290
  7932  002070  0A01               	xorlw	1	; case 7
  7933  002072  B4D8               	btfsc	status,2,c
  7934  002074  D7DC               	goto	l1298
  7935  002076  0A0F               	xorlw	15	; case 8
  7936  002078  B4D8               	btfsc	status,2,c
  7937  00207A  D7AC               	goto	l1292
  7938  00207C  0A01               	xorlw	1	; case 9
  7939  00207E  B4D8               	btfsc	status,2,c
  7940  002080  D7A6               	goto	l1291
  7941  002082  0A03               	xorlw	3	; case 10
  7942  002084  B4D8               	btfsc	status,2,c
  7943  002086  D7B6               	goto	l1296
  7944  002088  0A01               	xorlw	1	; case 11
  7945  00208A  B4D8               	btfsc	status,2,c
  7946  00208C  D7C2               	goto	l1297
  7947  00208E  0A07               	xorlw	7	; case 12
  7948  002090  0012               	return	
  7949  002092                     __end_of_USBCheckStdRequest:
  7950                           	opt stack 0
  7951                           tosu	equ	0xFFF
  7952                           tosh	equ	0xFFE
  7953                           tosl	equ	0xFFD
  7954                           pclath	equ	0xFFA
  7955                           tblptru	equ	0xFF8
  7956                           tblptrh	equ	0xFF7
  7957                           tblptrl	equ	0xFF6
  7958                           tablat	equ	0xFF5
  7959                           prodh	equ	0xFF4
  7960                           prodl	equ	0xFF3
  7961                           intcon	equ	0xFF2
  7962                           intcon2	equ	0xFF1
  7963                           intcon3	equ	0xFF0
  7964                           postinc0	equ	0xFEE
  7965                           plusw0	equ	0xFEB
  7966                           wreg	equ	0xFE8
  7967                           postinc1	equ	0xFE6
  7968                           postdec1	equ	0xFE5
  7969                           fsr1h	equ	0xFE2
  7970                           fsr1l	equ	0xFE1
  7971                           indf2	equ	0xFDF
  7972                           postinc2	equ	0xFDE
  7973                           postdec2	equ	0xFDD
  7974                           plusw2	equ	0xFDB
  7975                           fsr2h	equ	0xFDA
  7976                           fsr2l	equ	0xFD9
  7977                           status	equ	0xFD8
  7978                           
  7979 ;; *************** function _USBStdSetCfgHandler *****************
  7980 ;; Defined at:
  7981 ;;		line 1986 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  7982 ;; Parameters:    Size  Location     Type
  7983 ;;		None
  7984 ;; Auto vars:     Size  Location     Type
  7985 ;;  i               1   41[BANK0 ] unsigned char 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  1    wreg      void 
  7988 ;; Registers used:
  7989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7998 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7999 ;;Total ram usage:        1 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; Hardware stack levels required when called:   13
  8002 ;; This function calls:
  8003 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8004 ;;		_memset
  8005 ;; This function is called by:
  8006 ;;		_USBCheckStdRequest
  8007 ;; This function uses a non-reentrant model
  8008 ;;
  8009                           
  8010                           	psect	text37
  8011  001DE2                     __ptext37:
  8012                           	opt stack 0
  8013  001DE2                     _USBStdSetCfgHandler:
  8014                           	opt stack 10
  8015                           
  8016                           ;usb_device.c: 1988: uint8_t i;
  8017                           ;usb_device.c: 1991: inPipes[0].info.bits.busy = 1;
  8018                           
  8019                           ;incstack = 0
  8020  001DE2  0100               	movlb	0	; () banked
  8021  001DE4  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  8022                           
  8023                           ; BSR set to: 0
  8024                           ;usb_device.c: 1994: memset((void*)&UEP1,0x00,(2));;
  8025  001DE6  0E27               	movlw	39
  8026  001DE8  6F75               	movwf	memset@p1& (0+255),b
  8027  001DEA  0E0F               	movlw	15
  8028  001DEC  6F76               	movwf	(memset@p1+1)& (0+255),b
  8029  001DEE  0E00               	movlw	0
  8030  001DF0  6F78               	movwf	(memset@c+1)& (0+255),b
  8031  001DF2  0E00               	movlw	0
  8032  001DF4  6F77               	movwf	memset@c& (0+255),b
  8033  001DF6  0E00               	movlw	0
  8034  001DF8  6F7A               	movwf	(memset@n+1)& (0+255),b
  8035  001DFA  0E02               	movlw	2
  8036  001DFC  6F79               	movwf	memset@n& (0+255),b
  8037  001DFE  EC45  F01F         	call	_memset	;wreg free
  8038                           
  8039                           ;usb_device.c: 1997: memset((void*)&BDT[0], 0x00, sizeof(BDT));
  8040  001E02  0E00               	movlw	0
  8041  001E04  0100               	movlb	0	; () banked
  8042  001E06  6F75               	movwf	memset@p1& (0+255),b
  8043  001E08  0E04               	movlw	4
  8044  001E0A  6F76               	movwf	(memset@p1+1)& (0+255),b
  8045  001E0C  0E00               	movlw	0
  8046  001E0E  6F78               	movwf	(memset@c+1)& (0+255),b
  8047  001E10  0E00               	movlw	0
  8048  001E12  6F77               	movwf	memset@c& (0+255),b
  8049  001E14  0E00               	movlw	0
  8050  001E16  6F7A               	movwf	(memset@n+1)& (0+255),b
  8051  001E18  0E30               	movlw	48
  8052  001E1A  6F79               	movwf	memset@n& (0+255),b
  8053  001E1C  EC45  F01F         	call	_memset	;wreg free
  8054                           
  8055                           ;usb_device.c: 2000: UCONbits.PPBRST = 1;
  8056  001E20  8C65               	bsf	3941,6,c	;volatile
  8057                           
  8058                           ;usb_device.c: 2005: for(i = 0; i < (uint8_t)(2+1u); i++)
  8059  001E22  0E00               	movlw	0
  8060  001E24  0100               	movlb	0	; () banked
  8061  001E26  6F89               	movwf	USBStdSetCfgHandler@i& (0+255),b
  8062  001E28                     l8941:
  8063                           
  8064                           ; BSR set to: 0
  8065  001E28  0E02               	movlw	2
  8066  001E2A  6589               	cpfsgt	USBStdSetCfgHandler@i& (0+255),b
  8067  001E2C  D001               	goto	l1204
  8068  001E2E  D016               	goto	u7700
  8069  001E30                     l1204:
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;usb_device.c: 2006: {
  8073                           ;usb_device.c: 2007: ep_data_in[i].Val = 0u;
  8074                           
  8075                           ; BSR set to: 0
  8076  001E30  5189               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8077  001E32  0D01               	mullw	1
  8078  001E34  0E12               	movlw	low _ep_data_in
  8079  001E36  24F3               	addwf	prodl,w,c
  8080  001E38  6ED9               	movwf	fsr2l,c
  8081  001E3A  0E00               	movlw	high _ep_data_in
  8082  001E3C  20F4               	addwfc	prodh,w,c
  8083  001E3E  6EDA               	movwf	fsr2h,c
  8084  001E40  0E00               	movlw	0
  8085  001E42  6EDF               	movwf	indf2,c
  8086                           
  8087                           ;usb_device.c: 2008: ep_data_out[i].Val = 0u;
  8088  001E44  5189               	movf	USBStdSetCfgHandler@i& (0+255),w,b
  8089  001E46  0D01               	mullw	1
  8090  001E48  0E0F               	movlw	low _ep_data_out
  8091  001E4A  24F3               	addwf	prodl,w,c
  8092  001E4C  6ED9               	movwf	fsr2l,c
  8093  001E4E  0E00               	movlw	high _ep_data_out
  8094  001E50  20F4               	addwfc	prodh,w,c
  8095  001E52  6EDA               	movwf	fsr2h,c
  8096  001E54  0E00               	movlw	0
  8097  001E56  6EDF               	movwf	indf2,c
  8098                           
  8099                           ; BSR set to: 0
  8100  001E58  2B89               	incf	USBStdSetCfgHandler@i& (0+255),f,b
  8101  001E5A  D7E6               	goto	l8941
  8102  001E5C                     u7700:
  8103                           
  8104                           ; BSR set to: 0
  8105                           ;usb_device.c: 2009: }
  8106                           ;usb_device.c: 2012: memset((void*)&USBAlternateInterface,0x00,2);
  8107                           
  8108                           ; BSR set to: 0
  8109  001E5C  0E22               	movlw	low _USBAlternateInterface
  8110  001E5E  6F75               	movwf	memset@p1& (0+255),b
  8111  001E60  0E00               	movlw	high _USBAlternateInterface
  8112  001E62  6F76               	movwf	(memset@p1+1)& (0+255),b
  8113  001E64  0E00               	movlw	0
  8114  001E66  6F78               	movwf	(memset@c+1)& (0+255),b
  8115  001E68  0E00               	movlw	0
  8116  001E6A  6F77               	movwf	memset@c& (0+255),b
  8117  001E6C  0E00               	movlw	0
  8118  001E6E  6F7A               	movwf	(memset@n+1)& (0+255),b
  8119  001E70  0E02               	movlw	2
  8120  001E72  6F79               	movwf	memset@n& (0+255),b
  8121  001E74  EC45  F01F         	call	_memset	;wreg free
  8122                           
  8123                           ;usb_device.c: 2015: UCONbits.PPBRST = 0;
  8124  001E78  9C65               	bcf	3941,6,c	;volatile
  8125                           
  8126                           ;usb_device.c: 2017: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  8127  001E7A  0E08               	movlw	8
  8128  001E7C  0100               	movlb	0	; () banked
  8129  001E7E  6FAC               	movwf	_pBDTEntryIn& (0+255),b
  8130  001E80  0E04               	movlw	4
  8131  001E82  6FAD               	movwf	(_pBDTEntryIn+1)& (0+255),b
  8132                           
  8133                           ; BSR set to: 0
  8134                           ;usb_device.c: 2020: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
  8135  001E84  0E00               	movlw	0
  8136  001E86  6FB6               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
  8137  001E88  0E04               	movlw	4
  8138  001E8A  6FB7               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;usb_device.c: 2021: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
  8142  001E8C  C0B6  F0B4         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
  8143  001E90  C0B7  F0B5         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
  8144                           
  8145                           ; BSR set to: 0
  8146                           ;usb_device.c: 2024: USBActiveConfiguration = SetupPkt.bConfigurationValue;
  8147  001E94  C432 F0DE          	movff	1074,_USBActiveConfiguration	;volatile
  8148                           
  8149                           ; BSR set to: 0
  8150                           ;usb_device.c: 2027: if(USBActiveConfiguration == 0)
  8151  001E98  51DE               	movf	_USBActiveConfiguration& (0+255),w,b
  8152  001E9A  A4D8               	btfss	status,2,c
  8153  001E9C  D003               	goto	l1206
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;usb_device.c: 2028: {
  8157                           ;usb_device.c: 2030: USBDeviceState = ADDRESS_STATE;
  8158  001E9E  0E10               	movlw	16
  8159  001EA0  6FCA               	movwf	_USBDeviceState& (0+255),b
  8160                           
  8161                           ;usb_device.c: 2031: }
  8162  001EA2  0012               	return	
  8163  001EA4                     l1206:
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;usb_device.c: 2032: else
  8167                           ;usb_device.c: 2033: {
  8168                           ;usb_device.c: 2035: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveC
      +                          onfiguration,1);
  8169                           
  8170                           ; BSR set to: 0
  8171  001EA4  0E00               	movlw	0
  8172  001EA6  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  8173  001EA8  0E01               	movlw	1
  8174  001EAA  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  8175  001EAC  0EDE               	movlw	low _USBActiveConfiguration
  8176  001EAE  6F83               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata& (0+255),b
  8177  001EB0  0E00               	movlw	high _USBActiveConfiguration
  8178  001EB2  6F84               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@pdata+1)& (0+255),b
  8179  001EB4  0E00               	movlw	0
  8180  001EB6  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  8181  001EB8  0E01               	movlw	1
  8182  001EBA  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  8183  001EBC  EC85  F01B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  8184                           
  8185                           ;usb_device.c: 2040: USBDeviceState = CONFIGURED_STATE;
  8186  001EC0  0E20               	movlw	32
  8187  001EC2  0100               	movlb	0	; () banked
  8188  001EC4  6FCA               	movwf	_USBDeviceState& (0+255),b
  8189  001EC6  0012               	return	
  8190  001EC8                     __end_of_USBStdSetCfgHandler:
  8191                           	opt stack 0
  8192                           tosu	equ	0xFFF
  8193                           tosh	equ	0xFFE
  8194                           tosl	equ	0xFFD
  8195                           pclath	equ	0xFFA
  8196                           tblptru	equ	0xFF8
  8197                           tblptrh	equ	0xFF7
  8198                           tblptrl	equ	0xFF6
  8199                           tablat	equ	0xFF5
  8200                           prodh	equ	0xFF4
  8201                           prodl	equ	0xFF3
  8202                           intcon	equ	0xFF2
  8203                           intcon2	equ	0xFF1
  8204                           intcon3	equ	0xFF0
  8205                           postinc0	equ	0xFEE
  8206                           plusw0	equ	0xFEB
  8207                           wreg	equ	0xFE8
  8208                           postinc1	equ	0xFE6
  8209                           postdec1	equ	0xFE5
  8210                           fsr1h	equ	0xFE2
  8211                           fsr1l	equ	0xFE1
  8212                           indf2	equ	0xFDF
  8213                           postinc2	equ	0xFDE
  8214                           postdec2	equ	0xFDD
  8215                           plusw2	equ	0xFDB
  8216                           fsr2h	equ	0xFDA
  8217                           fsr2l	equ	0xFD9
  8218                           status	equ	0xFD8
  8219                           
  8220 ;; *************** function _USBStdGetStatusHandler *****************
  8221 ;; Defined at:
  8222 ;;		line 2147 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;		None
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  p               2   22[BANK0 ] PTR struct __BDT
  8227 ;;		 -> NULL(0), BDT(48), 
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  1    wreg      void 
  8230 ;; Registers used:
  8231 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8238 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8239 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8240 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8241 ;;Total ram usage:        3 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; Hardware stack levels required when called:    9
  8244 ;; This function calls:
  8245 ;;		Nothing
  8246 ;; This function is called by:
  8247 ;;		_USBCheckStdRequest
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text38
  8252  0029E4                     __ptext38:
  8253                           	opt stack 0
  8254  0029E4                     _USBStdGetStatusHandler:
  8255                           	opt stack 14
  8256                           
  8257                           ;usb_device.c: 2149: CtrlTrfData[0] = 0;
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;incstack = 0
  8261  0029E4  0E00               	movlw	0
  8262  0029E6  0104               	movlb	4	; () banked
  8263  0029E8  6F38               	movwf	56,b	;volatile
  8264                           
  8265                           ;usb_device.c: 2150: CtrlTrfData[1] = 0;
  8266  0029EA  0E00               	movlw	0
  8267  0029EC  6F39               	movwf	57,b	;volatile
  8268                           
  8269                           ;usb_device.c: 2152: switch(SetupPkt.Recipient)
  8270  0029EE  D03D               	goto	l1225
  8271  0029F0                     l1226:
  8272                           
  8273                           ; BSR set to: 4
  8274                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
  8275  0029F0  0100               	movlb	0	; () banked
  8276  0029F2  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  8277                           
  8278                           ;usb_device.c: 2163: }
  8279                           ;usb_device.c: 2165: if(RemoteWakeup == 1)
  8280                           
  8281                           ; BSR set to: 4
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;usb_device.c: 2161: {
  8285                           ;usb_device.c: 2162: CtrlTrfData[0]|=0x01;
  8286                           
  8287                           ;usb_device.c: 2160: if(0 == 1)
  8288  0029F4  0100               	movlb	0	; () banked
  8289  0029F6  05C7               	decf	_RemoteWakeup& (0+255),w,b
  8290  0029F8  A4D8               	btfss	status,2,c
  8291  0029FA  D042               	goto	l1229
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;usb_device.c: 2166: {
  8295                           ;usb_device.c: 2167: CtrlTrfData[0]|=0x02;
  8296  0029FC  0104               	movlb	4	; () banked
  8297  0029FE  8338               	bsf	56,1,b	;volatile
  8298                           
  8299                           ; BSR set to: 4
  8300                           ;usb_device.c: 2168: }
  8301                           ;usb_device.c: 2169: break;
  8302  002A00  D03F               	goto	l1229
  8303  002A02                     l1230:
  8304                           
  8305                           ; BSR set to: 4
  8306                           ;usb_device.c: 2171: inPipes[0].info.bits.busy = 1;
  8307  002A02  0100               	movlb	0	; () banked
  8308  002A04  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  8309                           
  8310                           ;usb_device.c: 2172: break;
  8311  002A06  D03C               	goto	l1229
  8312  002A08                     l1231:
  8313                           
  8314                           ; BSR set to: 4
  8315                           ;usb_device.c: 2174: inPipes[0].info.bits.busy = 1;
  8316  002A08  0100               	movlb	0	; () banked
  8317  002A0A  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  8318                           
  8319                           ;usb_device.c: 2178: {
  8320                           ;usb_device.c: 2179: BDT_ENTRY *p;
  8321                           ;usb_device.c: 2181: if(SetupPkt.EPDir == 0)
  8322  002A0C  0104               	movlb	4	; () banked
  8323  002A0E  BF34               	btfsc	52,7,b	;volatile
  8324  002A10  D00B               	goto	l1232
  8325                           
  8326                           ; BSR set to: 4
  8327                           ;usb_device.c: 2182: {
  8328                           ;usb_device.c: 2183: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8329  002A12  5134               	movf	52,w,b	;volatile
  8330  002A14  0B0F               	andlw	15
  8331  002A16  0100               	movlb	0	; () banked
  8332  002A18  6F75               	movwf	??_USBStdGetStatusHandler& (0+255),b
  8333  002A1A  5175               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8334  002A1C  0D02               	mullw	2
  8335  002A1E  0EC8               	movlw	low _pBDTEntryOut
  8336  002A20  24F3               	addwf	prodl,w,c
  8337  002A22  6ED9               	movwf	fsr2l,c
  8338  002A24  0E01               	movlw	high _pBDTEntryOut
  8339  002A26  D00B               	goto	L4
  8340  002A28                     l1232:
  8341                           
  8342                           ;usb_device.c: 2185: else
  8343                           ;usb_device.c: 2186: {
  8344                           ;usb_device.c: 2187: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  8345                           
  8346                           ; BSR set to: 0
  8347  002A28  0104               	movlb	4	; () banked
  8348  002A2A  5134               	movf	52,w,b	;volatile
  8349  002A2C  0B0F               	andlw	15
  8350  002A2E  0100               	movlb	0	; () banked
  8351  002A30  6F75               	movwf	??_USBStdGetStatusHandler& (0+255),b
  8352  002A32  5175               	movf	??_USBStdGetStatusHandler& (0+255),w,b
  8353  002A34  0D02               	mullw	2
  8354  002A36  0EAC               	movlw	low _pBDTEntryIn
  8355  002A38  24F3               	addwf	prodl,w,c
  8356  002A3A  6ED9               	movwf	fsr2l,c
  8357  002A3C  0E00               	movlw	high _pBDTEntryIn
  8358  002A3E                     L4:
  8359  002A3E  20F4               	addwfc	prodh,w,c
  8360  002A40  6EDA               	movwf	fsr2h,c
  8361  002A42  CFDE F076          	movff	postinc2,USBStdGetStatusHandler@p
  8362  002A46  CFDD F077          	movff	postdec2,USBStdGetStatusHandler@p+1
  8363                           
  8364                           ; BSR set to: 0
  8365                           ;usb_device.c: 2188: }
  8366                           ;usb_device.c: 2190: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 1))
  8367                           
  8368                           ; BSR set to: 0
  8369  002A4A  C076  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8370  002A4E  C077  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8371  002A52  AEDF               	btfss	indf2,7,c
  8372  002A54  D015               	goto	l1229
  8373                           
  8374                           ; BSR set to: 0
  8375  002A56  C076  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
  8376  002A5A  C077  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
  8377  002A5E  A4DF               	btfss	indf2,2,c
  8378  002A60  D00F               	goto	l1229
  8379                           
  8380                           ; BSR set to: 0
  8381                           ;usb_device.c: 2191: CtrlTrfData[0]=0x01;
  8382  002A62  0E01               	movlw	1
  8383  002A64  0104               	movlb	4	; () banked
  8384  002A66  6F38               	movwf	56,b	;volatile
  8385                           
  8386                           ; BSR set to: 4
  8387                           ;usb_device.c: 2193: }
  8388                           ;usb_device.c: 2194: }
  8389                           
  8390                           ; BSR set to: 4
  8391                           ;usb_device.c: 2192: break;
  8392  002A68  D00B               	goto	l1229
  8393  002A6A                     l1225:
  8394                           
  8395                           ; BSR set to: 4
  8396                           
  8397                           ; BSR set to: 4
  8398  002A6A  5130               	movf	48,w,b	;volatile
  8399  002A6C  0B1F               	andlw	31
  8400                           
  8401                           ; Switch size 1, requested type "space"
  8402                           ; Number of cases is 3, Range of values is 0 to 2
  8403                           ; switch strategies available:
  8404                           ; Name         Instructions Cycles
  8405                           ; simple_byte           10     6 (average)
  8406                           ;	Chosen strategy is simple_byte
  8407  002A6E  0A00               	xorlw	0	; case 0
  8408  002A70  B4D8               	btfsc	status,2,c
  8409  002A72  D7BE               	goto	l1226
  8410  002A74  0A01               	xorlw	1	; case 1
  8411  002A76  B4D8               	btfsc	status,2,c
  8412  002A78  D7C4               	goto	l1230
  8413  002A7A  0A03               	xorlw	3	; case 2
  8414  002A7C  B4D8               	btfsc	status,2,c
  8415  002A7E  D7C4               	goto	l1231
  8416  002A80                     l1229:
  8417                           
  8418                           ;usb_device.c: 2196: if(inPipes[0].info.bits.busy == 1)
  8419  002A80  0100               	movlb	0	; () banked
  8420  002A82  AFA9               	btfss	(_inPipes+3)& (0+255),7,b
  8421  002A84  0012               	return	
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;usb_device.c: 2197: {
  8425                           ;usb_device.c: 2198: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData;
  8426  002A86  0E38               	movlw	56
  8427  002A88  6FA6               	movwf	_inPipes& (0+255),b
  8428  002A8A  0E04               	movlw	4
  8429  002A8C  6FA7               	movwf	(_inPipes+1)& (0+255),b
  8430                           
  8431                           ; BSR set to: 0
  8432                           ;usb_device.c: 2199: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  8433  002A8E  81A9               	bsf	(_inPipes+3)& (0+255),0,b
  8434                           
  8435                           ; BSR set to: 0
  8436                           ;usb_device.c: 2200: inPipes[0].wCount.v[0] = 2;
  8437  002A90  0E02               	movlw	2
  8438  002A92  6FAA               	movwf	(_inPipes+4)& (0+255),b
  8439  002A94  0012               	return	
  8440  002A96                     __end_of_USBStdGetStatusHandler:
  8441                           	opt stack 0
  8442                           tosu	equ	0xFFF
  8443                           tosh	equ	0xFFE
  8444                           tosl	equ	0xFFD
  8445                           pclath	equ	0xFFA
  8446                           tblptru	equ	0xFF8
  8447                           tblptrh	equ	0xFF7
  8448                           tblptrl	equ	0xFF6
  8449                           tablat	equ	0xFF5
  8450                           prodh	equ	0xFF4
  8451                           prodl	equ	0xFF3
  8452                           intcon	equ	0xFF2
  8453                           intcon2	equ	0xFF1
  8454                           intcon3	equ	0xFF0
  8455                           postinc0	equ	0xFEE
  8456                           plusw0	equ	0xFEB
  8457                           wreg	equ	0xFE8
  8458                           postinc1	equ	0xFE6
  8459                           postdec1	equ	0xFE5
  8460                           fsr1h	equ	0xFE2
  8461                           fsr1l	equ	0xFE1
  8462                           indf2	equ	0xFDF
  8463                           postinc2	equ	0xFDE
  8464                           postdec2	equ	0xFDD
  8465                           plusw2	equ	0xFDB
  8466                           fsr2h	equ	0xFDA
  8467                           fsr2l	equ	0xFD9
  8468                           status	equ	0xFD8
  8469                           
  8470 ;; *************** function _USBStdGetDscHandler *****************
  8471 ;; Defined at:
  8472 ;;		line 2061 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8473 ;; Parameters:    Size  Location     Type
  8474 ;;		None
  8475 ;; Auto vars:     Size  Location     Type
  8476 ;;		None
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8489 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8490 ;;Total ram usage:        2 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; Hardware stack levels required when called:    9
  8493 ;; This function calls:
  8494 ;;		Nothing
  8495 ;; This function is called by:
  8496 ;;		_USBCheckStdRequest
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           
  8500                           	psect	text39
  8501  0017B4                     __ptext39:
  8502                           	opt stack 0
  8503  0017B4                     _USBStdGetDscHandler:
  8504                           	opt stack 14
  8505                           
  8506                           ;usb_device.c: 2063: if(SetupPkt.bmRequestType == 0x80)
  8507                           
  8508                           ; BSR set to: 0
  8509                           ;incstack = 0
  8510  0017B4  0E80               	movlw	128
  8511  0017B6  0104               	movlb	4	; () banked
  8512  0017B8  1930               	xorwf	48,w,b	;volatile
  8513  0017BA  A4D8               	btfss	status,2,c
  8514  0017BC  0012               	return	
  8515                           
  8516                           ; BSR set to: 4
  8517                           ;usb_device.c: 2064: {
  8518                           ;usb_device.c: 2065: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
  8519  0017BE  0EC0               	movlw	192
  8520  0017C0  0100               	movlb	0	; () banked
  8521  0017C2  6FA9               	movwf	(_inPipes+3)& (0+255),b
  8522                           
  8523                           ;usb_device.c: 2067: switch(SetupPkt.bDescriptorType)
  8524  0017C4  D082               	goto	l1212
  8525  0017C6                     
  8526                           ;usb_device.c: 2073: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
  8527                           
  8528                           ; BSR set to: 0
  8529  0017C6  0EA6               	movlw	low _device_dsc
  8530  0017C8  0100               	movlb	0	; () banked
  8531  0017CA  6FA6               	movwf	_inPipes& (0+255),b
  8532  0017CC  0EFF               	movlw	high _device_dsc
  8533  0017CE  6FA7               	movwf	(_inPipes+1)& (0+255),b
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;usb_device.c: 2075: inPipes[0].wCount.Val = sizeof(device_dsc);
  8537  0017D0  0E00               	movlw	0
  8538  0017D2  6FAB               	movwf	(_inPipes+5)& (0+255),b
  8539  0017D4  0E12               	movlw	18
  8540  0017D6  6FAA               	movwf	(_inPipes+4)& (0+255),b
  8541                           
  8542                           ;usb_device.c: 2076: break;
  8543  0017D8  0012               	return	
  8544  0017DA                     
  8545                           ;usb_device.c: 2081: if(SetupPkt.bDscIndex < 1)
  8546                           
  8547                           ; BSR set to: 0
  8548  0017DA  0104               	movlb	4	; () banked
  8549  0017DC  5132               	movf	50,w,b	;volatile
  8550  0017DE  A4D8               	btfss	status,2,c
  8551  0017E0  D040               	goto	l1216
  8552                           
  8553                           ; BSR set to: 4
  8554                           ;usb_device.c: 2082: {
  8555                           ;usb_device.c: 2086: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.bDscIndex);
  8556  0017E2  5132               	movf	50,w,b	;volatile
  8557  0017E4  0D02               	mullw	2
  8558  0017E6  0E8F               	movlw	low _USB_CD_Ptr
  8559  0017E8  24F3               	addwf	prodl,w,c
  8560  0017EA  6EF6               	movwf	tblptrl,c
  8561  0017EC  0EFD               	movlw	high _USB_CD_Ptr
  8562  0017EE  20F4               	addwfc	prodh,w,c
  8563  0017F0  6EF7               	movwf	tblptrh,c
  8564  0017F2                     	if	0	;There are less than 3 active tblptr bytes
  8565  0017F2                     	endif
  8566  0017F2  0009               	tblrd		*+
  8567  0017F4  CFF5 F0A6          	movff	tablat,_inPipes
  8568  0017F8  000A               	tblrd		*-
  8569  0017FA  CFF5 F0A7          	movff	tablat,_inPipes+1
  8570                           
  8571                           ; BSR set to: 4
  8572                           ;usb_device.c: 2092: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
  8573  0017FE  0E02               	movlw	2
  8574  001800  0100               	movlb	0	; () banked
  8575  001802  25A6               	addwf	_inPipes& (0+255),w,b
  8576  001804  6F75               	movwf	??_USBStdGetDscHandler& (0+255),b
  8577  001806  0E00               	movlw	0
  8578  001808  21A7               	addwfc	(_inPipes+1)& (0+255),w,b
  8579  00180A  6F76               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  8580  00180C  C075  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  8581  001810  C076  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  8582  001814  6AF8               	clrf	tblptru,c
  8583  001816  0E0E               	movlw	(high __ramtop+-1)
  8584  001818  64F7               	cpfsgt	tblptrh,c
  8585  00181A  D003               	bra	u4257
  8586  00181C  0008               	tblrd		*
  8587  00181E  50F5               	movf	tablat,w,c
  8588  001820  D005               	bra	u4250
  8589  001822                     u4257:
  8590  001822  CFF6 FFE9          	movff	tblptrl,fsr0l
  8591  001826  CFF7 FFEA          	movff	tblptrh,fsr0h
  8592  00182A  50EF               	movf	indf0,w,c
  8593  00182C                     u4250:
  8594  00182C  0100               	movlb	0	; () banked
  8595  00182E  6FAA               	movwf	(_inPipes+4)& (0+255),b
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;usb_device.c: 2093: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
  8599  001830  0E03               	movlw	3
  8600  001832  25A6               	addwf	_inPipes& (0+255),w,b
  8601  001834  6F75               	movwf	??_USBStdGetDscHandler& (0+255),b
  8602  001836  0E00               	movlw	0
  8603  001838  21A7               	addwfc	(_inPipes+1)& (0+255),w,b
  8604  00183A  6F76               	movwf	(??_USBStdGetDscHandler+1)& (0+255),b
  8605  00183C  C075  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
  8606  001840  C076  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
  8607  001844  6AF8               	clrf	tblptru,c
  8608  001846  0E0E               	movlw	(high __ramtop+-1)
  8609  001848  64F7               	cpfsgt	tblptrh,c
  8610  00184A  D003               	bra	u4267
  8611  00184C  0008               	tblrd		*
  8612  00184E  50F5               	movf	tablat,w,c
  8613  001850  D005               	bra	u4260
  8614  001852                     u4267:
  8615  001852  CFF6 FFE9          	movff	tblptrl,fsr0l
  8616  001856  CFF7 FFEA          	movff	tblptrh,fsr0h
  8617  00185A  50EF               	movf	indf0,w,c
  8618  00185C                     u4260:
  8619  00185C  0100               	movlb	0	; () banked
  8620  00185E  6FAB               	movwf	(_inPipes+5)& (0+255),b
  8621                           
  8622                           ;usb_device.c: 2094: }
  8623  001860  0012               	return	
  8624  001862                     l1216:
  8625                           
  8626                           ;usb_device.c: 2095: else
  8627                           ;usb_device.c: 2096: {
  8628                           ;usb_device.c: 2097: inPipes[0].info.Val = 0;
  8629                           
  8630                           ; BSR set to: 0
  8631  001862  0E00               	movlw	0
  8632  001864  0100               	movlb	0	; () banked
  8633  001866  6FA9               	movwf	(_inPipes+3)& (0+255),b
  8634                           
  8635                           ; BSR set to: 0
  8636                           ;usb_device.c: 2098: }
  8637                           ;usb_device.c: 2099: break;
  8638  001868  0012               	return	
  8639  00186A                     
  8640                           ;usb_device.c: 2104: if(SetupPkt.bDscIndex<3)
  8641                           
  8642                           ; BSR set to: 0
  8643  00186A  0E03               	movlw	3
  8644  00186C  0104               	movlb	4	; () banked
  8645  00186E  6132               	cpfslt	50,b	;volatile
  8646  001870  D024               	goto	l1219
  8647                           
  8648                           ; BSR set to: 4
  8649                           ;usb_device.c: 2105: {
  8650                           ;usb_device.c: 2107: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.bDscIndex);
  8651  001872  5132               	movf	50,w,b	;volatile
  8652  001874  0D02               	mullw	2
  8653  001876  0E89               	movlw	low _USB_SD_Ptr
  8654  001878  24F3               	addwf	prodl,w,c
  8655  00187A  6EF6               	movwf	tblptrl,c
  8656  00187C  0EFD               	movlw	high _USB_SD_Ptr
  8657  00187E  20F4               	addwfc	prodh,w,c
  8658  001880  6EF7               	movwf	tblptrh,c
  8659  001882                     	if	0	;There are less than 3 active tblptr bytes
  8660  001882                     	endif
  8661  001882  0009               	tblrd		*+
  8662  001884  CFF5 F0A6          	movff	tablat,_inPipes
  8663  001888  000A               	tblrd		*-
  8664  00188A  CFF5 F0A7          	movff	tablat,_inPipes+1
  8665                           
  8666                           ; BSR set to: 4
  8667                           ;usb_device.c: 2109: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
  8668  00188E  C0A6  FFF6         	movff	_inPipes,tblptrl
  8669  001892  C0A7  FFF7         	movff	_inPipes+1,tblptrh
  8670  001896  6AF8               	clrf	tblptru,c
  8671  001898  0E0E               	movlw	(high __ramtop+-1)
  8672  00189A  64F7               	cpfsgt	tblptrh,c
  8673  00189C  D003               	bra	u4287
  8674  00189E  0008               	tblrd		*
  8675  0018A0  50F5               	movf	tablat,w,c
  8676  0018A2  D005               	bra	u4280
  8677  0018A4                     u4287:
  8678  0018A4  CFF6 FFE9          	movff	tblptrl,fsr0l
  8679  0018A8  CFF7 FFEA          	movff	tblptrh,fsr0h
  8680  0018AC  50EF               	movf	indf0,w,c
  8681  0018AE                     u4280:
  8682  0018AE  0100               	movlb	0	; () banked
  8683  0018B0  6F75               	movwf	??_USBStdGetDscHandler& (0+255),b
  8684  0018B2  5175               	movf	??_USBStdGetDscHandler& (0+255),w,b
  8685  0018B4  6FAA               	movwf	(_inPipes+4)& (0+255),b
  8686  0018B6  6BAB               	clrf	(_inPipes+5)& (0+255),b
  8687                           
  8688                           ;usb_device.c: 2110: }
  8689  0018B8  0012               	return	
  8690  0018BA                     l1219:
  8691                           
  8692                           ;usb_device.c: 2120: else
  8693                           ;usb_device.c: 2121: {
  8694                           ;usb_device.c: 2122: inPipes[0].info.Val = 0;
  8695                           
  8696                           ; BSR set to: 0
  8697  0018BA  0E00               	movlw	0
  8698  0018BC  0100               	movlb	0	; () banked
  8699  0018BE  6FA9               	movwf	(_inPipes+3)& (0+255),b
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;usb_device.c: 2123: }
  8703                           ;usb_device.c: 2124: break;
  8704  0018C0  0012               	return	
  8705  0018C2                     
  8706                           ;usb_device.c: 2126: inPipes[0].info.Val = 0;
  8707                           
  8708                           ; BSR set to: 0
  8709  0018C2  0E00               	movlw	0
  8710  0018C4  0100               	movlb	0	; () banked
  8711  0018C6  6FA9               	movwf	(_inPipes+3)& (0+255),b
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;usb_device.c: 2128: }
  8715                           
  8716                           ;usb_device.c: 2127: break;
  8717  0018C8  0012               	return	
  8718  0018CA                     l1212:
  8719                           
  8720                           ; BSR set to: 0
  8721                           
  8722                           ; BSR set to: 0
  8723  0018CA  0104               	movlb	4	; () banked
  8724  0018CC  5133               	movf	51,w,b	;volatile
  8725                           
  8726                           ; Switch size 1, requested type "space"
  8727                           ; Number of cases is 3, Range of values is 1 to 3
  8728                           ; switch strategies available:
  8729                           ; Name         Instructions Cycles
  8730                           ; simple_byte           10     6 (average)
  8731                           ;	Chosen strategy is simple_byte
  8732  0018CE  0A01               	xorlw	1	; case 1
  8733  0018D0  B4D8               	btfsc	status,2,c
  8734  0018D2  D779               	goto	l1213
  8735  0018D4  0A03               	xorlw	3	; case 2
  8736  0018D6  B4D8               	btfsc	status,2,c
  8737  0018D8  D780               	goto	l1215
  8738  0018DA  0A01               	xorlw	1	; case 3
  8739  0018DC  B4D8               	btfsc	status,2,c
  8740  0018DE  D7C5               	goto	l1218
  8741  0018E0  D7F0               	goto	l1221
  8742  0018E2                     __end_of_USBStdGetDscHandler:
  8743                           	opt stack 0
  8744                           tosu	equ	0xFFF
  8745                           tosh	equ	0xFFE
  8746                           tosl	equ	0xFFD
  8747                           pclath	equ	0xFFA
  8748                           tblptru	equ	0xFF8
  8749                           tblptrh	equ	0xFF7
  8750                           tblptrl	equ	0xFF6
  8751                           tablat	equ	0xFF5
  8752                           prodh	equ	0xFF4
  8753                           prodl	equ	0xFF3
  8754                           intcon	equ	0xFF2
  8755                           intcon2	equ	0xFF1
  8756                           intcon3	equ	0xFF0
  8757                           indf0	equ	0xFEF
  8758                           postinc0	equ	0xFEE
  8759                           plusw0	equ	0xFEB
  8760                           fsr0h	equ	0xFEA
  8761                           fsr0l	equ	0xFE9
  8762                           wreg	equ	0xFE8
  8763                           postinc1	equ	0xFE6
  8764                           postdec1	equ	0xFE5
  8765                           fsr1h	equ	0xFE2
  8766                           fsr1l	equ	0xFE1
  8767                           indf2	equ	0xFDF
  8768                           postinc2	equ	0xFDE
  8769                           postdec2	equ	0xFDD
  8770                           plusw2	equ	0xFDB
  8771                           fsr2h	equ	0xFDA
  8772                           fsr2l	equ	0xFD9
  8773                           status	equ	0xFD8
  8774                           
  8775 ;; *************** function _USBStdFeatureReqHandler *****************
  8776 ;; Defined at:
  8777 ;;		line 2771 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;		None
  8780 ;; Auto vars:     Size  Location     Type
  8781 ;;  p               2   45[BANK0 ] PTR struct __BDT
  8782 ;;		 -> NULL(0), BDT(48), 
  8783 ;;  pUEP            2   42[BANK0 ] PTR unsigned char 
  8784 ;;		 -> UEP0(1), 
  8785 ;;  current_ep_d    1   44[BANK0 ] struct .
  8786 ;; Return value:  Size  Location     Type
  8787 ;;                  1    wreg      void 
  8788 ;; Registers used:
  8789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8790 ;; Tracked objects:
  8791 ;;		On entry : 0/0
  8792 ;;		On exit  : 0/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8796 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8798 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8799 ;;Total ram usage:        6 bytes
  8800 ;; Hardware stack levels used:    1
  8801 ;; Hardware stack levels required when called:   13
  8802 ;; This function calls:
  8803 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  8804 ;; This function is called by:
  8805 ;;		_USBCheckStdRequest
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           	psect	text40
  8810  00079A                     __ptext40:
  8811                           	opt stack 0
  8812  00079A                     _USBStdFeatureReqHandler:
  8813                           	opt stack 10
  8814                           
  8815                           ;usb_device.c: 2773: BDT_ENTRY *p;
  8816                           ;usb_device.c: 2774: EP_STATUS current_ep_data;
  8817                           ;usb_device.c: 2778: unsigned char* pUEP;
  8818                           ;usb_device.c: 2816: if((SetupPkt.bFeature == 1)&&
  8819                           ;usb_device.c: 2817: (SetupPkt.Recipient == (0x00)))
  8820                           
  8821                           ;incstack = 0
  8822  00079A  0104               	movlb	4	; () banked
  8823  00079C  0532               	decf	50,w,b	;volatile
  8824  00079E  A4D8               	btfss	status,2,c
  8825  0007A0  D011               	goto	l1305
  8826                           
  8827                           ; BSR set to: 4
  8828  0007A2  5130               	movf	48,w,b	;volatile
  8829  0007A4  0B1F               	andlw	31
  8830  0007A6  0900               	iorlw	0
  8831  0007A8  A4D8               	btfss	status,2,c
  8832  0007AA  D00C               	goto	l1305
  8833                           
  8834                           ; BSR set to: 4
  8835                           ;usb_device.c: 2818: {
  8836                           ;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
  8837  0007AC  0100               	movlb	0	; () banked
  8838  0007AE  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  8839                           
  8840                           ; BSR set to: 0
  8841                           ;usb_device.c: 2820: if(SetupPkt.bRequest == 3)
  8842  0007B0  0E03               	movlw	3
  8843  0007B2  0104               	movlb	4	; () banked
  8844  0007B4  1931               	xorwf	49,w,b	;volatile
  8845  0007B6  A4D8               	btfss	status,2,c
  8846  0007B8  D002               	goto	l1304
  8847                           
  8848                           ; BSR set to: 4
  8849                           ;usb_device.c: 2821: RemoteWakeup = 1;
  8850  0007BA  0E01               	movlw	1
  8851  0007BC  D001               	goto	L5
  8852  0007BE                     l1304:
  8853                           
  8854                           ;usb_device.c: 2822: else
  8855                           ;usb_device.c: 2823: RemoteWakeup = 0;
  8856                           
  8857                           ; BSR set to: 0
  8858  0007BE  0E00               	movlw	0
  8859  0007C0                     L5:
  8860  0007C0  0100               	movlb	0	; () banked
  8861  0007C2  6FC7               	movwf	_RemoteWakeup& (0+255),b
  8862  0007C4                     l1305:
  8863                           
  8864                           ;usb_device.c: 2824: }
  8865                           ;usb_device.c: 2827: if((SetupPkt.bFeature == 0)&&
  8866                           ;usb_device.c: 2828: (SetupPkt.Recipient == (0x02))&&
  8867                           ;usb_device.c: 2829: (SetupPkt.EPNum != 0) && (SetupPkt.EPNum <= 2)&&
  8868                           ;usb_device.c: 2830: (USBDeviceState == CONFIGURED_STATE))
  8869                           
  8870                           ; BSR set to: 0
  8871  0007C4  0104               	movlb	4	; () banked
  8872  0007C6  5132               	movf	50,w,b	;volatile
  8873  0007C8  A4D8               	btfss	status,2,c
  8874  0007CA  0012               	return	
  8875                           
  8876                           ; BSR set to: 4
  8877  0007CC  5130               	movf	48,w,b	;volatile
  8878  0007CE  0B1F               	andlw	31
  8879  0007D0  0A02               	xorlw	2
  8880  0007D2  A4D8               	btfss	status,2,c
  8881  0007D4  0012               	return	
  8882                           
  8883                           ; BSR set to: 4
  8884  0007D6  5134               	movf	52,w,b	;volatile
  8885  0007D8  0B0F               	andlw	15
  8886  0007DA  0900               	iorlw	0
  8887  0007DC  B4D8               	btfsc	status,2,c
  8888  0007DE  0012               	return	
  8889                           
  8890                           ; BSR set to: 4
  8891  0007E0  5134               	movf	52,w,b	;volatile
  8892  0007E2  0B0F               	andlw	15
  8893  0007E4  0100               	movlb	0	; () banked
  8894  0007E6  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  8895  0007E8  0E03               	movlw	3
  8896  0007EA  6189               	cpfslt	??_USBStdFeatureReqHandler& (0+255),b
  8897  0007EC  0012               	return	
  8898                           
  8899                           ; BSR set to: 0
  8900  0007EE  0E20               	movlw	32
  8901  0007F0  19CA               	xorwf	_USBDeviceState& (0+255),w,b
  8902  0007F2  A4D8               	btfss	status,2,c
  8903  0007F4  0012               	return	
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;usb_device.c: 2831: {
  8907                           ;usb_device.c: 2834: inPipes[0].info.bits.busy = 1;
  8908  0007F6  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  8909                           
  8910                           ;usb_device.c: 2837: if(SetupPkt.EPDir == 0)
  8911  0007F8  0104               	movlb	4	; () banked
  8912  0007FA  BF34               	btfsc	52,7,b	;volatile
  8913  0007FC  D01C               	goto	l1307
  8914                           
  8915                           ; BSR set to: 4
  8916                           ;usb_device.c: 2838: {
  8917                           ;usb_device.c: 2839: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
  8918  0007FE  5134               	movf	52,w,b	;volatile
  8919  000800  0B0F               	andlw	15
  8920  000802  0100               	movlb	0	; () banked
  8921  000804  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  8922  000806  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  8923  000808  0D02               	mullw	2
  8924  00080A  0EC8               	movlw	low _pBDTEntryOut
  8925  00080C  24F3               	addwf	prodl,w,c
  8926  00080E  6ED9               	movwf	fsr2l,c
  8927  000810  0E01               	movlw	high _pBDTEntryOut
  8928  000812  20F4               	addwfc	prodh,w,c
  8929  000814  6EDA               	movwf	fsr2h,c
  8930  000816  CFDE F08D          	movff	postinc2,USBStdFeatureReqHandler@p
  8931  00081A  CFDD F08E          	movff	postdec2,USBStdFeatureReqHandler@p+1
  8932                           
  8933                           ;usb_device.c: 2840: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
  8934  00081E  0104               	movlb	4	; () banked
  8935  000820  5134               	movf	52,w,b	;volatile
  8936  000822  0B0F               	andlw	15
  8937  000824  0100               	movlb	0	; () banked
  8938  000826  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  8939  000828  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  8940  00082A  0D01               	mullw	1
  8941  00082C  0E0F               	movlw	low _ep_data_out
  8942  00082E  24F3               	addwf	prodl,w,c
  8943  000830  6ED9               	movwf	fsr2l,c
  8944  000832  0E00               	movlw	high _ep_data_out
  8945  000834  D01C               	goto	L6
  8946  000836                     l1307:
  8947                           
  8948                           ;usb_device.c: 2842: else
  8949                           ;usb_device.c: 2843: {
  8950                           ;usb_device.c: 2844: p = (BDT_ENTRY*)pBDTEntryIn[SetupPkt.EPNum];
  8951                           
  8952                           ; BSR set to: 0
  8953  000836  0104               	movlb	4	; () banked
  8954  000838  5134               	movf	52,w,b	;volatile
  8955  00083A  0B0F               	andlw	15
  8956  00083C  0100               	movlb	0	; () banked
  8957  00083E  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  8958  000840  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  8959  000842  0D02               	mullw	2
  8960  000844  0EAC               	movlw	low _pBDTEntryIn
  8961  000846  24F3               	addwf	prodl,w,c
  8962  000848  6ED9               	movwf	fsr2l,c
  8963  00084A  0E00               	movlw	high _pBDTEntryIn
  8964  00084C  20F4               	addwfc	prodh,w,c
  8965  00084E  6EDA               	movwf	fsr2h,c
  8966  000850  CFDE F08D          	movff	postinc2,USBStdFeatureReqHandler@p
  8967  000854  CFDD F08E          	movff	postdec2,USBStdFeatureReqHandler@p+1
  8968                           
  8969                           ;usb_device.c: 2845: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
  8970  000858  0104               	movlb	4	; () banked
  8971  00085A  5134               	movf	52,w,b	;volatile
  8972  00085C  0B0F               	andlw	15
  8973  00085E  0100               	movlb	0	; () banked
  8974  000860  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  8975  000862  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  8976  000864  0D01               	mullw	1
  8977  000866  0E12               	movlw	low _ep_data_in
  8978  000868  24F3               	addwf	prodl,w,c
  8979  00086A  6ED9               	movwf	fsr2l,c
  8980  00086C  0E00               	movlw	high _ep_data_in
  8981  00086E                     L6:
  8982  00086E  20F4               	addwfc	prodh,w,c
  8983  000870  6EDA               	movwf	fsr2h,c
  8984  000872  50DF               	movf	indf2,w,c
  8985  000874  6F8C               	movwf	USBStdFeatureReqHandler@current_ep_data& (0+255),b
  8986                           
  8987                           ; BSR set to: 0
  8988                           ;usb_device.c: 2846: }
  8989                           ;usb_device.c: 2852: if(current_ep_data.bits.ping_pong_state == 0)
  8990                           
  8991                           ; BSR set to: 0
  8992  000876  B18C               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),0,b
  8993  000878  D002               	goto	l1309
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;usb_device.c: 2853: {
  8997                           ;usb_device.c: 2854: {((uint8_t_VAL*)&p)->Val &= ~0x0004;};
  8998  00087A  958D               	bcf	USBStdFeatureReqHandler@p& (0+255),2,b
  8999                           
  9000                           ;usb_device.c: 2855: }
  9001  00087C  D001               	goto	l1310
  9002  00087E                     l1309:
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;usb_device.c: 2856: else
  9006                           ;usb_device.c: 2857: {
  9007                           ;usb_device.c: 2858: {((uint8_t_VAL*)&p)->Val |= 0x0004;};
  9008                           
  9009                           ; BSR set to: 0
  9010  00087E  858D               	bsf	USBStdFeatureReqHandler@p& (0+255),2,b
  9011  000880                     l1310:
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;usb_device.c: 2859: }
  9015                           ;usb_device.c: 2864: if(SetupPkt.EPDir == 0)
  9016                           
  9017                           ; BSR set to: 0
  9018  000880  0104               	movlb	4	; () banked
  9019  000882  BF34               	btfsc	52,7,b	;volatile
  9020  000884  D00B               	goto	l1311
  9021                           
  9022                           ; BSR set to: 4
  9023                           ;usb_device.c: 2865: {
  9024                           ;usb_device.c: 2866: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9025  000886  5134               	movf	52,w,b	;volatile
  9026  000888  0B0F               	andlw	15
  9027  00088A  0100               	movlb	0	; () banked
  9028  00088C  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9029  00088E  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9030  000890  0D02               	mullw	2
  9031  000892  0EC8               	movlw	low _pBDTEntryOut
  9032  000894  24F3               	addwf	prodl,w,c
  9033  000896  6ED9               	movwf	fsr2l,c
  9034  000898  0E01               	movlw	high _pBDTEntryOut
  9035  00089A  D00B               	goto	L7
  9036  00089C                     l1311:
  9037                           
  9038                           ;usb_device.c: 2868: else
  9039                           ;usb_device.c: 2869: {
  9040                           ;usb_device.c: 2870: pBDTEntryIn[SetupPkt.EPNum] = (volatile BDT_ENTRY *)p;
  9041                           
  9042                           ; BSR set to: 0
  9043  00089C  0104               	movlb	4	; () banked
  9044  00089E  5134               	movf	52,w,b	;volatile
  9045  0008A0  0B0F               	andlw	15
  9046  0008A2  0100               	movlb	0	; () banked
  9047  0008A4  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9048  0008A6  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9049  0008A8  0D02               	mullw	2
  9050  0008AA  0EAC               	movlw	low _pBDTEntryIn
  9051  0008AC  24F3               	addwf	prodl,w,c
  9052  0008AE  6ED9               	movwf	fsr2l,c
  9053  0008B0  0E00               	movlw	high _pBDTEntryIn
  9054  0008B2                     L7:
  9055  0008B2  20F4               	addwfc	prodh,w,c
  9056  0008B4  6EDA               	movwf	fsr2h,c
  9057  0008B6  C08D  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
  9058  0008BA  C08E  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
  9059                           
  9060                           ; BSR set to: 0
  9061                           ;usb_device.c: 2871: }
  9062                           ;usb_device.c: 2874: if(SetupPkt.bRequest == 3)
  9063                           
  9064                           ; BSR set to: 0
  9065  0008BE  0E03               	movlw	3
  9066  0008C0  0104               	movlb	4	; () banked
  9067  0008C2  1931               	xorwf	49,w,b	;volatile
  9068  0008C4  A4D8               	btfss	status,2,c
  9069  0008C6  D030               	goto	l1313
  9070                           
  9071                           ; BSR set to: 4
  9072                           ;usb_device.c: 2875: {
  9073                           ;usb_device.c: 2876: if(p->STAT.UOWN == 1)
  9074  0008C8  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9075  0008CC  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9076  0008D0  0100               	movlb	0	; () banked
  9077  0008D2  AEDF               	btfss	indf2,7,c
  9078  0008D4  D01C               	goto	l1316
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;usb_device.c: 2877: {
  9082                           ;usb_device.c: 2880: if(SetupPkt.EPDir == 0)
  9083  0008D6  0104               	movlb	4	; () banked
  9084  0008D8  BF34               	btfsc	52,7,b	;volatile
  9085  0008DA  D00B               	goto	l1315
  9086                           
  9087                           ; BSR set to: 4
  9088                           ;usb_device.c: 2881: {
  9089                           ;usb_device.c: 2882: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9090  0008DC  5134               	movf	52,w,b	;volatile
  9091  0008DE  0B0F               	andlw	15
  9092  0008E0  0100               	movlb	0	; () banked
  9093  0008E2  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9094  0008E4  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9095  0008E6  0D01               	mullw	1
  9096  0008E8  0E0F               	movlw	low _ep_data_out
  9097  0008EA  24F3               	addwf	prodl,w,c
  9098  0008EC  6ED9               	movwf	fsr2l,c
  9099  0008EE  0E00               	movlw	high _ep_data_out
  9100  0008F0  D00B               	goto	L8
  9101  0008F2                     l1315:
  9102                           
  9103                           ;usb_device.c: 2884: else
  9104                           ;usb_device.c: 2885: {
  9105                           ;usb_device.c: 2886: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 1;
  9106                           
  9107                           ; BSR set to: 0
  9108  0008F2  0104               	movlb	4	; () banked
  9109  0008F4  5134               	movf	52,w,b	;volatile
  9110  0008F6  0B0F               	andlw	15
  9111  0008F8  0100               	movlb	0	; () banked
  9112  0008FA  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9113  0008FC  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9114  0008FE  0D01               	mullw	1
  9115  000900  0E12               	movlw	low _ep_data_in
  9116  000902  24F3               	addwf	prodl,w,c
  9117  000904  6ED9               	movwf	fsr2l,c
  9118  000906  0E00               	movlw	high _ep_data_in
  9119  000908                     L8:
  9120  000908  20F4               	addwfc	prodh,w,c
  9121  00090A  6EDA               	movwf	fsr2h,c
  9122  00090C  82DF               	bsf	indf2,1,c
  9123  00090E                     l1316:
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;usb_device.c: 2887: }
  9127                           ;usb_device.c: 2888: }
  9128                           ;usb_device.c: 2891: p->STAT.Val |= 0x04;
  9129                           
  9130                           ; BSR set to: 0
  9131                           
  9132                           ; BSR set to: 0
  9133  00090E  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9134  000912  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9135  000916  0E00               	movlw	0
  9136  000918  84DB               	bsf	plusw2,2,c
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;usb_device.c: 2892: p->STAT.Val |= 0x80;
  9140  00091A  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9141  00091E  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9142  000922  0E00               	movlw	0
  9143  000924  8EDB               	bsf	plusw2,7,c
  9144                           
  9145                           ;usb_device.c: 2893: }
  9146  000926  0012               	return	
  9147  000928                     l1313:
  9148                           
  9149                           ;usb_device.c: 2894: else
  9150                           ;usb_device.c: 2895: {
  9151                           ;usb_device.c: 2899: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9152                           
  9153                           ; BSR set to: 0
  9154  000928  0E04               	movlw	4
  9155  00092A  0100               	movlb	0	; () banked
  9156  00092C  1B8D               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;usb_device.c: 2901: if(p->STAT.UOWN == 1)
  9160  00092E  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9161  000932  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9162  000936  AEDF               	btfss	indf2,7,c
  9163  000938  D01B               	goto	l1318
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;usb_device.c: 2902: {
  9167                           ;usb_device.c: 2905: p->STAT.Val &= (~0x80);
  9168  00093A  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9169  00093E  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9170  000942  0E7F               	movlw	127
  9171  000944  16DF               	andwf	indf2,f,c
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;usb_device.c: 2906: p->STAT.Val |= 0x40;
  9175  000946  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9176  00094A  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9177  00094E  0E00               	movlw	0
  9178  000950  8CDB               	bsf	plusw2,6,c
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;usb_device.c: 2907: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9182  000952  0E00               	movlw	0
  9183  000954  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9184  000956  0E05               	movlw	5
  9185  000958  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9186  00095A  C08D  F083         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9187  00095E  C08E  F084         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9188  000962  0E00               	movlw	0
  9189  000964  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9190  000966  0E02               	movlw	2
  9191  000968  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9192  00096A  EC85  F01B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9193                           
  9194                           ;usb_device.c: 2908: }
  9195  00096E  D006               	goto	l1319
  9196  000970                     l1318:
  9197                           
  9198                           ;usb_device.c: 2909: else
  9199                           ;usb_device.c: 2910: {
  9200                           ;usb_device.c: 2912: p->STAT.Val |= 0x40;
  9201  000970  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9202  000974  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9203  000978  0E00               	movlw	0
  9204  00097A  8CDB               	bsf	plusw2,6,c
  9205  00097C                     l1319:
  9206                           
  9207                           ;usb_device.c: 2913: }
  9208                           ;usb_device.c: 2917: {((uint8_t_VAL*)&p)->Val ^= 0x0004;};
  9209  00097C  0E04               	movlw	4
  9210  00097E  0100               	movlb	0	; () banked
  9211  000980  1B8D               	xorwf	USBStdFeatureReqHandler@p& (0+255),f,b
  9212                           
  9213                           ; BSR set to: 0
  9214                           ;usb_device.c: 2923: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
  9215  000982  B38C               	btfsc	USBStdFeatureReqHandler@current_ep_data& (0+255),1,b
  9216  000984  D006               	goto	u7880
  9217                           
  9218                           ; BSR set to: 0
  9219  000986  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9220  00098A  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9221  00098E  AEDF               	btfss	indf2,7,c
  9222  000990  D031               	goto	l1320
  9223  000992                     u7880:
  9224                           
  9225                           ; BSR set to: 0
  9226                           ;usb_device.c: 2924: {
  9227                           ;usb_device.c: 2925: if(SetupPkt.EPDir == 0)
  9228  000992  0104               	movlb	4	; () banked
  9229  000994  BF34               	btfsc	52,7,b	;volatile
  9230  000996  D00B               	goto	l1323
  9231                           
  9232                           ; BSR set to: 4
  9233                           ;usb_device.c: 2926: {
  9234                           ;usb_device.c: 2927: ep_data_out[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9235  000998  5134               	movf	52,w,b	;volatile
  9236  00099A  0B0F               	andlw	15
  9237  00099C  0100               	movlb	0	; () banked
  9238  00099E  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9239  0009A0  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9240  0009A2  0D01               	mullw	1
  9241  0009A4  0E0F               	movlw	low _ep_data_out
  9242  0009A6  24F3               	addwf	prodl,w,c
  9243  0009A8  6ED9               	movwf	fsr2l,c
  9244  0009AA  0E00               	movlw	high _ep_data_out
  9245  0009AC  D00B               	goto	L9
  9246  0009AE                     l1323:
  9247                           
  9248                           ;usb_device.c: 2929: else
  9249                           ;usb_device.c: 2930: {
  9250                           ;usb_device.c: 2931: ep_data_in[SetupPkt.EPNum].bits.transfer_terminated = 0;
  9251                           
  9252                           ; BSR set to: 0
  9253  0009AE  0104               	movlb	4	; () banked
  9254  0009B0  5134               	movf	52,w,b	;volatile
  9255  0009B2  0B0F               	andlw	15
  9256  0009B4  0100               	movlb	0	; () banked
  9257  0009B6  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9258  0009B8  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9259  0009BA  0D01               	mullw	1
  9260  0009BC  0E12               	movlw	low _ep_data_in
  9261  0009BE  24F3               	addwf	prodl,w,c
  9262  0009C0  6ED9               	movwf	fsr2l,c
  9263  0009C2  0E00               	movlw	high _ep_data_in
  9264  0009C4                     L9:
  9265  0009C4  20F4               	addwfc	prodh,w,c
  9266  0009C6  6EDA               	movwf	fsr2h,c
  9267  0009C8  92DF               	bcf	indf2,1,c
  9268                           
  9269                           ; BSR set to: 0
  9270                           ;usb_device.c: 2932: }
  9271                           ;usb_device.c: 2934: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9272                           
  9273                           ; BSR set to: 0
  9274  0009CA  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9275  0009CE  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9276  0009D2  0E3B               	movlw	59
  9277  0009D4  16DF               	andwf	indf2,f,c
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;usb_device.c: 2937: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
  9281  0009D6  0E00               	movlw	0
  9282  0009D8  6F82               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@event+1)& (0+255),b
  9283  0009DA  0E05               	movlw	5
  9284  0009DC  6F81               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event& (0+255),b
  9285  0009DE  C08D  F083         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
  9286  0009E2  C08E  F084         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
  9287  0009E6  0E00               	movlw	0
  9288  0009E8  6F86               	movwf	(USER_USB_CALLBACK_EVENT_HANDLER@size+1)& (0+255),b
  9289  0009EA  0E02               	movlw	2
  9290  0009EC  6F85               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size& (0+255),b
  9291  0009EE  EC85  F01B         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
  9292                           
  9293                           ;usb_device.c: 2938: }
  9294  0009F2  D006               	goto	l1325
  9295  0009F4                     l1320:
  9296                           
  9297                           ;usb_device.c: 2939: else
  9298                           ;usb_device.c: 2940: {
  9299                           ;usb_device.c: 2942: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
  9300  0009F4  C08D  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
  9301  0009F8  C08E  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
  9302  0009FC  0E3B               	movlw	59
  9303  0009FE  16DF               	andwf	indf2,f,c
  9304  000A00                     l1325:
  9305                           
  9306                           ;usb_device.c: 2943: }
  9307                           ;usb_device.c: 2990: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum);
  9308  000A00  0104               	movlb	4	; () banked
  9309  000A02  5134               	movf	52,w,b	;volatile
  9310  000A04  0B0F               	andlw	15
  9311  000A06  0100               	movlb	0	; () banked
  9312  000A08  6F89               	movwf	??_USBStdFeatureReqHandler& (0+255),b
  9313  000A0A  5189               	movf	??_USBStdFeatureReqHandler& (0+255),w,b
  9314  000A0C  0D01               	mullw	1
  9315  000A0E  0E26               	movlw	38
  9316  000A10  24F3               	addwf	prodl,w,c
  9317  000A12  6F8A               	movwf	USBStdFeatureReqHandler@pUEP& (0+255),b
  9318  000A14  0E0F               	movlw	15
  9319  000A16  20F4               	addwfc	prodh,w,c
  9320  000A18  6F8B               	movwf	(USBStdFeatureReqHandler@pUEP+1)& (0+255),b
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;usb_device.c: 2994: *pUEP &= ~0x0001;
  9324  000A1A  C08A  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
  9325  000A1E  C08B  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
  9326  000A22  0EFE               	movlw	254
  9327  000A24  16DF               	andwf	indf2,f,c
  9328                           
  9329                           ; BSR set to: 0
  9330  000A26  0012               	return	
  9331  000A28                     __end_of_USBStdFeatureReqHandler:
  9332                           	opt stack 0
  9333                           tosu	equ	0xFFF
  9334                           tosh	equ	0xFFE
  9335                           tosl	equ	0xFFD
  9336                           pclath	equ	0xFFA
  9337                           tblptru	equ	0xFF8
  9338                           tblptrh	equ	0xFF7
  9339                           tblptrl	equ	0xFF6
  9340                           tablat	equ	0xFF5
  9341                           prodh	equ	0xFF4
  9342                           prodl	equ	0xFF3
  9343                           intcon	equ	0xFF2
  9344                           intcon2	equ	0xFF1
  9345                           intcon3	equ	0xFF0
  9346                           indf0	equ	0xFEF
  9347                           postinc0	equ	0xFEE
  9348                           plusw0	equ	0xFEB
  9349                           fsr0h	equ	0xFEA
  9350                           fsr0l	equ	0xFE9
  9351                           wreg	equ	0xFE8
  9352                           postinc1	equ	0xFE6
  9353                           postdec1	equ	0xFE5
  9354                           fsr1h	equ	0xFE2
  9355                           fsr1l	equ	0xFE1
  9356                           indf2	equ	0xFDF
  9357                           postinc2	equ	0xFDE
  9358                           postdec2	equ	0xFDD
  9359                           plusw2	equ	0xFDB
  9360                           fsr2h	equ	0xFDA
  9361                           fsr2l	equ	0xFD9
  9362                           status	equ	0xFD8
  9363                           
  9364 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
  9365 ;; Defined at:
  9366 ;;		line 104 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_mgr.c"
  9367 ;; Parameters:    Size  Location     Type
  9368 ;;  event           2   33[BANK0 ] enum E8223
  9369 ;;  pdata           2   35[BANK0 ] PTR void 
  9370 ;;		 -> USTATcopy(1), USBActiveConfiguration(1), NULL(0), BDT(48), 
  9371 ;;  size            2   37[BANK0 ] unsigned int 
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;		None
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      unsigned char 
  9376 ;; Registers used:
  9377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9383 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9385 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;Total ram usage:        8 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; Hardware stack levels required when called:   12
  9390 ;; This function calls:
  9391 ;;		_CDCInitEP
  9392 ;;		_USBCheckCDCRequest
  9393 ;; This function is called by:
  9394 ;;		_USBDeviceTasks
  9395 ;;		_USBStdSetCfgHandler
  9396 ;;		_USBSuspend
  9397 ;;		_USBWakeFromSuspend
  9398 ;;		_USBCtrlTrfSetupHandler
  9399 ;;		_USBCheckStdRequest
  9400 ;;		_USBStdFeatureReqHandler
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           	psect	text41
  9405  00370A                     __ptext41:
  9406                           	opt stack 0
  9407  00370A                     _USER_USB_CALLBACK_EVENT_HANDLER:
  9408                           	opt stack 14
  9409                           
  9410                           ;usb_device_mgr.c: 106: switch( (int) event )
  9411                           
  9412                           ;incstack = 0
  9413  00370A  D006               	goto	l1479
  9414  00370C                     
  9415                           ;usb_device_mgr.c: 134: CDCInitEP();
  9416  00370C  ECED  F01A         	call	_CDCInitEP	;wreg free
  9417                           
  9418                           ;usb_device_mgr.c: 142: break;
  9419                           
  9420                           ;usb_device_mgr.c: 141: case EVENT_SET_DESCRIPTOR:
  9421                           
  9422                           ;usb_device_mgr.c: 139: break;
  9423  003710  0012               	return	
  9424  003712                     
  9425                           ;usb_device_mgr.c: 148: USBCheckCDCRequest();
  9426  003712  EC4B  F015         	call	_USBCheckCDCRequest	;wreg free
  9427                           
  9428                           ;usb_device_mgr.c: 163: }
  9429                           
  9430                           ;usb_device_mgr.c: 162: break;
  9431                           
  9432                           ;usb_device_mgr.c: 161: default:
  9433                           
  9434                           ;usb_device_mgr.c: 159: break;
  9435                           
  9436                           ;usb_device_mgr.c: 158: case EVENT_TRANSFER_TERMINATED:
  9437                           
  9438                           ;usb_device_mgr.c: 156: break;
  9439                           
  9440                           ;usb_device_mgr.c: 155: case EVENT_BUS_ERROR:
  9441                           
  9442                           ;usb_device_mgr.c: 153: break;
  9443  003716  0012               	return	
  9444  003718                     l1479:
  9445  003718  C081  F087         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
  9446  00371C  C082  F088         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
  9447                           
  9448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9449                           ; Switch size 1, requested type "space"
  9450                           ; Number of cases is 2, Range of values is 0 to 127
  9451                           ; switch strategies available:
  9452                           ; Name         Instructions Cycles
  9453                           ; simple_byte            7     4 (average)
  9454                           ;	Chosen strategy is simple_byte
  9455  003720  0100               	movlb	0	; () banked
  9456  003722  5188               	movf	(??_USER_USB_CALLBACK_EVENT_HANDLER+1)& (0+255),w,b
  9457  003724  0A00               	xorlw	0	; case 0
  9458  003726  B4D8               	btfsc	status,2,c
  9459  003728  D004               	goto	l10607
  9460  00372A  0A7F               	xorlw	127	; case 127
  9461  00372C  A4D8               	btfss	status,2,c
  9462  00372E  0012               	return	
  9463  003730  D018               	goto	l10609
  9464  003732                     l10607:
  9465                           
  9466                           ; BSR set to: 0
  9467                           ; Switch size 1, requested type "space"
  9468                           ; Number of cases is 8, Range of values is 1 to 117
  9469                           ; switch strategies available:
  9470                           ; Name         Instructions Cycles
  9471                           ; simple_byte           25    13 (average)
  9472                           ;	Chosen strategy is simple_byte
  9473  003732  5187               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9474  003734  0A01               	xorlw	1	; case 1
  9475  003736  B4D8               	btfsc	status,2,c
  9476  003738  D7E9               	goto	l1485
  9477  00373A  0A03               	xorlw	3	; case 2
  9478  00373C  B4D8               	btfsc	status,2,c
  9479  00373E  0012               	return	
  9480  003740  0A01               	xorlw	1	; case 3
  9481  003742  B4D8               	btfsc	status,2,c
  9482  003744  D7E6               	goto	l1487
  9483  003746  0A06               	xorlw	6	; case 5
  9484  003748  B4D8               	btfsc	status,2,c
  9485  00374A  0012               	return	
  9486  00374C  0A77               	xorlw	119	; case 114
  9487  00374E  B4D8               	btfsc	status,2,c
  9488  003750  0012               	return	
  9489  003752  0A01               	xorlw	1	; case 115
  9490  003754  B4D8               	btfsc	status,2,c
  9491  003756  0012               	return	
  9492  003758  0A07               	xorlw	7	; case 116
  9493  00375A  B4D8               	btfsc	status,2,c
  9494  00375C  0012               	return	
  9495  00375E  0A01               	xorlw	1	; case 117
  9496  003760  0012               	return	
  9497  003762                     l10609:
  9498                           
  9499                           ; BSR set to: 0
  9500                           ; Switch size 1, requested type "space"
  9501                           ; Number of cases is 1, Range of values is 255 to 255
  9502                           ; switch strategies available:
  9503                           ; Name         Instructions Cycles
  9504                           ; simple_byte            4     3 (average)
  9505                           ;	Chosen strategy is simple_byte
  9506  003762  5187               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER& (0+255),w,b
  9507  003764  0AFF               	xorlw	255	; case 255
  9508  003766  0012               	return	
  9509  003768                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
  9510                           	opt stack 0
  9511                           tosu	equ	0xFFF
  9512                           tosh	equ	0xFFE
  9513                           tosl	equ	0xFFD
  9514                           pclath	equ	0xFFA
  9515                           tblptru	equ	0xFF8
  9516                           tblptrh	equ	0xFF7
  9517                           tblptrl	equ	0xFF6
  9518                           tablat	equ	0xFF5
  9519                           prodh	equ	0xFF4
  9520                           prodl	equ	0xFF3
  9521                           intcon	equ	0xFF2
  9522                           intcon2	equ	0xFF1
  9523                           intcon3	equ	0xFF0
  9524                           indf0	equ	0xFEF
  9525                           postinc0	equ	0xFEE
  9526                           plusw0	equ	0xFEB
  9527                           fsr0h	equ	0xFEA
  9528                           fsr0l	equ	0xFE9
  9529                           wreg	equ	0xFE8
  9530                           postinc1	equ	0xFE6
  9531                           postdec1	equ	0xFE5
  9532                           fsr1h	equ	0xFE2
  9533                           fsr1l	equ	0xFE1
  9534                           indf2	equ	0xFDF
  9535                           postinc2	equ	0xFDE
  9536                           postdec2	equ	0xFDD
  9537                           plusw2	equ	0xFDB
  9538                           fsr2h	equ	0xFDA
  9539                           fsr2l	equ	0xFD9
  9540                           status	equ	0xFD8
  9541                           
  9542 ;; *************** function _USBCheckCDCRequest *****************
  9543 ;; Defined at:
  9544 ;;		line 150 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;		None
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  1    wreg      void 
  9551 ;; Registers used:
  9552 ;;		wreg, status,2, status,0
  9553 ;; Tracked objects:
  9554 ;;		On entry : 0/0
  9555 ;;		On exit  : 0/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9562 ;;Total ram usage:        0 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    9
  9565 ;; This function calls:
  9566 ;;		Nothing
  9567 ;; This function is called by:
  9568 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9569 ;; This function uses a non-reentrant model
  9570 ;;
  9571                           
  9572                           	psect	text42
  9573  002A96                     __ptext42:
  9574                           	opt stack 0
  9575  002A96                     _USBCheckCDCRequest:
  9576                           	opt stack 16
  9577                           
  9578                           ;usb_device_cdc.c: 155: if(SetupPkt.Recipient != (0x01)) return;
  9579                           
  9580                           ;incstack = 0
  9581  002A96  0104               	movlb	4	; () banked
  9582  002A98  5130               	movf	48,w,b	;volatile
  9583  002A9A  0B1F               	andlw	31
  9584  002A9C  06E8               	decf	wreg,f,c
  9585  002A9E  A4D8               	btfss	status,2,c
  9586  002AA0  0012               	return	
  9587                           
  9588                           ; BSR set to: 4
  9589                           ;usb_device_cdc.c: 160: if(SetupPkt.RequestType != (0x20>>5)) return;
  9590                           
  9591                           ; BSR set to: 4
  9592                           
  9593                           ; BSR set to: 4
  9594  002AA2  3930               	swapf	48,w,b	;volatile
  9595  002AA4  32E8               	rrcf	wreg,f,c
  9596  002AA6  0B03               	andlw	3
  9597  002AA8  06E8               	decf	wreg,f,c
  9598  002AAA  A4D8               	btfss	status,2,c
  9599  002AAC  0012               	return	
  9600                           
  9601                           ; BSR set to: 4
  9602                           ;usb_device_cdc.c: 166: if((SetupPkt.bIntfID != 0x0)&&
  9603                           ;usb_device_cdc.c: 167: (SetupPkt.bIntfID != 0x01)) return;
  9604                           
  9605                           ; BSR set to: 4
  9606                           
  9607                           ; BSR set to: 4
  9608  002AAE  5134               	movf	52,w,b	;volatile
  9609  002AB0  B4D8               	btfsc	status,2,c
  9610  002AB2  D036               	goto	l1381
  9611                           
  9612                           ; BSR set to: 4
  9613  002AB4  0534               	decf	52,w,b	;volatile
  9614  002AB6  A4D8               	btfss	status,2,c
  9615  002AB8  0012               	return	
  9616  002ABA  D032               	goto	l1381
  9617  002ABC                     
  9618                           ; BSR set to: 4
  9619                           ;usb_device_cdc.c: 174: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9620                           
  9621                           ; BSR set to: 4
  9622  002ABC  0E15               	movlw	low _dummy_encapsulated_cmd_response
  9623  002ABE  0100               	movlb	0	; () banked
  9624  002AC0  6FA6               	movwf	_inPipes& (0+255),b
  9625  002AC2  0E02               	movlw	high _dummy_encapsulated_cmd_response
  9626  002AC4  6FA7               	movwf	(_inPipes+1)& (0+255),b
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;usb_device_cdc.c: 175: inPipes[0].wCount.Val = 0x08;
  9630  002AC6  0E00               	movlw	0
  9631  002AC8  6FAB               	movwf	(_inPipes+5)& (0+255),b
  9632  002ACA  0E08               	movlw	8
  9633  002ACC  6FAA               	movwf	(_inPipes+4)& (0+255),b
  9634                           
  9635                           ; BSR set to: 0
  9636                           ;usb_device_cdc.c: 176: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
  9637  002ACE  81A9               	bsf	(_inPipes+3)& (0+255),0,b
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;usb_device_cdc.c: 177: inPipes[0].info.bits.busy = 1;
  9641  002AD0  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  9642                           
  9643                           ;usb_device_cdc.c: 178: break;
  9644  002AD2  0012               	return	
  9645  002AD4                     
  9646                           ;usb_device_cdc.c: 181: inPipes[0].pSrc.bRam = (uint8_t*)&dummy_encapsulated_cmd_respons
      +                          e;
  9647                           
  9648                           ; BSR set to: 0
  9649  002AD4  0E15               	movlw	low _dummy_encapsulated_cmd_response
  9650  002AD6  0100               	movlb	0	; () banked
  9651  002AD8  6FA6               	movwf	_inPipes& (0+255),b
  9652  002ADA  0E02               	movlw	high _dummy_encapsulated_cmd_response
  9653  002ADC  6FA7               	movwf	(_inPipes+1)& (0+255),b
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;usb_device_cdc.c: 182: inPipes[0].info.bits.busy = 1;
  9657  002ADE  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  9658                           
  9659                           ;usb_device_cdc.c: 183: break;
  9660  002AE0  0012               	return	
  9661  002AE2                     l1385:
  9662                           
  9663                           ; BSR set to: 4
  9664                           ;usb_device_cdc.c: 188: outPipes[0].wCount.Val = SetupPkt.wLength;
  9665  002AE2  C436 F005          	movff	1078,_outPipes+4	;volatile
  9666  002AE6  C437 F006          	movff	1079,_outPipes+5	;volatile
  9667                           
  9668                           ; BSR set to: 4
  9669                           ;usb_device_cdc.c: 189: outPipes[0].pDst.bRam = (uint8_t*)&line_coding._byte[0];
  9670  002AEA  0EE6               	movlw	low _line_coding
  9671  002AEC  6E01               	movwf	_outPipes,c
  9672  002AEE  0E01               	movlw	high _line_coding
  9673  002AF0  6E02               	movwf	_outPipes+1,c
  9674                           
  9675                           ;usb_device_cdc.c: 190: outPipes[0].pFunc = (0);
  9676  002AF2  0E00               	movlw	0
  9677  002AF4  6E07               	movwf	_outPipes+6,c
  9678  002AF6  0E00               	movlw	0
  9679  002AF8  6E08               	movwf	_outPipes+7,c
  9680                           
  9681                           ; BSR set to: 4
  9682                           ;usb_device_cdc.c: 191: outPipes[0].info.bits.busy = 1;
  9683  002AFA  8E04               	bsf	_outPipes+3,7,c
  9684                           
  9685                           ;usb_device_cdc.c: 192: break;
  9686  002AFC  0012               	return	
  9687  002AFE                     
  9688                           ; BSR set to: 4
  9689                           ;usb_device_cdc.c: 195: { inPipes[0].pSrc.bRam = (uint8_t*)&line_coding; inPipes[0].wCou
      +                          nt.Val = 0x07; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
  9690                           
  9691                           ; BSR set to: 4
  9692  002AFE  0EE6               	movlw	low _line_coding
  9693  002B00  0100               	movlb	0	; () banked
  9694  002B02  6FA6               	movwf	_inPipes& (0+255),b
  9695  002B04  0E01               	movlw	high _line_coding
  9696  002B06  6FA7               	movwf	(_inPipes+1)& (0+255),b
  9697                           
  9698                           ; BSR set to: 0
  9699  002B08  0E00               	movlw	0
  9700  002B0A  6FAB               	movwf	(_inPipes+5)& (0+255),b
  9701  002B0C  0E07               	movlw	7
  9702  002B0E  6FAA               	movwf	(_inPipes+4)& (0+255),b
  9703                           
  9704                           ; BSR set to: 0
  9705  002B10  0EC1               	movlw	193
  9706  002B12  6FA9               	movwf	(_inPipes+3)& (0+255),b
  9707                           
  9708                           ;usb_device_cdc.c: 199: break;
  9709  002B14  0012               	return	
  9710  002B16                     l1387:
  9711                           
  9712                           ; BSR set to: 4
  9713                           ;usb_device_cdc.c: 202: control_signal_bitmap._byte = (uint8_t)SetupPkt.wValue;
  9714  002B16  C432 F01D          	movff	1074,_control_signal_bitmap	;volatile
  9715                           
  9716                           ;usb_device_cdc.c: 234: inPipes[0].info.bits.busy = 1;
  9717  002B1A  0100               	movlb	0	; () banked
  9718  002B1C  8FA9               	bsf	(_inPipes+3)& (0+255),7,b
  9719                           
  9720                           ; BSR set to: 0
  9721                           ;usb_device_cdc.c: 261: }
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;usb_device_cdc.c: 260: break;
  9725                           
  9726                           ;usb_device_cdc.c: 259: default:
  9727                           
  9728                           ;usb_device_cdc.c: 235: break;
  9729  002B1E  0012               	return	
  9730  002B20                     l1381:
  9731                           
  9732                           ; BSR set to: 0
  9733  002B20  0104               	movlb	4	; () banked
  9734  002B22  5131               	movf	49,w,b	;volatile
  9735                           
  9736                           ; Switch size 1, requested type "space"
  9737                           ; Number of cases is 5, Range of values is 0 to 34
  9738                           ; switch strategies available:
  9739                           ; Name         Instructions Cycles
  9740                           ; simple_byte           16     9 (average)
  9741                           ;	Chosen strategy is simple_byte
  9742  002B24  0A00               	xorlw	0	; case 0
  9743  002B26  B4D8               	btfsc	status,2,c
  9744  002B28  D7C9               	goto	l1382
  9745  002B2A  0A01               	xorlw	1	; case 1
  9746  002B2C  B4D8               	btfsc	status,2,c
  9747  002B2E  D7D2               	goto	l1384
  9748  002B30  0A21               	xorlw	33	; case 32
  9749  002B32  B4D8               	btfsc	status,2,c
  9750  002B34  D7D6               	goto	l1385
  9751  002B36  0A01               	xorlw	1	; case 33
  9752  002B38  B4D8               	btfsc	status,2,c
  9753  002B3A  D7E1               	goto	l1386
  9754  002B3C  0A03               	xorlw	3	; case 34
  9755  002B3E  A4D8               	btfss	status,2,c
  9756  002B40  0012               	return	
  9757  002B42  D7E9               	goto	l1387
  9758  002B44                     __end_of_USBCheckCDCRequest:
  9759                           	opt stack 0
  9760                           tosu	equ	0xFFF
  9761                           tosh	equ	0xFFE
  9762                           tosl	equ	0xFFD
  9763                           pclath	equ	0xFFA
  9764                           tblptru	equ	0xFF8
  9765                           tblptrh	equ	0xFF7
  9766                           tblptrl	equ	0xFF6
  9767                           tablat	equ	0xFF5
  9768                           prodh	equ	0xFF4
  9769                           prodl	equ	0xFF3
  9770                           intcon	equ	0xFF2
  9771                           intcon2	equ	0xFF1
  9772                           intcon3	equ	0xFF0
  9773                           indf0	equ	0xFEF
  9774                           postinc0	equ	0xFEE
  9775                           plusw0	equ	0xFEB
  9776                           fsr0h	equ	0xFEA
  9777                           fsr0l	equ	0xFE9
  9778                           wreg	equ	0xFE8
  9779                           postinc1	equ	0xFE6
  9780                           postdec1	equ	0xFE5
  9781                           fsr1h	equ	0xFE2
  9782                           fsr1l	equ	0xFE1
  9783                           indf2	equ	0xFDF
  9784                           postinc2	equ	0xFDE
  9785                           postdec2	equ	0xFDD
  9786                           plusw2	equ	0xFDB
  9787                           fsr2h	equ	0xFDA
  9788                           fsr2l	equ	0xFD9
  9789                           status	equ	0xFD8
  9790                           
  9791 ;; *************** function _CDCInitEP *****************
  9792 ;; Defined at:
  9793 ;;		line 297 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;		None
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;		None
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  1    wreg      void 
  9800 ;; Registers used:
  9801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9811 ;;Total ram usage:        0 bytes
  9812 ;; Hardware stack levels used:    1
  9813 ;; Hardware stack levels required when called:   11
  9814 ;; This function calls:
  9815 ;;		_USBEnableEndpoint
  9816 ;;		_USBTransferOnePacket
  9817 ;; This function is called by:
  9818 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           	psect	text43
  9823  0035DA                     __ptext43:
  9824                           	opt stack 0
  9825  0035DA                     _CDCInitEP:
  9826                           	opt stack 14
  9827                           
  9828                           ;usb_device_cdc.c: 300: line_coding.dwDTERate = 9600;
  9829                           
  9830                           ;incstack = 0
  9831  0035DA  0E80               	movlw	128
  9832  0035DC  0101               	movlb	1	; () banked
  9833  0035DE  6FE6               	movwf	_line_coding& (0+255),b
  9834  0035E0  0E25               	movlw	37
  9835  0035E2  6FE7               	movwf	(_line_coding+1)& (0+255),b
  9836  0035E4  0E00               	movlw	0
  9837  0035E6  6FE8               	movwf	(_line_coding+2)& (0+255),b
  9838  0035E8  0E00               	movlw	0
  9839  0035EA  6FE9               	movwf	(_line_coding+3)& (0+255),b
  9840                           
  9841                           ;usb_device_cdc.c: 301: line_coding.bCharFormat = 0x00;
  9842  0035EC  0E00               	movlw	0
  9843  0035EE  6FEA               	movwf	(_line_coding+4)& (0+255),b
  9844                           
  9845                           ;usb_device_cdc.c: 302: line_coding.bParityType = 0x00;
  9846  0035F0  0E00               	movlw	0
  9847  0035F2  6FEB               	movwf	(_line_coding+5)& (0+255),b
  9848                           
  9849                           ;usb_device_cdc.c: 303: line_coding.bDataBits = 0x08;
  9850  0035F4  0E08               	movlw	8
  9851  0035F6  6FEC               	movwf	(_line_coding+6)& (0+255),b
  9852                           
  9853                           ;usb_device_cdc.c: 305: cdc_rx_len = 0;
  9854  0035F8  0E00               	movlw	0
  9855  0035FA  0100               	movlb	0	; () banked
  9856  0035FC  6FBC               	movwf	_cdc_rx_len& (0+255),b
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;usb_device_cdc.c: 318: USBEnableEndpoint(1,0x02|0x10|0x08);
  9860  0035FE  0E1A               	movlw	26
  9861  003600  6F7D               	movwf	USBEnableEndpoint@options& (0+255),b
  9862  003602  0E01               	movlw	1
  9863  003604  ECA4  F01D         	call	_USBEnableEndpoint
  9864                           
  9865                           ;usb_device_cdc.c: 319: USBEnableEndpoint(2,0x02|0x04|0x10|0x08);
  9866  003608  0E1E               	movlw	30
  9867  00360A  0100               	movlb	0	; () banked
  9868  00360C  6F7D               	movwf	USBEnableEndpoint@options& (0+255),b
  9869  00360E  0E02               	movlw	2
  9870  003610  ECA4  F01D         	call	_USBEnableEndpoint
  9871                           
  9872                           ;usb_device_cdc.c: 321: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
  9873  003614  0E00               	movlw	0
  9874  003616  0100               	movlb	0	; () banked
  9875  003618  6F75               	movwf	USBTransferOnePacket@dir& (0+255),b
  9876  00361A  0E22               	movlw	low _cdc_data_rx
  9877  00361C  6F76               	movwf	USBTransferOnePacket@data& (0+255),b
  9878  00361E  0E03               	movlw	high _cdc_data_rx
  9879  003620  6F77               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
  9880  003622  0E40               	movlw	64
  9881  003624  6F78               	movwf	USBTransferOnePacket@len& (0+255),b
  9882  003626  0E02               	movlw	2
  9883  003628  EC38  F014         	call	_USBTransferOnePacket
  9884  00362C  C075  F0B2         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
  9885  003630  C076  F0B3         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
  9886                           
  9887                           ;usb_device_cdc.c: 322: CDCDataInHandle = (0);
  9888  003634  0E00               	movlw	0
  9889  003636  6E15               	movwf	_CDCDataInHandle,c
  9890  003638  0E00               	movlw	0
  9891  00363A  6E16               	movwf	_CDCDataInHandle+1,c
  9892                           
  9893                           ;usb_device_cdc.c: 349: cdc_trf_state = 0;
  9894  00363C  0E00               	movlw	0
  9895  00363E  0100               	movlb	0	; () banked
  9896  003640  6FBB               	movwf	_cdc_trf_state& (0+255),b
  9897                           
  9898                           ; BSR set to: 0
  9899  003642  0012               	return		;funcret
  9900  003644                     __end_of_CDCInitEP:
  9901                           	opt stack 0
  9902                           tosu	equ	0xFFF
  9903                           tosh	equ	0xFFE
  9904                           tosl	equ	0xFFD
  9905                           pclath	equ	0xFFA
  9906                           tblptru	equ	0xFF8
  9907                           tblptrh	equ	0xFF7
  9908                           tblptrl	equ	0xFF6
  9909                           tablat	equ	0xFF5
  9910                           prodh	equ	0xFF4
  9911                           prodl	equ	0xFF3
  9912                           intcon	equ	0xFF2
  9913                           intcon2	equ	0xFF1
  9914                           intcon3	equ	0xFF0
  9915                           indf0	equ	0xFEF
  9916                           postinc0	equ	0xFEE
  9917                           plusw0	equ	0xFEB
  9918                           fsr0h	equ	0xFEA
  9919                           fsr0l	equ	0xFE9
  9920                           wreg	equ	0xFE8
  9921                           postinc1	equ	0xFE6
  9922                           postdec1	equ	0xFE5
  9923                           fsr1h	equ	0xFE2
  9924                           fsr1l	equ	0xFE1
  9925                           indf2	equ	0xFDF
  9926                           postinc2	equ	0xFDE
  9927                           postdec2	equ	0xFDD
  9928                           plusw2	equ	0xFDB
  9929                           fsr2h	equ	0xFDA
  9930                           fsr2l	equ	0xFD9
  9931                           status	equ	0xFD8
  9932                           
  9933 ;; *************** function _USBEnableEndpoint *****************
  9934 ;; Defined at:
  9935 ;;		line 896 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;  ep              1    wreg     unsigned char 
  9938 ;;  options         1   29[BANK0 ] unsigned char 
  9939 ;; Auto vars:     Size  Location     Type
  9940 ;;  ep              1   32[BANK0 ] unsigned char 
  9941 ;;  p               2   30[BANK0 ] PTR unsigned char 
  9942 ;;		 -> UEP0(1), 
  9943 ;; Return value:  Size  Location     Type
  9944 ;;                  1    wreg      void 
  9945 ;; Registers used:
  9946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9947 ;; Tracked objects:
  9948 ;;		On entry : 0/0
  9949 ;;		On exit  : 0/0
  9950 ;;		Unchanged: 0/0
  9951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9952 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9953 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9955 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9956 ;;Total ram usage:        4 bytes
  9957 ;; Hardware stack levels used:    1
  9958 ;; Hardware stack levels required when called:   10
  9959 ;; This function calls:
  9960 ;;		_USBConfigureEndpoint
  9961 ;; This function is called by:
  9962 ;;		_CDCInitEP
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966                           	psect	text44
  9967  003B48                     __ptext44:
  9968                           	opt stack 0
  9969  003B48                     _USBEnableEndpoint:
  9970                           	opt stack 14
  9971                           
  9972                           ; BSR set to: 0
  9973                           ;incstack = 0
  9974                           ;USBEnableEndpoint@ep stored from wreg
  9975  003B48  0100               	movlb	0	; () banked
  9976  003B4A  6F80               	movwf	USBEnableEndpoint@ep& (0+255),b
  9977                           
  9978                           ;usb_device.c: 898: unsigned char* p;
  9979                           ;usb_device.c: 902: if(options & 0x04)
  9980  003B4C  0100               	movlb	0	; () banked
  9981  003B4E  A57D               	btfss	USBEnableEndpoint@options& (0+255),2,b
  9982  003B50  D005               	goto	l1122
  9983                           
  9984                           ; BSR set to: 0
  9985                           ;usb_device.c: 903: {
  9986                           ;usb_device.c: 904: USBConfigureEndpoint(ep, 0);
  9987  003B52  0E00               	movlw	0
  9988  003B54  6F75               	movwf	USBConfigureEndpoint@direction& (0+255),b
  9989  003B56  5180               	movf	USBEnableEndpoint@ep& (0+255),w,b
  9990  003B58  EC40  F017         	call	_USBConfigureEndpoint
  9991  003B5C                     l1122:
  9992                           
  9993                           ;usb_device.c: 905: }
  9994                           ;usb_device.c: 906: if(options & 0x02)
  9995  003B5C  0100               	movlb	0	; () banked
  9996  003B5E  A37D               	btfss	USBEnableEndpoint@options& (0+255),1,b
  9997  003B60  D005               	goto	l1123
  9998                           
  9999                           ; BSR set to: 0
 10000                           ;usb_device.c: 907: {
 10001                           ;usb_device.c: 908: USBConfigureEndpoint(ep, 1);
 10002  003B62  0E01               	movlw	1
 10003  003B64  6F75               	movwf	USBConfigureEndpoint@direction& (0+255),b
 10004  003B66  5180               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10005  003B68  EC40  F017         	call	_USBConfigureEndpoint
 10006  003B6C                     l1123:
 10007                           
 10008                           ;usb_device.c: 909: }
 10009                           ;usb_device.c: 917: p = (unsigned char*)(&UEP0+ep);
 10010  003B6C  0100               	movlb	0	; () banked
 10011  003B6E  5180               	movf	USBEnableEndpoint@ep& (0+255),w,b
 10012  003B70  0D01               	mullw	1
 10013  003B72  0E26               	movlw	38
 10014  003B74  24F3               	addwf	prodl,w,c
 10015  003B76  6F7E               	movwf	USBEnableEndpoint@p& (0+255),b
 10016  003B78  0E0F               	movlw	15
 10017  003B7A  20F4               	addwfc	prodh,w,c
 10018  003B7C  6F7F               	movwf	(USBEnableEndpoint@p+1)& (0+255),b
 10019                           
 10020                           ; BSR set to: 0
 10021                           ;usb_device.c: 919: *p = options;
 10022  003B7E  C07E  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 10023  003B82  C07F  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 10024  003B86  C07D  FFDF         	movff	USBEnableEndpoint@options,indf2
 10025                           
 10026                           ; BSR set to: 0
 10027  003B8A  0012               	return		;funcret
 10028  003B8C                     __end_of_USBEnableEndpoint:
 10029                           	opt stack 0
 10030                           tosu	equ	0xFFF
 10031                           tosh	equ	0xFFE
 10032                           tosl	equ	0xFFD
 10033                           pclath	equ	0xFFA
 10034                           tblptru	equ	0xFF8
 10035                           tblptrh	equ	0xFF7
 10036                           tblptrl	equ	0xFF6
 10037                           tablat	equ	0xFF5
 10038                           prodh	equ	0xFF4
 10039                           prodl	equ	0xFF3
 10040                           intcon	equ	0xFF2
 10041                           intcon2	equ	0xFF1
 10042                           intcon3	equ	0xFF0
 10043                           indf0	equ	0xFEF
 10044                           postinc0	equ	0xFEE
 10045                           plusw0	equ	0xFEB
 10046                           fsr0h	equ	0xFEA
 10047                           fsr0l	equ	0xFE9
 10048                           wreg	equ	0xFE8
 10049                           postinc1	equ	0xFE6
 10050                           postdec1	equ	0xFE5
 10051                           fsr1h	equ	0xFE2
 10052                           fsr1l	equ	0xFE1
 10053                           indf2	equ	0xFDF
 10054                           postinc2	equ	0xFDE
 10055                           postdec2	equ	0xFDD
 10056                           plusw2	equ	0xFDB
 10057                           fsr2h	equ	0xFDA
 10058                           fsr2l	equ	0xFD9
 10059                           status	equ	0xFD8
 10060                           
 10061 ;; *************** function _USBConfigureEndpoint *****************
 10062 ;; Defined at:
 10063 ;;		line 1561 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10064 ;; Parameters:    Size  Location     Type
 10065 ;;  EPNum           1    wreg     unsigned char 
 10066 ;;  direction       1   21[BANK0 ] unsigned char 
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;  EPNum           1   26[BANK0 ] unsigned char 
 10069 ;;  handle          2   27[BANK0 ] PTR volatile struct __BD
 10070 ;;		 -> BDT(48), 
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  1    wreg      void 
 10073 ;; Registers used:
 10074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10080 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10081 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10082 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10083 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10084 ;;Total ram usage:        8 bytes
 10085 ;; Hardware stack levels used:    1
 10086 ;; Hardware stack levels required when called:    9
 10087 ;; This function calls:
 10088 ;;		Nothing
 10089 ;; This function is called by:
 10090 ;;		_USBEnableEndpoint
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           	psect	text45
 10095  002E80                     __ptext45:
 10096                           	opt stack 0
 10097  002E80                     _USBConfigureEndpoint:
 10098                           	opt stack 14
 10099                           
 10100                           ; BSR set to: 0
 10101                           ;incstack = 0
 10102                           ;USBConfigureEndpoint@EPNum stored from wreg
 10103  002E80  0100               	movlb	0	; () banked
 10104  002E82  6F7A               	movwf	USBConfigureEndpoint@EPNum& (0+255),b
 10105                           
 10106                           ;usb_device.c: 1563: volatile BDT_ENTRY* handle;
 10107                           ;usb_device.c: 1567: handle = (volatile BDT_ENTRY*)&BDT[0];
 10108  002E84  0E00               	movlw	0
 10109  002E86  0100               	movlb	0	; () banked
 10110  002E88  6F7B               	movwf	USBConfigureEndpoint@handle& (0+255),b
 10111  002E8A  0E04               	movlw	4
 10112  002E8C  6F7C               	movwf	(USBConfigureEndpoint@handle+1)& (0+255),b
 10113                           
 10114                           ; BSR set to: 0
 10115                           ;usb_device.c: 1568: handle += (4*EPNum+2*direction+0u);
 10116  002E8E  5175               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10117  002E90  6F76               	movwf	??_USBConfigureEndpoint& (0+255),b
 10118  002E92  6B77               	clrf	(??_USBConfigureEndpoint+1)& (0+255),b
 10119  002E94  90D8               	bcf	status,0,c
 10120  002E96  3776               	rlcf	??_USBConfigureEndpoint& (0+255),f,b
 10121  002E98  3777               	rlcf	(??_USBConfigureEndpoint+1)& (0+255),f,b
 10122  002E9A  517A               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10123  002E9C  6F78               	movwf	(??_USBConfigureEndpoint+2)& (0+255),b
 10124  002E9E  6B79               	clrf	(??_USBConfigureEndpoint+3)& (0+255),b
 10125  002EA0  90D8               	bcf	status,0,c
 10126  002EA2  3778               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10127  002EA4  3779               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10128  002EA6  90D8               	bcf	status,0,c
 10129  002EA8  3778               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10130  002EAA  3779               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10131  002EAC  5176               	movf	??_USBConfigureEndpoint& (0+255),w,b
 10132  002EAE  2778               	addwf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10133  002EB0  5177               	movf	(??_USBConfigureEndpoint+1)& (0+255),w,b
 10134  002EB2  2379               	addwfc	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10135  002EB4  90D8               	bcf	status,0,c
 10136  002EB6  3778               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10137  002EB8  3779               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10138  002EBA  90D8               	bcf	status,0,c
 10139  002EBC  3778               	rlcf	(??_USBConfigureEndpoint+2)& (0+255),f,b
 10140  002EBE  3779               	rlcf	(??_USBConfigureEndpoint+3)& (0+255),f,b
 10141  002EC0  5178               	movf	(??_USBConfigureEndpoint+2)& (0+255),w,b
 10142  002EC2  277B               	addwf	USBConfigureEndpoint@handle& (0+255),f,b
 10143  002EC4  5179               	movf	(??_USBConfigureEndpoint+3)& (0+255),w,b
 10144  002EC6  237C               	addwfc	(USBConfigureEndpoint@handle+1)& (0+255),f,b
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;usb_device.c: 1570: handle->STAT.UOWN = 0;
 10148  002EC8  C07B  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10149  002ECC  C07C  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10150  002ED0  9EDF               	bcf	indf2,7,c
 10151                           
 10152                           ; BSR set to: 0
 10153                           ;usb_device.c: 1575: if(direction == 0)
 10154  002ED2  5175               	movf	USBConfigureEndpoint@direction& (0+255),w,b
 10155  002ED4  A4D8               	btfss	status,2,c
 10156  002ED6  D007               	goto	l1158
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;usb_device.c: 1576: {
 10160                           ;usb_device.c: 1577: pBDTEntryOut[EPNum] = handle;
 10161  002ED8  517A               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10162  002EDA  0D02               	mullw	2
 10163  002EDC  0EC8               	movlw	low _pBDTEntryOut
 10164  002EDE  24F3               	addwf	prodl,w,c
 10165  002EE0  6ED9               	movwf	fsr2l,c
 10166  002EE2  0E01               	movlw	high _pBDTEntryOut
 10167  002EE4  D006               	goto	L10
 10168  002EE6                     l1158:
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;usb_device.c: 1579: else
 10172                           ;usb_device.c: 1580: {
 10173                           ;usb_device.c: 1581: pBDTEntryIn[EPNum] = handle;
 10174                           
 10175                           ; BSR set to: 0
 10176  002EE6  517A               	movf	USBConfigureEndpoint@EPNum& (0+255),w,b
 10177  002EE8  0D02               	mullw	2
 10178  002EEA  0EAC               	movlw	low _pBDTEntryIn
 10179  002EEC  24F3               	addwf	prodl,w,c
 10180  002EEE  6ED9               	movwf	fsr2l,c
 10181  002EF0  0E00               	movlw	high _pBDTEntryIn
 10182  002EF2                     L10:
 10183  002EF2  20F4               	addwfc	prodh,w,c
 10184  002EF4  6EDA               	movwf	fsr2h,c
 10185  002EF6  C07B  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 10186  002EFA  C07C  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 10187                           
 10188                           ; BSR set to: 0
 10189                           ;usb_device.c: 1582: }
 10190                           ;usb_device.c: 1585: handle->STAT.DTS = 0;
 10191                           
 10192                           ; BSR set to: 0
 10193  002EFE  C07B  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 10194  002F02  C07C  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 10195  002F06  9CDF               	bcf	indf2,6,c
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;usb_device.c: 1586: (handle+1)->STAT.DTS = 1;
 10199  002F08  EE20 F004          	lfsr	2,4
 10200  002F0C  517B               	movf	USBConfigureEndpoint@handle& (0+255),w,b
 10201  002F0E  26D9               	addwf	fsr2l,f,c
 10202  002F10  517C               	movf	(USBConfigureEndpoint@handle+1)& (0+255),w,b
 10203  002F12  22DA               	addwfc	fsr2h,f,c
 10204  002F14  8CDF               	bsf	indf2,6,c
 10205                           
 10206                           ; BSR set to: 0
 10207  002F16  0012               	return		;funcret
 10208  002F18                     __end_of_USBConfigureEndpoint:
 10209                           	opt stack 0
 10210                           tosu	equ	0xFFF
 10211                           tosh	equ	0xFFE
 10212                           tosl	equ	0xFFD
 10213                           pclath	equ	0xFFA
 10214                           tblptru	equ	0xFF8
 10215                           tblptrh	equ	0xFF7
 10216                           tblptrl	equ	0xFF6
 10217                           tablat	equ	0xFF5
 10218                           prodh	equ	0xFF4
 10219                           prodl	equ	0xFF3
 10220                           intcon	equ	0xFF2
 10221                           intcon2	equ	0xFF1
 10222                           intcon3	equ	0xFF0
 10223                           indf0	equ	0xFEF
 10224                           postinc0	equ	0xFEE
 10225                           plusw0	equ	0xFEB
 10226                           fsr0h	equ	0xFEA
 10227                           fsr0l	equ	0xFE9
 10228                           wreg	equ	0xFE8
 10229                           postinc1	equ	0xFE6
 10230                           postdec1	equ	0xFE5
 10231                           fsr1h	equ	0xFE2
 10232                           fsr1l	equ	0xFE1
 10233                           indf2	equ	0xFDF
 10234                           postinc2	equ	0xFDE
 10235                           postdec2	equ	0xFDD
 10236                           plusw2	equ	0xFDB
 10237                           fsr2h	equ	0xFDA
 10238                           fsr2l	equ	0xFD9
 10239                           status	equ	0xFD8
 10240                           
 10241 ;; *************** function _USBCtrlTrfOutHandler *****************
 10242 ;; Defined at:
 10243 ;;		line 2555 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10244 ;; Parameters:    Size  Location     Type
 10245 ;;		None
 10246 ;; Auto vars:     Size  Location     Type
 10247 ;;		None
 10248 ;; Return value:  Size  Location     Type
 10249 ;;                  1    wreg      void 
 10250 ;; Registers used:
 10251 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10252 ;; Tracked objects:
 10253 ;;		On entry : 0/0
 10254 ;;		On exit  : 0/0
 10255 ;;		Unchanged: 0/0
 10256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10261 ;;Total ram usage:        0 bytes
 10262 ;; Hardware stack levels used:    1
 10263 ;; Hardware stack levels required when called:   11
 10264 ;; This function calls:
 10265 ;;		_USBCtrlTrfRxService
 10266 ;; This function is called by:
 10267 ;;		_USBCtrlEPService
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text46
 10272  0036AA                     __ptext46:
 10273                           	opt stack 0
 10274  0036AA                     _USBCtrlTrfOutHandler:
 10275                           	opt stack 14
 10276                           
 10277                           ;usb_device.c: 2557: if(controlTransferState == 2)
 10278                           
 10279                           ; BSR set to: 0
 10280                           ;incstack = 0
 10281  0036AA  0E02               	movlw	2
 10282  0036AC  0100               	movlb	0	; () banked
 10283  0036AE  19C8               	xorwf	_controlTransferState& (0+255),w,b
 10284  0036B0  A4D8               	btfss	status,2,c
 10285  0036B2  D003               	goto	l1264
 10286                           
 10287                           ; BSR set to: 0
 10288                           ;usb_device.c: 2558: {
 10289                           ;usb_device.c: 2559: USBCtrlTrfRxService();
 10290  0036B4  EC02  F00D         	call	_USBCtrlTrfRxService	;wreg free
 10291                           
 10292                           ;usb_device.c: 2560: }
 10293  0036B8  0012               	return	
 10294  0036BA                     l1264:
 10295                           
 10296                           ;usb_device.c: 2561: else
 10297                           ;usb_device.c: 2562: {
 10298                           ;usb_device.c: 2565: controlTransferState = 0;
 10299  0036BA  0E00               	movlw	0
 10300  0036BC  0100               	movlb	0	; () banked
 10301  0036BE  6FC8               	movwf	_controlTransferState& (0+255),b
 10302                           
 10303                           ;usb_device.c: 2572: if(BothEP0OutUOWNsSet == 0)
 10304  0036C0  51C4               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 10305  0036C2  A4D8               	btfss	status,2,c
 10306  0036C4  D01F               	goto	l1266
 10307                           
 10308                           ; BSR set to: 0
 10309                           ;usb_device.c: 2573: {
 10310                           ;usb_device.c: 2574: pBDTEntryEP0OutNext->CNT = 8;
 10311  0036C6  EE20 F001          	lfsr	2,1
 10312  0036CA  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10313  0036CC  26D9               	addwf	fsr2l,f,c
 10314  0036CE  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10315  0036D0  22DA               	addwfc	fsr2h,f,c
 10316  0036D2  0E08               	movlw	8
 10317  0036D4  6EDF               	movwf	indf2,c
 10318                           
 10319                           ;usb_device.c: 2575: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10320  0036D6  EE20 F002          	lfsr	2,2
 10321  0036DA  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10322  0036DC  26D9               	addwf	fsr2l,f,c
 10323  0036DE  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10324  0036E0  22DA               	addwfc	fsr2h,f,c
 10325  0036E2  0E30               	movlw	48
 10326  0036E4  6EDE               	movwf	postinc2,c
 10327  0036E6  0E04               	movlw	4
 10328  0036E8  6EDD               	movwf	postdec2,c
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;usb_device.c: 2576: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 10332  0036EA  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10333  0036EE  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10334  0036F2  0E0C               	movlw	12
 10335  0036F4  6EDF               	movwf	indf2,c
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;usb_device.c: 2577: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10339  0036F6  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10340  0036FA  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10341  0036FE  0E00               	movlw	0
 10342  003700  8EDB               	bsf	plusw2,7,c
 10343                           
 10344                           ;usb_device.c: 2578: }
 10345  003702  0012               	return	
 10346  003704                     l1266:
 10347                           
 10348                           ; BSR set to: 0
 10349                           ;usb_device.c: 2579: else
 10350                           ;usb_device.c: 2580: {
 10351                           ;usb_device.c: 2581: BothEP0OutUOWNsSet = 0;
 10352                           
 10353                           ; BSR set to: 0
 10354  003704  0E00               	movlw	0
 10355  003706  6FC4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 10356                           
 10357                           ; BSR set to: 0
 10358  003708  0012               	return	
 10359  00370A                     __end_of_USBCtrlTrfOutHandler:
 10360                           	opt stack 0
 10361                           tosu	equ	0xFFF
 10362                           tosh	equ	0xFFE
 10363                           tosl	equ	0xFFD
 10364                           pclath	equ	0xFFA
 10365                           tblptru	equ	0xFF8
 10366                           tblptrh	equ	0xFF7
 10367                           tblptrl	equ	0xFF6
 10368                           tablat	equ	0xFF5
 10369                           prodh	equ	0xFF4
 10370                           prodl	equ	0xFF3
 10371                           intcon	equ	0xFF2
 10372                           intcon2	equ	0xFF1
 10373                           intcon3	equ	0xFF0
 10374                           indf0	equ	0xFEF
 10375                           postinc0	equ	0xFEE
 10376                           plusw0	equ	0xFEB
 10377                           fsr0h	equ	0xFEA
 10378                           fsr0l	equ	0xFE9
 10379                           wreg	equ	0xFE8
 10380                           postinc1	equ	0xFE6
 10381                           postdec1	equ	0xFE5
 10382                           fsr1h	equ	0xFE2
 10383                           fsr1l	equ	0xFE1
 10384                           indf2	equ	0xFDF
 10385                           postinc2	equ	0xFDE
 10386                           postdec2	equ	0xFDD
 10387                           plusw2	equ	0xFDB
 10388                           fsr2h	equ	0xFDA
 10389                           fsr2l	equ	0xFD9
 10390                           status	equ	0xFD8
 10391                           
 10392 ;; *************** function _USBCtrlTrfRxService *****************
 10393 ;; Defined at:
 10394 ;;		line 1870 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10395 ;; Parameters:    Size  Location     Type
 10396 ;;		None
 10397 ;; Auto vars:     Size  Location     Type
 10398 ;;  byteToRead      1   22[BANK0 ] unsigned char 
 10399 ;;  i               1   21[BANK0 ] unsigned char 
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  1    wreg      void 
 10402 ;; Registers used:
 10403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/0
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10410 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10412 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10413 ;;Total ram usage:        2 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:   10
 10416 ;; This function calls:
 10417 ;;		_USBCtrlEPAllowStatusStage
 10418 ;; This function is called by:
 10419 ;;		_USBCtrlTrfOutHandler
 10420 ;; This function uses a non-reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text47
 10424  001A04                     __ptext47:
 10425                           	opt stack 0
 10426  001A04                     _USBCtrlTrfRxService:
 10427                           	opt stack 14
 10428                           
 10429                           ;usb_device.c: 1872: uint8_t byteToRead;
 10430                           ;usb_device.c: 1873: uint8_t i;
 10431                           ;usb_device.c: 1877: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 10432                           
 10433                           ;incstack = 0
 10434  001A04  0100               	movlb	0	; () banked
 10435  001A06  EE20 F001          	lfsr	2,1
 10436  001A0A  51B6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 10437  001A0C  26D9               	addwf	fsr2l,f,c
 10438  001A0E  51B7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 10439  001A10  22DA               	addwfc	fsr2h,f,c
 10440  001A12  50DF               	movf	indf2,w,c
 10441  001A14  6F76               	movwf	USBCtrlTrfRxService@byteToRead& (0+255),b
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;usb_device.c: 1883: if(byteToRead > outPipes[0].wCount.Val)
 10445  001A16  5176               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10446  001A18  5C05               	subwf	_outPipes+4,w,c
 10447  001A1A  0E00               	movlw	0
 10448  001A1C  5806               	subwfb	_outPipes+5,w,c
 10449  001A1E  A0D8               	btfss	status,0,c
 10450                           
 10451                           ; BSR set to: 0
 10452                           ;usb_device.c: 1884: {
 10453                           ;usb_device.c: 1885: byteToRead = outPipes[0].wCount.Val;
 10454  001A20  C005  F076         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;usb_device.c: 1886: }
 10458                           ;usb_device.c: 1888: outPipes[0].wCount.Val -= byteToRead;
 10459                           
 10460                           ; BSR set to: 0
 10461  001A24  5176               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10462  001A26  5E05               	subwf	_outPipes+4,f,c
 10463  001A28  0E00               	movlw	0
 10464  001A2A  5A06               	subwfb	_outPipes+5,f,c
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;usb_device.c: 1892: for(i=0;i<byteToRead;i++)
 10468  001A2C  0E00               	movlw	0
 10469  001A2E  6F75               	movwf	USBCtrlTrfRxService@i& (0+255),b
 10470  001A30  D011               	goto	l1192
 10471  001A32                     
 10472                           ; BSR set to: 0
 10473                           ;usb_device.c: 1893: {
 10474                           ;usb_device.c: 1894: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 10475                           
 10476                           ; BSR set to: 0
 10477  001A32  5175               	movf	USBCtrlTrfRxService@i& (0+255),w,b
 10478  001A34  0D01               	mullw	1
 10479  001A36  0E38               	movlw	56
 10480  001A38  24F3               	addwf	prodl,w,c
 10481  001A3A  6ED9               	movwf	fsr2l,c
 10482  001A3C  0E04               	movlw	4
 10483  001A3E  20F4               	addwfc	prodh,w,c
 10484  001A40  6EDA               	movwf	fsr2h,c
 10485  001A42  C001  FFE1         	movff	_outPipes,fsr1l
 10486  001A46  C002  FFE2         	movff	_outPipes+1,fsr1h
 10487  001A4A  CFDF FFE7          	movff	indf2,indf1
 10488                           
 10489                           ; BSR set to: 0
 10490  001A4E  4A01               	infsnz	_outPipes,f,c
 10491  001A50  2A02               	incf	_outPipes+1,f,c
 10492                           
 10493                           ; BSR set to: 0
 10494  001A52  2B75               	incf	USBCtrlTrfRxService@i& (0+255),f,b
 10495  001A54                     l1192:
 10496                           
 10497                           ; BSR set to: 0
 10498                           
 10499                           ; BSR set to: 0
 10500  001A54  5176               	movf	USBCtrlTrfRxService@byteToRead& (0+255),w,b
 10501  001A56  5D75               	subwf	USBCtrlTrfRxService@i& (0+255),w,b
 10502  001A58  A0D8               	btfss	status,0,c
 10503  001A5A  D7EB               	goto	l1193
 10504                           
 10505                           ; BSR set to: 0
 10506                           ;usb_device.c: 1895: }
 10507                           ;usb_device.c: 1899: if(outPipes[0].wCount.Val > 0)
 10508                           
 10509                           ; BSR set to: 0
 10510  001A5C  5005               	movf	_outPipes+4,w,c
 10511  001A5E  1006               	iorwf	_outPipes+5,w,c
 10512  001A60  B4D8               	btfsc	status,2,c
 10513  001A62  D032               	goto	l1195
 10514                           
 10515                           ; BSR set to: 0
 10516                           ;usb_device.c: 1900: {
 10517                           ;usb_device.c: 1901: pBDTEntryEP0OutNext->CNT = 8;
 10518  001A64  EE20 F001          	lfsr	2,1
 10519  001A68  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10520  001A6A  26D9               	addwf	fsr2l,f,c
 10521  001A6C  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10522  001A6E  22DA               	addwfc	fsr2h,f,c
 10523  001A70  0E08               	movlw	8
 10524  001A72  6EDF               	movwf	indf2,c
 10525                           
 10526                           ;usb_device.c: 1902: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 10527  001A74  EE20 F002          	lfsr	2,2
 10528  001A78  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10529  001A7A  26D9               	addwf	fsr2l,f,c
 10530  001A7C  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10531  001A7E  22DA               	addwfc	fsr2h,f,c
 10532  001A80  0E38               	movlw	56
 10533  001A82  6EDE               	movwf	postinc2,c
 10534  001A84  0E04               	movlw	4
 10535  001A86  6EDD               	movwf	postdec2,c
 10536                           
 10537                           ; BSR set to: 0
 10538                           ;usb_device.c: 1903: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 10539  001A88  C0B6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10540  001A8C  C0B7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10541  001A90  BCDF               	btfsc	indf2,6,c
 10542  001A92  D00D               	goto	l1196
 10543                           
 10544                           ; BSR set to: 0
 10545                           ;usb_device.c: 1904: {
 10546                           ;usb_device.c: 1905: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 10547  001A94  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10548  001A98  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10549  001A9C  0E48               	movlw	72
 10550  001A9E  6EDF               	movwf	indf2,c
 10551                           
 10552                           ; BSR set to: 0
 10553                           ;usb_device.c: 1906: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10554  001AA0  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10555  001AA4  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10556  001AA8  0E00               	movlw	0
 10557  001AAA  8EDB               	bsf	plusw2,7,c
 10558                           
 10559                           ;usb_device.c: 1907: }
 10560  001AAC  0012               	return	
 10561  001AAE                     l1196:
 10562                           
 10563                           ; BSR set to: 0
 10564                           ;usb_device.c: 1908: else
 10565                           ;usb_device.c: 1909: {
 10566                           ;usb_device.c: 1910: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08);
 10567                           
 10568                           ; BSR set to: 0
 10569  001AAE  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10570  001AB2  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10571  001AB6  0E08               	movlw	8
 10572  001AB8  6EDF               	movwf	indf2,c
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;usb_device.c: 1911: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10576  001ABA  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10577  001ABE  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10578  001AC2  0E00               	movlw	0
 10579  001AC4  8EDB               	bsf	plusw2,7,c
 10580                           
 10581                           ; BSR set to: 0
 10582                           ;usb_device.c: 1912: }
 10583                           ;usb_device.c: 1913: }
 10584  001AC6  0012               	return	
 10585  001AC8                     l1195:
 10586                           
 10587                           ; BSR set to: 0
 10588                           ;usb_device.c: 1914: else
 10589                           ;usb_device.c: 1915: {
 10590                           ;usb_device.c: 1919: pBDTEntryEP0OutNext->CNT = 8;
 10591                           
 10592                           ; BSR set to: 0
 10593  001AC8  EE20 F001          	lfsr	2,1
 10594  001ACC  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10595  001ACE  26D9               	addwf	fsr2l,f,c
 10596  001AD0  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10597  001AD2  22DA               	addwfc	fsr2h,f,c
 10598  001AD4  0E08               	movlw	8
 10599  001AD6  6EDF               	movwf	indf2,c
 10600                           
 10601                           ;usb_device.c: 1920: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10602  001AD8  EE20 F002          	lfsr	2,2
 10603  001ADC  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10604  001ADE  26D9               	addwf	fsr2l,f,c
 10605  001AE0  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10606  001AE2  22DA               	addwfc	fsr2h,f,c
 10607  001AE4  0E30               	movlw	48
 10608  001AE6  6EDE               	movwf	postinc2,c
 10609  001AE8  0E04               	movlw	4
 10610  001AEA  6EDD               	movwf	postdec2,c
 10611                           
 10612                           ; BSR set to: 0
 10613                           ;usb_device.c: 1924: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 10614  001AEC  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10615  001AF0  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10616  001AF4  0E04               	movlw	4
 10617  001AF6  6EDF               	movwf	indf2,c
 10618                           
 10619                           ; BSR set to: 0
 10620                           ;usb_device.c: 1925: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 10621  001AF8  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10622  001AFC  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10623  001B00  0E00               	movlw	0
 10624  001B02  8EDB               	bsf	plusw2,7,c
 10625                           
 10626                           ; BSR set to: 0
 10627                           ;usb_device.c: 1944: }
 10628                           ;usb_device.c: 1945: outPipes[0].info.bits.busy = 0;
 10629                           
 10630                           ; BSR set to: 0
 10631  001B04  9E04               	bcf	_outPipes+3,7,c
 10632                           
 10633                           ; BSR set to: 0
 10634                           ;usb_device.c: 1959: if(USBDeferStatusStagePacket == 0)
 10635  001B06  51C2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 10636  001B08  A4D8               	btfss	status,2,c
 10637  001B0A  0012               	return	
 10638                           
 10639                           ; BSR set to: 0
 10640                           ;usb_device.c: 1960: {
 10641                           ;usb_device.c: 1961: USBCtrlEPAllowStatusStage();
 10642  001B0C  EC77  F013         	call	_USBCtrlEPAllowStatusStage	;wreg free
 10643  001B10  0012               	return	
 10644  001B12                     __end_of_USBCtrlTrfRxService:
 10645                           	opt stack 0
 10646                           tosu	equ	0xFFF
 10647                           tosh	equ	0xFFE
 10648                           tosl	equ	0xFFD
 10649                           pclath	equ	0xFFA
 10650                           tblptru	equ	0xFF8
 10651                           tblptrh	equ	0xFF7
 10652                           tblptrl	equ	0xFF6
 10653                           tablat	equ	0xFF5
 10654                           prodh	equ	0xFF4
 10655                           prodl	equ	0xFF3
 10656                           intcon	equ	0xFF2
 10657                           intcon2	equ	0xFF1
 10658                           intcon3	equ	0xFF0
 10659                           indf0	equ	0xFEF
 10660                           postinc0	equ	0xFEE
 10661                           plusw0	equ	0xFEB
 10662                           fsr0h	equ	0xFEA
 10663                           fsr0l	equ	0xFE9
 10664                           wreg	equ	0xFE8
 10665                           indf1	equ	0xFE7
 10666                           postinc1	equ	0xFE6
 10667                           postdec1	equ	0xFE5
 10668                           fsr1h	equ	0xFE2
 10669                           fsr1l	equ	0xFE1
 10670                           indf2	equ	0xFDF
 10671                           postinc2	equ	0xFDE
 10672                           postdec2	equ	0xFDD
 10673                           plusw2	equ	0xFDB
 10674                           fsr2h	equ	0xFDA
 10675                           fsr2l	equ	0xFD9
 10676                           status	equ	0xFD8
 10677                           
 10678 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 10679 ;; Defined at:
 10680 ;;		line 1434 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10681 ;; Parameters:    Size  Location     Type
 10682 ;;		None
 10683 ;; Auto vars:     Size  Location     Type
 10684 ;;		None
 10685 ;; Return value:  Size  Location     Type
 10686 ;;                  1    wreg      void 
 10687 ;; Registers used:
 10688 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10689 ;; Tracked objects:
 10690 ;;		On entry : 0/0
 10691 ;;		On exit  : 0/0
 10692 ;;		Unchanged: 0/0
 10693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10698 ;;Total ram usage:        0 bytes
 10699 ;; Hardware stack levels used:    1
 10700 ;; Hardware stack levels required when called:    9
 10701 ;; This function calls:
 10702 ;;		Nothing
 10703 ;; This function is called by:
 10704 ;;		_USBDeviceTasks
 10705 ;;		_USBCtrlEPServiceComplete
 10706 ;;		_USBCtrlTrfRxService
 10707 ;; This function uses a non-reentrant model
 10708 ;;
 10709                           
 10710                           	psect	text48
 10711  0026EE                     __ptext48:
 10712                           	opt stack 0
 10713  0026EE                     _USBCtrlEPAllowStatusStage:
 10714                           	opt stack 14
 10715                           
 10716                           ;usb_device.c: 1441: if(USBStatusStageEnabledFlag1 == 0)
 10717                           
 10718                           ;incstack = 0
 10719  0026EE  0100               	movlb	0	; () banked
 10720  0026F0  51C1               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 10721  0026F2  A4D8               	btfss	status,2,c
 10722  0026F4  0012               	return	
 10723                           
 10724                           ; BSR set to: 0
 10725                           ;usb_device.c: 1442: {
 10726                           ;usb_device.c: 1443: USBStatusStageEnabledFlag1 = 1;
 10727  0026F6  0E01               	movlw	1
 10728  0026F8  6FC1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 10729                           
 10730                           ;usb_device.c: 1444: if(USBStatusStageEnabledFlag2 == 0)
 10731  0026FA  51C0               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 10732  0026FC  A4D8               	btfss	status,2,c
 10733  0026FE  0012               	return	
 10734                           
 10735                           ; BSR set to: 0
 10736                           ;usb_device.c: 1445: {
 10737                           ;usb_device.c: 1446: USBStatusStageEnabledFlag2 = 1;
 10738  002700  0E01               	movlw	1
 10739  002702  6FC0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 10740                           
 10741                           ; BSR set to: 0
 10742                           ;usb_device.c: 1450: if(controlTransferState == 2)
 10743  002704  0E02               	movlw	2
 10744  002706  19C8               	xorwf	_controlTransferState& (0+255),w,b
 10745  002708  A4D8               	btfss	status,2,c
 10746  00270A  D015               	goto	l1146
 10747                           
 10748                           ; BSR set to: 0
 10749                           ;usb_device.c: 1451: {
 10750                           ;usb_device.c: 1452: pBDTEntryIn[0]->CNT = 0;
 10751  00270C  EE20 F001          	lfsr	2,1
 10752  002710  51AC               	movf	_pBDTEntryIn& (0+255),w,b
 10753  002712  26D9               	addwf	fsr2l,f,c
 10754  002714  51AD               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 10755  002716  22DA               	addwfc	fsr2h,f,c
 10756  002718  0E00               	movlw	0
 10757  00271A  6EDF               	movwf	indf2,c
 10758                           
 10759                           ; BSR set to: 0
 10760                           ;usb_device.c: 1453: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 10761  00271C  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
 10762  002720  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10763  002724  0E48               	movlw	72
 10764  002726  6EDF               	movwf	indf2,c
 10765                           
 10766                           ; BSR set to: 0
 10767                           ;usb_device.c: 1454: pBDTEntryIn[0]->STAT.Val |= 0x80;
 10768  002728  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
 10769  00272C  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10770  002730  0E00               	movlw	0
 10771  002732  8EDB               	bsf	plusw2,7,c
 10772                           
 10773                           ;usb_device.c: 1455: }
 10774  002734  0012               	return	
 10775  002736                     l1146:
 10776                           
 10777                           ; BSR set to: 0
 10778                           ;usb_device.c: 1456: else if(controlTransferState == 1)
 10779                           
 10780                           ; BSR set to: 0
 10781  002736  05C8               	decf	_controlTransferState& (0+255),w,b
 10782  002738  A4D8               	btfss	status,2,c
 10783  00273A  0012               	return	
 10784                           
 10785                           ; BSR set to: 0
 10786                           ;usb_device.c: 1457: {
 10787                           ;usb_device.c: 1458: BothEP0OutUOWNsSet = 0;
 10788  00273C  0E00               	movlw	0
 10789  00273E  6FC4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 10790                           
 10791                           ; BSR set to: 0
 10792                           ;usb_device.c: 1463: pBDTEntryEP0OutCurrent->CNT = 8;
 10793  002740  EE20 F001          	lfsr	2,1
 10794  002744  51B6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 10795  002746  26D9               	addwf	fsr2l,f,c
 10796  002748  51B7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 10797  00274A  22DA               	addwfc	fsr2h,f,c
 10798  00274C  0E08               	movlw	8
 10799  00274E  6EDF               	movwf	indf2,c
 10800                           
 10801                           ; BSR set to: 0
 10802                           ;usb_device.c: 1464: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 10803  002750  EE20 F002          	lfsr	2,2
 10804  002754  51B6               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 10805  002756  26D9               	addwf	fsr2l,f,c
 10806  002758  51B7               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 10807  00275A  22DA               	addwfc	fsr2h,f,c
 10808  00275C  0E30               	movlw	48
 10809  00275E  6EDE               	movwf	postinc2,c
 10810  002760  0E04               	movlw	4
 10811  002762  6EDD               	movwf	postdec2,c
 10812                           
 10813                           ; BSR set to: 0
 10814                           ;usb_device.c: 1465: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 10815  002764  C0B6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10816  002768  C0B7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10817  00276C  0E04               	movlw	4
 10818  00276E  6EDF               	movwf	indf2,c
 10819                           
 10820                           ; BSR set to: 0
 10821                           ;usb_device.c: 1466: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 10822  002770  C0B6  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 10823  002774  C0B7  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 10824  002778  0E00               	movlw	0
 10825  00277A  8EDB               	bsf	plusw2,7,c
 10826                           
 10827                           ; BSR set to: 0
 10828                           ;usb_device.c: 1467: BothEP0OutUOWNsSet = 1;
 10829  00277C  0E01               	movlw	1
 10830  00277E  6FC4               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 10831                           
 10832                           ; BSR set to: 0
 10833                           ;usb_device.c: 1471: pBDTEntryEP0OutNext->CNT = 8;
 10834  002780  EE20 F001          	lfsr	2,1
 10835  002784  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10836  002786  26D9               	addwf	fsr2l,f,c
 10837  002788  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10838  00278A  22DA               	addwfc	fsr2h,f,c
 10839  00278C  0E08               	movlw	8
 10840  00278E  6EDF               	movwf	indf2,c
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;usb_device.c: 1472: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 10844  002790  EE20 F002          	lfsr	2,2
 10845  002794  51B4               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 10846  002796  26D9               	addwf	fsr2l,f,c
 10847  002798  51B5               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 10848  00279A  22DA               	addwfc	fsr2h,f,c
 10849  00279C  0E30               	movlw	48
 10850  00279E  6EDE               	movwf	postinc2,c
 10851  0027A0  0E04               	movlw	4
 10852  0027A2  6EDD               	movwf	postdec2,c
 10853                           
 10854                           ; BSR set to: 0
 10855                           ;usb_device.c: 1473: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 10856  0027A4  C0B4  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 10857  0027A8  C0B5  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 10858  0027AC  0E80               	movlw	128
 10859  0027AE  6EDF               	movwf	indf2,c
 10860                           
 10861                           ; BSR set to: 0
 10862                           
 10863                           ; BSR set to: 0
 10864                           
 10865                           ; BSR set to: 0
 10866  0027B0  0012               	return	
 10867  0027B2                     __end_of_USBCtrlEPAllowStatusStage:
 10868                           	opt stack 0
 10869                           tosu	equ	0xFFF
 10870                           tosh	equ	0xFFE
 10871                           tosl	equ	0xFFD
 10872                           pclath	equ	0xFFA
 10873                           tblptru	equ	0xFF8
 10874                           tblptrh	equ	0xFF7
 10875                           tblptrl	equ	0xFF6
 10876                           tablat	equ	0xFF5
 10877                           prodh	equ	0xFF4
 10878                           prodl	equ	0xFF3
 10879                           intcon	equ	0xFF2
 10880                           intcon2	equ	0xFF1
 10881                           intcon3	equ	0xFF0
 10882                           indf0	equ	0xFEF
 10883                           postinc0	equ	0xFEE
 10884                           plusw0	equ	0xFEB
 10885                           fsr0h	equ	0xFEA
 10886                           fsr0l	equ	0xFE9
 10887                           wreg	equ	0xFE8
 10888                           indf1	equ	0xFE7
 10889                           postinc1	equ	0xFE6
 10890                           postdec1	equ	0xFE5
 10891                           fsr1h	equ	0xFE2
 10892                           fsr1l	equ	0xFE1
 10893                           indf2	equ	0xFDF
 10894                           postinc2	equ	0xFDE
 10895                           postdec2	equ	0xFDD
 10896                           plusw2	equ	0xFDB
 10897                           fsr2h	equ	0xFDA
 10898                           fsr2l	equ	0xFD9
 10899                           status	equ	0xFD8
 10900                           
 10901 ;; *************** function _USBCtrlTrfInHandler *****************
 10902 ;; Defined at:
 10903 ;;		line 2609 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 10904 ;; Parameters:    Size  Location     Type
 10905 ;;		None
 10906 ;; Auto vars:     Size  Location     Type
 10907 ;;  lastDTS         1   22[BANK0 ] unsigned char 
 10908 ;; Return value:  Size  Location     Type
 10909 ;;                  1    wreg      void 
 10910 ;; Registers used:
 10911 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10912 ;; Tracked objects:
 10913 ;;		On entry : 0/0
 10914 ;;		On exit  : 0/0
 10915 ;;		Unchanged: 0/0
 10916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10918 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10920 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10921 ;;Total ram usage:        1 bytes
 10922 ;; Hardware stack levels used:    1
 10923 ;; Hardware stack levels required when called:   10
 10924 ;; This function calls:
 10925 ;;		_USBCtrlTrfTxService
 10926 ;; This function is called by:
 10927 ;;		_USBCtrlEPService
 10928 ;; This function uses a non-reentrant model
 10929 ;;
 10930                           
 10931                           	psect	text49
 10932  0027B2                     __ptext49:
 10933                           	opt stack 0
 10934  0027B2                     _USBCtrlTrfInHandler:
 10935                           	opt stack 15
 10936                           
 10937                           ;usb_device.c: 2611: uint8_t lastDTS;
 10938                           ;usb_device.c: 2613: lastDTS = pBDTEntryIn[0]->STAT.DTS;
 10939                           
 10940                           ; BSR set to: 0
 10941                           ;incstack = 0
 10942  0027B2  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
 10943  0027B6  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 10944  0027BA  0100               	movlb	0	; () banked
 10945  0027BC  0E00               	movlw	0
 10946  0027BE  BCDF               	btfsc	indf2,6,c
 10947  0027C0  0E01               	movlw	1
 10948  0027C2  6F76               	movwf	USBCtrlTrfInHandler@lastDTS& (0+255),b
 10949                           
 10950                           ; BSR set to: 0
 10951                           ;usb_device.c: 2616: ((uint8_t_VAL*)&pBDTEntryIn[0])->Val ^= 0x0004;
 10952  0027C4  0E04               	movlw	4
 10953  0027C6  1BAC               	xorwf	_pBDTEntryIn& (0+255),f,b
 10954                           
 10955                           ; BSR set to: 0
 10956                           ;usb_device.c: 2621: if(USBDeviceState == ADR_PENDING_STATE)
 10957  0027C8  0E08               	movlw	8
 10958  0027CA  19CA               	xorwf	_USBDeviceState& (0+255),w,b
 10959  0027CC  A4D8               	btfss	status,2,c
 10960  0027CE  D00D               	goto	l1273
 10961                           
 10962                           ; BSR set to: 0
 10963                           ;usb_device.c: 2622: {
 10964                           ;usb_device.c: 2623: UADDR = (SetupPkt.bDevADR & 0x7F);
 10965  0027D0  0104               	movlb	4	; () banked
 10966  0027D2  5132               	movf	50,w,b	;volatile
 10967  0027D4  0B7F               	andlw	127
 10968  0027D6  010F               	movlb	15	; () banked
 10969  0027D8  6F38               	movwf	56,b	;volatile
 10970                           
 10971                           ; BSR set to: 15
 10972                           ;usb_device.c: 2624: if(UADDR != 0u)
 10973  0027DA  5138               	movf	56,w,b	;volatile
 10974  0027DC  B4D8               	btfsc	status,2,c
 10975  0027DE  D002               	goto	l1272
 10976                           
 10977                           ; BSR set to: 15
 10978                           ;usb_device.c: 2625: {
 10979                           ;usb_device.c: 2626: USBDeviceState=ADDRESS_STATE;
 10980  0027E0  0E10               	movlw	16
 10981  0027E2  D001               	goto	L11
 10982  0027E4                     l1272:
 10983                           
 10984                           ;usb_device.c: 2628: else
 10985                           ;usb_device.c: 2629: {
 10986                           ;usb_device.c: 2630: USBDeviceState=DEFAULT_STATE;
 10987                           
 10988                           ; BSR set to: 0
 10989  0027E4  0E04               	movlw	4
 10990  0027E6                     L11:
 10991  0027E6  0100               	movlb	0	; () banked
 10992  0027E8  6FCA               	movwf	_USBDeviceState& (0+255),b
 10993  0027EA                     l1273:
 10994                           
 10995                           ; BSR set to: 0
 10996                           ;usb_device.c: 2631: }
 10997                           ;usb_device.c: 2632: }
 10998                           ;usb_device.c: 2635: if(controlTransferState == 1)
 10999                           
 11000                           ; BSR set to: 0
 11001                           
 11002                           ; BSR set to: 0
 11003  0027EA  05C8               	decf	_controlTransferState& (0+255),w,b
 11004  0027EC  A4D8               	btfss	status,2,c
 11005  0027EE  D03B               	goto	l1274
 11006                           
 11007                           ; BSR set to: 0
 11008                           ;usb_device.c: 2636: {
 11009                           ;usb_device.c: 2637: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData));
 11010  0027F0  EE20 F002          	lfsr	2,2
 11011  0027F4  51AC               	movf	_pBDTEntryIn& (0+255),w,b
 11012  0027F6  26D9               	addwf	fsr2l,f,c
 11013  0027F8  51AD               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 11014  0027FA  22DA               	addwfc	fsr2h,f,c
 11015  0027FC  0E38               	movlw	56
 11016  0027FE  6EDE               	movwf	postinc2,c
 11017  002800  0E04               	movlw	4
 11018  002802  6EDD               	movwf	postdec2,c
 11019                           
 11020                           ; BSR set to: 0
 11021                           ;usb_device.c: 2638: USBCtrlTrfTxService();
 11022  002804  EC82  F011         	call	_USBCtrlTrfTxService	;wreg free
 11023                           
 11024                           ;usb_device.c: 2644: if(shortPacketStatus == 2)
 11025  002808  0E02               	movlw	2
 11026  00280A  0100               	movlb	0	; () banked
 11027  00280C  19C9               	xorwf	_shortPacketStatus& (0+255),w,b
 11028  00280E  A4D8               	btfss	status,2,c
 11029  002810  D00D               	goto	l1275
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;usb_device.c: 2645: {
 11033                           ;usb_device.c: 2648: pBDTEntryIn[0]->STAT.Val = 0x04;
 11034  002812  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
 11035  002816  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11036  00281A  0E04               	movlw	4
 11037  00281C  6EDF               	movwf	indf2,c
 11038                           
 11039                           ; BSR set to: 0
 11040                           ;usb_device.c: 2649: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11041  00281E  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
 11042  002822  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11043  002826  0E00               	movlw	0
 11044  002828  8EDB               	bsf	plusw2,7,c
 11045                           
 11046                           ;usb_device.c: 2650: }
 11047  00282A  0012               	return	
 11048  00282C                     l1275:
 11049                           
 11050                           ; BSR set to: 0
 11051                           ;usb_device.c: 2651: else
 11052                           ;usb_device.c: 2652: {
 11053                           ;usb_device.c: 2653: if(lastDTS == 0)
 11054                           
 11055                           ; BSR set to: 0
 11056  00282C  5176               	movf	USBCtrlTrfInHandler@lastDTS& (0+255),w,b
 11057  00282E  A4D8               	btfss	status,2,c
 11058  002830  D00D               	goto	l1277
 11059                           
 11060                           ; BSR set to: 0
 11061                           ;usb_device.c: 2654: {
 11062                           ;usb_device.c: 2655: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 11063  002832  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
 11064  002836  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11065  00283A  0E48               	movlw	72
 11066  00283C  6EDF               	movwf	indf2,c
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;usb_device.c: 2656: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11070  00283E  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
 11071  002842  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11072  002846  0E00               	movlw	0
 11073  002848  8EDB               	bsf	plusw2,7,c
 11074                           
 11075                           ;usb_device.c: 2657: }
 11076  00284A  0012               	return	
 11077  00284C                     l1277:
 11078                           
 11079                           ; BSR set to: 0
 11080                           ;usb_device.c: 2658: else
 11081                           ;usb_device.c: 2659: {
 11082                           ;usb_device.c: 2660: pBDTEntryIn[0]->STAT.Val = 0x00|(0x08 & 0x08);
 11083                           
 11084                           ; BSR set to: 0
 11085  00284C  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
 11086  002850  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11087  002854  0E08               	movlw	8
 11088  002856  6EDF               	movwf	indf2,c
 11089                           
 11090                           ; BSR set to: 0
 11091                           ;usb_device.c: 2661: pBDTEntryIn[0]->STAT.Val |= 0x80;
 11092  002858  C0AC  FFD9         	movff	_pBDTEntryIn,fsr2l
 11093  00285C  C0AD  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11094  002860  0E00               	movlw	0
 11095  002862  8EDB               	bsf	plusw2,7,c
 11096                           
 11097                           ; BSR set to: 0
 11098                           ;usb_device.c: 2662: }
 11099                           ;usb_device.c: 2663: }
 11100                           ;usb_device.c: 2664: }
 11101                           
 11102                           ; BSR set to: 0
 11103  002864  0012               	return	
 11104  002866                     l1274:
 11105                           
 11106                           ; BSR set to: 0
 11107                           ;usb_device.c: 2665: else
 11108                           ;usb_device.c: 2666: {
 11109                           ;usb_device.c: 2670: if(outPipes[0].info.bits.busy == 1)
 11110  002866  BE04               	btfsc	_outPipes+3,7,c
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;usb_device.c: 2675: }
 11114                           ;usb_device.c: 2676: outPipes[0].info.bits.busy = 0;
 11115                           
 11116                           ; BSR set to: 0
 11117  002868  9E04               	bcf	_outPipes+3,7,c
 11118                           
 11119                           ; BSR set to: 0
 11120                           ;usb_device.c: 2677: }
 11121                           ;usb_device.c: 2679: controlTransferState = 0;
 11122                           
 11123                           ; BSR set to: 0
 11124  00286A  0E00               	movlw	0
 11125  00286C  6FC8               	movwf	_controlTransferState& (0+255),b
 11126  00286E  0012               	return	
 11127  002870                     __end_of_USBCtrlTrfInHandler:
 11128                           	opt stack 0
 11129                           tosu	equ	0xFFF
 11130                           tosh	equ	0xFFE
 11131                           tosl	equ	0xFFD
 11132                           pclath	equ	0xFFA
 11133                           tblptru	equ	0xFF8
 11134                           tblptrh	equ	0xFF7
 11135                           tblptrl	equ	0xFF6
 11136                           tablat	equ	0xFF5
 11137                           prodh	equ	0xFF4
 11138                           prodl	equ	0xFF3
 11139                           intcon	equ	0xFF2
 11140                           intcon2	equ	0xFF1
 11141                           intcon3	equ	0xFF0
 11142                           indf0	equ	0xFEF
 11143                           postinc0	equ	0xFEE
 11144                           plusw0	equ	0xFEB
 11145                           fsr0h	equ	0xFEA
 11146                           fsr0l	equ	0xFE9
 11147                           wreg	equ	0xFE8
 11148                           indf1	equ	0xFE7
 11149                           postinc1	equ	0xFE6
 11150                           postdec1	equ	0xFE5
 11151                           fsr1h	equ	0xFE2
 11152                           fsr1l	equ	0xFE1
 11153                           indf2	equ	0xFDF
 11154                           postinc2	equ	0xFDE
 11155                           postdec2	equ	0xFDD
 11156                           plusw2	equ	0xFDB
 11157                           fsr2h	equ	0xFDA
 11158                           fsr2l	equ	0xFD9
 11159                           status	equ	0xFD8
 11160                           
 11161 ;; *************** function _USBCtrlTrfTxService *****************
 11162 ;; Defined at:
 11163 ;;		line 1789 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 11164 ;; Parameters:    Size  Location     Type
 11165 ;;		None
 11166 ;; Auto vars:     Size  Location     Type
 11167 ;;  byteToSend      1   21[BANK0 ] unsigned char 
 11168 ;; Return value:  Size  Location     Type
 11169 ;;                  1    wreg      void 
 11170 ;; Registers used:
 11171 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11172 ;; Tracked objects:
 11173 ;;		On entry : 0/0
 11174 ;;		On exit  : 0/0
 11175 ;;		Unchanged: 0/0
 11176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11180 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11181 ;;Total ram usage:        1 bytes
 11182 ;; Hardware stack levels used:    1
 11183 ;; Hardware stack levels required when called:    9
 11184 ;; This function calls:
 11185 ;;		Nothing
 11186 ;; This function is called by:
 11187 ;;		_USBCtrlEPAllowDataStage
 11188 ;;		_USBCtrlTrfInHandler
 11189 ;; This function uses a non-reentrant model
 11190 ;;
 11191                           
 11192                           	psect	text50
 11193  002304                     __ptext50:
 11194                           	opt stack 0
 11195  002304                     _USBCtrlTrfTxService:
 11196                           	opt stack 13
 11197                           
 11198                           ;usb_device.c: 1791: uint8_t byteToSend;
 11199                           ;usb_device.c: 1795: byteToSend = 8;
 11200                           
 11201                           ; BSR set to: 0
 11202                           ;incstack = 0
 11203  002304  0E08               	movlw	8
 11204  002306  0100               	movlb	0	; () banked
 11205  002308  6F75               	movwf	USBCtrlTrfTxService@byteToSend& (0+255),b
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;usb_device.c: 1796: if(inPipes[0].wCount.Val < (uint8_t)8)
 11209  00230A  51AB               	movf	(_inPipes+5)& (0+255),w,b
 11210  00230C  E110               	bnz	l6093
 11211  00230E  0E08               	movlw	8
 11212  002310  5DAA               	subwf	(_inPipes+4)& (0+255),w,b
 11213  002312  B0D8               	btfsc	status,0,c
 11214  002314  D00C               	goto	l1179
 11215                           
 11216                           ; BSR set to: 0
 11217                           ;usb_device.c: 1797: {
 11218                           ;usb_device.c: 1798: byteToSend = inPipes[0].wCount.Val;
 11219  002316  C0AA  F075         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 11220                           
 11221                           ; BSR set to: 0
 11222                           ;usb_device.c: 1805: if(shortPacketStatus == 0)
 11223  00231A  51C9               	movf	_shortPacketStatus& (0+255),w,b
 11224  00231C  A4D8               	btfss	status,2,c
 11225  00231E  D002               	goto	l1177
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;usb_device.c: 1806: {
 11229                           ;usb_device.c: 1807: shortPacketStatus = 1;
 11230  002320  0E01               	movlw	1
 11231  002322  D004               	goto	L12
 11232  002324                     l1177:
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;usb_device.c: 1809: else if(shortPacketStatus == 1)
 11236                           
 11237                           ; BSR set to: 0
 11238  002324  05C9               	decf	_shortPacketStatus& (0+255),w,b
 11239  002326  A4D8               	btfss	status,2,c
 11240  002328  D002               	goto	l1179
 11241                           
 11242                           ; BSR set to: 0
 11243                           ;usb_device.c: 1810: {
 11244                           ;usb_device.c: 1811: shortPacketStatus = 2;
 11245  00232A  0E02               	movlw	2
 11246  00232C                     L12:
 11247  00232C  6FC9               	movwf	_shortPacketStatus& (0+255),b
 11248  00232E                     l1179:
 11249  00232E                     l6093:
 11250                           
 11251                           ; BSR set to: 0
 11252                           ;usb_device.c: 1812: }
 11253                           ;usb_device.c: 1813: }
 11254                           ;usb_device.c: 1817: inPipes[0].wCount.Val -= byteToSend;
 11255  00232E  5175               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11256  002330  5FAA               	subwf	(_inPipes+4)& (0+255),f,b
 11257  002332  0E00               	movlw	0
 11258  002334  5BAB               	subwfb	(_inPipes+5)& (0+255),f,b
 11259                           
 11260                           ; BSR set to: 0
 11261                           ;usb_device.c: 1822: pBDTEntryIn[0]->CNT = byteToSend;
 11262  002336  EE20 F001          	lfsr	2,1
 11263  00233A  51AC               	movf	_pBDTEntryIn& (0+255),w,b
 11264  00233C  26D9               	addwf	fsr2l,f,c
 11265  00233E  51AD               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 11266  002340  22DA               	addwfc	fsr2h,f,c
 11267  002342  C075  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 11268                           
 11269                           ; BSR set to: 0
 11270                           ;usb_device.c: 1826: pDst = ( uint8_t*)CtrlTrfData;
 11271  002346  0E38               	movlw	56
 11272  002348  6E17               	movwf	_pDst,c
 11273  00234A  0E04               	movlw	4
 11274  00234C  6E18               	movwf	_pDst+1,c
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;usb_device.c: 1827: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 11278  00234E  A1A9               	btfss	(_inPipes+3)& (0+255),0,b
 11279  002350  D01C               	goto	l1181
 11280  002352  D03A               	goto	l1185
 11281  002354                     
 11282                           ; BSR set to: 0
 11283                           ;usb_device.c: 1830: {
 11284                           ;usb_device.c: 1831: *pDst++ = *inPipes[0].pSrc.bRom++;
 11285                           
 11286                           ; BSR set to: 0
 11287  002354  C0A6  FFF6         	movff	_inPipes,tblptrl
 11288  002358  C0A7  FFF7         	movff	_inPipes+1,tblptrh
 11289  00235C  6AF8               	clrf	tblptru,c
 11290  00235E  C017  FFD9         	movff	_pDst,fsr2l
 11291  002362  C018  FFDA         	movff	_pDst+1,fsr2h
 11292  002366  0E0E               	movlw	(high __ramtop+-1)
 11293  002368  64F7               	cpfsgt	tblptrh,c
 11294  00236A  D003               	bra	u4107
 11295  00236C  0008               	tblrd		*
 11296  00236E  50F5               	movf	tablat,w,c
 11297  002370  D005               	bra	u4100
 11298  002372                     u4107:
 11299  002372  CFF6 FFE9          	movff	tblptrl,fsr0l
 11300  002376  CFF7 FFEA          	movff	tblptrh,fsr0h
 11301  00237A  50EF               	movf	indf0,w,c
 11302  00237C                     u4100:
 11303  00237C  6EDF               	movwf	indf2,c
 11304  00237E  0100               	movlb	0	; () banked
 11305  002380  4BA6               	infsnz	_inPipes& (0+255),f,b
 11306  002382  2BA7               	incf	(_inPipes+1)& (0+255),f,b
 11307                           
 11308                           ; BSR set to: 0
 11309  002384  4A17               	infsnz	_pDst,f,c
 11310  002386  2A18               	incf	_pDst+1,f,c
 11311                           
 11312                           ; BSR set to: 0
 11313                           ;usb_device.c: 1832: byteToSend--;
 11314  002388  0775               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11315  00238A                     l1181:
 11316                           
 11317                           ; BSR set to: 0
 11318                           
 11319                           ; BSR set to: 0
 11320  00238A  5175               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11321  00238C  B4D8               	btfsc	status,2,c
 11322  00238E  0012               	return	
 11323  002390  D7E1               	goto	l1182
 11324  002392                     
 11325                           ; BSR set to: 0
 11326                           ;usb_device.c: 1838: {
 11327                           ;usb_device.c: 1839: *pDst++ = *inPipes[0].pSrc.bRam++;
 11328                           
 11329                           ; BSR set to: 0
 11330  002392  C0A6  FFF6         	movff	_inPipes,tblptrl
 11331  002396  C0A7  FFF7         	movff	_inPipes+1,tblptrh
 11332  00239A  6AF8               	clrf	tblptru,c
 11333  00239C  C017  FFD9         	movff	_pDst,fsr2l
 11334  0023A0  C018  FFDA         	movff	_pDst+1,fsr2h
 11335  0023A4  0E0E               	movlw	(high __ramtop+-1)
 11336  0023A6  64F7               	cpfsgt	tblptrh,c
 11337  0023A8  D003               	bra	u4127
 11338  0023AA  0008               	tblrd		*
 11339  0023AC  50F5               	movf	tablat,w,c
 11340  0023AE  D005               	bra	u4120
 11341  0023B0                     u4127:
 11342  0023B0  CFF6 FFE9          	movff	tblptrl,fsr0l
 11343  0023B4  CFF7 FFEA          	movff	tblptrh,fsr0h
 11344  0023B8  50EF               	movf	indf0,w,c
 11345  0023BA                     u4120:
 11346  0023BA  6EDF               	movwf	indf2,c
 11347  0023BC  0100               	movlb	0	; () banked
 11348  0023BE  4BA6               	infsnz	_inPipes& (0+255),f,b
 11349  0023C0  2BA7               	incf	(_inPipes+1)& (0+255),f,b
 11350                           
 11351                           ; BSR set to: 0
 11352  0023C2  4A17               	infsnz	_pDst,f,c
 11353  0023C4  2A18               	incf	_pDst+1,f,c
 11354                           
 11355                           ; BSR set to: 0
 11356                           ;usb_device.c: 1840: byteToSend--;
 11357  0023C6  0775               	decf	USBCtrlTrfTxService@byteToSend& (0+255),f,b
 11358  0023C8                     l1185:
 11359                           
 11360                           ; BSR set to: 0
 11361                           
 11362                           ; BSR set to: 0
 11363  0023C8  5175               	movf	USBCtrlTrfTxService@byteToSend& (0+255),w,b
 11364  0023CA  B4D8               	btfsc	status,2,c
 11365  0023CC  0012               	return	
 11366  0023CE  D7E1               	goto	l1186
 11367  0023D0                     __end_of_USBCtrlTrfTxService:
 11368                           	opt stack 0
 11369                           tosu	equ	0xFFF
 11370                           tosh	equ	0xFFE
 11371                           tosl	equ	0xFFD
 11372                           pclath	equ	0xFFA
 11373                           tblptru	equ	0xFF8
 11374                           tblptrh	equ	0xFF7
 11375                           tblptrl	equ	0xFF6
 11376                           tablat	equ	0xFF5
 11377                           prodh	equ	0xFF4
 11378                           prodl	equ	0xFF3
 11379                           intcon	equ	0xFF2
 11380                           intcon2	equ	0xFF1
 11381                           intcon3	equ	0xFF0
 11382                           indf0	equ	0xFEF
 11383                           postinc0	equ	0xFEE
 11384                           plusw0	equ	0xFEB
 11385                           fsr0h	equ	0xFEA
 11386                           fsr0l	equ	0xFE9
 11387                           wreg	equ	0xFE8
 11388                           indf1	equ	0xFE7
 11389                           postinc1	equ	0xFE6
 11390                           postdec1	equ	0xFE5
 11391                           fsr1h	equ	0xFE2
 11392                           fsr1l	equ	0xFE1
 11393                           indf2	equ	0xFDF
 11394                           postinc2	equ	0xFDE
 11395                           postdec2	equ	0xFDD
 11396                           plusw2	equ	0xFDB
 11397                           fsr2h	equ	0xFDA
 11398                           fsr2l	equ	0xFD9
 11399                           status	equ	0xFD8
 11400                           
 11401 ;; *************** function _CDCTxService *****************
 11402 ;; Defined at:
 11403 ;;		line 839 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;		None
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;  byte_to_send    1   29[BANK0 ] unsigned char 
 11408 ;;  i               1   28[BANK0 ] unsigned char 
 11409 ;; Return value:  Size  Location     Type
 11410 ;;                  1    wreg      void 
 11411 ;; Registers used:
 11412 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11413 ;; Tracked objects:
 11414 ;;		On entry : 0/0
 11415 ;;		On exit  : 0/0
 11416 ;;		Unchanged: 0/0
 11417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11419 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11422 ;;Total ram usage:        2 bytes
 11423 ;; Hardware stack levels used:    1
 11424 ;; Hardware stack levels required when called:   10
 11425 ;; This function calls:
 11426 ;;		_USBTransferOnePacket
 11427 ;; This function is called by:
 11428 ;;		_UsbDevice_MainTask
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           
 11432                           	psect	text51
 11433  00167C                     __ptext51:
 11434                           	opt stack 0
 11435  00167C                     _CDCTxService:
 11436                           	opt stack 17
 11437                           
 11438                           ;usb_device_cdc.c: 841: uint8_t byte_to_send;
 11439                           ;usb_device_cdc.c: 842: uint8_t i;
 11440                           ;usb_device_cdc.c: 844: ;
 11441                           ;usb_device_cdc.c: 846: {};
 11442                           ;usb_device_cdc.c: 848: if(((CDCDataInHandle != 0x0000) && ((*(volatile uint8_t*)CDCData
      +                          InHandle & 0x80) != 0x00)))
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;incstack = 0
 11446  00167C  5015               	movf	_CDCDataInHandle,w,c
 11447  00167E  1016               	iorwf	_CDCDataInHandle+1,w,c
 11448  001680  B4D8               	btfsc	status,2,c
 11449  001682  D006               	goto	l1431
 11450  001684  C015  FFD9         	movff	_CDCDataInHandle,fsr2l
 11451  001688  C016  FFDA         	movff	_CDCDataInHandle+1,fsr2h
 11452  00168C  BEDF               	btfsc	indf2,7,c
 11453  00168E  0012               	return	
 11454  001690                     l1431:
 11455                           
 11456                           ;usb_device_cdc.c: 852: }
 11457                           ;usb_device_cdc.c: 859: if(cdc_trf_state == 3)
 11458  001690  0E03               	movlw	3
 11459  001692  0100               	movlb	0	; () banked
 11460  001694  19BB               	xorwf	_cdc_trf_state& (0+255),w,b
 11461  001696  A4D8               	btfss	status,2,c
 11462  001698  D002               	goto	l1433
 11463                           
 11464                           ; BSR set to: 0
 11465                           ;usb_device_cdc.c: 860: cdc_trf_state = 0;
 11466  00169A  0E00               	movlw	0
 11467  00169C  6FBB               	movwf	_cdc_trf_state& (0+255),b
 11468  00169E                     l1433:
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;usb_device_cdc.c: 865: if(cdc_trf_state == 0)
 11472  00169E  51BB               	movf	_cdc_trf_state& (0+255),w,b
 11473  0016A0  B4D8               	btfsc	status,2,c
 11474  0016A2  0012               	return	
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;usb_device_cdc.c: 869: }
 11478                           ;usb_device_cdc.c: 874: if(cdc_trf_state == 2)
 11479                           
 11480                           ; BSR set to: 0
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;usb_device_cdc.c: 866: {
 11484                           ;usb_device_cdc.c: 867: ;
 11485                           ;usb_device_cdc.c: 868: return;
 11486  0016A4  0E02               	movlw	2
 11487  0016A6  19BB               	xorwf	_cdc_trf_state& (0+255),w,b
 11488  0016A8  A4D8               	btfss	status,2,c
 11489  0016AA  D013               	goto	l1435
 11490                           
 11491                           ; BSR set to: 0
 11492                           ;usb_device_cdc.c: 875: {
 11493                           ;usb_device_cdc.c: 876: CDCDataInHandle = USBTransferOnePacket(2,1,(0),0);
 11494  0016AC  0E01               	movlw	1
 11495  0016AE  6F75               	movwf	USBTransferOnePacket@dir& (0+255),b
 11496  0016B0  0E00               	movlw	0
 11497  0016B2  6F76               	movwf	USBTransferOnePacket@data& (0+255),b
 11498  0016B4  0E00               	movlw	0
 11499  0016B6  6F77               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11500  0016B8  0E00               	movlw	0
 11501  0016BA  6F78               	movwf	USBTransferOnePacket@len& (0+255),b
 11502  0016BC  0E02               	movlw	2
 11503  0016BE  EC38  F014         	call	_USBTransferOnePacket
 11504  0016C2  C075  F015         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11505  0016C6  C076  F016         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11506                           
 11507                           ;usb_device_cdc.c: 878: cdc_trf_state = 3;
 11508  0016CA  0E03               	movlw	3
 11509  0016CC  0100               	movlb	0	; () banked
 11510  0016CE  6FBB               	movwf	_cdc_trf_state& (0+255),b
 11511                           
 11512                           ;usb_device_cdc.c: 879: }
 11513  0016D0  0012               	return	
 11514  0016D2                     l1435:
 11515                           
 11516                           ; BSR set to: 0
 11517                           ;usb_device_cdc.c: 880: else if(cdc_trf_state == 1)
 11518                           
 11519                           ; BSR set to: 0
 11520  0016D2  05BB               	decf	_cdc_trf_state& (0+255),w,b
 11521  0016D4  A4D8               	btfss	status,2,c
 11522  0016D6  0012               	return	
 11523                           
 11524                           ; BSR set to: 0
 11525                           ;usb_device_cdc.c: 881: {
 11526                           ;usb_device_cdc.c: 885: if(cdc_tx_len > sizeof(cdc_data_tx))
 11527  0016D8  0E40               	movlw	64
 11528  0016DA  65BA               	cpfsgt	_cdc_tx_len& (0+255),b
 11529  0016DC  D003               	goto	l1438
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;usb_device_cdc.c: 886: byte_to_send = sizeof(cdc_data_tx);
 11533  0016DE  0E40               	movlw	64
 11534  0016E0  6F7D               	movwf	CDCTxService@byte_to_send& (0+255),b
 11535  0016E2  D002               	goto	l1439
 11536  0016E4                     l1438:
 11537                           
 11538                           ; BSR set to: 0
 11539                           ;usb_device_cdc.c: 887: else
 11540                           ;usb_device_cdc.c: 888: byte_to_send = cdc_tx_len;
 11541  0016E4  C0BA  F07D         	movff	_cdc_tx_len,CDCTxService@byte_to_send
 11542  0016E8                     l1439:
 11543                           
 11544                           ; BSR set to: 0
 11545                           ;usb_device_cdc.c: 893: cdc_tx_len = cdc_tx_len - byte_to_send;
 11546                           
 11547                           ; BSR set to: 0
 11548  0016E8  517D               	movf	CDCTxService@byte_to_send& (0+255),w,b
 11549  0016EA  0800               	sublw	0
 11550  0016EC  25BA               	addwf	_cdc_tx_len& (0+255),w,b
 11551  0016EE  6FBA               	movwf	_cdc_tx_len& (0+255),b
 11552                           
 11553                           ;usb_device_cdc.c: 895: pCDCDst.bRam = (uint8_t*)&cdc_data_tx;
 11554  0016F0  0E00               	movlw	low _cdc_data_tx
 11555  0016F2  6E09               	movwf	_pCDCDst,c
 11556  0016F4  0E06               	movlw	high _cdc_data_tx
 11557  0016F6  6E0A               	movwf	_pCDCDst+1,c
 11558                           
 11559                           ; BSR set to: 0
 11560                           ;usb_device_cdc.c: 897: i = byte_to_send;
 11561  0016F8  C07D  F07C         	movff	CDCTxService@byte_to_send,CDCTxService@i
 11562                           
 11563                           ; BSR set to: 0
 11564                           ;usb_device_cdc.c: 898: if(cdc_mem_type == 0x00)
 11565  0016FC  51B9               	movf	_cdc_mem_type& (0+255),w,b
 11566  0016FE  B4D8               	btfsc	status,2,c
 11567  001700  D01C               	goto	l1441
 11568  001702  D03A               	goto	l1445
 11569  001704                     
 11570                           ; BSR set to: 0
 11571                           ;usb_device_cdc.c: 901: {
 11572                           ;usb_device_cdc.c: 902: *pCDCDst.bRam = *pCDCSrc.bRom;
 11573                           
 11574                           ; BSR set to: 0
 11575  001704  C00C  FFF6         	movff	_pCDCSrc,tblptrl
 11576  001708  C00D  FFF7         	movff	_pCDCSrc+1,tblptrh
 11577  00170C  6AF8               	clrf	tblptru,c
 11578  00170E  C009  FFD9         	movff	_pCDCDst,fsr2l
 11579  001712  C00A  FFDA         	movff	_pCDCDst+1,fsr2h
 11580  001716  0E0E               	movlw	(high __ramtop+-1)
 11581  001718  64F7               	cpfsgt	tblptrh,c
 11582  00171A  D003               	bra	u9517
 11583  00171C  0008               	tblrd		*
 11584  00171E  50F5               	movf	tablat,w,c
 11585  001720  D005               	bra	u9510
 11586  001722                     u9517:
 11587  001722  CFF6 FFE9          	movff	tblptrl,fsr0l
 11588  001726  CFF7 FFEA          	movff	tblptrh,fsr0h
 11589  00172A  50EF               	movf	indf0,w,c
 11590  00172C                     u9510:
 11591  00172C  6EDF               	movwf	indf2,c
 11592                           
 11593                           ;usb_device_cdc.c: 903: pCDCDst.bRam++;
 11594  00172E  4A09               	infsnz	_pCDCDst,f,c
 11595  001730  2A0A               	incf	_pCDCDst+1,f,c
 11596                           
 11597                           ;usb_device_cdc.c: 904: pCDCSrc.bRom++;
 11598  001732  4A0C               	infsnz	_pCDCSrc,f,c
 11599  001734  2A0D               	incf	_pCDCSrc+1,f,c
 11600                           
 11601                           ;usb_device_cdc.c: 905: i--;
 11602  001736  0100               	movlb	0	; () banked
 11603  001738  077C               	decf	CDCTxService@i& (0+255),f,b
 11604  00173A                     l1441:
 11605                           
 11606                           ; BSR set to: 0
 11607                           
 11608                           ; BSR set to: 0
 11609  00173A  517C               	movf	CDCTxService@i& (0+255),w,b
 11610  00173C  B4D8               	btfsc	status,2,c
 11611  00173E  D01F               	goto	u9540
 11612  001740  D7E1               	goto	l1442
 11613  001742                     
 11614                           ; BSR set to: 0
 11615                           ;usb_device_cdc.c: 911: {
 11616                           ;usb_device_cdc.c: 912: *pCDCDst.bRam = *pCDCSrc.bRam;
 11617                           
 11618                           ; BSR set to: 0
 11619  001742  C00C  FFF6         	movff	_pCDCSrc,tblptrl
 11620  001746  C00D  FFF7         	movff	_pCDCSrc+1,tblptrh
 11621  00174A  6AF8               	clrf	tblptru,c
 11622  00174C  C009  FFD9         	movff	_pCDCDst,fsr2l
 11623  001750  C00A  FFDA         	movff	_pCDCDst+1,fsr2h
 11624  001754  0E0E               	movlw	(high __ramtop+-1)
 11625  001756  64F7               	cpfsgt	tblptrh,c
 11626  001758  D003               	bra	u9537
 11627  00175A  0008               	tblrd		*
 11628  00175C  50F5               	movf	tablat,w,c
 11629  00175E  D005               	bra	u9530
 11630  001760                     u9537:
 11631  001760  CFF6 FFE9          	movff	tblptrl,fsr0l
 11632  001764  CFF7 FFEA          	movff	tblptrh,fsr0h
 11633  001768  50EF               	movf	indf0,w,c
 11634  00176A                     u9530:
 11635  00176A  6EDF               	movwf	indf2,c
 11636                           
 11637                           ;usb_device_cdc.c: 913: pCDCDst.bRam++;
 11638  00176C  4A09               	infsnz	_pCDCDst,f,c
 11639  00176E  2A0A               	incf	_pCDCDst+1,f,c
 11640                           
 11641                           ;usb_device_cdc.c: 914: pCDCSrc.bRam++;
 11642  001770  4A0C               	infsnz	_pCDCSrc,f,c
 11643  001772  2A0D               	incf	_pCDCSrc+1,f,c
 11644                           
 11645                           ;usb_device_cdc.c: 915: i--;
 11646  001774  0100               	movlb	0	; () banked
 11647  001776  077C               	decf	CDCTxService@i& (0+255),f,b
 11648  001778                     l1445:
 11649                           
 11650                           ; BSR set to: 0
 11651                           
 11652                           ; BSR set to: 0
 11653  001778  517C               	movf	CDCTxService@i& (0+255),w,b
 11654  00177A  A4D8               	btfss	status,2,c
 11655  00177C  D7E2               	goto	l1446
 11656  00177E                     u9540:
 11657                           
 11658                           ; BSR set to: 0
 11659                           ;usb_device_cdc.c: 916: }
 11660                           ;usb_device_cdc.c: 917: }
 11661                           ;usb_device_cdc.c: 923: if(cdc_tx_len == 0)
 11662                           
 11663                           ; BSR set to: 0
 11664                           
 11665                           ; BSR set to: 0
 11666  00177E  51BA               	movf	_cdc_tx_len& (0+255),w,b
 11667  001780  A4D8               	btfss	status,2,c
 11668  001782  D008               	goto	l1450
 11669                           
 11670                           ; BSR set to: 0
 11671                           ;usb_device_cdc.c: 924: {
 11672                           ;usb_device_cdc.c: 925: if(byte_to_send == 64)
 11673  001784  0E40               	movlw	64
 11674  001786  197D               	xorwf	CDCTxService@byte_to_send& (0+255),w,b
 11675  001788  A4D8               	btfss	status,2,c
 11676  00178A  D002               	goto	l1449
 11677                           
 11678                           ; BSR set to: 0
 11679                           ;usb_device_cdc.c: 926: cdc_trf_state = 2;
 11680  00178C  0E02               	movlw	2
 11681  00178E  D001               	goto	L13
 11682  001790                     l1449:
 11683                           
 11684                           ; BSR set to: 0
 11685                           ;usb_device_cdc.c: 927: else
 11686                           ;usb_device_cdc.c: 928: cdc_trf_state = 3;
 11687                           
 11688                           ; BSR set to: 0
 11689  001790  0E03               	movlw	3
 11690  001792                     L13:
 11691  001792  6FBB               	movwf	_cdc_trf_state& (0+255),b
 11692  001794                     l1450:
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;usb_device_cdc.c: 929: }
 11696                           ;usb_device_cdc.c: 930: CDCDataInHandle = USBTransferOnePacket(2,1,(uint8_t*)&cdc_data_t
      +                          x,byte_to_send);
 11697                           
 11698                           ; BSR set to: 0
 11699                           
 11700                           ; BSR set to: 0
 11701  001794  0E01               	movlw	1
 11702  001796  6F75               	movwf	USBTransferOnePacket@dir& (0+255),b
 11703  001798  0E00               	movlw	low _cdc_data_tx
 11704  00179A  6F76               	movwf	USBTransferOnePacket@data& (0+255),b
 11705  00179C  0E06               	movlw	high _cdc_data_tx
 11706  00179E  6F77               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 11707  0017A0  C07D  F078         	movff	CDCTxService@byte_to_send,USBTransferOnePacket@len
 11708  0017A4  0E02               	movlw	2
 11709  0017A6  EC38  F014         	call	_USBTransferOnePacket
 11710  0017AA  C075  F015         	movff	?_USBTransferOnePacket,_CDCDataInHandle
 11711  0017AE  C076  F016         	movff	?_USBTransferOnePacket+1,_CDCDataInHandle+1
 11712  0017B2  0012               	return	
 11713  0017B4                     __end_of_CDCTxService:
 11714                           	opt stack 0
 11715                           tosu	equ	0xFFF
 11716                           tosh	equ	0xFFE
 11717                           tosl	equ	0xFFD
 11718                           pclath	equ	0xFFA
 11719                           tblptru	equ	0xFF8
 11720                           tblptrh	equ	0xFF7
 11721                           tblptrl	equ	0xFF6
 11722                           tablat	equ	0xFF5
 11723                           prodh	equ	0xFF4
 11724                           prodl	equ	0xFF3
 11725                           intcon	equ	0xFF2
 11726                           intcon2	equ	0xFF1
 11727                           intcon3	equ	0xFF0
 11728                           indf0	equ	0xFEF
 11729                           postinc0	equ	0xFEE
 11730                           plusw0	equ	0xFEB
 11731                           fsr0h	equ	0xFEA
 11732                           fsr0l	equ	0xFE9
 11733                           wreg	equ	0xFE8
 11734                           indf1	equ	0xFE7
 11735                           postinc1	equ	0xFE6
 11736                           postdec1	equ	0xFE5
 11737                           fsr1h	equ	0xFE2
 11738                           fsr1l	equ	0xFE1
 11739                           indf2	equ	0xFDF
 11740                           postinc2	equ	0xFDE
 11741                           postdec2	equ	0xFDD
 11742                           plusw2	equ	0xFDB
 11743                           fsr2h	equ	0xFDA
 11744                           fsr2l	equ	0xFD9
 11745                           status	equ	0xFD8
 11746                           
 11747 ;; *************** function _Term_MainSm *****************
 11748 ;; Defined at:
 11749 ;;		line 671 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 11750 ;; Parameters:    Size  Location     Type
 11751 ;;		None
 11752 ;; Auto vars:     Size  Location     Type
 11753 ;;  FwkBuildStr     4   61[BANK0 ] unsigned char [4]
 11754 ;;  FwkMinorStr     4   57[BANK0 ] unsigned char [4]
 11755 ;;  FwkMajorStr     4   53[BANK0 ] unsigned char [4]
 11756 ;;  FwkBuildYear    4    0        unsigned char [4]
 11757 ;;  FwkBuildMont    4    0        unsigned char [4]
 11758 ;;  FwkBuildDayS    4    0        unsigned char [4]
 11759 ;; Return value:  Size  Location     Type
 11760 ;;                  1    wreg      void 
 11761 ;; Registers used:
 11762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11763 ;; Tracked objects:
 11764 ;;		On entry : 0/0
 11765 ;;		On exit  : 0/0
 11766 ;;		Unchanged: 0/0
 11767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11769 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11771 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11772 ;;Total ram usage:       12 bytes
 11773 ;; Hardware stack levels used:    1
 11774 ;; Hardware stack levels required when called:   13
 11775 ;; This function calls:
 11776 ;;		_OsTmr_GetTimerStatus
 11777 ;;		_OsTmr_StartTimer
 11778 ;;		_Terminal
 11779 ;;		_memset
 11780 ;;		_putUSBUSART
 11781 ;;		_sprintf
 11782 ;;		_strcat
 11783 ;;		_strcpy
 11784 ;;		_strlen
 11785 ;;		_utoa
 11786 ;; This function is called by:
 11787 ;;		_Term_MainTask
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text52
 11792  000506                     __ptext52:
 11793                           	opt stack 0
 11794  000506                     _Term_MainSm:
 11795                           	opt stack 14
 11796                           
 11797                           ;term.c: 673: static TermMainSmStateType TermMainSmState = Term_StartTmr;
 11798                           ;term.c: 674: static SwTimerType TermDelay = { 1u, SwTimerExpired, 0, 0, DelayNotExpired
      +                          , };
 11799                           ;term.c: 675: static UINT8 Data[50];
 11800                           ;term.c: 676: UINT8 FwkMajorStr[4];
 11801                           ;term.c: 677: UINT8 FwkMinorStr[4];
 11802                           ;term.c: 678: UINT8 FwkBuildStr[4];
 11803                           ;term.c: 679: UINT8 FwkBuildDayStr[4];
 11804                           ;term.c: 680: UINT8 FwkBuildMonthStr[4];
 11805                           ;term.c: 681: UINT8 FwkBuildYearStr[4];
 11806                           ;term.c: 683: switch (TermMainSmState)
 11807                           
 11808                           ;incstack = 0
 11809  000506  D12B               	goto	l1847
 11810  000508                     
 11811                           ;term.c: 687: OsTmr_StartTimer(&TermDelay,2000);
 11812  000508  0EF4               	movlw	low Term_MainSm@TermDelay
 11813  00050A  0100               	movlb	0	; () banked
 11814  00050C  6F79               	movwf	OsTmr_StartTimer@Timer& (0+255),b
 11815  00050E  0E03               	movlw	high Term_MainSm@TermDelay
 11816  000510  6F7A               	movwf	(OsTmr_StartTimer@Timer+1)& (0+255),b
 11817  000512  0ED0               	movlw	208
 11818  000514  6F7B               	movwf	OsTmr_StartTimer@Timeout& (0+255),b
 11819  000516  0E07               	movlw	7
 11820  000518  6F7C               	movwf	(OsTmr_StartTimer@Timeout+1)& (0+255),b
 11821  00051A  0E00               	movlw	0
 11822  00051C  6F7D               	movwf	(OsTmr_StartTimer@Timeout+2)& (0+255),b
 11823  00051E  0E00               	movlw	0
 11824  000520  6F7E               	movwf	(OsTmr_StartTimer@Timeout+3)& (0+255),b
 11825  000522  ECB4  F01B         	call	_OsTmr_StartTimer	;wreg free
 11826                           
 11827                           ;term.c: 689: TermMainSmState = Term_InitDelay;
 11828  000526  0E01               	movlw	1
 11829  000528  0100               	movlb	0	; () banked
 11830  00052A  6FB8               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 11831                           
 11832                           ;term.c: 690: break;
 11833  00052C  0012               	return	
 11834  00052E                     
 11835                           ; BSR set to: 0
 11836                           ;term.c: 694: if (OsTmr_GetTimerStatus(&TermDelay) == SwTimerExpired)
 11837                           
 11838                           ; BSR set to: 0
 11839  00052E  0EF4               	movlw	low Term_MainSm@TermDelay
 11840  000530  6F8D               	movwf	OsTmr_GetTimerStatus@Timer& (0+255),b
 11841  000532  0E03               	movlw	high Term_MainSm@TermDelay
 11842  000534  6F8E               	movwf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),b
 11843  000536  ECB6  F018         	call	_OsTmr_GetTimerStatus	;wreg free
 11844  00053A  06E8               	decf	wreg,f,c
 11845  00053C  A4D8               	btfss	status,2,c
 11846  00053E  0012               	return	
 11847                           
 11848                           ;term.c: 695: {
 11849                           ;term.c: 697: TermMainSmState = Term_InitState;
 11850  000540  0E02               	movlw	2
 11851  000542  0100               	movlb	0	; () banked
 11852  000544  6FB8               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;term.c: 698: }
 11856                           ;term.c: 699: break;
 11857  000546  0012               	return	
 11858  000548                     
 11859                           ; BSR set to: 0
 11860                           ;term.c: 703: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND == 1))
 11861                           
 11862                           ; BSR set to: 0
 11863  000548  0E1F               	movlw	31
 11864  00054A  65CA               	cpfsgt	_USBDeviceState& (0+255),b
 11865  00054C  0012               	return	
 11866                           
 11867                           ; BSR set to: 0
 11868  00054E  B265               	btfsc	3941,1,c	;volatile
 11869  000550  0012               	return	
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;term.c: 707: else
 11873                           ;term.c: 708: {
 11874                           ;term.c: 710: TermMainSmState = Term_WelcomeState;
 11875                           
 11876                           ; BSR set to: 0
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;term.c: 704: {
 11880                           ;term.c: 706: }
 11881  000552  0E03               	movlw	3
 11882  000554  6FB8               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;term.c: 711: }
 11886                           ;term.c: 712: break;
 11887  000556  0012               	return	
 11888  000558                     
 11889                           ; BSR set to: 0
 11890                           ;term.c: 716: if((cdc_trf_state == 0))
 11891                           
 11892                           ; BSR set to: 0
 11893  000558  51BB               	movf	_cdc_trf_state& (0+255),w,b
 11894  00055A  A4D8               	btfss	status,2,c
 11895  00055C  0012               	return	
 11896                           
 11897                           ; BSR set to: 0
 11898                           ;term.c: 717: {
 11899                           ;term.c: 719: putUSBUSART((void*)Welcome,(sizeof(Welcome) - 1));
 11900  00055E  0E7F               	movlw	low _Welcome
 11901  000560  6F7B               	movwf	putUSBUSART@data& (0+255),b
 11902  000562  0EFE               	movlw	high _Welcome
 11903  000564  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 11904  000566  0E88               	movlw	136
 11905  000568  6F7D               	movwf	putUSBUSART@length& (0+255),b
 11906  00056A  ECB9  F020         	call	_putUSBUSART	;wreg free
 11907                           
 11908                           ;term.c: 721: TermMainSmState = Term_InstDescState;
 11909  00056E  0E04               	movlw	4
 11910  000570  0100               	movlb	0	; () banked
 11911  000572  6FB8               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;term.c: 722: }
 11915                           ;term.c: 723: break;
 11916  000574  0012               	return	
 11917  000576                     
 11918                           ; BSR set to: 0
 11919                           ;term.c: 727: if((cdc_trf_state == 0))
 11920                           
 11921                           ; BSR set to: 0
 11922  000576  51BB               	movf	_cdc_trf_state& (0+255),w,b
 11923  000578  A4D8               	btfss	status,2,c
 11924  00057A  0012               	return	
 11925                           
 11926                           ; BSR set to: 0
 11927                           ;term.c: 728: {
 11928                           ;term.c: 730: putUSBUSART((void*)MsgFormat,(sizeof(MsgFormat) - 1));
 11929  00057C  0E93               	movlw	low _MsgFormat
 11930  00057E  6F7B               	movwf	putUSBUSART@data& (0+255),b
 11931  000580  0EFD               	movlw	high _MsgFormat
 11932  000582  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 11933  000584  0EEB               	movlw	235
 11934  000586  6F7D               	movwf	putUSBUSART@length& (0+255),b
 11935  000588  ECB9  F020         	call	_putUSBUSART	;wreg free
 11936                           
 11937                           ;term.c: 732: TermMainSmState = Term_FwkVerState;
 11938  00058C  0E05               	movlw	5
 11939  00058E  0100               	movlb	0	; () banked
 11940  000590  6FB8               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 11941                           
 11942                           ; BSR set to: 0
 11943                           ;term.c: 733: }
 11944                           ;term.c: 734: break;
 11945  000592  0012               	return	
 11946  000594                     
 11947                           ; BSR set to: 0
 11948                           ;term.c: 738: if((cdc_trf_state == 0))
 11949                           
 11950                           ; BSR set to: 0
 11951  000594  51BB               	movf	_cdc_trf_state& (0+255),w,b
 11952  000596  A4D8               	btfss	status,2,c
 11953  000598  0012               	return	
 11954                           
 11955                           ; BSR set to: 0
 11956                           ;term.c: 739: {
 11957                           ;term.c: 741: memset(Data,0,50);
 11958  00059A  0E62               	movlw	low Term_MainSm@Data
 11959  00059C  6F75               	movwf	memset@p1& (0+255),b
 11960  00059E  0E03               	movlw	high Term_MainSm@Data
 11961  0005A0  6F76               	movwf	(memset@p1+1)& (0+255),b
 11962  0005A2  0E00               	movlw	0
 11963  0005A4  6F78               	movwf	(memset@c+1)& (0+255),b
 11964  0005A6  0E00               	movlw	0
 11965  0005A8  6F77               	movwf	memset@c& (0+255),b
 11966  0005AA  0E00               	movlw	0
 11967  0005AC  6F7A               	movwf	(memset@n+1)& (0+255),b
 11968  0005AE  0E32               	movlw	50
 11969  0005B0  6F79               	movwf	memset@n& (0+255),b
 11970  0005B2  EC45  F01F         	call	_memset	;wreg free
 11971                           
 11972                           ;term.c: 743: utoa(FwkMajorStr,1,10);
 11973  0005B6  0E95               	movlw	low Term_MainSm@FwkMajorStr
 11974  0005B8  0100               	movlb	0	; () banked
 11975  0005BA  6F7C               	movwf	utoa@buf& (0+255),b
 11976  0005BC  0E00               	movlw	high Term_MainSm@FwkMajorStr
 11977  0005BE  6F7D               	movwf	(utoa@buf+1)& (0+255),b
 11978  0005C0  0E00               	movlw	0
 11979  0005C2  6F7F               	movwf	(utoa@val+1)& (0+255),b
 11980  0005C4  0E01               	movlw	1
 11981  0005C6  6F7E               	movwf	utoa@val& (0+255),b
 11982  0005C8  0E00               	movlw	0
 11983  0005CA  6F81               	movwf	(utoa@base+1)& (0+255),b
 11984  0005CC  0E0A               	movlw	10
 11985  0005CE  6F80               	movwf	utoa@base& (0+255),b
 11986  0005D0  ECF8  F015         	call	_utoa	;wreg free
 11987                           
 11988                           ;term.c: 744: utoa(FwkMinorStr,1,10);
 11989  0005D4  0E99               	movlw	low Term_MainSm@FwkMinorStr
 11990  0005D6  0100               	movlb	0	; () banked
 11991  0005D8  6F7C               	movwf	utoa@buf& (0+255),b
 11992  0005DA  0E00               	movlw	high Term_MainSm@FwkMinorStr
 11993  0005DC  6F7D               	movwf	(utoa@buf+1)& (0+255),b
 11994  0005DE  0E00               	movlw	0
 11995  0005E0  6F7F               	movwf	(utoa@val+1)& (0+255),b
 11996  0005E2  0E01               	movlw	1
 11997  0005E4  6F7E               	movwf	utoa@val& (0+255),b
 11998  0005E6  0E00               	movlw	0
 11999  0005E8  6F81               	movwf	(utoa@base+1)& (0+255),b
 12000  0005EA  0E0A               	movlw	10
 12001  0005EC  6F80               	movwf	utoa@base& (0+255),b
 12002  0005EE  ECF8  F015         	call	_utoa	;wreg free
 12003                           
 12004                           ;term.c: 745: utoa(FwkBuildStr,0,10);
 12005  0005F2  0E9D               	movlw	low Term_MainSm@FwkBuildStr
 12006  0005F4  0100               	movlb	0	; () banked
 12007  0005F6  6F7C               	movwf	utoa@buf& (0+255),b
 12008  0005F8  0E00               	movlw	high Term_MainSm@FwkBuildStr
 12009  0005FA  6F7D               	movwf	(utoa@buf+1)& (0+255),b
 12010  0005FC  0E00               	movlw	0
 12011  0005FE  6F7F               	movwf	(utoa@val+1)& (0+255),b
 12012  000600  0E00               	movlw	0
 12013  000602  6F7E               	movwf	utoa@val& (0+255),b
 12014  000604  0E00               	movlw	0
 12015  000606  6F81               	movwf	(utoa@base+1)& (0+255),b
 12016  000608  0E0A               	movlw	10
 12017  00060A  6F80               	movwf	utoa@base& (0+255),b
 12018  00060C  ECF8  F015         	call	_utoa	;wreg free
 12019                           
 12020                           ;term.c: 746: strcpy(Data,"Framework Version: ");
 12021  000610  0E62               	movlw	low Term_MainSm@Data
 12022  000612  0100               	movlb	0	; () banked
 12023  000614  6F75               	movwf	strcpy@to& (0+255),b
 12024  000616  0E03               	movlw	high Term_MainSm@Data
 12025  000618  6F76               	movwf	(strcpy@to+1)& (0+255),b
 12026  00061A  0EBC               	movlw	low STR_1
 12027  00061C  6F77               	movwf	strcpy@from& (0+255),b
 12028  00061E  0EFF               	movlw	high STR_1
 12029  000620  6F78               	movwf	(strcpy@from+1)& (0+255),b
 12030  000622  ECFC  F01E         	call	_strcpy	;wreg free
 12031                           
 12032                           ;term.c: 747: strcat(Data,FwkMajorStr);
 12033  000626  0E62               	movlw	low Term_MainSm@Data
 12034  000628  0100               	movlb	0	; () banked
 12035  00062A  6F75               	movwf	strcat@to& (0+255),b
 12036  00062C  0E03               	movlw	high Term_MainSm@Data
 12037  00062E  6F76               	movwf	(strcat@to+1)& (0+255),b
 12038  000630  0E95               	movlw	low Term_MainSm@FwkMajorStr
 12039  000632  6F77               	movwf	strcat@from& (0+255),b
 12040  000634  0E00               	movlw	high Term_MainSm@FwkMajorStr
 12041  000636  6F78               	movwf	(strcat@from+1)& (0+255),b
 12042  000638  ECE3  F01B         	call	_strcat	;wreg free
 12043                           
 12044                           ;term.c: 748: strcat(Data,".");
 12045  00063C  0E62               	movlw	low Term_MainSm@Data
 12046  00063E  0100               	movlb	0	; () banked
 12047  000640  6F75               	movwf	strcat@to& (0+255),b
 12048  000642  0E03               	movlw	high Term_MainSm@Data
 12049  000644  6F76               	movwf	(strcat@to+1)& (0+255),b
 12050  000646  0EF4               	movlw	low STR_2
 12051  000648  6F77               	movwf	strcat@from& (0+255),b
 12052  00064A  0EFF               	movlw	high STR_2
 12053  00064C  6F78               	movwf	(strcat@from+1)& (0+255),b
 12054  00064E  ECE3  F01B         	call	_strcat	;wreg free
 12055                           
 12056                           ;term.c: 749: strcat(Data,FwkMinorStr);
 12057  000652  0E62               	movlw	low Term_MainSm@Data
 12058  000654  0100               	movlb	0	; () banked
 12059  000656  6F75               	movwf	strcat@to& (0+255),b
 12060  000658  0E03               	movlw	high Term_MainSm@Data
 12061  00065A  6F76               	movwf	(strcat@to+1)& (0+255),b
 12062  00065C  0E99               	movlw	low Term_MainSm@FwkMinorStr
 12063  00065E  6F77               	movwf	strcat@from& (0+255),b
 12064  000660  0E00               	movlw	high Term_MainSm@FwkMinorStr
 12065  000662  6F78               	movwf	(strcat@from+1)& (0+255),b
 12066  000664  ECE3  F01B         	call	_strcat	;wreg free
 12067                           
 12068                           ;term.c: 750: strcat(Data,".");
 12069  000668  0E62               	movlw	low Term_MainSm@Data
 12070  00066A  0100               	movlb	0	; () banked
 12071  00066C  6F75               	movwf	strcat@to& (0+255),b
 12072  00066E  0E03               	movlw	high Term_MainSm@Data
 12073  000670  6F76               	movwf	(strcat@to+1)& (0+255),b
 12074  000672  0EF4               	movlw	low STR_2
 12075  000674  6F77               	movwf	strcat@from& (0+255),b
 12076  000676  0EFF               	movlw	high STR_2
 12077  000678  6F78               	movwf	(strcat@from+1)& (0+255),b
 12078  00067A  ECE3  F01B         	call	_strcat	;wreg free
 12079                           
 12080                           ;term.c: 751: strcat(Data,FwkBuildStr);
 12081  00067E  0E62               	movlw	low Term_MainSm@Data
 12082  000680  0100               	movlb	0	; () banked
 12083  000682  6F75               	movwf	strcat@to& (0+255),b
 12084  000684  0E03               	movlw	high Term_MainSm@Data
 12085  000686  6F76               	movwf	(strcat@to+1)& (0+255),b
 12086  000688  0E9D               	movlw	low Term_MainSm@FwkBuildStr
 12087  00068A  6F77               	movwf	strcat@from& (0+255),b
 12088  00068C  0E00               	movlw	high Term_MainSm@FwkBuildStr
 12089  00068E  6F78               	movwf	(strcat@from+1)& (0+255),b
 12090  000690  ECE3  F01B         	call	_strcat	;wreg free
 12091                           
 12092                           ;term.c: 752: strcat(Data,"\r\n");
 12093  000694  0E62               	movlw	low Term_MainSm@Data
 12094  000696  0100               	movlb	0	; () banked
 12095  000698  6F75               	movwf	strcat@to& (0+255),b
 12096  00069A  0E03               	movlw	high Term_MainSm@Data
 12097  00069C  6F76               	movwf	(strcat@to+1)& (0+255),b
 12098  00069E  0EDE               	movlw	low (STR_5+14)
 12099  0006A0  6F77               	movwf	strcat@from& (0+255),b
 12100  0006A2  0EFF               	movlw	high (STR_5+14)
 12101  0006A4  6F78               	movwf	(strcat@from+1)& (0+255),b
 12102  0006A6  ECE3  F01B         	call	_strcat	;wreg free
 12103                           
 12104                           ;term.c: 754: putUSBUSART((void*)Data,strlen(Data));
 12105  0006AA  0E62               	movlw	low Term_MainSm@Data
 12106  0006AC  0100               	movlb	0	; () banked
 12107  0006AE  6F7B               	movwf	putUSBUSART@data& (0+255),b
 12108  0006B0  0E03               	movlw	high Term_MainSm@Data
 12109  0006B2  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 12110  0006B4  0E62               	movlw	low Term_MainSm@Data
 12111  0006B6  6F75               	movwf	strlen@s& (0+255),b
 12112  0006B8  0E03               	movlw	high Term_MainSm@Data
 12113  0006BA  6F76               	movwf	(strlen@s+1)& (0+255),b
 12114  0006BC  EC4C  F01E         	call	_strlen	;wreg free
 12115  0006C0  0100               	movlb	0	; () banked
 12116  0006C2  5175               	movf	?_strlen& (0+255),w,b
 12117  0006C4  6F7D               	movwf	putUSBUSART@length& (0+255),b
 12118  0006C6  ECB9  F020         	call	_putUSBUSART	;wreg free
 12119                           
 12120                           ;term.c: 756: TermMainSmState = Term_FwkBuildDateState;
 12121  0006CA  0E06               	movlw	6
 12122  0006CC  0100               	movlb	0	; () banked
 12123  0006CE  6FB8               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12124                           
 12125                           ; BSR set to: 0
 12126                           ;term.c: 757: }
 12127                           ;term.c: 758: break;
 12128  0006D0  0012               	return	
 12129  0006D2                     
 12130                           ; BSR set to: 0
 12131                           ;term.c: 762: if((cdc_trf_state == 0))
 12132                           
 12133                           ; BSR set to: 0
 12134  0006D2  51BB               	movf	_cdc_trf_state& (0+255),w,b
 12135  0006D4  A4D8               	btfss	status,2,c
 12136  0006D6  0012               	return	
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;term.c: 763: {
 12140                           ;term.c: 765: memset(Data,0,50);
 12141  0006D8  0E62               	movlw	low Term_MainSm@Data
 12142  0006DA  6F75               	movwf	memset@p1& (0+255),b
 12143  0006DC  0E03               	movlw	high Term_MainSm@Data
 12144  0006DE  6F76               	movwf	(memset@p1+1)& (0+255),b
 12145  0006E0  0E00               	movlw	0
 12146  0006E2  6F78               	movwf	(memset@c+1)& (0+255),b
 12147  0006E4  0E00               	movlw	0
 12148  0006E6  6F77               	movwf	memset@c& (0+255),b
 12149  0006E8  0E00               	movlw	0
 12150  0006EA  6F7A               	movwf	(memset@n+1)& (0+255),b
 12151  0006EC  0E32               	movlw	50
 12152  0006EE  6F79               	movwf	memset@n& (0+255),b
 12153  0006F0  EC45  F01F         	call	_memset	;wreg free
 12154                           
 12155                           ;term.c: 767: sprintf(Data,"Build Date: %s\r\n","Nov 01 2019");
 12156  0006F4  0E62               	movlw	low Term_MainSm@Data
 12157  0006F6  0100               	movlb	0	; () banked
 12158  0006F8  6F75               	movwf	sprintf@sp& (0+255),b
 12159  0006FA  0E03               	movlw	high Term_MainSm@Data
 12160  0006FC  6F76               	movwf	(sprintf@sp+1)& (0+255),b
 12161  0006FE  0ED0               	movlw	low STR_5
 12162  000700  6F77               	movwf	sprintf@f& (0+255),b
 12163  000702  0EFF               	movlw	high STR_5
 12164  000704  6F78               	movwf	(sprintf@f+1)& (0+255),b
 12165  000706  0EE1               	movlw	low STR_6
 12166  000708  6F79               	movwf	(?_sprintf+4)& (0+255),b
 12167  00070A  0EFF               	movlw	high STR_6
 12168  00070C  6F7A               	movwf	(?_sprintf+5)& (0+255),b
 12169  00070E  ECB5  F010         	call	_sprintf	;wreg free
 12170                           
 12171                           ;term.c: 769: putUSBUSART((void*)Data,strlen(Data));
 12172  000712  0E62               	movlw	low Term_MainSm@Data
 12173  000714  0100               	movlb	0	; () banked
 12174  000716  6F7B               	movwf	putUSBUSART@data& (0+255),b
 12175  000718  0E03               	movlw	high Term_MainSm@Data
 12176  00071A  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 12177  00071C  0E62               	movlw	low Term_MainSm@Data
 12178  00071E  6F75               	movwf	strlen@s& (0+255),b
 12179  000720  0E03               	movlw	high Term_MainSm@Data
 12180  000722  6F76               	movwf	(strlen@s+1)& (0+255),b
 12181  000724  EC4C  F01E         	call	_strlen	;wreg free
 12182  000728  0100               	movlb	0	; () banked
 12183  00072A  5175               	movf	?_strlen& (0+255),w,b
 12184  00072C  6F7D               	movwf	putUSBUSART@length& (0+255),b
 12185  00072E  ECB9  F020         	call	_putUSBUSART	;wreg free
 12186                           
 12187                           ;term.c: 771: TermMainSmState = Term_SysInitState;
 12188  000732  0E07               	movlw	7
 12189  000734  0100               	movlb	0	; () banked
 12190  000736  6FB8               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;term.c: 772: }
 12194                           ;term.c: 773: break;
 12195  000738  0012               	return	
 12196  00073A                     
 12197                           ; BSR set to: 0
 12198                           ;term.c: 777: if((cdc_trf_state == 0))
 12199                           
 12200                           ; BSR set to: 0
 12201  00073A  51BB               	movf	_cdc_trf_state& (0+255),w,b
 12202  00073C  A4D8               	btfss	status,2,c
 12203  00073E  0012               	return	
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;term.c: 778: {
 12207                           ;term.c: 780: putUSBUSART((void*)MsgReady,(sizeof(MsgReady) - 1));
 12208  000740  0E8F               	movlw	low _MsgReady
 12209  000742  6F7B               	movwf	putUSBUSART@data& (0+255),b
 12210  000744  0EFF               	movlw	high _MsgReady
 12211  000746  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 12212  000748  0E16               	movlw	22
 12213  00074A  6F7D               	movwf	putUSBUSART@length& (0+255),b
 12214  00074C  ECB9  F020         	call	_putUSBUSART	;wreg free
 12215                           
 12216                           ;term.c: 782: TermMainSmState = Term_FinalState;
 12217  000750  0E08               	movlw	8
 12218  000752  0100               	movlb	0	; () banked
 12219  000754  6FB8               	movwf	Term_MainSm@TermMainSmState& (0+255),b
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;term.c: 783: }
 12223                           ;term.c: 784: break;
 12224  000756  0012               	return	
 12225  000758                     
 12226                           ; BSR set to: 0
 12227                           ;term.c: 788: Terminal();
 12228                           
 12229                           ; BSR set to: 0
 12230  000758  EC68  F000         	call	_Terminal	;wreg free
 12231                           
 12232                           ;term.c: 793: }
 12233                           
 12234                           ;term.c: 792: break;
 12235                           
 12236                           ;term.c: 791: default:
 12237                           
 12238                           ;term.c: 789: break;
 12239  00075C  0012               	return	
 12240  00075E                     l1847:
 12241  00075E  0100               	movlb	0	; () banked
 12242  000760  51B8               	movf	Term_MainSm@TermMainSmState& (0+255),w,b
 12243                           
 12244                           ; Switch size 1, requested type "space"
 12245                           ; Number of cases is 9, Range of values is 0 to 8
 12246                           ; switch strategies available:
 12247                           ; Name         Instructions Cycles
 12248                           ; simple_byte           28    15 (average)
 12249                           ;	Chosen strategy is simple_byte
 12250  000762  0A00               	xorlw	0	; case 0
 12251  000764  B4D8               	btfsc	status,2,c
 12252  000766  D6D0               	goto	l1848
 12253  000768  0A01               	xorlw	1	; case 1
 12254  00076A  B4D8               	btfsc	status,2,c
 12255  00076C  D6E0               	goto	l1850
 12256  00076E  0A03               	xorlw	3	; case 2
 12257  000770  B4D8               	btfsc	status,2,c
 12258  000772  D6EA               	goto	l1852
 12259  000774  0A01               	xorlw	1	; case 3
 12260  000776  B4D8               	btfsc	status,2,c
 12261  000778  D6EF               	goto	l1857
 12262  00077A  0A07               	xorlw	7	; case 4
 12263  00077C  B4D8               	btfsc	status,2,c
 12264  00077E  D6FB               	goto	l1859
 12265  000780  0A01               	xorlw	1	; case 5
 12266  000782  B4D8               	btfsc	status,2,c
 12267  000784  D707               	goto	l1861
 12268  000786  0A03               	xorlw	3	; case 6
 12269  000788  B4D8               	btfsc	status,2,c
 12270  00078A  D7A3               	goto	l1863
 12271  00078C  0A01               	xorlw	1	; case 7
 12272  00078E  B4D8               	btfsc	status,2,c
 12273  000790  D7D4               	goto	l1865
 12274  000792  0A0F               	xorlw	15	; case 8
 12275  000794  A4D8               	btfss	status,2,c
 12276  000796  0012               	return	
 12277  000798  D7DF               	goto	l1867
 12278  00079A                     __end_of_Term_MainSm:
 12279                           	opt stack 0
 12280                           tosu	equ	0xFFF
 12281                           tosh	equ	0xFFE
 12282                           tosl	equ	0xFFD
 12283                           pclath	equ	0xFFA
 12284                           tblptru	equ	0xFF8
 12285                           tblptrh	equ	0xFF7
 12286                           tblptrl	equ	0xFF6
 12287                           tablat	equ	0xFF5
 12288                           prodh	equ	0xFF4
 12289                           prodl	equ	0xFF3
 12290                           intcon	equ	0xFF2
 12291                           intcon2	equ	0xFF1
 12292                           intcon3	equ	0xFF0
 12293                           indf0	equ	0xFEF
 12294                           postinc0	equ	0xFEE
 12295                           plusw0	equ	0xFEB
 12296                           fsr0h	equ	0xFEA
 12297                           fsr0l	equ	0xFE9
 12298                           wreg	equ	0xFE8
 12299                           indf1	equ	0xFE7
 12300                           postinc1	equ	0xFE6
 12301                           postdec1	equ	0xFE5
 12302                           fsr1h	equ	0xFE2
 12303                           fsr1l	equ	0xFE1
 12304                           indf2	equ	0xFDF
 12305                           postinc2	equ	0xFDE
 12306                           postdec2	equ	0xFDD
 12307                           plusw2	equ	0xFDB
 12308                           fsr2h	equ	0xFDA
 12309                           fsr2l	equ	0xFD9
 12310                           status	equ	0xFD8
 12311                           
 12312 ;; *************** function _strlen *****************
 12313 ;; Defined at:
 12314 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 12315 ;; Parameters:    Size  Location     Type
 12316 ;;  s               2   21[BANK0 ] PTR const unsigned char 
 12317 ;;		 -> Term_MainSm@Data(50), 
 12318 ;; Auto vars:     Size  Location     Type
 12319 ;;  cp              2   25[BANK0 ] PTR const unsigned char 
 12320 ;;		 -> Term_MainSm@Data(50), 
 12321 ;; Return value:  Size  Location     Type
 12322 ;;                  2   21[BANK0 ] unsigned int 
 12323 ;; Registers used:
 12324 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12325 ;; Tracked objects:
 12326 ;;		On entry : 0/0
 12327 ;;		On exit  : 0/0
 12328 ;;		Unchanged: 0/0
 12329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12330 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12331 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12332 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12333 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12334 ;;Total ram usage:        6 bytes
 12335 ;; Hardware stack levels used:    1
 12336 ;; Hardware stack levels required when called:    9
 12337 ;; This function calls:
 12338 ;;		Nothing
 12339 ;; This function is called by:
 12340 ;;		_Term_MainSm
 12341 ;; This function uses a non-reentrant model
 12342 ;;
 12343                           
 12344                           	psect	text53
 12345  003C98                     __ptext53:
 12346                           	opt stack 0
 12347  003C98                     _strlen:
 12348                           	opt stack 17
 12349                           
 12350                           ;incstack = 0
 12351  003C98  C075  F079         	movff	strlen@s,strlen@cp
 12352  003C9C  C076  F07A         	movff	strlen@s+1,strlen@cp+1
 12353  003CA0  D003               	goto	l2559
 12354  003CA2  0100               	movlb	0	; () banked
 12355  003CA4  4B79               	infsnz	strlen@cp& (0+255),f,b
 12356  003CA6  2B7A               	incf	(strlen@cp+1)& (0+255),f,b
 12357  003CA8                     l2559:
 12358                           
 12359                           ; BSR set to: 0
 12360  003CA8  C079  FFD9         	movff	strlen@cp,fsr2l
 12361  003CAC  C07A  FFDA         	movff	strlen@cp+1,fsr2h
 12362  003CB0  50DF               	movf	indf2,w,c
 12363  003CB2  A4D8               	btfss	status,2,c
 12364  003CB4  D7F6               	goto	l2560
 12365  003CB6  C075  F077         	movff	strlen@s,??_strlen
 12366  003CBA  C076  F078         	movff	strlen@s+1,??_strlen+1
 12367  003CBE  0100               	movlb	0	; () banked
 12368  003CC0  1F77               	comf	??_strlen& (0+255),f,b
 12369  003CC2  1F78               	comf	(??_strlen+1)& (0+255),f,b
 12370  003CC4  4B77               	infsnz	??_strlen& (0+255),f,b
 12371  003CC6  2B78               	incf	(??_strlen+1)& (0+255),f,b
 12372  003CC8  5179               	movf	strlen@cp& (0+255),w,b
 12373  003CCA  2577               	addwf	??_strlen& (0+255),w,b
 12374  003CCC  6F75               	movwf	?_strlen& (0+255),b
 12375  003CCE  517A               	movf	(strlen@cp+1)& (0+255),w,b
 12376  003CD0  2178               	addwfc	(??_strlen+1)& (0+255),w,b
 12377  003CD2  6F76               	movwf	(?_strlen+1)& (0+255),b
 12378  003CD4  0012               	return	
 12379  003CD6                     __end_of_strlen:
 12380                           	opt stack 0
 12381                           tosu	equ	0xFFF
 12382                           tosh	equ	0xFFE
 12383                           tosl	equ	0xFFD
 12384                           pclath	equ	0xFFA
 12385                           tblptru	equ	0xFF8
 12386                           tblptrh	equ	0xFF7
 12387                           tblptrl	equ	0xFF6
 12388                           tablat	equ	0xFF5
 12389                           prodh	equ	0xFF4
 12390                           prodl	equ	0xFF3
 12391                           intcon	equ	0xFF2
 12392                           intcon2	equ	0xFF1
 12393                           intcon3	equ	0xFF0
 12394                           indf0	equ	0xFEF
 12395                           postinc0	equ	0xFEE
 12396                           plusw0	equ	0xFEB
 12397                           fsr0h	equ	0xFEA
 12398                           fsr0l	equ	0xFE9
 12399                           wreg	equ	0xFE8
 12400                           indf1	equ	0xFE7
 12401                           postinc1	equ	0xFE6
 12402                           postdec1	equ	0xFE5
 12403                           fsr1h	equ	0xFE2
 12404                           fsr1l	equ	0xFE1
 12405                           indf2	equ	0xFDF
 12406                           postinc2	equ	0xFDE
 12407                           postdec2	equ	0xFDD
 12408                           plusw2	equ	0xFDB
 12409                           fsr2h	equ	0xFDA
 12410                           fsr2l	equ	0xFD9
 12411                           status	equ	0xFD8
 12412                           
 12413 ;; *************** function _strcpy *****************
 12414 ;; Defined at:
 12415 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 12416 ;; Parameters:    Size  Location     Type
 12417 ;;  to              2   21[BANK0 ] PTR unsigned char 
 12418 ;;		 -> Term_MainSm@Data(50), 
 12419 ;;  from            2   23[BANK0 ] PTR const unsigned char 
 12420 ;;		 -> STR_1(20), 
 12421 ;; Auto vars:     Size  Location     Type
 12422 ;;  cp              2   25[BANK0 ] PTR unsigned char 
 12423 ;;		 -> Term_MainSm@Data(50), 
 12424 ;; Return value:  Size  Location     Type
 12425 ;;                  2   21[BANK0 ] PTR unsigned char 
 12426 ;; Registers used:
 12427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12428 ;; Tracked objects:
 12429 ;;		On entry : 0/0
 12430 ;;		On exit  : 0/0
 12431 ;;		Unchanged: 0/0
 12432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12433 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12434 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12436 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12437 ;;Total ram usage:        6 bytes
 12438 ;; Hardware stack levels used:    1
 12439 ;; Hardware stack levels required when called:    9
 12440 ;; This function calls:
 12441 ;;		Nothing
 12442 ;; This function is called by:
 12443 ;;		_Term_MainSm
 12444 ;; This function uses a non-reentrant model
 12445 ;;
 12446                           
 12447                           	psect	text54
 12448  003DF8                     __ptext54:
 12449                           	opt stack 0
 12450  003DF8                     _strcpy:
 12451                           	opt stack 17
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;incstack = 0
 12455  003DF8  C075  F079         	movff	strcpy@to,strcpy@cp
 12456  003DFC  C076  F07A         	movff	strcpy@to+1,strcpy@cp+1
 12457  003E00  D005               	goto	l2553
 12458  003E02  0100               	movlb	0	; () banked
 12459  003E04  4B79               	infsnz	strcpy@cp& (0+255),f,b
 12460  003E06  2B7A               	incf	(strcpy@cp+1)& (0+255),f,b
 12461  003E08  4B77               	infsnz	strcpy@from& (0+255),f,b
 12462  003E0A  2B78               	incf	(strcpy@from+1)& (0+255),f,b
 12463  003E0C                     l2553:
 12464                           
 12465                           ; BSR set to: 0
 12466  003E0C  C077  FFF6         	movff	strcpy@from,tblptrl
 12467  003E10  C078  FFF7         	movff	strcpy@from+1,tblptrh
 12468  003E14                     	if	0	;tblptru may be non-zero
 12469  003E14                     	endif
 12470  003E14                     	if	0	;tblptru may be non-zero
 12471  003E14                     	endif
 12472  003E14  C079  FFD9         	movff	strcpy@cp,fsr2l
 12473  003E18  C07A  FFDA         	movff	strcpy@cp+1,fsr2h
 12474  003E1C  0008               	tblrd		*
 12475  003E1E  CFF5 FFDF          	movff	tablat,indf2
 12476  003E22  50DF               	movf	indf2,w,c
 12477  003E24  B4D8               	btfsc	status,2,c
 12478  003E26  0012               	return	
 12479  003E28  D7EC               	goto	l2554
 12480  003E2A                     __end_of_strcpy:
 12481                           	opt stack 0
 12482                           tosu	equ	0xFFF
 12483                           tosh	equ	0xFFE
 12484                           tosl	equ	0xFFD
 12485                           pclath	equ	0xFFA
 12486                           tblptru	equ	0xFF8
 12487                           tblptrh	equ	0xFF7
 12488                           tblptrl	equ	0xFF6
 12489                           tablat	equ	0xFF5
 12490                           prodh	equ	0xFF4
 12491                           prodl	equ	0xFF3
 12492                           intcon	equ	0xFF2
 12493                           intcon2	equ	0xFF1
 12494                           intcon3	equ	0xFF0
 12495                           indf0	equ	0xFEF
 12496                           postinc0	equ	0xFEE
 12497                           plusw0	equ	0xFEB
 12498                           fsr0h	equ	0xFEA
 12499                           fsr0l	equ	0xFE9
 12500                           wreg	equ	0xFE8
 12501                           indf1	equ	0xFE7
 12502                           postinc1	equ	0xFE6
 12503                           postdec1	equ	0xFE5
 12504                           fsr1h	equ	0xFE2
 12505                           fsr1l	equ	0xFE1
 12506                           indf2	equ	0xFDF
 12507                           postinc2	equ	0xFDE
 12508                           postdec2	equ	0xFDD
 12509                           plusw2	equ	0xFDB
 12510                           fsr2h	equ	0xFDA
 12511                           fsr2l	equ	0xFD9
 12512                           status	equ	0xFD8
 12513                           
 12514 ;; *************** function _strcat *****************
 12515 ;; Defined at:
 12516 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 12517 ;; Parameters:    Size  Location     Type
 12518 ;;  to              2   21[BANK0 ] PTR unsigned char 
 12519 ;;		 -> Term_MainSm@Data(50), 
 12520 ;;  from            2   23[BANK0 ] PTR const unsigned char 
 12521 ;;		 -> STR_4(3), STR_3(2), STR_2(2), Term_MainSm@FwkBuildStr(4), 
 12522 ;;		 -> Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), 
 12523 ;; Auto vars:     Size  Location     Type
 12524 ;;  cp              2   25[BANK0 ] PTR unsigned char 
 12525 ;;		 -> Term_MainSm@Data(50), 
 12526 ;; Return value:  Size  Location     Type
 12527 ;;                  2   21[BANK0 ] PTR unsigned char 
 12528 ;; Registers used:
 12529 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12530 ;; Tracked objects:
 12531 ;;		On entry : 0/0
 12532 ;;		On exit  : 0/0
 12533 ;;		Unchanged: 0/0
 12534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12535 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12536 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12538 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12539 ;;Total ram usage:        6 bytes
 12540 ;; Hardware stack levels used:    1
 12541 ;; Hardware stack levels required when called:    9
 12542 ;; This function calls:
 12543 ;;		Nothing
 12544 ;; This function is called by:
 12545 ;;		_Term_MainSm
 12546 ;; This function uses a non-reentrant model
 12547 ;;
 12548                           
 12549                           	psect	text55
 12550  0037C6                     __ptext55:
 12551                           	opt stack 0
 12552  0037C6                     _strcat:
 12553                           	opt stack 17
 12554                           
 12555                           ;incstack = 0
 12556  0037C6  C075  F079         	movff	strcat@to,strcat@cp
 12557  0037CA  C076  F07A         	movff	strcat@to+1,strcat@cp+1
 12558  0037CE  D003               	goto	l2544
 12559  0037D0  0100               	movlb	0	; () banked
 12560  0037D2  4B79               	infsnz	strcat@cp& (0+255),f,b
 12561  0037D4  2B7A               	incf	(strcat@cp+1)& (0+255),f,b
 12562  0037D6                     l2544:
 12563                           
 12564                           ; BSR set to: 0
 12565  0037D6  C079  FFD9         	movff	strcat@cp,fsr2l
 12566  0037DA  C07A  FFDA         	movff	strcat@cp+1,fsr2h
 12567  0037DE  50DF               	movf	indf2,w,c
 12568  0037E0  B4D8               	btfsc	status,2,c
 12569  0037E2  D006               	goto	l2547
 12570  0037E4  D7F5               	goto	l2545
 12571  0037E6  0100               	movlb	0	; () banked
 12572  0037E8  4B79               	infsnz	strcat@cp& (0+255),f,b
 12573  0037EA  2B7A               	incf	(strcat@cp+1)& (0+255),f,b
 12574  0037EC  4B77               	infsnz	strcat@from& (0+255),f,b
 12575  0037EE  2B78               	incf	(strcat@from+1)& (0+255),f,b
 12576  0037F0                     l2547:
 12577                           
 12578                           ; BSR set to: 0
 12579  0037F0  C077  FFF6         	movff	strcat@from,tblptrl
 12580  0037F4  C078  FFF7         	movff	strcat@from+1,tblptrh
 12581  0037F8  6AF8               	clrf	tblptru,c
 12582  0037FA  C079  FFD9         	movff	strcat@cp,fsr2l
 12583  0037FE  C07A  FFDA         	movff	strcat@cp+1,fsr2h
 12584  003802  0E0E               	movlw	(high __ramtop+-1)
 12585  003804  64F7               	cpfsgt	tblptrh,c
 12586  003806  D003               	bra	u6287
 12587  003808  0008               	tblrd		*
 12588  00380A  50F5               	movf	tablat,w,c
 12589  00380C  D005               	bra	u6280
 12590  00380E                     u6287:
 12591  00380E  CFF6 FFE9          	movff	tblptrl,fsr0l
 12592  003812  CFF7 FFEA          	movff	tblptrh,fsr0h
 12593  003816  50EF               	movf	indf0,w,c
 12594  003818                     u6280:
 12595  003818  6EDF               	movwf	indf2,c
 12596  00381A  50DF               	movf	indf2,w,c
 12597  00381C  B4D8               	btfsc	status,2,c
 12598  00381E  0012               	return	
 12599  003820  D7E2               	goto	l2548
 12600  003822                     __end_of_strcat:
 12601                           	opt stack 0
 12602                           tosu	equ	0xFFF
 12603                           tosh	equ	0xFFE
 12604                           tosl	equ	0xFFD
 12605                           pclath	equ	0xFFA
 12606                           tblptru	equ	0xFF8
 12607                           tblptrh	equ	0xFF7
 12608                           tblptrl	equ	0xFF6
 12609                           tablat	equ	0xFF5
 12610                           prodh	equ	0xFF4
 12611                           prodl	equ	0xFF3
 12612                           intcon	equ	0xFF2
 12613                           intcon2	equ	0xFF1
 12614                           intcon3	equ	0xFF0
 12615                           indf0	equ	0xFEF
 12616                           postinc0	equ	0xFEE
 12617                           plusw0	equ	0xFEB
 12618                           fsr0h	equ	0xFEA
 12619                           fsr0l	equ	0xFE9
 12620                           wreg	equ	0xFE8
 12621                           indf1	equ	0xFE7
 12622                           postinc1	equ	0xFE6
 12623                           postdec1	equ	0xFE5
 12624                           fsr1h	equ	0xFE2
 12625                           fsr1l	equ	0xFE1
 12626                           indf2	equ	0xFDF
 12627                           postinc2	equ	0xFDE
 12628                           postdec2	equ	0xFDD
 12629                           plusw2	equ	0xFDB
 12630                           fsr2h	equ	0xFDA
 12631                           fsr2l	equ	0xFD9
 12632                           status	equ	0xFD8
 12633                           
 12634 ;; *************** function _sprintf *****************
 12635 ;; Defined at:
 12636 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 12637 ;; Parameters:    Size  Location     Type
 12638 ;;  sp              2   21[BANK0 ] PTR unsigned char 
 12639 ;;		 -> Term_MainSm@Data(50), 
 12640 ;;  f               2   23[BANK0 ] PTR const unsigned char 
 12641 ;;		 -> STR_5(17), 
 12642 ;; Auto vars:     Size  Location     Type
 12643 ;;  tmpval          4    0        struct .
 12644 ;;  cp              2   31[BANK0 ] PTR const unsigned char 
 12645 ;;		 -> STR_7(7), STR_6(12), 
 12646 ;;  ap              2   28[BANK0 ] PTR void [1]
 12647 ;;		 -> ?_sprintf(2), 
 12648 ;;  len             2    0        unsigned int 
 12649 ;;  val             2    0        unsigned int 
 12650 ;;  c               1   30[BANK0 ] char 
 12651 ;;  flag            1   27[BANK0 ] unsigned char 
 12652 ;;  prec            1    0        char 
 12653 ;; Return value:  Size  Location     Type
 12654 ;;                  2   21[BANK0 ] int 
 12655 ;; Registers used:
 12656 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12657 ;; Tracked objects:
 12658 ;;		On entry : 0/0
 12659 ;;		On exit  : 0/0
 12660 ;;		Unchanged: 0/0
 12661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12662 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12663 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12665 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12666 ;;Total ram usage:       12 bytes
 12667 ;; Hardware stack levels used:    1
 12668 ;; Hardware stack levels required when called:    9
 12669 ;; This function calls:
 12670 ;;		Nothing
 12671 ;; This function is called by:
 12672 ;;		_Term_MainSm
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676                           	psect	text56
 12677  00216A                     __ptext56:
 12678                           	opt stack 0
 12679  00216A                     _sprintf:
 12680                           	opt stack 17
 12681                           
 12682                           ;doprnt.c: 494: va_list ap;
 12683                           ;doprnt.c: 499: signed char c;
 12684                           ;doprnt.c: 506: signed char prec;
 12685                           ;doprnt.c: 508: unsigned char flag;
 12686                           ;doprnt.c: 523: union {
 12687                           ;doprnt.c: 524: unsigned long vd;
 12688                           ;doprnt.c: 525: double integ;
 12689                           ;doprnt.c: 526: } tmpval;
 12690                           ;doprnt.c: 528: unsigned int val;
 12691                           ;doprnt.c: 529: unsigned len;
 12692                           ;doprnt.c: 530: const char * cp;
 12693                           ;doprnt.c: 533: *ap = __va_start();
 12694                           
 12695                           ;incstack = 0
 12696  00216A  0E79               	movlw	low (?_sprintf+4)
 12697  00216C  0100               	movlb	0	; () banked
 12698  00216E  6F7C               	movwf	sprintf@ap& (0+255),b
 12699  002170  0E00               	movlw	high (?_sprintf+4)
 12700  002172  6F7D               	movwf	(sprintf@ap+1)& (0+255),b
 12701                           
 12702                           ;doprnt.c: 536: while(c = *f++) {
 12703  002174  D04E               	goto	l1948
 12704  002176                     
 12705                           ; BSR set to: 0
 12706                           ;doprnt.c: 538: if(c != '%')
 12707                           
 12708                           ; BSR set to: 0
 12709  002176  0E25               	movlw	37
 12710  002178  197E               	xorwf	sprintf@c& (0+255),w,b
 12711  00217A  B4D8               	btfsc	status,2,c
 12712  00217C  D009               	goto	l1938
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;doprnt.c: 540: {
 12716                           ;doprnt.c: 541: ((*sp++ = (c)));
 12717  00217E  C075  FFD9         	movff	sprintf@sp,fsr2l
 12718  002182  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12719  002186  C07E  FFDF         	movff	sprintf@c,indf2
 12720                           
 12721                           ; BSR set to: 0
 12722  00218A  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12723  00218C  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12724                           
 12725                           ;doprnt.c: 542: continue;
 12726  00218E  D041               	goto	l1948
 12727  002190                     l1938:
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;doprnt.c: 543: }
 12731                           ;doprnt.c: 548: flag = 0;
 12732                           
 12733                           ; BSR set to: 0
 12734  002190  0E00               	movlw	0
 12735  002192  6F7B               	movwf	sprintf@flag& (0+255),b
 12736                           
 12737                           ;doprnt.c: 635: switch(c = *f++) {
 12738  002194  D02E               	goto	l1939
 12739  002196                     
 12740                           ; BSR set to: 0
 12741                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 12742                           
 12743                           ; BSR set to: 0
 12744  002196  C07C  FFD9         	movff	sprintf@ap,fsr2l
 12745  00219A  C07D  FFDA         	movff	sprintf@ap+1,fsr2h
 12746  00219E  CFDE F07F          	movff	postinc2,sprintf@cp
 12747  0021A2  CFDD F080          	movff	postdec2,sprintf@cp+1
 12748                           
 12749                           ; BSR set to: 0
 12750  0021A6  0E02               	movlw	2
 12751  0021A8  277C               	addwf	sprintf@ap& (0+255),f,b
 12752  0021AA  0E00               	movlw	0
 12753  0021AC  237D               	addwfc	(sprintf@ap+1)& (0+255),f,b
 12754                           
 12755                           ; BSR set to: 0
 12756                           ;doprnt.c: 740: if(!cp)
 12757  0021AE  517F               	movf	sprintf@cp& (0+255),w,b
 12758  0021B0  1180               	iorwf	(sprintf@cp+1)& (0+255),w,b
 12759  0021B2  A4D8               	btfss	status,2,c
 12760  0021B4  D014               	goto	l1944
 12761                           
 12762                           ; BSR set to: 0
 12763                           ;doprnt.c: 741: cp = "(null)";
 12764  0021B6  0EED               	movlw	low STR_7
 12765  0021B8  6F7F               	movwf	sprintf@cp& (0+255),b
 12766  0021BA  0EFF               	movlw	high STR_7
 12767  0021BC  6F80               	movwf	(sprintf@cp+1)& (0+255),b
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;doprnt.c: 777: while(*cp)
 12771  0021BE  D00F               	goto	l1944
 12772  0021C0                     
 12773                           ; BSR set to: 0
 12774                           ;doprnt.c: 778: ((*sp++ = (*cp++)));
 12775                           
 12776                           ; BSR set to: 0
 12777  0021C0  C07F  FFF6         	movff	sprintf@cp,tblptrl
 12778  0021C4  C080  FFF7         	movff	sprintf@cp+1,tblptrh
 12779  0021C8                     	if	0	;tblptru may be non-zero
 12780  0021C8                     	endif
 12781  0021C8                     	if	0	;tblptru may be non-zero
 12782  0021C8                     	endif
 12783  0021C8  C075  FFD9         	movff	sprintf@sp,fsr2l
 12784  0021CC  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12785  0021D0  0008               	tblrd		*
 12786  0021D2  CFF5 FFDF          	movff	tablat,indf2
 12787                           
 12788                           ; BSR set to: 0
 12789  0021D6  4B7F               	infsnz	sprintf@cp& (0+255),f,b
 12790  0021D8  2B80               	incf	(sprintf@cp+1)& (0+255),f,b
 12791                           
 12792                           ; BSR set to: 0
 12793  0021DA  4B75               	infsnz	sprintf@sp& (0+255),f,b
 12794  0021DC  2B76               	incf	(sprintf@sp+1)& (0+255),f,b
 12795  0021DE                     l1944:
 12796                           
 12797                           ; BSR set to: 0
 12798                           
 12799                           ; BSR set to: 0
 12800  0021DE  C07F  FFF6         	movff	sprintf@cp,tblptrl
 12801  0021E2  C080  FFF7         	movff	sprintf@cp+1,tblptrh
 12802  0021E6                     	if	0	;tblptru may be non-zero
 12803  0021E6                     	endif
 12804  0021E6                     	if	0	;tblptru may be non-zero
 12805  0021E6                     	endif
 12806  0021E6  0008               	tblrd		*
 12807  0021E8  50F5               	movf	tablat,w,c
 12808  0021EA  0900               	iorlw	0
 12809  0021EC  B4D8               	btfsc	status,2,c
 12810  0021EE  D011               	goto	l1948
 12811  0021F0  D7E7               	goto	l1945
 12812  0021F2                     l1939:
 12813                           
 12814                           ; BSR set to: 0
 12815                           
 12816                           ; BSR set to: 0
 12817  0021F2  C077  FFF6         	movff	sprintf@f,tblptrl
 12818  0021F6  C078  FFF7         	movff	sprintf@f+1,tblptrh
 12819  0021FA  4B77               	infsnz	sprintf@f& (0+255),f,b
 12820  0021FC  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 12821  0021FE                     	if	0	;tblptru may be non-zero
 12822  0021FE                     	endif
 12823  0021FE                     	if	0	;tblptru may be non-zero
 12824  0021FE                     	endif
 12825  0021FE  0008               	tblrd		*
 12826  002200  CFF5 F07E          	movff	tablat,sprintf@c
 12827  002204  517E               	movf	sprintf@c& (0+255),w,b
 12828                           
 12829                           ; Switch size 1, requested type "space"
 12830                           ; Number of cases is 2, Range of values is 0 to 115
 12831                           ; switch strategies available:
 12832                           ; Name         Instructions Cycles
 12833                           ; simple_byte            7     4 (average)
 12834                           ;	Chosen strategy is simple_byte
 12835  002206  0A00               	xorlw	0	; case 0
 12836  002208  B4D8               	btfsc	status,2,c
 12837  00220A  D00F               	goto	u6340
 12838  00220C  0A73               	xorlw	115	; case 115
 12839  00220E  B4D8               	btfsc	status,2,c
 12840  002210  D7C2               	goto	l1942
 12841  002212                     l1948:
 12842                           
 12843                           ; BSR set to: 0
 12844                           
 12845                           ; BSR set to: 0
 12846                           
 12847                           ;doprnt.c: 1422: {
 12848                           
 12849                           ; BSR set to: 0
 12850  002212  C077  FFF6         	movff	sprintf@f,tblptrl
 12851  002216  C078  FFF7         	movff	sprintf@f+1,tblptrh
 12852  00221A  4B77               	infsnz	sprintf@f& (0+255),f,b
 12853  00221C  2B78               	incf	(sprintf@f+1)& (0+255),f,b
 12854  00221E                     	if	0	;tblptru may be non-zero
 12855  00221E                     	endif
 12856  00221E                     	if	0	;tblptru may be non-zero
 12857  00221E                     	endif
 12858  00221E  0008               	tblrd		*
 12859  002220  CFF5 F07E          	movff	tablat,sprintf@c
 12860  002224  517E               	movf	sprintf@c& (0+255),w,b
 12861  002226  A4D8               	btfss	status,2,c
 12862  002228  D7A6               	goto	l1937
 12863  00222A                     u6340:
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;doprnt.c: 1538: *sp = 0;
 12867                           
 12868                           ; BSR set to: 0
 12869                           
 12870                           ;doprnt.c: 1469: }
 12871                           ;doprnt.c: 1533: }
 12872                           ;doprnt.c: 1535: alldone:
 12873                           
 12874                           ; BSR set to: 0
 12875  00222A  C075  FFD9         	movff	sprintf@sp,fsr2l
 12876  00222E  C076  FFDA         	movff	sprintf@sp+1,fsr2h
 12877  002232  0E00               	movlw	0
 12878  002234  6EDF               	movwf	indf2,c
 12879  002236  0012               	return	
 12880  002238                     __end_of_sprintf:
 12881                           	opt stack 0
 12882                           tosu	equ	0xFFF
 12883                           tosh	equ	0xFFE
 12884                           tosl	equ	0xFFD
 12885                           pclath	equ	0xFFA
 12886                           tblptru	equ	0xFF8
 12887                           tblptrh	equ	0xFF7
 12888                           tblptrl	equ	0xFF6
 12889                           tablat	equ	0xFF5
 12890                           prodh	equ	0xFF4
 12891                           prodl	equ	0xFF3
 12892                           intcon	equ	0xFF2
 12893                           intcon2	equ	0xFF1
 12894                           intcon3	equ	0xFF0
 12895                           indf0	equ	0xFEF
 12896                           postinc0	equ	0xFEE
 12897                           plusw0	equ	0xFEB
 12898                           fsr0h	equ	0xFEA
 12899                           fsr0l	equ	0xFE9
 12900                           wreg	equ	0xFE8
 12901                           indf1	equ	0xFE7
 12902                           postinc1	equ	0xFE6
 12903                           postdec1	equ	0xFE5
 12904                           fsr1h	equ	0xFE2
 12905                           fsr1l	equ	0xFE1
 12906                           indf2	equ	0xFDF
 12907                           postinc2	equ	0xFDE
 12908                           postdec2	equ	0xFDD
 12909                           plusw2	equ	0xFDB
 12910                           fsr2h	equ	0xFDA
 12911                           fsr2l	equ	0xFD9
 12912                           status	equ	0xFD8
 12913                           
 12914 ;; *************** function _memset *****************
 12915 ;; Defined at:
 12916 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\memset.c"
 12917 ;; Parameters:    Size  Location     Type
 12918 ;;  p1              2   21[BANK0 ] PTR void 
 12919 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12920 ;;  c               2   23[BANK0 ] int 
 12921 ;;  n               2   25[BANK0 ] unsigned int 
 12922 ;; Auto vars:     Size  Location     Type
 12923 ;;  p               2   27[BANK0 ] PTR unsigned char 
 12924 ;;		 -> Term_MainSm@Data(50), USBAlternateInterface(2), BDT(48), UEP1(1), 
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  2   21[BANK0 ] PTR void 
 12927 ;; Registers used:
 12928 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12934 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12935 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12937 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12938 ;;Total ram usage:        8 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; Hardware stack levels required when called:    9
 12941 ;; This function calls:
 12942 ;;		Nothing
 12943 ;; This function is called by:
 12944 ;;		_USBDeviceInit
 12945 ;;		_USBStdSetCfgHandler
 12946 ;;		_Term_MainSm
 12947 ;; This function uses a non-reentrant model
 12948 ;;
 12949                           
 12950                           	psect	text57
 12951  003E8A                     __ptext57:
 12952                           	opt stack 0
 12953  003E8A                     _memset:
 12954                           	opt stack 16
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;incstack = 0
 12958  003E8A  C075  F07B         	movff	memset@p1,memset@p
 12959  003E8E  C076  F07C         	movff	memset@p1+1,memset@p+1
 12960  003E92  D009               	goto	l2418
 12961  003E94                     l6055:
 12962  003E94  C07B  FFD9         	movff	memset@p,fsr2l
 12963  003E98  C07C  FFDA         	movff	memset@p+1,fsr2h
 12964  003E9C  C077  FFDF         	movff	memset@c,indf2
 12965  003EA0  0100               	movlb	0	; () banked
 12966  003EA2  4B7B               	infsnz	memset@p& (0+255),f,b
 12967  003EA4  2B7C               	incf	(memset@p+1)& (0+255),f,b
 12968  003EA6                     l2418:
 12969                           
 12970                           ; BSR set to: 0
 12971  003EA6  0100               	movlb	0	; () banked
 12972  003EA8  0779               	decf	memset@n& (0+255),f,b
 12973  003EAA  A0D8               	btfss	status,0,c
 12974  003EAC  077A               	decf	(memset@n+1)& (0+255),f,b
 12975  003EAE  2979               	incf	memset@n& (0+255),w,b
 12976  003EB0  E1F1               	bnz	l6055
 12977  003EB2  297A               	incf	(memset@n+1)& (0+255),w,b
 12978  003EB4  B4D8               	btfsc	status,2,c
 12979  003EB6  0012               	return	
 12980  003EB8  D7ED               	goto	l2419
 12981  003EBA                     __end_of_memset:
 12982                           	opt stack 0
 12983                           tosu	equ	0xFFF
 12984                           tosh	equ	0xFFE
 12985                           tosl	equ	0xFFD
 12986                           pclath	equ	0xFFA
 12987                           tblptru	equ	0xFF8
 12988                           tblptrh	equ	0xFF7
 12989                           tblptrl	equ	0xFF6
 12990                           tablat	equ	0xFF5
 12991                           prodh	equ	0xFF4
 12992                           prodl	equ	0xFF3
 12993                           intcon	equ	0xFF2
 12994                           intcon2	equ	0xFF1
 12995                           intcon3	equ	0xFF0
 12996                           indf0	equ	0xFEF
 12997                           postinc0	equ	0xFEE
 12998                           plusw0	equ	0xFEB
 12999                           fsr0h	equ	0xFEA
 13000                           fsr0l	equ	0xFE9
 13001                           wreg	equ	0xFE8
 13002                           indf1	equ	0xFE7
 13003                           postinc1	equ	0xFE6
 13004                           postdec1	equ	0xFE5
 13005                           fsr1h	equ	0xFE2
 13006                           fsr1l	equ	0xFE1
 13007                           indf2	equ	0xFDF
 13008                           postinc2	equ	0xFDE
 13009                           postdec2	equ	0xFDD
 13010                           plusw2	equ	0xFDB
 13011                           fsr2h	equ	0xFDA
 13012                           fsr2l	equ	0xFD9
 13013                           status	equ	0xFD8
 13014                           
 13015 ;; *************** function _Terminal *****************
 13016 ;; Defined at:
 13017 ;;		line 422 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/term.c"
 13018 ;; Parameters:    Size  Location     Type
 13019 ;;		None
 13020 ;; Auto vars:     Size  Location     Type
 13021 ;;  UsbRxBuffer   200    0[BANK7 ] unsigned char [200]
 13022 ;;  UsbTxBuffer   200    0[BANK1 ] unsigned char [200]
 13023 ;;  TermTxBuffer   50    0[BANK2 ] unsigned char [50]
 13024 ;;  Index           1   52[BANK0 ] unsigned char 
 13025 ;;  ReceivedByte    1   51[BANK0 ] unsigned char 
 13026 ;; Return value:  Size  Location     Type
 13027 ;;                  1    wreg      void 
 13028 ;; Registers used:
 13029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13030 ;; Tracked objects:
 13031 ;;		On entry : 0/0
 13032 ;;		On exit  : 0/0
 13033 ;;		Unchanged: 0/0
 13034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13036 ;;      Locals:         0       2     200      50       0       0       0       0     200       0       0       0       
      +0       0       0       0
 13037 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13038 ;;      Totals:         0       4     200      50       0       0       0       0     200       0       0       0       
      +0       0       0       0
 13039 ;;Total ram usage:      454 bytes
 13040 ;; Hardware stack levels used:    1
 13041 ;; Hardware stack levels required when called:   12
 13042 ;; This function calls:
 13043 ;;		_I2cSlv_I2cReadMsgSts
 13044 ;;		_I2cSlv_ReceiveI2cMsg
 13045 ;;		_I2cSlv_SendI2cMsg
 13046 ;;		_atoi
 13047 ;;		_getsUSBUSART
 13048 ;;		_itoa
 13049 ;;		_putUSBUSART
 13050 ;;		_strtol
 13051 ;;		_xtoi
 13052 ;; This function is called by:
 13053 ;;		_Term_MainSm
 13054 ;; This function uses a non-reentrant model
 13055 ;;
 13056                           
 13057                           	psect	text58
 13058  0000D0                     __ptext58:
 13059                           	opt stack 0
 13060  0000D0                     _Terminal:
 13061                           	opt stack 14
 13062                           
 13063                           ;term.c: 424: static TermStateType TermState = Term_GetData;
 13064                           ;term.c: 425: UINT8 UsbRxBuffer[200u];
 13065                           ;term.c: 426: UINT8 UsbTxBuffer[200u];
 13066                           ;term.c: 427: UINT8 TermTxBuffer[50u];
 13067                           ;term.c: 428: static UINT8 TermRxBuffer[50u];
 13068                           ;term.c: 429: UINT8 Index;
 13069                           ;term.c: 430: static UINT8 Len[4];
 13070                           ;term.c: 431: static UINT8 PackageLen;
 13071                           ;term.c: 432: static UINT8 Addr[4];
 13072                           ;term.c: 433: static UINT8 SlaveAddr;
 13073                           ;term.c: 434: static PayloadType Payload[20u];
 13074                           ;term.c: 435: UINT8 ReceivedBytes = 0;
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;incstack = 0
 13078  0000D0  0E00               	movlw	0
 13079  0000D2  0100               	movlb	0	; () banked
 13080  0000D4  6F93               	movwf	Terminal@ReceivedBytes& (0+255),b
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;term.c: 437: static UINT8 FormatOption = 0u;
 13084                           ;term.c: 438: static UINT8 EchoOption = 1u;
 13085                           ;term.c: 441: if((USBDeviceState < CONFIGURED_STATE)||(UCONbits.SUSPND==1)) return;
 13086  0000D6  0E1F               	movlw	31
 13087  0000D8  65CA               	cpfsgt	_USBDeviceState& (0+255),b
 13088  0000DA  0012               	return	
 13089                           
 13090                           ; BSR set to: 0
 13091  0000DC  B265               	btfsc	3941,1,c	;volatile
 13092  0000DE  0012               	return	
 13093  0000E0  D205               	goto	l1795
 13094  0000E2                     
 13095                           ;term.c: 448: ReceivedBytes = getsUSBUSART(UsbRxBuffer,200u);
 13096                           
 13097                           ; BSR set to: 0
 13098  0000E2  0E00               	movlw	low Terminal@UsbRxBuffer
 13099  0000E4  0100               	movlb	0	; () banked
 13100  0000E6  6F7C               	movwf	getsUSBUSART@buffer& (0+255),b
 13101  0000E8  0E07               	movlw	high Terminal@UsbRxBuffer
 13102  0000EA  6F7D               	movwf	(getsUSBUSART@buffer+1)& (0+255),b
 13103  0000EC  0EC8               	movlw	200
 13104  0000EE  6F7E               	movwf	getsUSBUSART@len& (0+255),b
 13105  0000F0  ECD7  F017         	call	_getsUSBUSART	;wreg free
 13106  0000F4  0100               	movlb	0	; () banked
 13107  0000F6  6F93               	movwf	Terminal@ReceivedBytes& (0+255),b
 13108                           
 13109                           ; BSR set to: 0
 13110                           ;term.c: 451: if (ReceivedBytes > 0)
 13111  0000F8  5193               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13112  0000FA  B4D8               	btfsc	status,2,c
 13113  0000FC  0012               	return	
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;term.c: 452: {
 13117                           ;term.c: 454: if (EchoOption == 1u)
 13118  0000FE  0102               	movlb	2	; () banked
 13119  000100  0569               	decf	Terminal@EchoOption& (0+255),w,b
 13120  000102  A4D8               	btfss	status,2,c
 13121  000104  D026               	goto	l1799
 13122                           
 13123                           ; BSR set to: 2
 13124                           ;term.c: 455: {
 13125                           ;term.c: 457: if((cdc_trf_state == 0))
 13126  000106  0100               	movlb	0	; () banked
 13127  000108  51BB               	movf	_cdc_trf_state& (0+255),w,b
 13128  00010A  A4D8               	btfss	status,2,c
 13129  00010C  D022               	goto	l1799
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;term.c: 458: {
 13133                           ;term.c: 459: UsbRxBuffer[ReceivedBytes] = '\r';
 13134  00010E  5193               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13135  000110  0D01               	mullw	1
 13136  000112  0E00               	movlw	low Terminal@UsbRxBuffer
 13137  000114  24F3               	addwf	prodl,w,c
 13138  000116  6ED9               	movwf	fsr2l,c
 13139  000118  0E07               	movlw	high Terminal@UsbRxBuffer
 13140  00011A  20F4               	addwfc	prodh,w,c
 13141  00011C  6EDA               	movwf	fsr2h,c
 13142  00011E  0E0D               	movlw	13
 13143  000120  6EDF               	movwf	indf2,c
 13144                           
 13145                           ; BSR set to: 0
 13146                           ;term.c: 460: UsbRxBuffer[ReceivedBytes + 1] = '\n';
 13147  000122  5193               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13148  000124  6F91               	movwf	??_Terminal& (0+255),b
 13149  000126  6B92               	clrf	(??_Terminal+1)& (0+255),b
 13150  000128  0E01               	movlw	1
 13151  00012A  2791               	addwf	??_Terminal& (0+255),f,b
 13152  00012C  0E00               	movlw	0
 13153  00012E  2392               	addwfc	(??_Terminal+1)& (0+255),f,b
 13154  000130  0E00               	movlw	low Terminal@UsbRxBuffer
 13155  000132  2591               	addwf	??_Terminal& (0+255),w,b
 13156  000134  6ED9               	movwf	fsr2l,c
 13157  000136  0E07               	movlw	high Terminal@UsbRxBuffer
 13158  000138  2192               	addwfc	(??_Terminal+1)& (0+255),w,b
 13159  00013A  6EDA               	movwf	fsr2h,c
 13160  00013C  0E0A               	movlw	10
 13161  00013E  6EDF               	movwf	indf2,c
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;term.c: 461: putUSBUSART(UsbRxBuffer,ReceivedBytes + 2);
 13165  000140  0E00               	movlw	low Terminal@UsbRxBuffer
 13166  000142  6F7B               	movwf	putUSBUSART@data& (0+255),b
 13167  000144  0E07               	movlw	high Terminal@UsbRxBuffer
 13168  000146  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 13169  000148  5193               	movf	Terminal@ReceivedBytes& (0+255),w,b
 13170  00014A  0F02               	addlw	2
 13171  00014C  6F7D               	movwf	putUSBUSART@length& (0+255),b
 13172  00014E  ECB9  F020         	call	_putUSBUSART	;wreg free
 13173  000152                     l1799:
 13174                           
 13175                           ;term.c: 462: }
 13176                           ;term.c: 463: }
 13177                           ;term.c: 466: if ((UsbRxBuffer[0u] == 'S') &&
 13178                           ;term.c: 467: (UsbRxBuffer[0u + 1u] == 'O') &&
 13179                           ;term.c: 468: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13180  000152  0E53               	movlw	83
 13181  000154  0107               	movlb	7	; () banked
 13182  000156  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13183  000158  A4D8               	btfss	status,2,c
 13184  00015A  D043               	goto	l1800
 13185                           
 13186                           ; BSR set to: 7
 13187  00015C  0E4F               	movlw	79
 13188  00015E  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13189  000160  A4D8               	btfss	status,2,c
 13190  000162  D03F               	goto	l1800
 13191                           
 13192                           ; BSR set to: 7
 13193  000164  0E3A               	movlw	58
 13194  000166  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13195  000168  A4D8               	btfss	status,2,c
 13196  00016A  D03B               	goto	l1800
 13197                           
 13198                           ; BSR set to: 7
 13199                           ;term.c: 469: {
 13200                           ;term.c: 471: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'G') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13201  00016C  0E47               	movlw	71
 13202  00016E  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13203  000170  A4D8               	btfss	status,2,c
 13204  000172  0012               	return	
 13205                           
 13206                           ; BSR set to: 7
 13207  000174  0E3A               	movlw	58
 13208  000176  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13209  000178  A4D8               	btfss	status,2,c
 13210  00017A  0012               	return	
 13211                           
 13212                           ; BSR set to: 7
 13213                           ;term.c: 472: {
 13214                           ;term.c: 474: if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'D') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 2u + 1] == 'F'))
 13215  00017C  0E44               	movlw	68
 13216  00017E  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13217  000180  A4D8               	btfss	status,2,c
 13218  000182  D015               	goto	l1802
 13219                           
 13220                           ; BSR set to: 7
 13221  000184  0E46               	movlw	70
 13222  000186  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13223  000188  A4D8               	btfss	status,2,c
 13224  00018A  D011               	goto	l1802
 13225                           
 13226                           ; BSR set to: 7
 13227                           ;term.c: 475: {
 13228                           ;term.c: 476: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'A')
 13229  00018C  0E41               	movlw	65
 13230  00018E  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13231  000190  A4D8               	btfss	status,2,c
 13232  000192  D004               	goto	l1803
 13233                           
 13234                           ; BSR set to: 7
 13235                           ;term.c: 477: {
 13236                           ;term.c: 478: FormatOption = 1u;
 13237  000194  0E01               	movlw	1
 13238  000196  0102               	movlb	2	; () banked
 13239  000198  6F08               	movwf	Terminal@FormatOption& (0+255),b
 13240                           
 13241                           ;term.c: 479: }
 13242  00019A  0012               	return	
 13243  00019C                     l1803:
 13244                           
 13245                           ;term.c: 480: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == 'B')
 13246                           
 13247                           ; BSR set to: 2
 13248  00019C  0E42               	movlw	66
 13249  00019E  0107               	movlb	7	; () banked
 13250  0001A0  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13251  0001A2  A4D8               	btfss	status,2,c
 13252  0001A4  0012               	return	
 13253                           
 13254                           ; BSR set to: 7
 13255                           ;term.c: 481: {
 13256                           ;term.c: 482: FormatOption = 0u;
 13257  0001A6  0E00               	movlw	0
 13258  0001A8  0102               	movlb	2	; () banked
 13259  0001AA  6F08               	movwf	Terminal@FormatOption& (0+255),b
 13260                           
 13261                           ; BSR set to: 2
 13262                           ;term.c: 483: }
 13263                           ;term.c: 484: }
 13264                           
 13265                           ; BSR set to: 2
 13266  0001AC  0012               	return	
 13267  0001AE                     l1802:
 13268                           
 13269                           ;term.c: 486: else if ((UsbRxBuffer[0u + 1u + 1u + 1u + 2u] == 'E') && (UsbRxBuffer[0u +
      +                           1u + 1u + 1u + 2u + 1] == 'M'))
 13270                           
 13271                           ; BSR set to: 2
 13272  0001AE  0E45               	movlw	69
 13273  0001B0  0107               	movlb	7	; () banked
 13274  0001B2  1905               	xorwf	(Terminal@UsbRxBuffer+5)& (0+255),w,b
 13275  0001B4  A4D8               	btfss	status,2,c
 13276  0001B6  0012               	return	
 13277                           
 13278                           ; BSR set to: 7
 13279  0001B8  0E4D               	movlw	77
 13280  0001BA  1906               	xorwf	(Terminal@UsbRxBuffer+6)& (0+255),w,b
 13281  0001BC  A4D8               	btfss	status,2,c
 13282  0001BE  0012               	return	
 13283                           
 13284                           ; BSR set to: 7
 13285                           ;term.c: 487: {
 13286                           ;term.c: 488: if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '1')
 13287  0001C0  0E31               	movlw	49
 13288  0001C2  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13289  0001C4  A4D8               	btfss	status,2,c
 13290  0001C6  D004               	goto	l1808
 13291                           
 13292                           ; BSR set to: 7
 13293                           ;term.c: 489: {
 13294                           ;term.c: 490: EchoOption = 1u;
 13295  0001C8  0E01               	movlw	1
 13296  0001CA  0102               	movlb	2	; () banked
 13297  0001CC  6F69               	movwf	Terminal@EchoOption& (0+255),b
 13298                           
 13299                           ;term.c: 491: }
 13300  0001CE  0012               	return	
 13301  0001D0                     l1808:
 13302                           
 13303                           ;term.c: 492: else if (UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u] == '0')
 13304                           
 13305                           ; BSR set to: 2
 13306  0001D0  0E30               	movlw	48
 13307  0001D2  0107               	movlb	7	; () banked
 13308  0001D4  1908               	xorwf	(Terminal@UsbRxBuffer+8)& (0+255),w,b
 13309  0001D6  A4D8               	btfss	status,2,c
 13310  0001D8  0012               	return	
 13311                           
 13312                           ; BSR set to: 7
 13313                           ;term.c: 493: {
 13314                           ;term.c: 494: EchoOption = 0u;
 13315  0001DA  0E00               	movlw	0
 13316  0001DC  0102               	movlb	2	; () banked
 13317  0001DE  6F69               	movwf	Terminal@EchoOption& (0+255),b
 13318                           
 13319                           ; BSR set to: 2
 13320                           ;term.c: 500: }
 13321                           ;term.c: 501: }
 13322                           ;term.c: 502: }
 13323                           
 13324                           ; BSR set to: 2
 13325                           
 13326                           ; BSR set to: 2
 13327                           
 13328                           ;term.c: 497: else
 13329                           ;term.c: 498: {
 13330                           
 13331                           ; BSR set to: 2
 13332                           
 13333                           ; BSR set to: 2
 13334                           ;term.c: 495: }
 13335                           ;term.c: 496: }
 13336                           
 13337                           ; BSR set to: 2
 13338  0001E0  0012               	return	
 13339  0001E2                     l1800:
 13340                           
 13341                           ;term.c: 503: else if ((UsbRxBuffer[0u] == 'S') &&
 13342                           ;term.c: 504: (UsbRxBuffer[0u + 1u] == 'B') &&
 13343                           ;term.c: 505: (UsbRxBuffer[0u + 1u + 1u] == ':'))
 13344                           
 13345                           ; BSR set to: 2
 13346  0001E2  0E53               	movlw	83
 13347  0001E4  0107               	movlb	7	; () banked
 13348  0001E6  1900               	xorwf	Terminal@UsbRxBuffer& (0+255),w,b
 13349  0001E8  A4D8               	btfss	status,2,c
 13350  0001EA  0012               	return	
 13351                           
 13352                           ; BSR set to: 7
 13353  0001EC  0E42               	movlw	66
 13354  0001EE  1901               	xorwf	(Terminal@UsbRxBuffer+1)& (0+255),w,b
 13355  0001F0  A4D8               	btfss	status,2,c
 13356  0001F2  0012               	return	
 13357                           
 13358                           ; BSR set to: 7
 13359  0001F4  0E3A               	movlw	58
 13360  0001F6  1902               	xorwf	(Terminal@UsbRxBuffer+2)& (0+255),w,b
 13361  0001F8  A4D8               	btfss	status,2,c
 13362  0001FA  0012               	return	
 13363                           
 13364                           ; BSR set to: 7
 13365                           ;term.c: 506: {
 13366                           ;term.c: 507: if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'W') && (UsbRxBuffer[0u + 1u + 1u +
      +                           1u + 1] == ':'))
 13367  0001FC  0E57               	movlw	87
 13368  0001FE  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13369  000200  A4D8               	btfss	status,2,c
 13370  000202  D091               	goto	l1814
 13371                           
 13372                           ; BSR set to: 7
 13373  000204  0E3A               	movlw	58
 13374  000206  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13375  000208  A4D8               	btfss	status,2,c
 13376  00020A  D08D               	goto	l1814
 13377                           
 13378                           ; BSR set to: 7
 13379                           ;term.c: 508: {
 13380                           ;term.c: 510: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13381  00020C  C705  F233         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13382                           
 13383                           ;term.c: 511: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13384  000210  C706  F234         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13385                           
 13386                           ;term.c: 513: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13387  000214  C708  F22F         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13388                           
 13389                           ;term.c: 514: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13390  000218  C709  F230         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13391                           
 13392                           ; BSR set to: 7
 13393                           ;term.c: 516: PackageLen = atoi((void*)Len);
 13394  00021C  0E33               	movlw	low Terminal@Len
 13395  00021E  0100               	movlb	0	; () banked
 13396  000220  6F7B               	movwf	atoi@s& (0+255),b
 13397  000222  0E02               	movlw	high Terminal@Len
 13398  000224  6F7C               	movwf	(atoi@s+1)& (0+255),b
 13399  000226  EC49  F010         	call	_atoi	;wreg free
 13400  00022A  0100               	movlb	0	; () banked
 13401  00022C  517B               	movf	?_atoi& (0+255),w,b
 13402  00022E  0102               	movlb	2	; () banked
 13403  000230  6F0A               	movwf	Terminal@PackageLen& (0+255),b
 13404                           
 13405                           ; BSR set to: 2
 13406                           ;term.c: 517: SlaveAddr = xtoi((void*)Addr);
 13407  000232  0E2F               	movlw	low Terminal@Addr
 13408  000234  0100               	movlb	0	; () banked
 13409  000236  6F7B               	movwf	xtoi@s& (0+255),b
 13410  000238  0E02               	movlw	high Terminal@Addr
 13411  00023A  6F7C               	movwf	(xtoi@s+1)& (0+255),b
 13412  00023C  EC64  F00F         	call	_xtoi	;wreg free
 13413  000240  0100               	movlb	0	; () banked
 13414  000242  517B               	movf	?_xtoi& (0+255),w,b
 13415  000244  0102               	movlb	2	; () banked
 13416  000246  6F09               	movwf	Terminal@SlaveAddr& (0+255),b
 13417                           
 13418                           ; BSR set to: 2
 13419                           ;term.c: 519: for (Index = 0; Index <= PackageLen; Index++)
 13420  000248  0E00               	movlw	0
 13421  00024A  0100               	movlb	0	; () banked
 13422  00024C  6F94               	movwf	Terminal@Index& (0+255),b
 13423  00024E  D032               	goto	l1815
 13424  000250                     
 13425                           ;term.c: 520: {
 13426                           ;term.c: 521: Payload[Index].Byte[0] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u];
 13427                           
 13428                           ; BSR set to: 0
 13429  000250  0100               	movlb	0	; () banked
 13430  000252  5194               	movf	Terminal@Index& (0+255),w,b
 13431  000254  0D02               	mullw	2
 13432  000256  0E0B               	movlw	11
 13433  000258  26F3               	addwf	prodl,f,c
 13434  00025A  0E00               	movlw	0
 13435  00025C  22F4               	addwfc	prodh,f,c
 13436  00025E  0E00               	movlw	low Terminal@UsbRxBuffer
 13437  000260  24F3               	addwf	prodl,w,c
 13438  000262  6ED9               	movwf	fsr2l,c
 13439  000264  0E07               	movlw	high Terminal@UsbRxBuffer
 13440  000266  20F4               	addwfc	prodh,w,c
 13441  000268  6EDA               	movwf	fsr2h,c
 13442  00026A  5194               	movf	Terminal@Index& (0+255),w,b
 13443  00026C  0D04               	mullw	4
 13444  00026E  0E40               	movlw	low Terminal@Payload
 13445  000270  24F3               	addwf	prodl,w,c
 13446  000272  6EE1               	movwf	fsr1l,c
 13447  000274  0E04               	movlw	high Terminal@Payload
 13448  000276  20F4               	addwfc	prodh,w,c
 13449  000278  6EE2               	movwf	fsr1h,c
 13450  00027A  CFDF FFE7          	movff	indf2,indf1
 13451                           
 13452                           ;term.c: 522: Payload[Index].Byte[1] = UsbRxBuffer[2*Index + 0u + 1u + 1u + 1u + 2u + 3u
      +                           + 3u + 1];
 13453  00027E  5194               	movf	Terminal@Index& (0+255),w,b
 13454  000280  0D02               	mullw	2
 13455  000282  0E0C               	movlw	12
 13456  000284  26F3               	addwf	prodl,f,c
 13457  000286  0E00               	movlw	0
 13458  000288  22F4               	addwfc	prodh,f,c
 13459  00028A  0E00               	movlw	low Terminal@UsbRxBuffer
 13460  00028C  24F3               	addwf	prodl,w,c
 13461  00028E  6ED9               	movwf	fsr2l,c
 13462  000290  0E07               	movlw	high Terminal@UsbRxBuffer
 13463  000292  20F4               	addwfc	prodh,w,c
 13464  000294  6EDA               	movwf	fsr2h,c
 13465  000296  5194               	movf	Terminal@Index& (0+255),w,b
 13466  000298  0D04               	mullw	4
 13467  00029A  0E01               	movlw	1
 13468  00029C  26F3               	addwf	prodl,f,c
 13469  00029E  0E00               	movlw	0
 13470  0002A0  22F4               	addwfc	prodh,f,c
 13471  0002A2  0E40               	movlw	low Terminal@Payload
 13472  0002A4  24F3               	addwf	prodl,w,c
 13473  0002A6  6EE1               	movwf	fsr1l,c
 13474  0002A8  0E04               	movlw	high Terminal@Payload
 13475  0002AA  20F4               	addwfc	prodh,w,c
 13476  0002AC  6EE2               	movwf	fsr1h,c
 13477  0002AE  CFDF FFE7          	movff	indf2,indf1
 13478                           
 13479                           ; BSR set to: 0
 13480  0002B2  2B94               	incf	Terminal@Index& (0+255),f,b
 13481  0002B4                     l1815:
 13482                           
 13483                           ; BSR set to: 0
 13484                           
 13485                           ; BSR set to: 0
 13486  0002B4  5194               	movf	Terminal@Index& (0+255),w,b
 13487  0002B6  0102               	movlb	2	; () banked
 13488  0002B8  5D0A               	subwf	Terminal@PackageLen& (0+255),w,b
 13489  0002BA  B0D8               	btfsc	status,0,c
 13490  0002BC  D7C9               	goto	l1816
 13491                           
 13492                           ; BSR set to: 2
 13493                           ;term.c: 523: }
 13494                           ;term.c: 525: for (Index = 0; Index <= PackageLen; Index++)
 13495                           
 13496                           ; BSR set to: 2
 13497  0002BE  0E00               	movlw	0
 13498  0002C0  0100               	movlb	0	; () banked
 13499  0002C2  6F94               	movwf	Terminal@Index& (0+255),b
 13500  0002C4  D01F               	goto	l1818
 13501  0002C6                     
 13502                           ;term.c: 526: {
 13503                           ;term.c: 530: TermTxBuffer[Index] = strtol((void*)&(Payload[Index]), (0), 16);
 13504                           
 13505                           ; BSR set to: 0
 13506  0002C6  0100               	movlb	0	; () banked
 13507  0002C8  5194               	movf	Terminal@Index& (0+255),w,b
 13508  0002CA  0D04               	mullw	4
 13509  0002CC  0E40               	movlw	low Terminal@Payload
 13510  0002CE  24F3               	addwf	prodl,w,c
 13511  0002D0  6F81               	movwf	strtol@s& (0+255),b
 13512  0002D2  0E04               	movlw	high Terminal@Payload
 13513  0002D4  20F4               	addwfc	prodh,w,c
 13514  0002D6  6F82               	movwf	(strtol@s+1)& (0+255),b
 13515  0002D8  0E00               	movlw	0
 13516  0002DA  6F83               	movwf	strtol@endptr& (0+255),b
 13517  0002DC  0E00               	movlw	0
 13518  0002DE  6F84               	movwf	(strtol@endptr+1)& (0+255),b
 13519  0002E0  0E00               	movlw	0
 13520  0002E2  6F86               	movwf	(strtol@base+1)& (0+255),b
 13521  0002E4  0E10               	movlw	16
 13522  0002E6  6F85               	movwf	strtol@base& (0+255),b
 13523  0002E8  EC2B  F006         	call	_strtol	;wreg free
 13524  0002EC  0100               	movlb	0	; () banked
 13525  0002EE  5194               	movf	Terminal@Index& (0+255),w,b
 13526  0002F0  0D01               	mullw	1
 13527  0002F2  0E37               	movlw	low Terminal@TermTxBuffer
 13528  0002F4  24F3               	addwf	prodl,w,c
 13529  0002F6  6ED9               	movwf	fsr2l,c
 13530  0002F8  0E02               	movlw	high Terminal@TermTxBuffer
 13531  0002FA  20F4               	addwfc	prodh,w,c
 13532  0002FC  6EDA               	movwf	fsr2h,c
 13533  0002FE  C081  FFDF         	movff	?_strtol,indf2
 13534                           
 13535                           ; BSR set to: 0
 13536  000302  2B94               	incf	Terminal@Index& (0+255),f,b
 13537  000304                     l1818:
 13538                           
 13539                           ; BSR set to: 0
 13540                           
 13541                           ; BSR set to: 0
 13542  000304  5194               	movf	Terminal@Index& (0+255),w,b
 13543  000306  0102               	movlb	2	; () banked
 13544  000308  5D0A               	subwf	Terminal@PackageLen& (0+255),w,b
 13545  00030A  B0D8               	btfsc	status,0,c
 13546  00030C  D7DC               	goto	l1819
 13547                           
 13548                           ; BSR set to: 2
 13549                           ;term.c: 532: }
 13550                           ;term.c: 535: I2cSlv_SendI2cMsg(TermTxBuffer, SlaveAddr, PackageLen);
 13551                           
 13552                           ; BSR set to: 2
 13553  00030E  0E37               	movlw	low Terminal@TermTxBuffer
 13554  000310  0100               	movlb	0	; () banked
 13555  000312  6F78               	movwf	I2cSlv_SendI2cMsg@TxBuffer& (0+255),b
 13556  000314  0E02               	movlw	high Terminal@TermTxBuffer
 13557  000316  6F79               	movwf	(I2cSlv_SendI2cMsg@TxBuffer+1)& (0+255),b
 13558  000318  C209  F07A         	movff	Terminal@SlaveAddr,I2cSlv_SendI2cMsg@SlaveAddr
 13559  00031C  C20A  F07B         	movff	Terminal@PackageLen,I2cSlv_SendI2cMsg@DataLenght
 13560  000320  EC6B  F01E         	call	_I2cSlv_SendI2cMsg	;wreg free
 13561                           
 13562                           ;term.c: 536: }
 13563  000324  0012               	return	
 13564  000326                     l1814:
 13565                           
 13566                           ;term.c: 537: else if ((UsbRxBuffer[0u + 1u + 1u + 1u] == 'R') && (UsbRxBuffer[0u + 1u +
      +                           1u + 1u + 1] == ':'))
 13567  000326  0E52               	movlw	82
 13568  000328  0107               	movlb	7	; () banked
 13569  00032A  1903               	xorwf	(Terminal@UsbRxBuffer+3)& (0+255),w,b
 13570  00032C  A4D8               	btfss	status,2,c
 13571  00032E  0012               	return	
 13572                           
 13573                           ; BSR set to: 7
 13574  000330  0E3A               	movlw	58
 13575  000332  1904               	xorwf	(Terminal@UsbRxBuffer+4)& (0+255),w,b
 13576  000334  A4D8               	btfss	status,2,c
 13577  000336  0012               	return	
 13578                           
 13579                           ; BSR set to: 7
 13580                           ;term.c: 538: {
 13581                           ;term.c: 540: Len[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u];
 13582  000338  C705  F233         	movff	Terminal@UsbRxBuffer+5,Terminal@Len
 13583                           
 13584                           ;term.c: 541: Len[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 1];
 13585  00033C  C706  F234         	movff	Terminal@UsbRxBuffer+6,Terminal@Len+1
 13586                           
 13587                           ;term.c: 543: Addr[0] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u];
 13588  000340  C708  F22F         	movff	Terminal@UsbRxBuffer+8,Terminal@Addr
 13589                           
 13590                           ;term.c: 544: Addr[1] = UsbRxBuffer[0u + 1u + 1u + 1u + 2u + 3u + 1];
 13591  000344  C709  F230         	movff	Terminal@UsbRxBuffer+9,Terminal@Addr+1
 13592                           
 13593                           ; BSR set to: 7
 13594                           ;term.c: 546: PackageLen = atoi((void*)Len);
 13595  000348  0E33               	movlw	low Terminal@Len
 13596  00034A  0100               	movlb	0	; () banked
 13597  00034C  6F7B               	movwf	atoi@s& (0+255),b
 13598  00034E  0E02               	movlw	high Terminal@Len
 13599  000350  6F7C               	movwf	(atoi@s+1)& (0+255),b
 13600  000352  EC49  F010         	call	_atoi	;wreg free
 13601  000356  0100               	movlb	0	; () banked
 13602  000358  517B               	movf	?_atoi& (0+255),w,b
 13603  00035A  0102               	movlb	2	; () banked
 13604  00035C  6F0A               	movwf	Terminal@PackageLen& (0+255),b
 13605                           
 13606                           ; BSR set to: 2
 13607                           ;term.c: 547: SlaveAddr = xtoi((void*)Addr);
 13608  00035E  0E2F               	movlw	low Terminal@Addr
 13609  000360  0100               	movlb	0	; () banked
 13610  000362  6F7B               	movwf	xtoi@s& (0+255),b
 13611  000364  0E02               	movlw	high Terminal@Addr
 13612  000366  6F7C               	movwf	(xtoi@s+1)& (0+255),b
 13613  000368  EC64  F00F         	call	_xtoi	;wreg free
 13614  00036C  0100               	movlb	0	; () banked
 13615  00036E  517B               	movf	?_xtoi& (0+255),w,b
 13616  000370  0102               	movlb	2	; () banked
 13617  000372  6F09               	movwf	Terminal@SlaveAddr& (0+255),b
 13618                           
 13619                           ; BSR set to: 2
 13620                           ;term.c: 550: I2cSlv_ReceiveI2cMsg(TermRxBuffer, SlaveAddr, PackageLen);
 13621  000374  0E90               	movlw	low Terminal@TermRxBuffer
 13622  000376  0100               	movlb	0	; () banked
 13623  000378  6F78               	movwf	I2cSlv_ReceiveI2cMsg@RxBuffer& (0+255),b
 13624  00037A  0E04               	movlw	high Terminal@TermRxBuffer
 13625  00037C  6F79               	movwf	(I2cSlv_ReceiveI2cMsg@RxBuffer+1)& (0+255),b
 13626  00037E  C209  F07A         	movff	Terminal@SlaveAddr,I2cSlv_ReceiveI2cMsg@SlaveAddr
 13627  000382  C20A  F07B         	movff	Terminal@PackageLen,I2cSlv_ReceiveI2cMsg@DataLenght
 13628  000386  EC2C  F01E         	call	_I2cSlv_ReceiveI2cMsg	;wreg free
 13629                           
 13630                           ;term.c: 553: TermState = Term_PrepSlvI2cResp;
 13631  00038A  0E01               	movlw	1
 13632  00038C  0102               	movlb	2	; () banked
 13633  00038E  6F0B               	movwf	Terminal@TermState& (0+255),b
 13634                           
 13635                           ; BSR set to: 2
 13636                           ;term.c: 561: }
 13637                           ;term.c: 593: }
 13638                           ;term.c: 594: break;
 13639                           
 13640                           ; BSR set to: 2
 13641                           
 13642                           ; BSR set to: 2
 13643                           
 13644                           ; BSR set to: 2
 13645                           
 13646                           ;term.c: 559: {
 13647                           
 13648                           ; BSR set to: 2
 13649                           
 13650                           ; BSR set to: 2
 13651                           
 13652                           ; BSR set to: 2
 13653                           
 13654                           ; BSR set to: 2
 13655                           
 13656                           ; BSR set to: 2
 13657                           ;term.c: 554: }
 13658                           ;term.c: 555: }
 13659                           
 13660                           ; BSR set to: 2
 13661  000390  0012               	return	
 13662  000392                     
 13663                           ; BSR set to: 2
 13664                           ;term.c: 598: if((cdc_trf_state == 0))
 13665                           
 13666                           ; BSR set to: 2
 13667  000392  0100               	movlb	0	; () banked
 13668  000394  51BB               	movf	_cdc_trf_state& (0+255),w,b
 13669  000396  A4D8               	btfss	status,2,c
 13670  000398  0012               	return	
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;term.c: 599: {
 13674                           ;term.c: 600: UsbTxBuffer[0] = 'S';
 13675  00039A  0E53               	movlw	83
 13676  00039C  0101               	movlb	1	; () banked
 13677  00039E  6F00               	movwf	Terminal@UsbTxBuffer& (0+255),b
 13678                           
 13679                           ;term.c: 601: UsbTxBuffer[1] = 'B';
 13680  0003A0  0E42               	movlw	66
 13681  0003A2  6F01               	movwf	(Terminal@UsbTxBuffer+1)& (0+255),b
 13682                           
 13683                           ;term.c: 602: UsbTxBuffer[2] = '[';
 13684  0003A4  0E5B               	movlw	91
 13685  0003A6  6F02               	movwf	(Terminal@UsbTxBuffer+2)& (0+255),b
 13686                           
 13687                           ; BSR set to: 1
 13688                           ;term.c: 603: UsbTxBuffer[3] = Addr[0];
 13689  0003A8  C22F  F103         	movff	Terminal@Addr,Terminal@UsbTxBuffer+3
 13690                           
 13691                           ; BSR set to: 1
 13692                           ;term.c: 604: UsbTxBuffer[4] = Addr[1];
 13693  0003AC  C230  F104         	movff	Terminal@Addr+1,Terminal@UsbTxBuffer+4
 13694                           
 13695                           ;term.c: 605: UsbTxBuffer[5] = ']';
 13696  0003B0  0E5D               	movlw	93
 13697  0003B2  6F05               	movwf	(Terminal@UsbTxBuffer+5)& (0+255),b
 13698                           
 13699                           ;term.c: 606: UsbTxBuffer[6] = ':';
 13700  0003B4  0E3A               	movlw	58
 13701  0003B6  6F06               	movwf	(Terminal@UsbTxBuffer+6)& (0+255),b
 13702                           
 13703                           ; BSR set to: 1
 13704                           ;term.c: 607: putUSBUSART(UsbTxBuffer,7);
 13705  0003B8  0E00               	movlw	low Terminal@UsbTxBuffer
 13706  0003BA  0100               	movlb	0	; () banked
 13707  0003BC  6F7B               	movwf	putUSBUSART@data& (0+255),b
 13708  0003BE  0E01               	movlw	high Terminal@UsbTxBuffer
 13709  0003C0  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 13710  0003C2  0E07               	movlw	7
 13711  0003C4  6F7D               	movwf	putUSBUSART@length& (0+255),b
 13712  0003C6  ECB9  F020         	call	_putUSBUSART	;wreg free
 13713                           
 13714                           ;term.c: 610: TermState = Term_ReadSlvI2cData;
 13715  0003CA  0E02               	movlw	2
 13716  0003CC  0102               	movlb	2	; () banked
 13717  0003CE  6F0B               	movwf	Terminal@TermState& (0+255),b
 13718                           
 13719                           ; BSR set to: 2
 13720                           ;term.c: 611: }
 13721                           ;term.c: 612: break;
 13722  0003D0  0012               	return	
 13723  0003D2                     
 13724                           ; BSR set to: 2
 13725                           ;term.c: 616: if (I2cSlv_I2cReadMsgSts() == MessageReceived)
 13726                           
 13727                           ; BSR set to: 2
 13728  0003D2  EC78  F020         	call	_I2cSlv_I2cReadMsgSts	;wreg free
 13729  0003D6  06E8               	decf	wreg,f,c
 13730  0003D8  A4D8               	btfss	status,2,c
 13731  0003DA  0012               	return	
 13732                           
 13733                           ;term.c: 617: {
 13734                           ;term.c: 619: if (FormatOption == 1u)
 13735  0003DC  0102               	movlb	2	; () banked
 13736  0003DE  0508               	decf	Terminal@FormatOption& (0+255),w,b
 13737  0003E0  A4D8               	btfss	status,2,c
 13738  0003E2  D027               	goto	u9090
 13739                           
 13740                           ; BSR set to: 2
 13741                           ;term.c: 620: {
 13742                           ;term.c: 622: for (Index = 0; Index <= PackageLen; Index++)
 13743  0003E4  0E00               	movlw	0
 13744  0003E6  0100               	movlb	0	; () banked
 13745  0003E8  6F94               	movwf	Terminal@Index& (0+255),b
 13746  0003EA  D01E               	goto	l1831
 13747  0003EC                     
 13748                           ;term.c: 623: {
 13749                           ;term.c: 624: itoa(((void*)&(Payload[Index])),TermRxBuffer[Index],10);
 13750                           
 13751                           ; BSR set to: 0
 13752  0003EC  0100               	movlb	0	; () banked
 13753  0003EE  5194               	movf	Terminal@Index& (0+255),w,b
 13754  0003F0  0D04               	mullw	4
 13755  0003F2  0E40               	movlw	low Terminal@Payload
 13756  0003F4  24F3               	addwf	prodl,w,c
 13757  0003F6  6F85               	movwf	itoa@buf& (0+255),b
 13758  0003F8  0E04               	movlw	high Terminal@Payload
 13759  0003FA  20F4               	addwfc	prodh,w,c
 13760  0003FC  6F86               	movwf	(itoa@buf+1)& (0+255),b
 13761  0003FE  5194               	movf	Terminal@Index& (0+255),w,b
 13762  000400  0D01               	mullw	1
 13763  000402  0E90               	movlw	low Terminal@TermRxBuffer
 13764  000404  24F3               	addwf	prodl,w,c
 13765  000406  6ED9               	movwf	fsr2l,c
 13766  000408  0E04               	movlw	high Terminal@TermRxBuffer
 13767  00040A  20F4               	addwfc	prodh,w,c
 13768  00040C  6EDA               	movwf	fsr2h,c
 13769  00040E  50DF               	movf	indf2,w,c
 13770  000410  6F91               	movwf	??_Terminal& (0+255),b
 13771  000412  5191               	movf	??_Terminal& (0+255),w,b
 13772  000414  6F87               	movwf	itoa@val& (0+255),b
 13773  000416  6B88               	clrf	(itoa@val+1)& (0+255),b
 13774  000418  0E00               	movlw	0
 13775  00041A  6F8A               	movwf	(itoa@base+1)& (0+255),b
 13776  00041C  0E0A               	movlw	10
 13777  00041E  6F89               	movwf	itoa@base& (0+255),b
 13778  000420  ECC6  F01D         	call	_itoa	;wreg free
 13779  000424  0100               	movlb	0	; () banked
 13780  000426  2B94               	incf	Terminal@Index& (0+255),f,b
 13781  000428                     l1831:
 13782                           
 13783                           ; BSR set to: 0
 13784                           
 13785                           ; BSR set to: 0
 13786  000428  5194               	movf	Terminal@Index& (0+255),w,b
 13787  00042A  0102               	movlb	2	; () banked
 13788  00042C  5D0A               	subwf	Terminal@PackageLen& (0+255),w,b
 13789  00042E  B0D8               	btfsc	status,0,c
 13790  000430  D7DD               	goto	l1832
 13791  000432                     u9090:
 13792                           
 13793                           ; BSR set to: 2
 13794                           ;term.c: 625: }
 13795                           ;term.c: 626: }
 13796                           ;term.c: 629: if((cdc_trf_state == 0))
 13797                           
 13798                           ; BSR set to: 2
 13799                           
 13800                           ; BSR set to: 2
 13801  000432  0100               	movlb	0	; () banked
 13802  000434  51BB               	movf	_cdc_trf_state& (0+255),w,b
 13803  000436  A4D8               	btfss	status,2,c
 13804  000438  0012               	return	
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;term.c: 630: {
 13808                           ;term.c: 632: if (FormatOption == 1u)
 13809  00043A  0102               	movlb	2	; () banked
 13810  00043C  0508               	decf	Terminal@FormatOption& (0+255),w,b
 13811  00043E  A4D8               	btfss	status,2,c
 13812  000440  D02B               	goto	l1835
 13813                           
 13814                           ; BSR set to: 2
 13815                           ;term.c: 633: {
 13816                           ;term.c: 634: Payload[(2*PackageLen)].Byte[3] = '\r';
 13817  000442  510A               	movf	Terminal@PackageLen& (0+255),w,b
 13818  000444  0D08               	mullw	8
 13819  000446  0E03               	movlw	3
 13820  000448  26F3               	addwf	prodl,f,c
 13821  00044A  0E00               	movlw	0
 13822  00044C  22F4               	addwfc	prodh,f,c
 13823  00044E  0E40               	movlw	low Terminal@Payload
 13824  000450  24F3               	addwf	prodl,w,c
 13825  000452  6ED9               	movwf	fsr2l,c
 13826  000454  0E04               	movlw	high Terminal@Payload
 13827  000456  20F4               	addwfc	prodh,w,c
 13828  000458  6EDA               	movwf	fsr2h,c
 13829  00045A  0E0D               	movlw	13
 13830  00045C  6EDF               	movwf	indf2,c
 13831                           
 13832                           ;term.c: 635: Payload[(2*PackageLen)].Byte[2] = '\n';
 13833  00045E  510A               	movf	Terminal@PackageLen& (0+255),w,b
 13834  000460  0D08               	mullw	8
 13835  000462  0E02               	movlw	2
 13836  000464  26F3               	addwf	prodl,f,c
 13837  000466  0E00               	movlw	0
 13838  000468  22F4               	addwfc	prodh,f,c
 13839  00046A  0E40               	movlw	low Terminal@Payload
 13840  00046C  24F3               	addwf	prodl,w,c
 13841  00046E  6ED9               	movwf	fsr2l,c
 13842  000470  0E04               	movlw	high Terminal@Payload
 13843  000472  20F4               	addwfc	prodh,w,c
 13844  000474  6EDA               	movwf	fsr2h,c
 13845  000476  0E0A               	movlw	10
 13846  000478  6EDF               	movwf	indf2,c
 13847                           
 13848                           ; BSR set to: 2
 13849                           ;term.c: 637: putUSBUSART((void*)Payload,(2*PackageLen) + 4);
 13850  00047A  0E40               	movlw	low Terminal@Payload
 13851  00047C  0100               	movlb	0	; () banked
 13852  00047E  6F7B               	movwf	putUSBUSART@data& (0+255),b
 13853  000480  0E04               	movlw	high Terminal@Payload
 13854  000482  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 13855  000484  0102               	movlb	2	; () banked
 13856  000486  510A               	movf	Terminal@PackageLen& (0+255),w,b
 13857  000488  0D02               	mullw	2
 13858  00048A  50F3               	movf	prodl,w,c
 13859  00048C  0F04               	addlw	4
 13860  00048E  0100               	movlb	0	; () banked
 13861  000490  6F7D               	movwf	putUSBUSART@length& (0+255),b
 13862  000492  ECB9  F020         	call	_putUSBUSART	;wreg free
 13863                           
 13864                           ;term.c: 638: }
 13865  000496  D026               	goto	l1836
 13866  000498                     l1835:
 13867                           
 13868                           ;term.c: 639: else
 13869                           ;term.c: 640: {
 13870                           ;term.c: 641: TermRxBuffer[PackageLen] = '\r';
 13871  000498  0102               	movlb	2	; () banked
 13872  00049A  510A               	movf	Terminal@PackageLen& (0+255),w,b
 13873  00049C  0D01               	mullw	1
 13874  00049E  0E90               	movlw	low Terminal@TermRxBuffer
 13875  0004A0  24F3               	addwf	prodl,w,c
 13876  0004A2  6ED9               	movwf	fsr2l,c
 13877  0004A4  0E04               	movlw	high Terminal@TermRxBuffer
 13878  0004A6  20F4               	addwfc	prodh,w,c
 13879  0004A8  6EDA               	movwf	fsr2h,c
 13880  0004AA  0E0D               	movlw	13
 13881  0004AC  6EDF               	movwf	indf2,c
 13882                           
 13883                           ; BSR set to: 2
 13884                           ;term.c: 642: TermRxBuffer[PackageLen + 1] = '\n';
 13885  0004AE  510A               	movf	Terminal@PackageLen& (0+255),w,b
 13886  0004B0  0100               	movlb	0	; () banked
 13887  0004B2  6F91               	movwf	??_Terminal& (0+255),b
 13888  0004B4  6B92               	clrf	(??_Terminal+1)& (0+255),b
 13889  0004B6  0E01               	movlw	1
 13890  0004B8  2791               	addwf	??_Terminal& (0+255),f,b
 13891  0004BA  0E00               	movlw	0
 13892  0004BC  2392               	addwfc	(??_Terminal+1)& (0+255),f,b
 13893  0004BE  0E90               	movlw	low Terminal@TermRxBuffer
 13894  0004C0  2591               	addwf	??_Terminal& (0+255),w,b
 13895  0004C2  6ED9               	movwf	fsr2l,c
 13896  0004C4  0E04               	movlw	high Terminal@TermRxBuffer
 13897  0004C6  2192               	addwfc	(??_Terminal+1)& (0+255),w,b
 13898  0004C8  6EDA               	movwf	fsr2h,c
 13899  0004CA  0E0A               	movlw	10
 13900  0004CC  6EDF               	movwf	indf2,c
 13901                           
 13902                           ; BSR set to: 0
 13903                           ;term.c: 644: putUSBUSART(TermRxBuffer,PackageLen + 2);
 13904  0004CE  0E90               	movlw	low Terminal@TermRxBuffer
 13905  0004D0  6F7B               	movwf	putUSBUSART@data& (0+255),b
 13906  0004D2  0E04               	movlw	high Terminal@TermRxBuffer
 13907  0004D4  6F7C               	movwf	(putUSBUSART@data+1)& (0+255),b
 13908  0004D6  0102               	movlb	2	; () banked
 13909  0004D8  510A               	movf	Terminal@PackageLen& (0+255),w,b
 13910  0004DA  0F02               	addlw	2
 13911  0004DC  0100               	movlb	0	; () banked
 13912  0004DE  6F7D               	movwf	putUSBUSART@length& (0+255),b
 13913  0004E0  ECB9  F020         	call	_putUSBUSART	;wreg free
 13914  0004E4                     l1836:
 13915                           
 13916                           ;term.c: 645: }
 13917                           ;term.c: 647: TermState = Term_GetData;
 13918  0004E4  0E00               	movlw	0
 13919  0004E6  0102               	movlb	2	; () banked
 13920  0004E8  6F0B               	movwf	Terminal@TermState& (0+255),b
 13921                           
 13922                           ; BSR set to: 2
 13923                           ;term.c: 657: }
 13924                           
 13925                           ; BSR set to: 2
 13926                           ;term.c: 656: break;
 13927                           
 13928                           ;term.c: 655: default:
 13929                           
 13930                           ; BSR set to: 2
 13931                           ;term.c: 653: break;
 13932                           
 13933                           ;term.c: 652: case Term_ReadSlvUartData:
 13934                           
 13935                           ; BSR set to: 2
 13936                           ;term.c: 648: }
 13937                           ;term.c: 649: }
 13938                           ;term.c: 650: break;
 13939                           
 13940                           ; BSR set to: 2
 13941  0004EA  0012               	return	
 13942  0004EC                     l1795:
 13943                           
 13944                           ; BSR set to: 2
 13945  0004EC  0102               	movlb	2	; () banked
 13946  0004EE  510B               	movf	Terminal@TermState& (0+255),w,b
 13947                           
 13948                           ; Switch size 1, requested type "space"
 13949                           ; Number of cases is 4, Range of values is 0 to 3
 13950                           ; switch strategies available:
 13951                           ; Name         Instructions Cycles
 13952                           ; simple_byte           13     7 (average)
 13953                           ;	Chosen strategy is simple_byte
 13954  0004F0  0A00               	xorlw	0	; case 0
 13955  0004F2  B4D8               	btfsc	status,2,c
 13956  0004F4  D5F6               	goto	l1796
 13957  0004F6  0A01               	xorlw	1	; case 1
 13958  0004F8  B4D8               	btfsc	status,2,c
 13959  0004FA  D74B               	goto	l1826
 13960  0004FC  0A03               	xorlw	3	; case 2
 13961  0004FE  B4D8               	btfsc	status,2,c
 13962  000500  D768               	goto	l1828
 13963  000502  0A01               	xorlw	1	; case 3
 13964  000504  0012               	return	
 13965  000506                     __end_of_Terminal:
 13966                           	opt stack 0
 13967                           tosu	equ	0xFFF
 13968                           tosh	equ	0xFFE
 13969                           tosl	equ	0xFFD
 13970                           pclath	equ	0xFFA
 13971                           tblptru	equ	0xFF8
 13972                           tblptrh	equ	0xFF7
 13973                           tblptrl	equ	0xFF6
 13974                           tablat	equ	0xFF5
 13975                           prodh	equ	0xFF4
 13976                           prodl	equ	0xFF3
 13977                           intcon	equ	0xFF2
 13978                           intcon2	equ	0xFF1
 13979                           intcon3	equ	0xFF0
 13980                           indf0	equ	0xFEF
 13981                           postinc0	equ	0xFEE
 13982                           plusw0	equ	0xFEB
 13983                           fsr0h	equ	0xFEA
 13984                           fsr0l	equ	0xFE9
 13985                           wreg	equ	0xFE8
 13986                           indf1	equ	0xFE7
 13987                           postinc1	equ	0xFE6
 13988                           postdec1	equ	0xFE5
 13989                           fsr1h	equ	0xFE2
 13990                           fsr1l	equ	0xFE1
 13991                           indf2	equ	0xFDF
 13992                           postinc2	equ	0xFDE
 13993                           postdec2	equ	0xFDD
 13994                           plusw2	equ	0xFDB
 13995                           fsr2h	equ	0xFDA
 13996                           fsr2l	equ	0xFD9
 13997                           status	equ	0xFD8
 13998                           
 13999 ;; *************** function _xtoi *****************
 14000 ;; Defined at:
 14001 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xtoi.c"
 14002 ;; Parameters:    Size  Location     Type
 14003 ;;  s               2   27[BANK0 ] PTR const unsigned char 
 14004 ;;		 -> Terminal@Addr(4), 
 14005 ;; Auto vars:     Size  Location     Type
 14006 ;;  val             2   32[BANK0 ] unsigned int 
 14007 ;;  c               1   34[BANK0 ] unsigned char 
 14008 ;;  sign            1   31[BANK0 ] unsigned char 
 14009 ;; Return value:  Size  Location     Type
 14010 ;;                  2   27[BANK0 ] unsigned int 
 14011 ;; Registers used:
 14012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14013 ;; Tracked objects:
 14014 ;;		On entry : 0/0
 14015 ;;		On exit  : 0/0
 14016 ;;		Unchanged: 0/0
 14017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14018 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14019 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14020 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14021 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14022 ;;Total ram usage:        8 bytes
 14023 ;; Hardware stack levels used:    1
 14024 ;; Hardware stack levels required when called:   11
 14025 ;; This function calls:
 14026 ;;		_isdigit
 14027 ;;		_isspace
 14028 ;;		_isupper
 14029 ;;		_isxdigit
 14030 ;;		_tolower
 14031 ;; This function is called by:
 14032 ;;		_Terminal
 14033 ;; This function uses a non-reentrant model
 14034 ;;
 14035                           
 14036                           	psect	text59
 14037  001EC8                     __ptext59:
 14038                           	opt stack 0
 14039  001EC8                     _xtoi:
 14040                           	opt stack 14
 14041                           
 14042                           ;incstack = 0
 14043  001EC8  0E00               	movlw	0
 14044  001ECA  0100               	movlb	0	; () banked
 14045  001ECC  6F7F               	movwf	xtoi@sign& (0+255),b
 14046  001ECE  0E00               	movlw	0
 14047  001ED0  6F81               	movwf	(xtoi@val+1)& (0+255),b
 14048  001ED2  0E00               	movlw	0
 14049  001ED4  6F80               	movwf	xtoi@val& (0+255),b
 14050  001ED6  D003               	goto	l2613
 14051  001ED8                     
 14052                           ; BSR set to: 0
 14053  001ED8  0100               	movlb	0	; () banked
 14054  001EDA  4B7B               	infsnz	xtoi@s& (0+255),f,b
 14055  001EDC  2B7C               	incf	(xtoi@s+1)& (0+255),f,b
 14056  001EDE                     l2613:
 14057                           
 14058                           ; BSR set to: 0
 14059                           
 14060                           ; BSR set to: 0
 14061  001EDE  C07B  FFD9         	movff	xtoi@s,fsr2l
 14062  001EE2  C07C  FFDA         	movff	xtoi@s+1,fsr2h
 14063  001EE6  50DF               	movf	indf2,w,c
 14064  001EE8  ECE6  F01F         	call	_isspace
 14065  001EEC  B0D8               	btfsc	status,0,c
 14066  001EEE  D7F4               	goto	l2614
 14067  001EF0  C07B  FFD9         	movff	xtoi@s,fsr2l
 14068  001EF4  C07C  FFDA         	movff	xtoi@s+1,fsr2h
 14069  001EF8  0E2D               	movlw	45
 14070  001EFA  18DE               	xorwf	postinc2,w,c
 14071  001EFC  A4D8               	btfss	status,2,c
 14072  001EFE  D003               	goto	l2616
 14073  001F00  0100               	movlb	0	; () banked
 14074  001F02  2B7F               	incf	xtoi@sign& (0+255),f,b
 14075  001F04  D009               	goto	L15
 14076  001F06                     l2616:
 14077                           
 14078                           ; BSR set to: 0
 14079  001F06  C07B  FFD9         	movff	xtoi@s,fsr2l
 14080  001F0A  C07C  FFDA         	movff	xtoi@s+1,fsr2h
 14081  001F0E  0E2B               	movlw	43
 14082  001F10  18DE               	xorwf	postinc2,w,c
 14083  001F12  A4D8               	btfss	status,2,c
 14084  001F14  D028               	goto	l2619
 14085  001F16  0100               	movlb	0	; () banked
 14086  001F18                     L15:
 14087  001F18  4B7B               	infsnz	xtoi@s& (0+255),f,b
 14088  001F1A  2B7C               	incf	(xtoi@s+1)& (0+255),f,b
 14089                           
 14090                           ; BSR set to: 0
 14091                           
 14092                           ; BSR set to: 0
 14093  001F1C  D024               	goto	l2619
 14094  001F1E                     
 14095                           ; BSR set to: 0
 14096  001F1E  0100               	movlb	0	; () banked
 14097  001F20  5182               	movf	xtoi@c& (0+255),w,b
 14098  001F22  EC56  F020         	call	_isupper
 14099  001F26  A0D8               	btfss	status,0,c
 14100  001F28  D006               	goto	l2621
 14101  001F2A  0100               	movlb	0	; () banked
 14102  001F2C  5182               	movf	xtoi@c& (0+255),w,b
 14103  001F2E  EC0C  F021         	call	_tolower
 14104  001F32  0100               	movlb	0	; () banked
 14105  001F34  6F82               	movwf	xtoi@c& (0+255),b
 14106  001F36                     l2621:
 14107  001F36  0100               	movlb	0	; () banked
 14108  001F38  5182               	movf	xtoi@c& (0+255),w,b
 14109  001F3A  EC67  F020         	call	_isdigit
 14110  001F3E  A0D8               	btfss	status,0,c
 14111  001F40  D002               	goto	l2622
 14112  001F42  0E30               	movlw	48
 14113  001F44  D001               	goto	L14
 14114  001F46                     l2622:
 14115                           
 14116                           ; BSR set to: 0
 14117  001F46  0E57               	movlw	87
 14118  001F48                     L14:
 14119  001F48  0100               	movlb	0	; () banked
 14120  001F4A  5F82               	subwf	xtoi@c& (0+255),f,b
 14121                           
 14122                           ; BSR set to: 0
 14123  001F4C  3B80               	swapf	xtoi@val& (0+255),f,b
 14124  001F4E  3B81               	swapf	(xtoi@val+1)& (0+255),f,b
 14125  001F50  0EF0               	movlw	240
 14126  001F52  1781               	andwf	(xtoi@val+1)& (0+255),f,b
 14127  001F54  5180               	movf	xtoi@val& (0+255),w,b
 14128  001F56  0B0F               	andlw	15
 14129  001F58  1381               	iorwf	(xtoi@val+1)& (0+255),f,b
 14130  001F5A  0EF0               	movlw	240
 14131  001F5C  1780               	andwf	xtoi@val& (0+255),f,b
 14132  001F5E  5182               	movf	xtoi@c& (0+255),w,b
 14133  001F60  2780               	addwf	xtoi@val& (0+255),f,b
 14134  001F62  0E00               	movlw	0
 14135  001F64  2381               	addwfc	(xtoi@val+1)& (0+255),f,b
 14136  001F66                     l2619:
 14137                           
 14138                           ; BSR set to: 0
 14139  001F66  C07B  FFD9         	movff	xtoi@s,fsr2l
 14140  001F6A  C07C  FFDA         	movff	xtoi@s+1,fsr2h
 14141  001F6E  0100               	movlb	0	; () banked
 14142  001F70  4B7B               	infsnz	xtoi@s& (0+255),f,b
 14143  001F72  2B7C               	incf	(xtoi@s+1)& (0+255),f,b
 14144  001F74  50DF               	movf	indf2,w,c
 14145  001F76  6F82               	movwf	xtoi@c& (0+255),b
 14146  001F78  5182               	movf	xtoi@c& (0+255),w,b
 14147  001F7A  EC8A  F01E         	call	_isxdigit
 14148  001F7E  B0D8               	btfsc	status,0,c
 14149  001F80  D7CE               	goto	l2620
 14150  001F82  0100               	movlb	0	; () banked
 14151  001F84  517F               	movf	xtoi@sign& (0+255),w,b
 14152  001F86  B4D8               	btfsc	status,2,c
 14153  001F88  D00D               	goto	l2625
 14154                           
 14155                           ; BSR set to: 0
 14156  001F8A  C080  F07D         	movff	xtoi@val,??_xtoi
 14157  001F8E  C081  F07E         	movff	xtoi@val+1,??_xtoi+1
 14158  001F92  1F7D               	comf	??_xtoi& (0+255),f,b
 14159  001F94  1F7E               	comf	(??_xtoi+1)& (0+255),f,b
 14160  001F96  4B7D               	infsnz	??_xtoi& (0+255),f,b
 14161  001F98  2B7E               	incf	(??_xtoi+1)& (0+255),f,b
 14162  001F9A  C07D  F07B         	movff	??_xtoi,?_xtoi
 14163  001F9E  C07E  F07C         	movff	??_xtoi+1,?_xtoi+1
 14164  001FA2  0012               	return	
 14165  001FA4                     l2625:
 14166                           
 14167                           ; BSR set to: 0
 14168  001FA4  C080  F07B         	movff	xtoi@val,?_xtoi
 14169  001FA8  C081  F07C         	movff	xtoi@val+1,?_xtoi+1
 14170                           
 14171                           ; BSR set to: 0
 14172  001FAC  0012               	return		;funcret
 14173  001FAE                     __end_of_xtoi:
 14174                           	opt stack 0
 14175                           tosu	equ	0xFFF
 14176                           tosh	equ	0xFFE
 14177                           tosl	equ	0xFFD
 14178                           pclath	equ	0xFFA
 14179                           tblptru	equ	0xFF8
 14180                           tblptrh	equ	0xFF7
 14181                           tblptrl	equ	0xFF6
 14182                           tablat	equ	0xFF5
 14183                           prodh	equ	0xFF4
 14184                           prodl	equ	0xFF3
 14185                           intcon	equ	0xFF2
 14186                           intcon2	equ	0xFF1
 14187                           intcon3	equ	0xFF0
 14188                           indf0	equ	0xFEF
 14189                           postinc0	equ	0xFEE
 14190                           plusw0	equ	0xFEB
 14191                           fsr0h	equ	0xFEA
 14192                           fsr0l	equ	0xFE9
 14193                           wreg	equ	0xFE8
 14194                           indf1	equ	0xFE7
 14195                           postinc1	equ	0xFE6
 14196                           postdec1	equ	0xFE5
 14197                           fsr1h	equ	0xFE2
 14198                           fsr1l	equ	0xFE1
 14199                           indf2	equ	0xFDF
 14200                           postinc2	equ	0xFDE
 14201                           postdec2	equ	0xFDD
 14202                           plusw2	equ	0xFDB
 14203                           fsr2h	equ	0xFDA
 14204                           fsr2l	equ	0xFD9
 14205                           status	equ	0xFD8
 14206                           
 14207 ;; *************** function _tolower *****************
 14208 ;; Defined at:
 14209 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\tolower.c"
 14210 ;; Parameters:    Size  Location     Type
 14211 ;;  c               1    wreg     unsigned char 
 14212 ;; Auto vars:     Size  Location     Type
 14213 ;;  c               1   21[BANK0 ] unsigned char 
 14214 ;; Return value:  Size  Location     Type
 14215 ;;                  1    wreg      unsigned char 
 14216 ;; Registers used:
 14217 ;;		wreg, status,2, status,0
 14218 ;; Tracked objects:
 14219 ;;		On entry : 0/0
 14220 ;;		On exit  : 0/0
 14221 ;;		Unchanged: 0/0
 14222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14224 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14226 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14227 ;;Total ram usage:        1 bytes
 14228 ;; Hardware stack levels used:    1
 14229 ;; Hardware stack levels required when called:    9
 14230 ;; This function calls:
 14231 ;;		Nothing
 14232 ;; This function is called by:
 14233 ;;		_xtoi
 14234 ;; This function uses a non-reentrant model
 14235 ;;
 14236                           
 14237                           	psect	text60
 14238  004218                     __ptext60:
 14239                           	opt stack 0
 14240  004218                     _tolower:
 14241                           	opt stack 15
 14242                           
 14243                           ; BSR set to: 0
 14244                           ;incstack = 0
 14245                           ;tolower@c stored from wreg
 14246  004218  0100               	movlb	0	; () banked
 14247  00421A  6F75               	movwf	tolower@c& (0+255),b
 14248  00421C  0E5B               	movlw	91
 14249  00421E  0100               	movlb	0	; () banked
 14250  004220  6175               	cpfslt	tolower@c& (0+255),b
 14251  004222  D004               	goto	l2672
 14252                           
 14253                           ; BSR set to: 0
 14254  004224  0E40               	movlw	64
 14255  004226  6575               	cpfsgt	tolower@c& (0+255),b
 14256  004228  D001               	goto	l2672
 14257                           
 14258                           ; BSR set to: 0
 14259  00422A  8B75               	bsf	tolower@c& (0+255),5,b
 14260  00422C                     l2672:
 14261                           
 14262                           ; BSR set to: 0
 14263                           
 14264                           ; BSR set to: 0
 14265  00422C  5175               	movf	tolower@c& (0+255),w,b
 14266  00422E  0012               	return	
 14267  004230                     __end_of_tolower:
 14268                           	opt stack 0
 14269                           tosu	equ	0xFFF
 14270                           tosh	equ	0xFFE
 14271                           tosl	equ	0xFFD
 14272                           pclath	equ	0xFFA
 14273                           tblptru	equ	0xFF8
 14274                           tblptrh	equ	0xFF7
 14275                           tblptrl	equ	0xFF6
 14276                           tablat	equ	0xFF5
 14277                           prodh	equ	0xFF4
 14278                           prodl	equ	0xFF3
 14279                           intcon	equ	0xFF2
 14280                           intcon2	equ	0xFF1
 14281                           intcon3	equ	0xFF0
 14282                           indf0	equ	0xFEF
 14283                           postinc0	equ	0xFEE
 14284                           plusw0	equ	0xFEB
 14285                           fsr0h	equ	0xFEA
 14286                           fsr0l	equ	0xFE9
 14287                           wreg	equ	0xFE8
 14288                           indf1	equ	0xFE7
 14289                           postinc1	equ	0xFE6
 14290                           postdec1	equ	0xFE5
 14291                           fsr1h	equ	0xFE2
 14292                           fsr1l	equ	0xFE1
 14293                           indf2	equ	0xFDF
 14294                           postinc2	equ	0xFDE
 14295                           postdec2	equ	0xFDD
 14296                           plusw2	equ	0xFDB
 14297                           fsr2h	equ	0xFDA
 14298                           fsr2l	equ	0xFD9
 14299                           status	equ	0xFD8
 14300                           
 14301 ;; *************** function _isxdigit *****************
 14302 ;; Defined at:
 14303 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isxdigit.c"
 14304 ;; Parameters:    Size  Location     Type
 14305 ;;  c               1    wreg     unsigned char 
 14306 ;; Auto vars:     Size  Location     Type
 14307 ;;  c               1   26[BANK0 ] unsigned char 
 14308 ;; Return value:  Size  Location     Type
 14309 ;;		None               void
 14310 ;; Registers used:
 14311 ;;		wreg, status,2, status,0, cstack
 14312 ;; Tracked objects:
 14313 ;;		On entry : 0/0
 14314 ;;		On exit  : 0/0
 14315 ;;		Unchanged: 0/0
 14316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14318 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14320 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14321 ;;Total ram usage:        3 bytes
 14322 ;; Hardware stack levels used:    1
 14323 ;; Hardware stack levels required when called:   10
 14324 ;; This function calls:
 14325 ;;		_isdigit
 14326 ;; This function is called by:
 14327 ;;		_xtoi
 14328 ;; This function uses a non-reentrant model
 14329 ;;
 14330                           
 14331                           	psect	text61
 14332  003D14                     __ptext61:
 14333                           	opt stack 0
 14334  003D14                     _isxdigit:
 14335                           	opt stack 14
 14336                           
 14337                           ; BSR set to: 0
 14338                           ;incstack = 0
 14339                           ;isxdigit@c stored from wreg
 14340  003D14  0100               	movlb	0	; () banked
 14341  003D16  6F7A               	movwf	isxdigit@c& (0+255),b
 14342  003D18  0E01               	movlw	1
 14343  003D1A  0100               	movlb	0	; () banked
 14344  003D1C  6F79               	movwf	_isxdigit$5694& (0+255),b
 14345                           
 14346                           ; BSR set to: 0
 14347  003D1E  0E67               	movlw	103
 14348  003D20  617A               	cpfslt	isxdigit@c& (0+255),b
 14349  003D22  D003               	goto	u8180
 14350                           
 14351                           ; BSR set to: 0
 14352  003D24  0E61               	movlw	97
 14353  003D26  617A               	cpfslt	isxdigit@c& (0+255),b
 14354  003D28  D00E               	goto	l2668
 14355  003D2A                     u8180:
 14356                           
 14357                           ; BSR set to: 0
 14358                           
 14359                           ; BSR set to: 0
 14360  003D2A  0E47               	movlw	71
 14361  003D2C  617A               	cpfslt	isxdigit@c& (0+255),b
 14362  003D2E  D003               	goto	u8200
 14363                           
 14364                           ; BSR set to: 0
 14365  003D30  0E41               	movlw	65
 14366  003D32  617A               	cpfslt	isxdigit@c& (0+255),b
 14367  003D34  D008               	goto	l2668
 14368  003D36                     u8200:
 14369                           
 14370                           ; BSR set to: 0
 14371                           
 14372                           ; BSR set to: 0
 14373  003D36  517A               	movf	isxdigit@c& (0+255),w,b
 14374  003D38  EC67  F020         	call	_isdigit
 14375  003D3C  B0D8               	btfsc	status,0,c
 14376  003D3E  D003               	goto	l2668
 14377  003D40  0E00               	movlw	0
 14378  003D42  0100               	movlb	0	; () banked
 14379  003D44  6F79               	movwf	_isxdigit$5694& (0+255),b
 14380  003D46                     l2668:
 14381                           
 14382                           ; BSR set to: 0
 14383  003D46  C079  F078         	movff	_isxdigit$5694,??_isxdigit
 14384  003D4A  0100               	movlb	0	; () banked
 14385  003D4C  3178               	rrcf	??_isxdigit& (0+255),w,b
 14386  003D4E  0012               	return	
 14387  003D50                     __end_of_isxdigit:
 14388                           	opt stack 0
 14389                           tosu	equ	0xFFF
 14390                           tosh	equ	0xFFE
 14391                           tosl	equ	0xFFD
 14392                           pclath	equ	0xFFA
 14393                           tblptru	equ	0xFF8
 14394                           tblptrh	equ	0xFF7
 14395                           tblptrl	equ	0xFF6
 14396                           tablat	equ	0xFF5
 14397                           prodh	equ	0xFF4
 14398                           prodl	equ	0xFF3
 14399                           intcon	equ	0xFF2
 14400                           intcon2	equ	0xFF1
 14401                           intcon3	equ	0xFF0
 14402                           indf0	equ	0xFEF
 14403                           postinc0	equ	0xFEE
 14404                           plusw0	equ	0xFEB
 14405                           fsr0h	equ	0xFEA
 14406                           fsr0l	equ	0xFE9
 14407                           wreg	equ	0xFE8
 14408                           indf1	equ	0xFE7
 14409                           postinc1	equ	0xFE6
 14410                           postdec1	equ	0xFE5
 14411                           fsr1h	equ	0xFE2
 14412                           fsr1l	equ	0xFE1
 14413                           indf2	equ	0xFDF
 14414                           postinc2	equ	0xFDE
 14415                           postdec2	equ	0xFDD
 14416                           plusw2	equ	0xFDB
 14417                           fsr2h	equ	0xFDA
 14418                           fsr2l	equ	0xFD9
 14419                           status	equ	0xFD8
 14420                           
 14421 ;; *************** function _strtol *****************
 14422 ;; Defined at:
 14423 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strtol.c"
 14424 ;; Parameters:    Size  Location     Type
 14425 ;;  s               2   33[BANK0 ] PTR const unsigned char 
 14426 ;;		 -> Terminal@Payload(80), 
 14427 ;;  endptr          2   35[BANK0 ] PTR PTR unsigned char 
 14428 ;;		 -> NULL(0), 
 14429 ;;  base            2   37[BANK0 ] int 
 14430 ;; Auto vars:     Size  Location     Type
 14431 ;;  a               4   44[BANK0 ] long 
 14432 ;;  c               1   48[BANK0 ] unsigned char 
 14433 ;;  sign            1   43[BANK0 ] unsigned char 
 14434 ;; Return value:  Size  Location     Type
 14435 ;;                  4   33[BANK0 ] long 
 14436 ;; Registers used:
 14437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14438 ;; Tracked objects:
 14439 ;;		On entry : 0/0
 14440 ;;		On exit  : 0/0
 14441 ;;		Unchanged: 0/0
 14442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14443 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14444 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14445 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14446 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14447 ;;Total ram usage:       16 bytes
 14448 ;; Hardware stack levels used:    1
 14449 ;; Hardware stack levels required when called:   11
 14450 ;; This function calls:
 14451 ;;		___lmul
 14452 ;;		_isalpha
 14453 ;;		_isdigit
 14454 ;;		_isspace
 14455 ;;		_toupper
 14456 ;; This function is called by:
 14457 ;;		_Terminal
 14458 ;; This function uses a non-reentrant model
 14459 ;;
 14460                           
 14461                           	psect	text62
 14462  000C56                     __ptext62:
 14463                           	opt stack 0
 14464  000C56                     _strtol:
 14465                           	opt stack 14
 14466                           
 14467                           ; BSR set to: 0
 14468                           ;incstack = 0
 14469  000C56  C081  FFD9         	movff	strtol@s,fsr2l
 14470  000C5A  C082  FFDA         	movff	strtol@s+1,fsr2h
 14471  000C5E  50DF               	movf	indf2,w,c
 14472  000C60  0100               	movlb	0	; () banked
 14473  000C62  6F90               	movwf	strtol@c& (0+255),b
 14474                           
 14475                           ; BSR set to: 0
 14476  000C64  4B81               	infsnz	strtol@s& (0+255),f,b
 14477  000C66  2B82               	incf	(strtol@s+1)& (0+255),f,b
 14478                           
 14479                           ; BSR set to: 0
 14480  000C68  5190               	movf	strtol@c& (0+255),w,b
 14481  000C6A  ECE6  F01F         	call	_isspace
 14482  000C6E  B0D8               	btfsc	status,0,c
 14483  000C70  D7F2               	goto	_strtol
 14484  000C72  0E00               	movlw	0
 14485  000C74  0100               	movlb	0	; () banked
 14486  000C76  6F8C               	movwf	strtol@a& (0+255),b
 14487  000C78  0E00               	movlw	0
 14488  000C7A  6F8D               	movwf	(strtol@a+1)& (0+255),b
 14489  000C7C  0E00               	movlw	0
 14490  000C7E  6F8E               	movwf	(strtol@a+2)& (0+255),b
 14491  000C80  0E00               	movlw	0
 14492  000C82  6F8F               	movwf	(strtol@a+3)& (0+255),b
 14493  000C84  0E00               	movlw	0
 14494  000C86  6F8B               	movwf	strtol@sign& (0+255),b
 14495                           
 14496                           ; BSR set to: 0
 14497  000C88  0E2D               	movlw	45
 14498  000C8A  1990               	xorwf	strtol@c& (0+255),w,b
 14499  000C8C  A4D8               	btfss	status,2,c
 14500  000C8E  D003               	goto	l2575
 14501                           
 14502                           ; BSR set to: 0
 14503  000C90  0E01               	movlw	1
 14504  000C92  6F8B               	movwf	strtol@sign& (0+255),b
 14505  000C94  D004               	goto	u8450
 14506  000C96                     l2575:
 14507                           
 14508                           ; BSR set to: 0
 14509                           
 14510                           ; BSR set to: 0
 14511  000C96  0E2B               	movlw	43
 14512  000C98  1990               	xorwf	strtol@c& (0+255),w,b
 14513  000C9A  A4D8               	btfss	status,2,c
 14514  000C9C  D008               	goto	l2577
 14515  000C9E                     u8450:
 14516                           
 14517                           ; BSR set to: 0
 14518  000C9E  C081  FFD9         	movff	strtol@s,fsr2l
 14519  000CA2  C082  FFDA         	movff	strtol@s+1,fsr2h
 14520  000CA6  50DF               	movf	indf2,w,c
 14521  000CA8  6F90               	movwf	strtol@c& (0+255),b
 14522                           
 14523                           ; BSR set to: 0
 14524  000CAA  4B81               	infsnz	strtol@s& (0+255),f,b
 14525  000CAC  2B82               	incf	(strtol@s+1)& (0+255),f,b
 14526  000CAE                     l2577:
 14527                           
 14528                           ; BSR set to: 0
 14529                           
 14530                           ; BSR set to: 0
 14531                           
 14532                           ; BSR set to: 0
 14533  000CAE  0E30               	movlw	48
 14534  000CB0  1990               	xorwf	strtol@c& (0+255),w,b
 14535  000CB2  A4D8               	btfss	status,2,c
 14536  000CB4  D02E               	goto	l2585
 14537                           
 14538                           ; BSR set to: 0
 14539  000CB6  C081  FFD9         	movff	strtol@s,fsr2l
 14540  000CBA  C082  FFDA         	movff	strtol@s+1,fsr2h
 14541  000CBE  50DF               	movf	indf2,w,c
 14542  000CC0  6F90               	movwf	strtol@c& (0+255),b
 14543                           
 14544                           ; BSR set to: 0
 14545  000CC2  4B81               	infsnz	strtol@s& (0+255),f,b
 14546  000CC4  2B82               	incf	(strtol@s+1)& (0+255),f,b
 14547                           
 14548                           ; BSR set to: 0
 14549  000CC6  5185               	movf	strtol@base& (0+255),w,b
 14550  000CC8  1186               	iorwf	(strtol@base+1)& (0+255),w,b
 14551  000CCA  B4D8               	btfsc	status,2,c
 14552  000CCC  D005               	goto	u8480
 14553                           
 14554                           ; BSR set to: 0
 14555  000CCE  0E10               	movlw	16
 14556  000CD0  1985               	xorwf	strtol@base& (0+255),w,b
 14557  000CD2  1186               	iorwf	(strtol@base+1)& (0+255),w,b
 14558  000CD4  A4D8               	btfss	status,2,c
 14559  000CD6  D015               	goto	l2579
 14560  000CD8                     u8480:
 14561                           
 14562                           ; BSR set to: 0
 14563                           
 14564                           ; BSR set to: 0
 14565  000CD8  0E78               	movlw	120
 14566  000CDA  1990               	xorwf	strtol@c& (0+255),w,b
 14567  000CDC  B4D8               	btfsc	status,2,c
 14568  000CDE  D004               	goto	u8500
 14569                           
 14570                           ; BSR set to: 0
 14571  000CE0  0E58               	movlw	88
 14572  000CE2  1990               	xorwf	strtol@c& (0+255),w,b
 14573  000CE4  A4D8               	btfss	status,2,c
 14574  000CE6  D00D               	goto	l2579
 14575  000CE8                     u8500:
 14576                           
 14577                           ; BSR set to: 0
 14578                           
 14579                           ; BSR set to: 0
 14580  000CE8  0E00               	movlw	0
 14581  000CEA  6F86               	movwf	(strtol@base+1)& (0+255),b
 14582  000CEC  0E10               	movlw	16
 14583  000CEE  6F85               	movwf	strtol@base& (0+255),b
 14584                           
 14585                           ; BSR set to: 0
 14586  000CF0  C081  FFD9         	movff	strtol@s,fsr2l
 14587  000CF4  C082  FFDA         	movff	strtol@s+1,fsr2h
 14588  000CF8  50DF               	movf	indf2,w,c
 14589  000CFA  6F90               	movwf	strtol@c& (0+255),b
 14590                           
 14591                           ; BSR set to: 0
 14592  000CFC  4B81               	infsnz	strtol@s& (0+255),f,b
 14593  000CFE  2B82               	incf	(strtol@s+1)& (0+255),f,b
 14594  000D00  D008               	goto	l2585
 14595  000D02                     l2579:
 14596                           
 14597                           ; BSR set to: 0
 14598                           
 14599                           ; BSR set to: 0
 14600  000D02  5185               	movf	strtol@base& (0+255),w,b
 14601  000D04  1186               	iorwf	(strtol@base+1)& (0+255),w,b
 14602  000D06  A4D8               	btfss	status,2,c
 14603  000D08  D004               	goto	l2585
 14604                           
 14605                           ; BSR set to: 0
 14606  000D0A  0E00               	movlw	0
 14607  000D0C  6F86               	movwf	(strtol@base+1)& (0+255),b
 14608  000D0E  0E08               	movlw	8
 14609  000D10  6F85               	movwf	strtol@base& (0+255),b
 14610  000D12                     l2585:
 14611                           
 14612                           ; BSR set to: 0
 14613                           
 14614                           ; BSR set to: 0
 14615                           
 14616                           ; BSR set to: 0
 14617                           
 14618                           ; BSR set to: 0
 14619  000D12  5185               	movf	strtol@base& (0+255),w,b
 14620  000D14  1186               	iorwf	(strtol@base+1)& (0+255),w,b
 14621  000D16  A4D8               	btfss	status,2,c
 14622  000D18  D004               	goto	l2586
 14623                           
 14624                           ; BSR set to: 0
 14625  000D1A  0E00               	movlw	0
 14626  000D1C  6F86               	movwf	(strtol@base+1)& (0+255),b
 14627  000D1E  0E0A               	movlw	10
 14628  000D20  6F85               	movwf	strtol@base& (0+255),b
 14629  000D22                     l2586:
 14630                           
 14631                           ; BSR set to: 0
 14632                           
 14633                           ; BSR set to: 0
 14634                           
 14635                           ; BSR set to: 0
 14636  000D22  5190               	movf	strtol@c& (0+255),w,b
 14637  000D24  EC5D  F01F         	call	_isalpha
 14638  000D28  A0D8               	btfss	status,0,c
 14639  000D2A  D008               	goto	l2588
 14640  000D2C  0100               	movlb	0	; () banked
 14641  000D2E  5190               	movf	strtol@c& (0+255),w,b
 14642  000D30  EC18  F021         	call	_toupper
 14643  000D34  0FC9               	addlw	201
 14644  000D36  0100               	movlb	0	; () banked
 14645  000D38  6F90               	movwf	strtol@c& (0+255),b
 14646  000D3A  D009               	goto	l2591
 14647  000D3C                     l2588:
 14648                           
 14649                           ; BSR set to: 0
 14650  000D3C  0100               	movlb	0	; () banked
 14651  000D3E  5190               	movf	strtol@c& (0+255),w,b
 14652  000D40  EC67  F020         	call	_isdigit
 14653  000D44  A0D8               	btfss	status,0,c
 14654  000D46  D039               	goto	l2592
 14655  000D48  0E30               	movlw	48
 14656  000D4A  0100               	movlb	0	; () banked
 14657  000D4C  5F90               	subwf	strtol@c& (0+255),f,b
 14658  000D4E                     l2591:
 14659                           
 14660                           ; BSR set to: 0
 14661                           
 14662                           ; BSR set to: 0
 14663                           
 14664                           ; BSR set to: 0
 14665  000D4E  5190               	movf	strtol@c& (0+255),w,b
 14666  000D50  6F87               	movwf	??_strtol& (0+255),b
 14667  000D52  6B88               	clrf	(??_strtol+1)& (0+255),b
 14668  000D54  5185               	movf	strtol@base& (0+255),w,b
 14669  000D56  5D87               	subwf	??_strtol& (0+255),w,b
 14670  000D58  5188               	movf	(??_strtol+1)& (0+255),w,b
 14671  000D5A  0A80               	xorlw	128
 14672  000D5C  6F89               	movwf	(??_strtol+2)& (0+255),b
 14673  000D5E  5186               	movf	(strtol@base+1)& (0+255),w,b
 14674  000D60  0A80               	xorlw	128
 14675  000D62  5989               	subwfb	(??_strtol+2)& (0+255),w,b
 14676  000D64  B0D8               	btfsc	status,0,c
 14677  000D66  D029               	goto	l2592
 14678                           
 14679                           ; BSR set to: 0
 14680                           
 14681                           ; BSR set to: 0
 14682                           
 14683                           ; BSR set to: 0
 14684  000D68  C085  F075         	movff	strtol@base,___lmul@multiplier
 14685  000D6C  C086  F076         	movff	strtol@base+1,___lmul@multiplier+1
 14686  000D70  0E00               	movlw	0
 14687  000D72  BF76               	btfsc	(___lmul@multiplier+1)& (0+255),7,b
 14688  000D74  0EFF               	movlw	-1
 14689  000D76  6F77               	movwf	(___lmul@multiplier+2)& (0+255),b
 14690  000D78  6F78               	movwf	(___lmul@multiplier+3)& (0+255),b
 14691  000D7A  C08C  F079         	movff	strtol@a,___lmul@multiplicand
 14692  000D7E  C08D  F07A         	movff	strtol@a+1,___lmul@multiplicand+1
 14693  000D82  C08E  F07B         	movff	strtol@a+2,___lmul@multiplicand+2
 14694  000D86  C08F  F07C         	movff	strtol@a+3,___lmul@multiplicand+3
 14695  000D8A  EC11  F01C         	call	___lmul	;wreg free
 14696  000D8E  0100               	movlb	0	; () banked
 14697  000D90  5190               	movf	strtol@c& (0+255),w,b
 14698  000D92  2575               	addwf	?___lmul& (0+255),w,b
 14699  000D94  6F8C               	movwf	strtol@a& (0+255),b
 14700  000D96  0E00               	movlw	0
 14701  000D98  2176               	addwfc	(?___lmul+1)& (0+255),w,b
 14702  000D9A  6F8D               	movwf	(strtol@a+1)& (0+255),b
 14703  000D9C  0E00               	movlw	0
 14704  000D9E  2177               	addwfc	(?___lmul+2)& (0+255),w,b
 14705  000DA0  6F8E               	movwf	(strtol@a+2)& (0+255),b
 14706  000DA2  0E00               	movlw	0
 14707  000DA4  2178               	addwfc	(?___lmul+3)& (0+255),w,b
 14708  000DA6  6F8F               	movwf	(strtol@a+3)& (0+255),b
 14709                           
 14710                           ; BSR set to: 0
 14711  000DA8  C081  FFD9         	movff	strtol@s,fsr2l
 14712  000DAC  C082  FFDA         	movff	strtol@s+1,fsr2h
 14713  000DB0  50DF               	movf	indf2,w,c
 14714  000DB2  6F90               	movwf	strtol@c& (0+255),b
 14715                           
 14716                           ; BSR set to: 0
 14717  000DB4  4B81               	infsnz	strtol@s& (0+255),f,b
 14718  000DB6  2B82               	incf	(strtol@s+1)& (0+255),f,b
 14719  000DB8  D7B4               	goto	l2586
 14720  000DBA                     l2592:
 14721                           
 14722                           ; BSR set to: 0
 14723  000DBA  0100               	movlb	0	; () banked
 14724  000DBC  5183               	movf	strtol@endptr& (0+255),w,b
 14725  000DBE  1184               	iorwf	(strtol@endptr+1)& (0+255),w,b
 14726  000DC0  B4D8               	btfsc	status,2,c
 14727  000DC2  D00E               	goto	l2594
 14728                           
 14729                           ; BSR set to: 0
 14730  000DC4  0EFF               	movlw	255
 14731  000DC6  2581               	addwf	strtol@s& (0+255),w,b
 14732  000DC8  6F87               	movwf	??_strtol& (0+255),b
 14733  000DCA  0EFF               	movlw	255
 14734  000DCC  2182               	addwfc	(strtol@s+1)& (0+255),w,b
 14735  000DCE  6F88               	movwf	(??_strtol+1)& (0+255),b
 14736  000DD0  C083  FFD9         	movff	strtol@endptr,fsr2l
 14737  000DD4  C084  FFDA         	movff	strtol@endptr+1,fsr2h
 14738  000DD8  C087  FFDE         	movff	??_strtol,postinc2
 14739  000DDC  C088  FFDD         	movff	??_strtol+1,postdec2
 14740  000DE0                     l2594:
 14741                           
 14742                           ; BSR set to: 0
 14743                           
 14744                           ; BSR set to: 0
 14745  000DE0  518B               	movf	strtol@sign& (0+255),w,b
 14746  000DE2  B4D8               	btfsc	status,2,c
 14747  000DE4  D01A               	goto	l2595
 14748                           
 14749                           ; BSR set to: 0
 14750  000DE6  C08C  F087         	movff	strtol@a,??_strtol
 14751  000DEA  C08D  F088         	movff	strtol@a+1,??_strtol+1
 14752  000DEE  C08E  F089         	movff	strtol@a+2,??_strtol+2
 14753  000DF2  C08F  F08A         	movff	strtol@a+3,??_strtol+3
 14754  000DF6  1F87               	comf	??_strtol& (0+255),f,b
 14755  000DF8  1F88               	comf	(??_strtol+1)& (0+255),f,b
 14756  000DFA  1F89               	comf	(??_strtol+2)& (0+255),f,b
 14757  000DFC  1F8A               	comf	(??_strtol+3)& (0+255),f,b
 14758  000DFE  2B87               	incf	??_strtol& (0+255),f,b
 14759  000E00  0E00               	movlw	0
 14760  000E02  2388               	addwfc	(??_strtol+1)& (0+255),f,b
 14761  000E04  2389               	addwfc	(??_strtol+2)& (0+255),f,b
 14762  000E06  238A               	addwfc	(??_strtol+3)& (0+255),f,b
 14763  000E08  C087  F081         	movff	??_strtol,?_strtol
 14764  000E0C  C088  F082         	movff	??_strtol+1,?_strtol+1
 14765  000E10  C089  F083         	movff	??_strtol+2,?_strtol+2
 14766  000E14  C08A  F084         	movff	??_strtol+3,?_strtol+3
 14767                           
 14768                           ; BSR set to: 0
 14769  000E18  0012               	return	
 14770  000E1A                     l2595:
 14771                           
 14772                           ; BSR set to: 0
 14773  000E1A  C08C  F081         	movff	strtol@a,?_strtol
 14774  000E1E  C08D  F082         	movff	strtol@a+1,?_strtol+1
 14775  000E22  C08E  F083         	movff	strtol@a+2,?_strtol+2
 14776  000E26  C08F  F084         	movff	strtol@a+3,?_strtol+3
 14777                           
 14778                           ; BSR set to: 0
 14779  000E2A  0012               	return		;funcret
 14780  000E2C                     __end_of_strtol:
 14781                           	opt stack 0
 14782                           tosu	equ	0xFFF
 14783                           tosh	equ	0xFFE
 14784                           tosl	equ	0xFFD
 14785                           pclath	equ	0xFFA
 14786                           tblptru	equ	0xFF8
 14787                           tblptrh	equ	0xFF7
 14788                           tblptrl	equ	0xFF6
 14789                           tablat	equ	0xFF5
 14790                           prodh	equ	0xFF4
 14791                           prodl	equ	0xFF3
 14792                           intcon	equ	0xFF2
 14793                           intcon2	equ	0xFF1
 14794                           intcon3	equ	0xFF0
 14795                           indf0	equ	0xFEF
 14796                           postinc0	equ	0xFEE
 14797                           plusw0	equ	0xFEB
 14798                           fsr0h	equ	0xFEA
 14799                           fsr0l	equ	0xFE9
 14800                           wreg	equ	0xFE8
 14801                           indf1	equ	0xFE7
 14802                           postinc1	equ	0xFE6
 14803                           postdec1	equ	0xFE5
 14804                           fsr1h	equ	0xFE2
 14805                           fsr1l	equ	0xFE1
 14806                           indf2	equ	0xFDF
 14807                           postinc2	equ	0xFDE
 14808                           postdec2	equ	0xFDD
 14809                           plusw2	equ	0xFDB
 14810                           fsr2h	equ	0xFDA
 14811                           fsr2l	equ	0xFD9
 14812                           status	equ	0xFD8
 14813                           
 14814 ;; *************** function _toupper *****************
 14815 ;; Defined at:
 14816 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\toupper.c"
 14817 ;; Parameters:    Size  Location     Type
 14818 ;;  c               1    wreg     unsigned char 
 14819 ;; Auto vars:     Size  Location     Type
 14820 ;;  c               1   21[BANK0 ] unsigned char 
 14821 ;; Return value:  Size  Location     Type
 14822 ;;                  1    wreg      unsigned char 
 14823 ;; Registers used:
 14824 ;;		wreg, status,2, status,0
 14825 ;; Tracked objects:
 14826 ;;		On entry : 0/0
 14827 ;;		On exit  : 0/0
 14828 ;;		Unchanged: 0/0
 14829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14833 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14834 ;;Total ram usage:        1 bytes
 14835 ;; Hardware stack levels used:    1
 14836 ;; Hardware stack levels required when called:    9
 14837 ;; This function calls:
 14838 ;;		Nothing
 14839 ;; This function is called by:
 14840 ;;		_strtol
 14841 ;; This function uses a non-reentrant model
 14842 ;;
 14843                           
 14844                           	psect	text63
 14845  004230                     __ptext63:
 14846                           	opt stack 0
 14847  004230                     _toupper:
 14848                           	opt stack 15
 14849                           
 14850                           ; BSR set to: 0
 14851                           ;incstack = 0
 14852                           ;toupper@c stored from wreg
 14853  004230  0100               	movlb	0	; () banked
 14854  004232  6F75               	movwf	toupper@c& (0+255),b
 14855  004234  0E7B               	movlw	123
 14856  004236  0100               	movlb	0	; () banked
 14857  004238  6175               	cpfslt	toupper@c& (0+255),b
 14858  00423A  D004               	goto	l2599
 14859                           
 14860                           ; BSR set to: 0
 14861  00423C  0E60               	movlw	96
 14862  00423E  6575               	cpfsgt	toupper@c& (0+255),b
 14863  004240  D001               	goto	l2599
 14864                           
 14865                           ; BSR set to: 0
 14866  004242  9B75               	bcf	toupper@c& (0+255),5,b
 14867  004244                     l2599:
 14868                           
 14869                           ; BSR set to: 0
 14870                           
 14871                           ; BSR set to: 0
 14872  004244  5175               	movf	toupper@c& (0+255),w,b
 14873  004246  0012               	return	
 14874  004248                     __end_of_toupper:
 14875                           	opt stack 0
 14876                           tosu	equ	0xFFF
 14877                           tosh	equ	0xFFE
 14878                           tosl	equ	0xFFD
 14879                           pclath	equ	0xFFA
 14880                           tblptru	equ	0xFF8
 14881                           tblptrh	equ	0xFF7
 14882                           tblptrl	equ	0xFF6
 14883                           tablat	equ	0xFF5
 14884                           prodh	equ	0xFF4
 14885                           prodl	equ	0xFF3
 14886                           intcon	equ	0xFF2
 14887                           intcon2	equ	0xFF1
 14888                           intcon3	equ	0xFF0
 14889                           indf0	equ	0xFEF
 14890                           postinc0	equ	0xFEE
 14891                           plusw0	equ	0xFEB
 14892                           fsr0h	equ	0xFEA
 14893                           fsr0l	equ	0xFE9
 14894                           wreg	equ	0xFE8
 14895                           indf1	equ	0xFE7
 14896                           postinc1	equ	0xFE6
 14897                           postdec1	equ	0xFE5
 14898                           fsr1h	equ	0xFE2
 14899                           fsr1l	equ	0xFE1
 14900                           indf2	equ	0xFDF
 14901                           postinc2	equ	0xFDE
 14902                           postdec2	equ	0xFDD
 14903                           plusw2	equ	0xFDB
 14904                           fsr2h	equ	0xFDA
 14905                           fsr2l	equ	0xFD9
 14906                           status	equ	0xFD8
 14907                           
 14908 ;; *************** function _isspace *****************
 14909 ;; Defined at:
 14910 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isspace.c"
 14911 ;; Parameters:    Size  Location     Type
 14912 ;;  c               1    wreg     unsigned char 
 14913 ;; Auto vars:     Size  Location     Type
 14914 ;;  c               1   23[BANK0 ] unsigned char 
 14915 ;; Return value:  Size  Location     Type
 14916 ;;		None               void
 14917 ;; Registers used:
 14918 ;;		wreg, status,2, status,0
 14919 ;; Tracked objects:
 14920 ;;		On entry : 0/0
 14921 ;;		On exit  : 0/0
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14925 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14926 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14927 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14928 ;;Total ram usage:        3 bytes
 14929 ;; Hardware stack levels used:    1
 14930 ;; Hardware stack levels required when called:    9
 14931 ;; This function calls:
 14932 ;;		Nothing
 14933 ;; This function is called by:
 14934 ;;		_strtol
 14935 ;;		_xtoi
 14936 ;; This function uses a non-reentrant model
 14937 ;;
 14938                           
 14939                           	psect	text64
 14940  003FCC                     __ptext64:
 14941                           	opt stack 0
 14942  003FCC                     _isspace:
 14943                           	opt stack 15
 14944                           
 14945                           ; BSR set to: 0
 14946                           ;incstack = 0
 14947                           ;isspace@c stored from wreg
 14948  003FCC  0100               	movlb	0	; () banked
 14949  003FCE  6F77               	movwf	isspace@c& (0+255),b
 14950  003FD0  0E01               	movlw	1
 14951  003FD2  0100               	movlb	0	; () banked
 14952  003FD4  6F76               	movwf	_isspace$5687& (0+255),b
 14953                           
 14954                           ; BSR set to: 0
 14955  003FD6  0E20               	movlw	32
 14956  003FD8  1977               	xorwf	isspace@c& (0+255),w,b
 14957  003FDA  B4D8               	btfsc	status,2,c
 14958  003FDC  D008               	goto	l2656
 14959                           
 14960                           ; BSR set to: 0
 14961  003FDE  0E0E               	movlw	14
 14962  003FE0  6177               	cpfslt	isspace@c& (0+255),b
 14963  003FE2  D003               	goto	u8090
 14964                           
 14965                           ; BSR set to: 0
 14966  003FE4  0E09               	movlw	9
 14967  003FE6  6177               	cpfslt	isspace@c& (0+255),b
 14968  003FE8  D002               	goto	l2656
 14969  003FEA                     u8090:
 14970                           
 14971                           ; BSR set to: 0
 14972                           
 14973                           ; BSR set to: 0
 14974  003FEA  0E00               	movlw	0
 14975  003FEC  6F76               	movwf	_isspace$5687& (0+255),b
 14976  003FEE                     l2656:
 14977                           
 14978                           ; BSR set to: 0
 14979                           
 14980                           ; BSR set to: 0
 14981  003FEE  C076  F075         	movff	_isspace$5687,??_isspace
 14982  003FF2  3175               	rrcf	??_isspace& (0+255),w,b
 14983  003FF4  0012               	return	
 14984  003FF6                     __end_of_isspace:
 14985                           	opt stack 0
 14986                           tosu	equ	0xFFF
 14987                           tosh	equ	0xFFE
 14988                           tosl	equ	0xFFD
 14989                           pclath	equ	0xFFA
 14990                           tblptru	equ	0xFF8
 14991                           tblptrh	equ	0xFF7
 14992                           tblptrl	equ	0xFF6
 14993                           tablat	equ	0xFF5
 14994                           prodh	equ	0xFF4
 14995                           prodl	equ	0xFF3
 14996                           intcon	equ	0xFF2
 14997                           intcon2	equ	0xFF1
 14998                           intcon3	equ	0xFF0
 14999                           indf0	equ	0xFEF
 15000                           postinc0	equ	0xFEE
 15001                           plusw0	equ	0xFEB
 15002                           fsr0h	equ	0xFEA
 15003                           fsr0l	equ	0xFE9
 15004                           wreg	equ	0xFE8
 15005                           indf1	equ	0xFE7
 15006                           postinc1	equ	0xFE6
 15007                           postdec1	equ	0xFE5
 15008                           fsr1h	equ	0xFE2
 15009                           fsr1l	equ	0xFE1
 15010                           indf2	equ	0xFDF
 15011                           postinc2	equ	0xFDE
 15012                           postdec2	equ	0xFDD
 15013                           plusw2	equ	0xFDB
 15014                           fsr2h	equ	0xFDA
 15015                           fsr2l	equ	0xFD9
 15016                           status	equ	0xFD8
 15017                           
 15018 ;; *************** function _isalpha *****************
 15019 ;; Defined at:
 15020 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isalpha.c"
 15021 ;; Parameters:    Size  Location     Type
 15022 ;;  c               1    wreg     unsigned char 
 15023 ;; Auto vars:     Size  Location     Type
 15024 ;;  c               1   26[BANK0 ] unsigned char 
 15025 ;; Return value:  Size  Location     Type
 15026 ;;		None               void
 15027 ;; Registers used:
 15028 ;;		wreg, status,2, status,0, cstack
 15029 ;; Tracked objects:
 15030 ;;		On entry : 0/0
 15031 ;;		On exit  : 0/0
 15032 ;;		Unchanged: 0/0
 15033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15035 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15036 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15037 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15038 ;;Total ram usage:        3 bytes
 15039 ;; Hardware stack levels used:    1
 15040 ;; Hardware stack levels required when called:   10
 15041 ;; This function calls:
 15042 ;;		_isupper
 15043 ;; This function is called by:
 15044 ;;		_strtol
 15045 ;; This function uses a non-reentrant model
 15046 ;;
 15047                           
 15048                           	psect	text65
 15049  003EBA                     __ptext65:
 15050                           	opt stack 0
 15051  003EBA                     _isalpha:
 15052                           	opt stack 14
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;incstack = 0
 15056                           ;isalpha@c stored from wreg
 15057  003EBA  0100               	movlb	0	; () banked
 15058  003EBC  6F7A               	movwf	isalpha@c& (0+255),b
 15059  003EBE  0E01               	movlw	1
 15060  003EC0  0100               	movlb	0	; () banked
 15061  003EC2  6F79               	movwf	_isalpha$5684& (0+255),b
 15062                           
 15063                           ; BSR set to: 0
 15064  003EC4  0E7B               	movlw	123
 15065  003EC6  617A               	cpfslt	isalpha@c& (0+255),b
 15066  003EC8  D003               	goto	u8110
 15067                           
 15068                           ; BSR set to: 0
 15069  003ECA  0E61               	movlw	97
 15070  003ECC  617A               	cpfslt	isalpha@c& (0+255),b
 15071  003ECE  D008               	goto	l2651
 15072  003ED0                     u8110:
 15073                           
 15074                           ; BSR set to: 0
 15075                           
 15076                           ; BSR set to: 0
 15077  003ED0  517A               	movf	isalpha@c& (0+255),w,b
 15078  003ED2  EC56  F020         	call	_isupper
 15079  003ED6  B0D8               	btfsc	status,0,c
 15080  003ED8  D003               	goto	l2651
 15081  003EDA  0E00               	movlw	0
 15082  003EDC  0100               	movlb	0	; () banked
 15083  003EDE  6F79               	movwf	_isalpha$5684& (0+255),b
 15084  003EE0                     l2651:
 15085                           
 15086                           ; BSR set to: 0
 15087  003EE0  C079  F078         	movff	_isalpha$5684,??_isalpha
 15088  003EE4  0100               	movlb	0	; () banked
 15089  003EE6  3178               	rrcf	??_isalpha& (0+255),w,b
 15090  003EE8  0012               	return	
 15091  003EEA                     __end_of_isalpha:
 15092                           	opt stack 0
 15093                           tosu	equ	0xFFF
 15094                           tosh	equ	0xFFE
 15095                           tosl	equ	0xFFD
 15096                           pclath	equ	0xFFA
 15097                           tblptru	equ	0xFF8
 15098                           tblptrh	equ	0xFF7
 15099                           tblptrl	equ	0xFF6
 15100                           tablat	equ	0xFF5
 15101                           prodh	equ	0xFF4
 15102                           prodl	equ	0xFF3
 15103                           intcon	equ	0xFF2
 15104                           intcon2	equ	0xFF1
 15105                           intcon3	equ	0xFF0
 15106                           indf0	equ	0xFEF
 15107                           postinc0	equ	0xFEE
 15108                           plusw0	equ	0xFEB
 15109                           fsr0h	equ	0xFEA
 15110                           fsr0l	equ	0xFE9
 15111                           wreg	equ	0xFE8
 15112                           indf1	equ	0xFE7
 15113                           postinc1	equ	0xFE6
 15114                           postdec1	equ	0xFE5
 15115                           fsr1h	equ	0xFE2
 15116                           fsr1l	equ	0xFE1
 15117                           indf2	equ	0xFDF
 15118                           postinc2	equ	0xFDE
 15119                           postdec2	equ	0xFDD
 15120                           plusw2	equ	0xFDB
 15121                           fsr2h	equ	0xFDA
 15122                           fsr2l	equ	0xFD9
 15123                           status	equ	0xFD8
 15124                           
 15125 ;; *************** function _isupper *****************
 15126 ;; Defined at:
 15127 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isupper.c"
 15128 ;; Parameters:    Size  Location     Type
 15129 ;;  c               1    wreg     unsigned char 
 15130 ;; Auto vars:     Size  Location     Type
 15131 ;;  c               1   23[BANK0 ] unsigned char 
 15132 ;; Return value:  Size  Location     Type
 15133 ;;		None               void
 15134 ;; Registers used:
 15135 ;;		wreg, status,2, status,0
 15136 ;; Tracked objects:
 15137 ;;		On entry : 0/0
 15138 ;;		On exit  : 0/0
 15139 ;;		Unchanged: 0/0
 15140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15142 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15143 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15144 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15145 ;;Total ram usage:        3 bytes
 15146 ;; Hardware stack levels used:    1
 15147 ;; Hardware stack levels required when called:    9
 15148 ;; This function calls:
 15149 ;;		Nothing
 15150 ;; This function is called by:
 15151 ;;		_xtoi
 15152 ;;		_isalpha
 15153 ;; This function uses a non-reentrant model
 15154 ;;
 15155                           
 15156                           	psect	text66
 15157  0040AC                     __ptext66:
 15158                           	opt stack 0
 15159  0040AC                     _isupper:
 15160                           	opt stack 15
 15161                           
 15162                           ; BSR set to: 0
 15163                           ;incstack = 0
 15164                           ;isupper@c stored from wreg
 15165  0040AC  0100               	movlb	0	; () banked
 15166  0040AE  6F77               	movwf	isupper@c& (0+255),b
 15167  0040B0  0E00               	movlw	0
 15168  0040B2  0100               	movlb	0	; () banked
 15169  0040B4  6F76               	movwf	_isupper$5690& (0+255),b
 15170                           
 15171                           ; BSR set to: 0
 15172  0040B6  0E5B               	movlw	91
 15173  0040B8  6177               	cpfslt	isupper@c& (0+255),b
 15174  0040BA  D005               	goto	l2661
 15175                           
 15176                           ; BSR set to: 0
 15177  0040BC  0E40               	movlw	64
 15178  0040BE  6577               	cpfsgt	isupper@c& (0+255),b
 15179  0040C0  D002               	goto	l2661
 15180                           
 15181                           ; BSR set to: 0
 15182  0040C2  0E01               	movlw	1
 15183  0040C4  6F76               	movwf	_isupper$5690& (0+255),b
 15184  0040C6                     l2661:
 15185                           
 15186                           ; BSR set to: 0
 15187                           
 15188                           ; BSR set to: 0
 15189  0040C6  C076  F075         	movff	_isupper$5690,??_isupper
 15190  0040CA  3175               	rrcf	??_isupper& (0+255),w,b
 15191  0040CC  0012               	return	
 15192  0040CE                     __end_of_isupper:
 15193                           	opt stack 0
 15194                           tosu	equ	0xFFF
 15195                           tosh	equ	0xFFE
 15196                           tosl	equ	0xFFD
 15197                           pclath	equ	0xFFA
 15198                           tblptru	equ	0xFF8
 15199                           tblptrh	equ	0xFF7
 15200                           tblptrl	equ	0xFF6
 15201                           tablat	equ	0xFF5
 15202                           prodh	equ	0xFF4
 15203                           prodl	equ	0xFF3
 15204                           intcon	equ	0xFF2
 15205                           intcon2	equ	0xFF1
 15206                           intcon3	equ	0xFF0
 15207                           indf0	equ	0xFEF
 15208                           postinc0	equ	0xFEE
 15209                           plusw0	equ	0xFEB
 15210                           fsr0h	equ	0xFEA
 15211                           fsr0l	equ	0xFE9
 15212                           wreg	equ	0xFE8
 15213                           indf1	equ	0xFE7
 15214                           postinc1	equ	0xFE6
 15215                           postdec1	equ	0xFE5
 15216                           fsr1h	equ	0xFE2
 15217                           fsr1l	equ	0xFE1
 15218                           indf2	equ	0xFDF
 15219                           postinc2	equ	0xFDE
 15220                           postdec2	equ	0xFDD
 15221                           plusw2	equ	0xFDB
 15222                           fsr2h	equ	0xFDA
 15223                           fsr2l	equ	0xFD9
 15224                           status	equ	0xFD8
 15225                           
 15226 ;; *************** function ___lmul *****************
 15227 ;; Defined at:
 15228 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul32.c"
 15229 ;; Parameters:    Size  Location     Type
 15230 ;;  multiplier      4   21[BANK0 ] unsigned long 
 15231 ;;  multiplicand    4   25[BANK0 ] unsigned long 
 15232 ;; Auto vars:     Size  Location     Type
 15233 ;;  product         4   29[BANK0 ] unsigned long 
 15234 ;; Return value:  Size  Location     Type
 15235 ;;                  4   21[BANK0 ] unsigned long 
 15236 ;; Registers used:
 15237 ;;		wreg, status,2, status,0
 15238 ;; Tracked objects:
 15239 ;;		On entry : 0/0
 15240 ;;		On exit  : 0/0
 15241 ;;		Unchanged: 0/0
 15242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15243 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15244 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15246 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15247 ;;Total ram usage:       12 bytes
 15248 ;; Hardware stack levels used:    1
 15249 ;; Hardware stack levels required when called:    9
 15250 ;; This function calls:
 15251 ;;		Nothing
 15252 ;; This function is called by:
 15253 ;;		_Tmr_TmrBPrSet
 15254 ;;		_strtol
 15255 ;;		_SetUartBaudRate
 15256 ;; This function uses a non-reentrant model
 15257 ;;
 15258                           
 15259                           	psect	text67
 15260  003822                     __ptext67:
 15261                           	opt stack 0
 15262  003822                     ___lmul:
 15263                           	opt stack 17
 15264                           
 15265                           ; BSR set to: 0
 15266                           ;incstack = 0
 15267  003822  0E00               	movlw	0
 15268  003824  0100               	movlb	0	; () banked
 15269  003826  6F7D               	movwf	___lmul@product& (0+255),b
 15270  003828  0E00               	movlw	0
 15271  00382A  6F7E               	movwf	(___lmul@product+1)& (0+255),b
 15272  00382C  0E00               	movlw	0
 15273  00382E  6F7F               	movwf	(___lmul@product+2)& (0+255),b
 15274  003830  0E00               	movlw	0
 15275  003832  6F80               	movwf	(___lmul@product+3)& (0+255),b
 15276  003834                     
 15277                           ; BSR set to: 0
 15278                           
 15279                           ; BSR set to: 0
 15280  003834  A175               	btfss	___lmul@multiplier& (0+255),0,b
 15281  003836  D008               	goto	l1963
 15282                           
 15283                           ; BSR set to: 0
 15284  003838  5179               	movf	___lmul@multiplicand& (0+255),w,b
 15285  00383A  277D               	addwf	___lmul@product& (0+255),f,b
 15286  00383C  517A               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 15287  00383E  237E               	addwfc	(___lmul@product+1)& (0+255),f,b
 15288  003840  517B               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 15289  003842  237F               	addwfc	(___lmul@product+2)& (0+255),f,b
 15290  003844  517C               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 15291  003846  2380               	addwfc	(___lmul@product+3)& (0+255),f,b
 15292  003848                     l1963:
 15293                           
 15294                           ; BSR set to: 0
 15295                           
 15296                           ; BSR set to: 0
 15297  003848  90D8               	bcf	status,0,c
 15298  00384A  3779               	rlcf	___lmul@multiplicand& (0+255),f,b
 15299  00384C  377A               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 15300  00384E  377B               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 15301  003850  377C               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 15302                           
 15303                           ; BSR set to: 0
 15304  003852  90D8               	bcf	status,0,c
 15305  003854  3378               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 15306  003856  3377               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 15307  003858  3376               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 15308  00385A  3375               	rrcf	___lmul@multiplier& (0+255),f,b
 15309  00385C  5175               	movf	___lmul@multiplier& (0+255),w,b
 15310  00385E  1176               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 15311  003860  1177               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 15312  003862  1178               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 15313  003864  A4D8               	btfss	status,2,c
 15314  003866  D7E6               	goto	l1962
 15315                           
 15316                           ; BSR set to: 0
 15317  003868  C07D  F075         	movff	___lmul@product,?___lmul
 15318  00386C  C07E  F076         	movff	___lmul@product+1,?___lmul+1
 15319  003870  C07F  F077         	movff	___lmul@product+2,?___lmul+2
 15320  003874  C080  F078         	movff	___lmul@product+3,?___lmul+3
 15321                           
 15322                           ; BSR set to: 0
 15323  003878  0012               	return		;funcret
 15324  00387A                     __end_of___lmul:
 15325                           	opt stack 0
 15326                           tosu	equ	0xFFF
 15327                           tosh	equ	0xFFE
 15328                           tosl	equ	0xFFD
 15329                           pclath	equ	0xFFA
 15330                           tblptru	equ	0xFF8
 15331                           tblptrh	equ	0xFF7
 15332                           tblptrl	equ	0xFF6
 15333                           tablat	equ	0xFF5
 15334                           prodh	equ	0xFF4
 15335                           prodl	equ	0xFF3
 15336                           intcon	equ	0xFF2
 15337                           intcon2	equ	0xFF1
 15338                           intcon3	equ	0xFF0
 15339                           indf0	equ	0xFEF
 15340                           postinc0	equ	0xFEE
 15341                           plusw0	equ	0xFEB
 15342                           fsr0h	equ	0xFEA
 15343                           fsr0l	equ	0xFE9
 15344                           wreg	equ	0xFE8
 15345                           indf1	equ	0xFE7
 15346                           postinc1	equ	0xFE6
 15347                           postdec1	equ	0xFE5
 15348                           fsr1h	equ	0xFE2
 15349                           fsr1l	equ	0xFE1
 15350                           indf2	equ	0xFDF
 15351                           postinc2	equ	0xFDE
 15352                           postdec2	equ	0xFDD
 15353                           plusw2	equ	0xFDB
 15354                           fsr2h	equ	0xFDA
 15355                           fsr2l	equ	0xFD9
 15356                           status	equ	0xFD8
 15357                           
 15358 ;; *************** function _putUSBUSART *****************
 15359 ;; Defined at:
 15360 ;;		line 559 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 15361 ;; Parameters:    Size  Location     Type
 15362 ;;  data            2   27[BANK0 ] PTR unsigned char 
 15363 ;;		 -> MsgReady(23), Term_MainSm@Data(50), MsgFormat(236), Welcome(137), 
 15364 ;;		 -> Terminal@UsbTxBuffer(200), Terminal@TermRxBuffer(50), Terminal@Payload(80), Terminal@UsbRxBuffer(200), 
 15365 ;;  length          1   29[BANK0 ] unsigned char 
 15366 ;; Auto vars:     Size  Location     Type
 15367 ;;		None
 15368 ;; Return value:  Size  Location     Type
 15369 ;;                  1    wreg      void 
 15370 ;; Registers used:
 15371 ;;		wreg, status,2, status,0
 15372 ;; Tracked objects:
 15373 ;;		On entry : 0/0
 15374 ;;		On exit  : 0/0
 15375 ;;		Unchanged: 0/0
 15376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15377 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15380 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15381 ;;Total ram usage:        3 bytes
 15382 ;; Hardware stack levels used:    1
 15383 ;; Hardware stack levels required when called:    9
 15384 ;; This function calls:
 15385 ;;		Nothing
 15386 ;; This function is called by:
 15387 ;;		_Terminal
 15388 ;;		_Term_MainSm
 15389 ;; This function uses a non-reentrant model
 15390 ;;
 15391                           
 15392                           	psect	text68
 15393  004172                     __ptext68:
 15394                           	opt stack 0
 15395  004172                     _putUSBUSART:
 15396                           	opt stack 17
 15397                           
 15398                           ;usb_device_cdc.c: 584: ;
 15399                           ;usb_device_cdc.c: 585: if(cdc_trf_state == 0)
 15400                           
 15401                           ; BSR set to: 0
 15402                           ;incstack = 0
 15403  004172  0100               	movlb	0	; () banked
 15404  004174  51BB               	movf	_cdc_trf_state& (0+255),w,b
 15405  004176  A4D8               	btfss	status,2,c
 15406  004178  0012               	return	
 15407                           
 15408                           ; BSR set to: 0
 15409                           ;usb_device_cdc.c: 586: {
 15410                           ;usb_device_cdc.c: 587: { pCDCSrc.bRam = (uint8_t*)data; cdc_tx_len = length; cdc_mem_ty
      +                          pe = 0x01; cdc_trf_state = 1; };
 15411  00417A  C07B  F00C         	movff	putUSBUSART@data,_pCDCSrc
 15412  00417E  C07C  F00D         	movff	putUSBUSART@data+1,_pCDCSrc+1
 15413                           
 15414                           ; BSR set to: 0
 15415  004182  C07D  F0BA         	movff	putUSBUSART@length,_cdc_tx_len
 15416                           
 15417                           ; BSR set to: 0
 15418  004186  0E01               	movlw	1
 15419  004188  6FB9               	movwf	_cdc_mem_type& (0+255),b
 15420                           
 15421                           ; BSR set to: 0
 15422  00418A  0E01               	movlw	1
 15423  00418C  6FBB               	movwf	_cdc_trf_state& (0+255),b
 15424  00418E  0012               	return	
 15425  004190                     __end_of_putUSBUSART:
 15426                           	opt stack 0
 15427                           tosu	equ	0xFFF
 15428                           tosh	equ	0xFFE
 15429                           tosl	equ	0xFFD
 15430                           pclath	equ	0xFFA
 15431                           tblptru	equ	0xFF8
 15432                           tblptrh	equ	0xFF7
 15433                           tblptrl	equ	0xFF6
 15434                           tablat	equ	0xFF5
 15435                           prodh	equ	0xFF4
 15436                           prodl	equ	0xFF3
 15437                           intcon	equ	0xFF2
 15438                           intcon2	equ	0xFF1
 15439                           intcon3	equ	0xFF0
 15440                           indf0	equ	0xFEF
 15441                           postinc0	equ	0xFEE
 15442                           plusw0	equ	0xFEB
 15443                           fsr0h	equ	0xFEA
 15444                           fsr0l	equ	0xFE9
 15445                           wreg	equ	0xFE8
 15446                           indf1	equ	0xFE7
 15447                           postinc1	equ	0xFE6
 15448                           postdec1	equ	0xFE5
 15449                           fsr1h	equ	0xFE2
 15450                           fsr1l	equ	0xFE1
 15451                           indf2	equ	0xFDF
 15452                           postinc2	equ	0xFDE
 15453                           postdec2	equ	0xFDD
 15454                           plusw2	equ	0xFDB
 15455                           fsr2h	equ	0xFDA
 15456                           fsr2l	equ	0xFD9
 15457                           status	equ	0xFD8
 15458                           
 15459 ;; *************** function _itoa *****************
 15460 ;; Defined at:
 15461 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 15462 ;; Parameters:    Size  Location     Type
 15463 ;;  buf             2   37[BANK0 ] PTR unsigned char 
 15464 ;;		 -> Terminal@Payload(80), 
 15465 ;;  val             2   39[BANK0 ] int 
 15466 ;;  base            2   41[BANK0 ] int 
 15467 ;; Auto vars:     Size  Location     Type
 15468 ;;  cp              2   43[BANK0 ] PTR unsigned char 
 15469 ;;		 -> Terminal@Payload(80), 
 15470 ;; Return value:  Size  Location     Type
 15471 ;;                  2   37[BANK0 ] PTR unsigned char 
 15472 ;; Registers used:
 15473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15474 ;; Tracked objects:
 15475 ;;		On entry : 0/0
 15476 ;;		On exit  : 0/0
 15477 ;;		Unchanged: 0/0
 15478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15479 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15480 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15482 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15483 ;;Total ram usage:        8 bytes
 15484 ;; Hardware stack levels used:    1
 15485 ;; Hardware stack levels required when called:   11
 15486 ;; This function calls:
 15487 ;;		_utoa
 15488 ;; This function is called by:
 15489 ;;		_Terminal
 15490 ;; This function uses a non-reentrant model
 15491 ;;
 15492                           
 15493                           	psect	text69
 15494  003B8C                     __ptext69:
 15495                           	opt stack 0
 15496  003B8C                     _itoa:
 15497                           	opt stack 14
 15498                           
 15499                           ; BSR set to: 0
 15500                           ;incstack = 0
 15501  003B8C  C085  F08B         	movff	itoa@buf,itoa@cp
 15502  003B90  C086  F08C         	movff	itoa@buf+1,itoa@cp+1
 15503  003B94  0100               	movlb	0	; () banked
 15504  003B96  AF88               	btfss	(itoa@val+1)& (0+255),7,b
 15505  003B98  D00C               	goto	l2301
 15506                           
 15507                           ; BSR set to: 0
 15508  003B9A  C085  FFD9         	movff	itoa@buf,fsr2l
 15509  003B9E  C086  FFDA         	movff	itoa@buf+1,fsr2h
 15510  003BA2  0E2D               	movlw	45
 15511  003BA4  6EDF               	movwf	indf2,c
 15512                           
 15513                           ; BSR set to: 0
 15514  003BA6  4B85               	infsnz	itoa@buf& (0+255),f,b
 15515  003BA8  2B86               	incf	(itoa@buf+1)& (0+255),f,b
 15516                           
 15517                           ; BSR set to: 0
 15518  003BAA  6D87               	negf	itoa@val& (0+255),b
 15519  003BAC  1F88               	comf	(itoa@val+1)& (0+255),f,b
 15520  003BAE  B0D8               	btfsc	status,0,c
 15521  003BB0  2B88               	incf	(itoa@val+1)& (0+255),f,b
 15522  003BB2                     l2301:
 15523                           
 15524                           ; BSR set to: 0
 15525                           
 15526                           ; BSR set to: 0
 15527  003BB2  C085  F07C         	movff	itoa@buf,utoa@buf
 15528  003BB6  C086  F07D         	movff	itoa@buf+1,utoa@buf+1
 15529  003BBA  C087  F07E         	movff	itoa@val,utoa@val
 15530  003BBE  C088  F07F         	movff	itoa@val+1,utoa@val+1
 15531  003BC2  C089  F080         	movff	itoa@base,utoa@base
 15532  003BC6  C08A  F081         	movff	itoa@base+1,utoa@base+1
 15533  003BCA  ECF8  F015         	call	_utoa	;wreg free
 15534  003BCE  0012               	return	
 15535  003BD0                     __end_of_itoa:
 15536                           	opt stack 0
 15537                           tosu	equ	0xFFF
 15538                           tosh	equ	0xFFE
 15539                           tosl	equ	0xFFD
 15540                           pclath	equ	0xFFA
 15541                           tblptru	equ	0xFF8
 15542                           tblptrh	equ	0xFF7
 15543                           tblptrl	equ	0xFF6
 15544                           tablat	equ	0xFF5
 15545                           prodh	equ	0xFF4
 15546                           prodl	equ	0xFF3
 15547                           intcon	equ	0xFF2
 15548                           intcon2	equ	0xFF1
 15549                           intcon3	equ	0xFF0
 15550                           indf0	equ	0xFEF
 15551                           postinc0	equ	0xFEE
 15552                           plusw0	equ	0xFEB
 15553                           fsr0h	equ	0xFEA
 15554                           fsr0l	equ	0xFE9
 15555                           wreg	equ	0xFE8
 15556                           indf1	equ	0xFE7
 15557                           postinc1	equ	0xFE6
 15558                           postdec1	equ	0xFE5
 15559                           fsr1h	equ	0xFE2
 15560                           fsr1l	equ	0xFE1
 15561                           indf2	equ	0xFDF
 15562                           postinc2	equ	0xFDE
 15563                           postdec2	equ	0xFDD
 15564                           plusw2	equ	0xFDB
 15565                           fsr2h	equ	0xFDA
 15566                           fsr2l	equ	0xFD9
 15567                           status	equ	0xFD8
 15568                           
 15569 ;; *************** function _utoa *****************
 15570 ;; Defined at:
 15571 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 15572 ;; Parameters:    Size  Location     Type
 15573 ;;  buf             2   28[BANK0 ] PTR unsigned char 
 15574 ;;		 -> Term_MainSm@FwkBuildStr(4), Term_MainSm@FwkMinorStr(4), Term_MainSm@FwkMajorStr(4), Terminal@Payload(80), 
 15575 ;;  val             2   30[BANK0 ] unsigned int 
 15576 ;;  base            2   32[BANK0 ] int 
 15577 ;; Auto vars:     Size  Location     Type
 15578 ;;  v               2   34[BANK0 ] unsigned int 
 15579 ;;  c               1   36[BANK0 ] unsigned char 
 15580 ;; Return value:  Size  Location     Type
 15581 ;;                  2   28[BANK0 ] PTR unsigned char 
 15582 ;; Registers used:
 15583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15584 ;; Tracked objects:
 15585 ;;		On entry : 0/0
 15586 ;;		On exit  : 0/0
 15587 ;;		Unchanged: 0/0
 15588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15589 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15590 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15592 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15593 ;;Total ram usage:        9 bytes
 15594 ;; Hardware stack levels used:    1
 15595 ;; Hardware stack levels required when called:   10
 15596 ;; This function calls:
 15597 ;;		___lwdiv
 15598 ;;		___lwmod
 15599 ;; This function is called by:
 15600 ;;		_Term_MainSm
 15601 ;;		_itoa
 15602 ;; This function uses a non-reentrant model
 15603 ;;
 15604                           
 15605                           	psect	text70
 15606  002BF0                     __ptext70:
 15607                           	opt stack 0
 15608  002BF0                     _utoa:
 15609                           	opt stack 16
 15610                           
 15611                           ;incstack = 0
 15612  002BF0  C07E  F082         	movff	utoa@val,utoa@v
 15613  002BF4  C07F  F083         	movff	utoa@val+1,utoa@v+1
 15614  002BF8  C082  F075         	movff	utoa@v,___lwdiv@dividend
 15615  002BFC  C083  F076         	movff	utoa@v+1,___lwdiv@dividend+1
 15616  002C00  C080  F077         	movff	utoa@base,___lwdiv@divisor
 15617  002C04  C081  F078         	movff	utoa@base+1,___lwdiv@divisor+1
 15618  002C08  ECE7  F01C         	call	___lwdiv	;wreg free
 15619  002C0C  C075  F082         	movff	?___lwdiv,utoa@v
 15620  002C10  C076  F083         	movff	?___lwdiv+1,utoa@v+1
 15621  002C14  0100               	movlb	0	; () banked
 15622  002C16  4B7C               	infsnz	utoa@buf& (0+255),f,b
 15623  002C18  2B7D               	incf	(utoa@buf+1)& (0+255),f,b
 15624                           
 15625                           ; BSR set to: 0
 15626  002C1A  5182               	movf	utoa@v& (0+255),w,b
 15627  002C1C  1183               	iorwf	(utoa@v+1)& (0+255),w,b
 15628  002C1E  A4D8               	btfss	status,2,c
 15629  002C20  D7EB               	goto	l2305
 15630                           
 15631                           ; BSR set to: 0
 15632                           
 15633                           ; BSR set to: 0
 15634  002C22  C07C  FFD9         	movff	utoa@buf,fsr2l
 15635  002C26  C07D  FFDA         	movff	utoa@buf+1,fsr2h
 15636  002C2A  0E00               	movlw	0
 15637  002C2C  6EDF               	movwf	indf2,c
 15638                           
 15639                           ; BSR set to: 0
 15640  002C2E  077C               	decf	utoa@buf& (0+255),f,b
 15641  002C30  A0D8               	btfss	status,0,c
 15642  002C32  077D               	decf	(utoa@buf+1)& (0+255),f,b
 15643  002C34                     
 15644                           ; BSR set to: 0
 15645                           
 15646                           ; BSR set to: 0
 15647  002C34  C07E  F075         	movff	utoa@val,___lwmod@dividend
 15648  002C38  C07F  F076         	movff	utoa@val+1,___lwmod@dividend+1
 15649  002C3C  C080  F077         	movff	utoa@base,___lwmod@divisor
 15650  002C40  C081  F078         	movff	utoa@base+1,___lwmod@divisor+1
 15651  002C44  ECE8  F01D         	call	___lwmod	;wreg free
 15652  002C48  0100               	movlb	0	; () banked
 15653  002C4A  5175               	movf	?___lwmod& (0+255),w,b
 15654  002C4C  6F84               	movwf	utoa@c& (0+255),b
 15655                           
 15656                           ; BSR set to: 0
 15657  002C4E  C07E  F075         	movff	utoa@val,___lwdiv@dividend
 15658  002C52  C07F  F076         	movff	utoa@val+1,___lwdiv@dividend+1
 15659  002C56  C080  F077         	movff	utoa@base,___lwdiv@divisor
 15660  002C5A  C081  F078         	movff	utoa@base+1,___lwdiv@divisor+1
 15661  002C5E  ECE7  F01C         	call	___lwdiv	;wreg free
 15662  002C62  C075  F07E         	movff	?___lwdiv,utoa@val
 15663  002C66  C076  F07F         	movff	?___lwdiv+1,utoa@val+1
 15664  002C6A  0E09               	movlw	9
 15665  002C6C  0100               	movlb	0	; () banked
 15666  002C6E  6584               	cpfsgt	utoa@c& (0+255),b
 15667  002C70  D002               	goto	l2308
 15668                           
 15669                           ; BSR set to: 0
 15670  002C72  0E07               	movlw	7
 15671  002C74  2784               	addwf	utoa@c& (0+255),f,b
 15672  002C76                     l2308:
 15673                           
 15674                           ; BSR set to: 0
 15675  002C76  0E30               	movlw	48
 15676  002C78  2784               	addwf	utoa@c& (0+255),f,b
 15677                           
 15678                           ; BSR set to: 0
 15679  002C7A  C07C  FFD9         	movff	utoa@buf,fsr2l
 15680  002C7E  C07D  FFDA         	movff	utoa@buf+1,fsr2h
 15681  002C82  C084  FFDF         	movff	utoa@c,indf2
 15682                           
 15683                           ; BSR set to: 0
 15684  002C86  077C               	decf	utoa@buf& (0+255),f,b
 15685  002C88  A0D8               	btfss	status,0,c
 15686  002C8A  077D               	decf	(utoa@buf+1)& (0+255),f,b
 15687                           
 15688                           ; BSR set to: 0
 15689  002C8C  517E               	movf	utoa@val& (0+255),w,b
 15690  002C8E  117F               	iorwf	(utoa@val+1)& (0+255),w,b
 15691  002C90  A4D8               	btfss	status,2,c
 15692  002C92  D7D0               	goto	l2307
 15693                           
 15694                           ; BSR set to: 0
 15695                           ;	Return value of _utoa is never used
 15696                           
 15697                           ; BSR set to: 0
 15698  002C94  4B7C               	infsnz	utoa@buf& (0+255),f,b
 15699  002C96  2B7D               	incf	(utoa@buf+1)& (0+255),f,b
 15700  002C98  0012               	return	
 15701  002C9A                     __end_of_utoa:
 15702                           	opt stack 0
 15703                           tosu	equ	0xFFF
 15704                           tosh	equ	0xFFE
 15705                           tosl	equ	0xFFD
 15706                           pclath	equ	0xFFA
 15707                           tblptru	equ	0xFF8
 15708                           tblptrh	equ	0xFF7
 15709                           tblptrl	equ	0xFF6
 15710                           tablat	equ	0xFF5
 15711                           prodh	equ	0xFF4
 15712                           prodl	equ	0xFF3
 15713                           intcon	equ	0xFF2
 15714                           intcon2	equ	0xFF1
 15715                           intcon3	equ	0xFF0
 15716                           indf0	equ	0xFEF
 15717                           postinc0	equ	0xFEE
 15718                           plusw0	equ	0xFEB
 15719                           fsr0h	equ	0xFEA
 15720                           fsr0l	equ	0xFE9
 15721                           wreg	equ	0xFE8
 15722                           indf1	equ	0xFE7
 15723                           postinc1	equ	0xFE6
 15724                           postdec1	equ	0xFE5
 15725                           fsr1h	equ	0xFE2
 15726                           fsr1l	equ	0xFE1
 15727                           indf2	equ	0xFDF
 15728                           postinc2	equ	0xFDE
 15729                           postdec2	equ	0xFDD
 15730                           plusw2	equ	0xFDB
 15731                           fsr2h	equ	0xFDA
 15732                           fsr2l	equ	0xFD9
 15733                           status	equ	0xFD8
 15734                           
 15735 ;; *************** function ___lwmod *****************
 15736 ;; Defined at:
 15737 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 15738 ;; Parameters:    Size  Location     Type
 15739 ;;  dividend        2   21[BANK0 ] unsigned int 
 15740 ;;  divisor         2   23[BANK0 ] unsigned int 
 15741 ;; Auto vars:     Size  Location     Type
 15742 ;;  counter         1   25[BANK0 ] unsigned char 
 15743 ;; Return value:  Size  Location     Type
 15744 ;;                  2   21[BANK0 ] unsigned int 
 15745 ;; Registers used:
 15746 ;;		wreg, status,2, status,0
 15747 ;; Tracked objects:
 15748 ;;		On entry : 0/0
 15749 ;;		On exit  : 0/0
 15750 ;;		Unchanged: 0/0
 15751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15752 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15755 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15756 ;;Total ram usage:        5 bytes
 15757 ;; Hardware stack levels used:    1
 15758 ;; Hardware stack levels required when called:    9
 15759 ;; This function calls:
 15760 ;;		Nothing
 15761 ;; This function is called by:
 15762 ;;		_utoa
 15763 ;; This function uses a non-reentrant model
 15764 ;;
 15765                           
 15766                           	psect	text71
 15767  003BD0                     __ptext71:
 15768                           	opt stack 0
 15769  003BD0                     ___lwmod:
 15770                           	opt stack 16
 15771                           
 15772                           ; BSR set to: 0
 15773                           ;incstack = 0
 15774  003BD0  0100               	movlb	0	; () banked
 15775  003BD2  5177               	movf	___lwmod@divisor& (0+255),w,b
 15776  003BD4  1178               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 15777  003BD6  B4D8               	btfsc	status,2,c
 15778  003BD8  D018               	goto	l2403
 15779                           
 15780                           ; BSR set to: 0
 15781  003BDA  0E01               	movlw	1
 15782  003BDC  6F79               	movwf	___lwmod@counter& (0+255),b
 15783  003BDE  D004               	goto	l2398
 15784  003BE0                     
 15785                           ; BSR set to: 0
 15786                           
 15787                           ; BSR set to: 0
 15788  003BE0  90D8               	bcf	status,0,c
 15789  003BE2  3777               	rlcf	___lwmod@divisor& (0+255),f,b
 15790  003BE4  3778               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 15791  003BE6  2B79               	incf	___lwmod@counter& (0+255),f,b
 15792  003BE8                     l2398:
 15793                           
 15794                           ; BSR set to: 0
 15795                           
 15796                           ; BSR set to: 0
 15797  003BE8  AF78               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 15798  003BEA  D7FA               	goto	l2399
 15799  003BEC                     u7960:
 15800                           
 15801                           ; BSR set to: 0
 15802                           
 15803                           ; BSR set to: 0
 15804                           
 15805                           ; BSR set to: 0
 15806  003BEC  5177               	movf	___lwmod@divisor& (0+255),w,b
 15807  003BEE  5D75               	subwf	___lwmod@dividend& (0+255),w,b
 15808  003BF0  5178               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15809  003BF2  5976               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 15810  003BF4  A0D8               	btfss	status,0,c
 15811  003BF6  D004               	goto	l2402
 15812                           
 15813                           ; BSR set to: 0
 15814  003BF8  5177               	movf	___lwmod@divisor& (0+255),w,b
 15815  003BFA  5F75               	subwf	___lwmod@dividend& (0+255),f,b
 15816  003BFC  5178               	movf	(___lwmod@divisor+1)& (0+255),w,b
 15817  003BFE  5B76               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 15818  003C00                     l2402:
 15819                           
 15820                           ; BSR set to: 0
 15821                           
 15822                           ; BSR set to: 0
 15823  003C00  90D8               	bcf	status,0,c
 15824  003C02  3378               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 15825  003C04  3377               	rrcf	___lwmod@divisor& (0+255),f,b
 15826                           
 15827                           ; BSR set to: 0
 15828  003C06  2F79               	decfsz	___lwmod@counter& (0+255),f,b
 15829  003C08  D7F1               	goto	u7960
 15830  003C0A                     l2403:
 15831                           
 15832                           ; BSR set to: 0
 15833                           
 15834                           ; BSR set to: 0
 15835  003C0A  C075  F075         	movff	___lwmod@dividend,?___lwmod
 15836  003C0E  C076  F076         	movff	___lwmod@dividend+1,?___lwmod+1
 15837                           
 15838                           ; BSR set to: 0
 15839  003C12  0012               	return		;funcret
 15840  003C14                     __end_of___lwmod:
 15841                           	opt stack 0
 15842                           tosu	equ	0xFFF
 15843                           tosh	equ	0xFFE
 15844                           tosl	equ	0xFFD
 15845                           pclath	equ	0xFFA
 15846                           tblptru	equ	0xFF8
 15847                           tblptrh	equ	0xFF7
 15848                           tblptrl	equ	0xFF6
 15849                           tablat	equ	0xFF5
 15850                           prodh	equ	0xFF4
 15851                           prodl	equ	0xFF3
 15852                           intcon	equ	0xFF2
 15853                           intcon2	equ	0xFF1
 15854                           intcon3	equ	0xFF0
 15855                           indf0	equ	0xFEF
 15856                           postinc0	equ	0xFEE
 15857                           plusw0	equ	0xFEB
 15858                           fsr0h	equ	0xFEA
 15859                           fsr0l	equ	0xFE9
 15860                           wreg	equ	0xFE8
 15861                           indf1	equ	0xFE7
 15862                           postinc1	equ	0xFE6
 15863                           postdec1	equ	0xFE5
 15864                           fsr1h	equ	0xFE2
 15865                           fsr1l	equ	0xFE1
 15866                           indf2	equ	0xFDF
 15867                           postinc2	equ	0xFDE
 15868                           postdec2	equ	0xFDD
 15869                           plusw2	equ	0xFDB
 15870                           fsr2h	equ	0xFDA
 15871                           fsr2l	equ	0xFD9
 15872                           status	equ	0xFD8
 15873                           
 15874 ;; *************** function _getsUSBUSART *****************
 15875 ;; Defined at:
 15876 ;;		line 488 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device_cdc.c"
 15877 ;; Parameters:    Size  Location     Type
 15878 ;;  buffer          2   28[BANK0 ] PTR unsigned char 
 15879 ;;		 -> Terminal@UsbRxBuffer(200), 
 15880 ;;  len             1   30[BANK0 ] unsigned char 
 15881 ;; Auto vars:     Size  Location     Type
 15882 ;;		None
 15883 ;; Return value:  Size  Location     Type
 15884 ;;                  1    wreg      unsigned char 
 15885 ;; Registers used:
 15886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15887 ;; Tracked objects:
 15888 ;;		On entry : 0/0
 15889 ;;		On exit  : 0/0
 15890 ;;		Unchanged: 0/0
 15891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15892 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15894 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15895 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15896 ;;Total ram usage:        4 bytes
 15897 ;; Hardware stack levels used:    1
 15898 ;; Hardware stack levels required when called:   10
 15899 ;; This function calls:
 15900 ;;		_USBTransferOnePacket
 15901 ;; This function is called by:
 15902 ;;		_Terminal
 15903 ;; This function uses a non-reentrant model
 15904 ;;
 15905                           
 15906                           	psect	text72
 15907  002FAE                     __ptext72:
 15908                           	opt stack 0
 15909  002FAE                     _getsUSBUSART:
 15910                           	opt stack 15
 15911                           
 15912                           ;usb_device_cdc.c: 490: cdc_rx_len = 0;
 15913                           
 15914                           ; BSR set to: 0
 15915                           ;incstack = 0
 15916  002FAE  0E00               	movlw	0
 15917  002FB0  0100               	movlb	0	; () banked
 15918  002FB2  6FBC               	movwf	_cdc_rx_len& (0+255),b
 15919                           
 15920                           ; BSR set to: 0
 15921                           ;usb_device_cdc.c: 492: if(!((CDCDataOutHandle != 0x0000) && ((*(volatile uint8_t*)CDCDa
      +                          taOutHandle & 0x80) != 0x00)))
 15922  002FB4  51B2               	movf	_CDCDataOutHandle& (0+255),w,b
 15923  002FB6  11B3               	iorwf	(_CDCDataOutHandle+1)& (0+255),w,b
 15924  002FB8  B4D8               	btfsc	status,2,c
 15925  002FBA  D006               	goto	u8260
 15926                           
 15927                           ; BSR set to: 0
 15928  002FBC  C0B2  FFD9         	movff	_CDCDataOutHandle,fsr2l
 15929  002FC0  C0B3  FFDA         	movff	_CDCDataOutHandle+1,fsr2h
 15930  002FC4  BEDF               	btfsc	indf2,7,c
 15931  002FC6  D03B               	goto	l1403
 15932  002FC8                     u8260:
 15933                           
 15934                           ; BSR set to: 0
 15935                           ;usb_device_cdc.c: 493: {
 15936                           ;usb_device_cdc.c: 498: if(len > (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT))
 15937                           
 15938                           ; BSR set to: 0
 15939  002FC8  EE20 F001          	lfsr	2,1
 15940  002FCC  51B2               	movf	_CDCDataOutHandle& (0+255),w,b
 15941  002FCE  26D9               	addwf	fsr2l,f,c
 15942  002FD0  51B3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 15943  002FD2  22DA               	addwfc	fsr2h,f,c
 15944  002FD4  517E               	movf	getsUSBUSART@len& (0+255),w,b
 15945  002FD6  5CDE               	subwf	postinc2,w,c
 15946  002FD8  B0D8               	btfsc	status,0,c
 15947  002FDA  D008               	goto	l1406
 15948                           
 15949                           ; BSR set to: 0
 15950                           ;usb_device_cdc.c: 499: len = (((volatile BDT_ENTRY*)CDCDataOutHandle)->CNT);
 15951  002FDC  EE20 F001          	lfsr	2,1
 15952  002FE0  51B2               	movf	_CDCDataOutHandle& (0+255),w,b
 15953  002FE2  26D9               	addwf	fsr2l,f,c
 15954  002FE4  51B3               	movf	(_CDCDataOutHandle+1)& (0+255),w,b
 15955  002FE6  22DA               	addwfc	fsr2h,f,c
 15956  002FE8  50DF               	movf	indf2,w,c
 15957  002FEA  6F7E               	movwf	getsUSBUSART@len& (0+255),b
 15958  002FEC                     l1406:
 15959                           
 15960                           ; BSR set to: 0
 15961                           ;usb_device_cdc.c: 504: for(cdc_rx_len = 0; cdc_rx_len < len; cdc_rx_len++)
 15962                           
 15963                           ; BSR set to: 0
 15964  002FEC  0E00               	movlw	0
 15965  002FEE  6FBC               	movwf	_cdc_rx_len& (0+255),b
 15966  002FF0  D013               	goto	l1407
 15967  002FF2                     
 15968                           ; BSR set to: 0
 15969                           ;usb_device_cdc.c: 505: buffer[cdc_rx_len] = cdc_data_rx[cdc_rx_len];
 15970                           
 15971                           ; BSR set to: 0
 15972  002FF2  51BC               	movf	_cdc_rx_len& (0+255),w,b
 15973  002FF4  0D01               	mullw	1
 15974  002FF6  0E22               	movlw	low _cdc_data_rx
 15975  002FF8  24F3               	addwf	prodl,w,c
 15976  002FFA  6ED9               	movwf	fsr2l,c
 15977  002FFC  0E03               	movlw	high _cdc_data_rx
 15978  002FFE  20F4               	addwfc	prodh,w,c
 15979  003000  6EDA               	movwf	fsr2h,c
 15980  003002  51BC               	movf	_cdc_rx_len& (0+255),w,b
 15981  003004  0D01               	mullw	1
 15982  003006  50F3               	movf	prodl,w,c
 15983  003008  257C               	addwf	getsUSBUSART@buffer& (0+255),w,b
 15984  00300A  6EE1               	movwf	fsr1l,c
 15985  00300C  50F4               	movf	prodh,w,c
 15986  00300E  217D               	addwfc	(getsUSBUSART@buffer+1)& (0+255),w,b
 15987  003010  6EE2               	movwf	fsr1h,c
 15988  003012  CFDF FFE7          	movff	indf2,indf1
 15989                           
 15990                           ; BSR set to: 0
 15991  003016  2BBC               	incf	_cdc_rx_len& (0+255),f,b
 15992  003018                     l1407:
 15993                           
 15994                           ; BSR set to: 0
 15995                           
 15996                           ; BSR set to: 0
 15997  003018  517E               	movf	getsUSBUSART@len& (0+255),w,b
 15998  00301A  5DBC               	subwf	_cdc_rx_len& (0+255),w,b
 15999  00301C  A0D8               	btfss	status,0,c
 16000  00301E  D7E9               	goto	l1408
 16001                           
 16002                           ; BSR set to: 0
 16003                           ;usb_device_cdc.c: 511: CDCDataOutHandle = USBTransferOnePacket(2,0,(uint8_t*)&cdc_data_
      +                          rx,sizeof(cdc_data_rx));
 16004                           
 16005                           ; BSR set to: 0
 16006  003020  0E00               	movlw	0
 16007  003022  6F75               	movwf	USBTransferOnePacket@dir& (0+255),b
 16008  003024  0E22               	movlw	low _cdc_data_rx
 16009  003026  6F76               	movwf	USBTransferOnePacket@data& (0+255),b
 16010  003028  0E03               	movlw	high _cdc_data_rx
 16011  00302A  6F77               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 16012  00302C  0E40               	movlw	64
 16013  00302E  6F78               	movwf	USBTransferOnePacket@len& (0+255),b
 16014  003030  0E02               	movlw	2
 16015  003032  EC38  F014         	call	_USBTransferOnePacket
 16016  003036  C075  F0B2         	movff	?_USBTransferOnePacket,_CDCDataOutHandle
 16017  00303A  C076  F0B3         	movff	?_USBTransferOnePacket+1,_CDCDataOutHandle+1
 16018  00303E                     l1403:
 16019                           
 16020                           ;usb_device_cdc.c: 513: }
 16021                           ;usb_device_cdc.c: 515: return cdc_rx_len;
 16022  00303E  0100               	movlb	0	; () banked
 16023  003040  51BC               	movf	_cdc_rx_len& (0+255),w,b
 16024  003042  0012               	return	
 16025  003044                     __end_of_getsUSBUSART:
 16026                           	opt stack 0
 16027                           tosu	equ	0xFFF
 16028                           tosh	equ	0xFFE
 16029                           tosl	equ	0xFFD
 16030                           pclath	equ	0xFFA
 16031                           tblptru	equ	0xFF8
 16032                           tblptrh	equ	0xFF7
 16033                           tblptrl	equ	0xFF6
 16034                           tablat	equ	0xFF5
 16035                           prodh	equ	0xFF4
 16036                           prodl	equ	0xFF3
 16037                           intcon	equ	0xFF2
 16038                           intcon2	equ	0xFF1
 16039                           intcon3	equ	0xFF0
 16040                           indf0	equ	0xFEF
 16041                           postinc0	equ	0xFEE
 16042                           plusw0	equ	0xFEB
 16043                           fsr0h	equ	0xFEA
 16044                           fsr0l	equ	0xFE9
 16045                           wreg	equ	0xFE8
 16046                           indf1	equ	0xFE7
 16047                           postinc1	equ	0xFE6
 16048                           postdec1	equ	0xFE5
 16049                           fsr1h	equ	0xFE2
 16050                           fsr1l	equ	0xFE1
 16051                           indf2	equ	0xFDF
 16052                           postinc2	equ	0xFDE
 16053                           postdec2	equ	0xFDD
 16054                           plusw2	equ	0xFDB
 16055                           fsr2h	equ	0xFDA
 16056                           fsr2l	equ	0xFD9
 16057                           status	equ	0xFD8
 16058                           
 16059 ;; *************** function _USBTransferOnePacket *****************
 16060 ;; Defined at:
 16061 ;;		line 1013 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/04_Usb/usb_device.c"
 16062 ;; Parameters:    Size  Location     Type
 16063 ;;  ep              1    wreg     unsigned char 
 16064 ;;  dir             1   21[BANK0 ] unsigned char 
 16065 ;;  data            2   22[BANK0 ] PTR unsigned char 
 16066 ;;		 -> cdc_data_tx(64), cdc_data_rx(64), NULL(0), 
 16067 ;;  len             1   24[BANK0 ] unsigned char 
 16068 ;; Auto vars:     Size  Location     Type
 16069 ;;  ep              1   25[BANK0 ] unsigned char 
 16070 ;;  handle          2   26[BANK0 ] PTR volatile struct __BD
 16071 ;;		 -> NULL(0), BDT(48), 
 16072 ;; Return value:  Size  Location     Type
 16073 ;;                  2   21[BANK0 ] PTR void 
 16074 ;; Registers used:
 16075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16076 ;; Tracked objects:
 16077 ;;		On entry : 0/0
 16078 ;;		On exit  : 0/0
 16079 ;;		Unchanged: 0/0
 16080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16081 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16082 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16084 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16085 ;;Total ram usage:        7 bytes
 16086 ;; Hardware stack levels used:    1
 16087 ;; Hardware stack levels required when called:    9
 16088 ;; This function calls:
 16089 ;;		Nothing
 16090 ;; This function is called by:
 16091 ;;		_CDCInitEP
 16092 ;;		_getsUSBUSART
 16093 ;;		_CDCTxService
 16094 ;;		_USBCDCEventHandler
 16095 ;; This function uses a non-reentrant model
 16096 ;;
 16097                           
 16098                           	psect	text73
 16099  002870                     __ptext73:
 16100                           	opt stack 0
 16101  002870                     _USBTransferOnePacket:
 16102                           	opt stack 15
 16103                           
 16104                           ; BSR set to: 0
 16105                           ;incstack = 0
 16106                           ;USBTransferOnePacket@ep stored from wreg
 16107  002870  0100               	movlb	0	; () banked
 16108  002872  6F79               	movwf	USBTransferOnePacket@ep& (0+255),b
 16109                           
 16110                           ;usb_device.c: 1015: volatile BDT_ENTRY* handle;
 16111                           ;usb_device.c: 1018: if(dir != 0)
 16112  002874  0100               	movlb	0	; () banked
 16113  002876  5175               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16114  002878  B4D8               	btfsc	status,2,c
 16115  00287A  D007               	goto	l1127
 16116                           
 16117                           ; BSR set to: 0
 16118                           ;usb_device.c: 1019: {
 16119                           ;usb_device.c: 1021: handle = pBDTEntryIn[ep];
 16120  00287C  5179               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16121  00287E  0D02               	mullw	2
 16122  002880  0EAC               	movlw	low _pBDTEntryIn
 16123  002882  24F3               	addwf	prodl,w,c
 16124  002884  6ED9               	movwf	fsr2l,c
 16125  002886  0E00               	movlw	high _pBDTEntryIn
 16126  002888  D006               	goto	L16
 16127  00288A                     l1127:
 16128                           
 16129                           ; BSR set to: 0
 16130                           ;usb_device.c: 1023: else
 16131                           ;usb_device.c: 1024: {
 16132                           ;usb_device.c: 1026: handle = pBDTEntryOut[ep];
 16133                           
 16134                           ; BSR set to: 0
 16135  00288A  5179               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16136  00288C  0D02               	mullw	2
 16137  00288E  0EC8               	movlw	low _pBDTEntryOut
 16138  002890  24F3               	addwf	prodl,w,c
 16139  002892  6ED9               	movwf	fsr2l,c
 16140  002894  0E01               	movlw	high _pBDTEntryOut
 16141  002896                     L16:
 16142  002896  20F4               	addwfc	prodh,w,c
 16143  002898  6EDA               	movwf	fsr2h,c
 16144  00289A  CFDE F07A          	movff	postinc2,USBTransferOnePacket@handle
 16145  00289E  CFDD F07B          	movff	postdec2,USBTransferOnePacket@handle+1
 16146                           
 16147                           ; BSR set to: 0
 16148                           ;usb_device.c: 1027: }
 16149                           ;usb_device.c: 1031: if(handle == 0)
 16150                           
 16151                           ; BSR set to: 0
 16152  0028A2  517A               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16153  0028A4  117B               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16154  0028A6  A4D8               	btfss	status,2,c
 16155  0028A8  D005               	goto	l1129
 16156                           
 16157                           ; BSR set to: 0
 16158                           ;usb_device.c: 1032: {
 16159                           ;usb_device.c: 1033: return 0;
 16160  0028AA  0E00               	movlw	0
 16161  0028AC  6F75               	movwf	?_USBTransferOnePacket& (0+255),b
 16162  0028AE  0E00               	movlw	0
 16163  0028B0  6F76               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 16164                           
 16165                           ; BSR set to: 0
 16166  0028B2  0012               	return	
 16167  0028B4                     l1129:
 16168                           
 16169                           ; BSR set to: 0
 16170                           ;usb_device.c: 1034: }
 16171                           ;usb_device.c: 1047: handle->ADR = ((uint16_t)(data));
 16172                           
 16173                           ; BSR set to: 0
 16174  0028B4  EE20 F002          	lfsr	2,2
 16175  0028B8  517A               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16176  0028BA  26D9               	addwf	fsr2l,f,c
 16177  0028BC  517B               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16178  0028BE  22DA               	addwfc	fsr2h,f,c
 16179  0028C0  C076  FFDE         	movff	USBTransferOnePacket@data,postinc2
 16180  0028C4  C077  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 16181                           
 16182                           ;usb_device.c: 1048: handle->CNT = len;
 16183  0028C8  EE20 F001          	lfsr	2,1
 16184  0028CC  517A               	movf	USBTransferOnePacket@handle& (0+255),w,b
 16185  0028CE  26D9               	addwf	fsr2l,f,c
 16186  0028D0  517B               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 16187  0028D2  22DA               	addwfc	fsr2h,f,c
 16188  0028D4  C078  FFDF         	movff	USBTransferOnePacket@len,indf2
 16189                           
 16190                           ; BSR set to: 0
 16191                           ;usb_device.c: 1049: handle->STAT.Val &= 0x40;
 16192  0028D8  C07A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16193  0028DC  C07B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16194  0028E0  0E40               	movlw	64
 16195  0028E2  16DF               	andwf	indf2,f,c
 16196                           
 16197                           ; BSR set to: 0
 16198                           ;usb_device.c: 1050: handle->STAT.Val |= (0x08 & 0x08);
 16199  0028E4  C07A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16200  0028E8  C07B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16201  0028EC  0E00               	movlw	0
 16202  0028EE  86DB               	bsf	plusw2,3,c
 16203                           
 16204                           ; BSR set to: 0
 16205                           ;usb_device.c: 1051: handle->STAT.Val |= 0x80;
 16206  0028F0  C07A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 16207  0028F4  C07B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 16208  0028F8  0E00               	movlw	0
 16209  0028FA  8EDB               	bsf	plusw2,7,c
 16210                           
 16211                           ; BSR set to: 0
 16212                           ;usb_device.c: 1054: if(dir != 0)
 16213  0028FC  5175               	movf	USBTransferOnePacket@dir& (0+255),w,b
 16214  0028FE  B4D8               	btfsc	status,2,c
 16215  002900  D007               	goto	l1131
 16216                           
 16217                           ; BSR set to: 0
 16218                           ;usb_device.c: 1055: {
 16219                           ;usb_device.c: 1057: {((uint8_t_VAL*)&pBDTEntryIn[ep])->Val ^= 0x0004;};
 16220  002902  5179               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16221  002904  0D02               	mullw	2
 16222  002906  0EAC               	movlw	low _pBDTEntryIn
 16223  002908  24F3               	addwf	prodl,w,c
 16224  00290A  6ED9               	movwf	fsr2l,c
 16225  00290C  0E00               	movlw	high _pBDTEntryIn
 16226  00290E  D006               	goto	L17
 16227  002910                     l1131:
 16228                           
 16229                           ; BSR set to: 0
 16230                           ;usb_device.c: 1059: else
 16231                           ;usb_device.c: 1060: {
 16232                           ;usb_device.c: 1062: {((uint8_t_VAL*)&pBDTEntryOut[ep])->Val ^= 0x0004;};
 16233                           
 16234                           ; BSR set to: 0
 16235  002910  5179               	movf	USBTransferOnePacket@ep& (0+255),w,b
 16236  002912  0D02               	mullw	2
 16237  002914  0EC8               	movlw	low _pBDTEntryOut
 16238  002916  24F3               	addwf	prodl,w,c
 16239  002918  6ED9               	movwf	fsr2l,c
 16240  00291A  0E01               	movlw	high _pBDTEntryOut
 16241  00291C                     L17:
 16242  00291C  20F4               	addwfc	prodh,w,c
 16243  00291E  6EDA               	movwf	fsr2h,c
 16244  002920  0E04               	movlw	4
 16245  002922  1ADF               	xorwf	indf2,f,c
 16246                           
 16247                           ; BSR set to: 0
 16248                           ;usb_device.c: 1063: }
 16249                           ;usb_device.c: 1064: return (void*)handle;
 16250                           
 16251                           ; BSR set to: 0
 16252  002924  C07A  F075         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 16253  002928  C07B  F076         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 16254  00292C  0012               	return	
 16255  00292E                     __end_of_USBTransferOnePacket:
 16256                           	opt stack 0
 16257                           tosu	equ	0xFFF
 16258                           tosh	equ	0xFFE
 16259                           tosl	equ	0xFFD
 16260                           pclath	equ	0xFFA
 16261                           tblptru	equ	0xFF8
 16262                           tblptrh	equ	0xFF7
 16263                           tblptrl	equ	0xFF6
 16264                           tablat	equ	0xFF5
 16265                           prodh	equ	0xFF4
 16266                           prodl	equ	0xFF3
 16267                           intcon	equ	0xFF2
 16268                           intcon2	equ	0xFF1
 16269                           intcon3	equ	0xFF0
 16270                           indf0	equ	0xFEF
 16271                           postinc0	equ	0xFEE
 16272                           plusw0	equ	0xFEB
 16273                           fsr0h	equ	0xFEA
 16274                           fsr0l	equ	0xFE9
 16275                           wreg	equ	0xFE8
 16276                           indf1	equ	0xFE7
 16277                           postinc1	equ	0xFE6
 16278                           postdec1	equ	0xFE5
 16279                           fsr1h	equ	0xFE2
 16280                           fsr1l	equ	0xFE1
 16281                           indf2	equ	0xFDF
 16282                           postinc2	equ	0xFDE
 16283                           postdec2	equ	0xFDD
 16284                           plusw2	equ	0xFDB
 16285                           fsr2h	equ	0xFDA
 16286                           fsr2l	equ	0xFD9
 16287                           status	equ	0xFD8
 16288                           
 16289 ;; *************** function _atoi *****************
 16290 ;; Defined at:
 16291 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 16292 ;; Parameters:    Size  Location     Type
 16293 ;;  s               2   27[BANK0 ] PTR const unsigned char 
 16294 ;;		 -> Terminal@Len(4), 
 16295 ;; Auto vars:     Size  Location     Type
 16296 ;;  a               2   32[BANK0 ] int 
 16297 ;;  sign            1   31[BANK0 ] unsigned char 
 16298 ;; Return value:  Size  Location     Type
 16299 ;;                  2   27[BANK0 ] int 
 16300 ;; Registers used:
 16301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16302 ;; Tracked objects:
 16303 ;;		On entry : 0/0
 16304 ;;		On exit  : 0/0
 16305 ;;		Unchanged: 0/0
 16306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16307 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16308 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16309 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16310 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16311 ;;Total ram usage:        7 bytes
 16312 ;; Hardware stack levels used:    1
 16313 ;; Hardware stack levels required when called:   10
 16314 ;; This function calls:
 16315 ;;		___wmul
 16316 ;;		_isdigit
 16317 ;; This function is called by:
 16318 ;;		_Terminal
 16319 ;; This function uses a non-reentrant model
 16320 ;;
 16321                           
 16322                           	psect	text74
 16323  002092                     __ptext74:
 16324                           	opt stack 0
 16325  002092                     _atoi:
 16326                           	opt stack 15
 16327                           
 16328                           ; BSR set to: 0
 16329                           ;incstack = 0
 16330  002092  D003               	goto	l2114
 16331  002094  0100               	movlb	0	; () banked
 16332  002096  4B7B               	infsnz	atoi@s& (0+255),f,b
 16333  002098  2B7C               	incf	(atoi@s+1)& (0+255),f,b
 16334  00209A                     l2114:
 16335                           
 16336                           ; BSR set to: 0
 16337  00209A  C07B  FFD9         	movff	atoi@s,fsr2l
 16338  00209E  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16339  0020A2  0E20               	movlw	32
 16340  0020A4  18DE               	xorwf	postinc2,w,c
 16341  0020A6  B4D8               	btfsc	status,2,c
 16342  0020A8  D7F5               	goto	l2115
 16343  0020AA  C07B  FFD9         	movff	atoi@s,fsr2l
 16344  0020AE  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16345  0020B2  0E09               	movlw	9
 16346  0020B4  18DE               	xorwf	postinc2,w,c
 16347  0020B6  B4D8               	btfsc	status,2,c
 16348  0020B8  D7ED               	goto	l2115
 16349  0020BA  0E00               	movlw	0
 16350  0020BC  0100               	movlb	0	; () banked
 16351  0020BE  6F81               	movwf	(atoi@a+1)& (0+255),b
 16352  0020C0  0E00               	movlw	0
 16353  0020C2  6F80               	movwf	atoi@a& (0+255),b
 16354  0020C4  0E00               	movlw	0
 16355  0020C6  6F7F               	movwf	atoi@sign& (0+255),b
 16356                           
 16357                           ; BSR set to: 0
 16358  0020C8  C07B  FFD9         	movff	atoi@s,fsr2l
 16359  0020CC  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16360  0020D0  0E2D               	movlw	45
 16361  0020D2  18DE               	xorwf	postinc2,w,c
 16362  0020D4  A4D8               	btfss	status,2,c
 16363  0020D6  D002               	goto	l2117
 16364                           
 16365                           ; BSR set to: 0
 16366  0020D8  2B7F               	incf	atoi@sign& (0+255),f,b
 16367  0020DA  D026               	goto	l9429
 16368  0020DC                     l2117:
 16369                           
 16370                           ; BSR set to: 0
 16371                           
 16372                           ; BSR set to: 0
 16373  0020DC  C07B  FFD9         	movff	atoi@s,fsr2l
 16374  0020E0  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16375  0020E4  0E2B               	movlw	43
 16376  0020E6  18DE               	xorwf	postinc2,w,c
 16377  0020E8  A4D8               	btfss	status,2,c
 16378  0020EA  D020               	goto	l2120
 16379  0020EC  D01D               	goto	l9429
 16380  0020EE                     
 16381                           ; BSR set to: 0
 16382  0020EE  C080  F075         	movff	atoi@a,___wmul@multiplier
 16383  0020F2  C081  F076         	movff	atoi@a+1,___wmul@multiplier+1
 16384  0020F6  0E00               	movlw	0
 16385  0020F8  0100               	movlb	0	; () banked
 16386  0020FA  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16387  0020FC  0E0A               	movlw	10
 16388  0020FE  6F77               	movwf	___wmul@multiplicand& (0+255),b
 16389  002100  ECFB  F01F         	call	___wmul	;wreg free
 16390  002104  C07B  FFD9         	movff	atoi@s,fsr2l
 16391  002108  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16392  00210C  50DF               	movf	indf2,w,c
 16393  00210E  0100               	movlb	0	; () banked
 16394  002110  6F7D               	movwf	??_atoi& (0+255),b
 16395  002112  6B7E               	clrf	(??_atoi+1)& (0+255),b
 16396  002114  5175               	movf	?___wmul& (0+255),w,b
 16397  002116  277D               	addwf	??_atoi& (0+255),f,b
 16398  002118  5176               	movf	(?___wmul+1)& (0+255),w,b
 16399  00211A  237E               	addwfc	(??_atoi+1)& (0+255),f,b
 16400  00211C  0ED0               	movlw	208
 16401  00211E  257D               	addwf	??_atoi& (0+255),w,b
 16402  002120  6F80               	movwf	atoi@a& (0+255),b
 16403  002122  0EFF               	movlw	255
 16404  002124  217E               	addwfc	(??_atoi+1)& (0+255),w,b
 16405  002126  6F81               	movwf	(atoi@a+1)& (0+255),b
 16406  002128                     l9429:
 16407                           
 16408                           ; BSR set to: 0
 16409  002128  4B7B               	infsnz	atoi@s& (0+255),f,b
 16410  00212A  2B7C               	incf	(atoi@s+1)& (0+255),f,b
 16411  00212C                     l2120:
 16412                           
 16413                           ; BSR set to: 0
 16414                           
 16415                           ; BSR set to: 0
 16416  00212C  C07B  FFD9         	movff	atoi@s,fsr2l
 16417  002130  C07C  FFDA         	movff	atoi@s+1,fsr2h
 16418  002134  50DF               	movf	indf2,w,c
 16419  002136  EC67  F020         	call	_isdigit
 16420  00213A  B0D8               	btfsc	status,0,c
 16421  00213C  D7D8               	goto	l2121
 16422  00213E  0100               	movlb	0	; () banked
 16423  002140  517F               	movf	atoi@sign& (0+255),w,b
 16424  002142  B4D8               	btfsc	status,2,c
 16425  002144  D00D               	goto	l2123
 16426                           
 16427                           ; BSR set to: 0
 16428  002146  C080  F07D         	movff	atoi@a,??_atoi
 16429  00214A  C081  F07E         	movff	atoi@a+1,??_atoi+1
 16430  00214E  1F7D               	comf	??_atoi& (0+255),f,b
 16431  002150  1F7E               	comf	(??_atoi+1)& (0+255),f,b
 16432  002152  4B7D               	infsnz	??_atoi& (0+255),f,b
 16433  002154  2B7E               	incf	(??_atoi+1)& (0+255),f,b
 16434  002156  C07D  F07B         	movff	??_atoi,?_atoi
 16435  00215A  C07E  F07C         	movff	??_atoi+1,?_atoi+1
 16436  00215E  0012               	return	
 16437  002160                     l2123:
 16438                           
 16439                           ; BSR set to: 0
 16440  002160  C080  F07B         	movff	atoi@a,?_atoi
 16441  002164  C081  F07C         	movff	atoi@a+1,?_atoi+1
 16442                           
 16443                           ; BSR set to: 0
 16444  002168  0012               	return		;funcret
 16445  00216A                     __end_of_atoi:
 16446                           	opt stack 0
 16447                           tosu	equ	0xFFF
 16448                           tosh	equ	0xFFE
 16449                           tosl	equ	0xFFD
 16450                           pclath	equ	0xFFA
 16451                           tblptru	equ	0xFF8
 16452                           tblptrh	equ	0xFF7
 16453                           tblptrl	equ	0xFF6
 16454                           tablat	equ	0xFF5
 16455                           prodh	equ	0xFF4
 16456                           prodl	equ	0xFF3
 16457                           intcon	equ	0xFF2
 16458                           intcon2	equ	0xFF1
 16459                           intcon3	equ	0xFF0
 16460                           indf0	equ	0xFEF
 16461                           postinc0	equ	0xFEE
 16462                           plusw0	equ	0xFEB
 16463                           fsr0h	equ	0xFEA
 16464                           fsr0l	equ	0xFE9
 16465                           wreg	equ	0xFE8
 16466                           indf1	equ	0xFE7
 16467                           postinc1	equ	0xFE6
 16468                           postdec1	equ	0xFE5
 16469                           fsr1h	equ	0xFE2
 16470                           fsr1l	equ	0xFE1
 16471                           indf2	equ	0xFDF
 16472                           postinc2	equ	0xFDE
 16473                           postdec2	equ	0xFDD
 16474                           plusw2	equ	0xFDB
 16475                           fsr2h	equ	0xFDA
 16476                           fsr2l	equ	0xFD9
 16477                           status	equ	0xFD8
 16478                           
 16479 ;; *************** function _isdigit *****************
 16480 ;; Defined at:
 16481 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 16482 ;; Parameters:    Size  Location     Type
 16483 ;;  c               1    wreg     unsigned char 
 16484 ;; Auto vars:     Size  Location     Type
 16485 ;;  c               1   23[BANK0 ] unsigned char 
 16486 ;; Return value:  Size  Location     Type
 16487 ;;		None               void
 16488 ;; Registers used:
 16489 ;;		wreg, status,2, status,0
 16490 ;; Tracked objects:
 16491 ;;		On entry : 0/0
 16492 ;;		On exit  : 0/0
 16493 ;;		Unchanged: 0/0
 16494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16496 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16498 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16499 ;;Total ram usage:        3 bytes
 16500 ;; Hardware stack levels used:    1
 16501 ;; Hardware stack levels required when called:    9
 16502 ;; This function calls:
 16503 ;;		Nothing
 16504 ;; This function is called by:
 16505 ;;		_atoi
 16506 ;;		_strtol
 16507 ;;		_xtoi
 16508 ;;		_isxdigit
 16509 ;; This function uses a non-reentrant model
 16510 ;;
 16511                           
 16512                           	psect	text75
 16513  0040CE                     __ptext75:
 16514                           	opt stack 0
 16515  0040CE                     _isdigit:
 16516                           	opt stack 14
 16517                           
 16518                           ; BSR set to: 0
 16519                           ;incstack = 0
 16520                           ;isdigit@c stored from wreg
 16521  0040CE  0100               	movlb	0	; () banked
 16522  0040D0  6F77               	movwf	isdigit@c& (0+255),b
 16523  0040D2  0E00               	movlw	0
 16524  0040D4  0100               	movlb	0	; () banked
 16525  0040D6  6F76               	movwf	_isdigit$5418& (0+255),b
 16526                           
 16527                           ; BSR set to: 0
 16528  0040D8  0E3A               	movlw	58
 16529  0040DA  6177               	cpfslt	isdigit@c& (0+255),b
 16530  0040DC  D005               	goto	l2295
 16531                           
 16532                           ; BSR set to: 0
 16533  0040DE  0E2F               	movlw	47
 16534  0040E0  6577               	cpfsgt	isdigit@c& (0+255),b
 16535  0040E2  D002               	goto	l2295
 16536                           
 16537                           ; BSR set to: 0
 16538  0040E4  0E01               	movlw	1
 16539  0040E6  6F76               	movwf	_isdigit$5418& (0+255),b
 16540  0040E8                     l2295:
 16541                           
 16542                           ; BSR set to: 0
 16543                           
 16544                           ; BSR set to: 0
 16545  0040E8  C076  F075         	movff	_isdigit$5418,??_isdigit
 16546  0040EC  3175               	rrcf	??_isdigit& (0+255),w,b
 16547  0040EE  0012               	return	
 16548  0040F0                     __end_of_isdigit:
 16549                           	opt stack 0
 16550                           tosu	equ	0xFFF
 16551                           tosh	equ	0xFFE
 16552                           tosl	equ	0xFFD
 16553                           pclath	equ	0xFFA
 16554                           tblptru	equ	0xFF8
 16555                           tblptrh	equ	0xFF7
 16556                           tblptrl	equ	0xFF6
 16557                           tablat	equ	0xFF5
 16558                           prodh	equ	0xFF4
 16559                           prodl	equ	0xFF3
 16560                           intcon	equ	0xFF2
 16561                           intcon2	equ	0xFF1
 16562                           intcon3	equ	0xFF0
 16563                           indf0	equ	0xFEF
 16564                           postinc0	equ	0xFEE
 16565                           plusw0	equ	0xFEB
 16566                           fsr0h	equ	0xFEA
 16567                           fsr0l	equ	0xFE9
 16568                           wreg	equ	0xFE8
 16569                           indf1	equ	0xFE7
 16570                           postinc1	equ	0xFE6
 16571                           postdec1	equ	0xFE5
 16572                           fsr1h	equ	0xFE2
 16573                           fsr1l	equ	0xFE1
 16574                           indf2	equ	0xFDF
 16575                           postinc2	equ	0xFDE
 16576                           postdec2	equ	0xFDD
 16577                           plusw2	equ	0xFDB
 16578                           fsr2h	equ	0xFDA
 16579                           fsr2l	equ	0xFD9
 16580                           status	equ	0xFD8
 16581                           
 16582 ;; *************** function _I2cSlv_SendI2cMsg *****************
 16583 ;; Defined at:
 16584 ;;		line 250 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 16585 ;; Parameters:    Size  Location     Type
 16586 ;;  TxBuffer        2   24[BANK0 ] PTR unsigned char 
 16587 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 16588 ;;  SlaveAddr       1   26[BANK0 ] unsigned char 
 16589 ;;  DataLenght      1   27[BANK0 ] unsigned char 
 16590 ;; Auto vars:     Size  Location     Type
 16591 ;;  TxSts           1   28[BANK0 ] unsigned char 
 16592 ;; Return value:  Size  Location     Type
 16593 ;;                  1    wreg      unsigned char 
 16594 ;; Registers used:
 16595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16596 ;; Tracked objects:
 16597 ;;		On entry : 0/0
 16598 ;;		On exit  : 0/0
 16599 ;;		Unchanged: 0/0
 16600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16604 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16605 ;;Total ram usage:        5 bytes
 16606 ;; Hardware stack levels used:    1
 16607 ;; Hardware stack levels required when called:   10
 16608 ;; This function calls:
 16609 ;;		_GenerateEvt
 16610 ;; This function is called by:
 16611 ;;		_Terminal
 16612 ;;		_I2cSlv_QueryI2cData
 16613 ;; This function uses a non-reentrant model
 16614 ;;
 16615                           
 16616                           	psect	text76
 16617  003CD6                     __ptext76:
 16618                           	opt stack 0
 16619  003CD6                     _I2cSlv_SendI2cMsg:
 16620                           	opt stack 15
 16621                           
 16622                           ;i2c_slv.c: 252: UINT8 TxSts = 0u;
 16623                           
 16624                           ; BSR set to: 0
 16625                           ;incstack = 0
 16626  003CD6  0E00               	movlw	0
 16627  003CD8  0100               	movlb	0	; () banked
 16628  003CDA  6F7C               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 16629                           
 16630                           ; BSR set to: 0
 16631                           ;i2c_slv.c: 254: if (I2cComSts != TxInProgress)
 16632  003CDC  05CC               	decf	_I2cComSts& (0+255),w,b
 16633  003CDE  B4D8               	btfsc	status,2,c
 16634  003CE0  D016               	goto	l891
 16635                           
 16636                           ; BSR set to: 0
 16637                           ;i2c_slv.c: 255: {
 16638                           ;i2c_slv.c: 257: I2cTxPacket.SlaveAddress = SlaveAddr;
 16639  003CE2  C07A  F1F3         	movff	I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 16640                           
 16641                           ; BSR set to: 0
 16642                           ;i2c_slv.c: 258: I2cTxPacket.ReadWrite = ((UINT8)(0));
 16643  003CE6  0E00               	movlw	0
 16644  003CE8  0101               	movlb	1	; () banked
 16645  003CEA  6FF4               	movwf	(_I2cTxPacket+1)& (0+255),b
 16646                           
 16647                           ; BSR set to: 1
 16648                           ;i2c_slv.c: 259: I2cTxPacket.Lenght = DataLenght;
 16649  003CEC  C07B  F1F7         	movff	I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 16650                           
 16651                           ; BSR set to: 1
 16652                           ;i2c_slv.c: 260: I2cTxPacket.Buffer = TxBuffer;
 16653  003CF0  C078  F1F5         	movff	I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 16654  003CF4  C079  F1F6         	movff	I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 16655                           
 16656                           ; BSR set to: 1
 16657                           ;i2c_slv.c: 263: GenerateEvt(&I2cWriteDataEvt);
 16658  003CF8  0EE0               	movlw	low _I2cWriteDataEvt
 16659  003CFA  0100               	movlb	0	; () banked
 16660  003CFC  6F75               	movwf	GenerateEvt@Event& (0+255),b
 16661  003CFE  0E00               	movlw	high _I2cWriteDataEvt
 16662  003D00  6F76               	movwf	(GenerateEvt@Event+1)& (0+255),b
 16663  003D02  EC24  F021         	call	_GenerateEvt	;wreg free
 16664                           
 16665                           ;i2c_slv.c: 265: TxSts = 1u;
 16666  003D06  0E01               	movlw	1
 16667  003D08  0100               	movlb	0	; () banked
 16668  003D0A  6F7C               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 16669                           
 16670                           ;i2c_slv.c: 266: }
 16671  003D0C  0012               	return	
 16672  003D0E                     l891:
 16673                           
 16674                           ; BSR set to: 0
 16675                           ;i2c_slv.c: 267: else
 16676                           ;i2c_slv.c: 268: {
 16677                           ;i2c_slv.c: 270: TxSts = 0u;
 16678                           
 16679                           ; BSR set to: 0
 16680  003D0E  0E00               	movlw	0
 16681  003D10  6F7C               	movwf	I2cSlv_SendI2cMsg@TxSts& (0+255),b
 16682                           
 16683                           ; BSR set to: 0
 16684  003D12  0012               	return	
 16685  003D14                     __end_of_I2cSlv_SendI2cMsg:
 16686                           	opt stack 0
 16687                           tosu	equ	0xFFF
 16688                           tosh	equ	0xFFE
 16689                           tosl	equ	0xFFD
 16690                           pclath	equ	0xFFA
 16691                           tblptru	equ	0xFF8
 16692                           tblptrh	equ	0xFF7
 16693                           tblptrl	equ	0xFF6
 16694                           tablat	equ	0xFF5
 16695                           prodh	equ	0xFF4
 16696                           prodl	equ	0xFF3
 16697                           intcon	equ	0xFF2
 16698                           intcon2	equ	0xFF1
 16699                           intcon3	equ	0xFF0
 16700                           indf0	equ	0xFEF
 16701                           postinc0	equ	0xFEE
 16702                           plusw0	equ	0xFEB
 16703                           fsr0h	equ	0xFEA
 16704                           fsr0l	equ	0xFE9
 16705                           wreg	equ	0xFE8
 16706                           indf1	equ	0xFE7
 16707                           postinc1	equ	0xFE6
 16708                           postdec1	equ	0xFE5
 16709                           fsr1h	equ	0xFE2
 16710                           fsr1l	equ	0xFE1
 16711                           indf2	equ	0xFDF
 16712                           postinc2	equ	0xFDE
 16713                           postdec2	equ	0xFDD
 16714                           plusw2	equ	0xFDB
 16715                           fsr2h	equ	0xFDA
 16716                           fsr2l	equ	0xFD9
 16717                           status	equ	0xFD8
 16718                           
 16719 ;; *************** function _I2cSlv_ReceiveI2cMsg *****************
 16720 ;; Defined at:
 16721 ;;		line 287 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 16722 ;; Parameters:    Size  Location     Type
 16723 ;;  RxBuffer        2   24[BANK0 ] PTR unsigned char 
 16724 ;;		 -> Terminal@TermRxBuffer(50), 
 16725 ;;  SlaveAddr       1   26[BANK0 ] unsigned char 
 16726 ;;  DataLenght      1   27[BANK0 ] unsigned char 
 16727 ;; Auto vars:     Size  Location     Type
 16728 ;;  RxSts           1   28[BANK0 ] unsigned char 
 16729 ;; Return value:  Size  Location     Type
 16730 ;;                  1    wreg      unsigned char 
 16731 ;; Registers used:
 16732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16733 ;; Tracked objects:
 16734 ;;		On entry : 0/0
 16735 ;;		On exit  : 0/0
 16736 ;;		Unchanged: 0/0
 16737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16738 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16741 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16742 ;;Total ram usage:        5 bytes
 16743 ;; Hardware stack levels used:    1
 16744 ;; Hardware stack levels required when called:   10
 16745 ;; This function calls:
 16746 ;;		_GenerateEvt
 16747 ;; This function is called by:
 16748 ;;		_Terminal
 16749 ;;		_I2cSlv_QueryI2cData
 16750 ;; This function uses a non-reentrant model
 16751 ;;
 16752                           
 16753                           	psect	text77
 16754  003C58                     __ptext77:
 16755                           	opt stack 0
 16756  003C58                     _I2cSlv_ReceiveI2cMsg:
 16757                           	opt stack 15
 16758                           
 16759                           ;i2c_slv.c: 289: UINT8 RxSts = 0u;
 16760                           
 16761                           ; BSR set to: 0
 16762                           ;incstack = 0
 16763  003C58  0E00               	movlw	0
 16764  003C5A  0100               	movlb	0	; () banked
 16765  003C5C  6F7C               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 16766                           
 16767                           ; BSR set to: 0
 16768                           ;i2c_slv.c: 291: if (I2cComSts != RxInProgress)
 16769  003C5E  0E02               	movlw	2
 16770  003C60  19CC               	xorwf	_I2cComSts& (0+255),w,b
 16771  003C62  B4D8               	btfsc	status,2,c
 16772  003C64  D016               	goto	l896
 16773                           
 16774                           ; BSR set to: 0
 16775                           ;i2c_slv.c: 292: {
 16776                           ;i2c_slv.c: 294: I2cRxPacket.SlaveAddress = SlaveAddr;
 16777  003C66  C07A  F1ED         	movff	I2cSlv_ReceiveI2cMsg@SlaveAddr,_I2cRxPacket
 16778                           
 16779                           ; BSR set to: 0
 16780                           ;i2c_slv.c: 295: I2cRxPacket.ReadWrite = ((UINT8)(1));
 16781  003C6A  0E01               	movlw	1
 16782  003C6C  0101               	movlb	1	; () banked
 16783  003C6E  6FEE               	movwf	(_I2cRxPacket+1)& (0+255),b
 16784                           
 16785                           ; BSR set to: 1
 16786                           ;i2c_slv.c: 298: I2cRxPacket.Lenght = DataLenght;
 16787  003C70  C07B  F1F1         	movff	I2cSlv_ReceiveI2cMsg@DataLenght,_I2cRxPacket+4
 16788                           
 16789                           ; BSR set to: 1
 16790                           ;i2c_slv.c: 299: I2cRxPacket.Buffer = RxBuffer;
 16791  003C74  C078  F1EF         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer,_I2cRxPacket+2
 16792  003C78  C079  F1F0         	movff	I2cSlv_ReceiveI2cMsg@RxBuffer+1,_I2cRxPacket+3
 16793                           
 16794                           ; BSR set to: 1
 16795                           ;i2c_slv.c: 302: GenerateEvt(&I2cReadDataEvt);
 16796  003C7C  0EDF               	movlw	low _I2cReadDataEvt
 16797  003C7E  0100               	movlb	0	; () banked
 16798  003C80  6F75               	movwf	GenerateEvt@Event& (0+255),b
 16799  003C82  0E00               	movlw	high _I2cReadDataEvt
 16800  003C84  6F76               	movwf	(GenerateEvt@Event+1)& (0+255),b
 16801  003C86  EC24  F021         	call	_GenerateEvt	;wreg free
 16802                           
 16803                           ;i2c_slv.c: 304: RxSts = 1u;
 16804  003C8A  0E01               	movlw	1
 16805  003C8C  0100               	movlb	0	; () banked
 16806  003C8E  6F7C               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 16807                           
 16808                           ;i2c_slv.c: 305: }
 16809  003C90  0012               	return	
 16810  003C92                     l896:
 16811                           
 16812                           ; BSR set to: 0
 16813                           ;i2c_slv.c: 306: else
 16814                           ;i2c_slv.c: 307: {
 16815                           ;i2c_slv.c: 309: RxSts = 0u;
 16816                           
 16817                           ; BSR set to: 0
 16818  003C92  0E00               	movlw	0
 16819  003C94  6F7C               	movwf	I2cSlv_ReceiveI2cMsg@RxSts& (0+255),b
 16820                           
 16821                           ; BSR set to: 0
 16822  003C96  0012               	return	
 16823  003C98                     __end_of_I2cSlv_ReceiveI2cMsg:
 16824                           	opt stack 0
 16825                           tosu	equ	0xFFF
 16826                           tosh	equ	0xFFE
 16827                           tosl	equ	0xFFD
 16828                           pclath	equ	0xFFA
 16829                           tblptru	equ	0xFF8
 16830                           tblptrh	equ	0xFF7
 16831                           tblptrl	equ	0xFF6
 16832                           tablat	equ	0xFF5
 16833                           prodh	equ	0xFF4
 16834                           prodl	equ	0xFF3
 16835                           intcon	equ	0xFF2
 16836                           intcon2	equ	0xFF1
 16837                           intcon3	equ	0xFF0
 16838                           indf0	equ	0xFEF
 16839                           postinc0	equ	0xFEE
 16840                           plusw0	equ	0xFEB
 16841                           fsr0h	equ	0xFEA
 16842                           fsr0l	equ	0xFE9
 16843                           wreg	equ	0xFE8
 16844                           indf1	equ	0xFE7
 16845                           postinc1	equ	0xFE6
 16846                           postdec1	equ	0xFE5
 16847                           fsr1h	equ	0xFE2
 16848                           fsr1l	equ	0xFE1
 16849                           indf2	equ	0xFDF
 16850                           postinc2	equ	0xFDE
 16851                           postdec2	equ	0xFDD
 16852                           plusw2	equ	0xFDB
 16853                           fsr2h	equ	0xFDA
 16854                           fsr2l	equ	0xFD9
 16855                           status	equ	0xFD8
 16856                           
 16857 ;; *************** function _I2cSlv_I2cReadMsgSts *****************
 16858 ;; Defined at:
 16859 ;;		line 324 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 16860 ;; Parameters:    Size  Location     Type
 16861 ;;		None
 16862 ;; Auto vars:     Size  Location     Type
 16863 ;;  Result          1   25[BANK0 ] enum E8792
 16864 ;; Return value:  Size  Location     Type
 16865 ;;                  1    wreg      enum E8792
 16866 ;; Registers used:
 16867 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16868 ;; Tracked objects:
 16869 ;;		On entry : 0/0
 16870 ;;		On exit  : 0/0
 16871 ;;		Unchanged: 0/0
 16872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16874 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16876 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16877 ;;Total ram usage:        1 bytes
 16878 ;; Hardware stack levels used:    1
 16879 ;; Hardware stack levels required when called:   10
 16880 ;; This function calls:
 16881 ;;		_ReceiveEvt
 16882 ;; This function is called by:
 16883 ;;		_Terminal
 16884 ;;		_I2cSlv_QueryI2cData
 16885 ;; This function uses a non-reentrant model
 16886 ;;
 16887                           
 16888                           	psect	text78
 16889  0040F0                     __ptext78:
 16890                           	opt stack 0
 16891  0040F0                     _I2cSlv_I2cReadMsgSts:
 16892                           	opt stack 15
 16893                           
 16894                           ;i2c_slv.c: 327: I2cReadMsgStsType Result;
 16895                           ;i2c_slv.c: 330: if (ReceiveEvt(&(I2cRxPacket.ReadCompleteEvt)))
 16896                           
 16897                           ; BSR set to: 0
 16898                           ;incstack = 0
 16899  0040F0  0EF2               	movlw	low (_I2cRxPacket+5)
 16900  0040F2  0100               	movlb	0	; () banked
 16901  0040F4  6F75               	movwf	ReceiveEvt@Event& (0+255),b
 16902  0040F6  0E01               	movlw	high (_I2cRxPacket+5)
 16903  0040F8  6F76               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 16904  0040FA  ECA4  F01F         	call	_ReceiveEvt	;wreg free
 16905  0040FE  0900               	iorlw	0
 16906  004100  B4D8               	btfsc	status,2,c
 16907  004102  D002               	goto	l901
 16908                           
 16909                           ;i2c_slv.c: 331: {
 16910                           ;i2c_slv.c: 332: Result = MessageReceived;
 16911  004104  0E01               	movlw	1
 16912  004106  D001               	goto	L18
 16913  004108                     l901:
 16914                           
 16915                           ;i2c_slv.c: 334: else
 16916                           ;i2c_slv.c: 335: {
 16917                           ;i2c_slv.c: 336: Result = MessageNotReceived;
 16918                           
 16919                           ; BSR set to: 0
 16920  004108  0E00               	movlw	0
 16921  00410A                     L18:
 16922  00410A  0100               	movlb	0	; () banked
 16923  00410C  6F79               	movwf	I2cSlv_I2cReadMsgSts@Result& (0+255),b
 16924                           
 16925                           ; BSR set to: 0
 16926                           ;i2c_slv.c: 337: }
 16927                           ;i2c_slv.c: 339: return Result;
 16928  00410E  5179               	movf	I2cSlv_I2cReadMsgSts@Result& (0+255),w,b
 16929  004110  0012               	return	
 16930  004112                     __end_of_I2cSlv_I2cReadMsgSts:
 16931                           	opt stack 0
 16932                           tosu	equ	0xFFF
 16933                           tosh	equ	0xFFE
 16934                           tosl	equ	0xFFD
 16935                           pclath	equ	0xFFA
 16936                           tblptru	equ	0xFF8
 16937                           tblptrh	equ	0xFF7
 16938                           tblptrl	equ	0xFF6
 16939                           tablat	equ	0xFF5
 16940                           prodh	equ	0xFF4
 16941                           prodl	equ	0xFF3
 16942                           intcon	equ	0xFF2
 16943                           intcon2	equ	0xFF1
 16944                           intcon3	equ	0xFF0
 16945                           indf0	equ	0xFEF
 16946                           postinc0	equ	0xFEE
 16947                           plusw0	equ	0xFEB
 16948                           fsr0h	equ	0xFEA
 16949                           fsr0l	equ	0xFE9
 16950                           wreg	equ	0xFE8
 16951                           indf1	equ	0xFE7
 16952                           postinc1	equ	0xFE6
 16953                           postdec1	equ	0xFE5
 16954                           fsr1h	equ	0xFE2
 16955                           fsr1l	equ	0xFE1
 16956                           indf2	equ	0xFDF
 16957                           postinc2	equ	0xFDE
 16958                           postdec2	equ	0xFDD
 16959                           plusw2	equ	0xFDB
 16960                           fsr2h	equ	0xFDA
 16961                           fsr2l	equ	0xFD9
 16962                           status	equ	0xFD8
 16963                           
 16964 ;; *************** function _OsTmr_StartTimer *****************
 16965 ;; Defined at:
 16966 ;;		line 118 in file "../../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 16967 ;; Parameters:    Size  Location     Type
 16968 ;;  Timer           2   25[BANK0 ] PTR struct _SwTimerType
 16969 ;;		 -> Term_MainSm@TermDelay(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 16970 ;;  Timeout         4   27[BANK0 ] unsigned long 
 16971 ;; Auto vars:     Size  Location     Type
 16972 ;;		None
 16973 ;; Return value:  Size  Location     Type
 16974 ;;                  1    wreg      void 
 16975 ;; Registers used:
 16976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16977 ;; Tracked objects:
 16978 ;;		On entry : 0/0
 16979 ;;		On exit  : 0/0
 16980 ;;		Unchanged: 0/0
 16981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16982 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16985 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16986 ;;Total ram usage:        6 bytes
 16987 ;; Hardware stack levels used:    1
 16988 ;; Hardware stack levels required when called:   10
 16989 ;; This function calls:
 16990 ;;		_GetOsTickCounter
 16991 ;; This function is called by:
 16992 ;;		_Term_MainSm
 16993 ;;		_OsTmr_Wait
 16994 ;;		_I2cSlv_QueryI2cData
 16995 ;; This function uses a non-reentrant model
 16996 ;;
 16997                           
 16998                           	psect	text79
 16999  003768                     __ptext79:
 17000                           	opt stack 0
 17001  003768                     _OsTmr_StartTimer:
 17002                           	opt stack 16
 17003                           
 17004                           ;os_timers.c: 121: Timer->Status = SwTmrNotExpired;
 17005                           
 17006                           ; BSR set to: 0
 17007                           ;incstack = 0
 17008  003768  0100               	movlb	0	; () banked
 17009  00376A  EE20 F001          	lfsr	2,1
 17010  00376E  5179               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 17011  003770  26D9               	addwf	fsr2l,f,c
 17012  003772  517A               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 17013  003774  22DA               	addwfc	fsr2h,f,c
 17014  003776  0E00               	movlw	0
 17015  003778  6EDF               	movwf	indf2,c
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;os_timers.c: 123: Timer->StartTime = GetOsTickCounter();
 17019  00377A  EC64  F021         	call	_GetOsTickCounter	;wreg free
 17020  00377E  0100               	movlb	0	; () banked
 17021  003780  EE20 F002          	lfsr	2,2
 17022  003784  5179               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 17023  003786  26D9               	addwf	fsr2l,f,c
 17024  003788  517A               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 17025  00378A  22DA               	addwfc	fsr2h,f,c
 17026  00378C  C075  FFDE         	movff	?_GetOsTickCounter,postinc2
 17027  003790  C076  FFDE         	movff	?_GetOsTickCounter+1,postinc2
 17028  003794  C077  FFDE         	movff	?_GetOsTickCounter+2,postinc2
 17029  003798  C078  FFDE         	movff	?_GetOsTickCounter+3,postinc2
 17030                           
 17031                           ; BSR set to: 0
 17032                           ;os_timers.c: 125: Timer->TargetTime = Timeout;
 17033  00379C  EE20 F006          	lfsr	2,6
 17034  0037A0  5179               	movf	OsTmr_StartTimer@Timer& (0+255),w,b
 17035  0037A2  26D9               	addwf	fsr2l,f,c
 17036  0037A4  517A               	movf	(OsTmr_StartTimer@Timer+1)& (0+255),w,b
 17037  0037A6  22DA               	addwfc	fsr2h,f,c
 17038  0037A8  C07B  FFDE         	movff	OsTmr_StartTimer@Timeout,postinc2
 17039  0037AC  C07C  FFDE         	movff	OsTmr_StartTimer@Timeout+1,postinc2
 17040  0037B0  C07D  FFDE         	movff	OsTmr_StartTimer@Timeout+2,postinc2
 17041  0037B4  C07E  FFDE         	movff	OsTmr_StartTimer@Timeout+3,postinc2
 17042                           
 17043                           ; BSR set to: 0
 17044                           ;os_timers.c: 127: Timer->Enabled = 1u;
 17045  0037B8  C079  FFD9         	movff	OsTmr_StartTimer@Timer,fsr2l
 17046  0037BC  C07A  FFDA         	movff	OsTmr_StartTimer@Timer+1,fsr2h
 17047  0037C0  0E01               	movlw	1
 17048  0037C2  6EDF               	movwf	indf2,c
 17049                           
 17050                           ; BSR set to: 0
 17051  0037C4  0012               	return		;funcret
 17052  0037C6                     __end_of_OsTmr_StartTimer:
 17053                           	opt stack 0
 17054                           tosu	equ	0xFFF
 17055                           tosh	equ	0xFFE
 17056                           tosl	equ	0xFFD
 17057                           pclath	equ	0xFFA
 17058                           tblptru	equ	0xFF8
 17059                           tblptrh	equ	0xFF7
 17060                           tblptrl	equ	0xFF6
 17061                           tablat	equ	0xFF5
 17062                           prodh	equ	0xFF4
 17063                           prodl	equ	0xFF3
 17064                           intcon	equ	0xFF2
 17065                           intcon2	equ	0xFF1
 17066                           intcon3	equ	0xFF0
 17067                           indf0	equ	0xFEF
 17068                           postinc0	equ	0xFEE
 17069                           plusw0	equ	0xFEB
 17070                           fsr0h	equ	0xFEA
 17071                           fsr0l	equ	0xFE9
 17072                           wreg	equ	0xFE8
 17073                           indf1	equ	0xFE7
 17074                           postinc1	equ	0xFE6
 17075                           postdec1	equ	0xFE5
 17076                           fsr1h	equ	0xFE2
 17077                           fsr1l	equ	0xFE1
 17078                           indf2	equ	0xFDF
 17079                           postinc2	equ	0xFDE
 17080                           postdec2	equ	0xFDD
 17081                           plusw2	equ	0xFDB
 17082                           fsr2h	equ	0xFDA
 17083                           fsr2l	equ	0xFD9
 17084                           status	equ	0xFD8
 17085                           
 17086 ;; *************** function _OsTmr_GetTimerStatus *****************
 17087 ;; Defined at:
 17088 ;;		line 193 in file "../../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 17089 ;; Parameters:    Size  Location     Type
 17090 ;;  Timer           2   45[BANK0 ] PTR struct _SwTimerType
 17091 ;;		 -> Term_MainSm@TermDelay(11), I2cSlv_QueryI2cData@TimeoutTimer(11), I2cSlv_QueryI2cData@QueryTimer(11), 
 17092 ;; Auto vars:     Size  Location     Type
 17093 ;;		None
 17094 ;; Return value:  Size  Location     Type
 17095 ;;                  1    wreg      enum E7740
 17096 ;; Registers used:
 17097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17098 ;; Tracked objects:
 17099 ;;		On entry : 0/0
 17100 ;;		On exit  : 0/0
 17101 ;;		Unchanged: 0/0
 17102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17103 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17105 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17106 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17107 ;;Total ram usage:        6 bytes
 17108 ;; Hardware stack levels used:    1
 17109 ;; Hardware stack levels required when called:   11
 17110 ;; This function calls:
 17111 ;;		_GetElapsedTime
 17112 ;; This function is called by:
 17113 ;;		_Term_MainSm
 17114 ;;		_OsTmr_Wait
 17115 ;;		_I2cSlv_QueryI2cData
 17116 ;; This function uses a non-reentrant model
 17117 ;;
 17118                           
 17119                           	psect	text80
 17120  00316C                     __ptext80:
 17121                           	opt stack 0
 17122  00316C                     _OsTmr_GetTimerStatus:
 17123                           	opt stack 15
 17124                           
 17125                           ;os_timers.c: 196: if (Timer->Enabled == 1u)
 17126                           
 17127                           ; BSR set to: 0
 17128                           ;incstack = 0
 17129  00316C  C08D  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 17130  003170  C08E  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 17131  003174  04DE               	decf	postinc2,w,c
 17132  003176  A4D8               	btfss	status,2,c
 17133  003178  D030               	goto	l755
 17134                           
 17135                           ;os_timers.c: 197: {
 17136                           ;os_timers.c: 199: if (GetElapsedTime(Timer->StartTime) >= Timer->TargetTime)
 17137  00317A  0100               	movlb	0	; () banked
 17138  00317C  EE20 F006          	lfsr	2,6
 17139  003180  518D               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 17140  003182  26D9               	addwf	fsr2l,f,c
 17141  003184  518E               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 17142  003186  22DA               	addwfc	fsr2h,f,c
 17143  003188  EE10 F002          	lfsr	1,2
 17144  00318C  518D               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 17145  00318E  26E1               	addwf	fsr1l,f,c
 17146  003190  518E               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 17147  003192  22E2               	addwfc	fsr1h,f,c
 17148  003194  CFE6 F079          	movff	postinc1,GetElapsedTime@StartTime
 17149  003198  CFE6 F07A          	movff	postinc1,GetElapsedTime@StartTime+1
 17150  00319C  CFE6 F07B          	movff	postinc1,GetElapsedTime@StartTime+2
 17151  0031A0  CFE6 F07C          	movff	postinc1,GetElapsedTime@StartTime+3
 17152  0031A4  EC4C  F012         	call	_GetElapsedTime	;wreg free
 17153  0031A8  50DE               	movf	postinc2,w,c
 17154  0031AA  0100               	movlb	0	; () banked
 17155  0031AC  5D79               	subwf	?_GetElapsedTime& (0+255),w,b
 17156  0031AE  50DE               	movf	postinc2,w,c
 17157  0031B0  597A               	subwfb	(?_GetElapsedTime+1)& (0+255),w,b
 17158  0031B2  50DE               	movf	postinc2,w,c
 17159  0031B4  597B               	subwfb	(?_GetElapsedTime+2)& (0+255),w,b
 17160  0031B6  50DE               	movf	postinc2,w,c
 17161  0031B8  597C               	subwfb	(?_GetElapsedTime+3)& (0+255),w,b
 17162  0031BA  A0D8               	btfss	status,0,c
 17163  0031BC  D017               	goto	l758
 17164                           
 17165                           ; BSR set to: 0
 17166                           ;os_timers.c: 200: {
 17167                           ;os_timers.c: 202: Timer->Enabled = 0u;
 17168  0031BE  C08D  FFD9         	movff	OsTmr_GetTimerStatus@Timer,fsr2l
 17169  0031C2  C08E  FFDA         	movff	OsTmr_GetTimerStatus@Timer+1,fsr2h
 17170  0031C6  0E00               	movlw	0
 17171  0031C8  6EDF               	movwf	indf2,c
 17172                           
 17173                           ; BSR set to: 0
 17174                           ;os_timers.c: 204: Timer->Status = SwTimerExpired;
 17175  0031CA  EE20 F001          	lfsr	2,1
 17176  0031CE  518D               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 17177  0031D0  26D9               	addwf	fsr2l,f,c
 17178  0031D2  518E               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 17179  0031D4  22DA               	addwfc	fsr2h,f,c
 17180  0031D6  0E01               	movlw	1
 17181  0031D8  D008               	goto	L47
 17182  0031DA                     l755:
 17183                           
 17184                           ;os_timers.c: 211: else
 17185                           ;os_timers.c: 212: {
 17186                           ;os_timers.c: 214: Timer->Status = SwTimerDisabled;
 17187                           
 17188                           ; BSR set to: 0
 17189  0031DA  0100               	movlb	0	; () banked
 17190  0031DC  EE20 F001          	lfsr	2,1
 17191  0031E0  518D               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 17192  0031E2  26D9               	addwf	fsr2l,f,c
 17193  0031E4  518E               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 17194  0031E6  22DA               	addwfc	fsr2h,f,c
 17195  0031E8  0E02               	movlw	2
 17196  0031EA                     L47:
 17197  0031EA  6EDF               	movwf	indf2,c
 17198  0031EC                     l758:
 17199                           
 17200                           ; BSR set to: 0
 17201                           ;os_timers.c: 215: }
 17202                           ;os_timers.c: 218: return Timer->Status;
 17203  0031EC  EE20 F001          	lfsr	2,1
 17204  0031F0  518D               	movf	OsTmr_GetTimerStatus@Timer& (0+255),w,b
 17205  0031F2  26D9               	addwf	fsr2l,f,c
 17206  0031F4  518E               	movf	(OsTmr_GetTimerStatus@Timer+1)& (0+255),w,b
 17207  0031F6  22DA               	addwfc	fsr2h,f,c
 17208  0031F8  50DF               	movf	indf2,w,c
 17209  0031FA  0012               	return	
 17210  0031FC                     __end_of_OsTmr_GetTimerStatus:
 17211                           	opt stack 0
 17212                           tosu	equ	0xFFF
 17213                           tosh	equ	0xFFE
 17214                           tosl	equ	0xFFD
 17215                           pclath	equ	0xFFA
 17216                           tblptru	equ	0xFF8
 17217                           tblptrh	equ	0xFF7
 17218                           tblptrl	equ	0xFF6
 17219                           tablat	equ	0xFF5
 17220                           prodh	equ	0xFF4
 17221                           prodl	equ	0xFF3
 17222                           intcon	equ	0xFF2
 17223                           intcon2	equ	0xFF1
 17224                           intcon3	equ	0xFF0
 17225                           indf0	equ	0xFEF
 17226                           postinc0	equ	0xFEE
 17227                           plusw0	equ	0xFEB
 17228                           fsr0h	equ	0xFEA
 17229                           fsr0l	equ	0xFE9
 17230                           wreg	equ	0xFE8
 17231                           indf1	equ	0xFE7
 17232                           postinc1	equ	0xFE6
 17233                           postdec1	equ	0xFE5
 17234                           fsr1h	equ	0xFE2
 17235                           fsr1l	equ	0xFE1
 17236                           indf2	equ	0xFDF
 17237                           postinc2	equ	0xFDE
 17238                           postdec2	equ	0xFDD
 17239                           plusw2	equ	0xFDB
 17240                           fsr2h	equ	0xFDA
 17241                           fsr2l	equ	0xFD9
 17242                           status	equ	0xFD8
 17243                           
 17244 ;; *************** function _GetElapsedTime *****************
 17245 ;; Defined at:
 17246 ;;		line 84 in file "../../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 17247 ;; Parameters:    Size  Location     Type
 17248 ;;  StartTime       4   25[BANK0 ] unsigned long 
 17249 ;; Auto vars:     Size  Location     Type
 17250 ;;  CurrentTimes    4   41[BANK0 ] unsigned long 
 17251 ;;  TimeValue       4   37[BANK0 ] unsigned long 
 17252 ;; Return value:  Size  Location     Type
 17253 ;;                  4   25[BANK0 ] unsigned long 
 17254 ;; Registers used:
 17255 ;;		wreg, status,2, status,0, cstack
 17256 ;; Tracked objects:
 17257 ;;		On entry : 0/0
 17258 ;;		On exit  : 0/0
 17259 ;;		Unchanged: 0/0
 17260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17261 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17262 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17263 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17264 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17265 ;;Total ram usage:       20 bytes
 17266 ;; Hardware stack levels used:    1
 17267 ;; Hardware stack levels required when called:   10
 17268 ;; This function calls:
 17269 ;;		_GetOsTickCounter
 17270 ;; This function is called by:
 17271 ;;		_OsTmr_GetTimerStatus
 17272 ;;		_OsTmr_GetRemainingTime
 17273 ;; This function uses a non-reentrant model
 17274 ;;
 17275                           
 17276                           	psect	text81
 17277  002498                     __ptext81:
 17278                           	opt stack 0
 17279  002498                     _GetElapsedTime:
 17280                           	opt stack 15
 17281                           
 17282                           ;os_timers.c: 86: UINT32 CurrentTimestamp;
 17283                           ;os_timers.c: 87: UINT32 TimeValue;
 17284                           ;os_timers.c: 90: CurrentTimestamp = GetOsTickCounter();
 17285                           
 17286                           ; BSR set to: 0
 17287                           ;incstack = 0
 17288  002498  EC64  F021         	call	_GetOsTickCounter	;wreg free
 17289  00249C  C075  F089         	movff	?_GetOsTickCounter,GetElapsedTime@CurrentTimestamp
 17290  0024A0  C076  F08A         	movff	?_GetOsTickCounter+1,GetElapsedTime@CurrentTimestamp+1
 17291  0024A4  C077  F08B         	movff	?_GetOsTickCounter+2,GetElapsedTime@CurrentTimestamp+2
 17292  0024A8  C078  F08C         	movff	?_GetOsTickCounter+3,GetElapsedTime@CurrentTimestamp+3
 17293                           
 17294                           ;os_timers.c: 93: if (CurrentTimestamp >= StartTime)
 17295  0024AC  0100               	movlb	0	; () banked
 17296  0024AE  5179               	movf	GetElapsedTime@StartTime& (0+255),w,b
 17297  0024B0  5D89               	subwf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 17298  0024B2  517A               	movf	(GetElapsedTime@StartTime+1)& (0+255),w,b
 17299  0024B4  598A               	subwfb	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 17300  0024B6  517B               	movf	(GetElapsedTime@StartTime+2)& (0+255),w,b
 17301  0024B8  598B               	subwfb	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 17302  0024BA  517C               	movf	(GetElapsedTime@StartTime+3)& (0+255),w,b
 17303  0024BC  598C               	subwfb	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 17304  0024BE  A0D8               	btfss	status,0,c
 17305  0024C0  D01D               	goto	l735
 17306                           
 17307                           ; BSR set to: 0
 17308                           ;os_timers.c: 94: {
 17309                           ;os_timers.c: 95: TimeValue = (CurrentTimestamp - StartTime);
 17310  0024C2  C079  F07D         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 17311  0024C6  C07A  F07E         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 17312  0024CA  C07B  F07F         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 17313  0024CE  C07C  F080         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 17314  0024D2  1F7D               	comf	??_GetElapsedTime& (0+255),f,b
 17315  0024D4  1F7E               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 17316  0024D6  1F7F               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 17317  0024D8  1F80               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 17318  0024DA  2B7D               	incf	??_GetElapsedTime& (0+255),f,b
 17319  0024DC  0E00               	movlw	0
 17320  0024DE  237E               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 17321  0024E0  237F               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 17322  0024E2  2380               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 17323  0024E4  5189               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 17324  0024E6  257D               	addwf	??_GetElapsedTime& (0+255),w,b
 17325  0024E8  6F85               	movwf	GetElapsedTime@TimeValue& (0+255),b
 17326  0024EA  518A               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 17327  0024EC  217E               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 17328  0024EE  6F86               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 17329  0024F0  518B               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 17330  0024F2  217F               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 17331  0024F4  6F87               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 17332  0024F6  518C               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 17333  0024F8  2180               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 17334  0024FA  D028               	goto	L19
 17335  0024FC                     l735:
 17336                           
 17337                           ; BSR set to: 0
 17338                           ;os_timers.c: 97: else
 17339                           ;os_timers.c: 98: {
 17340                           ;os_timers.c: 99: TimeValue = (CurrentTimestamp + 0xFFFFFFFF) - StartTime;
 17341                           
 17342                           ; BSR set to: 0
 17343  0024FC  C079  F07D         	movff	GetElapsedTime@StartTime,??_GetElapsedTime
 17344  002500  C07A  F07E         	movff	GetElapsedTime@StartTime+1,??_GetElapsedTime+1
 17345  002504  C07B  F07F         	movff	GetElapsedTime@StartTime+2,??_GetElapsedTime+2
 17346  002508  C07C  F080         	movff	GetElapsedTime@StartTime+3,??_GetElapsedTime+3
 17347  00250C  1F7D               	comf	??_GetElapsedTime& (0+255),f,b
 17348  00250E  1F7E               	comf	(??_GetElapsedTime+1)& (0+255),f,b
 17349  002510  1F7F               	comf	(??_GetElapsedTime+2)& (0+255),f,b
 17350  002512  1F80               	comf	(??_GetElapsedTime+3)& (0+255),f,b
 17351  002514  2B7D               	incf	??_GetElapsedTime& (0+255),f,b
 17352  002516  0E00               	movlw	0
 17353  002518  237E               	addwfc	(??_GetElapsedTime+1)& (0+255),f,b
 17354  00251A  237F               	addwfc	(??_GetElapsedTime+2)& (0+255),f,b
 17355  00251C  2380               	addwfc	(??_GetElapsedTime+3)& (0+255),f,b
 17356  00251E  5189               	movf	GetElapsedTime@CurrentTimestamp& (0+255),w,b
 17357  002520  257D               	addwf	??_GetElapsedTime& (0+255),w,b
 17358  002522  6F81               	movwf	(??_GetElapsedTime+4)& (0+255),b
 17359  002524  518A               	movf	(GetElapsedTime@CurrentTimestamp+1)& (0+255),w,b
 17360  002526  217E               	addwfc	(??_GetElapsedTime+1)& (0+255),w,b
 17361  002528  6F82               	movwf	(??_GetElapsedTime+5)& (0+255),b
 17362  00252A  518B               	movf	(GetElapsedTime@CurrentTimestamp+2)& (0+255),w,b
 17363  00252C  217F               	addwfc	(??_GetElapsedTime+2)& (0+255),w,b
 17364  00252E  6F83               	movwf	(??_GetElapsedTime+6)& (0+255),b
 17365  002530  518C               	movf	(GetElapsedTime@CurrentTimestamp+3)& (0+255),w,b
 17366  002532  2180               	addwfc	(??_GetElapsedTime+3)& (0+255),w,b
 17367  002534  6F84               	movwf	(??_GetElapsedTime+7)& (0+255),b
 17368  002536  0EFF               	movlw	255
 17369  002538  2581               	addwf	(??_GetElapsedTime+4)& (0+255),w,b
 17370  00253A  6F85               	movwf	GetElapsedTime@TimeValue& (0+255),b
 17371  00253C  0EFF               	movlw	255
 17372  00253E  2182               	addwfc	(??_GetElapsedTime+5)& (0+255),w,b
 17373  002540  6F86               	movwf	(GetElapsedTime@TimeValue+1)& (0+255),b
 17374  002542  0EFF               	movlw	255
 17375  002544  2183               	addwfc	(??_GetElapsedTime+6)& (0+255),w,b
 17376  002546  6F87               	movwf	(GetElapsedTime@TimeValue+2)& (0+255),b
 17377  002548  0EFF               	movlw	255
 17378  00254A  2184               	addwfc	(??_GetElapsedTime+7)& (0+255),w,b
 17379  00254C                     L19:
 17380  00254C  6F88               	movwf	(GetElapsedTime@TimeValue+3)& (0+255),b
 17381                           
 17382                           ; BSR set to: 0
 17383                           ;os_timers.c: 100: }
 17384                           ;os_timers.c: 102: return TimeValue;
 17385                           
 17386                           ; BSR set to: 0
 17387  00254E  C085  F079         	movff	GetElapsedTime@TimeValue,?_GetElapsedTime
 17388  002552  C086  F07A         	movff	GetElapsedTime@TimeValue+1,?_GetElapsedTime+1
 17389  002556  C087  F07B         	movff	GetElapsedTime@TimeValue+2,?_GetElapsedTime+2
 17390  00255A  C088  F07C         	movff	GetElapsedTime@TimeValue+3,?_GetElapsedTime+3
 17391  00255E  0012               	return	
 17392  002560                     __end_of_GetElapsedTime:
 17393                           	opt stack 0
 17394                           tosu	equ	0xFFF
 17395                           tosh	equ	0xFFE
 17396                           tosl	equ	0xFFD
 17397                           pclath	equ	0xFFA
 17398                           tblptru	equ	0xFF8
 17399                           tblptrh	equ	0xFF7
 17400                           tblptrl	equ	0xFF6
 17401                           tablat	equ	0xFF5
 17402                           prodh	equ	0xFF4
 17403                           prodl	equ	0xFF3
 17404                           intcon	equ	0xFF2
 17405                           intcon2	equ	0xFF1
 17406                           intcon3	equ	0xFF0
 17407                           indf0	equ	0xFEF
 17408                           postinc0	equ	0xFEE
 17409                           plusw0	equ	0xFEB
 17410                           fsr0h	equ	0xFEA
 17411                           fsr0l	equ	0xFE9
 17412                           wreg	equ	0xFE8
 17413                           indf1	equ	0xFE7
 17414                           postinc1	equ	0xFE6
 17415                           postdec1	equ	0xFE5
 17416                           fsr1h	equ	0xFE2
 17417                           fsr1l	equ	0xFE1
 17418                           indf2	equ	0xFDF
 17419                           postinc2	equ	0xFDE
 17420                           postdec2	equ	0xFDD
 17421                           plusw2	equ	0xFDB
 17422                           fsr2h	equ	0xFDA
 17423                           fsr2l	equ	0xFD9
 17424                           status	equ	0xFD8
 17425                           
 17426 ;; *************** function _GetOsTickCounter *****************
 17427 ;; Defined at:
 17428 ;;		line 70 in file "../../../MercuryFwk/Source/c/02_Osl/os_timers.c"
 17429 ;; Parameters:    Size  Location     Type
 17430 ;;		None
 17431 ;; Auto vars:     Size  Location     Type
 17432 ;;		None
 17433 ;; Return value:  Size  Location     Type
 17434 ;;                  4   21[BANK0 ] unsigned long 
 17435 ;; Registers used:
 17436 ;;		None
 17437 ;; Tracked objects:
 17438 ;;		On entry : 0/0
 17439 ;;		On exit  : 0/0
 17440 ;;		Unchanged: 0/0
 17441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17442 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17445 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17446 ;;Total ram usage:        4 bytes
 17447 ;; Hardware stack levels used:    1
 17448 ;; Hardware stack levels required when called:    9
 17449 ;; This function calls:
 17450 ;;		Nothing
 17451 ;; This function is called by:
 17452 ;;		_GetElapsedTime
 17453 ;;		_OsTmr_StartTimer
 17454 ;;		_OsTmr_GetElapsedTime
 17455 ;; This function uses a non-reentrant model
 17456 ;;
 17457                           
 17458                           	psect	text82
 17459  0042C8                     __ptext82:
 17460                           	opt stack 0
 17461  0042C8                     _GetOsTickCounter:
 17462                           	opt stack 16
 17463                           
 17464                           ;os_timers.c: 73: return OsTmr_OsTickCounter;
 17465                           
 17466                           ; BSR set to: 0
 17467                           ;incstack = 0
 17468  0042C8  C1CE  F075         	movff	_OsTmr_OsTickCounter,?_GetOsTickCounter
 17469  0042CC  C1CF  F076         	movff	_OsTmr_OsTickCounter+1,?_GetOsTickCounter+1
 17470  0042D0  C1D0  F077         	movff	_OsTmr_OsTickCounter+2,?_GetOsTickCounter+2
 17471  0042D4  C1D1  F078         	movff	_OsTmr_OsTickCounter+3,?_GetOsTickCounter+3
 17472  0042D8  0012               	return		;funcret
 17473  0042DA                     __end_of_GetOsTickCounter:
 17474                           	opt stack 0
 17475                           tosu	equ	0xFFF
 17476                           tosh	equ	0xFFE
 17477                           tosl	equ	0xFFD
 17478                           pclath	equ	0xFFA
 17479                           tblptru	equ	0xFF8
 17480                           tblptrh	equ	0xFF7
 17481                           tblptrl	equ	0xFF6
 17482                           tablat	equ	0xFF5
 17483                           prodh	equ	0xFF4
 17484                           prodl	equ	0xFF3
 17485                           intcon	equ	0xFF2
 17486                           intcon2	equ	0xFF1
 17487                           intcon3	equ	0xFF0
 17488                           indf0	equ	0xFEF
 17489                           postinc0	equ	0xFEE
 17490                           plusw0	equ	0xFEB
 17491                           fsr0h	equ	0xFEA
 17492                           fsr0l	equ	0xFE9
 17493                           wreg	equ	0xFE8
 17494                           indf1	equ	0xFE7
 17495                           postinc1	equ	0xFE6
 17496                           postdec1	equ	0xFE5
 17497                           fsr1h	equ	0xFE2
 17498                           fsr1l	equ	0xFE1
 17499                           indf2	equ	0xFDF
 17500                           postinc2	equ	0xFDE
 17501                           postdec2	equ	0xFDD
 17502                           plusw2	equ	0xFDB
 17503                           fsr2h	equ	0xFDA
 17504                           fsr2l	equ	0xFD9
 17505                           status	equ	0xFD8
 17506                           
 17507 ;; *************** function _Rtcm_SetRtccDate *****************
 17508 ;; Defined at:
 17509 ;;		line 176 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 17510 ;; Parameters:    Size  Location     Type
 17511 ;;  Date            8   33[BANK0 ] struct _RtccDateType
 17512 ;; Auto vars:     Size  Location     Type
 17513 ;;		None
 17514 ;; Return value:  Size  Location     Type
 17515 ;;                  1    wreg      void 
 17516 ;; Registers used:
 17517 ;;		wreg, status,2, status,0, cstack
 17518 ;; Tracked objects:
 17519 ;;		On entry : 0/0
 17520 ;;		On exit  : 0/0
 17521 ;;		Unchanged: 0/0
 17522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17523 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17526 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17527 ;;Total ram usage:        8 bytes
 17528 ;; Hardware stack levels used:    1
 17529 ;; Hardware stack levels required when called:   11
 17530 ;; This function calls:
 17531 ;;		_Rtcc_LockRtc
 17532 ;;		_Rtcc_SetRtccValue
 17533 ;;		_Rtcc_UnlockRtc
 17534 ;; This function is called by:
 17535 ;;		_Rtcm_MainTask
 17536 ;; This function uses a non-reentrant model
 17537 ;;
 17538                           
 17539                           	psect	text83
 17540  003926                     __ptext83:
 17541                           	opt stack 0
 17542  003926                     _Rtcm_SetRtccDate:
 17543                           	opt stack 16
 17544                           
 17545                           ;rtcm.c: 179: Rtcc_UnlockRtc();
 17546                           
 17547                           ;incstack = 0
 17548  003926  EC6D  F021         	call	_Rtcc_UnlockRtc	;wreg free
 17549                           
 17550                           ;rtcm.c: 182: Rtcc_SetRtccValue(ValPtrYear,(Date.Year - 2000));
 17551  00392A  0100               	movlb	0	; () banked
 17552  00392C  5181               	movf	Rtcm_SetRtccDate@Date& (0+255),w,b
 17553  00392E  0F30               	addlw	48
 17554  003930  6F7D               	movwf	Rtcc_SetRtccValue@Value& (0+255),b
 17555  003932  0E00               	movlw	0
 17556  003934  EC14  F005         	call	_Rtcc_SetRtccValue
 17557                           
 17558                           ;rtcm.c: 183: Rtcc_SetRtccValue(ValPtrMonth,Date.Month);
 17559  003938  C083  F07D         	movff	Rtcm_SetRtccDate@Date+2,Rtcc_SetRtccValue@Value
 17560  00393C  0E01               	movlw	1
 17561  00393E  EC14  F005         	call	_Rtcc_SetRtccValue
 17562                           
 17563                           ;rtcm.c: 184: Rtcc_SetRtccValue(ValPtrDay,Date.Day);
 17564  003942  C084  F07D         	movff	Rtcm_SetRtccDate@Date+3,Rtcc_SetRtccValue@Value
 17565  003946  0E02               	movlw	2
 17566  003948  EC14  F005         	call	_Rtcc_SetRtccValue
 17567                           
 17568                           ;rtcm.c: 185: Rtcc_SetRtccValue(ValPtrWeekday,Date.Weekday);
 17569  00394C  C085  F07D         	movff	Rtcm_SetRtccDate@Date+4,Rtcc_SetRtccValue@Value
 17570  003950  0E03               	movlw	3
 17571  003952  EC14  F005         	call	_Rtcc_SetRtccValue
 17572                           
 17573                           ;rtcm.c: 186: Rtcc_SetRtccValue(ValPtrHours,Date.Hour);
 17574  003956  C086  F07D         	movff	Rtcm_SetRtccDate@Date+5,Rtcc_SetRtccValue@Value
 17575  00395A  0E04               	movlw	4
 17576  00395C  EC14  F005         	call	_Rtcc_SetRtccValue
 17577                           
 17578                           ;rtcm.c: 187: Rtcc_SetRtccValue(ValPtrMinutes,Date.Minute);
 17579  003960  C087  F07D         	movff	Rtcm_SetRtccDate@Date+6,Rtcc_SetRtccValue@Value
 17580  003964  0E05               	movlw	5
 17581  003966  EC14  F005         	call	_Rtcc_SetRtccValue
 17582                           
 17583                           ;rtcm.c: 188: Rtcc_SetRtccValue(ValPtrSeconds,Date.Second);
 17584  00396A  C088  F07D         	movff	Rtcm_SetRtccDate@Date+7,Rtcc_SetRtccValue@Value
 17585  00396E  0E06               	movlw	6
 17586  003970  EC14  F005         	call	_Rtcc_SetRtccValue
 17587                           
 17588                           ;rtcm.c: 191: Rtcc_LockRtc();
 17589  003974  EC75  F021         	call	_Rtcc_LockRtc	;wreg free
 17590  003978  0012               	return		;funcret
 17591  00397A                     __end_of_Rtcm_SetRtccDate:
 17592                           	opt stack 0
 17593                           tosu	equ	0xFFF
 17594                           tosh	equ	0xFFE
 17595                           tosl	equ	0xFFD
 17596                           pclath	equ	0xFFA
 17597                           tblptru	equ	0xFF8
 17598                           tblptrh	equ	0xFF7
 17599                           tblptrl	equ	0xFF6
 17600                           tablat	equ	0xFF5
 17601                           prodh	equ	0xFF4
 17602                           prodl	equ	0xFF3
 17603                           intcon	equ	0xFF2
 17604                           intcon2	equ	0xFF1
 17605                           intcon3	equ	0xFF0
 17606                           indf0	equ	0xFEF
 17607                           postinc0	equ	0xFEE
 17608                           plusw0	equ	0xFEB
 17609                           fsr0h	equ	0xFEA
 17610                           fsr0l	equ	0xFE9
 17611                           wreg	equ	0xFE8
 17612                           indf1	equ	0xFE7
 17613                           postinc1	equ	0xFE6
 17614                           postdec1	equ	0xFE5
 17615                           fsr1h	equ	0xFE2
 17616                           fsr1l	equ	0xFE1
 17617                           indf2	equ	0xFDF
 17618                           postinc2	equ	0xFDE
 17619                           postdec2	equ	0xFDD
 17620                           plusw2	equ	0xFDB
 17621                           fsr2h	equ	0xFDA
 17622                           fsr2l	equ	0xFD9
 17623                           status	equ	0xFD8
 17624                           
 17625 ;; *************** function _Rtcc_UnlockRtc *****************
 17626 ;; Defined at:
 17627 ;;		line 163 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17628 ;; Parameters:    Size  Location     Type
 17629 ;;		None
 17630 ;; Auto vars:     Size  Location     Type
 17631 ;;		None
 17632 ;; Return value:  Size  Location     Type
 17633 ;;                  1    wreg      void 
 17634 ;; Registers used:
 17635 ;;		None
 17636 ;; Tracked objects:
 17637 ;;		On entry : 0/0
 17638 ;;		On exit  : 0/0
 17639 ;;		Unchanged: 0/0
 17640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17645 ;;Total ram usage:        0 bytes
 17646 ;; Hardware stack levels used:    1
 17647 ;; Hardware stack levels required when called:    9
 17648 ;; This function calls:
 17649 ;;		Nothing
 17650 ;; This function is called by:
 17651 ;;		_Rtcm_MainTask
 17652 ;;		_Rtcm_SetRtccDate
 17653 ;;		_Rtcm_SetRtccAlarm
 17654 ;; This function uses a non-reentrant model
 17655 ;;
 17656                           
 17657                           	psect	text84
 17658  0042DA                     __ptext84:
 17659                           	opt stack 0
 17660  0042DA                     _Rtcc_UnlockRtc:
 17661                           	opt stack 17
 17662                           
 17663                           ;incstack = 0
 17664  0042DA  010F               	movlb	15	;# 
 17665  0042DC  0E55               	movlw	85	;# 
 17666  0042DE  6EA7               	movwf	4007,c	;# 
 17667  0042E0  0EAA               	movlw	170	;# 
 17668  0042E2  6EA7               	movwf	4007,c	;# 
 17669                           
 17670                           ;rtcc_drv.c: 172: RTCCFGbits.RTCWREN = 1u;
 17671  0042E4  010F               	movlb	15	; () banked
 17672  0042E6  8B3F               	bsf	63,5,b	;volatile
 17673                           
 17674                           ; BSR set to: 15
 17675  0042E8  0012               	return		;funcret
 17676  0042EA                     __end_of_Rtcc_UnlockRtc:
 17677                           	opt stack 0
 17678                           tosu	equ	0xFFF
 17679                           tosh	equ	0xFFE
 17680                           tosl	equ	0xFFD
 17681                           pclath	equ	0xFFA
 17682                           tblptru	equ	0xFF8
 17683                           tblptrh	equ	0xFF7
 17684                           tblptrl	equ	0xFF6
 17685                           tablat	equ	0xFF5
 17686                           prodh	equ	0xFF4
 17687                           prodl	equ	0xFF3
 17688                           intcon	equ	0xFF2
 17689                           intcon2	equ	0xFF1
 17690                           intcon3	equ	0xFF0
 17691                           indf0	equ	0xFEF
 17692                           postinc0	equ	0xFEE
 17693                           plusw0	equ	0xFEB
 17694                           fsr0h	equ	0xFEA
 17695                           fsr0l	equ	0xFE9
 17696                           wreg	equ	0xFE8
 17697                           indf1	equ	0xFE7
 17698                           postinc1	equ	0xFE6
 17699                           postdec1	equ	0xFE5
 17700                           fsr1h	equ	0xFE2
 17701                           fsr1l	equ	0xFE1
 17702                           indf2	equ	0xFDF
 17703                           postinc2	equ	0xFDE
 17704                           postdec2	equ	0xFDD
 17705                           plusw2	equ	0xFDB
 17706                           fsr2h	equ	0xFDA
 17707                           fsr2l	equ	0xFD9
 17708                           status	equ	0xFD8
 17709                           
 17710 ;; *************** function _Rtcc_SetRtccValue *****************
 17711 ;; Defined at:
 17712 ;;		line 383 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 17713 ;; Parameters:    Size  Location     Type
 17714 ;;  RtccPtrVal      1    wreg     enum E7757
 17715 ;;  Value           1   29[BANK0 ] unsigned char 
 17716 ;; Auto vars:     Size  Location     Type
 17717 ;;  RtccPtrVal      1   32[BANK0 ] enum E7757
 17718 ;; Return value:  Size  Location     Type
 17719 ;;                  1    wreg      void 
 17720 ;; Registers used:
 17721 ;;		wreg, status,2, status,0, cstack
 17722 ;; Tracked objects:
 17723 ;;		On entry : 0/0
 17724 ;;		On exit  : 0/0
 17725 ;;		Unchanged: 0/0
 17726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 17727 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17730 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 17731 ;;Total ram usage:        4 bytes
 17732 ;; Hardware stack levels used:    1
 17733 ;; Hardware stack levels required when called:   10
 17734 ;; This function calls:
 17735 ;;		___awdiv
 17736 ;;		___awmod
 17737 ;; This function is called by:
 17738 ;;		_Rtcm_SetRtccDate
 17739 ;; This function uses a non-reentrant model
 17740 ;;
 17741                           
 17742                           	psect	text85
 17743  000A28                     __ptext85:
 17744                           	opt stack 0
 17745  000A28                     _Rtcc_SetRtccValue:
 17746                           	opt stack 16
 17747                           
 17748                           ; BSR set to: 15
 17749                           ;incstack = 0
 17750                           ;Rtcc_SetRtccValue@RtccPtrVal stored from wreg
 17751  000A28  0100               	movlb	0	; () banked
 17752  000A2A  6F80               	movwf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),b
 17753                           
 17754                           ;rtcc_drv.c: 385: switch (RtccPtrVal)
 17755  000A2C  D0FC               	goto	l369
 17756  000A2E                     l370:
 17757                           
 17758                           ; BSR set to: 0
 17759                           ;rtcc_drv.c: 389: RTCCFGbits.RTCPTR1 = 1U;
 17760  000A2E  010F               	movlb	15	; () banked
 17761  000A30  833F               	bsf	63,1,b	;volatile
 17762                           
 17763                           ;rtcc_drv.c: 390: RTCCFGbits.RTCPTR0 = 1U;
 17764  000A32  813F               	bsf	63,0,b	;volatile
 17765                           
 17766                           ; BSR set to: 15
 17767                           ;rtcc_drv.c: 392: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 17768  000A34  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 17769  000A38  0100               	movlb	0	; () banked
 17770  000A3A  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 17771  000A3C  0E00               	movlw	0
 17772  000A3E  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 17773  000A40  0E0A               	movlw	10
 17774  000A42  6F77               	movwf	___awmod@divisor& (0+255),b
 17775  000A44  EC0D  F01A         	call	___awmod	;wreg free
 17776  000A48  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 17777  000A4C  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 17778  000A50  0E0F               	movlw	15
 17779  000A52  0100               	movlb	0	; () banked
 17780  000A54  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 17781  000A56  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 17782  000A5A  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 17783  000A5C  0E00               	movlw	0
 17784  000A5E  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 17785  000A60  0E0A               	movlw	10
 17786  000A62  6F77               	movwf	___awdiv@divisor& (0+255),b
 17787  000A64  EC88  F019         	call	___awdiv	;wreg free
 17788  000A68  0100               	movlb	0	; () banked
 17789  000A6A  3975               	swapf	?___awdiv& (0+255),w,b
 17790  000A6C  0BF0               	andlw	240
 17791  000A6E  0BF0               	andlw	240
 17792  000A70  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 17793  000A72  6E98               	movwf	3992,c	;volatile
 17794                           
 17795                           ;rtcc_drv.c: 393: break;
 17796  000A74  0012               	return	
 17797  000A76                     l372:
 17798                           
 17799                           ; BSR set to: 0
 17800                           ;rtcc_drv.c: 397: RTCCFGbits.RTCPTR1 = 1U;
 17801  000A76  010F               	movlb	15	; () banked
 17802  000A78  833F               	bsf	63,1,b	;volatile
 17803                           
 17804                           ;rtcc_drv.c: 398: RTCCFGbits.RTCPTR0 = 0U;
 17805  000A7A  913F               	bcf	63,0,b	;volatile
 17806                           
 17807                           ; BSR set to: 15
 17808                           ;rtcc_drv.c: 400: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 17809  000A7C  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 17810  000A80  0100               	movlb	0	; () banked
 17811  000A82  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 17812  000A84  0E00               	movlw	0
 17813  000A86  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 17814  000A88  0E0A               	movlw	10
 17815  000A8A  6F77               	movwf	___awmod@divisor& (0+255),b
 17816  000A8C  EC0D  F01A         	call	___awmod	;wreg free
 17817  000A90  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 17818  000A94  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 17819  000A98  0E0F               	movlw	15
 17820  000A9A  0100               	movlb	0	; () banked
 17821  000A9C  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 17822  000A9E  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 17823  000AA2  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 17824  000AA4  0E00               	movlw	0
 17825  000AA6  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 17826  000AA8  0E0A               	movlw	10
 17827  000AAA  6F77               	movwf	___awdiv@divisor& (0+255),b
 17828  000AAC  EC88  F019         	call	___awdiv	;wreg free
 17829  000AB0  0100               	movlb	0	; () banked
 17830  000AB2  3975               	swapf	?___awdiv& (0+255),w,b
 17831  000AB4  0BF0               	andlw	240
 17832  000AB6  0BF0               	andlw	240
 17833  000AB8  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 17834  000ABA  6E99               	movwf	3993,c	;volatile
 17835                           
 17836                           ;rtcc_drv.c: 401: break;
 17837  000ABC  0012               	return	
 17838  000ABE                     l373:
 17839                           
 17840                           ; BSR set to: 0
 17841                           ;rtcc_drv.c: 405: RTCCFGbits.RTCPTR1 = 1U;
 17842  000ABE  010F               	movlb	15	; () banked
 17843  000AC0  833F               	bsf	63,1,b	;volatile
 17844                           
 17845                           ;rtcc_drv.c: 406: RTCCFGbits.RTCPTR0 = 0U;
 17846  000AC2  913F               	bcf	63,0,b	;volatile
 17847                           
 17848                           ; BSR set to: 15
 17849                           ;rtcc_drv.c: 408: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 17850  000AC4  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 17851  000AC8  0100               	movlb	0	; () banked
 17852  000ACA  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 17853  000ACC  0E00               	movlw	0
 17854  000ACE  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 17855  000AD0  0E0A               	movlw	10
 17856  000AD2  6F77               	movwf	___awmod@divisor& (0+255),b
 17857  000AD4  EC0D  F01A         	call	___awmod	;wreg free
 17858  000AD8  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 17859  000ADC  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 17860  000AE0  0E0F               	movlw	15
 17861  000AE2  0100               	movlb	0	; () banked
 17862  000AE4  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 17863  000AE6  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 17864  000AEA  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 17865  000AEC  0E00               	movlw	0
 17866  000AEE  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 17867  000AF0  0E0A               	movlw	10
 17868  000AF2  6F77               	movwf	___awdiv@divisor& (0+255),b
 17869  000AF4  EC88  F019         	call	___awdiv	;wreg free
 17870  000AF8  0100               	movlb	0	; () banked
 17871  000AFA  3975               	swapf	?___awdiv& (0+255),w,b
 17872  000AFC  0BF0               	andlw	240
 17873  000AFE  0BF0               	andlw	240
 17874  000B00  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 17875  000B02  6E98               	movwf	3992,c	;volatile
 17876                           
 17877                           ;rtcc_drv.c: 409: break;
 17878  000B04  0012               	return	
 17879  000B06                     l374:
 17880                           
 17881                           ; BSR set to: 0
 17882                           ;rtcc_drv.c: 413: RTCCFGbits.RTCPTR1 = 0U;
 17883  000B06  010F               	movlb	15	; () banked
 17884  000B08  933F               	bcf	63,1,b	;volatile
 17885                           
 17886                           ;rtcc_drv.c: 414: RTCCFGbits.RTCPTR0 = 1U;
 17887  000B0A  813F               	bsf	63,0,b	;volatile
 17888                           
 17889                           ; BSR set to: 15
 17890                           ;rtcc_drv.c: 416: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 17891  000B0C  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 17892  000B10  0100               	movlb	0	; () banked
 17893  000B12  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 17894  000B14  0E00               	movlw	0
 17895  000B16  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 17896  000B18  0E0A               	movlw	10
 17897  000B1A  6F77               	movwf	___awmod@divisor& (0+255),b
 17898  000B1C  EC0D  F01A         	call	___awmod	;wreg free
 17899  000B20  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 17900  000B24  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 17901  000B28  0E0F               	movlw	15
 17902  000B2A  0100               	movlb	0	; () banked
 17903  000B2C  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 17904  000B2E  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 17905  000B32  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 17906  000B34  0E00               	movlw	0
 17907  000B36  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 17908  000B38  0E0A               	movlw	10
 17909  000B3A  6F77               	movwf	___awdiv@divisor& (0+255),b
 17910  000B3C  EC88  F019         	call	___awdiv	;wreg free
 17911  000B40  0100               	movlb	0	; () banked
 17912  000B42  3975               	swapf	?___awdiv& (0+255),w,b
 17913  000B44  0BF0               	andlw	240
 17914  000B46  0BF0               	andlw	240
 17915  000B48  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 17916  000B4A  6E99               	movwf	3993,c	;volatile
 17917                           
 17918                           ;rtcc_drv.c: 417: break;
 17919  000B4C  0012               	return	
 17920  000B4E                     l375:
 17921                           
 17922                           ; BSR set to: 0
 17923                           ;rtcc_drv.c: 421: RTCCFGbits.RTCPTR1 = 0U;
 17924  000B4E  010F               	movlb	15	; () banked
 17925  000B50  933F               	bcf	63,1,b	;volatile
 17926                           
 17927                           ;rtcc_drv.c: 422: RTCCFGbits.RTCPTR0 = 1U;
 17928  000B52  813F               	bsf	63,0,b	;volatile
 17929                           
 17930                           ; BSR set to: 15
 17931                           ;rtcc_drv.c: 424: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 17932  000B54  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 17933  000B58  0100               	movlb	0	; () banked
 17934  000B5A  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 17935  000B5C  0E00               	movlw	0
 17936  000B5E  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 17937  000B60  0E0A               	movlw	10
 17938  000B62  6F77               	movwf	___awmod@divisor& (0+255),b
 17939  000B64  EC0D  F01A         	call	___awmod	;wreg free
 17940  000B68  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 17941  000B6C  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 17942  000B70  0E0F               	movlw	15
 17943  000B72  0100               	movlb	0	; () banked
 17944  000B74  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 17945  000B76  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 17946  000B7A  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 17947  000B7C  0E00               	movlw	0
 17948  000B7E  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 17949  000B80  0E0A               	movlw	10
 17950  000B82  6F77               	movwf	___awdiv@divisor& (0+255),b
 17951  000B84  EC88  F019         	call	___awdiv	;wreg free
 17952  000B88  0100               	movlb	0	; () banked
 17953  000B8A  3975               	swapf	?___awdiv& (0+255),w,b
 17954  000B8C  0BF0               	andlw	240
 17955  000B8E  0BF0               	andlw	240
 17956  000B90  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 17957  000B92  6E98               	movwf	3992,c	;volatile
 17958                           
 17959                           ;rtcc_drv.c: 425: break;
 17960  000B94  0012               	return	
 17961  000B96                     l376:
 17962                           
 17963                           ; BSR set to: 0
 17964                           ;rtcc_drv.c: 429: RTCCFGbits.RTCPTR1 = 0U;
 17965  000B96  010F               	movlb	15	; () banked
 17966  000B98  933F               	bcf	63,1,b	;volatile
 17967                           
 17968                           ;rtcc_drv.c: 430: RTCCFGbits.RTCPTR0 = 0U;
 17969  000B9A  913F               	bcf	63,0,b	;volatile
 17970                           
 17971                           ; BSR set to: 15
 17972                           ;rtcc_drv.c: 432: RTCVALH = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 17973  000B9C  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 17974  000BA0  0100               	movlb	0	; () banked
 17975  000BA2  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 17976  000BA4  0E00               	movlw	0
 17977  000BA6  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 17978  000BA8  0E0A               	movlw	10
 17979  000BAA  6F77               	movwf	___awmod@divisor& (0+255),b
 17980  000BAC  EC0D  F01A         	call	___awmod	;wreg free
 17981  000BB0  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 17982  000BB4  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 17983  000BB8  0E0F               	movlw	15
 17984  000BBA  0100               	movlb	0	; () banked
 17985  000BBC  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 17986  000BBE  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 17987  000BC2  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 17988  000BC4  0E00               	movlw	0
 17989  000BC6  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 17990  000BC8  0E0A               	movlw	10
 17991  000BCA  6F77               	movwf	___awdiv@divisor& (0+255),b
 17992  000BCC  EC88  F019         	call	___awdiv	;wreg free
 17993  000BD0  0100               	movlb	0	; () banked
 17994  000BD2  3975               	swapf	?___awdiv& (0+255),w,b
 17995  000BD4  0BF0               	andlw	240
 17996  000BD6  0BF0               	andlw	240
 17997  000BD8  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 17998  000BDA  6E99               	movwf	3993,c	;volatile
 17999                           
 18000                           ;rtcc_drv.c: 433: break;
 18001  000BDC  0012               	return	
 18002  000BDE                     l377:
 18003                           
 18004                           ; BSR set to: 0
 18005                           ;rtcc_drv.c: 437: RTCCFGbits.RTCPTR1 = 0U;
 18006  000BDE  010F               	movlb	15	; () banked
 18007  000BE0  933F               	bcf	63,1,b	;volatile
 18008                           
 18009                           ;rtcc_drv.c: 438: RTCCFGbits.RTCPTR0 = 0U;
 18010  000BE2  913F               	bcf	63,0,b	;volatile
 18011                           
 18012                           ; BSR set to: 15
 18013                           ;rtcc_drv.c: 440: RTCVALL = (((Value/10) << 4U) & 0xF0) | ((Value % 10) & 0x0F);
 18014  000BE4  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awmod@dividend
 18015  000BE8  0100               	movlb	0	; () banked
 18016  000BEA  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
 18017  000BEC  0E00               	movlw	0
 18018  000BEE  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
 18019  000BF0  0E0A               	movlw	10
 18020  000BF2  6F77               	movwf	___awmod@divisor& (0+255),b
 18021  000BF4  EC0D  F01A         	call	___awmod	;wreg free
 18022  000BF8  C075  F07E         	movff	?___awmod,??_Rtcc_SetRtccValue
 18023  000BFC  C076  F07F         	movff	?___awmod+1,??_Rtcc_SetRtccValue+1
 18024  000C00  0E0F               	movlw	15
 18025  000C02  0100               	movlb	0	; () banked
 18026  000C04  177E               	andwf	??_Rtcc_SetRtccValue& (0+255),f,b
 18027  000C06  C07D  F075         	movff	Rtcc_SetRtccValue@Value,___awdiv@dividend
 18028  000C0A  6B76               	clrf	(___awdiv@dividend+1)& (0+255),b
 18029  000C0C  0E00               	movlw	0
 18030  000C0E  6F78               	movwf	(___awdiv@divisor+1)& (0+255),b
 18031  000C10  0E0A               	movlw	10
 18032  000C12  6F77               	movwf	___awdiv@divisor& (0+255),b
 18033  000C14  EC88  F019         	call	___awdiv	;wreg free
 18034  000C18  0100               	movlb	0	; () banked
 18035  000C1A  3975               	swapf	?___awdiv& (0+255),w,b
 18036  000C1C  0BF0               	andlw	240
 18037  000C1E  0BF0               	andlw	240
 18038  000C20  117E               	iorwf	??_Rtcc_SetRtccValue& (0+255),w,b
 18039  000C22  6E98               	movwf	3992,c	;volatile
 18040                           
 18041                           ; BSR set to: 0
 18042                           ;rtcc_drv.c: 445: }
 18043                           
 18044                           ; BSR set to: 0
 18045                           ;rtcc_drv.c: 444: break;
 18046                           
 18047                           ;rtcc_drv.c: 443: default:
 18048                           
 18049                           ;rtcc_drv.c: 441: break;
 18050  000C24  0012               	return	
 18051  000C26                     l369:
 18052                           
 18053                           ; BSR set to: 0
 18054  000C26  0100               	movlb	0	; () banked
 18055  000C28  5180               	movf	Rtcc_SetRtccValue@RtccPtrVal& (0+255),w,b
 18056                           
 18057                           ; Switch size 1, requested type "space"
 18058                           ; Number of cases is 7, Range of values is 0 to 6
 18059                           ; switch strategies available:
 18060                           ; Name         Instructions Cycles
 18061                           ; simple_byte           22    12 (average)
 18062                           ;	Chosen strategy is simple_byte
 18063  000C2A  0A00               	xorlw	0	; case 0
 18064  000C2C  B4D8               	btfsc	status,2,c
 18065  000C2E  D6FF               	goto	l370
 18066  000C30  0A01               	xorlw	1	; case 1
 18067  000C32  B4D8               	btfsc	status,2,c
 18068  000C34  D720               	goto	l372
 18069  000C36  0A03               	xorlw	3	; case 2
 18070  000C38  B4D8               	btfsc	status,2,c
 18071  000C3A  D741               	goto	l373
 18072  000C3C  0A01               	xorlw	1	; case 3
 18073  000C3E  B4D8               	btfsc	status,2,c
 18074  000C40  D762               	goto	l374
 18075  000C42  0A07               	xorlw	7	; case 4
 18076  000C44  B4D8               	btfsc	status,2,c
 18077  000C46  D783               	goto	l375
 18078  000C48  0A01               	xorlw	1	; case 5
 18079  000C4A  B4D8               	btfsc	status,2,c
 18080  000C4C  D7A4               	goto	l376
 18081  000C4E  0A03               	xorlw	3	; case 6
 18082  000C50  A4D8               	btfss	status,2,c
 18083  000C52  0012               	return	
 18084  000C54  D7C4               	goto	l377
 18085  000C56                     __end_of_Rtcc_SetRtccValue:
 18086                           	opt stack 0
 18087                           tosu	equ	0xFFF
 18088                           tosh	equ	0xFFE
 18089                           tosl	equ	0xFFD
 18090                           pclath	equ	0xFFA
 18091                           tblptru	equ	0xFF8
 18092                           tblptrh	equ	0xFF7
 18093                           tblptrl	equ	0xFF6
 18094                           tablat	equ	0xFF5
 18095                           prodh	equ	0xFF4
 18096                           prodl	equ	0xFF3
 18097                           intcon	equ	0xFF2
 18098                           intcon2	equ	0xFF1
 18099                           intcon3	equ	0xFF0
 18100                           indf0	equ	0xFEF
 18101                           postinc0	equ	0xFEE
 18102                           plusw0	equ	0xFEB
 18103                           fsr0h	equ	0xFEA
 18104                           fsr0l	equ	0xFE9
 18105                           wreg	equ	0xFE8
 18106                           indf1	equ	0xFE7
 18107                           postinc1	equ	0xFE6
 18108                           postdec1	equ	0xFE5
 18109                           fsr1h	equ	0xFE2
 18110                           fsr1l	equ	0xFE1
 18111                           indf2	equ	0xFDF
 18112                           postinc2	equ	0xFDE
 18113                           postdec2	equ	0xFDD
 18114                           plusw2	equ	0xFDB
 18115                           fsr2h	equ	0xFDA
 18116                           fsr2l	equ	0xFD9
 18117                           status	equ	0xFD8
 18118                           
 18119 ;; *************** function ___awmod *****************
 18120 ;; Defined at:
 18121 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 18122 ;; Parameters:    Size  Location     Type
 18123 ;;  dividend        2   21[BANK0 ] int 
 18124 ;;  divisor         2   23[BANK0 ] int 
 18125 ;; Auto vars:     Size  Location     Type
 18126 ;;  sign            1   26[BANK0 ] unsigned char 
 18127 ;;  counter         1   25[BANK0 ] unsigned char 
 18128 ;; Return value:  Size  Location     Type
 18129 ;;                  2   21[BANK0 ] int 
 18130 ;; Registers used:
 18131 ;;		wreg, status,2, status,0
 18132 ;; Tracked objects:
 18133 ;;		On entry : 0/0
 18134 ;;		On exit  : 0/0
 18135 ;;		Unchanged: 0/0
 18136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18137 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18138 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18140 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18141 ;;Total ram usage:        6 bytes
 18142 ;; Hardware stack levels used:    1
 18143 ;; Hardware stack levels required when called:    9
 18144 ;; This function calls:
 18145 ;;		Nothing
 18146 ;; This function is called by:
 18147 ;;		_Rtcc_SetRtccValue
 18148 ;;		_Rtcc_SetRtccAlarm
 18149 ;; This function uses a non-reentrant model
 18150 ;;
 18151                           
 18152                           	psect	text86
 18153  00341A                     __ptext86:
 18154                           	opt stack 0
 18155  00341A                     ___awmod:
 18156                           	opt stack 16
 18157                           
 18158                           ; BSR set to: 0
 18159                           ;incstack = 0
 18160  00341A  0E00               	movlw	0
 18161  00341C  0100               	movlb	0	; () banked
 18162  00341E  6F7A               	movwf	___awmod@sign& (0+255),b
 18163                           
 18164                           ; BSR set to: 0
 18165  003420  AF76               	btfss	(___awmod@dividend+1)& (0+255),7,b
 18166  003422  D006               	goto	l2146
 18167                           
 18168                           ; BSR set to: 0
 18169  003424  6D75               	negf	___awmod@dividend& (0+255),b
 18170  003426  1F76               	comf	(___awmod@dividend+1)& (0+255),f,b
 18171  003428  B0D8               	btfsc	status,0,c
 18172  00342A  2B76               	incf	(___awmod@dividend+1)& (0+255),f,b
 18173                           
 18174                           ; BSR set to: 0
 18175  00342C  0E01               	movlw	1
 18176  00342E  6F7A               	movwf	___awmod@sign& (0+255),b
 18177  003430                     l2146:
 18178                           
 18179                           ; BSR set to: 0
 18180                           
 18181                           ; BSR set to: 0
 18182  003430  AF78               	btfss	(___awmod@divisor+1)& (0+255),7,b
 18183  003432  D004               	goto	l2147
 18184                           
 18185                           ; BSR set to: 0
 18186  003434  6D77               	negf	___awmod@divisor& (0+255),b
 18187  003436  1F78               	comf	(___awmod@divisor+1)& (0+255),f,b
 18188  003438  B0D8               	btfsc	status,0,c
 18189  00343A  2B78               	incf	(___awmod@divisor+1)& (0+255),f,b
 18190  00343C                     l2147:
 18191                           
 18192                           ; BSR set to: 0
 18193                           
 18194                           ; BSR set to: 0
 18195  00343C  5177               	movf	___awmod@divisor& (0+255),w,b
 18196  00343E  1178               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 18197  003440  B4D8               	btfsc	status,2,c
 18198  003442  D018               	goto	l2154
 18199                           
 18200                           ; BSR set to: 0
 18201  003444  0E01               	movlw	1
 18202  003446  6F79               	movwf	___awmod@counter& (0+255),b
 18203  003448  D004               	goto	l2149
 18204  00344A                     
 18205                           ; BSR set to: 0
 18206                           
 18207                           ; BSR set to: 0
 18208  00344A  90D8               	bcf	status,0,c
 18209  00344C  3777               	rlcf	___awmod@divisor& (0+255),f,b
 18210  00344E  3778               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 18211  003450  2B79               	incf	___awmod@counter& (0+255),f,b
 18212  003452                     l2149:
 18213                           
 18214                           ; BSR set to: 0
 18215                           
 18216                           ; BSR set to: 0
 18217  003452  AF78               	btfss	(___awmod@divisor+1)& (0+255),7,b
 18218  003454  D7FA               	goto	l2150
 18219  003456                     u5530:
 18220                           
 18221                           ; BSR set to: 0
 18222                           
 18223                           ; BSR set to: 0
 18224                           
 18225                           ; BSR set to: 0
 18226  003456  5177               	movf	___awmod@divisor& (0+255),w,b
 18227  003458  5D75               	subwf	___awmod@dividend& (0+255),w,b
 18228  00345A  5178               	movf	(___awmod@divisor+1)& (0+255),w,b
 18229  00345C  5976               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 18230  00345E  A0D8               	btfss	status,0,c
 18231  003460  D004               	goto	l2153
 18232                           
 18233                           ; BSR set to: 0
 18234  003462  5177               	movf	___awmod@divisor& (0+255),w,b
 18235  003464  5F75               	subwf	___awmod@dividend& (0+255),f,b
 18236  003466  5178               	movf	(___awmod@divisor+1)& (0+255),w,b
 18237  003468  5B76               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 18238  00346A                     l2153:
 18239                           
 18240                           ; BSR set to: 0
 18241                           
 18242                           ; BSR set to: 0
 18243  00346A  90D8               	bcf	status,0,c
 18244  00346C  3378               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 18245  00346E  3377               	rrcf	___awmod@divisor& (0+255),f,b
 18246                           
 18247                           ; BSR set to: 0
 18248  003470  2F79               	decfsz	___awmod@counter& (0+255),f,b
 18249  003472  D7F1               	goto	u5530
 18250  003474                     l2154:
 18251                           
 18252                           ; BSR set to: 0
 18253                           
 18254                           ; BSR set to: 0
 18255                           
 18256                           ; BSR set to: 0
 18257  003474  517A               	movf	___awmod@sign& (0+255),w,b
 18258  003476  B4D8               	btfsc	status,2,c
 18259  003478  D004               	goto	l2155
 18260                           
 18261                           ; BSR set to: 0
 18262  00347A  6D75               	negf	___awmod@dividend& (0+255),b
 18263  00347C  1F76               	comf	(___awmod@dividend+1)& (0+255),f,b
 18264  00347E  B0D8               	btfsc	status,0,c
 18265  003480  2B76               	incf	(___awmod@dividend+1)& (0+255),f,b
 18266  003482                     l2155:
 18267                           
 18268                           ; BSR set to: 0
 18269                           
 18270                           ; BSR set to: 0
 18271  003482  C075  F075         	movff	___awmod@dividend,?___awmod
 18272  003486  C076  F076         	movff	___awmod@dividend+1,?___awmod+1
 18273  00348A  0012               	return	
 18274  00348C                     __end_of___awmod:
 18275                           	opt stack 0
 18276                           tosu	equ	0xFFF
 18277                           tosh	equ	0xFFE
 18278                           tosl	equ	0xFFD
 18279                           pclath	equ	0xFFA
 18280                           tblptru	equ	0xFF8
 18281                           tblptrh	equ	0xFF7
 18282                           tblptrl	equ	0xFF6
 18283                           tablat	equ	0xFF5
 18284                           prodh	equ	0xFF4
 18285                           prodl	equ	0xFF3
 18286                           intcon	equ	0xFF2
 18287                           intcon2	equ	0xFF1
 18288                           intcon3	equ	0xFF0
 18289                           indf0	equ	0xFEF
 18290                           postinc0	equ	0xFEE
 18291                           plusw0	equ	0xFEB
 18292                           fsr0h	equ	0xFEA
 18293                           fsr0l	equ	0xFE9
 18294                           wreg	equ	0xFE8
 18295                           indf1	equ	0xFE7
 18296                           postinc1	equ	0xFE6
 18297                           postdec1	equ	0xFE5
 18298                           fsr1h	equ	0xFE2
 18299                           fsr1l	equ	0xFE1
 18300                           indf2	equ	0xFDF
 18301                           postinc2	equ	0xFDE
 18302                           postdec2	equ	0xFDD
 18303                           plusw2	equ	0xFDB
 18304                           fsr2h	equ	0xFDA
 18305                           fsr2l	equ	0xFD9
 18306                           status	equ	0xFD8
 18307                           
 18308 ;; *************** function ___awdiv *****************
 18309 ;; Defined at:
 18310 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 18311 ;; Parameters:    Size  Location     Type
 18312 ;;  dividend        2   21[BANK0 ] int 
 18313 ;;  divisor         2   23[BANK0 ] int 
 18314 ;; Auto vars:     Size  Location     Type
 18315 ;;  quotient        2   27[BANK0 ] int 
 18316 ;;  sign            1   26[BANK0 ] unsigned char 
 18317 ;;  counter         1   25[BANK0 ] unsigned char 
 18318 ;; Return value:  Size  Location     Type
 18319 ;;                  2   21[BANK0 ] int 
 18320 ;; Registers used:
 18321 ;;		wreg, status,2, status,0
 18322 ;; Tracked objects:
 18323 ;;		On entry : 0/0
 18324 ;;		On exit  : 0/0
 18325 ;;		Unchanged: 0/0
 18326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18327 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18328 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18330 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18331 ;;Total ram usage:        8 bytes
 18332 ;; Hardware stack levels used:    1
 18333 ;; Hardware stack levels required when called:    9
 18334 ;; This function calls:
 18335 ;;		Nothing
 18336 ;; This function is called by:
 18337 ;;		_Rtcc_SetRtccValue
 18338 ;;		_Rtcc_SetRtccAlarm
 18339 ;; This function uses a non-reentrant model
 18340 ;;
 18341                           
 18342                           	psect	text87
 18343  003310                     __ptext87:
 18344                           	opt stack 0
 18345  003310                     ___awdiv:
 18346                           	opt stack 16
 18347                           
 18348                           ; BSR set to: 0
 18349                           ;incstack = 0
 18350  003310  0E00               	movlw	0
 18351  003312  0100               	movlb	0	; () banked
 18352  003314  6F7A               	movwf	___awdiv@sign& (0+255),b
 18353                           
 18354                           ; BSR set to: 0
 18355  003316  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18356  003318  D006               	goto	l2133
 18357                           
 18358                           ; BSR set to: 0
 18359  00331A  6D77               	negf	___awdiv@divisor& (0+255),b
 18360  00331C  1F78               	comf	(___awdiv@divisor+1)& (0+255),f,b
 18361  00331E  B0D8               	btfsc	status,0,c
 18362  003320  2B78               	incf	(___awdiv@divisor+1)& (0+255),f,b
 18363                           
 18364                           ; BSR set to: 0
 18365  003322  0E01               	movlw	1
 18366  003324  6F7A               	movwf	___awdiv@sign& (0+255),b
 18367  003326                     l2133:
 18368                           
 18369                           ; BSR set to: 0
 18370                           
 18371                           ; BSR set to: 0
 18372  003326  AF76               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 18373  003328  D006               	goto	l2134
 18374                           
 18375                           ; BSR set to: 0
 18376  00332A  6D75               	negf	___awdiv@dividend& (0+255),b
 18377  00332C  1F76               	comf	(___awdiv@dividend+1)& (0+255),f,b
 18378  00332E  B0D8               	btfsc	status,0,c
 18379  003330  2B76               	incf	(___awdiv@dividend+1)& (0+255),f,b
 18380                           
 18381                           ; BSR set to: 0
 18382  003332  0E01               	movlw	1
 18383  003334  1B7A               	xorwf	___awdiv@sign& (0+255),f,b
 18384  003336                     l2134:
 18385                           
 18386                           ; BSR set to: 0
 18387                           
 18388                           ; BSR set to: 0
 18389  003336  0E00               	movlw	0
 18390  003338  6F7C               	movwf	(___awdiv@quotient+1)& (0+255),b
 18391  00333A  0E00               	movlw	0
 18392  00333C  6F7B               	movwf	___awdiv@quotient& (0+255),b
 18393                           
 18394                           ; BSR set to: 0
 18395  00333E  5177               	movf	___awdiv@divisor& (0+255),w,b
 18396  003340  1178               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 18397  003342  B4D8               	btfsc	status,2,c
 18398  003344  D01C               	goto	l2141
 18399                           
 18400                           ; BSR set to: 0
 18401  003346  0E01               	movlw	1
 18402  003348  6F79               	movwf	___awdiv@counter& (0+255),b
 18403  00334A  D004               	goto	l2136
 18404  00334C                     
 18405                           ; BSR set to: 0
 18406                           
 18407                           ; BSR set to: 0
 18408  00334C  90D8               	bcf	status,0,c
 18409  00334E  3777               	rlcf	___awdiv@divisor& (0+255),f,b
 18410  003350  3778               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 18411  003352  2B79               	incf	___awdiv@counter& (0+255),f,b
 18412  003354                     l2136:
 18413                           
 18414                           ; BSR set to: 0
 18415                           
 18416                           ; BSR set to: 0
 18417  003354  AF78               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 18418  003356  D7FA               	goto	l2137
 18419  003358                     u5470:
 18420                           
 18421                           ; BSR set to: 0
 18422                           
 18423                           ; BSR set to: 0
 18424                           
 18425                           ; BSR set to: 0
 18426  003358  90D8               	bcf	status,0,c
 18427  00335A  377B               	rlcf	___awdiv@quotient& (0+255),f,b
 18428  00335C  377C               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 18429                           
 18430                           ; BSR set to: 0
 18431  00335E  5177               	movf	___awdiv@divisor& (0+255),w,b
 18432  003360  5D75               	subwf	___awdiv@dividend& (0+255),w,b
 18433  003362  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18434  003364  5976               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 18435  003366  A0D8               	btfss	status,0,c
 18436  003368  D005               	goto	l2140
 18437                           
 18438                           ; BSR set to: 0
 18439  00336A  5177               	movf	___awdiv@divisor& (0+255),w,b
 18440  00336C  5F75               	subwf	___awdiv@dividend& (0+255),f,b
 18441  00336E  5178               	movf	(___awdiv@divisor+1)& (0+255),w,b
 18442  003370  5B76               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 18443                           
 18444                           ; BSR set to: 0
 18445  003372  817B               	bsf	___awdiv@quotient& (0+255),0,b
 18446  003374                     l2140:
 18447                           
 18448                           ; BSR set to: 0
 18449                           
 18450                           ; BSR set to: 0
 18451  003374  90D8               	bcf	status,0,c
 18452  003376  3378               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 18453  003378  3377               	rrcf	___awdiv@divisor& (0+255),f,b
 18454                           
 18455                           ; BSR set to: 0
 18456  00337A  2F79               	decfsz	___awdiv@counter& (0+255),f,b
 18457  00337C  D7ED               	goto	u5470
 18458  00337E                     l2141:
 18459                           
 18460                           ; BSR set to: 0
 18461                           
 18462                           ; BSR set to: 0
 18463                           
 18464                           ; BSR set to: 0
 18465  00337E  517A               	movf	___awdiv@sign& (0+255),w,b
 18466  003380  B4D8               	btfsc	status,2,c
 18467  003382  D004               	goto	l2142
 18468                           
 18469                           ; BSR set to: 0
 18470  003384  6D7B               	negf	___awdiv@quotient& (0+255),b
 18471  003386  1F7C               	comf	(___awdiv@quotient+1)& (0+255),f,b
 18472  003388  B0D8               	btfsc	status,0,c
 18473  00338A  2B7C               	incf	(___awdiv@quotient+1)& (0+255),f,b
 18474  00338C                     l2142:
 18475                           
 18476                           ; BSR set to: 0
 18477                           
 18478                           ; BSR set to: 0
 18479  00338C  C07B  F075         	movff	___awdiv@quotient,?___awdiv
 18480  003390  C07C  F076         	movff	___awdiv@quotient+1,?___awdiv+1
 18481  003394  0012               	return	
 18482  003396                     __end_of___awdiv:
 18483                           	opt stack 0
 18484                           tosu	equ	0xFFF
 18485                           tosh	equ	0xFFE
 18486                           tosl	equ	0xFFD
 18487                           pclath	equ	0xFFA
 18488                           tblptru	equ	0xFF8
 18489                           tblptrh	equ	0xFF7
 18490                           tblptrl	equ	0xFF6
 18491                           tablat	equ	0xFF5
 18492                           prodh	equ	0xFF4
 18493                           prodl	equ	0xFF3
 18494                           intcon	equ	0xFF2
 18495                           intcon2	equ	0xFF1
 18496                           intcon3	equ	0xFF0
 18497                           indf0	equ	0xFEF
 18498                           postinc0	equ	0xFEE
 18499                           plusw0	equ	0xFEB
 18500                           fsr0h	equ	0xFEA
 18501                           fsr0l	equ	0xFE9
 18502                           wreg	equ	0xFE8
 18503                           indf1	equ	0xFE7
 18504                           postinc1	equ	0xFE6
 18505                           postdec1	equ	0xFE5
 18506                           fsr1h	equ	0xFE2
 18507                           fsr1l	equ	0xFE1
 18508                           indf2	equ	0xFDF
 18509                           postinc2	equ	0xFDE
 18510                           postdec2	equ	0xFDD
 18511                           plusw2	equ	0xFDB
 18512                           fsr2h	equ	0xFDA
 18513                           fsr2l	equ	0xFD9
 18514                           status	equ	0xFD8
 18515                           
 18516 ;; *************** function _Rtcc_LockRtc *****************
 18517 ;; Defined at:
 18518 ;;		line 183 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18519 ;; Parameters:    Size  Location     Type
 18520 ;;		None
 18521 ;; Auto vars:     Size  Location     Type
 18522 ;;		None
 18523 ;; Return value:  Size  Location     Type
 18524 ;;                  1    wreg      void 
 18525 ;; Registers used:
 18526 ;;		None
 18527 ;; Tracked objects:
 18528 ;;		On entry : 0/0
 18529 ;;		On exit  : 0/0
 18530 ;;		Unchanged: 0/0
 18531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18536 ;;Total ram usage:        0 bytes
 18537 ;; Hardware stack levels used:    1
 18538 ;; Hardware stack levels required when called:    9
 18539 ;; This function calls:
 18540 ;;		Nothing
 18541 ;; This function is called by:
 18542 ;;		_Rtcm_MainTask
 18543 ;;		_Rtcm_SetRtccDate
 18544 ;;		_Rtcm_SetRtccAlarm
 18545 ;; This function uses a non-reentrant model
 18546 ;;
 18547                           
 18548                           	psect	text88
 18549  0042EA                     __ptext88:
 18550                           	opt stack 0
 18551  0042EA                     _Rtcc_LockRtc:
 18552                           	opt stack 17
 18553                           
 18554                           ; BSR set to: 0
 18555                           ;incstack = 0
 18556  0042EA  010F               	movlb	15	;# 
 18557  0042EC  0E55               	movlw	85	;# 
 18558  0042EE  6EA7               	movwf	4007,c	;# 
 18559  0042F0  0EAA               	movlw	170	;# 
 18560  0042F2  6EA7               	movwf	4007,c	;# 
 18561                           
 18562                           ;rtcc_drv.c: 192: RTCCFGbits.RTCWREN = 0u;
 18563  0042F4  010F               	movlb	15	; () banked
 18564  0042F6  9B3F               	bcf	63,5,b	;volatile
 18565                           
 18566                           ; BSR set to: 15
 18567  0042F8  0012               	return		;funcret
 18568  0042FA                     __end_of_Rtcc_LockRtc:
 18569                           	opt stack 0
 18570                           tosu	equ	0xFFF
 18571                           tosh	equ	0xFFE
 18572                           tosl	equ	0xFFD
 18573                           pclath	equ	0xFFA
 18574                           tblptru	equ	0xFF8
 18575                           tblptrh	equ	0xFF7
 18576                           tblptrl	equ	0xFF6
 18577                           tablat	equ	0xFF5
 18578                           prodh	equ	0xFF4
 18579                           prodl	equ	0xFF3
 18580                           intcon	equ	0xFF2
 18581                           intcon2	equ	0xFF1
 18582                           intcon3	equ	0xFF0
 18583                           indf0	equ	0xFEF
 18584                           postinc0	equ	0xFEE
 18585                           plusw0	equ	0xFEB
 18586                           fsr0h	equ	0xFEA
 18587                           fsr0l	equ	0xFE9
 18588                           wreg	equ	0xFE8
 18589                           indf1	equ	0xFE7
 18590                           postinc1	equ	0xFE6
 18591                           postdec1	equ	0xFE5
 18592                           fsr1h	equ	0xFE2
 18593                           fsr1l	equ	0xFE1
 18594                           indf2	equ	0xFDF
 18595                           postinc2	equ	0xFDE
 18596                           postdec2	equ	0xFDD
 18597                           plusw2	equ	0xFDB
 18598                           fsr2h	equ	0xFDA
 18599                           fsr2l	equ	0xFD9
 18600                           status	equ	0xFD8
 18601                           
 18602 ;; *************** function _Rtcm_GetRtccDate *****************
 18603 ;; Defined at:
 18604 ;;		line 202 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/rtcm.c"
 18605 ;; Parameters:    Size  Location     Type
 18606 ;;		None
 18607 ;; Auto vars:     Size  Location     Type
 18608 ;;  LocalDate       8   34[BANK0 ] struct _RtccDateType
 18609 ;; Return value:  Size  Location     Type
 18610 ;;                  8   25[BANK0 ] struct _RtccDateType
 18611 ;; Registers used:
 18612 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18613 ;; Tracked objects:
 18614 ;;		On entry : 0/0
 18615 ;;		On exit  : 0/0
 18616 ;;		Unchanged: 0/0
 18617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18618 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18619 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18620 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18621 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18622 ;;Total ram usage:       17 bytes
 18623 ;; Hardware stack levels used:    1
 18624 ;; Hardware stack levels required when called:   10
 18625 ;; This function calls:
 18626 ;;		_Rtcc_GetRtccValue
 18627 ;; This function is called by:
 18628 ;;		_Rtcm_MainTask
 18629 ;; This function uses a non-reentrant model
 18630 ;;
 18631                           
 18632                           	psect	text89
 18633  003644                     __ptext89:
 18634                           	opt stack 0
 18635  003644                     _Rtcm_GetRtccDate:
 18636                           	opt stack 17
 18637                           
 18638                           ;rtcm.c: 204: RtccDateType LocalDate;
 18639                           ;rtcm.c: 207: LocalDate.Year = 2000 + Rtcc_GetRtccValue(ValPtrYear);
 18640                           
 18641                           ; BSR set to: 15
 18642                           ;incstack = 0
 18643  003644  0E00               	movlw	0
 18644  003646  EC6C  F018         	call	_Rtcc_GetRtccValue
 18645  00364A  0100               	movlb	0	; () banked
 18646  00364C  6F81               	movwf	??_Rtcm_GetRtccDate& (0+255),b
 18647  00364E  0ED0               	movlw	208
 18648  003650  2581               	addwf	??_Rtcm_GetRtccDate& (0+255),w,b
 18649  003652  6F82               	movwf	Rtcm_GetRtccDate@LocalDate& (0+255),b
 18650  003654  6B83               	clrf	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),b
 18651  003656  0E07               	movlw	7
 18652  003658  2383               	addwfc	(Rtcm_GetRtccDate@LocalDate+1)& (0+255),f,b
 18653                           
 18654                           ;rtcm.c: 208: LocalDate.Month = Rtcc_GetRtccValue(ValPtrMonth);
 18655  00365A  0E01               	movlw	1
 18656  00365C  EC6C  F018         	call	_Rtcc_GetRtccValue
 18657  003660  0100               	movlb	0	; () banked
 18658  003662  6F84               	movwf	(Rtcm_GetRtccDate@LocalDate+2)& (0+255),b
 18659                           
 18660                           ;rtcm.c: 209: LocalDate.Day = Rtcc_GetRtccValue(ValPtrDay);
 18661  003664  0E02               	movlw	2
 18662  003666  EC6C  F018         	call	_Rtcc_GetRtccValue
 18663  00366A  0100               	movlb	0	; () banked
 18664  00366C  6F85               	movwf	(Rtcm_GetRtccDate@LocalDate+3)& (0+255),b
 18665                           
 18666                           ;rtcm.c: 210: LocalDate.Weekday = Rtcc_GetRtccValue(ValPtrWeekday);
 18667  00366E  0E03               	movlw	3
 18668  003670  EC6C  F018         	call	_Rtcc_GetRtccValue
 18669  003674  0100               	movlb	0	; () banked
 18670  003676  6F86               	movwf	(Rtcm_GetRtccDate@LocalDate+4)& (0+255),b
 18671                           
 18672                           ;rtcm.c: 211: LocalDate.Hour = Rtcc_GetRtccValue(ValPtrHours);
 18673  003678  0E04               	movlw	4
 18674  00367A  EC6C  F018         	call	_Rtcc_GetRtccValue
 18675  00367E  0100               	movlb	0	; () banked
 18676  003680  6F87               	movwf	(Rtcm_GetRtccDate@LocalDate+5)& (0+255),b
 18677                           
 18678                           ;rtcm.c: 212: LocalDate.Minute = Rtcc_GetRtccValue(ValPtrMinutes);
 18679  003682  0E05               	movlw	5
 18680  003684  EC6C  F018         	call	_Rtcc_GetRtccValue
 18681  003688  0100               	movlb	0	; () banked
 18682  00368A  6F88               	movwf	(Rtcm_GetRtccDate@LocalDate+6)& (0+255),b
 18683                           
 18684                           ;rtcm.c: 213: LocalDate.Second = Rtcc_GetRtccValue(ValPtrSeconds);
 18685  00368C  0E06               	movlw	6
 18686  00368E  EC6C  F018         	call	_Rtcc_GetRtccValue
 18687  003692  0100               	movlb	0	; () banked
 18688  003694  6F89               	movwf	(Rtcm_GetRtccDate@LocalDate+7)& (0+255),b
 18689                           
 18690                           ; BSR set to: 0
 18691                           ;rtcm.c: 216: return LocalDate;
 18692  003696  EE20  F082         	lfsr	2,Rtcm_GetRtccDate@LocalDate
 18693  00369A  EE00  F079         	lfsr	0,?_Rtcm_GetRtccDate
 18694  00369E  0E07               	movlw	7
 18695  0036A0                     u6901:
 18696  0036A0  CFDB FFEB          	movff	plusw2,plusw0
 18697  0036A4  06E8               	decf	wreg,f,c
 18698  0036A6  E2FC               	bc	u6901
 18699  0036A8  0012               	return	
 18700  0036AA                     __end_of_Rtcm_GetRtccDate:
 18701                           	opt stack 0
 18702                           tosu	equ	0xFFF
 18703                           tosh	equ	0xFFE
 18704                           tosl	equ	0xFFD
 18705                           pclath	equ	0xFFA
 18706                           tblptru	equ	0xFF8
 18707                           tblptrh	equ	0xFF7
 18708                           tblptrl	equ	0xFF6
 18709                           tablat	equ	0xFF5
 18710                           prodh	equ	0xFF4
 18711                           prodl	equ	0xFF3
 18712                           intcon	equ	0xFF2
 18713                           intcon2	equ	0xFF1
 18714                           intcon3	equ	0xFF0
 18715                           indf0	equ	0xFEF
 18716                           postinc0	equ	0xFEE
 18717                           plusw0	equ	0xFEB
 18718                           fsr0h	equ	0xFEA
 18719                           fsr0l	equ	0xFE9
 18720                           wreg	equ	0xFE8
 18721                           indf1	equ	0xFE7
 18722                           postinc1	equ	0xFE6
 18723                           postdec1	equ	0xFE5
 18724                           fsr1h	equ	0xFE2
 18725                           fsr1l	equ	0xFE1
 18726                           indf2	equ	0xFDF
 18727                           postinc2	equ	0xFDE
 18728                           postdec2	equ	0xFDD
 18729                           plusw2	equ	0xFDB
 18730                           fsr2h	equ	0xFDA
 18731                           fsr2l	equ	0xFD9
 18732                           status	equ	0xFD8
 18733                           
 18734 ;; *************** function _Rtcc_GetRtccValue *****************
 18735 ;; Defined at:
 18736 ;;		line 205 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18737 ;; Parameters:    Size  Location     Type
 18738 ;;  RtccPtrVal      1    wreg     enum E7757
 18739 ;; Auto vars:     Size  Location     Type
 18740 ;;  RtccPtrVal      1   22[BANK0 ] enum E7757
 18741 ;;  RegValue        1   24[BANK0 ] unsigned char 
 18742 ;;  RetValue        1   23[BANK0 ] unsigned char 
 18743 ;; Return value:  Size  Location     Type
 18744 ;;                  1    wreg      unsigned char 
 18745 ;; Registers used:
 18746 ;;		wreg, status,2, status,0, prodl, prodh
 18747 ;; Tracked objects:
 18748 ;;		On entry : 0/0
 18749 ;;		On exit  : 0/0
 18750 ;;		Unchanged: 0/0
 18751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18753 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18754 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18755 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18756 ;;Total ram usage:        4 bytes
 18757 ;; Hardware stack levels used:    1
 18758 ;; Hardware stack levels required when called:    9
 18759 ;; This function calls:
 18760 ;;		Nothing
 18761 ;; This function is called by:
 18762 ;;		_Rtcm_GetRtccDate
 18763 ;; This function uses a non-reentrant model
 18764 ;;
 18765                           
 18766                           	psect	text90
 18767  0030D8                     __ptext90:
 18768                           	opt stack 0
 18769  0030D8                     _Rtcc_GetRtccValue:
 18770                           	opt stack 17
 18771                           
 18772                           ; BSR set to: 0
 18773                           ;incstack = 0
 18774                           ;Rtcc_GetRtccValue@RtccPtrVal stored from wreg
 18775  0030D8  0100               	movlb	0	; () banked
 18776  0030DA  6F76               	movwf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),b
 18777                           
 18778                           ;rtcc_drv.c: 208: UINT8 RegValue;
 18779                           ;rtcc_drv.c: 209: UINT8 RetValue;
 18780                           ;rtcc_drv.c: 211: switch (RtccPtrVal)
 18781  0030DC  D02D               	goto	l344
 18782  0030DE                     l345:
 18783                           
 18784                           ; BSR set to: 0
 18785                           ;rtcc_drv.c: 215: RTCCFGbits.RTCPTR1 = 1U;
 18786  0030DE  010F               	movlb	15	; () banked
 18787  0030E0  833F               	bsf	63,1,b	;volatile
 18788  0030E2                     
 18789                           ;rtcc_drv.c: 216: RTCCFGbits.RTCPTR0 = 1U;
 18790  0030E2  813F               	bsf	63,0,b	;volatile
 18791  0030E4  D01C               	goto	L20
 18792  0030E6                     l347:
 18793                           
 18794                           ; BSR set to: 0
 18795                           ;rtcc_drv.c: 225: RTCCFGbits.RTCPTR1 = 1U;
 18796  0030E6  010F               	movlb	15	; () banked
 18797  0030E8  833F               	bsf	63,1,b	;volatile
 18798  0030EA  D01E               	goto	L21
 18799  0030EC                     l348:
 18800                           
 18801                           ; BSR set to: 0
 18802                           ;rtcc_drv.c: 235: RTCCFGbits.RTCPTR1 = 1U;
 18803  0030EC  010F               	movlb	15	; () banked
 18804  0030EE  833F               	bsf	63,1,b	;volatile
 18805  0030F0  D021               	goto	L24
 18806  0030F2                     l7315:
 18807                           
 18808                           ; BSR set to: 15
 18809                           ;rtcc_drv.c: 240: RetValue = (((RegValue & 0xF0) >> 4U) * 10) + (RegValue & 0x0F);
 18810  0030F2  C078  F075         	movff	Rtcc_GetRtccValue@RegValue,??_Rtcc_GetRtccValue
 18811  0030F6  0E0F               	movlw	15
 18812  0030F8  0100               	movlb	0	; () banked
 18813  0030FA  1775               	andwf	??_Rtcc_GetRtccValue& (0+255),f,b
 18814  0030FC  3978               	swapf	Rtcc_GetRtccValue@RegValue& (0+255),w,b
 18815  0030FE  0B0F               	andlw	15
 18816  003100  0B0F               	andlw	15
 18817  003102  0D0A               	mullw	10
 18818  003104  50F3               	movf	prodl,w,c
 18819  003106  2575               	addwf	??_Rtcc_GetRtccValue& (0+255),w,b
 18820  003108  6F77               	movwf	Rtcc_GetRtccValue@RetValue& (0+255),b
 18821                           
 18822                           ;rtcc_drv.c: 241: break;
 18823  00310A  D02D               	goto	l346
 18824  00310C                     l349:
 18825                           
 18826                           ; BSR set to: 0
 18827                           ;rtcc_drv.c: 245: RTCCFGbits.RTCPTR1 = 0U;
 18828  00310C  010F               	movlb	15	; () banked
 18829  00310E  933F               	bcf	63,1,b	;volatile
 18830                           
 18831                           ;rtcc_drv.c: 246: RTCCFGbits.RTCPTR0 = 1U;
 18832  003110  813F               	bsf	63,0,b	;volatile
 18833                           
 18834                           ;rtcc_drv.c: 248: RetValue = RTCVALH;
 18835  003112  CF99 F077          	movff	3993,Rtcc_GetRtccValue@RetValue	;volatile
 18836                           
 18837                           ;rtcc_drv.c: 249: break;
 18838  003116  D027               	goto	l346
 18839  003118                     l350:
 18840                           
 18841                           ; BSR set to: 0
 18842                           ;rtcc_drv.c: 253: RTCCFGbits.RTCPTR1 = 0U;
 18843  003118  010F               	movlb	15	; () banked
 18844  00311A  933F               	bcf	63,1,b	;volatile
 18845  00311C  D7E2               	goto	L22
 18846  00311E                     L20:
 18847                           
 18848                           ;rtcc_drv.c: 256: RegValue = RTCVALL;
 18849  00311E  CF98 F078          	movff	3992,Rtcc_GetRtccValue@RegValue	;volatile
 18850  003122  D7E7               	goto	l7315
 18851  003124                     l351:
 18852                           
 18853                           ; BSR set to: 0
 18854                           ;rtcc_drv.c: 263: RTCCFGbits.RTCPTR1 = 0U;
 18855  003124  010F               	movlb	15	; () banked
 18856  003126  933F               	bcf	63,1,b	;volatile
 18857  003128                     L21:
 18858                           
 18859                           ;rtcc_drv.c: 264: RTCCFGbits.RTCPTR0 = 0U;
 18860  003128  913F               	bcf	63,0,b	;volatile
 18861                           
 18862                           ;rtcc_drv.c: 266: RegValue = RTCVALH;
 18863  00312A  CF99 F078          	movff	3993,Rtcc_GetRtccValue@RegValue	;volatile
 18864  00312E  D7E1               	goto	l7315
 18865  003130                     l352:
 18866                           
 18867                           ; BSR set to: 0
 18868                           ;rtcc_drv.c: 273: RTCCFGbits.RTCPTR1 = 0U;
 18869  003130  010F               	movlb	15	; () banked
 18870  003132  933F               	bcf	63,1,b	;volatile
 18871  003134                     L24:
 18872                           
 18873                           ;rtcc_drv.c: 274: RTCCFGbits.RTCPTR0 = 0U;
 18874  003134  913F               	bcf	63,0,b	;volatile
 18875  003136  D7F3               	goto	L20
 18876  003138                     l344:
 18877                           
 18878                           ; BSR set to: 0
 18879  003138  0100               	movlb	0	; () banked
 18880  00313A  5176               	movf	Rtcc_GetRtccValue@RtccPtrVal& (0+255),w,b
 18881                           
 18882                           ; Switch size 1, requested type "space"
 18883                           ; Number of cases is 7, Range of values is 0 to 6
 18884                           ; switch strategies available:
 18885                           ; Name         Instructions Cycles
 18886                           ; simple_byte           22    12 (average)
 18887                           ;	Chosen strategy is simple_byte
 18888  00313C  0A00               	xorlw	0	; case 0
 18889  00313E  B4D8               	btfsc	status,2,c
 18890  003140  D7CE               	goto	l345
 18891  003142  0A01               	xorlw	1	; case 1
 18892  003144  B4D8               	btfsc	status,2,c
 18893  003146  D7CF               	goto	l347
 18894  003148  0A03               	xorlw	3	; case 2
 18895  00314A  B4D8               	btfsc	status,2,c
 18896  00314C  D7CF               	goto	l348
 18897  00314E  0A01               	xorlw	1	; case 3
 18898  003150  B4D8               	btfsc	status,2,c
 18899  003152  D7DC               	goto	l349
 18900  003154  0A07               	xorlw	7	; case 4
 18901  003156  B4D8               	btfsc	status,2,c
 18902  003158  D7DF               	goto	l350
 18903  00315A  0A01               	xorlw	1	; case 5
 18904  00315C  B4D8               	btfsc	status,2,c
 18905  00315E  D7E2               	goto	l351
 18906  003160  0A03               	xorlw	3	; case 6
 18907  003162  B4D8               	btfsc	status,2,c
 18908  003164  D7E5               	goto	l352
 18909  003166                     l346:
 18910                           
 18911                           ;rtcc_drv.c: 286: return RetValue;
 18912                           
 18913                           ; BSR set to: 0
 18914  003166  0100               	movlb	0	; () banked
 18915  003168  5177               	movf	Rtcc_GetRtccValue@RetValue& (0+255),w,b
 18916  00316A  0012               	return	
 18917  00316C                     __end_of_Rtcc_GetRtccValue:
 18918                           	opt stack 0
 18919                           tosu	equ	0xFFF
 18920                           tosh	equ	0xFFE
 18921                           tosl	equ	0xFFD
 18922                           pclath	equ	0xFFA
 18923                           tblptru	equ	0xFF8
 18924                           tblptrh	equ	0xFF7
 18925                           tblptrl	equ	0xFF6
 18926                           tablat	equ	0xFF5
 18927                           prodh	equ	0xFF4
 18928                           prodl	equ	0xFF3
 18929                           intcon	equ	0xFF2
 18930                           intcon2	equ	0xFF1
 18931                           intcon3	equ	0xFF0
 18932                           indf0	equ	0xFEF
 18933                           postinc0	equ	0xFEE
 18934                           plusw0	equ	0xFEB
 18935                           fsr0h	equ	0xFEA
 18936                           fsr0l	equ	0xFE9
 18937                           wreg	equ	0xFE8
 18938                           indf1	equ	0xFE7
 18939                           postinc1	equ	0xFE6
 18940                           postdec1	equ	0xFE5
 18941                           fsr1h	equ	0xFE2
 18942                           fsr1l	equ	0xFE1
 18943                           indf2	equ	0xFDF
 18944                           postinc2	equ	0xFDE
 18945                           postdec2	equ	0xFDD
 18946                           plusw2	equ	0xFDB
 18947                           fsr2h	equ	0xFDA
 18948                           fsr2l	equ	0xFD9
 18949                           status	equ	0xFD8
 18950                           
 18951 ;; *************** function _Rtcc_SetRtcStatus *****************
 18952 ;; Defined at:
 18953 ;;		line 149 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 18954 ;; Parameters:    Size  Location     Type
 18955 ;;  Status          1    wreg     unsigned char 
 18956 ;; Auto vars:     Size  Location     Type
 18957 ;;  Status          1   21[BANK0 ] unsigned char 
 18958 ;; Return value:  Size  Location     Type
 18959 ;;                  1    wreg      void 
 18960 ;; Registers used:
 18961 ;;		wreg
 18962 ;; Tracked objects:
 18963 ;;		On entry : 0/0
 18964 ;;		On exit  : 0/0
 18965 ;;		Unchanged: 0/0
 18966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 18967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18968 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18970 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 18971 ;;Total ram usage:        1 bytes
 18972 ;; Hardware stack levels used:    1
 18973 ;; Hardware stack levels required when called:    9
 18974 ;; This function calls:
 18975 ;;		Nothing
 18976 ;; This function is called by:
 18977 ;;		_Rtcm_MainTask
 18978 ;; This function uses a non-reentrant model
 18979 ;;
 18980                           
 18981                           	psect	text91
 18982  004260                     __ptext91:
 18983                           	opt stack 0
 18984  004260                     _Rtcc_SetRtcStatus:
 18985                           	opt stack 18
 18986                           
 18987                           ; BSR set to: 0
 18988                           ;incstack = 0
 18989                           ;Rtcc_SetRtcStatus@Status stored from wreg
 18990  004260  0100               	movlb	0	; () banked
 18991  004262  6F75               	movwf	Rtcc_SetRtcStatus@Status& (0+255),b
 18992                           
 18993                           ;rtcc_drv.c: 152: RTCCFGbits.RTCEN = Status;
 18994  004264  0100               	movlb	0	; () banked
 18995  004266  B175               	btfsc	Rtcc_SetRtcStatus@Status& (0+255),0,b
 18996  004268  D003               	bra	u6395
 18997  00426A  010F               	movlb	15	; () banked
 18998  00426C  9F3F               	bcf	63,7,b	;volatile
 18999  00426E  D002               	bra	u6396
 19000  004270                     u6395:
 19001  004270  010F               	movlb	15	; () banked
 19002  004272  8F3F               	bsf	63,7,b	;volatile
 19003  004274                     u6396:
 19004                           
 19005                           ; BSR set to: 15
 19006  004274  0012               	return		;funcret
 19007  004276                     __end_of_Rtcc_SetRtcStatus:
 19008                           	opt stack 0
 19009                           tosu	equ	0xFFF
 19010                           tosh	equ	0xFFE
 19011                           tosl	equ	0xFFD
 19012                           pclath	equ	0xFFA
 19013                           tblptru	equ	0xFF8
 19014                           tblptrh	equ	0xFF7
 19015                           tblptrl	equ	0xFF6
 19016                           tablat	equ	0xFF5
 19017                           prodh	equ	0xFF4
 19018                           prodl	equ	0xFF3
 19019                           intcon	equ	0xFF2
 19020                           intcon2	equ	0xFF1
 19021                           intcon3	equ	0xFF0
 19022                           indf0	equ	0xFEF
 19023                           postinc0	equ	0xFEE
 19024                           plusw0	equ	0xFEB
 19025                           fsr0h	equ	0xFEA
 19026                           fsr0l	equ	0xFE9
 19027                           wreg	equ	0xFE8
 19028                           indf1	equ	0xFE7
 19029                           postinc1	equ	0xFE6
 19030                           postdec1	equ	0xFE5
 19031                           fsr1h	equ	0xFE2
 19032                           fsr1l	equ	0xFE1
 19033                           indf2	equ	0xFDF
 19034                           postinc2	equ	0xFDE
 19035                           postdec2	equ	0xFDD
 19036                           plusw2	equ	0xFDB
 19037                           fsr2h	equ	0xFDA
 19038                           fsr2l	equ	0xFD9
 19039                           status	equ	0xFD8
 19040                           
 19041 ;; *************** function _Rtcc_RtcConfig *****************
 19042 ;; Defined at:
 19043 ;;		line 106 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19044 ;; Parameters:    Size  Location     Type
 19045 ;;  RtcConfig       2   22[BANK0 ] PTR struct _RtccConfigTy
 19046 ;;		 -> RtcConfig(4), 
 19047 ;; Auto vars:     Size  Location     Type
 19048 ;;		None
 19049 ;; Return value:  Size  Location     Type
 19050 ;;                  1    wreg      void 
 19051 ;; Registers used:
 19052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19053 ;; Tracked objects:
 19054 ;;		On entry : 0/0
 19055 ;;		On exit  : 0/0
 19056 ;;		Unchanged: 0/0
 19057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19058 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19060 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19061 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19062 ;;Total ram usage:        3 bytes
 19063 ;; Hardware stack levels used:    1
 19064 ;; Hardware stack levels required when called:   10
 19065 ;; This function calls:
 19066 ;;		_RtccIrqInit
 19067 ;; This function is called by:
 19068 ;;		_Rtcm_MainTask
 19069 ;; This function uses a non-reentrant model
 19070 ;;
 19071                           
 19072                           	psect	text92
 19073  002D42                     __ptext92:
 19074                           	opt stack 0
 19075  002D42                     _Rtcc_RtcConfig:
 19076                           	opt stack 17
 19077                           
 19078                           ;rtcc_drv.c: 109: RTCCFGbits.RTCOE = RtcConfig->RtcOutPinEnable;
 19079                           
 19080                           ; BSR set to: 15
 19081                           ;incstack = 0
 19082  002D42  C076  FFD9         	movff	Rtcc_RtcConfig@RtcConfig,fsr2l
 19083  002D46  C077  FFDA         	movff	Rtcc_RtcConfig@RtcConfig+1,fsr2h
 19084  002D4A  50DF               	movf	indf2,w,c
 19085  002D4C  0100               	movlb	0	; () banked
 19086  002D4E  6F78               	movwf	??_Rtcc_RtcConfig& (0+255),b
 19087  002D50  4778               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19088  002D52  4778               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19089  002D54  010F               	movlb	15	; () banked
 19090  002D56  513F               	movf	63,w,b	;volatile
 19091  002D58  0100               	movlb	0	; () banked
 19092  002D5A  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19093  002D5C  0BFB               	andlw	-5
 19094  002D5E  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19095  002D60  010F               	movlb	15	; () banked
 19096  002D62  6F3F               	movwf	63,b	;volatile
 19097                           
 19098                           ;rtcc_drv.c: 111: PADCFG1bits.RTSECSEL0 = ((RtcConfig->RtcOutputSelectBit) & 0x01);
 19099  002D64  0100               	movlb	0	; () banked
 19100  002D66  EE20 F001          	lfsr	2,1
 19101  002D6A  5176               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 19102  002D6C  26D9               	addwf	fsr2l,f,c
 19103  002D6E  5177               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 19104  002D70  22DA               	addwfc	fsr2h,f,c
 19105  002D72  50DF               	movf	indf2,w,c
 19106  002D74  6F78               	movwf	??_Rtcc_RtcConfig& (0+255),b
 19107  002D76  0E01               	movlw	1
 19108  002D78  1778               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 19109  002D7A  4778               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19110  002D7C  010F               	movlb	15	; () banked
 19111  002D7E  513C               	movf	60,w,b	;volatile
 19112  002D80  0100               	movlb	0	; () banked
 19113  002D82  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19114  002D84  0BFD               	andlw	-3
 19115  002D86  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19116  002D88  010F               	movlb	15	; () banked
 19117  002D8A  6F3C               	movwf	60,b	;volatile
 19118                           
 19119                           ;rtcc_drv.c: 112: PADCFG1bits.RTSECSEL1 = ((RtcConfig->RtcOutputSelectBit >> 1) & 0x01);
 19120  002D8C  0100               	movlb	0	; () banked
 19121  002D8E  EE20 F001          	lfsr	2,1
 19122  002D92  5176               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 19123  002D94  26D9               	addwf	fsr2l,f,c
 19124  002D96  5177               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 19125  002D98  22DA               	addwfc	fsr2h,f,c
 19126  002D9A  50DF               	movf	indf2,w,c
 19127  002D9C  6F78               	movwf	??_Rtcc_RtcConfig& (0+255),b
 19128  002D9E  90D8               	bcf	status,0,c
 19129  002DA0  3378               	rrcf	??_Rtcc_RtcConfig& (0+255),f,b
 19130  002DA2  0E01               	movlw	1
 19131  002DA4  1778               	andwf	??_Rtcc_RtcConfig& (0+255),f,b
 19132  002DA6  4778               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19133  002DA8  4778               	rlncf	??_Rtcc_RtcConfig& (0+255),f,b
 19134  002DAA  010F               	movlb	15	; () banked
 19135  002DAC  513C               	movf	60,w,b	;volatile
 19136  002DAE  0100               	movlb	0	; () banked
 19137  002DB0  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19138  002DB2  0BFB               	andlw	-5
 19139  002DB4  1978               	xorwf	??_Rtcc_RtcConfig& (0+255),w,b
 19140  002DB6  010F               	movlb	15	; () banked
 19141  002DB8  6F3C               	movwf	60,b	;volatile
 19142                           
 19143                           ;rtcc_drv.c: 114: if (RtcConfig->IntEnable == EnableInt)
 19144  002DBA  0100               	movlb	0	; () banked
 19145  002DBC  EE20 F002          	lfsr	2,2
 19146  002DC0  5176               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 19147  002DC2  26D9               	addwf	fsr2l,f,c
 19148  002DC4  5177               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 19149  002DC6  22DA               	addwfc	fsr2h,f,c
 19150  002DC8  04DE               	decf	postinc2,w,c
 19151  002DCA  A4D8               	btfss	status,2,c
 19152  002DCC  0012               	return	
 19153                           
 19154                           ; BSR set to: 0
 19155                           ;rtcc_drv.c: 115: {
 19156                           ;rtcc_drv.c: 117: RtccIrqInit(RtcConfig->IntPriority);
 19157  002DCE  EE20 F003          	lfsr	2,3
 19158  002DD2  5176               	movf	Rtcc_RtcConfig@RtcConfig& (0+255),w,b
 19159  002DD4  26D9               	addwf	fsr2l,f,c
 19160  002DD6  5177               	movf	(Rtcc_RtcConfig@RtcConfig+1)& (0+255),w,b
 19161  002DD8  22DA               	addwfc	fsr2h,f,c
 19162  002DDA  50DF               	movf	indf2,w,c
 19163  002DDC  EC3B  F021         	call	_RtccIrqInit
 19164  002DE0  0012               	return	
 19165  002DE2                     __end_of_Rtcc_RtcConfig:
 19166                           	opt stack 0
 19167                           tosu	equ	0xFFF
 19168                           tosh	equ	0xFFE
 19169                           tosl	equ	0xFFD
 19170                           pclath	equ	0xFFA
 19171                           tblptru	equ	0xFF8
 19172                           tblptrh	equ	0xFF7
 19173                           tblptrl	equ	0xFF6
 19174                           tablat	equ	0xFF5
 19175                           prodh	equ	0xFF4
 19176                           prodl	equ	0xFF3
 19177                           intcon	equ	0xFF2
 19178                           intcon2	equ	0xFF1
 19179                           intcon3	equ	0xFF0
 19180                           indf0	equ	0xFEF
 19181                           postinc0	equ	0xFEE
 19182                           plusw0	equ	0xFEB
 19183                           fsr0h	equ	0xFEA
 19184                           fsr0l	equ	0xFE9
 19185                           wreg	equ	0xFE8
 19186                           indf1	equ	0xFE7
 19187                           postinc1	equ	0xFE6
 19188                           postdec1	equ	0xFE5
 19189                           fsr1h	equ	0xFE2
 19190                           fsr1l	equ	0xFE1
 19191                           indf2	equ	0xFDF
 19192                           postinc2	equ	0xFDE
 19193                           postdec2	equ	0xFDD
 19194                           plusw2	equ	0xFDB
 19195                           fsr2h	equ	0xFDA
 19196                           fsr2l	equ	0xFD9
 19197                           status	equ	0xFD8
 19198                           
 19199 ;; *************** function _RtccIrqInit *****************
 19200 ;; Defined at:
 19201 ;;		line 84 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19202 ;; Parameters:    Size  Location     Type
 19203 ;;  Priority        1    wreg     enum E7716
 19204 ;; Auto vars:     Size  Location     Type
 19205 ;;  Priority        1   21[BANK0 ] enum E7716
 19206 ;; Return value:  Size  Location     Type
 19207 ;;                  1    wreg      void 
 19208 ;; Registers used:
 19209 ;;		wreg
 19210 ;; Tracked objects:
 19211 ;;		On entry : 0/0
 19212 ;;		On exit  : 0/0
 19213 ;;		Unchanged: 0/0
 19214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19216 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19218 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19219 ;;Total ram usage:        1 bytes
 19220 ;; Hardware stack levels used:    1
 19221 ;; Hardware stack levels required when called:    9
 19222 ;; This function calls:
 19223 ;;		Nothing
 19224 ;; This function is called by:
 19225 ;;		_Rtcc_RtcConfig
 19226 ;; This function uses a non-reentrant model
 19227 ;;
 19228                           
 19229                           	psect	text93
 19230  004276                     __ptext93:
 19231                           	opt stack 0
 19232  004276                     _RtccIrqInit:
 19233                           	opt stack 17
 19234                           
 19235                           ;incstack = 0
 19236                           ;RtccIrqInit@Priority stored from wreg
 19237  004276  0100               	movlb	0	; () banked
 19238  004278  6F75               	movwf	RtccIrqInit@Priority& (0+255),b
 19239                           
 19240                           ;rtcc_drv.c: 87: PIR3bits.RTCCIF = 0u;
 19241  00427A  90A4               	bcf	4004,0,c	;volatile
 19242                           
 19243                           ;rtcc_drv.c: 89: IPR3bits.RTCCIP = Priority;
 19244  00427C  0100               	movlb	0	; () banked
 19245  00427E  B175               	btfsc	RtccIrqInit@Priority& (0+255),0,b
 19246  004280  D002               	bra	u5715
 19247  004282  90A5               	bcf	4005,0,c	;volatile
 19248  004284  D001               	bra	u5716
 19249  004286                     u5715:
 19250  004286  80A5               	bsf	4005,0,c	;volatile
 19251  004288                     u5716:
 19252                           
 19253                           ;rtcc_drv.c: 91: PIE3bits.RTCCIE = 1u;
 19254  004288  80A3               	bsf	4003,0,c	;volatile
 19255  00428A  0012               	return		;funcret
 19256  00428C                     __end_of_RtccIrqInit:
 19257                           	opt stack 0
 19258                           tosu	equ	0xFFF
 19259                           tosh	equ	0xFFE
 19260                           tosl	equ	0xFFD
 19261                           pclath	equ	0xFFA
 19262                           tblptru	equ	0xFF8
 19263                           tblptrh	equ	0xFF7
 19264                           tblptrl	equ	0xFF6
 19265                           tablat	equ	0xFF5
 19266                           prodh	equ	0xFF4
 19267                           prodl	equ	0xFF3
 19268                           intcon	equ	0xFF2
 19269                           intcon2	equ	0xFF1
 19270                           intcon3	equ	0xFF0
 19271                           indf0	equ	0xFEF
 19272                           postinc0	equ	0xFEE
 19273                           plusw0	equ	0xFEB
 19274                           fsr0h	equ	0xFEA
 19275                           fsr0l	equ	0xFE9
 19276                           wreg	equ	0xFE8
 19277                           indf1	equ	0xFE7
 19278                           postinc1	equ	0xFE6
 19279                           postdec1	equ	0xFE5
 19280                           fsr1h	equ	0xFE2
 19281                           fsr1l	equ	0xFE1
 19282                           indf2	equ	0xFDF
 19283                           postinc2	equ	0xFDE
 19284                           postdec2	equ	0xFDD
 19285                           plusw2	equ	0xFDB
 19286                           fsr2h	equ	0xFDA
 19287                           fsr2l	equ	0xFD9
 19288                           status	equ	0xFD8
 19289                           
 19290 ;; *************** function _Rtcc_AlarmConfig *****************
 19291 ;; Defined at:
 19292 ;;		line 129 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 19293 ;; Parameters:    Size  Location     Type
 19294 ;;  AlarmConfig     2   21[BANK0 ] PTR struct _RtccAlarmCon
 19295 ;;		 -> AlCfg(4), 
 19296 ;; Auto vars:     Size  Location     Type
 19297 ;;		None
 19298 ;; Return value:  Size  Location     Type
 19299 ;;                  1    wreg      void 
 19300 ;; Registers used:
 19301 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19302 ;; Tracked objects:
 19303 ;;		On entry : 0/0
 19304 ;;		On exit  : 0/0
 19305 ;;		Unchanged: 0/0
 19306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19307 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19309 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19310 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19311 ;;Total ram usage:        3 bytes
 19312 ;; Hardware stack levels used:    1
 19313 ;; Hardware stack levels required when called:    9
 19314 ;; This function calls:
 19315 ;;		Nothing
 19316 ;; This function is called by:
 19317 ;;		_Rtcm_MainTask
 19318 ;; This function uses a non-reentrant model
 19319 ;;
 19320                           
 19321                           	psect	text94
 19322  00356E                     __ptext94:
 19323                           	opt stack 0
 19324  00356E                     _Rtcc_AlarmConfig:
 19325                           	opt stack 18
 19326                           
 19327                           ;rtcc_drv.c: 132: ALRMCFGbits.ALRMEN = AlarmConfig->RtcAlarmEnable;
 19328                           
 19329                           ;incstack = 0
 19330  00356E  C075  FFD9         	movff	Rtcc_AlarmConfig@AlarmConfig,fsr2l
 19331  003572  C076  FFDA         	movff	Rtcc_AlarmConfig@AlarmConfig+1,fsr2h
 19332  003576  50DF               	movf	indf2,w,c
 19333  003578  0100               	movlb	0	; () banked
 19334  00357A  6F77               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 19335  00357C  3377               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 19336  00357E  3377               	rrcf	??_Rtcc_AlarmConfig& (0+255),f,b
 19337  003580  5091               	movf	3985,w,c	;volatile
 19338  003582  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19339  003584  0B7F               	andlw	-129
 19340  003586  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19341  003588  6E91               	movwf	3985,c	;volatile
 19342                           
 19343                           ;rtcc_drv.c: 134: ALRMCFGbits.CHIME = AlarmConfig->RtcChimeEnable;
 19344  00358A  EE20 F001          	lfsr	2,1
 19345  00358E  5175               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 19346  003590  26D9               	addwf	fsr2l,f,c
 19347  003592  5176               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 19348  003594  22DA               	addwfc	fsr2h,f,c
 19349  003596  50DF               	movf	indf2,w,c
 19350  003598  6F77               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 19351  00359A  3B77               	swapf	??_Rtcc_AlarmConfig& (0+255),f,b
 19352  00359C  4777               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 19353  00359E  4777               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 19354  0035A0  5091               	movf	3985,w,c	;volatile
 19355  0035A2  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19356  0035A4  0BBF               	andlw	-65
 19357  0035A6  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19358  0035A8  6E91               	movwf	3985,c	;volatile
 19359                           
 19360                           ;rtcc_drv.c: 136: ALRMCFGbits.AMASK = AlarmConfig->AlarmMask;
 19361  0035AA  EE20 F002          	lfsr	2,2
 19362  0035AE  5175               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 19363  0035B0  26D9               	addwf	fsr2l,f,c
 19364  0035B2  5176               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 19365  0035B4  22DA               	addwfc	fsr2h,f,c
 19366  0035B6  50DF               	movf	indf2,w,c
 19367  0035B8  6F77               	movwf	??_Rtcc_AlarmConfig& (0+255),b
 19368  0035BA  4777               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 19369  0035BC  4777               	rlncf	??_Rtcc_AlarmConfig& (0+255),f,b
 19370  0035BE  5091               	movf	3985,w,c	;volatile
 19371  0035C0  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19372  0035C2  0BC3               	andlw	-61
 19373  0035C4  1977               	xorwf	??_Rtcc_AlarmConfig& (0+255),w,b
 19374  0035C6  6E91               	movwf	3985,c	;volatile
 19375                           
 19376                           ;rtcc_drv.c: 138: ALRMRPTbits.ARPT = AlarmConfig->AlarmRepeat;
 19377  0035C8  EE20 F003          	lfsr	2,3
 19378  0035CC  5175               	movf	Rtcc_AlarmConfig@AlarmConfig& (0+255),w,b
 19379  0035CE  26D9               	addwf	fsr2l,f,c
 19380  0035D0  5176               	movf	(Rtcc_AlarmConfig@AlarmConfig+1)& (0+255),w,b
 19381  0035D2  22DA               	addwfc	fsr2h,f,c
 19382  0035D4  50DF               	movf	indf2,w,c
 19383  0035D6  6E90               	movwf	3984,c	;volatile
 19384                           
 19385                           ; BSR set to: 0
 19386  0035D8  0012               	return		;funcret
 19387  0035DA                     __end_of_Rtcc_AlarmConfig:
 19388                           	opt stack 0
 19389                           tosu	equ	0xFFF
 19390                           tosh	equ	0xFFE
 19391                           tosl	equ	0xFFD
 19392                           pclath	equ	0xFFA
 19393                           tblptru	equ	0xFF8
 19394                           tblptrh	equ	0xFF7
 19395                           tblptrl	equ	0xFF6
 19396                           tablat	equ	0xFF5
 19397                           prodh	equ	0xFF4
 19398                           prodl	equ	0xFF3
 19399                           intcon	equ	0xFF2
 19400                           intcon2	equ	0xFF1
 19401                           intcon3	equ	0xFF0
 19402                           indf0	equ	0xFEF
 19403                           postinc0	equ	0xFEE
 19404                           plusw0	equ	0xFEB
 19405                           fsr0h	equ	0xFEA
 19406                           fsr0l	equ	0xFE9
 19407                           wreg	equ	0xFE8
 19408                           indf1	equ	0xFE7
 19409                           postinc1	equ	0xFE6
 19410                           postdec1	equ	0xFE5
 19411                           fsr1h	equ	0xFE2
 19412                           fsr1l	equ	0xFE1
 19413                           indf2	equ	0xFDF
 19414                           postinc2	equ	0xFDE
 19415                           postdec2	equ	0xFDD
 19416                           plusw2	equ	0xFDB
 19417                           fsr2h	equ	0xFDA
 19418                           fsr2l	equ	0xFD9
 19419                           status	equ	0xFD8
 19420                           
 19421 ;; *************** function _Led_SetLedBlinkTime *****************
 19422 ;; Defined at:
 19423 ;;		line 371 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 19424 ;; Parameters:    Size  Location     Type
 19425 ;;  Led             1    wreg     unsigned char 
 19426 ;;  OnTimeMs        2   21[BANK0 ] unsigned short 
 19427 ;;  OffTimeMs       2   23[BANK0 ] unsigned short 
 19428 ;; Auto vars:     Size  Location     Type
 19429 ;;  Led             1   25[BANK0 ] unsigned char 
 19430 ;; Return value:  Size  Location     Type
 19431 ;;                  1    wreg      void 
 19432 ;; Registers used:
 19433 ;;		wreg, status,2, status,0
 19434 ;; Tracked objects:
 19435 ;;		On entry : 0/0
 19436 ;;		On exit  : 0/0
 19437 ;;		Unchanged: 0/0
 19438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19442 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19443 ;;Total ram usage:        5 bytes
 19444 ;; Hardware stack levels used:    1
 19445 ;; Hardware stack levels required when called:    9
 19446 ;; This function calls:
 19447 ;;		Nothing
 19448 ;; This function is called by:
 19449 ;;		_MyApp_Task
 19450 ;; This function uses a non-reentrant model
 19451 ;;
 19452                           
 19453                           	psect	text95
 19454  00397A                     __ptext95:
 19455                           	opt stack 0
 19456  00397A                     _Led_SetLedBlinkTime:
 19457                           	opt stack 18
 19458                           
 19459                           ; BSR set to: 0
 19460                           ;incstack = 0
 19461                           ;Led_SetLedBlinkTime@Led stored from wreg
 19462  00397A  0100               	movlb	0	; () banked
 19463  00397C  6F79               	movwf	Led_SetLedBlinkTime@Led& (0+255),b
 19464                           
 19465                           ;led.c: 374: switch (Led)
 19466  00397E  D01B               	goto	l1585
 19467  003980                     l1586:
 19468                           
 19469                           ; BSR set to: 0
 19470                           ;led.c: 377: Led1Blink.LedOnTimeMs = OnTimeMs;
 19471  003980  C075  F3B7         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led1Blink+4
 19472  003984  C076  F3B8         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led1Blink+5
 19473                           
 19474                           ;led.c: 378: Led1Blink.LedOffTimeMs = OffTimeMs;
 19475  003988  C077  F3B9         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led1Blink+6
 19476  00398C  C078  F3BA         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led1Blink+7
 19477                           
 19478                           ;led.c: 379: break;
 19479  003990  0012               	return	
 19480  003992                     l1588:
 19481                           
 19482                           ; BSR set to: 0
 19483                           ;led.c: 382: Led2Blink.LedOnTimeMs = OnTimeMs;
 19484  003992  C075  F210         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 19485  003996  C076  F211         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 19486                           
 19487                           ;led.c: 383: Led2Blink.LedOffTimeMs = OffTimeMs;
 19488  00399A  C077  F212         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 19489  00399E  C078  F213         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 19490                           
 19491                           ;led.c: 384: break;
 19492  0039A2  0012               	return	
 19493  0039A4                     l1589:
 19494                           
 19495                           ; BSR set to: 0
 19496                           ;led.c: 387: Led2Blink.LedOnTimeMs = OnTimeMs;
 19497  0039A4  C075  F210         	movff	Led_SetLedBlinkTime@OnTimeMs,_Led2Blink+4
 19498  0039A8  C076  F211         	movff	Led_SetLedBlinkTime@OnTimeMs+1,_Led2Blink+5
 19499                           
 19500                           ;led.c: 388: Led2Blink.LedOffTimeMs = OffTimeMs;
 19501  0039AC  C077  F212         	movff	Led_SetLedBlinkTime@OffTimeMs,_Led2Blink+6
 19502  0039B0  C078  F213         	movff	Led_SetLedBlinkTime@OffTimeMs+1,_Led2Blink+7
 19503                           
 19504                           ; BSR set to: 0
 19505                           ;led.c: 393: }
 19506                           
 19507                           ; BSR set to: 0
 19508                           ;led.c: 392: break;
 19509                           
 19510                           ;led.c: 391: default:
 19511                           
 19512                           ;led.c: 389: break;
 19513  0039B4  0012               	return	
 19514  0039B6                     l1585:
 19515                           
 19516                           ; BSR set to: 0
 19517  0039B6  0100               	movlb	0	; () banked
 19518  0039B8  5179               	movf	Led_SetLedBlinkTime@Led& (0+255),w,b
 19519                           
 19520                           ; Switch size 1, requested type "space"
 19521                           ; Number of cases is 3, Range of values is 1 to 3
 19522                           ; switch strategies available:
 19523                           ; Name         Instructions Cycles
 19524                           ; simple_byte           10     6 (average)
 19525                           ;	Chosen strategy is simple_byte
 19526  0039BA  0A01               	xorlw	1	; case 1
 19527  0039BC  B4D8               	btfsc	status,2,c
 19528  0039BE  D7E0               	goto	l1586
 19529  0039C0  0A03               	xorlw	3	; case 2
 19530  0039C2  B4D8               	btfsc	status,2,c
 19531  0039C4  D7E6               	goto	l1588
 19532  0039C6  0A01               	xorlw	1	; case 3
 19533  0039C8  A4D8               	btfss	status,2,c
 19534  0039CA  0012               	return	
 19535  0039CC  D7EB               	goto	l1589
 19536  0039CE                     __end_of_Led_SetLedBlinkTime:
 19537                           	opt stack 0
 19538                           tosu	equ	0xFFF
 19539                           tosh	equ	0xFFE
 19540                           tosl	equ	0xFFD
 19541                           pclath	equ	0xFFA
 19542                           tblptru	equ	0xFF8
 19543                           tblptrh	equ	0xFF7
 19544                           tblptrl	equ	0xFF6
 19545                           tablat	equ	0xFF5
 19546                           prodh	equ	0xFF4
 19547                           prodl	equ	0xFF3
 19548                           intcon	equ	0xFF2
 19549                           intcon2	equ	0xFF1
 19550                           intcon3	equ	0xFF0
 19551                           indf0	equ	0xFEF
 19552                           postinc0	equ	0xFEE
 19553                           plusw0	equ	0xFEB
 19554                           fsr0h	equ	0xFEA
 19555                           fsr0l	equ	0xFE9
 19556                           wreg	equ	0xFE8
 19557                           indf1	equ	0xFE7
 19558                           postinc1	equ	0xFE6
 19559                           postdec1	equ	0xFE5
 19560                           fsr1h	equ	0xFE2
 19561                           fsr1l	equ	0xFE1
 19562                           indf2	equ	0xFDF
 19563                           postinc2	equ	0xFDE
 19564                           postdec2	equ	0xFDD
 19565                           plusw2	equ	0xFDB
 19566                           fsr2h	equ	0xFDA
 19567                           fsr2l	equ	0xFD9
 19568                           status	equ	0xFD8
 19569                           
 19570 ;; *************** function _LedStateMachine *****************
 19571 ;; Defined at:
 19572 ;;		line 235 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 19573 ;; Parameters:    Size  Location     Type
 19574 ;;  Led             1    wreg     unsigned char 
 19575 ;;  LedSts          2   33[BANK0 ] PTR enum E8811
 19576 ;;		 -> Led3Sts(1), Led2Sts(1), Led1Sts(1), 
 19577 ;;  LedOut          2   35[BANK0 ] PTR unsigned char 
 19578 ;;		 -> Led3OutSts(1), Led2OutSts(1), Led1OutSts(1), 
 19579 ;;  LedBlink        2   37[BANK0 ] PTR struct _LedBlinkType
 19580 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 19581 ;;  LedPulse        2   39[BANK0 ] PTR struct _LedPulseType
 19582 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 19583 ;; Auto vars:     Size  Location     Type
 19584 ;;  Led             1   43[BANK0 ] unsigned char 
 19585 ;;  LedOutSts       1   42[BANK0 ] unsigned char 
 19586 ;; Return value:  Size  Location     Type
 19587 ;;                  1    wreg      unsigned char 
 19588 ;; Registers used:
 19589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 19590 ;; Tracked objects:
 19591 ;;		On entry : 0/0
 19592 ;;		On exit  : 0/0
 19593 ;;		Unchanged: 0/0
 19594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19595 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19596 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19597 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19598 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19599 ;;Total ram usage:       11 bytes
 19600 ;; Hardware stack levels used:    1
 19601 ;; Hardware stack levels required when called:   11
 19602 ;; This function calls:
 19603 ;;		_LedBlinkStateMachine
 19604 ;;		_LedPulseStateMachine
 19605 ;;		_Led_SetLedStatus
 19606 ;; This function is called by:
 19607 ;;		_Led_MainTask
 19608 ;; This function uses a non-reentrant model
 19609 ;;
 19610                           
 19611                           	psect	text96
 19612  002C9A                     __ptext96:
 19613                           	opt stack 0
 19614  002C9A                     _LedStateMachine:
 19615                           	opt stack 16
 19616                           
 19617                           ; BSR set to: 0
 19618                           ;incstack = 0
 19619                           ;LedStateMachine@Led stored from wreg
 19620  002C9A  0100               	movlb	0	; () banked
 19621  002C9C  6F8B               	movwf	LedStateMachine@Led& (0+255),b
 19622                           
 19623                           ;led.c: 238: UINT8 LedOutSts = 0u;
 19624  002C9E  0E00               	movlw	0
 19625  002CA0  0100               	movlb	0	; () banked
 19626  002CA2  6F8A               	movwf	LedStateMachine@LedOutSts& (0+255),b
 19627                           
 19628                           ;led.c: 241: switch (*LedSts)
 19629  002CA4  D037               	goto	l1555
 19630  002CA6                     
 19631                           ; BSR set to: 0
 19632                           ;led.c: 245: LedOutSts = ((UINT8)(0));
 19633                           
 19634                           ; BSR set to: 0
 19635  002CA6  0E00               	movlw	0
 19636  002CA8  6F8A               	movwf	LedStateMachine@LedOutSts& (0+255),b
 19637                           
 19638                           ; BSR set to: 0
 19639                           ;led.c: 246: *LedOut = ((UINT8)(0));
 19640  002CAA  C083  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 19641  002CAE  C084  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 19642  002CB2  0E00               	movlw	0
 19643  002CB4  D007               	goto	L25
 19644  002CB6                     
 19645                           ; BSR set to: 0
 19646                           ;led.c: 251: LedOutSts = ((UINT8)(1));
 19647                           
 19648                           ; BSR set to: 0
 19649  002CB6  0E01               	movlw	1
 19650  002CB8  6F8A               	movwf	LedStateMachine@LedOutSts& (0+255),b
 19651                           
 19652                           ; BSR set to: 0
 19653                           ;led.c: 252: *LedOut = ((UINT8)(1));
 19654  002CBA  C083  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 19655  002CBE  C084  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 19656  002CC2  0E01               	movlw	1
 19657  002CC4                     L25:
 19658  002CC4  6EDF               	movwf	indf2,c
 19659                           
 19660                           ;led.c: 253: break;
 19661  002CC6  D03A               	goto	l1557
 19662  002CC8                     
 19663                           ; BSR set to: 0
 19664                           ;led.c: 257: if (*LedOut == 1)
 19665                           
 19666                           ; BSR set to: 0
 19667  002CC8  C083  FFD9         	movff	LedStateMachine@LedOut,fsr2l
 19668  002CCC  C084  FFDA         	movff	LedStateMachine@LedOut+1,fsr2h
 19669  002CD0  04DE               	decf	postinc2,w,c
 19670  002CD2  A4D8               	btfss	status,2,c
 19671  002CD4  D006               	goto	l1560
 19672                           
 19673                           ; BSR set to: 0
 19674                           ;led.c: 258: {
 19675                           ;led.c: 260: Led_SetLedStatus(Led,LED_STS_OFF);
 19676  002CD6  0E00               	movlw	0
 19677  002CD8  6F75               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 19678  002CDA  518B               	movf	LedStateMachine@Led& (0+255),w,b
 19679  002CDC  EC75  F01F         	call	_Led_SetLedStatus
 19680                           
 19681                           ;led.c: 261: }
 19682  002CE0  D02D               	goto	l1557
 19683  002CE2                     l1560:
 19684                           
 19685                           ;led.c: 262: else
 19686                           ;led.c: 263: {
 19687                           ;led.c: 265: Led_SetLedStatus(Led,LED_STS_ON);
 19688  002CE2  0E01               	movlw	1
 19689  002CE4  0100               	movlb	0	; () banked
 19690  002CE6  6F75               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 19691  002CE8  518B               	movf	LedStateMachine@Led& (0+255),w,b
 19692  002CEA  EC75  F01F         	call	_Led_SetLedStatus
 19693                           
 19694                           ;led.c: 266: }
 19695                           ;led.c: 267: break;
 19696  002CEE  D026               	goto	l1557
 19697  002CF0                     
 19698                           ;led.c: 271: LedOutSts = LedBlinkStateMachine(LedBlink);
 19699  002CF0  C085  F07C         	movff	LedStateMachine@LedBlink,LedBlinkStateMachine@LedBlink
 19700  002CF4  C086  F07D         	movff	LedStateMachine@LedBlink+1,LedBlinkStateMachine@LedBlink+1
 19701  002CF8  EC9A  F00A         	call	_LedBlinkStateMachine	;wreg free
 19702  002CFC  D008               	goto	L26
 19703  002CFE                     
 19704                           ; BSR set to: 0
 19705                           ;led.c: 276: LedOutSts = LedPulseStateMachine(LedPulse, Led);
 19706                           
 19707                           ; BSR set to: 0
 19708  002CFE  C087  F07C         	movff	LedStateMachine@LedPulse,LedPulseStateMachine@LedPulse
 19709  002D02  C088  F07D         	movff	LedStateMachine@LedPulse+1,LedPulseStateMachine@LedPulse+1
 19710  002D06  C08B  F07E         	movff	LedStateMachine@Led,LedPulseStateMachine@Led
 19711  002D0A  EC7D  F00E         	call	_LedPulseStateMachine	;wreg free
 19712  002D0E                     L26:
 19713  002D0E  0100               	movlb	0	; () banked
 19714  002D10  6F8A               	movwf	LedStateMachine@LedOutSts& (0+255),b
 19715                           
 19716                           ; BSR set to: 0
 19717                           ;led.c: 281: }
 19718                           
 19719                           ; BSR set to: 0
 19720                           ;led.c: 280: break;
 19721                           
 19722                           ;led.c: 279: default:
 19723                           
 19724                           ;led.c: 277: break;
 19725  002D12  D014               	goto	l1557
 19726  002D14                     l1555:
 19727                           
 19728                           ; BSR set to: 0
 19729                           
 19730                           ; BSR set to: 0
 19731  002D14  C081  FFD9         	movff	LedStateMachine@LedSts,fsr2l
 19732  002D18  C082  FFDA         	movff	LedStateMachine@LedSts+1,fsr2h
 19733  002D1C  50DF               	movf	indf2,w,c
 19734                           
 19735                           ; Switch size 1, requested type "space"
 19736                           ; Number of cases is 5, Range of values is 0 to 4
 19737                           ; switch strategies available:
 19738                           ; Name         Instructions Cycles
 19739                           ; simple_byte           16     9 (average)
 19740                           ;	Chosen strategy is simple_byte
 19741  002D1E  0A00               	xorlw	0	; case 0
 19742  002D20  B4D8               	btfsc	status,2,c
 19743  002D22  D7C1               	goto	l1556
 19744  002D24  0A01               	xorlw	1	; case 1
 19745  002D26  B4D8               	btfsc	status,2,c
 19746  002D28  D7C6               	goto	l1558
 19747  002D2A  0A03               	xorlw	3	; case 2
 19748  002D2C  B4D8               	btfsc	status,2,c
 19749  002D2E  D7CC               	goto	l1559
 19750  002D30  0A01               	xorlw	1	; case 3
 19751  002D32  B4D8               	btfsc	status,2,c
 19752  002D34  D7DD               	goto	l1562
 19753  002D36  0A07               	xorlw	7	; case 4
 19754  002D38  B4D8               	btfsc	status,2,c
 19755  002D3A  D7E1               	goto	l1563
 19756  002D3C                     l1557:
 19757                           
 19758                           ;led.c: 283: return LedOutSts;
 19759                           
 19760                           ; BSR set to: 0
 19761  002D3C  0100               	movlb	0	; () banked
 19762  002D3E  518A               	movf	LedStateMachine@LedOutSts& (0+255),w,b
 19763  002D40  0012               	return	
 19764  002D42                     __end_of_LedStateMachine:
 19765                           	opt stack 0
 19766                           tosu	equ	0xFFF
 19767                           tosh	equ	0xFFE
 19768                           tosl	equ	0xFFD
 19769                           pclath	equ	0xFFA
 19770                           tblptru	equ	0xFF8
 19771                           tblptrh	equ	0xFF7
 19772                           tblptrl	equ	0xFF6
 19773                           tablat	equ	0xFF5
 19774                           prodh	equ	0xFF4
 19775                           prodl	equ	0xFF3
 19776                           intcon	equ	0xFF2
 19777                           intcon2	equ	0xFF1
 19778                           intcon3	equ	0xFF0
 19779                           indf0	equ	0xFEF
 19780                           postinc0	equ	0xFEE
 19781                           plusw0	equ	0xFEB
 19782                           fsr0h	equ	0xFEA
 19783                           fsr0l	equ	0xFE9
 19784                           wreg	equ	0xFE8
 19785                           indf1	equ	0xFE7
 19786                           postinc1	equ	0xFE6
 19787                           postdec1	equ	0xFE5
 19788                           fsr1h	equ	0xFE2
 19789                           fsr1l	equ	0xFE1
 19790                           indf2	equ	0xFDF
 19791                           postinc2	equ	0xFDE
 19792                           postdec2	equ	0xFDD
 19793                           plusw2	equ	0xFDB
 19794                           fsr2h	equ	0xFDA
 19795                           fsr2l	equ	0xFD9
 19796                           status	equ	0xFD8
 19797                           
 19798 ;; *************** function _LedPulseStateMachine *****************
 19799 ;; Defined at:
 19800 ;;		line 182 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 19801 ;; Parameters:    Size  Location     Type
 19802 ;;  LedPulse        2   28[BANK0 ] PTR struct _LedPulseType
 19803 ;;		 -> Led3Pulse(6), Led2Pulse(6), Led1Pulse(6), 
 19804 ;;  Led             1   30[BANK0 ] unsigned char 
 19805 ;; Auto vars:     Size  Location     Type
 19806 ;;		None
 19807 ;; Return value:  Size  Location     Type
 19808 ;;                  1    wreg      unsigned char 
 19809 ;; Registers used:
 19810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19811 ;; Tracked objects:
 19812 ;;		On entry : 0/0
 19813 ;;		On exit  : 0/0
 19814 ;;		Unchanged: 0/0
 19815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 19816 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19818 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19819 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 19820 ;;Total ram usage:        5 bytes
 19821 ;; Hardware stack levels used:    1
 19822 ;; Hardware stack levels required when called:   10
 19823 ;; This function calls:
 19824 ;;		_Led_SetLedStatus
 19825 ;;		___lwdiv
 19826 ;; This function is called by:
 19827 ;;		_LedStateMachine
 19828 ;; This function uses a non-reentrant model
 19829 ;;
 19830                           
 19831                           	psect	text97
 19832  001CFA                     __ptext97:
 19833                           	opt stack 0
 19834  001CFA                     _LedPulseStateMachine:
 19835                           	opt stack 16
 19836                           
 19837                           ;led.c: 185: switch (LedPulse->LedPulseState)
 19838                           
 19839                           ; BSR set to: 0
 19840                           ;incstack = 0
 19841  001CFA  D05C               	goto	l1545
 19842  001CFC                     
 19843                           ;led.c: 189: LedPulse->LedOutState = ((UINT8)(1));
 19844  001CFC  0100               	movlb	0	; () banked
 19845  001CFE  EE20 F001          	lfsr	2,1
 19846  001D02  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 19847  001D04  26D9               	addwf	fsr2l,f,c
 19848  001D06  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 19849  001D08  22DA               	addwfc	fsr2h,f,c
 19850  001D0A  0E01               	movlw	1
 19851  001D0C  6EDF               	movwf	indf2,c
 19852                           
 19853                           ; BSR set to: 0
 19854                           ;led.c: 191: LedPulse->LedPulseState = LedPulseDelay;
 19855  001D0E  C07C  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 19856  001D12  C07D  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 19857  001D16  0E01               	movlw	1
 19858  001D18  D036               	goto	L27
 19859  001D1A                     
 19860                           ;led.c: 196: LedPulse->LedPulseCounter++;
 19861                           
 19862                           ; BSR set to: 0
 19863  001D1A  0100               	movlb	0	; () banked
 19864  001D1C  EE20 F002          	lfsr	2,2
 19865  001D20  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 19866  001D22  26D9               	addwf	fsr2l,f,c
 19867  001D24  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 19868  001D26  22DA               	addwfc	fsr2h,f,c
 19869  001D28  2ADE               	incf	postinc2,f,c
 19870  001D2A  0E00               	movlw	0
 19871  001D2C  22DD               	addwfc	postdec2,f,c
 19872                           
 19873                           ; BSR set to: 0
 19874                           ;led.c: 198: if (LedPulse->LedPulseCounter >= (LedPulse->LedPulseTimeMs/((UINT16)(50))))
 19875  001D2E  EE20 F004          	lfsr	2,4
 19876  001D32  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 19877  001D34  26D9               	addwf	fsr2l,f,c
 19878  001D36  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 19879  001D38  22DA               	addwfc	fsr2h,f,c
 19880  001D3A  CFDE F075          	movff	postinc2,___lwdiv@dividend
 19881  001D3E  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
 19882  001D42  0E00               	movlw	0
 19883  001D44  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
 19884  001D46  0E32               	movlw	50
 19885  001D48  6F77               	movwf	___lwdiv@divisor& (0+255),b
 19886  001D4A  ECE7  F01C         	call	___lwdiv	;wreg free
 19887  001D4E  0100               	movlb	0	; () banked
 19888  001D50  EE20 F002          	lfsr	2,2
 19889  001D54  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 19890  001D56  26D9               	addwf	fsr2l,f,c
 19891  001D58  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 19892  001D5A  22DA               	addwfc	fsr2h,f,c
 19893  001D5C  5175               	movf	?___lwdiv& (0+255),w,b
 19894  001D5E  5CDE               	subwf	postinc2,w,c
 19895  001D60  5176               	movf	(?___lwdiv+1)& (0+255),w,b
 19896  001D62  58DE               	subwfb	postinc2,w,c
 19897  001D64  A0D8               	btfss	status,0,c
 19898  001D66  D034               	goto	l1547
 19899                           
 19900                           ; BSR set to: 0
 19901                           ;led.c: 199: {
 19902                           ;led.c: 201: LedPulse->LedPulseCounter = 0;
 19903  001D68  EE20 F002          	lfsr	2,2
 19904  001D6C  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 19905  001D6E  26D9               	addwf	fsr2l,f,c
 19906  001D70  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 19907  001D72  22DA               	addwfc	fsr2h,f,c
 19908  001D74  0E00               	movlw	0
 19909  001D76  6EDE               	movwf	postinc2,c
 19910  001D78  0E00               	movlw	0
 19911  001D7A  6EDD               	movwf	postdec2,c
 19912                           
 19913                           ; BSR set to: 0
 19914                           ;led.c: 203: LedPulse->LedPulseState = LedPulseOff;
 19915  001D7C  C07C  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 19916  001D80  C07D  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 19917  001D84  0E02               	movlw	2
 19918  001D86                     L27:
 19919  001D86  6EDF               	movwf	indf2,c
 19920                           
 19921                           ; BSR set to: 0
 19922                           ;led.c: 204: }
 19923                           ;led.c: 205: break;
 19924  001D88  D023               	goto	l1547
 19925  001D8A                     
 19926                           ;led.c: 209: LedPulse->LedOutState = ((UINT8)(0));
 19927                           
 19928                           ; BSR set to: 0
 19929  001D8A  0100               	movlb	0	; () banked
 19930  001D8C  EE20 F001          	lfsr	2,1
 19931  001D90  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 19932  001D92  26D9               	addwf	fsr2l,f,c
 19933  001D94  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 19934  001D96  22DA               	addwfc	fsr2h,f,c
 19935  001D98  0E00               	movlw	0
 19936  001D9A  6EDF               	movwf	indf2,c
 19937                           
 19938                           ; BSR set to: 0
 19939                           ;led.c: 211: LedPulse->LedPulseState = LedPulseOn;
 19940  001D9C  C07C  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 19941  001DA0  C07D  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 19942  001DA4  0E00               	movlw	0
 19943  001DA6  6EDF               	movwf	indf2,c
 19944                           
 19945                           ; BSR set to: 0
 19946                           ;led.c: 213: Led_SetLedStatus(Led,LED_STS_OFF);
 19947  001DA8  0E00               	movlw	0
 19948  001DAA  6F75               	movwf	Led_SetLedStatus@LedSts& (0+255),b
 19949  001DAC  517E               	movf	LedPulseStateMachine@Led& (0+255),w,b
 19950  001DAE  EC75  F01F         	call	_Led_SetLedStatus
 19951                           
 19952                           ;led.c: 218: }
 19953                           
 19954                           ;led.c: 217: break;
 19955                           
 19956                           ;led.c: 216: default:
 19957                           
 19958                           ;led.c: 214: break;
 19959  001DB2  D00E               	goto	l1547
 19960  001DB4                     l1545:
 19961  001DB4  C07C  FFD9         	movff	LedPulseStateMachine@LedPulse,fsr2l
 19962  001DB8  C07D  FFDA         	movff	LedPulseStateMachine@LedPulse+1,fsr2h
 19963  001DBC  50DF               	movf	indf2,w,c
 19964                           
 19965                           ; Switch size 1, requested type "space"
 19966                           ; Number of cases is 3, Range of values is 0 to 2
 19967                           ; switch strategies available:
 19968                           ; Name         Instructions Cycles
 19969                           ; simple_byte           10     6 (average)
 19970                           ;	Chosen strategy is simple_byte
 19971  001DBE  0A00               	xorlw	0	; case 0
 19972  001DC0  B4D8               	btfsc	status,2,c
 19973  001DC2  D79C               	goto	l1546
 19974  001DC4  0A01               	xorlw	1	; case 1
 19975  001DC6  B4D8               	btfsc	status,2,c
 19976  001DC8  D7A8               	goto	l1548
 19977  001DCA  0A03               	xorlw	3	; case 2
 19978  001DCC  B4D8               	btfsc	status,2,c
 19979  001DCE  D7DD               	goto	l1550
 19980  001DD0                     l1547:
 19981                           
 19982                           ;led.c: 221: return (LedPulse->LedOutState);
 19983  001DD0  0100               	movlb	0	; () banked
 19984  001DD2  EE20 F001          	lfsr	2,1
 19985  001DD6  517C               	movf	LedPulseStateMachine@LedPulse& (0+255),w,b
 19986  001DD8  26D9               	addwf	fsr2l,f,c
 19987  001DDA  517D               	movf	(LedPulseStateMachine@LedPulse+1)& (0+255),w,b
 19988  001DDC  22DA               	addwfc	fsr2h,f,c
 19989  001DDE  50DF               	movf	indf2,w,c
 19990  001DE0  0012               	return	
 19991  001DE2                     __end_of_LedPulseStateMachine:
 19992                           	opt stack 0
 19993                           tosu	equ	0xFFF
 19994                           tosh	equ	0xFFE
 19995                           tosl	equ	0xFFD
 19996                           pclath	equ	0xFFA
 19997                           tblptru	equ	0xFF8
 19998                           tblptrh	equ	0xFF7
 19999                           tblptrl	equ	0xFF6
 20000                           tablat	equ	0xFF5
 20001                           prodh	equ	0xFF4
 20002                           prodl	equ	0xFF3
 20003                           intcon	equ	0xFF2
 20004                           intcon2	equ	0xFF1
 20005                           intcon3	equ	0xFF0
 20006                           indf0	equ	0xFEF
 20007                           postinc0	equ	0xFEE
 20008                           plusw0	equ	0xFEB
 20009                           fsr0h	equ	0xFEA
 20010                           fsr0l	equ	0xFE9
 20011                           wreg	equ	0xFE8
 20012                           indf1	equ	0xFE7
 20013                           postinc1	equ	0xFE6
 20014                           postdec1	equ	0xFE5
 20015                           fsr1h	equ	0xFE2
 20016                           fsr1l	equ	0xFE1
 20017                           indf2	equ	0xFDF
 20018                           postinc2	equ	0xFDE
 20019                           postdec2	equ	0xFDD
 20020                           plusw2	equ	0xFDB
 20021                           fsr2h	equ	0xFDA
 20022                           fsr2l	equ	0xFD9
 20023                           status	equ	0xFD8
 20024                           
 20025 ;; *************** function _Led_SetLedStatus *****************
 20026 ;; Defined at:
 20027 ;;		line 338 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 20028 ;; Parameters:    Size  Location     Type
 20029 ;;  Led             1    wreg     unsigned char 
 20030 ;;  LedSts          1   21[BANK0 ] enum E8811
 20031 ;; Auto vars:     Size  Location     Type
 20032 ;;  Led             1   22[BANK0 ] unsigned char 
 20033 ;; Return value:  Size  Location     Type
 20034 ;;                  1    wreg      void 
 20035 ;; Registers used:
 20036 ;;		wreg, status,2, status,0
 20037 ;; Tracked objects:
 20038 ;;		On entry : 0/0
 20039 ;;		On exit  : 0/0
 20040 ;;		Unchanged: 0/0
 20041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20042 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20045 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20046 ;;Total ram usage:        2 bytes
 20047 ;; Hardware stack levels used:    1
 20048 ;; Hardware stack levels required when called:    9
 20049 ;; This function calls:
 20050 ;;		Nothing
 20051 ;; This function is called by:
 20052 ;;		_LedPulseStateMachine
 20053 ;;		_LedStateMachine
 20054 ;;		_MyApp_Task
 20055 ;; This function uses a non-reentrant model
 20056 ;;
 20057                           
 20058                           	psect	text98
 20059  003EEA                     __ptext98:
 20060                           	opt stack 0
 20061  003EEA                     _Led_SetLedStatus:
 20062                           	opt stack 18
 20063                           
 20064                           ; BSR set to: 0
 20065                           ;incstack = 0
 20066                           ;Led_SetLedStatus@Led stored from wreg
 20067  003EEA  0100               	movlb	0	; () banked
 20068  003EEC  6F76               	movwf	Led_SetLedStatus@Led& (0+255),b
 20069                           
 20070                           ;led.c: 341: switch (Led)
 20071  003EEE  D009               	goto	l1576
 20072  003EF0                     l1577:
 20073                           
 20074                           ; BSR set to: 0
 20075                           ;led.c: 344: Led1Sts = LedSts;
 20076  003EF0  C075  F0DC         	movff	Led_SetLedStatus@LedSts,_Led1Sts
 20077                           
 20078                           ;led.c: 345: break;
 20079  003EF4  0012               	return	
 20080  003EF6                     l1579:
 20081                           
 20082                           ; BSR set to: 0
 20083                           ;led.c: 348: Led2Sts = LedSts;
 20084  003EF6  C075  F0DA         	movff	Led_SetLedStatus@LedSts,_Led2Sts
 20085                           
 20086                           ;led.c: 349: break;
 20087  003EFA  0012               	return	
 20088  003EFC                     l1580:
 20089                           
 20090                           ; BSR set to: 0
 20091                           ;led.c: 352: Led3Sts = LedSts;
 20092  003EFC  C075  F0D8         	movff	Led_SetLedStatus@LedSts,_Led3Sts
 20093                           
 20094                           ; BSR set to: 0
 20095                           ;led.c: 357: }
 20096                           
 20097                           ; BSR set to: 0
 20098                           ;led.c: 356: break;
 20099                           
 20100                           ;led.c: 355: default:
 20101                           
 20102                           ;led.c: 353: break;
 20103  003F00  0012               	return	
 20104  003F02                     l1576:
 20105                           
 20106                           ; BSR set to: 0
 20107  003F02  0100               	movlb	0	; () banked
 20108  003F04  5176               	movf	Led_SetLedStatus@Led& (0+255),w,b
 20109                           
 20110                           ; Switch size 1, requested type "space"
 20111                           ; Number of cases is 3, Range of values is 1 to 3
 20112                           ; switch strategies available:
 20113                           ; Name         Instructions Cycles
 20114                           ; simple_byte           10     6 (average)
 20115                           ;	Chosen strategy is simple_byte
 20116  003F06  0A01               	xorlw	1	; case 1
 20117  003F08  B4D8               	btfsc	status,2,c
 20118  003F0A  D7F2               	goto	l1577
 20119  003F0C  0A03               	xorlw	3	; case 2
 20120  003F0E  B4D8               	btfsc	status,2,c
 20121  003F10  D7F2               	goto	l1579
 20122  003F12  0A01               	xorlw	1	; case 3
 20123  003F14  A4D8               	btfss	status,2,c
 20124  003F16  0012               	return	
 20125  003F18  D7F1               	goto	l1580
 20126  003F1A                     __end_of_Led_SetLedStatus:
 20127                           	opt stack 0
 20128                           tosu	equ	0xFFF
 20129                           tosh	equ	0xFFE
 20130                           tosl	equ	0xFFD
 20131                           pclath	equ	0xFFA
 20132                           tblptru	equ	0xFF8
 20133                           tblptrh	equ	0xFF7
 20134                           tblptrl	equ	0xFF6
 20135                           tablat	equ	0xFF5
 20136                           prodh	equ	0xFF4
 20137                           prodl	equ	0xFF3
 20138                           intcon	equ	0xFF2
 20139                           intcon2	equ	0xFF1
 20140                           intcon3	equ	0xFF0
 20141                           indf0	equ	0xFEF
 20142                           postinc0	equ	0xFEE
 20143                           plusw0	equ	0xFEB
 20144                           fsr0h	equ	0xFEA
 20145                           fsr0l	equ	0xFE9
 20146                           wreg	equ	0xFE8
 20147                           indf1	equ	0xFE7
 20148                           postinc1	equ	0xFE6
 20149                           postdec1	equ	0xFE5
 20150                           fsr1h	equ	0xFE2
 20151                           fsr1l	equ	0xFE1
 20152                           indf2	equ	0xFDF
 20153                           postinc2	equ	0xFDE
 20154                           postdec2	equ	0xFDD
 20155                           plusw2	equ	0xFDB
 20156                           fsr2h	equ	0xFDA
 20157                           fsr2l	equ	0xFD9
 20158                           status	equ	0xFD8
 20159                           
 20160 ;; *************** function _LedBlinkStateMachine *****************
 20161 ;; Defined at:
 20162 ;;		line 125 in file "../../../MercuryFwk/Source/c/03_Sml/02_Ssl/led.c"
 20163 ;; Parameters:    Size  Location     Type
 20164 ;;  LedBlink        2   28[BANK0 ] PTR struct _LedBlinkType
 20165 ;;		 -> Led3Blink(9), Led2Blink(9), Led1Blink(9), 
 20166 ;; Auto vars:     Size  Location     Type
 20167 ;;		None
 20168 ;; Return value:  Size  Location     Type
 20169 ;;                  1    wreg      unsigned char 
 20170 ;; Registers used:
 20171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 20172 ;; Tracked objects:
 20173 ;;		On entry : 0/0
 20174 ;;		On exit  : 0/0
 20175 ;;		Unchanged: 0/0
 20176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20177 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20179 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20180 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20181 ;;Total ram usage:        4 bytes
 20182 ;; Hardware stack levels used:    1
 20183 ;; Hardware stack levels required when called:   10
 20184 ;; This function calls:
 20185 ;;		___lwdiv
 20186 ;; This function is called by:
 20187 ;;		_LedStateMachine
 20188 ;; This function uses a non-reentrant model
 20189 ;;
 20190                           
 20191                           	psect	text99
 20192  001534                     __ptext99:
 20193                           	opt stack 0
 20194  001534                     _LedBlinkStateMachine:
 20195                           	opt stack 16
 20196                           
 20197                           ;led.c: 128: switch (LedBlink->LedBlinkState)
 20198                           
 20199                           ; BSR set to: 0
 20200                           ;incstack = 0
 20201  001534  D08F               	goto	l1532
 20202  001536                     
 20203                           ;led.c: 132: LedBlink->LedOutState = LedBlink->LedInitStatus;
 20204  001536  0100               	movlb	0	; () banked
 20205  001538  EE20 F008          	lfsr	2,8
 20206  00153C  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20207  00153E  26D9               	addwf	fsr2l,f,c
 20208  001540  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20209  001542  22DA               	addwfc	fsr2h,f,c
 20210  001544  EE10 F001          	lfsr	1,1
 20211  001548  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20212  00154A  26E1               	addwf	fsr1l,f,c
 20213  00154C  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20214  00154E  22E2               	addwfc	fsr1h,f,c
 20215  001550  CFDF FFE7          	movff	indf2,indf1
 20216                           
 20217                           ; BSR set to: 0
 20218                           ;led.c: 134: LedBlink->LedBlinkState = LedBlinkRunning;
 20219  001554  C07C  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 20220  001558  C07D  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 20221  00155C  D040               	goto	L28
 20222  00155E                     
 20223                           ;led.c: 139: LedBlink->LedBlinkCounter++;
 20224                           
 20225                           ; BSR set to: 0
 20226  00155E  0100               	movlb	0	; () banked
 20227  001560  EE20 F002          	lfsr	2,2
 20228  001564  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20229  001566  26D9               	addwf	fsr2l,f,c
 20230  001568  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20231  00156A  22DA               	addwfc	fsr2h,f,c
 20232  00156C  2ADE               	incf	postinc2,f,c
 20233  00156E  0E00               	movlw	0
 20234  001570  22DD               	addwfc	postdec2,f,c
 20235                           
 20236                           ;led.c: 141: if (LedBlink->LedOutState == OffState)
 20237  001572  EE20 F001          	lfsr	2,1
 20238  001576  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20239  001578  26D9               	addwf	fsr2l,f,c
 20240  00157A  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20241  00157C  22DA               	addwfc	fsr2h,f,c
 20242  00157E  50DF               	movf	indf2,w,c
 20243  001580  A4D8               	btfss	status,2,c
 20244  001582  D02F               	goto	l1536
 20245                           
 20246                           ; BSR set to: 0
 20247                           ;led.c: 142: {
 20248                           ;led.c: 144: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOffTimeMs/((UINT16)(50))))
 20249  001584  EE20 F006          	lfsr	2,6
 20250  001588  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20251  00158A  26D9               	addwf	fsr2l,f,c
 20252  00158C  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20253  00158E  22DA               	addwfc	fsr2h,f,c
 20254  001590  CFDE F075          	movff	postinc2,___lwdiv@dividend
 20255  001594  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
 20256  001598  0E00               	movlw	0
 20257  00159A  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
 20258  00159C  0E32               	movlw	50
 20259  00159E  6F77               	movwf	___lwdiv@divisor& (0+255),b
 20260  0015A0  ECE7  F01C         	call	___lwdiv	;wreg free
 20261  0015A4  0100               	movlb	0	; () banked
 20262  0015A6  EE20 F002          	lfsr	2,2
 20263  0015AA  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20264  0015AC  26D9               	addwf	fsr2l,f,c
 20265  0015AE  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20266  0015B0  22DA               	addwfc	fsr2h,f,c
 20267  0015B2  5175               	movf	?___lwdiv& (0+255),w,b
 20268  0015B4  5CDE               	subwf	postinc2,w,c
 20269  0015B6  5176               	movf	(?___lwdiv+1)& (0+255),w,b
 20270  0015B8  58DE               	subwfb	postinc2,w,c
 20271  0015BA  A0D8               	btfss	status,0,c
 20272  0015BC  D056               	goto	l1534
 20273                           
 20274                           ; BSR set to: 0
 20275                           ;led.c: 145: {
 20276                           ;led.c: 147: LedBlink->LedBlinkCounter = 0;
 20277  0015BE  EE20 F002          	lfsr	2,2
 20278  0015C2  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20279  0015C4  26D9               	addwf	fsr2l,f,c
 20280  0015C6  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20281  0015C8  22DA               	addwfc	fsr2h,f,c
 20282  0015CA  0E00               	movlw	0
 20283  0015CC  6EDE               	movwf	postinc2,c
 20284  0015CE  0E00               	movlw	0
 20285  0015D0  6EDD               	movwf	postdec2,c
 20286                           
 20287                           ;led.c: 149: LedBlink->LedOutState = OnState;
 20288  0015D2  EE20 F001          	lfsr	2,1
 20289  0015D6  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20290  0015D8  26D9               	addwf	fsr2l,f,c
 20291  0015DA  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20292  0015DC  22DA               	addwfc	fsr2h,f,c
 20293  0015DE                     L28:
 20294  0015DE  0E01               	movlw	1
 20295  0015E0  D037               	goto	L29
 20296  0015E2                     l1536:
 20297                           
 20298                           ; BSR set to: 0
 20299                           ;led.c: 152: else if (LedBlink->LedOutState == OnState)
 20300                           
 20301                           ; BSR set to: 0
 20302  0015E2  EE20 F001          	lfsr	2,1
 20303  0015E6  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20304  0015E8  26D9               	addwf	fsr2l,f,c
 20305  0015EA  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20306  0015EC  22DA               	addwfc	fsr2h,f,c
 20307  0015EE  04DE               	decf	postinc2,w,c
 20308  0015F0  A4D8               	btfss	status,2,c
 20309  0015F2  D03B               	goto	l1534
 20310                           
 20311                           ; BSR set to: 0
 20312                           ;led.c: 153: {
 20313                           ;led.c: 155: if (LedBlink->LedBlinkCounter >= (LedBlink->LedOnTimeMs/((UINT16)(50))))
 20314  0015F4  EE20 F004          	lfsr	2,4
 20315  0015F8  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20316  0015FA  26D9               	addwf	fsr2l,f,c
 20317  0015FC  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20318  0015FE  22DA               	addwfc	fsr2h,f,c
 20319  001600  CFDE F075          	movff	postinc2,___lwdiv@dividend
 20320  001604  CFDD F076          	movff	postdec2,___lwdiv@dividend+1
 20321  001608  0E00               	movlw	0
 20322  00160A  6F78               	movwf	(___lwdiv@divisor+1)& (0+255),b
 20323  00160C  0E32               	movlw	50
 20324  00160E  6F77               	movwf	___lwdiv@divisor& (0+255),b
 20325  001610  ECE7  F01C         	call	___lwdiv	;wreg free
 20326  001614  0100               	movlb	0	; () banked
 20327  001616  EE20 F002          	lfsr	2,2
 20328  00161A  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20329  00161C  26D9               	addwf	fsr2l,f,c
 20330  00161E  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20331  001620  22DA               	addwfc	fsr2h,f,c
 20332  001622  5175               	movf	?___lwdiv& (0+255),w,b
 20333  001624  5CDE               	subwf	postinc2,w,c
 20334  001626  5176               	movf	(?___lwdiv+1)& (0+255),w,b
 20335  001628  58DE               	subwfb	postinc2,w,c
 20336  00162A  A0D8               	btfss	status,0,c
 20337  00162C  D01E               	goto	l1534
 20338                           
 20339                           ; BSR set to: 0
 20340                           ;led.c: 156: {
 20341                           ;led.c: 158: LedBlink->LedBlinkCounter = 0;
 20342  00162E  EE20 F002          	lfsr	2,2
 20343  001632  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20344  001634  26D9               	addwf	fsr2l,f,c
 20345  001636  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20346  001638  22DA               	addwfc	fsr2h,f,c
 20347  00163A  0E00               	movlw	0
 20348  00163C  6EDE               	movwf	postinc2,c
 20349  00163E  0E00               	movlw	0
 20350  001640  6EDD               	movwf	postdec2,c
 20351                           
 20352                           ;led.c: 160: LedBlink->LedOutState = OffState;
 20353  001642  EE20 F001          	lfsr	2,1
 20354  001646  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20355  001648  26D9               	addwf	fsr2l,f,c
 20356  00164A  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20357  00164C  22DA               	addwfc	fsr2h,f,c
 20358  00164E  0E00               	movlw	0
 20359  001650                     L29:
 20360  001650  6EDF               	movwf	indf2,c
 20361                           
 20362                           ; BSR set to: 0
 20363                           ;led.c: 167: }
 20364                           
 20365                           ; BSR set to: 0
 20366                           ;led.c: 166: break;
 20367                           
 20368                           ;led.c: 165: default:
 20369                           
 20370                           ; BSR set to: 0
 20371                           ;led.c: 161: }
 20372                           ;led.c: 162: }
 20373                           ;led.c: 163: break;
 20374                           
 20375                           ; BSR set to: 0
 20376                           
 20377                           ; BSR set to: 0
 20378  001652  D00B               	goto	l1534
 20379  001654                     l1532:
 20380                           
 20381                           ; BSR set to: 0
 20382  001654  C07C  FFD9         	movff	LedBlinkStateMachine@LedBlink,fsr2l
 20383  001658  C07D  FFDA         	movff	LedBlinkStateMachine@LedBlink+1,fsr2h
 20384  00165C  50DF               	movf	indf2,w,c
 20385                           
 20386                           ; Switch size 1, requested type "space"
 20387                           ; Number of cases is 2, Range of values is 0 to 1
 20388                           ; switch strategies available:
 20389                           ; Name         Instructions Cycles
 20390                           ; simple_byte            7     4 (average)
 20391                           ;	Chosen strategy is simple_byte
 20392  00165E  0A00               	xorlw	0	; case 0
 20393  001660  B4D8               	btfsc	status,2,c
 20394  001662  D769               	goto	l1533
 20395  001664  0A01               	xorlw	1	; case 1
 20396  001666  B4D8               	btfsc	status,2,c
 20397  001668  D77A               	goto	l1535
 20398  00166A                     l1534:
 20399                           
 20400                           ;led.c: 170: return (LedBlink->LedOutState);
 20401  00166A  0100               	movlb	0	; () banked
 20402  00166C  EE20 F001          	lfsr	2,1
 20403  001670  517C               	movf	LedBlinkStateMachine@LedBlink& (0+255),w,b
 20404  001672  26D9               	addwf	fsr2l,f,c
 20405  001674  517D               	movf	(LedBlinkStateMachine@LedBlink+1)& (0+255),w,b
 20406  001676  22DA               	addwfc	fsr2h,f,c
 20407  001678  50DF               	movf	indf2,w,c
 20408  00167A  0012               	return	
 20409  00167C                     __end_of_LedBlinkStateMachine:
 20410                           	opt stack 0
 20411                           tosu	equ	0xFFF
 20412                           tosh	equ	0xFFE
 20413                           tosl	equ	0xFFD
 20414                           pclath	equ	0xFFA
 20415                           tblptru	equ	0xFF8
 20416                           tblptrh	equ	0xFF7
 20417                           tblptrl	equ	0xFF6
 20418                           tablat	equ	0xFF5
 20419                           prodh	equ	0xFF4
 20420                           prodl	equ	0xFF3
 20421                           intcon	equ	0xFF2
 20422                           intcon2	equ	0xFF1
 20423                           intcon3	equ	0xFF0
 20424                           indf0	equ	0xFEF
 20425                           postinc0	equ	0xFEE
 20426                           plusw0	equ	0xFEB
 20427                           fsr0h	equ	0xFEA
 20428                           fsr0l	equ	0xFE9
 20429                           wreg	equ	0xFE8
 20430                           indf1	equ	0xFE7
 20431                           postinc1	equ	0xFE6
 20432                           postdec1	equ	0xFE5
 20433                           fsr1h	equ	0xFE2
 20434                           fsr1l	equ	0xFE1
 20435                           indf2	equ	0xFDF
 20436                           postinc2	equ	0xFDE
 20437                           postdec2	equ	0xFDD
 20438                           plusw2	equ	0xFDB
 20439                           fsr2h	equ	0xFDA
 20440                           fsr2l	equ	0xFD9
 20441                           status	equ	0xFD8
 20442                           
 20443 ;; *************** function ___lwdiv *****************
 20444 ;; Defined at:
 20445 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 20446 ;; Parameters:    Size  Location     Type
 20447 ;;  dividend        2   21[BANK0 ] unsigned int 
 20448 ;;  divisor         2   23[BANK0 ] unsigned int 
 20449 ;; Auto vars:     Size  Location     Type
 20450 ;;  quotient        2   26[BANK0 ] unsigned int 
 20451 ;;  counter         1   25[BANK0 ] unsigned char 
 20452 ;; Return value:  Size  Location     Type
 20453 ;;                  2   21[BANK0 ] unsigned int 
 20454 ;; Registers used:
 20455 ;;		wreg, status,2, status,0
 20456 ;; Tracked objects:
 20457 ;;		On entry : 0/0
 20458 ;;		On exit  : 0/0
 20459 ;;		Unchanged: 0/0
 20460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20461 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20462 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20464 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20465 ;;Total ram usage:        7 bytes
 20466 ;; Hardware stack levels used:    1
 20467 ;; Hardware stack levels required when called:    9
 20468 ;; This function calls:
 20469 ;;		Nothing
 20470 ;; This function is called by:
 20471 ;;		_LedBlinkStateMachine
 20472 ;;		_LedPulseStateMachine
 20473 ;;		_utoa
 20474 ;; This function uses a non-reentrant model
 20475 ;;
 20476                           
 20477                           	psect	text100
 20478  0039CE                     __ptext100:
 20479                           	opt stack 0
 20480  0039CE                     ___lwdiv:
 20481                           	opt stack 16
 20482                           
 20483                           ; BSR set to: 0
 20484                           ;incstack = 0
 20485  0039CE  0E00               	movlw	0
 20486  0039D0  0100               	movlb	0	; () banked
 20487  0039D2  6F7B               	movwf	(___lwdiv@quotient+1)& (0+255),b
 20488  0039D4  0E00               	movlw	0
 20489  0039D6  6F7A               	movwf	___lwdiv@quotient& (0+255),b
 20490                           
 20491                           ; BSR set to: 0
 20492  0039D8  5177               	movf	___lwdiv@divisor& (0+255),w,b
 20493  0039DA  1178               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 20494  0039DC  B4D8               	btfsc	status,2,c
 20495  0039DE  D01C               	goto	l2393
 20496                           
 20497                           ; BSR set to: 0
 20498  0039E0  0E01               	movlw	1
 20499  0039E2  6F79               	movwf	___lwdiv@counter& (0+255),b
 20500  0039E4  D004               	goto	l2388
 20501  0039E6                     
 20502                           ; BSR set to: 0
 20503                           
 20504                           ; BSR set to: 0
 20505  0039E6  90D8               	bcf	status,0,c
 20506  0039E8  3777               	rlcf	___lwdiv@divisor& (0+255),f,b
 20507  0039EA  3778               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 20508  0039EC  2B79               	incf	___lwdiv@counter& (0+255),f,b
 20509  0039EE                     l2388:
 20510                           
 20511                           ; BSR set to: 0
 20512                           
 20513                           ; BSR set to: 0
 20514  0039EE  AF78               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 20515  0039F0  D7FA               	goto	l2389
 20516  0039F2                     u7930:
 20517                           
 20518                           ; BSR set to: 0
 20519                           
 20520                           ; BSR set to: 0
 20521                           
 20522                           ; BSR set to: 0
 20523  0039F2  90D8               	bcf	status,0,c
 20524  0039F4  377A               	rlcf	___lwdiv@quotient& (0+255),f,b
 20525  0039F6  377B               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 20526                           
 20527                           ; BSR set to: 0
 20528  0039F8  5177               	movf	___lwdiv@divisor& (0+255),w,b
 20529  0039FA  5D75               	subwf	___lwdiv@dividend& (0+255),w,b
 20530  0039FC  5178               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20531  0039FE  5976               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 20532  003A00  A0D8               	btfss	status,0,c
 20533  003A02  D005               	goto	l2392
 20534                           
 20535                           ; BSR set to: 0
 20536  003A04  5177               	movf	___lwdiv@divisor& (0+255),w,b
 20537  003A06  5F75               	subwf	___lwdiv@dividend& (0+255),f,b
 20538  003A08  5178               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 20539  003A0A  5B76               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 20540                           
 20541                           ; BSR set to: 0
 20542  003A0C  817A               	bsf	___lwdiv@quotient& (0+255),0,b
 20543  003A0E                     l2392:
 20544                           
 20545                           ; BSR set to: 0
 20546                           
 20547                           ; BSR set to: 0
 20548  003A0E  90D8               	bcf	status,0,c
 20549  003A10  3378               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 20550  003A12  3377               	rrcf	___lwdiv@divisor& (0+255),f,b
 20551                           
 20552                           ; BSR set to: 0
 20553  003A14  2F79               	decfsz	___lwdiv@counter& (0+255),f,b
 20554  003A16  D7ED               	goto	u7930
 20555  003A18                     l2393:
 20556                           
 20557                           ; BSR set to: 0
 20558                           
 20559                           ; BSR set to: 0
 20560  003A18  C07A  F075         	movff	___lwdiv@quotient,?___lwdiv
 20561  003A1C  C07B  F076         	movff	___lwdiv@quotient+1,?___lwdiv+1
 20562                           
 20563                           ; BSR set to: 0
 20564  003A20  0012               	return		;funcret
 20565  003A22                     __end_of___lwdiv:
 20566                           	opt stack 0
 20567                           tosu	equ	0xFFF
 20568                           tosh	equ	0xFFE
 20569                           tosl	equ	0xFFD
 20570                           pclath	equ	0xFFA
 20571                           tblptru	equ	0xFF8
 20572                           tblptrh	equ	0xFF7
 20573                           tblptrl	equ	0xFF6
 20574                           tablat	equ	0xFF5
 20575                           prodh	equ	0xFF4
 20576                           prodl	equ	0xFF3
 20577                           intcon	equ	0xFF2
 20578                           intcon2	equ	0xFF1
 20579                           intcon3	equ	0xFF0
 20580                           indf0	equ	0xFEF
 20581                           postinc0	equ	0xFEE
 20582                           plusw0	equ	0xFEB
 20583                           fsr0h	equ	0xFEA
 20584                           fsr0l	equ	0xFE9
 20585                           wreg	equ	0xFE8
 20586                           indf1	equ	0xFE7
 20587                           postinc1	equ	0xFE6
 20588                           postdec1	equ	0xFE5
 20589                           fsr1h	equ	0xFE2
 20590                           fsr1l	equ	0xFE1
 20591                           indf2	equ	0xFDF
 20592                           postinc2	equ	0xFDE
 20593                           postdec2	equ	0xFDD
 20594                           plusw2	equ	0xFDB
 20595                           fsr2h	equ	0xFDA
 20596                           fsr2l	equ	0xFD9
 20597                           status	equ	0xFD8
 20598                           
 20599 ;; *************** function _OsAlrm_SetOsAlarm *****************
 20600 ;; Defined at:
 20601 ;;		line 77 in file "../../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 20602 ;; Parameters:    Size  Location     Type
 20603 ;;  OsAlarmId       2   27[BANK0 ] unsigned short 
 20604 ;;  OsAlarmTimeo    4   29[BANK0 ] unsigned long 
 20605 ;;  AlarmCallbac    2   33[BANK0 ] PTR FTN()void 
 20606 ;;		 -> I2cDummyTx(1), 
 20607 ;; Auto vars:     Size  Location     Type
 20608 ;;		None
 20609 ;; Return value:  Size  Location     Type
 20610 ;;                  1    wreg      void 
 20611 ;; Registers used:
 20612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20613 ;; Tracked objects:
 20614 ;;		On entry : 0/0
 20615 ;;		On exit  : 0/0
 20616 ;;		Unchanged: 0/0
 20617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20618 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20621 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20622 ;;Total ram usage:        8 bytes
 20623 ;; Hardware stack levels used:    1
 20624 ;; Hardware stack levels required when called:   10
 20625 ;; This function calls:
 20626 ;;		___wmul
 20627 ;; This function is called by:
 20628 ;;		_I2cSlv_MainTask
 20629 ;; This function uses a non-reentrant model
 20630 ;;
 20631                           
 20632                           	psect	text101
 20633  002560                     __ptext101:
 20634                           	opt stack 0
 20635  002560                     _OsAlrm_SetOsAlarm:
 20636                           	opt stack 17
 20637                           
 20638                           ;os_alarms.c: 80: OsAlarms[OsAlarmId].Enabled = 1u;
 20639                           
 20640                           ; BSR set to: 0
 20641                           ;incstack = 0
 20642  002560  C07B  F075         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 20643  002564  C07C  F076         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 20644  002568  0E00               	movlw	0
 20645  00256A  0100               	movlb	0	; () banked
 20646  00256C  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20647  00256E  0E0B               	movlw	11
 20648  002570  6F77               	movwf	___wmul@multiplicand& (0+255),b
 20649  002572  ECFB  F01F         	call	___wmul	;wreg free
 20650  002576  0E00               	movlw	low _OsAlarms
 20651  002578  0100               	movlb	0	; () banked
 20652  00257A  2575               	addwf	?___wmul& (0+255),w,b
 20653  00257C  6ED9               	movwf	fsr2l,c
 20654  00257E  0E05               	movlw	high _OsAlarms
 20655  002580  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 20656  002582  6EDA               	movwf	fsr2h,c
 20657  002584  0E01               	movlw	1
 20658  002586  6EDF               	movwf	indf2,c
 20659                           
 20660                           ;os_alarms.c: 82: OsAlarms[OsAlarmId].Counter = 0;
 20661  002588  C07B  F075         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 20662  00258C  C07C  F076         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 20663  002590  0E00               	movlw	0
 20664  002592  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20665  002594  0E0B               	movlw	11
 20666  002596  6F77               	movwf	___wmul@multiplicand& (0+255),b
 20667  002598  ECFB  F01F         	call	___wmul	;wreg free
 20668  00259C  0E01               	movlw	1
 20669  00259E  0100               	movlb	0	; () banked
 20670  0025A0  2775               	addwf	?___wmul& (0+255),f,b
 20671  0025A2  0E00               	movlw	0
 20672  0025A4  2376               	addwfc	(?___wmul+1)& (0+255),f,b
 20673  0025A6  0E00               	movlw	low _OsAlarms
 20674  0025A8  2575               	addwf	?___wmul& (0+255),w,b
 20675  0025AA  6ED9               	movwf	fsr2l,c
 20676  0025AC  0E05               	movlw	high _OsAlarms
 20677  0025AE  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 20678  0025B0  6EDA               	movwf	fsr2h,c
 20679  0025B2  6ADE               	clrf	postinc2,c
 20680  0025B4  6ADE               	clrf	postinc2,c
 20681  0025B6  6ADE               	clrf	postinc2,c
 20682  0025B8  6ADD               	clrf	postdec2,c
 20683                           
 20684                           ;os_alarms.c: 84: OsAlarms[OsAlarmId].AlarmTime = OsAlarmTimeout;
 20685  0025BA  C07B  F075         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 20686  0025BE  C07C  F076         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 20687  0025C2  0E00               	movlw	0
 20688  0025C4  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20689  0025C6  0E0B               	movlw	11
 20690  0025C8  6F77               	movwf	___wmul@multiplicand& (0+255),b
 20691  0025CA  ECFB  F01F         	call	___wmul	;wreg free
 20692  0025CE  0E05               	movlw	5
 20693  0025D0  0100               	movlb	0	; () banked
 20694  0025D2  2775               	addwf	?___wmul& (0+255),f,b
 20695  0025D4  0E00               	movlw	0
 20696  0025D6  2376               	addwfc	(?___wmul+1)& (0+255),f,b
 20697  0025D8  0E00               	movlw	low _OsAlarms
 20698  0025DA  2575               	addwf	?___wmul& (0+255),w,b
 20699  0025DC  6ED9               	movwf	fsr2l,c
 20700  0025DE  0E05               	movlw	high _OsAlarms
 20701  0025E0  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 20702  0025E2  6EDA               	movwf	fsr2h,c
 20703  0025E4  C07D  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout,postinc2
 20704  0025E8  C07E  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+1,postinc2
 20705  0025EC  C07F  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+2,postinc2
 20706  0025F0  C080  FFDE         	movff	OsAlrm_SetOsAlarm@OsAlarmTimeout+3,postinc2
 20707                           
 20708                           ;os_alarms.c: 86: OsAlarms[OsAlarmId].AlrmCbk = AlarmCallback;
 20709  0025F4  C07B  F075         	movff	OsAlrm_SetOsAlarm@OsAlarmId,___wmul@multiplier
 20710  0025F8  C07C  F076         	movff	OsAlrm_SetOsAlarm@OsAlarmId+1,___wmul@multiplier+1
 20711  0025FC  0E00               	movlw	0
 20712  0025FE  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
 20713  002600  0E0B               	movlw	11
 20714  002602  6F77               	movwf	___wmul@multiplicand& (0+255),b
 20715  002604  ECFB  F01F         	call	___wmul	;wreg free
 20716  002608  0E09               	movlw	9
 20717  00260A  0100               	movlb	0	; () banked
 20718  00260C  2775               	addwf	?___wmul& (0+255),f,b
 20719  00260E  0E00               	movlw	0
 20720  002610  2376               	addwfc	(?___wmul+1)& (0+255),f,b
 20721  002612  0E00               	movlw	low _OsAlarms
 20722  002614  2575               	addwf	?___wmul& (0+255),w,b
 20723  002616  6ED9               	movwf	fsr2l,c
 20724  002618  0E05               	movlw	high _OsAlarms
 20725  00261A  2176               	addwfc	(?___wmul+1)& (0+255),w,b
 20726  00261C  6EDA               	movwf	fsr2h,c
 20727  00261E  C081  FFDE         	movff	OsAlrm_SetOsAlarm@AlarmCallback,postinc2
 20728  002622  C082  FFDD         	movff	OsAlrm_SetOsAlarm@AlarmCallback+1,postdec2
 20729                           
 20730                           ; BSR set to: 0
 20731  002626  0012               	return		;funcret
 20732  002628                     __end_of_OsAlrm_SetOsAlarm:
 20733                           	opt stack 0
 20734                           tosu	equ	0xFFF
 20735                           tosh	equ	0xFFE
 20736                           tosl	equ	0xFFD
 20737                           pclath	equ	0xFFA
 20738                           tblptru	equ	0xFF8
 20739                           tblptrh	equ	0xFF7
 20740                           tblptrl	equ	0xFF6
 20741                           tablat	equ	0xFF5
 20742                           prodh	equ	0xFF4
 20743                           prodl	equ	0xFF3
 20744                           intcon	equ	0xFF2
 20745                           intcon2	equ	0xFF1
 20746                           intcon3	equ	0xFF0
 20747                           indf0	equ	0xFEF
 20748                           postinc0	equ	0xFEE
 20749                           plusw0	equ	0xFEB
 20750                           fsr0h	equ	0xFEA
 20751                           fsr0l	equ	0xFE9
 20752                           wreg	equ	0xFE8
 20753                           indf1	equ	0xFE7
 20754                           postinc1	equ	0xFE6
 20755                           postdec1	equ	0xFE5
 20756                           fsr1h	equ	0xFE2
 20757                           fsr1l	equ	0xFE1
 20758                           indf2	equ	0xFDF
 20759                           postinc2	equ	0xFDE
 20760                           postdec2	equ	0xFDD
 20761                           plusw2	equ	0xFDB
 20762                           fsr2h	equ	0xFDA
 20763                           fsr2l	equ	0xFD9
 20764                           status	equ	0xFD8
 20765                           
 20766 ;; *************** function ___wmul *****************
 20767 ;; Defined at:
 20768 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 20769 ;; Parameters:    Size  Location     Type
 20770 ;;  multiplier      2   21[BANK0 ] unsigned int 
 20771 ;;  multiplicand    2   23[BANK0 ] unsigned int 
 20772 ;; Auto vars:     Size  Location     Type
 20773 ;;  product         2   25[BANK0 ] unsigned int 
 20774 ;; Return value:  Size  Location     Type
 20775 ;;                  2   21[BANK0 ] unsigned int 
 20776 ;; Registers used:
 20777 ;;		wreg, status,2, status,0, prodl, prodh
 20778 ;; Tracked objects:
 20779 ;;		On entry : 0/0
 20780 ;;		On exit  : 0/0
 20781 ;;		Unchanged: 0/0
 20782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20783 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20786 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20787 ;;Total ram usage:        6 bytes
 20788 ;; Hardware stack levels used:    1
 20789 ;; Hardware stack levels required when called:    9
 20790 ;; This function calls:
 20791 ;;		Nothing
 20792 ;; This function is called by:
 20793 ;;		_OsAlrm_SetOsAlarm
 20794 ;;		_atoi
 20795 ;; This function uses a non-reentrant model
 20796 ;;
 20797                           
 20798                           	psect	text102
 20799  003FF6                     __ptext102:
 20800                           	opt stack 0
 20801  003FF6                     ___wmul:
 20802                           	opt stack 15
 20803                           
 20804                           ; BSR set to: 0
 20805                           ;incstack = 0
 20806  003FF6  0100               	movlb	0	; () banked
 20807  003FF8  5175               	movf	___wmul@multiplier& (0+255),w,b
 20808  003FFA  0377               	mulwf	___wmul@multiplicand& (0+255),b
 20809  003FFC  CFF3 F079          	movff	prodl,___wmul@product
 20810  004000  CFF4 F07A          	movff	prodh,___wmul@product+1
 20811  004004  5175               	movf	___wmul@multiplier& (0+255),w,b
 20812  004006  0378               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 20813  004008  50F3               	movf	prodl,w,c
 20814  00400A  277A               	addwf	(___wmul@product+1)& (0+255),f,b
 20815  00400C  5176               	movf	(___wmul@multiplier+1)& (0+255),w,b
 20816  00400E  0377               	mulwf	___wmul@multiplicand& (0+255),b
 20817  004010  50F3               	movf	prodl,w,c
 20818  004012  277A               	addwf	(___wmul@product+1)& (0+255),f,b
 20819                           
 20820                           ; BSR set to: 0
 20821  004014  C079  F075         	movff	___wmul@product,?___wmul
 20822  004018  C07A  F076         	movff	___wmul@product+1,?___wmul+1
 20823  00401C  0012               	return	
 20824  00401E                     __end_of___wmul:
 20825                           	opt stack 0
 20826                           tosu	equ	0xFFF
 20827                           tosh	equ	0xFFE
 20828                           tosl	equ	0xFFD
 20829                           pclath	equ	0xFFA
 20830                           tblptru	equ	0xFF8
 20831                           tblptrh	equ	0xFF7
 20832                           tblptrl	equ	0xFF6
 20833                           tablat	equ	0xFF5
 20834                           prodh	equ	0xFF4
 20835                           prodl	equ	0xFF3
 20836                           intcon	equ	0xFF2
 20837                           intcon2	equ	0xFF1
 20838                           intcon3	equ	0xFF0
 20839                           indf0	equ	0xFEF
 20840                           postinc0	equ	0xFEE
 20841                           plusw0	equ	0xFEB
 20842                           fsr0h	equ	0xFEA
 20843                           fsr0l	equ	0xFE9
 20844                           wreg	equ	0xFE8
 20845                           indf1	equ	0xFE7
 20846                           postinc1	equ	0xFE6
 20847                           postdec1	equ	0xFE5
 20848                           fsr1h	equ	0xFE2
 20849                           fsr1l	equ	0xFE1
 20850                           indf2	equ	0xFDF
 20851                           postinc2	equ	0xFDE
 20852                           postdec2	equ	0xFDD
 20853                           plusw2	equ	0xFDB
 20854                           fsr2h	equ	0xFDA
 20855                           fsr2l	equ	0xFD9
 20856                           status	equ	0xFD8
 20857                           
 20858 ;; *************** function _I2c_InitI2cModule *****************
 20859 ;; Defined at:
 20860 ;;		line 228 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 20861 ;; Parameters:    Size  Location     Type
 20862 ;;  I2cConfig       2   46[BANK0 ] PTR struct _I2cConfig
 20863 ;;		 -> I2cConfig(10), 
 20864 ;; Auto vars:     Size  Location     Type
 20865 ;;		None
 20866 ;; Return value:  Size  Location     Type
 20867 ;;                  1    wreg      void 
 20868 ;; Registers used:
 20869 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20870 ;; Tracked objects:
 20871 ;;		On entry : 0/0
 20872 ;;		On exit  : 0/0
 20873 ;;		Unchanged: 0/0
 20874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 20875 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20877 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20878 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 20879 ;;Total ram usage:        4 bytes
 20880 ;; Hardware stack levels used:    1
 20881 ;; Hardware stack levels required when called:   11
 20882 ;; This function calls:
 20883 ;;		_SetBaudRate
 20884 ;; This function is called by:
 20885 ;;		_I2cSlv_MainTask
 20886 ;; This function uses a non-reentrant model
 20887 ;;
 20888                           
 20889                           	psect	text103
 20890  00348C                     __ptext103:
 20891                           	opt stack 0
 20892  00348C                     _I2c_InitI2cModule:
 20893                           	opt stack 16
 20894                           
 20895                           ;i2c_drv.c: 231: TRISDbits.TRISD1 = ((UINT8)(1));
 20896                           
 20897                           ; BSR set to: 0
 20898                           ;incstack = 0
 20899  00348C  8295               	bsf	3989,1,c	;volatile
 20900                           
 20901                           ;i2c_drv.c: 232: TRISDbits.TRISD0 = ((UINT8)(1));
 20902  00348E  8095               	bsf	3989,0,c	;volatile
 20903                           
 20904                           ;i2c_drv.c: 235: SetBaudRate(I2cConfig->I2cBaudRateHz, I2cConfig->McuBusClockHz);
 20905  003490  C08E  FFD9         	movff	I2c_InitI2cModule@I2cConfig,fsr2l
 20906  003494  C08F  FFDA         	movff	I2c_InitI2cModule@I2cConfig+1,fsr2h
 20907  003498  CFDE F082          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz
 20908  00349C  CFDE F083          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+1
 20909  0034A0  CFDE F084          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+2
 20910  0034A4  CFDE F085          	movff	postinc2,SetBaudRate@DesiredI2cBusClockHz+3
 20911  0034A8  0100               	movlb	0	; () banked
 20912  0034AA  EE20 F004          	lfsr	2,4
 20913  0034AE  518E               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 20914  0034B0  26D9               	addwf	fsr2l,f,c
 20915  0034B2  518F               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 20916  0034B4  22DA               	addwfc	fsr2h,f,c
 20917  0034B6  CFDE F086          	movff	postinc2,SetBaudRate@McuClockHz
 20918  0034BA  CFDE F087          	movff	postinc2,SetBaudRate@McuClockHz+1
 20919  0034BE  CFDE F088          	movff	postinc2,SetBaudRate@McuClockHz+2
 20920  0034C2  CFDE F089          	movff	postinc2,SetBaudRate@McuClockHz+3
 20921  0034C6  EC11  F01D         	call	_SetBaudRate	;wreg free
 20922                           
 20923                           ;i2c_drv.c: 240: SSP2CON1 |= (I2cConfig->I2cModuleMode) << ((UINT8)(0));
 20924  0034CA  0100               	movlb	0	; () banked
 20925  0034CC  EE20 F008          	lfsr	2,8
 20926  0034D0  518E               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 20927  0034D2  26D9               	addwf	fsr2l,f,c
 20928  0034D4  518F               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 20929  0034D6  22DA               	addwfc	fsr2h,f,c
 20930  0034D8  50DF               	movf	indf2,w,c
 20931  0034DA  1272               	iorwf	3954,f,c	;volatile
 20932                           
 20933                           ; BSR set to: 0
 20934                           ;i2c_drv.c: 241: SSP2CON1 |= (I2cConfig->EnableI2cModule) << ((UINT8)(5));
 20935  0034DC  EE20 F009          	lfsr	2,9
 20936  0034E0  518E               	movf	I2c_InitI2cModule@I2cConfig& (0+255),w,b
 20937  0034E2  26D9               	addwf	fsr2l,f,c
 20938  0034E4  518F               	movf	(I2c_InitI2cModule@I2cConfig+1)& (0+255),w,b
 20939  0034E6  22DA               	addwfc	fsr2h,f,c
 20940  0034E8  50DF               	movf	indf2,w,c
 20941  0034EA  6F90               	movwf	??_I2c_InitI2cModule& (0+255),b
 20942  0034EC  0E05               	movlw	5
 20943  0034EE  6F91               	movwf	(??_I2c_InitI2cModule+1)& (0+255),b
 20944  0034F0                     u6365:
 20945  0034F0  90D8               	bcf	status,0,c
 20946  0034F2  3790               	rlcf	??_I2c_InitI2cModule& (0+255),f,b
 20947  0034F4  2F91               	decfsz	(??_I2c_InitI2cModule+1)& (0+255),f,b
 20948  0034F6  D7FC               	goto	u6365
 20949  0034F8  5190               	movf	??_I2c_InitI2cModule& (0+255),w,b
 20950  0034FA  1272               	iorwf	3954,f,c	;volatile
 20951                           
 20952                           ; BSR set to: 0
 20953  0034FC  0012               	return		;funcret
 20954  0034FE                     __end_of_I2c_InitI2cModule:
 20955                           	opt stack 0
 20956                           tosu	equ	0xFFF
 20957                           tosh	equ	0xFFE
 20958                           tosl	equ	0xFFD
 20959                           pclath	equ	0xFFA
 20960                           tblptru	equ	0xFF8
 20961                           tblptrh	equ	0xFF7
 20962                           tblptrl	equ	0xFF6
 20963                           tablat	equ	0xFF5
 20964                           prodh	equ	0xFF4
 20965                           prodl	equ	0xFF3
 20966                           intcon	equ	0xFF2
 20967                           intcon2	equ	0xFF1
 20968                           intcon3	equ	0xFF0
 20969                           indf0	equ	0xFEF
 20970                           postinc0	equ	0xFEE
 20971                           plusw0	equ	0xFEB
 20972                           fsr0h	equ	0xFEA
 20973                           fsr0l	equ	0xFE9
 20974                           wreg	equ	0xFE8
 20975                           indf1	equ	0xFE7
 20976                           postinc1	equ	0xFE6
 20977                           postdec1	equ	0xFE5
 20978                           fsr1h	equ	0xFE2
 20979                           fsr1l	equ	0xFE1
 20980                           indf2	equ	0xFDF
 20981                           postinc2	equ	0xFDE
 20982                           postdec2	equ	0xFDD
 20983                           plusw2	equ	0xFDB
 20984                           fsr2h	equ	0xFDA
 20985                           fsr2l	equ	0xFD9
 20986                           status	equ	0xFD8
 20987                           
 20988 ;; *************** function _SetBaudRate *****************
 20989 ;; Defined at:
 20990 ;;		line 78 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 20991 ;; Parameters:    Size  Location     Type
 20992 ;;  DesiredI2cBu    4   34[BANK0 ] unsigned long 
 20993 ;;  McuClockHz      4   38[BANK0 ] unsigned long 
 20994 ;; Auto vars:     Size  Location     Type
 20995 ;;		None
 20996 ;; Return value:  Size  Location     Type
 20997 ;;                  1    wreg      void 
 20998 ;; Registers used:
 20999 ;;		wreg, status,2, status,0, cstack
 21000 ;; Tracked objects:
 21001 ;;		On entry : 0/0
 21002 ;;		On exit  : 0/0
 21003 ;;		Unchanged: 0/0
 21004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21005 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21007 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21008 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21009 ;;Total ram usage:       12 bytes
 21010 ;; Hardware stack levels used:    1
 21011 ;; Hardware stack levels required when called:   10
 21012 ;; This function calls:
 21013 ;;		___lldiv
 21014 ;; This function is called by:
 21015 ;;		_I2c_InitI2cModule
 21016 ;; This function uses a non-reentrant model
 21017 ;;
 21018                           
 21019                           	psect	text104
 21020  003A22                     __ptext104:
 21021                           	opt stack 0
 21022  003A22                     _SetBaudRate:
 21023                           	opt stack 16
 21024                           
 21025                           ;i2c_drv.c: 81: SSP2ADD = ((McuClockHz/(4*DesiredI2cBusClockHz)) - 1);
 21026                           
 21027                           ; BSR set to: 0
 21028                           ;incstack = 0
 21029  003A22  C086  F075         	movff	SetBaudRate@McuClockHz,___lldiv@dividend
 21030  003A26  C087  F076         	movff	SetBaudRate@McuClockHz+1,___lldiv@dividend+1
 21031  003A2A  C088  F077         	movff	SetBaudRate@McuClockHz+2,___lldiv@dividend+2
 21032  003A2E  C089  F078         	movff	SetBaudRate@McuClockHz+3,___lldiv@dividend+3
 21033  003A32  C082  F08A         	movff	SetBaudRate@DesiredI2cBusClockHz,??_SetBaudRate
 21034  003A36  C083  F08B         	movff	SetBaudRate@DesiredI2cBusClockHz+1,??_SetBaudRate+1
 21035  003A3A  C084  F08C         	movff	SetBaudRate@DesiredI2cBusClockHz+2,??_SetBaudRate+2
 21036  003A3E  C085  F08D         	movff	SetBaudRate@DesiredI2cBusClockHz+3,??_SetBaudRate+3
 21037  003A42  0E02               	movlw	2
 21038  003A44                     u5595:
 21039  003A44  90D8               	bcf	status,0,c
 21040  003A46  0100               	movlb	0	; () banked
 21041  003A48  378A               	rlcf	??_SetBaudRate& (0+255),f,b
 21042  003A4A  378B               	rlcf	(??_SetBaudRate+1)& (0+255),f,b
 21043  003A4C  378C               	rlcf	(??_SetBaudRate+2)& (0+255),f,b
 21044  003A4E  378D               	rlcf	(??_SetBaudRate+3)& (0+255),f,b
 21045  003A50  2EE8               	decfsz	wreg,f,c
 21046  003A52  D7F8               	goto	u5595
 21047  003A54  C08A  F079         	movff	??_SetBaudRate,___lldiv@divisor
 21048  003A58  C08B  F07A         	movff	??_SetBaudRate+1,___lldiv@divisor+1
 21049  003A5C  C08C  F07B         	movff	??_SetBaudRate+2,___lldiv@divisor+2
 21050  003A60  C08D  F07C         	movff	??_SetBaudRate+3,___lldiv@divisor+3
 21051  003A64  ECCB  F019         	call	___lldiv	;wreg free
 21052  003A68  0100               	movlb	0	; () banked
 21053  003A6A  0575               	decf	?___lldiv& (0+255),w,b
 21054  003A6C  6E74               	movwf	3956,c	;volatile
 21055                           
 21056                           ; BSR set to: 0
 21057  003A6E  0012               	return		;funcret
 21058  003A70                     __end_of_SetBaudRate:
 21059                           	opt stack 0
 21060                           tosu	equ	0xFFF
 21061                           tosh	equ	0xFFE
 21062                           tosl	equ	0xFFD
 21063                           pclath	equ	0xFFA
 21064                           tblptru	equ	0xFF8
 21065                           tblptrh	equ	0xFF7
 21066                           tblptrl	equ	0xFF6
 21067                           tablat	equ	0xFF5
 21068                           prodh	equ	0xFF4
 21069                           prodl	equ	0xFF3
 21070                           intcon	equ	0xFF2
 21071                           intcon2	equ	0xFF1
 21072                           intcon3	equ	0xFF0
 21073                           indf0	equ	0xFEF
 21074                           postinc0	equ	0xFEE
 21075                           plusw0	equ	0xFEB
 21076                           fsr0h	equ	0xFEA
 21077                           fsr0l	equ	0xFE9
 21078                           wreg	equ	0xFE8
 21079                           indf1	equ	0xFE7
 21080                           postinc1	equ	0xFE6
 21081                           postdec1	equ	0xFE5
 21082                           fsr1h	equ	0xFE2
 21083                           fsr1l	equ	0xFE1
 21084                           indf2	equ	0xFDF
 21085                           postinc2	equ	0xFDE
 21086                           postdec2	equ	0xFDD
 21087                           plusw2	equ	0xFDB
 21088                           fsr2h	equ	0xFDA
 21089                           fsr2l	equ	0xFD9
 21090                           status	equ	0xFD8
 21091                           
 21092 ;; *************** function ___lldiv *****************
 21093 ;; Defined at:
 21094 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 21095 ;; Parameters:    Size  Location     Type
 21096 ;;  dividend        4   21[BANK0 ] unsigned long 
 21097 ;;  divisor         4   25[BANK0 ] unsigned long 
 21098 ;; Auto vars:     Size  Location     Type
 21099 ;;  quotient        4   29[BANK0 ] unsigned long 
 21100 ;;  counter         1   33[BANK0 ] unsigned char 
 21101 ;; Return value:  Size  Location     Type
 21102 ;;                  4   21[BANK0 ] unsigned long 
 21103 ;; Registers used:
 21104 ;;		wreg, status,2, status,0
 21105 ;; Tracked objects:
 21106 ;;		On entry : 0/0
 21107 ;;		On exit  : 0/0
 21108 ;;		Unchanged: 0/0
 21109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21110 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21111 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21113 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21114 ;;Total ram usage:       13 bytes
 21115 ;; Hardware stack levels used:    1
 21116 ;; Hardware stack levels required when called:    9
 21117 ;; This function calls:
 21118 ;;		Nothing
 21119 ;; This function is called by:
 21120 ;;		_SetBaudRate
 21121 ;;		_Tmr_TmrBPrSet
 21122 ;;		_SetUartBaudRate
 21123 ;; This function uses a non-reentrant model
 21124 ;;
 21125                           
 21126                           	psect	text105
 21127  003396                     __ptext105:
 21128                           	opt stack 0
 21129  003396                     ___lldiv:
 21130                           	opt stack 17
 21131                           
 21132                           ; BSR set to: 0
 21133                           ;incstack = 0
 21134  003396  0E00               	movlw	0
 21135  003398  0100               	movlb	0	; () banked
 21136  00339A  6F7D               	movwf	___lldiv@quotient& (0+255),b
 21137  00339C  0E00               	movlw	0
 21138  00339E  6F7E               	movwf	(___lldiv@quotient+1)& (0+255),b
 21139  0033A0  0E00               	movlw	0
 21140  0033A2  6F7F               	movwf	(___lldiv@quotient+2)& (0+255),b
 21141  0033A4  0E00               	movlw	0
 21142  0033A6  6F80               	movwf	(___lldiv@quotient+3)& (0+255),b
 21143                           
 21144                           ; BSR set to: 0
 21145  0033A8  5179               	movf	___lldiv@divisor& (0+255),w,b
 21146  0033AA  117A               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 21147  0033AC  117B               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 21148  0033AE  117C               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 21149  0033B0  B4D8               	btfsc	status,2,c
 21150  0033B2  D02A               	goto	l2340
 21151                           
 21152                           ; BSR set to: 0
 21153  0033B4  0E01               	movlw	1
 21154  0033B6  6F81               	movwf	___lldiv@counter& (0+255),b
 21155  0033B8  D006               	goto	l2335
 21156  0033BA                     
 21157                           ; BSR set to: 0
 21158                           
 21159                           ; BSR set to: 0
 21160  0033BA  90D8               	bcf	status,0,c
 21161  0033BC  3779               	rlcf	___lldiv@divisor& (0+255),f,b
 21162  0033BE  377A               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 21163  0033C0  377B               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 21164  0033C2  377C               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 21165  0033C4  2B81               	incf	___lldiv@counter& (0+255),f,b
 21166  0033C6                     l2335:
 21167                           
 21168                           ; BSR set to: 0
 21169                           
 21170                           ; BSR set to: 0
 21171  0033C6  AF7C               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 21172  0033C8  D7F8               	goto	l2336
 21173  0033CA                     u5570:
 21174                           
 21175                           ; BSR set to: 0
 21176                           
 21177                           ; BSR set to: 0
 21178                           
 21179                           ; BSR set to: 0
 21180  0033CA  90D8               	bcf	status,0,c
 21181  0033CC  377D               	rlcf	___lldiv@quotient& (0+255),f,b
 21182  0033CE  377E               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 21183  0033D0  377F               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 21184  0033D2  3780               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 21185                           
 21186                           ; BSR set to: 0
 21187  0033D4  5179               	movf	___lldiv@divisor& (0+255),w,b
 21188  0033D6  5D75               	subwf	___lldiv@dividend& (0+255),w,b
 21189  0033D8  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21190  0033DA  5976               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 21191  0033DC  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21192  0033DE  5977               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 21193  0033E0  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21194  0033E2  5978               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 21195  0033E4  A0D8               	btfss	status,0,c
 21196  0033E6  D009               	goto	l2339
 21197                           
 21198                           ; BSR set to: 0
 21199  0033E8  5179               	movf	___lldiv@divisor& (0+255),w,b
 21200  0033EA  5F75               	subwf	___lldiv@dividend& (0+255),f,b
 21201  0033EC  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 21202  0033EE  5B76               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 21203  0033F0  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 21204  0033F2  5B77               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 21205  0033F4  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 21206  0033F6  5B78               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 21207                           
 21208                           ; BSR set to: 0
 21209  0033F8  817D               	bsf	___lldiv@quotient& (0+255),0,b
 21210  0033FA                     l2339:
 21211                           
 21212                           ; BSR set to: 0
 21213                           
 21214                           ; BSR set to: 0
 21215  0033FA  90D8               	bcf	status,0,c
 21216  0033FC  337C               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 21217  0033FE  337B               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 21218  003400  337A               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 21219  003402  3379               	rrcf	___lldiv@divisor& (0+255),f,b
 21220                           
 21221                           ; BSR set to: 0
 21222  003404  2F81               	decfsz	___lldiv@counter& (0+255),f,b
 21223  003406  D7E1               	goto	u5570
 21224  003408                     l2340:
 21225                           
 21226                           ; BSR set to: 0
 21227                           
 21228                           ; BSR set to: 0
 21229  003408  C07D  F075         	movff	___lldiv@quotient,?___lldiv
 21230  00340C  C07E  F076         	movff	___lldiv@quotient+1,?___lldiv+1
 21231  003410  C07F  F077         	movff	___lldiv@quotient+2,?___lldiv+2
 21232  003414  C080  F078         	movff	___lldiv@quotient+3,?___lldiv+3
 21233                           
 21234                           ; BSR set to: 0
 21235  003418  0012               	return		;funcret
 21236  00341A                     __end_of___lldiv:
 21237                           	opt stack 0
 21238                           tosu	equ	0xFFF
 21239                           tosh	equ	0xFFE
 21240                           tosl	equ	0xFFD
 21241                           pclath	equ	0xFFA
 21242                           tblptru	equ	0xFF8
 21243                           tblptrh	equ	0xFF7
 21244                           tblptrl	equ	0xFF6
 21245                           tablat	equ	0xFF5
 21246                           prodh	equ	0xFF4
 21247                           prodl	equ	0xFF3
 21248                           intcon	equ	0xFF2
 21249                           intcon2	equ	0xFF1
 21250                           intcon3	equ	0xFF0
 21251                           indf0	equ	0xFEF
 21252                           postinc0	equ	0xFEE
 21253                           plusw0	equ	0xFEB
 21254                           fsr0h	equ	0xFEA
 21255                           fsr0l	equ	0xFE9
 21256                           wreg	equ	0xFE8
 21257                           indf1	equ	0xFE7
 21258                           postinc1	equ	0xFE6
 21259                           postdec1	equ	0xFE5
 21260                           fsr1h	equ	0xFE2
 21261                           fsr1l	equ	0xFE1
 21262                           indf2	equ	0xFDF
 21263                           postinc2	equ	0xFDE
 21264                           postdec2	equ	0xFDD
 21265                           plusw2	equ	0xFDB
 21266                           fsr2h	equ	0xFDA
 21267                           fsr2l	equ	0xFD9
 21268                           status	equ	0xFD8
 21269                           
 21270 ;; *************** function _I2cSetConfig *****************
 21271 ;; Defined at:
 21272 ;;		line 99 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21273 ;; Parameters:    Size  Location     Type
 21274 ;;		None
 21275 ;; Auto vars:     Size  Location     Type
 21276 ;;		None
 21277 ;; Return value:  Size  Location     Type
 21278 ;;                  1    wreg      void 
 21279 ;; Registers used:
 21280 ;;		wreg, status,2
 21281 ;; Tracked objects:
 21282 ;;		On entry : 0/0
 21283 ;;		On exit  : 0/0
 21284 ;;		Unchanged: 0/0
 21285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21290 ;;Total ram usage:        0 bytes
 21291 ;; Hardware stack levels used:    1
 21292 ;; Hardware stack levels required when called:    9
 21293 ;; This function calls:
 21294 ;;		Nothing
 21295 ;; This function is called by:
 21296 ;;		_I2cSlv_MainTask
 21297 ;; This function uses a non-reentrant model
 21298 ;;
 21299                           
 21300                           	psect	text106
 21301  003F76                     __ptext106:
 21302                           	opt stack 0
 21303  003F76                     _I2cSetConfig:
 21304                           	opt stack 18
 21305                           
 21306                           ;i2c_slv.c: 101: I2cConfig.I2cBaudRateHz = ((UINT32)(400000));
 21307                           
 21308                           ; BSR set to: 0
 21309                           ;incstack = 0
 21310  003F76  0E80               	movlw	128
 21311  003F78  0101               	movlb	1	; () banked
 21312  003F7A  6FDC               	movwf	_I2cConfig& (0+255),b
 21313  003F7C  0E1A               	movlw	26
 21314  003F7E  6FDD               	movwf	(_I2cConfig+1)& (0+255),b
 21315  003F80  0E06               	movlw	6
 21316  003F82  6FDE               	movwf	(_I2cConfig+2)& (0+255),b
 21317  003F84  0E00               	movlw	0
 21318  003F86  6FDF               	movwf	(_I2cConfig+3)& (0+255),b
 21319                           
 21320                           ;i2c_slv.c: 102: I2cConfig.McuBusClockHz = ((UINT32)(48000000));
 21321  003F88  0E00               	movlw	0
 21322  003F8A  6FE0               	movwf	(_I2cConfig+4)& (0+255),b
 21323  003F8C  0E6C               	movlw	108
 21324  003F8E  6FE1               	movwf	(_I2cConfig+5)& (0+255),b
 21325  003F90  0EDC               	movlw	220
 21326  003F92  6FE2               	movwf	(_I2cConfig+6)& (0+255),b
 21327  003F94  0E02               	movlw	2
 21328  003F96  6FE3               	movwf	(_I2cConfig+7)& (0+255),b
 21329                           
 21330                           ;i2c_slv.c: 103: I2cConfig.I2cModuleMode = ((UINT8)(0b1000));
 21331  003F98  0E08               	movlw	8
 21332  003F9A  6FE4               	movwf	(_I2cConfig+8)& (0+255),b
 21333                           
 21334                           ;i2c_slv.c: 104: I2cConfig.EnableI2cModule = ((UINT8)(1));
 21335  003F9C  0E01               	movlw	1
 21336  003F9E  6FE5               	movwf	(_I2cConfig+9)& (0+255),b
 21337                           
 21338                           ; BSR set to: 1
 21339  003FA0  0012               	return		;funcret
 21340  003FA2                     __end_of_I2cSetConfig:
 21341                           	opt stack 0
 21342                           tosu	equ	0xFFF
 21343                           tosh	equ	0xFFE
 21344                           tosl	equ	0xFFD
 21345                           pclath	equ	0xFFA
 21346                           tblptru	equ	0xFF8
 21347                           tblptrh	equ	0xFF7
 21348                           tblptrl	equ	0xFF6
 21349                           tablat	equ	0xFF5
 21350                           prodh	equ	0xFF4
 21351                           prodl	equ	0xFF3
 21352                           intcon	equ	0xFF2
 21353                           intcon2	equ	0xFF1
 21354                           intcon3	equ	0xFF0
 21355                           indf0	equ	0xFEF
 21356                           postinc0	equ	0xFEE
 21357                           plusw0	equ	0xFEB
 21358                           fsr0h	equ	0xFEA
 21359                           fsr0l	equ	0xFE9
 21360                           wreg	equ	0xFE8
 21361                           indf1	equ	0xFE7
 21362                           postinc1	equ	0xFE6
 21363                           postdec1	equ	0xFE5
 21364                           fsr1h	equ	0xFE2
 21365                           fsr1l	equ	0xFE1
 21366                           indf2	equ	0xFDF
 21367                           postinc2	equ	0xFDE
 21368                           postdec2	equ	0xFDD
 21369                           plusw2	equ	0xFDB
 21370                           fsr2h	equ	0xFDA
 21371                           fsr2l	equ	0xFD9
 21372                           status	equ	0xFD8
 21373                           
 21374 ;; *************** function _I2cSendMsgSm *****************
 21375 ;; Defined at:
 21376 ;;		line 115 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 21377 ;; Parameters:    Size  Location     Type
 21378 ;;		None
 21379 ;; Auto vars:     Size  Location     Type
 21380 ;;		None
 21381 ;; Return value:  Size  Location     Type
 21382 ;;                  1    wreg      void 
 21383 ;; Registers used:
 21384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21385 ;; Tracked objects:
 21386 ;;		On entry : 0/0
 21387 ;;		On exit  : 0/0
 21388 ;;		Unchanged: 0/0
 21389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21394 ;;Total ram usage:        0 bytes
 21395 ;; Hardware stack levels used:    1
 21396 ;; Hardware stack levels required when called:   11
 21397 ;; This function calls:
 21398 ;;		_I2c_ReadData
 21399 ;;		_I2c_WriteData
 21400 ;;		_ReceiveEvt
 21401 ;; This function is called by:
 21402 ;;		_I2cSlv_MainTask
 21403 ;; This function uses a non-reentrant model
 21404 ;;
 21405                           
 21406                           	psect	text107
 21407  00292E                     __ptext107:
 21408                           	opt stack 0
 21409  00292E                     _I2cSendMsgSm:
 21410                           	opt stack 16
 21411                           
 21412                           ;i2c_slv.c: 118: static I2cComStateType I2cComState = I2cComIdle;
 21413                           ;i2c_slv.c: 120: switch(I2cComState)
 21414                           
 21415                           ; BSR set to: 1
 21416                           ;incstack = 0
 21417  00292E  D048               	goto	l861
 21418  002930                     
 21419                           ;i2c_slv.c: 124: if (ReceiveEvt(&I2cWriteDataEvt))
 21420  002930  0EE0               	movlw	low _I2cWriteDataEvt
 21421  002932  0100               	movlb	0	; () banked
 21422  002934  6F75               	movwf	ReceiveEvt@Event& (0+255),b
 21423  002936  0E00               	movlw	high _I2cWriteDataEvt
 21424  002938  6F76               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21425  00293A  ECA4  F01F         	call	_ReceiveEvt	;wreg free
 21426  00293E  0900               	iorlw	0
 21427  002940  B4D8               	btfsc	status,2,c
 21428  002942  D006               	goto	l863
 21429                           
 21430                           ;i2c_slv.c: 125: {
 21431                           ;i2c_slv.c: 127: I2cComState = I2cComWriteData;
 21432  002944  0E01               	movlw	1
 21433  002946  0100               	movlb	0	; () banked
 21434  002948  6FCB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21435                           
 21436                           ;i2c_slv.c: 129: I2cComSts = TxInProgress;
 21437  00294A  0E01               	movlw	1
 21438  00294C  6FCC               	movwf	_I2cComSts& (0+255),b
 21439                           
 21440                           ;i2c_slv.c: 130: }
 21441  00294E  0012               	return	
 21442  002950                     l863:
 21443                           
 21444                           ;i2c_slv.c: 131: else if (ReceiveEvt(&I2cReadDataEvt))
 21445                           
 21446                           ; BSR set to: 0
 21447  002950  0EDF               	movlw	low _I2cReadDataEvt
 21448  002952  0100               	movlb	0	; () banked
 21449  002954  6F75               	movwf	ReceiveEvt@Event& (0+255),b
 21450  002956  0E00               	movlw	high _I2cReadDataEvt
 21451  002958  6F76               	movwf	(ReceiveEvt@Event+1)& (0+255),b
 21452  00295A  ECA4  F01F         	call	_ReceiveEvt	;wreg free
 21453  00295E  0900               	iorlw	0
 21454  002960  B4D8               	btfsc	status,2,c
 21455  002962  D006               	goto	l865
 21456                           
 21457                           ;i2c_slv.c: 132: {
 21458                           ;i2c_slv.c: 134: I2cComState = I2cComReadData;
 21459  002964  0E02               	movlw	2
 21460  002966  0100               	movlb	0	; () banked
 21461  002968  6FCB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21462                           
 21463                           ;i2c_slv.c: 136: I2cComSts = RxInProgress;
 21464  00296A  0E02               	movlw	2
 21465  00296C  6FCC               	movwf	_I2cComSts& (0+255),b
 21466                           
 21467                           ;i2c_slv.c: 137: }
 21468  00296E  0012               	return	
 21469  002970                     l865:
 21470                           
 21471                           ;i2c_slv.c: 138: else
 21472                           ;i2c_slv.c: 139: {
 21473                           ;i2c_slv.c: 141: I2cComSts = TxRxIdle;
 21474                           
 21475                           ; BSR set to: 0
 21476  002970  0E00               	movlw	0
 21477  002972  0100               	movlb	0	; () banked
 21478  002974  6FCC               	movwf	_I2cComSts& (0+255),b
 21479                           
 21480                           ; BSR set to: 0
 21481                           ;i2c_slv.c: 142: }
 21482                           ;i2c_slv.c: 143: break;
 21483                           
 21484                           ; BSR set to: 0
 21485  002976  0012               	return	
 21486  002978                     
 21487                           ; BSR set to: 0
 21488                           ;i2c_slv.c: 147: if (I2c_WriteData(&I2cTxPacket) != I2cWriteInProgress)
 21489                           
 21490                           ; BSR set to: 0
 21491  002978  0EF3               	movlw	low _I2cTxPacket
 21492  00297A  6F76               	movwf	I2c_WriteData@WritePacket& (0+255),b
 21493  00297C  0E01               	movlw	high _I2cTxPacket
 21494  00297E  6F77               	movwf	(I2c_WriteData@WritePacket+1)& (0+255),b
 21495  002980  ECD7  F007         	call	_I2c_WriteData	;wreg free
 21496  002984  0900               	iorlw	0
 21497  002986  B4D8               	btfsc	status,2,c
 21498  002988  0012               	return	
 21499                           
 21500                           ;i2c_slv.c: 148: {
 21501                           ;i2c_slv.c: 150: I2cComState = I2cComWriteComplete;
 21502  00298A  0E03               	movlw	3
 21503  00298C  0100               	movlb	0	; () banked
 21504  00298E  6FCB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21505                           
 21506                           ; BSR set to: 0
 21507                           ;i2c_slv.c: 151: }
 21508                           ;i2c_slv.c: 152: break;
 21509  002990  0012               	return	
 21510  002992                     
 21511                           ; BSR set to: 0
 21512                           ;i2c_slv.c: 156: if (I2c_ReadData(&I2cRxPacket) != I2cReadInProgress)
 21513                           
 21514                           ; BSR set to: 0
 21515  002992  0EED               	movlw	low _I2cRxPacket
 21516  002994  6F78               	movwf	I2c_ReadData@ReadPacket& (0+255),b
 21517  002996  0E01               	movlw	high _I2cRxPacket
 21518  002998  6F79               	movwf	(I2c_ReadData@ReadPacket+1)& (0+255),b
 21519  00299A  EC93  F008         	call	_I2c_ReadData	;wreg free
 21520  00299E  0900               	iorlw	0
 21521  0029A0  B4D8               	btfsc	status,2,c
 21522  0029A2  0012               	return	
 21523                           
 21524                           ;i2c_slv.c: 157: {
 21525                           ;i2c_slv.c: 159: I2cComState = I2cComReadComplete;
 21526  0029A4  0E04               	movlw	4
 21527  0029A6  0100               	movlb	0	; () banked
 21528  0029A8  6FCB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21529                           
 21530                           ; BSR set to: 0
 21531                           ;i2c_slv.c: 160: }
 21532                           ;i2c_slv.c: 162: break;
 21533  0029AA  0012               	return	
 21534  0029AC                     
 21535                           ; BSR set to: 0
 21536                           ;i2c_slv.c: 166: I2cComState = I2cComIdle;
 21537                           
 21538                           ; BSR set to: 0
 21539  0029AC  0E00               	movlw	0
 21540  0029AE  6FCB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21541                           
 21542                           ;i2c_slv.c: 168: I2cComSts = TxRxIdle;
 21543  0029B0  0E00               	movlw	0
 21544  0029B2  6FCC               	movwf	_I2cComSts& (0+255),b
 21545                           
 21546                           ;i2c_slv.c: 169: break;
 21547  0029B4  0012               	return	
 21548  0029B6                     
 21549                           ; BSR set to: 0
 21550                           ;i2c_slv.c: 173: I2cComState = I2cComIdle;
 21551                           
 21552                           ; BSR set to: 0
 21553  0029B6  0E00               	movlw	0
 21554  0029B8  6FCB               	movwf	I2cSendMsgSm@I2cComState& (0+255),b
 21555                           
 21556                           ;i2c_slv.c: 175: I2cComSts = TxRxIdle;
 21557  0029BA  0E00               	movlw	0
 21558  0029BC  6FCC               	movwf	_I2cComSts& (0+255),b
 21559                           
 21560                           ; BSR set to: 0
 21561                           ;i2c_slv.c: 180: }
 21562                           
 21563                           ; BSR set to: 0
 21564                           ;i2c_slv.c: 179: break;
 21565                           
 21566                           ;i2c_slv.c: 178: default:
 21567                           
 21568                           ;i2c_slv.c: 176: break;
 21569  0029BE  0012               	return	
 21570  0029C0                     l861:
 21571                           
 21572                           ; BSR set to: 0
 21573  0029C0  0100               	movlb	0	; () banked
 21574  0029C2  51CB               	movf	I2cSendMsgSm@I2cComState& (0+255),w,b
 21575                           
 21576                           ; Switch size 1, requested type "space"
 21577                           ; Number of cases is 5, Range of values is 0 to 4
 21578                           ; switch strategies available:
 21579                           ; Name         Instructions Cycles
 21580                           ; simple_byte           16     9 (average)
 21581                           ;	Chosen strategy is simple_byte
 21582  0029C4  0A00               	xorlw	0	; case 0
 21583  0029C6  B4D8               	btfsc	status,2,c
 21584  0029C8  D7B3               	goto	l862
 21585  0029CA  0A01               	xorlw	1	; case 1
 21586  0029CC  B4D8               	btfsc	status,2,c
 21587  0029CE  D7D4               	goto	l868
 21588  0029D0  0A03               	xorlw	3	; case 2
 21589  0029D2  B4D8               	btfsc	status,2,c
 21590  0029D4  D7DE               	goto	l870
 21591  0029D6  0A01               	xorlw	1	; case 3
 21592  0029D8  B4D8               	btfsc	status,2,c
 21593  0029DA  D7E8               	goto	l872
 21594  0029DC  0A07               	xorlw	7	; case 4
 21595  0029DE  A4D8               	btfss	status,2,c
 21596  0029E0  0012               	return	
 21597  0029E2  D7E9               	goto	l873
 21598  0029E4                     __end_of_I2cSendMsgSm:
 21599                           	opt stack 0
 21600                           tosu	equ	0xFFF
 21601                           tosh	equ	0xFFE
 21602                           tosl	equ	0xFFD
 21603                           pclath	equ	0xFFA
 21604                           tblptru	equ	0xFF8
 21605                           tblptrh	equ	0xFF7
 21606                           tblptrl	equ	0xFF6
 21607                           tablat	equ	0xFF5
 21608                           prodh	equ	0xFF4
 21609                           prodl	equ	0xFF3
 21610                           intcon	equ	0xFF2
 21611                           intcon2	equ	0xFF1
 21612                           intcon3	equ	0xFF0
 21613                           indf0	equ	0xFEF
 21614                           postinc0	equ	0xFEE
 21615                           plusw0	equ	0xFEB
 21616                           fsr0h	equ	0xFEA
 21617                           fsr0l	equ	0xFE9
 21618                           wreg	equ	0xFE8
 21619                           indf1	equ	0xFE7
 21620                           postinc1	equ	0xFE6
 21621                           postdec1	equ	0xFE5
 21622                           fsr1h	equ	0xFE2
 21623                           fsr1l	equ	0xFE1
 21624                           indf2	equ	0xFDF
 21625                           postinc2	equ	0xFDE
 21626                           postdec2	equ	0xFDD
 21627                           plusw2	equ	0xFDB
 21628                           fsr2h	equ	0xFDA
 21629                           fsr2l	equ	0xFD9
 21630                           status	equ	0xFD8
 21631                           
 21632 ;; *************** function _ReceiveEvt *****************
 21633 ;; Defined at:
 21634 ;;		line 99 in file "../../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 21635 ;; Parameters:    Size  Location     Type
 21636 ;;  Event           2   21[BANK0 ] PTR struct EventStructur
 21637 ;;		 -> I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 21638 ;; Auto vars:     Size  Location     Type
 21639 ;;  EventStatus     1   24[BANK0 ] enum E7727
 21640 ;; Return value:  Size  Location     Type
 21641 ;;                  1    wreg      enum E7727
 21642 ;; Registers used:
 21643 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21644 ;; Tracked objects:
 21645 ;;		On entry : 0/0
 21646 ;;		On exit  : 0/0
 21647 ;;		Unchanged: 0/0
 21648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21649 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21650 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21652 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21653 ;;Total ram usage:        4 bytes
 21654 ;; Hardware stack levels used:    1
 21655 ;; Hardware stack levels required when called:    9
 21656 ;; This function calls:
 21657 ;;		Nothing
 21658 ;; This function is called by:
 21659 ;;		_I2cSendMsgSm
 21660 ;;		_I2cSlv_I2cReadMsgSts
 21661 ;; This function uses a non-reentrant model
 21662 ;;
 21663                           
 21664                           	psect	text108
 21665  003F48                     __ptext108:
 21666                           	opt stack 0
 21667  003F48                     _ReceiveEvt:
 21668                           	opt stack 15
 21669                           
 21670                           ;os_ser.c: 102: EventStatusType EventStatus = EventIdle;
 21671                           
 21672                           ;incstack = 0
 21673  003F48  0E00               	movlw	0
 21674  003F4A  0100               	movlb	0	; () banked
 21675  003F4C  6F78               	movwf	ReceiveEvt@EventStatus& (0+255),b
 21676                           
 21677                           ; BSR set to: 0
 21678                           ;os_ser.c: 105: if (Event->EventStatus == EventSent)
 21679  003F4E  C075  FFD9         	movff	ReceiveEvt@Event,fsr2l
 21680  003F52  C076  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 21681  003F56  0E02               	movlw	2
 21682  003F58  18DE               	xorwf	postinc2,w,c
 21683  003F5A  A4D8               	btfss	status,2,c
 21684  003F5C  D008               	goto	l723
 21685                           
 21686                           ; BSR set to: 0
 21687                           ;os_ser.c: 106: {
 21688                           ;os_ser.c: 108: Event->EventStatus = EventReceived;
 21689  003F5E  C075  FFD9         	movff	ReceiveEvt@Event,fsr2l
 21690  003F62  C076  FFDA         	movff	ReceiveEvt@Event+1,fsr2h
 21691  003F66  0E01               	movlw	1
 21692  003F68  6EDF               	movwf	indf2,c
 21693                           
 21694                           ; BSR set to: 0
 21695                           ;os_ser.c: 110: EventStatus = EventReceived;
 21696  003F6A  0E01               	movlw	1
 21697  003F6C  D001               	goto	L30
 21698  003F6E                     l723:
 21699                           
 21700                           ; BSR set to: 0
 21701                           ;os_ser.c: 112: else
 21702                           ;os_ser.c: 113: {
 21703                           ;os_ser.c: 115: EventStatus = EventIdle;
 21704                           
 21705                           ; BSR set to: 0
 21706  003F6E  0E00               	movlw	0
 21707  003F70                     L30:
 21708  003F70  6F78               	movwf	ReceiveEvt@EventStatus& (0+255),b
 21709                           
 21710                           ; BSR set to: 0
 21711                           ;os_ser.c: 116: }
 21712                           ;os_ser.c: 119: return(EventStatus);
 21713  003F72  5178               	movf	ReceiveEvt@EventStatus& (0+255),w,b
 21714  003F74  0012               	return	
 21715  003F76                     __end_of_ReceiveEvt:
 21716                           	opt stack 0
 21717                           tosu	equ	0xFFF
 21718                           tosh	equ	0xFFE
 21719                           tosl	equ	0xFFD
 21720                           pclath	equ	0xFFA
 21721                           tblptru	equ	0xFF8
 21722                           tblptrh	equ	0xFF7
 21723                           tblptrl	equ	0xFF6
 21724                           tablat	equ	0xFF5
 21725                           prodh	equ	0xFF4
 21726                           prodl	equ	0xFF3
 21727                           intcon	equ	0xFF2
 21728                           intcon2	equ	0xFF1
 21729                           intcon3	equ	0xFF0
 21730                           indf0	equ	0xFEF
 21731                           postinc0	equ	0xFEE
 21732                           plusw0	equ	0xFEB
 21733                           fsr0h	equ	0xFEA
 21734                           fsr0l	equ	0xFE9
 21735                           wreg	equ	0xFE8
 21736                           indf1	equ	0xFE7
 21737                           postinc1	equ	0xFE6
 21738                           postdec1	equ	0xFE5
 21739                           fsr1h	equ	0xFE2
 21740                           fsr1l	equ	0xFE1
 21741                           indf2	equ	0xFDF
 21742                           postinc2	equ	0xFDE
 21743                           postdec2	equ	0xFDD
 21744                           plusw2	equ	0xFDB
 21745                           fsr2h	equ	0xFDA
 21746                           fsr2l	equ	0xFD9
 21747                           status	equ	0xFD8
 21748                           
 21749 ;; *************** function _I2c_WriteData *****************
 21750 ;; Defined at:
 21751 ;;		line 252 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 21752 ;; Parameters:    Size  Location     Type
 21753 ;;  WritePacket     2   22[BANK0 ] PTR struct _I2cWritePack
 21754 ;;		 -> I2cTxPacket(5), 
 21755 ;; Auto vars:     Size  Location     Type
 21756 ;;		None
 21757 ;; Return value:  Size  Location     Type
 21758 ;;                  1    wreg      enum E7740
 21759 ;; Registers used:
 21760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21761 ;; Tracked objects:
 21762 ;;		On entry : 0/0
 21763 ;;		On exit  : 0/0
 21764 ;;		Unchanged: 0/0
 21765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 21766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21768 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21769 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 21770 ;;Total ram usage:        4 bytes
 21771 ;; Hardware stack levels used:    1
 21772 ;; Hardware stack levels required when called:   10
 21773 ;; This function calls:
 21774 ;;		_CheckAckStatus
 21775 ;;		_CheckTxStatus
 21776 ;;		_StartCondition
 21777 ;;		_StopCondition
 21778 ;;		_WriteByte
 21779 ;; This function is called by:
 21780 ;;		_I2cSendMsgSm
 21781 ;; This function uses a non-reentrant model
 21782 ;;
 21783                           
 21784                           	psect	text109
 21785  000FAE                     __ptext109:
 21786                           	opt stack 0
 21787  000FAE                     _I2c_WriteData:
 21788                           	opt stack 16
 21789                           
 21790                           ;i2c_drv.c: 255: static I2cWriteStateType I2cWriteState = TxAssertStart;
 21791                           ;i2c_drv.c: 256: static I2cWriteStateType I2cNextState = TxAssertStart;
 21792                           ;i2c_drv.c: 257: static UINT8 TentativeCounter = 0;
 21793                           ;i2c_drv.c: 258: static I2cWriteStsType WriteStatus;
 21794                           ;i2c_drv.c: 260: switch (I2cWriteState)
 21795                           
 21796                           ; BSR set to: 0
 21797                           ;incstack = 0
 21798  000FAE  D098               	goto	l160
 21799  000FB0                     
 21800                           ;i2c_drv.c: 264: StartCondition();
 21801  000FB0  ECB5  F021         	call	_StartCondition	;wreg free
 21802                           
 21803                           ;i2c_drv.c: 266: WriteStatus = I2cWriteInProgress;
 21804  000FB4  0E00               	movlw	0
 21805  000FB6  0100               	movlb	0	; () banked
 21806  000FB8  6FD2               	movwf	I2c_WriteData@WriteStatus& (0+255),b
 21807                           
 21808                           ; BSR set to: 0
 21809                           ;i2c_drv.c: 268: I2cWriteState = TxSendSlaveAddress;
 21810  000FBA  0E01               	movlw	1
 21811  000FBC  D086               	goto	L37
 21812  000FBE                     
 21813                           ; BSR set to: 0
 21814                           ;i2c_drv.c: 273: WritePacket->SlaveAddress = ((WritePacket->SlaveAddress) << 1) | WriteP
      +                          acket->ReadWrite;
 21815                           
 21816                           ; BSR set to: 0
 21817  000FBE  EE20 F001          	lfsr	2,1
 21818  000FC2  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 21819  000FC4  26D9               	addwf	fsr2l,f,c
 21820  000FC6  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 21821  000FC8  22DA               	addwfc	fsr2h,f,c
 21822  000FCA  50DF               	movf	indf2,w,c
 21823  000FCC  6F78               	movwf	??_I2c_WriteData& (0+255),b
 21824  000FCE  C076  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 21825  000FD2  C077  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 21826  000FD6  50DF               	movf	indf2,w,c
 21827  000FD8  6F79               	movwf	(??_I2c_WriteData+1)& (0+255),b
 21828  000FDA  90D8               	bcf	status,0,c
 21829  000FDC  3579               	rlcf	(??_I2c_WriteData+1)& (0+255),w,b
 21830  000FDE  1178               	iorwf	??_I2c_WriteData& (0+255),w,b
 21831  000FE0  C076  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 21832  000FE4  C077  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 21833  000FE8  6EDF               	movwf	indf2,c
 21834                           
 21835                           ; BSR set to: 0
 21836                           ;i2c_drv.c: 275: WriteByte(WritePacket->SlaveAddress);
 21837  000FEA  C076  FFD9         	movff	I2c_WriteData@WritePacket,fsr2l
 21838  000FEE  C077  FFDA         	movff	I2c_WriteData@WritePacket+1,fsr2h
 21839  000FF2  50DF               	movf	indf2,w,c
 21840  000FF4  EC97  F021         	call	_WriteByte
 21841                           
 21842                           ;i2c_drv.c: 277: I2cWriteState = TxCheckTxAddr;
 21843  000FF8  0E02               	movlw	2
 21844  000FFA  0100               	movlb	0	; () banked
 21845  000FFC  6FD5               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 21846  000FFE                     
 21847                           ; BSR set to: 0
 21848                           ;i2c_drv.c: 281: if (CheckTxStatus() == ((UINT8)(0)))
 21849                           
 21850                           ; BSR set to: 0
 21851  000FFE  ECA1  F021         	call	_CheckTxStatus	;wreg free
 21852  001002  0900               	iorlw	0
 21853  001004  A4D8               	btfss	status,2,c
 21854  001006  D08C               	goto	l162
 21855                           
 21856                           ;i2c_drv.c: 282: {
 21857                           ;i2c_drv.c: 284: I2cNextState = TxSendDataByte;
 21858  001008  0E03               	movlw	3
 21859  00100A  D01A               	goto	L39
 21860  00100C                     
 21861                           ; BSR set to: 0
 21862                           ;i2c_drv.c: 292: WriteByte(*(WritePacket->Buffer));
 21863                           
 21864                           ; BSR set to: 0
 21865  00100C  EE20 F002          	lfsr	2,2
 21866  001010  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 21867  001012  26D9               	addwf	fsr2l,f,c
 21868  001014  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 21869  001016  22DA               	addwfc	fsr2h,f,c
 21870  001018  CFDE F078          	movff	postinc2,??_I2c_WriteData
 21871  00101C  CFDD F079          	movff	postdec2,??_I2c_WriteData+1
 21872  001020  C078  FFD9         	movff	??_I2c_WriteData,fsr2l
 21873  001024  C079  FFDA         	movff	??_I2c_WriteData+1,fsr2h
 21874  001028  50DF               	movf	indf2,w,c
 21875  00102A  EC97  F021         	call	_WriteByte
 21876                           
 21877                           ;i2c_drv.c: 294: I2cWriteState = TxCheckTxData;
 21878  00102E  0E04               	movlw	4
 21879  001030  0100               	movlb	0	; () banked
 21880  001032  D04B               	goto	L37
 21881  001034                     
 21882                           ; BSR set to: 0
 21883                           ;i2c_drv.c: 299: if (CheckTxStatus() == ((UINT8)(0)))
 21884                           
 21885                           ; BSR set to: 0
 21886  001034  ECA1  F021         	call	_CheckTxStatus	;wreg free
 21887  001038  0900               	iorlw	0
 21888  00103A  A4D8               	btfss	status,2,c
 21889  00103C  D071               	goto	l162
 21890                           
 21891                           ;i2c_drv.c: 300: {
 21892                           ;i2c_drv.c: 302: I2cNextState = TxCheckLenght;
 21893  00103E  0E05               	movlw	5
 21894  001040                     L39:
 21895  001040  0100               	movlb	0	; () banked
 21896  001042  6FD4               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 21897                           
 21898                           ;i2c_drv.c: 304: I2cWriteState = TxCheckAck;
 21899  001044  0E08               	movlw	8
 21900  001046  D041               	goto	L37
 21901  001048                     
 21902                           ; BSR set to: 0
 21903                           ;i2c_drv.c: 309: if (WritePacket->Lenght > 0)
 21904                           
 21905                           ; BSR set to: 0
 21906  001048  EE20 F004          	lfsr	2,4
 21907  00104C  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 21908  00104E  26D9               	addwf	fsr2l,f,c
 21909  001050  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 21910  001052  22DA               	addwfc	fsr2h,f,c
 21911  001054  50DF               	movf	indf2,w,c
 21912  001056  B4D8               	btfsc	status,2,c
 21913  001058  D010               	goto	l170
 21914                           
 21915                           ; BSR set to: 0
 21916                           ;i2c_drv.c: 310: {
 21917                           ;i2c_drv.c: 312: (WritePacket->Lenght)--;
 21918  00105A  EE20 F004          	lfsr	2,4
 21919  00105E  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 21920  001060  26D9               	addwf	fsr2l,f,c
 21921  001062  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 21922  001064  22DA               	addwfc	fsr2h,f,c
 21923  001066  06DF               	decf	indf2,f,c
 21924                           
 21925                           ;i2c_drv.c: 314: WritePacket->Buffer++;
 21926  001068  EE20 F002          	lfsr	2,2
 21927  00106C  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 21928  00106E  26D9               	addwf	fsr2l,f,c
 21929  001070  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 21930  001072  22DA               	addwfc	fsr2h,f,c
 21931  001074  2ADE               	incf	postinc2,f,c
 21932  001076  0E00               	movlw	0
 21933  001078  22DD               	addwfc	postdec2,f,c
 21934  00107A                     l170:
 21935                           
 21936                           ; BSR set to: 0
 21937                           ;i2c_drv.c: 315: }
 21938                           ;i2c_drv.c: 318: if (WritePacket->Lenght == 0)
 21939  00107A  EE20 F004          	lfsr	2,4
 21940  00107E  5176               	movf	I2c_WriteData@WritePacket& (0+255),w,b
 21941  001080  26D9               	addwf	fsr2l,f,c
 21942  001082  5177               	movf	(I2c_WriteData@WritePacket+1)& (0+255),w,b
 21943  001084  22DA               	addwfc	fsr2h,f,c
 21944  001086  50DF               	movf	indf2,w,c
 21945  001088  A4D8               	btfss	status,2,c
 21946  00108A  D002               	goto	l171
 21947                           
 21948                           ; BSR set to: 0
 21949                           ;i2c_drv.c: 319: {
 21950                           ;i2c_drv.c: 321: I2cWriteState = TxAssertStop;
 21951  00108C  0E06               	movlw	6
 21952  00108E  D01D               	goto	L37
 21953  001090                     l171:
 21954                           
 21955                           ; BSR set to: 0
 21956                           ;i2c_drv.c: 323: else
 21957                           ;i2c_drv.c: 324: {
 21958                           ;i2c_drv.c: 326: I2cWriteState = TxSendDataByte;
 21959                           
 21960                           ; BSR set to: 0
 21961  001090  0E03               	movlw	3
 21962  001092  D01B               	goto	L37
 21963  001094                     
 21964                           ; BSR set to: 0
 21965                           ;i2c_drv.c: 332: StopCondition();
 21966                           
 21967                           ; BSR set to: 0
 21968  001094  ECB3  F021         	call	_StopCondition	;wreg free
 21969                           
 21970                           ;i2c_drv.c: 334: I2cWriteState = TxCompleted;
 21971  001098  0E07               	movlw	7
 21972  00109A  D7CA               	goto	L40
 21973  00109C                     
 21974                           ; BSR set to: 0
 21975                           ;i2c_drv.c: 339: I2cWriteState = TxAssertStart;
 21976                           
 21977                           ; BSR set to: 0
 21978  00109C  0E00               	movlw	0
 21979  00109E  6FD5               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 21980                           
 21981                           ;i2c_drv.c: 340: I2cNextState = TxAssertStart;
 21982  0010A0  0E00               	movlw	0
 21983  0010A2  6FD4               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 21984                           
 21985                           ;i2c_drv.c: 342: WriteStatus = I2cWriteOk;
 21986  0010A4  0E02               	movlw	2
 21987  0010A6  D01A               	goto	L38
 21988  0010A8                     
 21989                           ; BSR set to: 0
 21990                           ;i2c_drv.c: 347: TentativeCounter++;
 21991                           
 21992                           ; BSR set to: 0
 21993  0010A8  2BD3               	incf	I2c_WriteData@TentativeCounter& (0+255),f,b
 21994                           
 21995                           ; BSR set to: 0
 21996                           ;i2c_drv.c: 349: if (CheckAckStatus() == ((UINT8)(0)))
 21997  0010AA  ECA6  F021         	call	_CheckAckStatus	;wreg free
 21998  0010AE  0900               	iorlw	0
 21999  0010B0  A4D8               	btfss	status,2,c
 22000  0010B2  D006               	goto	l176
 22001                           
 22002                           ;i2c_drv.c: 350: {
 22003                           ;i2c_drv.c: 352: TentativeCounter = 0;
 22004  0010B4  0E00               	movlw	0
 22005  0010B6  0100               	movlb	0	; () banked
 22006  0010B8  6FD3               	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;i2c_drv.c: 354: I2cWriteState = I2cNextState;
 22010  0010BA  C0D4  F0D5         	movff	I2c_WriteData@I2cNextState,I2c_WriteData@I2cWriteState
 22011                           
 22012                           ;i2c_drv.c: 355: }
 22013  0010BE  D030               	goto	l162
 22014  0010C0                     l176:
 22015                           
 22016                           ;i2c_drv.c: 356: else
 22017                           ;i2c_drv.c: 357: {
 22018                           ;i2c_drv.c: 359: if (TentativeCounter >= ((UINT8)(3)))
 22019                           
 22020                           ; BSR set to: 0
 22021  0010C0  0E02               	movlw	2
 22022  0010C2  0100               	movlb	0	; () banked
 22023  0010C4  65D3               	cpfsgt	I2c_WriteData@TentativeCounter& (0+255),b
 22024  0010C6  D02C               	goto	l162
 22025                           
 22026                           ; BSR set to: 0
 22027                           ;i2c_drv.c: 360: {
 22028                           ;i2c_drv.c: 362: I2cWriteState = TxErrorStatus;
 22029  0010C8  0E09               	movlw	9
 22030  0010CA                     L37:
 22031  0010CA  6FD5               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 22032                           
 22033                           ; BSR set to: 0
 22034                           ;i2c_drv.c: 363: }
 22035                           ;i2c_drv.c: 364: }
 22036                           ;i2c_drv.c: 365: break;
 22037                           
 22038                           ; BSR set to: 0
 22039  0010CC  D029               	goto	l162
 22040  0010CE                     
 22041                           ; BSR set to: 0
 22042                           ;i2c_drv.c: 369: I2cWriteState = TxAssertStart;
 22043                           
 22044                           ; BSR set to: 0
 22045  0010CE  0E00               	movlw	0
 22046  0010D0  6FD5               	movwf	I2c_WriteData@I2cWriteState& (0+255),b
 22047                           
 22048                           ;i2c_drv.c: 370: I2cNextState = TxAssertStart;
 22049  0010D2  0E00               	movlw	0
 22050  0010D4  6FD4               	movwf	I2c_WriteData@I2cNextState& (0+255),b
 22051                           
 22052                           ;i2c_drv.c: 372: TentativeCounter = 0;
 22053  0010D6  0E00               	movlw	0
 22054  0010D8  6FD3               	movwf	I2c_WriteData@TentativeCounter& (0+255),b
 22055                           
 22056                           ;i2c_drv.c: 374: WriteStatus = I2cWriteNotOk;
 22057  0010DA  0E01               	movlw	1
 22058  0010DC                     L38:
 22059  0010DC  6FD2               	movwf	I2c_WriteData@WriteStatus& (0+255),b
 22060                           
 22061                           ; BSR set to: 0
 22062                           ;i2c_drv.c: 379: }
 22063                           
 22064                           ; BSR set to: 0
 22065                           ;i2c_drv.c: 378: break;
 22066                           
 22067                           ;i2c_drv.c: 377: default:
 22068                           
 22069                           ;i2c_drv.c: 375: break;
 22070  0010DE  D020               	goto	l162
 22071  0010E0                     l160:
 22072                           
 22073                           ; BSR set to: 0
 22074  0010E0  0100               	movlb	0	; () banked
 22075  0010E2  51D5               	movf	I2c_WriteData@I2cWriteState& (0+255),w,b
 22076                           
 22077                           ; Switch size 1, requested type "space"
 22078                           ; Number of cases is 10, Range of values is 0 to 9
 22079                           ; switch strategies available:
 22080                           ; Name         Instructions Cycles
 22081                           ; simple_byte           31    16 (average)
 22082                           ;	Chosen strategy is simple_byte
 22083  0010E4  0A00               	xorlw	0	; case 0
 22084  0010E6  B4D8               	btfsc	status,2,c
 22085  0010E8  D763               	goto	l161
 22086  0010EA  0A01               	xorlw	1	; case 1
 22087  0010EC  B4D8               	btfsc	status,2,c
 22088  0010EE  D767               	goto	l163
 22089  0010F0  0A03               	xorlw	3	; case 2
 22090  0010F2  B4D8               	btfsc	status,2,c
 22091  0010F4  D784               	goto	l164
 22092  0010F6  0A01               	xorlw	1	; case 3
 22093  0010F8  B4D8               	btfsc	status,2,c
 22094  0010FA  D788               	goto	l166
 22095  0010FC  0A07               	xorlw	7	; case 4
 22096  0010FE  B4D8               	btfsc	status,2,c
 22097  001100  D799               	goto	l167
 22098  001102  0A01               	xorlw	1	; case 5
 22099  001104  B4D8               	btfsc	status,2,c
 22100  001106  D7A0               	goto	l169
 22101  001108  0A03               	xorlw	3	; case 6
 22102  00110A  B4D8               	btfsc	status,2,c
 22103  00110C  D7C3               	goto	l173
 22104  00110E  0A01               	xorlw	1	; case 7
 22105  001110  B4D8               	btfsc	status,2,c
 22106  001112  D7C4               	goto	l174
 22107  001114  0A0F               	xorlw	15	; case 8
 22108  001116  B4D8               	btfsc	status,2,c
 22109  001118  D7C7               	goto	l175
 22110  00111A  0A01               	xorlw	1	; case 9
 22111  00111C  B4D8               	btfsc	status,2,c
 22112  00111E  D7D7               	goto	l179
 22113  001120                     l162:
 22114                           
 22115                           ;i2c_drv.c: 382: return WriteStatus;
 22116                           
 22117                           ; BSR set to: 0
 22118  001120  0100               	movlb	0	; () banked
 22119  001122  51D2               	movf	I2c_WriteData@WriteStatus& (0+255),w,b
 22120  001124  0012               	return	
 22121  001126                     __end_of_I2c_WriteData:
 22122                           	opt stack 0
 22123                           tosu	equ	0xFFF
 22124                           tosh	equ	0xFFE
 22125                           tosl	equ	0xFFD
 22126                           pclath	equ	0xFFA
 22127                           tblptru	equ	0xFF8
 22128                           tblptrh	equ	0xFF7
 22129                           tblptrl	equ	0xFF6
 22130                           tablat	equ	0xFF5
 22131                           prodh	equ	0xFF4
 22132                           prodl	equ	0xFF3
 22133                           intcon	equ	0xFF2
 22134                           intcon2	equ	0xFF1
 22135                           intcon3	equ	0xFF0
 22136                           indf0	equ	0xFEF
 22137                           postinc0	equ	0xFEE
 22138                           plusw0	equ	0xFEB
 22139                           fsr0h	equ	0xFEA
 22140                           fsr0l	equ	0xFE9
 22141                           wreg	equ	0xFE8
 22142                           indf1	equ	0xFE7
 22143                           postinc1	equ	0xFE6
 22144                           postdec1	equ	0xFE5
 22145                           fsr1h	equ	0xFE2
 22146                           fsr1l	equ	0xFE1
 22147                           indf2	equ	0xFDF
 22148                           postinc2	equ	0xFDE
 22149                           postdec2	equ	0xFDD
 22150                           plusw2	equ	0xFDB
 22151                           fsr2h	equ	0xFDA
 22152                           fsr2l	equ	0xFD9
 22153                           status	equ	0xFD8
 22154                           
 22155 ;; *************** function _I2c_ReadData *****************
 22156 ;; Defined at:
 22157 ;;		line 393 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 22158 ;; Parameters:    Size  Location     Type
 22159 ;;  ReadPacket      2   24[BANK0 ] PTR struct _I2cReadPacke
 22160 ;;		 -> I2cRxPacket(6), 
 22161 ;; Auto vars:     Size  Location     Type
 22162 ;;		None
 22163 ;; Return value:  Size  Location     Type
 22164 ;;                  1    wreg      enum E7787
 22165 ;; Registers used:
 22166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22167 ;; Tracked objects:
 22168 ;;		On entry : 0/0
 22169 ;;		On exit  : 0/0
 22170 ;;		Unchanged: 0/0
 22171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22174 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22175 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22176 ;;Total ram usage:        4 bytes
 22177 ;; Hardware stack levels used:    1
 22178 ;; Hardware stack levels required when called:   10
 22179 ;; This function calls:
 22180 ;;		_CheckAckStatus
 22181 ;;		_CheckTxStatus
 22182 ;;		_EnableReceiver
 22183 ;;		_GenerateEvt
 22184 ;;		_ReadByte
 22185 ;;		_SetAckStatus
 22186 ;;		_StartCondition
 22187 ;;		_StopCondition
 22188 ;;		_WriteByte
 22189 ;; This function is called by:
 22190 ;;		_I2cSendMsgSm
 22191 ;; This function uses a non-reentrant model
 22192 ;;
 22193                           
 22194                           	psect	text110
 22195  001126                     __ptext110:
 22196                           	opt stack 0
 22197  001126                     _I2c_ReadData:
 22198                           	opt stack 16
 22199                           
 22200                           ;i2c_drv.c: 396: static I2cReadStateType I2cReadState = RxAssertStart;
 22201                           ;i2c_drv.c: 397: static UINT8 DataCounter = 0;
 22202                           ;i2c_drv.c: 398: static UINT8 TentativeCounter = 0;
 22203                           ;i2c_drv.c: 400: static I2cReadStsType ReadStatus;
 22204                           ;i2c_drv.c: 402: switch (I2cReadState)
 22205                           
 22206                           ; BSR set to: 0
 22207                           ;incstack = 0
 22208  001126  D095               	goto	l192
 22209  001128                     
 22210                           ;i2c_drv.c: 406: StartCondition();
 22211  001128  ECB5  F021         	call	_StartCondition	;wreg free
 22212                           
 22213                           ;i2c_drv.c: 408: ReadStatus = I2cReadInProgress;
 22214  00112C  0E00               	movlw	0
 22215  00112E  0100               	movlb	0	; () banked
 22216  001130  6FCE               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 22217                           
 22218                           ; BSR set to: 0
 22219                           ;i2c_drv.c: 410: I2cReadState = RxSendSlaveAddr;
 22220  001132  0E01               	movlw	1
 22221  001134  D01F               	goto	L41
 22222  001136                     
 22223                           ; BSR set to: 0
 22224                           ;i2c_drv.c: 415: ReadPacket->SlaveAddress = ((ReadPacket->SlaveAddress) << 1) | ReadPack
      +                          et->ReadWrite;
 22225                           
 22226                           ; BSR set to: 0
 22227  001136  EE20 F001          	lfsr	2,1
 22228  00113A  5178               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 22229  00113C  26D9               	addwf	fsr2l,f,c
 22230  00113E  5179               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 22231  001140  22DA               	addwfc	fsr2h,f,c
 22232  001142  50DF               	movf	indf2,w,c
 22233  001144  6F7A               	movwf	??_I2c_ReadData& (0+255),b
 22234  001146  C078  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 22235  00114A  C079  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 22236  00114E  50DF               	movf	indf2,w,c
 22237  001150  6F7B               	movwf	(??_I2c_ReadData+1)& (0+255),b
 22238  001152  90D8               	bcf	status,0,c
 22239  001154  357B               	rlcf	(??_I2c_ReadData+1)& (0+255),w,b
 22240  001156  117A               	iorwf	??_I2c_ReadData& (0+255),w,b
 22241  001158  C078  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 22242  00115C  C079  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 22243  001160  6EDF               	movwf	indf2,c
 22244                           
 22245                           ; BSR set to: 0
 22246                           ;i2c_drv.c: 417: WriteByte(ReadPacket->SlaveAddress);
 22247  001162  C078  FFD9         	movff	I2c_ReadData@ReadPacket,fsr2l
 22248  001166  C079  FFDA         	movff	I2c_ReadData@ReadPacket+1,fsr2h
 22249  00116A  50DF               	movf	indf2,w,c
 22250  00116C  EC97  F021         	call	_WriteByte
 22251                           
 22252                           ;i2c_drv.c: 419: I2cReadState = RxCheckTxAddr;
 22253  001170  0E02               	movlw	2
 22254  001172  D068               	goto	L45
 22255  001174                     L41:
 22256  001174  6FD1               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 22257                           
 22258                           ;i2c_drv.c: 420: break;
 22259  001176  D08A               	goto	l194
 22260  001178                     
 22261                           ; BSR set to: 0
 22262                           ;i2c_drv.c: 424: if (CheckTxStatus() == ((UINT8)(0)))
 22263                           
 22264                           ; BSR set to: 0
 22265  001178  ECA1  F021         	call	_CheckTxStatus	;wreg free
 22266  00117C  0900               	iorlw	0
 22267  00117E  A4D8               	btfss	status,2,c
 22268  001180  D085               	goto	l194
 22269                           
 22270                           ;i2c_drv.c: 425: {
 22271                           ;i2c_drv.c: 427: I2cReadState = RxCheckAck;
 22272  001182  0E03               	movlw	3
 22273  001184  D05F               	goto	L45
 22274  001186                     
 22275                           ; BSR set to: 0
 22276                           ;i2c_drv.c: 433: TentativeCounter++;
 22277                           
 22278                           ; BSR set to: 0
 22279  001186  2BCF               	incf	I2c_ReadData@TentativeCounter& (0+255),f,b
 22280                           
 22281                           ; BSR set to: 0
 22282                           ;i2c_drv.c: 435: if (CheckAckStatus() == ((UINT8)(0)))
 22283  001188  ECA6  F021         	call	_CheckAckStatus	;wreg free
 22284  00118C  0900               	iorlw	0
 22285  00118E  A4D8               	btfss	status,2,c
 22286  001190  D005               	goto	l199
 22287                           
 22288                           ;i2c_drv.c: 436: {
 22289                           ;i2c_drv.c: 438: TentativeCounter = 0;
 22290  001192  0E00               	movlw	0
 22291  001194  0100               	movlb	0	; () banked
 22292  001196  6FCF               	movwf	I2c_ReadData@TentativeCounter& (0+255),b
 22293                           
 22294                           ;i2c_drv.c: 440: I2cReadState = RxGetData;
 22295  001198  0E04               	movlw	4
 22296  00119A  D7EC               	goto	L41
 22297  00119C                     l199:
 22298                           
 22299                           ;i2c_drv.c: 442: else
 22300                           ;i2c_drv.c: 443: {
 22301                           ;i2c_drv.c: 445: if (TentativeCounter >= ((UINT8)(3)))
 22302                           
 22303                           ; BSR set to: 0
 22304  00119C  0E02               	movlw	2
 22305  00119E  0100               	movlb	0	; () banked
 22306  0011A0  65CF               	cpfsgt	I2c_ReadData@TentativeCounter& (0+255),b
 22307  0011A2  D074               	goto	l194
 22308                           
 22309                           ; BSR set to: 0
 22310                           ;i2c_drv.c: 446: {
 22311                           ;i2c_drv.c: 448: I2cReadState = RxErrorStatus;
 22312  0011A4  0E08               	movlw	8
 22313  0011A6  D7E6               	goto	L41
 22314  0011A8                     
 22315                           ; BSR set to: 0
 22316                           ;i2c_drv.c: 455: EnableReceiver();
 22317                           
 22318                           ; BSR set to: 0
 22319  0011A8  ECB7  F021         	call	_EnableReceiver	;wreg free
 22320                           
 22321                           ;i2c_drv.c: 457: I2cReadState = RxReadData;
 22322  0011AC  0E05               	movlw	5
 22323  0011AE  D04A               	goto	L45
 22324  0011B0                     
 22325                           ; BSR set to: 0
 22326                           ;i2c_drv.c: 462: if (CheckTxStatus() == ((UINT8)(0)))
 22327                           
 22328                           ; BSR set to: 0
 22329  0011B0  ECA1  F021         	call	_CheckTxStatus	;wreg free
 22330  0011B4  0900               	iorlw	0
 22331  0011B6  A4D8               	btfss	status,2,c
 22332  0011B8  D069               	goto	l194
 22333                           
 22334                           ;i2c_drv.c: 463: {
 22335                           ;i2c_drv.c: 465: *(ReadPacket->Buffer) = ReadByte();
 22336  0011BA  0100               	movlb	0	; () banked
 22337  0011BC  EE20 F002          	lfsr	2,2
 22338  0011C0  5178               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 22339  0011C2  26D9               	addwf	fsr2l,f,c
 22340  0011C4  5179               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 22341  0011C6  22DA               	addwfc	fsr2h,f,c
 22342  0011C8  CFDE F07A          	movff	postinc2,??_I2c_ReadData
 22343  0011CC  CFDD F07B          	movff	postdec2,??_I2c_ReadData+1
 22344  0011D0  C07A  FFD9         	movff	??_I2c_ReadData,fsr2l
 22345  0011D4  C07B  FFDA         	movff	??_I2c_ReadData+1,fsr2h
 22346  0011D8  EC9C  F021         	call	_ReadByte	;wreg free
 22347  0011DC  6EDF               	movwf	indf2,c
 22348                           
 22349                           ;i2c_drv.c: 467: ReadPacket->Buffer++;
 22350  0011DE  0100               	movlb	0	; () banked
 22351  0011E0  EE20 F002          	lfsr	2,2
 22352  0011E4  5178               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 22353  0011E6  26D9               	addwf	fsr2l,f,c
 22354  0011E8  5179               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 22355  0011EA  22DA               	addwfc	fsr2h,f,c
 22356  0011EC  2ADE               	incf	postinc2,f,c
 22357  0011EE  0E00               	movlw	0
 22358  0011F0  22DD               	addwfc	postdec2,f,c
 22359                           
 22360                           ; BSR set to: 0
 22361                           ;i2c_drv.c: 469: DataCounter++;
 22362  0011F2  2BD0               	incf	I2c_ReadData@DataCounter& (0+255),f,b
 22363                           
 22364                           ; BSR set to: 0
 22365                           ;i2c_drv.c: 471: I2cReadState = RxCheckLen;
 22366  0011F4  0E06               	movlw	6
 22367  0011F6  D7BE               	goto	L41
 22368  0011F8                     
 22369                           ; BSR set to: 0
 22370                           ;i2c_drv.c: 477: if (DataCounter >= ReadPacket->Lenght)
 22371                           
 22372                           ; BSR set to: 0
 22373  0011F8  EE20 F004          	lfsr	2,4
 22374  0011FC  5178               	movf	I2c_ReadData@ReadPacket& (0+255),w,b
 22375  0011FE  26D9               	addwf	fsr2l,f,c
 22376  001200  5179               	movf	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 22377  001202  22DA               	addwfc	fsr2h,f,c
 22378  001204  50DE               	movf	postinc2,w,c
 22379  001206  5DD0               	subwf	I2c_ReadData@DataCounter& (0+255),w,b
 22380  001208  A0D8               	btfss	status,0,c
 22381  00120A  D009               	goto	l206
 22382                           
 22383                           ; BSR set to: 0
 22384                           ;i2c_drv.c: 478: {
 22385                           ;i2c_drv.c: 480: SetAckStatus(((UINT8)(1)));
 22386  00120C  0E01               	movlw	1
 22387  00120E  EC51  F021         	call	_SetAckStatus
 22388                           
 22389                           ;i2c_drv.c: 482: I2cReadState = RxAssertStop;
 22390  001212  0E07               	movlw	7
 22391  001214  0100               	movlb	0	; () banked
 22392  001216  6FD1               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 22393                           
 22394                           ; BSR set to: 0
 22395                           ;i2c_drv.c: 484: DataCounter = 0;
 22396  001218  0E00               	movlw	0
 22397  00121A  6FD0               	movwf	I2c_ReadData@DataCounter& (0+255),b
 22398                           
 22399                           ;i2c_drv.c: 485: }
 22400  00121C  D037               	goto	l194
 22401  00121E                     l206:
 22402                           
 22403                           ; BSR set to: 0
 22404                           ;i2c_drv.c: 486: else
 22405                           ;i2c_drv.c: 487: {
 22406                           ;i2c_drv.c: 489: SetAckStatus(((UINT8)(0)));
 22407                           
 22408                           ; BSR set to: 0
 22409  00121E  0E00               	movlw	0
 22410  001220  EC51  F021         	call	_SetAckStatus
 22411                           
 22412                           ;i2c_drv.c: 491: I2cReadState = RxGetData;
 22413  001224  0E04               	movlw	4
 22414  001226  D00E               	goto	L45
 22415  001228                     
 22416                           ; BSR set to: 0
 22417                           ;i2c_drv.c: 497: StopCondition();
 22418                           
 22419                           ; BSR set to: 0
 22420  001228  ECB3  F021         	call	_StopCondition	;wreg free
 22421                           
 22422                           ;i2c_drv.c: 499: ReadStatus = I2cReadOk;
 22423  00122C  0E02               	movlw	2
 22424  00122E  0100               	movlb	0	; () banked
 22425  001230  6FCE               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 22426                           
 22427                           ; BSR set to: 0
 22428                           ;i2c_drv.c: 501: GenerateEvt(&(ReadPacket->ReadCompleteEvt));
 22429  001232  0E05               	movlw	5
 22430  001234  2578               	addwf	I2c_ReadData@ReadPacket& (0+255),w,b
 22431  001236  6F75               	movwf	GenerateEvt@Event& (0+255),b
 22432  001238  0E00               	movlw	0
 22433  00123A  2179               	addwfc	(I2c_ReadData@ReadPacket+1)& (0+255),w,b
 22434  00123C  6F76               	movwf	(GenerateEvt@Event+1)& (0+255),b
 22435  00123E  EC24  F021         	call	_GenerateEvt	;wreg free
 22436                           
 22437                           ;i2c_drv.c: 503: I2cReadState = RxAssertStart;
 22438  001242  0E00               	movlw	0
 22439  001244                     L45:
 22440  001244  0100               	movlb	0	; () banked
 22441  001246  D796               	goto	L41
 22442  001248                     
 22443                           ; BSR set to: 0
 22444                           ;i2c_drv.c: 508: I2cReadState = RxAssertStart;
 22445                           
 22446                           ; BSR set to: 0
 22447  001248  0E00               	movlw	0
 22448  00124A  6FD1               	movwf	I2c_ReadData@I2cReadState& (0+255),b
 22449                           
 22450                           ;i2c_drv.c: 510: ReadStatus = I2cReadNotOk;
 22451  00124C  0E01               	movlw	1
 22452  00124E  6FCE               	movwf	I2c_ReadData@ReadStatus& (0+255),b
 22453                           
 22454                           ; BSR set to: 0
 22455                           ;i2c_drv.c: 515: }
 22456                           
 22457                           ; BSR set to: 0
 22458                           ;i2c_drv.c: 514: break;
 22459                           
 22460                           ;i2c_drv.c: 513: default:
 22461                           
 22462                           ;i2c_drv.c: 511: break;
 22463  001250  D01D               	goto	l194
 22464  001252                     l192:
 22465                           
 22466                           ; BSR set to: 0
 22467  001252  0100               	movlb	0	; () banked
 22468  001254  51D1               	movf	I2c_ReadData@I2cReadState& (0+255),w,b
 22469                           
 22470                           ; Switch size 1, requested type "space"
 22471                           ; Number of cases is 9, Range of values is 0 to 8
 22472                           ; switch strategies available:
 22473                           ; Name         Instructions Cycles
 22474                           ; simple_byte           28    15 (average)
 22475                           ;	Chosen strategy is simple_byte
 22476  001256  0A00               	xorlw	0	; case 0
 22477  001258  B4D8               	btfsc	status,2,c
 22478  00125A  D766               	goto	l193
 22479  00125C  0A01               	xorlw	1	; case 1
 22480  00125E  B4D8               	btfsc	status,2,c
 22481  001260  D76A               	goto	l195
 22482  001262  0A03               	xorlw	3	; case 2
 22483  001264  B4D8               	btfsc	status,2,c
 22484  001266  D788               	goto	l196
 22485  001268  0A01               	xorlw	1	; case 3
 22486  00126A  B4D8               	btfsc	status,2,c
 22487  00126C  D78C               	goto	l198
 22488  00126E  0A07               	xorlw	7	; case 4
 22489  001270  B4D8               	btfsc	status,2,c
 22490  001272  D79A               	goto	l202
 22491  001274  0A01               	xorlw	1	; case 5
 22492  001276  B4D8               	btfsc	status,2,c
 22493  001278  D79B               	goto	l203
 22494  00127A  0A03               	xorlw	3	; case 6
 22495  00127C  B4D8               	btfsc	status,2,c
 22496  00127E  D7BC               	goto	l205
 22497  001280  0A01               	xorlw	1	; case 7
 22498  001282  B4D8               	btfsc	status,2,c
 22499  001284  D7D1               	goto	l208
 22500  001286  0A0F               	xorlw	15	; case 8
 22501  001288  B4D8               	btfsc	status,2,c
 22502  00128A  D7DE               	goto	l209
 22503  00128C                     l194:
 22504                           
 22505                           ;i2c_drv.c: 518: return ReadStatus;
 22506                           
 22507                           ; BSR set to: 0
 22508  00128C  0100               	movlb	0	; () banked
 22509  00128E  51CE               	movf	I2c_ReadData@ReadStatus& (0+255),w,b
 22510  001290  0012               	return	
 22511  001292                     __end_of_I2c_ReadData:
 22512                           	opt stack 0
 22513                           tosu	equ	0xFFF
 22514                           tosh	equ	0xFFE
 22515                           tosl	equ	0xFFD
 22516                           pclath	equ	0xFFA
 22517                           tblptru	equ	0xFF8
 22518                           tblptrh	equ	0xFF7
 22519                           tblptrl	equ	0xFF6
 22520                           tablat	equ	0xFF5
 22521                           prodh	equ	0xFF4
 22522                           prodl	equ	0xFF3
 22523                           intcon	equ	0xFF2
 22524                           intcon2	equ	0xFF1
 22525                           intcon3	equ	0xFF0
 22526                           indf0	equ	0xFEF
 22527                           postinc0	equ	0xFEE
 22528                           plusw0	equ	0xFEB
 22529                           fsr0h	equ	0xFEA
 22530                           fsr0l	equ	0xFE9
 22531                           wreg	equ	0xFE8
 22532                           indf1	equ	0xFE7
 22533                           postinc1	equ	0xFE6
 22534                           postdec1	equ	0xFE5
 22535                           fsr1h	equ	0xFE2
 22536                           fsr1l	equ	0xFE1
 22537                           indf2	equ	0xFDF
 22538                           postinc2	equ	0xFDE
 22539                           postdec2	equ	0xFDD
 22540                           plusw2	equ	0xFDB
 22541                           fsr2h	equ	0xFDA
 22542                           fsr2l	equ	0xFD9
 22543                           status	equ	0xFD8
 22544                           
 22545 ;; *************** function _WriteByte *****************
 22546 ;; Defined at:
 22547 ;;		line 190 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 22548 ;; Parameters:    Size  Location     Type
 22549 ;;  Byte            1    wreg     unsigned char 
 22550 ;; Auto vars:     Size  Location     Type
 22551 ;;  Byte            1   21[BANK0 ] unsigned char 
 22552 ;; Return value:  Size  Location     Type
 22553 ;;                  1    wreg      void 
 22554 ;; Registers used:
 22555 ;;		wreg
 22556 ;; Tracked objects:
 22557 ;;		On entry : 0/0
 22558 ;;		On exit  : 0/0
 22559 ;;		Unchanged: 0/0
 22560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22562 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22564 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22565 ;;Total ram usage:        1 bytes
 22566 ;; Hardware stack levels used:    1
 22567 ;; Hardware stack levels required when called:    9
 22568 ;; This function calls:
 22569 ;;		Nothing
 22570 ;; This function is called by:
 22571 ;;		_I2c_WriteData
 22572 ;;		_I2c_ReadData
 22573 ;; This function uses a non-reentrant model
 22574 ;;
 22575                           
 22576                           	psect	text111
 22577  00432E                     __ptext111:
 22578                           	opt stack 0
 22579  00432E                     _WriteByte:
 22580                           	opt stack 16
 22581                           
 22582                           ; BSR set to: 0
 22583                           ;incstack = 0
 22584                           ;WriteByte@Byte stored from wreg
 22585  00432E  0100               	movlb	0	; () banked
 22586  004330  6F75               	movwf	WriteByte@Byte& (0+255),b
 22587                           
 22588                           ;i2c_drv.c: 193: SSP2BUF = Byte;
 22589  004332  C075  FF75         	movff	WriteByte@Byte,3957	;volatile
 22590  004336  0012               	return		;funcret
 22591  004338                     __end_of_WriteByte:
 22592                           	opt stack 0
 22593                           tosu	equ	0xFFF
 22594                           tosh	equ	0xFFE
 22595                           tosl	equ	0xFFD
 22596                           pclath	equ	0xFFA
 22597                           tblptru	equ	0xFF8
 22598                           tblptrh	equ	0xFF7
 22599                           tblptrl	equ	0xFF6
 22600                           tablat	equ	0xFF5
 22601                           prodh	equ	0xFF4
 22602                           prodl	equ	0xFF3
 22603                           intcon	equ	0xFF2
 22604                           intcon2	equ	0xFF1
 22605                           intcon3	equ	0xFF0
 22606                           indf0	equ	0xFEF
 22607                           postinc0	equ	0xFEE
 22608                           plusw0	equ	0xFEB
 22609                           fsr0h	equ	0xFEA
 22610                           fsr0l	equ	0xFE9
 22611                           wreg	equ	0xFE8
 22612                           indf1	equ	0xFE7
 22613                           postinc1	equ	0xFE6
 22614                           postdec1	equ	0xFE5
 22615                           fsr1h	equ	0xFE2
 22616                           fsr1l	equ	0xFE1
 22617                           indf2	equ	0xFDF
 22618                           postinc2	equ	0xFDE
 22619                           postdec2	equ	0xFDD
 22620                           plusw2	equ	0xFDB
 22621                           fsr2h	equ	0xFDA
 22622                           fsr2l	equ	0xFD9
 22623                           status	equ	0xFD8
 22624                           
 22625 ;; *************** function _StopCondition *****************
 22626 ;; Defined at:
 22627 ;;		line 120 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 22628 ;; Parameters:    Size  Location     Type
 22629 ;;		None
 22630 ;; Auto vars:     Size  Location     Type
 22631 ;;		None
 22632 ;; Return value:  Size  Location     Type
 22633 ;;                  1    wreg      void 
 22634 ;; Registers used:
 22635 ;;		status,2, status,0
 22636 ;; Tracked objects:
 22637 ;;		On entry : 0/0
 22638 ;;		On exit  : 0/0
 22639 ;;		Unchanged: 0/0
 22640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22645 ;;Total ram usage:        0 bytes
 22646 ;; Hardware stack levels used:    1
 22647 ;; Hardware stack levels required when called:    9
 22648 ;; This function calls:
 22649 ;;		Nothing
 22650 ;; This function is called by:
 22651 ;;		_I2c_WriteData
 22652 ;;		_I2c_ReadData
 22653 ;; This function uses a non-reentrant model
 22654 ;;
 22655                           
 22656                           	psect	text112
 22657  004366                     __ptext112:
 22658                           	opt stack 0
 22659  004366                     _StopCondition:
 22660                           	opt stack 16
 22661                           
 22662                           ;i2c_drv.c: 123: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(2)));
 22663                           
 22664                           ;incstack = 0
 22665  004366  8471               	bsf	3953,2,c	;volatile
 22666  004368  0012               	return		;funcret
 22667  00436A                     __end_of_StopCondition:
 22668                           	opt stack 0
 22669                           tosu	equ	0xFFF
 22670                           tosh	equ	0xFFE
 22671                           tosl	equ	0xFFD
 22672                           pclath	equ	0xFFA
 22673                           tblptru	equ	0xFF8
 22674                           tblptrh	equ	0xFF7
 22675                           tblptrl	equ	0xFF6
 22676                           tablat	equ	0xFF5
 22677                           prodh	equ	0xFF4
 22678                           prodl	equ	0xFF3
 22679                           intcon	equ	0xFF2
 22680                           intcon2	equ	0xFF1
 22681                           intcon3	equ	0xFF0
 22682                           indf0	equ	0xFEF
 22683                           postinc0	equ	0xFEE
 22684                           plusw0	equ	0xFEB
 22685                           fsr0h	equ	0xFEA
 22686                           fsr0l	equ	0xFE9
 22687                           wreg	equ	0xFE8
 22688                           indf1	equ	0xFE7
 22689                           postinc1	equ	0xFE6
 22690                           postdec1	equ	0xFE5
 22691                           fsr1h	equ	0xFE2
 22692                           fsr1l	equ	0xFE1
 22693                           indf2	equ	0xFDF
 22694                           postinc2	equ	0xFDE
 22695                           postdec2	equ	0xFDD
 22696                           plusw2	equ	0xFDB
 22697                           fsr2h	equ	0xFDA
 22698                           fsr2l	equ	0xFD9
 22699                           status	equ	0xFD8
 22700                           
 22701 ;; *************** function _StartCondition *****************
 22702 ;; Defined at:
 22703 ;;		line 92 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 22704 ;; Parameters:    Size  Location     Type
 22705 ;;		None
 22706 ;; Auto vars:     Size  Location     Type
 22707 ;;		None
 22708 ;; Return value:  Size  Location     Type
 22709 ;;                  1    wreg      void 
 22710 ;; Registers used:
 22711 ;;		status,2, status,0
 22712 ;; Tracked objects:
 22713 ;;		On entry : 0/0
 22714 ;;		On exit  : 0/0
 22715 ;;		Unchanged: 0/0
 22716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22721 ;;Total ram usage:        0 bytes
 22722 ;; Hardware stack levels used:    1
 22723 ;; Hardware stack levels required when called:    9
 22724 ;; This function calls:
 22725 ;;		Nothing
 22726 ;; This function is called by:
 22727 ;;		_I2c_WriteData
 22728 ;;		_I2c_ReadData
 22729 ;; This function uses a non-reentrant model
 22730 ;;
 22731                           
 22732                           	psect	text113
 22733  00436A                     __ptext113:
 22734                           	opt stack 0
 22735  00436A                     _StartCondition:
 22736                           	opt stack 16
 22737                           
 22738                           ;i2c_drv.c: 95: SSP2CON2 |= (((UINT8)(1)) << ((UINT8)(0)));
 22739                           
 22740                           ;incstack = 0
 22741  00436A  8071               	bsf	3953,0,c	;volatile
 22742  00436C  0012               	return		;funcret
 22743  00436E                     __end_of_StartCondition:
 22744                           	opt stack 0
 22745                           tosu	equ	0xFFF
 22746                           tosh	equ	0xFFE
 22747                           tosl	equ	0xFFD
 22748                           pclath	equ	0xFFA
 22749                           tblptru	equ	0xFF8
 22750                           tblptrh	equ	0xFF7
 22751                           tblptrl	equ	0xFF6
 22752                           tablat	equ	0xFF5
 22753                           prodh	equ	0xFF4
 22754                           prodl	equ	0xFF3
 22755                           intcon	equ	0xFF2
 22756                           intcon2	equ	0xFF1
 22757                           intcon3	equ	0xFF0
 22758                           indf0	equ	0xFEF
 22759                           postinc0	equ	0xFEE
 22760                           plusw0	equ	0xFEB
 22761                           fsr0h	equ	0xFEA
 22762                           fsr0l	equ	0xFE9
 22763                           wreg	equ	0xFE8
 22764                           indf1	equ	0xFE7
 22765                           postinc1	equ	0xFE6
 22766                           postdec1	equ	0xFE5
 22767                           fsr1h	equ	0xFE2
 22768                           fsr1l	equ	0xFE1
 22769                           indf2	equ	0xFDF
 22770                           postinc2	equ	0xFDE
 22771                           postdec2	equ	0xFDD
 22772                           plusw2	equ	0xFDB
 22773                           fsr2h	equ	0xFDA
 22774                           fsr2l	equ	0xFD9
 22775                           status	equ	0xFD8
 22776                           
 22777 ;; *************** function _SetAckStatus *****************
 22778 ;; Defined at:
 22779 ;;		line 162 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 22780 ;; Parameters:    Size  Location     Type
 22781 ;;  AckSts          1    wreg     unsigned char 
 22782 ;; Auto vars:     Size  Location     Type
 22783 ;;  AckSts          1   21[BANK0 ] unsigned char 
 22784 ;; Return value:  Size  Location     Type
 22785 ;;                  1    wreg      void 
 22786 ;; Registers used:
 22787 ;;		wreg
 22788 ;; Tracked objects:
 22789 ;;		On entry : 0/0
 22790 ;;		On exit  : 0/0
 22791 ;;		Unchanged: 0/0
 22792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22797 ;;Total ram usage:        1 bytes
 22798 ;; Hardware stack levels used:    1
 22799 ;; Hardware stack levels required when called:    9
 22800 ;; This function calls:
 22801 ;;		Nothing
 22802 ;; This function is called by:
 22803 ;;		_I2c_ReadData
 22804 ;; This function uses a non-reentrant model
 22805 ;;
 22806                           
 22807                           	psect	text114
 22808  0042A2                     __ptext114:
 22809                           	opt stack 0
 22810  0042A2                     _SetAckStatus:
 22811                           	opt stack 16
 22812                           
 22813                           ;incstack = 0
 22814                           ;SetAckStatus@AckSts stored from wreg
 22815  0042A2  0100               	movlb	0	; () banked
 22816  0042A4  6F75               	movwf	SetAckStatus@AckSts& (0+255),b
 22817                           
 22818                           ;i2c_drv.c: 165: SSP2CON2bits.ACKDT = AckSts;
 22819  0042A6  0100               	movlb	0	; () banked
 22820  0042A8  B175               	btfsc	SetAckStatus@AckSts& (0+255),0,b
 22821  0042AA  D002               	bra	u4965
 22822  0042AC  9A71               	bcf	3953,5,c	;volatile
 22823  0042AE  D001               	bra	u4966
 22824  0042B0                     u4965:
 22825  0042B0  8A71               	bsf	3953,5,c	;volatile
 22826  0042B2                     u4966:
 22827                           
 22828                           ;i2c_drv.c: 166: SSP2CON2bits.ACKEN = ((UINT8)(1));
 22829  0042B2  8871               	bsf	3953,4,c	;volatile
 22830  0042B4  0012               	return		;funcret
 22831  0042B6                     __end_of_SetAckStatus:
 22832                           	opt stack 0
 22833                           tosu	equ	0xFFF
 22834                           tosh	equ	0xFFE
 22835                           tosl	equ	0xFFD
 22836                           pclath	equ	0xFFA
 22837                           tblptru	equ	0xFF8
 22838                           tblptrh	equ	0xFF7
 22839                           tblptrl	equ	0xFF6
 22840                           tablat	equ	0xFF5
 22841                           prodh	equ	0xFF4
 22842                           prodl	equ	0xFF3
 22843                           intcon	equ	0xFF2
 22844                           intcon2	equ	0xFF1
 22845                           intcon3	equ	0xFF0
 22846                           indf0	equ	0xFEF
 22847                           postinc0	equ	0xFEE
 22848                           plusw0	equ	0xFEB
 22849                           fsr0h	equ	0xFEA
 22850                           fsr0l	equ	0xFE9
 22851                           wreg	equ	0xFE8
 22852                           indf1	equ	0xFE7
 22853                           postinc1	equ	0xFE6
 22854                           postdec1	equ	0xFE5
 22855                           fsr1h	equ	0xFE2
 22856                           fsr1l	equ	0xFE1
 22857                           indf2	equ	0xFDF
 22858                           postinc2	equ	0xFDE
 22859                           postdec2	equ	0xFDD
 22860                           plusw2	equ	0xFDB
 22861                           fsr2h	equ	0xFDA
 22862                           fsr2l	equ	0xFD9
 22863                           status	equ	0xFD8
 22864                           
 22865 ;; *************** function _ReadByte *****************
 22866 ;; Defined at:
 22867 ;;		line 204 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 22868 ;; Parameters:    Size  Location     Type
 22869 ;;		None
 22870 ;; Auto vars:     Size  Location     Type
 22871 ;;  Byte            1   21[BANK0 ] unsigned char 
 22872 ;; Return value:  Size  Location     Type
 22873 ;;                  1    wreg      unsigned char 
 22874 ;; Registers used:
 22875 ;;		wreg, status,2
 22876 ;; Tracked objects:
 22877 ;;		On entry : 0/0
 22878 ;;		On exit  : 0/0
 22879 ;;		Unchanged: 0/0
 22880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22882 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22884 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22885 ;;Total ram usage:        1 bytes
 22886 ;; Hardware stack levels used:    1
 22887 ;; Hardware stack levels required when called:    9
 22888 ;; This function calls:
 22889 ;;		Nothing
 22890 ;; This function is called by:
 22891 ;;		_I2c_ReadData
 22892 ;; This function uses a non-reentrant model
 22893 ;;
 22894                           
 22895                           	psect	text115
 22896  004338                     __ptext115:
 22897                           	opt stack 0
 22898  004338                     _ReadByte:
 22899                           	opt stack 16
 22900                           
 22901                           ;i2c_drv.c: 207: UINT8 Byte;
 22902                           ;i2c_drv.c: 210: Byte = SSP2BUF;
 22903                           
 22904                           ;incstack = 0
 22905  004338  CF75 F075          	movff	3957,ReadByte@Byte	;volatile
 22906                           
 22907                           ;i2c_drv.c: 213: return Byte;
 22908  00433C  0100               	movlb	0	; () banked
 22909  00433E  5175               	movf	ReadByte@Byte& (0+255),w,b
 22910  004340  0012               	return	
 22911  004342                     __end_of_ReadByte:
 22912                           	opt stack 0
 22913                           tosu	equ	0xFFF
 22914                           tosh	equ	0xFFE
 22915                           tosl	equ	0xFFD
 22916                           pclath	equ	0xFFA
 22917                           tblptru	equ	0xFF8
 22918                           tblptrh	equ	0xFF7
 22919                           tblptrl	equ	0xFF6
 22920                           tablat	equ	0xFF5
 22921                           prodh	equ	0xFF4
 22922                           prodl	equ	0xFF3
 22923                           intcon	equ	0xFF2
 22924                           intcon2	equ	0xFF1
 22925                           intcon3	equ	0xFF0
 22926                           indf0	equ	0xFEF
 22927                           postinc0	equ	0xFEE
 22928                           plusw0	equ	0xFEB
 22929                           fsr0h	equ	0xFEA
 22930                           fsr0l	equ	0xFE9
 22931                           wreg	equ	0xFE8
 22932                           indf1	equ	0xFE7
 22933                           postinc1	equ	0xFE6
 22934                           postdec1	equ	0xFE5
 22935                           fsr1h	equ	0xFE2
 22936                           fsr1l	equ	0xFE1
 22937                           indf2	equ	0xFDF
 22938                           postinc2	equ	0xFDE
 22939                           postdec2	equ	0xFDD
 22940                           plusw2	equ	0xFDB
 22941                           fsr2h	equ	0xFDA
 22942                           fsr2l	equ	0xFD9
 22943                           status	equ	0xFD8
 22944                           
 22945 ;; *************** function _GenerateEvt *****************
 22946 ;; Defined at:
 22947 ;;		line 75 in file "../../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 22948 ;; Parameters:    Size  Location     Type
 22949 ;;  Event           2   21[BANK0 ] PTR struct EventStructur
 22950 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 22951 ;; Auto vars:     Size  Location     Type
 22952 ;;  EventStatus     1   23[BANK0 ] enum E7727
 22953 ;; Return value:  Size  Location     Type
 22954 ;;                  1    wreg      enum E7699
 22955 ;; Registers used:
 22956 ;;		wreg, fsr2l, fsr2h, status,2
 22957 ;; Tracked objects:
 22958 ;;		On entry : 0/0
 22959 ;;		On exit  : 0/0
 22960 ;;		Unchanged: 0/0
 22961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 22962 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22965 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 22966 ;;Total ram usage:        3 bytes
 22967 ;; Hardware stack levels used:    1
 22968 ;; Hardware stack levels required when called:    9
 22969 ;; This function calls:
 22970 ;;		Nothing
 22971 ;; This function is called by:
 22972 ;;		_I2c_ReadData
 22973 ;;		_I2cSlv_SendI2cMsg
 22974 ;;		_I2cSlv_ReceiveI2cMsg
 22975 ;;		_Alarm
 22976 ;; This function uses a non-reentrant model
 22977 ;;
 22978                           
 22979                           	psect	text116
 22980  004248                     __ptext116:
 22981                           	opt stack 0
 22982  004248                     _GenerateEvt:
 22983                           	opt stack 15
 22984                           
 22985                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 22986                           
 22987                           ; BSR set to: 0
 22988                           ;incstack = 0
 22989  004248  0E00               	movlw	0
 22990  00424A  0100               	movlb	0	; () banked
 22991  00424C  6F77               	movwf	GenerateEvt@EventStatus& (0+255),b
 22992                           
 22993                           ; BSR set to: 0
 22994                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 22995  00424E  C075  FFD9         	movff	GenerateEvt@Event,fsr2l
 22996  004252  C076  FFDA         	movff	GenerateEvt@Event+1,fsr2h
 22997  004256  0E02               	movlw	2
 22998  004258  6EDF               	movwf	indf2,c
 22999                           
 23000                           ; BSR set to: 0
 23001                           ;os_ser.c: 83: EventStatus = EventSent;
 23002  00425A  0E02               	movlw	2
 23003  00425C  6F77               	movwf	GenerateEvt@EventStatus& (0+255),b
 23004  00425E  0012               	return	
 23005  004260                     __end_of_GenerateEvt:
 23006                           	opt stack 0
 23007                           tosu	equ	0xFFF
 23008                           tosh	equ	0xFFE
 23009                           tosl	equ	0xFFD
 23010                           pclath	equ	0xFFA
 23011                           tblptru	equ	0xFF8
 23012                           tblptrh	equ	0xFF7
 23013                           tblptrl	equ	0xFF6
 23014                           tablat	equ	0xFF5
 23015                           prodh	equ	0xFF4
 23016                           prodl	equ	0xFF3
 23017                           intcon	equ	0xFF2
 23018                           intcon2	equ	0xFF1
 23019                           intcon3	equ	0xFF0
 23020                           indf0	equ	0xFEF
 23021                           postinc0	equ	0xFEE
 23022                           plusw0	equ	0xFEB
 23023                           fsr0h	equ	0xFEA
 23024                           fsr0l	equ	0xFE9
 23025                           wreg	equ	0xFE8
 23026                           indf1	equ	0xFE7
 23027                           postinc1	equ	0xFE6
 23028                           postdec1	equ	0xFE5
 23029                           fsr1h	equ	0xFE2
 23030                           fsr1l	equ	0xFE1
 23031                           indf2	equ	0xFDF
 23032                           postinc2	equ	0xFDE
 23033                           postdec2	equ	0xFDD
 23034                           plusw2	equ	0xFDB
 23035                           fsr2h	equ	0xFDA
 23036                           fsr2l	equ	0xFD9
 23037                           status	equ	0xFD8
 23038                           
 23039 ;; *************** function _EnableReceiver *****************
 23040 ;; Defined at:
 23041 ;;		line 177 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 23042 ;; Parameters:    Size  Location     Type
 23043 ;;		None
 23044 ;; Auto vars:     Size  Location     Type
 23045 ;;		None
 23046 ;; Return value:  Size  Location     Type
 23047 ;;                  1    wreg      void 
 23048 ;; Registers used:
 23049 ;;		status,2, status,0
 23050 ;; Tracked objects:
 23051 ;;		On entry : 0/0
 23052 ;;		On exit  : 0/0
 23053 ;;		Unchanged: 0/0
 23054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23059 ;;Total ram usage:        0 bytes
 23060 ;; Hardware stack levels used:    1
 23061 ;; Hardware stack levels required when called:    9
 23062 ;; This function calls:
 23063 ;;		Nothing
 23064 ;; This function is called by:
 23065 ;;		_I2c_ReadData
 23066 ;; This function uses a non-reentrant model
 23067 ;;
 23068                           
 23069                           	psect	text117
 23070  00436E                     __ptext117:
 23071                           	opt stack 0
 23072  00436E                     _EnableReceiver:
 23073                           	opt stack 16
 23074                           
 23075                           ;i2c_drv.c: 179: SSP2CON2 |= ((((UINT8)(1)) << ((UINT8)(3))) & ((UINT8)(0x08)));
 23076                           
 23077                           ; BSR set to: 0
 23078                           ;incstack = 0
 23079  00436E  8671               	bsf	3953,3,c	;volatile
 23080  004370  0012               	return		;funcret
 23081  004372                     __end_of_EnableReceiver:
 23082                           	opt stack 0
 23083                           tosu	equ	0xFFF
 23084                           tosh	equ	0xFFE
 23085                           tosl	equ	0xFFD
 23086                           pclath	equ	0xFFA
 23087                           tblptru	equ	0xFF8
 23088                           tblptrh	equ	0xFF7
 23089                           tblptrl	equ	0xFF6
 23090                           tablat	equ	0xFF5
 23091                           prodh	equ	0xFF4
 23092                           prodl	equ	0xFF3
 23093                           intcon	equ	0xFF2
 23094                           intcon2	equ	0xFF1
 23095                           intcon3	equ	0xFF0
 23096                           indf0	equ	0xFEF
 23097                           postinc0	equ	0xFEE
 23098                           plusw0	equ	0xFEB
 23099                           fsr0h	equ	0xFEA
 23100                           fsr0l	equ	0xFE9
 23101                           wreg	equ	0xFE8
 23102                           indf1	equ	0xFE7
 23103                           postinc1	equ	0xFE6
 23104                           postdec1	equ	0xFE5
 23105                           fsr1h	equ	0xFE2
 23106                           fsr1l	equ	0xFE1
 23107                           indf2	equ	0xFDF
 23108                           postinc2	equ	0xFDE
 23109                           postdec2	equ	0xFDD
 23110                           plusw2	equ	0xFDB
 23111                           fsr2h	equ	0xFDA
 23112                           fsr2l	equ	0xFD9
 23113                           status	equ	0xFD8
 23114                           
 23115 ;; *************** function _CheckTxStatus *****************
 23116 ;; Defined at:
 23117 ;;		line 148 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 23118 ;; Parameters:    Size  Location     Type
 23119 ;;		None
 23120 ;; Auto vars:     Size  Location     Type
 23121 ;;		None
 23122 ;; Return value:  Size  Location     Type
 23123 ;;                  1    wreg      unsigned char 
 23124 ;; Registers used:
 23125 ;;		wreg, status,2, status,0
 23126 ;; Tracked objects:
 23127 ;;		On entry : 0/0
 23128 ;;		On exit  : 0/0
 23129 ;;		Unchanged: 0/0
 23130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23135 ;;Total ram usage:        0 bytes
 23136 ;; Hardware stack levels used:    1
 23137 ;; Hardware stack levels required when called:    9
 23138 ;; This function calls:
 23139 ;;		Nothing
 23140 ;; This function is called by:
 23141 ;;		_I2c_WriteData
 23142 ;;		_I2c_ReadData
 23143 ;; This function uses a non-reentrant model
 23144 ;;
 23145                           
 23146                           	psect	text118
 23147  004342                     __ptext118:
 23148                           	opt stack 0
 23149  004342                     _CheckTxStatus:
 23150                           	opt stack 16
 23151                           
 23152                           ;i2c_drv.c: 151: return ((SSP2STAT & ((UINT8)(0x04))) >> ((UINT8)(2)));
 23153                           
 23154                           ;incstack = 0
 23155  004342  4073               	rrncf	3955,w,c	;volatile
 23156  004344  42E8               	rrncf	wreg,f,c
 23157  004346  0B3F               	andlw	63
 23158  004348  0B01               	andlw	1
 23159  00434A  0012               	return	
 23160  00434C                     __end_of_CheckTxStatus:
 23161                           	opt stack 0
 23162                           tosu	equ	0xFFF
 23163                           tosh	equ	0xFFE
 23164                           tosl	equ	0xFFD
 23165                           pclath	equ	0xFFA
 23166                           tblptru	equ	0xFF8
 23167                           tblptrh	equ	0xFF7
 23168                           tblptrl	equ	0xFF6
 23169                           tablat	equ	0xFF5
 23170                           prodh	equ	0xFF4
 23171                           prodl	equ	0xFF3
 23172                           intcon	equ	0xFF2
 23173                           intcon2	equ	0xFF1
 23174                           intcon3	equ	0xFF0
 23175                           indf0	equ	0xFEF
 23176                           postinc0	equ	0xFEE
 23177                           plusw0	equ	0xFEB
 23178                           fsr0h	equ	0xFEA
 23179                           fsr0l	equ	0xFE9
 23180                           wreg	equ	0xFE8
 23181                           indf1	equ	0xFE7
 23182                           postinc1	equ	0xFE6
 23183                           postdec1	equ	0xFE5
 23184                           fsr1h	equ	0xFE2
 23185                           fsr1l	equ	0xFE1
 23186                           indf2	equ	0xFDF
 23187                           postinc2	equ	0xFDE
 23188                           postdec2	equ	0xFDD
 23189                           plusw2	equ	0xFDB
 23190                           fsr2h	equ	0xFDA
 23191                           fsr2l	equ	0xFD9
 23192                           status	equ	0xFD8
 23193                           
 23194 ;; *************** function _CheckAckStatus *****************
 23195 ;; Defined at:
 23196 ;;		line 134 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/i2c_drv.c"
 23197 ;; Parameters:    Size  Location     Type
 23198 ;;		None
 23199 ;; Auto vars:     Size  Location     Type
 23200 ;;		None
 23201 ;; Return value:  Size  Location     Type
 23202 ;;                  1    wreg      unsigned char 
 23203 ;; Registers used:
 23204 ;;		wreg, status,2, status,0
 23205 ;; Tracked objects:
 23206 ;;		On entry : 0/0
 23207 ;;		On exit  : 0/0
 23208 ;;		Unchanged: 0/0
 23209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23214 ;;Total ram usage:        0 bytes
 23215 ;; Hardware stack levels used:    1
 23216 ;; Hardware stack levels required when called:    9
 23217 ;; This function calls:
 23218 ;;		Nothing
 23219 ;; This function is called by:
 23220 ;;		_I2c_WriteData
 23221 ;;		_I2c_ReadData
 23222 ;; This function uses a non-reentrant model
 23223 ;;
 23224                           
 23225                           	psect	text119
 23226  00434C                     __ptext119:
 23227                           	opt stack 0
 23228  00434C                     _CheckAckStatus:
 23229                           	opt stack 16
 23230                           
 23231                           ;i2c_drv.c: 137: return ((SSP2CON2 & ((UINT8)(0x40))) >> ((UINT8)(6)));
 23232                           
 23233                           ;incstack = 0
 23234  00434C  4471               	rlncf	3953,w,c	;volatile
 23235  00434E  46E8               	rlncf	wreg,f,c
 23236  004350  0B03               	andlw	3
 23237  004352  0B01               	andlw	1
 23238  004354  0012               	return	
 23239  004356                     __end_of_CheckAckStatus:
 23240                           	opt stack 0
 23241                           tosu	equ	0xFFF
 23242                           tosh	equ	0xFFE
 23243                           tosl	equ	0xFFD
 23244                           pclath	equ	0xFFA
 23245                           tblptru	equ	0xFF8
 23246                           tblptrh	equ	0xFF7
 23247                           tblptrl	equ	0xFF6
 23248                           tablat	equ	0xFF5
 23249                           prodh	equ	0xFF4
 23250                           prodl	equ	0xFF3
 23251                           intcon	equ	0xFF2
 23252                           intcon2	equ	0xFF1
 23253                           intcon3	equ	0xFF0
 23254                           indf0	equ	0xFEF
 23255                           postinc0	equ	0xFEE
 23256                           plusw0	equ	0xFEB
 23257                           fsr0h	equ	0xFEA
 23258                           fsr0l	equ	0xFE9
 23259                           wreg	equ	0xFE8
 23260                           indf1	equ	0xFE7
 23261                           postinc1	equ	0xFE6
 23262                           postdec1	equ	0xFE5
 23263                           fsr1h	equ	0xFE2
 23264                           fsr1l	equ	0xFE1
 23265                           indf2	equ	0xFDF
 23266                           postinc2	equ	0xFDE
 23267                           postdec2	equ	0xFDD
 23268                           plusw2	equ	0xFDB
 23269                           fsr2h	equ	0xFDA
 23270                           fsr2l	equ	0xFD9
 23271                           status	equ	0xFD8
 23272                           
 23273 ;; *************** function _LowPriorityIsr *****************
 23274 ;; Defined at:
 23275 ;;		line 236 in file "../../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 23276 ;; Parameters:    Size  Location     Type
 23277 ;;		None
 23278 ;; Auto vars:     Size  Location     Type
 23279 ;;		None
 23280 ;; Return value:  Size  Location     Type
 23281 ;;                  1    wreg      void 
 23282 ;; Registers used:
 23283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23284 ;; Tracked objects:
 23285 ;;		On entry : 0/0
 23286 ;;		On exit  : 0/0
 23287 ;;		Unchanged: 0/0
 23288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23291 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23292 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23293 ;;Total ram usage:       21 bytes
 23294 ;; Hardware stack levels used:    1
 23295 ;; Hardware stack levels required when called:    8
 23296 ;; This function calls:
 23297 ;;		_Tmr_Tmr2Isr
 23298 ;; This function is called by:
 23299 ;;		Interrupt level 1
 23300 ;; This function uses a non-reentrant model
 23301 ;;
 23302                           
 23303                           	psect	intcodelo
 23304  000018                     __pintcodelo:
 23305                           	opt stack 0
 23306  000018                     _LowPriorityIsr:
 23307                           	opt stack 10
 23308                           
 23309                           ;incstack = 0
 23310  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 23311  00001A  CFD8 F060          	movff	status,??_LowPriorityIsr
 23312  00001E  CFE8 F061          	movff	wreg,??_LowPriorityIsr+1
 23313  000022  CFE0 F062          	movff	bsr,??_LowPriorityIsr+2
 23314  000026  CFFA F063          	movff	pclath,??_LowPriorityIsr+3
 23315  00002A  CFFB F064          	movff	pclatu,??_LowPriorityIsr+4
 23316  00002E  CFE9 F065          	movff	fsr0l,??_LowPriorityIsr+5
 23317  000032  CFEA F066          	movff	fsr0h,??_LowPriorityIsr+6
 23318  000036  CFE1 F067          	movff	fsr1l,??_LowPriorityIsr+7
 23319  00003A  CFE2 F068          	movff	fsr1h,??_LowPriorityIsr+8
 23320  00003E  CFD9 F069          	movff	fsr2l,??_LowPriorityIsr+9
 23321  000042  CFDA F06A          	movff	fsr2h,??_LowPriorityIsr+10
 23322  000046  CFF3 F06B          	movff	prodl,??_LowPriorityIsr+11
 23323  00004A  CFF4 F06C          	movff	prodh,??_LowPriorityIsr+12
 23324  00004E  CFF6 F06D          	movff	tblptrl,??_LowPriorityIsr+13
 23325  000052  CFF7 F06E          	movff	tblptrh,??_LowPriorityIsr+14
 23326  000056  CFF8 F06F          	movff	tblptru,??_LowPriorityIsr+15
 23327  00005A  CFF5 F070          	movff	tablat,??_LowPriorityIsr+16
 23328  00005E  C049  F071         	movff	btemp,??_LowPriorityIsr+17
 23329  000062  C04A  F072         	movff	btemp+1,??_LowPriorityIsr+18
 23330  000066  C04B  F073         	movff	btemp+2,??_LowPriorityIsr+19
 23331  00006A  C04C  F074         	movff	btemp+3,??_LowPriorityIsr+20
 23332                           
 23333                           ;irq.c: 258: if (PIR1bits.TMR2IF == ((UINT8)(1)))
 23334  00006E  B29E               	btfsc	3998,1,c	;volatile
 23335                           
 23336                           ;irq.c: 259: {
 23337                           ;irq.c: 261: Tmr_Tmr2Isr();
 23338  000070  EC89  F020         	call	_Tmr_Tmr2Isr	;wreg free
 23339  000074  C074  F04C         	movff	??_LowPriorityIsr+20,btemp+3
 23340  000078  C073  F04B         	movff	??_LowPriorityIsr+19,btemp+2
 23341  00007C  C072  F04A         	movff	??_LowPriorityIsr+18,btemp+1
 23342  000080  C071  F049         	movff	??_LowPriorityIsr+17,btemp
 23343  000084  C070  FFF5         	movff	??_LowPriorityIsr+16,tablat
 23344  000088  C06F  FFF8         	movff	??_LowPriorityIsr+15,tblptru
 23345  00008C  C06E  FFF7         	movff	??_LowPriorityIsr+14,tblptrh
 23346  000090  C06D  FFF6         	movff	??_LowPriorityIsr+13,tblptrl
 23347  000094  C06C  FFF4         	movff	??_LowPriorityIsr+12,prodh
 23348  000098  C06B  FFF3         	movff	??_LowPriorityIsr+11,prodl
 23349  00009C  C06A  FFDA         	movff	??_LowPriorityIsr+10,fsr2h
 23350  0000A0  C069  FFD9         	movff	??_LowPriorityIsr+9,fsr2l
 23351  0000A4  C068  FFE2         	movff	??_LowPriorityIsr+8,fsr1h
 23352  0000A8  C067  FFE1         	movff	??_LowPriorityIsr+7,fsr1l
 23353  0000AC  C066  FFEA         	movff	??_LowPriorityIsr+6,fsr0h
 23354  0000B0  C065  FFE9         	movff	??_LowPriorityIsr+5,fsr0l
 23355  0000B4  C064  FFFB         	movff	??_LowPriorityIsr+4,pclatu
 23356  0000B8  C063  FFFA         	movff	??_LowPriorityIsr+3,pclath
 23357  0000BC  C062  FFE0         	movff	??_LowPriorityIsr+2,bsr
 23358  0000C0  C061  FFE8         	movff	??_LowPriorityIsr+1,wreg
 23359  0000C4  C060  FFD8         	movff	??_LowPriorityIsr,status
 23360  0000C8  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 23361  0000CA  0010               	retfie	
 23362  0000CC                     __end_of_LowPriorityIsr:
 23363                           	opt stack 0
 23364                           tosu	equ	0xFFF
 23365                           tosh	equ	0xFFE
 23366                           tosl	equ	0xFFD
 23367                           pclatu	equ	0xFFB
 23368                           pclath	equ	0xFFA
 23369                           tblptru	equ	0xFF8
 23370                           tblptrh	equ	0xFF7
 23371                           tblptrl	equ	0xFF6
 23372                           tablat	equ	0xFF5
 23373                           prodh	equ	0xFF4
 23374                           prodl	equ	0xFF3
 23375                           intcon	equ	0xFF2
 23376                           intcon2	equ	0xFF1
 23377                           intcon3	equ	0xFF0
 23378                           indf0	equ	0xFEF
 23379                           postinc0	equ	0xFEE
 23380                           plusw0	equ	0xFEB
 23381                           fsr0h	equ	0xFEA
 23382                           fsr0l	equ	0xFE9
 23383                           wreg	equ	0xFE8
 23384                           indf1	equ	0xFE7
 23385                           postinc1	equ	0xFE6
 23386                           postdec1	equ	0xFE5
 23387                           fsr1h	equ	0xFE2
 23388                           fsr1l	equ	0xFE1
 23389                           bsr	equ	0xFE0
 23390                           indf2	equ	0xFDF
 23391                           postinc2	equ	0xFDE
 23392                           postdec2	equ	0xFDD
 23393                           plusw2	equ	0xFDB
 23394                           fsr2h	equ	0xFDA
 23395                           fsr2l	equ	0xFD9
 23396                           status	equ	0xFD8
 23397                           
 23398 ;; *************** function _Tmr_Tmr2Isr *****************
 23399 ;; Defined at:
 23400 ;;		line 308 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/tmr_drv.c"
 23401 ;; Parameters:    Size  Location     Type
 23402 ;;		None
 23403 ;; Auto vars:     Size  Location     Type
 23404 ;;		None
 23405 ;; Return value:  Size  Location     Type
 23406 ;;                  1    wreg      void 
 23407 ;; Registers used:
 23408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23409 ;; Tracked objects:
 23410 ;;		On entry : 0/0
 23411 ;;		On exit  : 0/0
 23412 ;;		Unchanged: 0/0
 23413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23418 ;;Total ram usage:        0 bytes
 23419 ;; Hardware stack levels used:    1
 23420 ;; Hardware stack levels required when called:    7
 23421 ;; This function calls:
 23422 ;;		Absolute function
 23423 ;;		_Sch_SchmIntService
 23424 ;; This function is called by:
 23425 ;;		_LowPriorityIsr
 23426 ;; This function uses a non-reentrant model
 23427 ;;
 23428                           
 23429                           	psect	text121
 23430  004112                     __ptext121:
 23431                           	opt stack 0
 23432  004112                     _Tmr_Tmr2Isr:
 23433                           	opt stack 10
 23434                           
 23435                           ;tmr_drv.c: 311: PIR1bits.TMR2IF = 0u;
 23436                           
 23437                           ;incstack = 0
 23438  004112  929E               	bcf	3998,1,c	;volatile
 23439                           
 23440                           ;tmr_drv.c: 314: if (Tmr2IsrCallback != (0))
 23441  004114  501B               	movf	_Tmr2IsrCallback,w,c
 23442  004116  101C               	iorwf	_Tmr2IsrCallback+1,w,c
 23443  004118  B4D8               	btfsc	status,2,c
 23444  00411A  0012               	return	
 23445                           
 23446                           ;tmr_drv.c: 315: {
 23447                           ;tmr_drv.c: 317: Tmr2IsrCallback();
 23448  00411C  D801               	call	i1u723_28
 23449  00411E  0012               	return	
 23450  004120                     i1u723_28:
 23451  004120  0005               	push	
 23452  004122  6EFA               	movwf	pclath,c
 23453  004124  501B               	movf	_Tmr2IsrCallback,w,c
 23454  004126  6EFD               	movwf	tosl,c
 23455  004128  501C               	movf	_Tmr2IsrCallback+1,w,c
 23456  00412A  6EFE               	movwf	tosh,c
 23457  00412C  50F8               	movf	tblptru,w,c
 23458  00412E  6EFF               	movwf	tosu,c
 23459  004130  50FA               	movf	pclath,w,c
 23460  004132  0012               	return		;indir
 23461  004134                     __end_of_Tmr_Tmr2Isr:
 23462                           	opt stack 0
 23463                           tosu	equ	0xFFF
 23464                           tosh	equ	0xFFE
 23465                           tosl	equ	0xFFD
 23466                           pclatu	equ	0xFFB
 23467                           pclath	equ	0xFFA
 23468                           tblptru	equ	0xFF8
 23469                           tblptrh	equ	0xFF7
 23470                           tblptrl	equ	0xFF6
 23471                           tablat	equ	0xFF5
 23472                           prodh	equ	0xFF4
 23473                           prodl	equ	0xFF3
 23474                           intcon	equ	0xFF2
 23475                           intcon2	equ	0xFF1
 23476                           intcon3	equ	0xFF0
 23477                           indf0	equ	0xFEF
 23478                           postinc0	equ	0xFEE
 23479                           plusw0	equ	0xFEB
 23480                           fsr0h	equ	0xFEA
 23481                           fsr0l	equ	0xFE9
 23482                           wreg	equ	0xFE8
 23483                           indf1	equ	0xFE7
 23484                           postinc1	equ	0xFE6
 23485                           postdec1	equ	0xFE5
 23486                           fsr1h	equ	0xFE2
 23487                           fsr1l	equ	0xFE1
 23488                           bsr	equ	0xFE0
 23489                           indf2	equ	0xFDF
 23490                           postinc2	equ	0xFDE
 23491                           postdec2	equ	0xFDD
 23492                           plusw2	equ	0xFDB
 23493                           fsr2h	equ	0xFDA
 23494                           fsr2l	equ	0xFD9
 23495                           status	equ	0xFD8
 23496                           
 23497 ;; *************** function _Sch_SchmIntService *****************
 23498 ;; Defined at:
 23499 ;;		line 214 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 23500 ;; Parameters:    Size  Location     Type
 23501 ;;		None
 23502 ;; Auto vars:     Size  Location     Type
 23503 ;;		None
 23504 ;; Return value:  Size  Location     Type
 23505 ;;                  1    wreg      void 
 23506 ;; Registers used:
 23507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23508 ;; Tracked objects:
 23509 ;;		On entry : 0/0
 23510 ;;		On exit  : 0/0
 23511 ;;		Unchanged: 0/0
 23512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23517 ;;Total ram usage:        0 bytes
 23518 ;; Hardware stack levels used:    1
 23519 ;; Hardware stack levels required when called:    6
 23520 ;; This function calls:
 23521 ;;		_OsAlrm_ProcessOsAlarms
 23522 ;;		_UpdateOsCounters
 23523 ;;		_UpdateSchFlag
 23524 ;; This function is called by:
 23525 ;;		_SystemInit
 23526 ;;		_Tmr_Tmr2Isr
 23527 ;; This function uses a non-reentrant model
 23528 ;;
 23529                           
 23530                           	psect	text122
 23531  00430A                     __ptext122:
 23532                           	opt stack 0
 23533  00430A                     _Sch_SchmIntService:
 23534                           	opt stack 10
 23535                           
 23536                           ;os_sched.c: 217: UpdateSchFlag();
 23537                           
 23538                           ;incstack = 0
 23539  00430A  ECC8  F020         	call	_UpdateSchFlag	;wreg free
 23540                           
 23541                           ;os_sched.c: 219: UpdateOsCounters();
 23542  00430E  EC7D  F021         	call	_UpdateOsCounters	;wreg free
 23543                           
 23544                           ;os_sched.c: 221: OsAlrm_ProcessOsAlarms();
 23545  004312  EC49  F009         	call	_OsAlrm_ProcessOsAlarms	;wreg free
 23546  004316  0012               	return		;funcret
 23547  004318                     __end_of_Sch_SchmIntService:
 23548                           	opt stack 0
 23549                           tosu	equ	0xFFF
 23550                           tosh	equ	0xFFE
 23551                           tosl	equ	0xFFD
 23552                           pclatu	equ	0xFFB
 23553                           pclath	equ	0xFFA
 23554                           tblptru	equ	0xFF8
 23555                           tblptrh	equ	0xFF7
 23556                           tblptrl	equ	0xFF6
 23557                           tablat	equ	0xFF5
 23558                           prodh	equ	0xFF4
 23559                           prodl	equ	0xFF3
 23560                           intcon	equ	0xFF2
 23561                           intcon2	equ	0xFF1
 23562                           intcon3	equ	0xFF0
 23563                           indf0	equ	0xFEF
 23564                           postinc0	equ	0xFEE
 23565                           plusw0	equ	0xFEB
 23566                           fsr0h	equ	0xFEA
 23567                           fsr0l	equ	0xFE9
 23568                           wreg	equ	0xFE8
 23569                           indf1	equ	0xFE7
 23570                           postinc1	equ	0xFE6
 23571                           postdec1	equ	0xFE5
 23572                           fsr1h	equ	0xFE2
 23573                           fsr1l	equ	0xFE1
 23574                           bsr	equ	0xFE0
 23575                           indf2	equ	0xFDF
 23576                           postinc2	equ	0xFDE
 23577                           postdec2	equ	0xFDD
 23578                           plusw2	equ	0xFDB
 23579                           fsr2h	equ	0xFDA
 23580                           fsr2l	equ	0xFD9
 23581                           status	equ	0xFD8
 23582                           
 23583 ;; *************** function _UpdateSchFlag *****************
 23584 ;; Defined at:
 23585 ;;		line 132 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 23586 ;; Parameters:    Size  Location     Type
 23587 ;;		None
 23588 ;; Auto vars:     Size  Location     Type
 23589 ;;		None
 23590 ;; Return value:  Size  Location     Type
 23591 ;;                  1    wreg      void 
 23592 ;; Registers used:
 23593 ;;		wreg, status,2, status,0
 23594 ;; Tracked objects:
 23595 ;;		On entry : 0/0
 23596 ;;		On exit  : 0/0
 23597 ;;		Unchanged: 0/0
 23598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23603 ;;Total ram usage:        0 bytes
 23604 ;; Hardware stack levels used:    1
 23605 ;; Hardware stack levels required when called:    2
 23606 ;; This function calls:
 23607 ;;		Nothing
 23608 ;; This function is called by:
 23609 ;;		_Sch_SchmIntService
 23610 ;; This function uses a non-reentrant model
 23611 ;;
 23612                           
 23613                           	psect	text123
 23614  004190                     __ptext123:
 23615                           	opt stack 0
 23616  004190                     _UpdateSchFlag:
 23617                           	opt stack 13
 23618                           
 23619                           ;os_sched.c: 135: static UINT16 InterruptCounter = 0;
 23620                           ;os_sched.c: 138: InterruptCounter++;
 23621                           
 23622                           ;incstack = 0
 23623  004190  0101               	movlb	1	; () banked
 23624  004192  4BD2               	infsnz	UpdateSchFlag@InterruptCounter& (0+255),f,b
 23625  004194  2BD3               	incf	(UpdateSchFlag@InterruptCounter+1)& (0+255),f,b
 23626                           
 23627                           ; BSR set to: 1
 23628                           ;os_sched.c: 140: if (InterruptCounter >= ((((UINT16)(1000))*((UINT16)(1)))/1000))
 23629  004196  51D2               	movf	UpdateSchFlag@InterruptCounter& (0+255),w,b
 23630  004198  11D3               	iorwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),w,b
 23631  00419A  B4D8               	btfsc	status,2,c
 23632  00419C  0012               	return	
 23633                           
 23634                           ; BSR set to: 1
 23635                           ;os_sched.c: 141: {
 23636                           ;os_sched.c: 143: InterruptCounter = 0;
 23637  00419E  0E00               	movlw	0
 23638  0041A0  6FD3               	movwf	(UpdateSchFlag@InterruptCounter+1)& (0+255),b
 23639  0041A2  0E00               	movlw	0
 23640  0041A4  6FD2               	movwf	UpdateSchFlag@InterruptCounter& (0+255),b
 23641                           
 23642                           ;os_sched.c: 145: MainSystemTimebaseFlag = CallTaskPhase;
 23643  0041A6  0E00               	movlw	0
 23644  0041A8  0100               	movlb	0	; () banked
 23645  0041AA  6FE1               	movwf	_MainSystemTimebaseFlag& (0+255),b
 23646  0041AC  0012               	return	
 23647  0041AE                     __end_of_UpdateSchFlag:
 23648                           	opt stack 0
 23649                           tosu	equ	0xFFF
 23650                           tosh	equ	0xFFE
 23651                           tosl	equ	0xFFD
 23652                           pclatu	equ	0xFFB
 23653                           pclath	equ	0xFFA
 23654                           tblptru	equ	0xFF8
 23655                           tblptrh	equ	0xFF7
 23656                           tblptrl	equ	0xFF6
 23657                           tablat	equ	0xFF5
 23658                           prodh	equ	0xFF4
 23659                           prodl	equ	0xFF3
 23660                           intcon	equ	0xFF2
 23661                           intcon2	equ	0xFF1
 23662                           intcon3	equ	0xFF0
 23663                           indf0	equ	0xFEF
 23664                           postinc0	equ	0xFEE
 23665                           plusw0	equ	0xFEB
 23666                           fsr0h	equ	0xFEA
 23667                           fsr0l	equ	0xFE9
 23668                           wreg	equ	0xFE8
 23669                           indf1	equ	0xFE7
 23670                           postinc1	equ	0xFE6
 23671                           postdec1	equ	0xFE5
 23672                           fsr1h	equ	0xFE2
 23673                           fsr1l	equ	0xFE1
 23674                           bsr	equ	0xFE0
 23675                           indf2	equ	0xFDF
 23676                           postinc2	equ	0xFDE
 23677                           postdec2	equ	0xFDD
 23678                           plusw2	equ	0xFDB
 23679                           fsr2h	equ	0xFDA
 23680                           fsr2l	equ	0xFD9
 23681                           status	equ	0xFD8
 23682                           
 23683 ;; *************** function _UpdateOsCounters *****************
 23684 ;; Defined at:
 23685 ;;		line 157 in file "../../../MercuryFwk/Source/c/02_Osl/os_sched.c"
 23686 ;; Parameters:    Size  Location     Type
 23687 ;;		None
 23688 ;; Auto vars:     Size  Location     Type
 23689 ;;		None
 23690 ;; Return value:  Size  Location     Type
 23691 ;;                  1    wreg      void 
 23692 ;; Registers used:
 23693 ;;		wreg, status,2, status,0
 23694 ;; Tracked objects:
 23695 ;;		On entry : 0/0
 23696 ;;		On exit  : 0/0
 23697 ;;		Unchanged: 0/0
 23698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23703 ;;Total ram usage:        0 bytes
 23704 ;; Hardware stack levels used:    1
 23705 ;; Hardware stack levels required when called:    2
 23706 ;; This function calls:
 23707 ;;		Nothing
 23708 ;; This function is called by:
 23709 ;;		_Sch_SchmIntService
 23710 ;; This function uses a non-reentrant model
 23711 ;;
 23712                           
 23713                           	psect	text124
 23714  0042FA                     __ptext124:
 23715                           	opt stack 0
 23716  0042FA                     _UpdateOsCounters:
 23717                           	opt stack 13
 23718                           
 23719                           ;os_sched.c: 160: OsTmr_OsTickCounter++;
 23720                           
 23721                           ;incstack = 0
 23722  0042FA  0E01               	movlw	1
 23723  0042FC  0101               	movlb	1	; () banked
 23724  0042FE  27CE               	addwf	_OsTmr_OsTickCounter& (0+255),f,b
 23725  004300  0E00               	movlw	0
 23726  004302  23CF               	addwfc	(_OsTmr_OsTickCounter+1)& (0+255),f,b
 23727  004304  23D0               	addwfc	(_OsTmr_OsTickCounter+2)& (0+255),f,b
 23728  004306  23D1               	addwfc	(_OsTmr_OsTickCounter+3)& (0+255),f,b
 23729                           
 23730                           ; BSR set to: 1
 23731  004308  0012               	return		;funcret
 23732  00430A                     __end_of_UpdateOsCounters:
 23733                           	opt stack 0
 23734                           tosu	equ	0xFFF
 23735                           tosh	equ	0xFFE
 23736                           tosl	equ	0xFFD
 23737                           pclatu	equ	0xFFB
 23738                           pclath	equ	0xFFA
 23739                           tblptru	equ	0xFF8
 23740                           tblptrh	equ	0xFF7
 23741                           tblptrl	equ	0xFF6
 23742                           tablat	equ	0xFF5
 23743                           prodh	equ	0xFF4
 23744                           prodl	equ	0xFF3
 23745                           intcon	equ	0xFF2
 23746                           intcon2	equ	0xFF1
 23747                           intcon3	equ	0xFF0
 23748                           indf0	equ	0xFEF
 23749                           postinc0	equ	0xFEE
 23750                           plusw0	equ	0xFEB
 23751                           fsr0h	equ	0xFEA
 23752                           fsr0l	equ	0xFE9
 23753                           wreg	equ	0xFE8
 23754                           indf1	equ	0xFE7
 23755                           postinc1	equ	0xFE6
 23756                           postdec1	equ	0xFE5
 23757                           fsr1h	equ	0xFE2
 23758                           fsr1l	equ	0xFE1
 23759                           bsr	equ	0xFE0
 23760                           indf2	equ	0xFDF
 23761                           postinc2	equ	0xFDE
 23762                           postdec2	equ	0xFDD
 23763                           plusw2	equ	0xFDB
 23764                           fsr2h	equ	0xFDA
 23765                           fsr2l	equ	0xFD9
 23766                           status	equ	0xFD8
 23767                           
 23768 ;; *************** function _OsAlrm_ProcessOsAlarms *****************
 23769 ;; Defined at:
 23770 ;;		line 115 in file "../../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 23771 ;; Parameters:    Size  Location     Type
 23772 ;;		None
 23773 ;; Auto vars:     Size  Location     Type
 23774 ;;  AlarmIndex      2   34[COMRAM] unsigned short 
 23775 ;; Return value:  Size  Location     Type
 23776 ;;                  1    wreg      void 
 23777 ;; Registers used:
 23778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 23779 ;; Tracked objects:
 23780 ;;		On entry : 0/0
 23781 ;;		On exit  : 0/0
 23782 ;;		Unchanged: 0/0
 23783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 23784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23785 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23786 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23787 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 23788 ;;Total ram usage:       10 bytes
 23789 ;; Hardware stack levels used:    1
 23790 ;; Hardware stack levels required when called:    5
 23791 ;; This function calls:
 23792 ;;		_I2cDummyTx
 23793 ;;		_OsAlrm_ClearOsAlarm
 23794 ;;		i1___wmul
 23795 ;; This function is called by:
 23796 ;;		_Sch_SchmIntService
 23797 ;; This function uses a non-reentrant model
 23798 ;;
 23799                           
 23800                           	psect	text125
 23801  001292                     __ptext125:
 23802                           	opt stack 0
 23803  001292                     _OsAlrm_ProcessOsAlarms:
 23804                           	opt stack 10
 23805                           
 23806                           ;os_alarms.c: 117: UINT16 AlarmIndex;
 23807                           ;os_alarms.c: 120: for (AlarmIndex = 0; AlarmIndex < ((UINT8)(20)); AlarmIndex++)
 23808                           
 23809                           ; BSR set to: 1
 23810                           ;incstack = 0
 23811  001292  0E00               	movlw	0
 23812  001294  6E48               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,c
 23813  001296  0E00               	movlw	0
 23814  001298  6E47               	movwf	OsAlrm_ProcessOsAlarms@AlarmIndex,c
 23815  00129A  5048               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 23816  00129C  E105               	bnz	i1u701_20
 23817  00129E  0E14               	movlw	20
 23818  0012A0  5C47               	subwf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 23819  0012A2  B0D8               	btfsc	status,0,c
 23820  0012A4  0012               	return	
 23821  0012A6  D001               	goto	i1l639
 23822  0012A8                     i1u701_20:
 23823  0012A8  0012               	return	
 23824  0012AA                     i1l639:
 23825                           
 23826                           ;os_alarms.c: 121: {
 23827                           ;os_alarms.c: 123: if (OsAlarms[AlarmIndex].Enabled == 1u)
 23828  0012AA  C047  F037         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 23829  0012AE  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 23830  0012B2  0E00               	movlw	0
 23831  0012B4  6E3A               	movwf	i1___wmul@multiplicand+1,c
 23832  0012B6  0E0B               	movlw	11
 23833  0012B8  6E39               	movwf	i1___wmul@multiplicand,c
 23834  0012BA  EC0F  F020         	call	i1___wmul	;wreg free
 23835  0012BE  0E00               	movlw	low _OsAlarms
 23836  0012C0  2437               	addwf	?i1___wmul,w,c
 23837  0012C2  6ED9               	movwf	fsr2l,c
 23838  0012C4  0E05               	movlw	high _OsAlarms
 23839  0012C6  2038               	addwfc	?i1___wmul+1,w,c
 23840  0012C8  6EDA               	movwf	fsr2h,c
 23841  0012CA  04DE               	decf	postinc2,w,c
 23842  0012CC  A4D8               	btfss	status,2,c
 23843  0012CE  D086               	goto	i1u705_29
 23844                           
 23845                           ;os_alarms.c: 124: {
 23846                           ;os_alarms.c: 126: OsAlarms[AlarmIndex].Counter++;
 23847  0012D0  C047  F037         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 23848  0012D4  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 23849  0012D8  0E00               	movlw	0
 23850  0012DA  6E3A               	movwf	i1___wmul@multiplicand+1,c
 23851  0012DC  0E0B               	movlw	11
 23852  0012DE  6E39               	movwf	i1___wmul@multiplicand,c
 23853  0012E0  EC0F  F020         	call	i1___wmul	;wreg free
 23854  0012E4  0E01               	movlw	1
 23855  0012E6  2637               	addwf	?i1___wmul,f,c
 23856  0012E8  0E00               	movlw	0
 23857  0012EA  2238               	addwfc	?i1___wmul+1,f,c
 23858  0012EC  0E00               	movlw	low _OsAlarms
 23859  0012EE  2437               	addwf	?i1___wmul,w,c
 23860  0012F0  6ED9               	movwf	fsr2l,c
 23861  0012F2  0E05               	movlw	high _OsAlarms
 23862  0012F4  2038               	addwfc	?i1___wmul+1,w,c
 23863  0012F6  6EDA               	movwf	fsr2h,c
 23864  0012F8  2ADE               	incf	postinc2,f,c
 23865  0012FA  0E00               	movlw	0
 23866  0012FC  22DE               	addwfc	postinc2,f,c
 23867  0012FE  22DE               	addwfc	postinc2,f,c
 23868  001300  22DE               	addwfc	postinc2,f,c
 23869                           
 23870                           ;os_alarms.c: 128: if (OsAlarms[AlarmIndex].Counter >= OsAlarms[AlarmIndex].AlarmTime)
 23871  001302  C047  F037         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 23872  001306  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 23873  00130A  0E00               	movlw	0
 23874  00130C  6E3A               	movwf	i1___wmul@multiplicand+1,c
 23875  00130E  0E0B               	movlw	11
 23876  001310  6E39               	movwf	i1___wmul@multiplicand,c
 23877  001312  EC0F  F020         	call	i1___wmul	;wreg free
 23878  001316  0E05               	movlw	5
 23879  001318  2637               	addwf	?i1___wmul,f,c
 23880  00131A  0E00               	movlw	0
 23881  00131C  2238               	addwfc	?i1___wmul+1,f,c
 23882  00131E  0E00               	movlw	low _OsAlarms
 23883  001320  2437               	addwf	?i1___wmul,w,c
 23884  001322  6ED9               	movwf	fsr2l,c
 23885  001324  0E05               	movlw	high _OsAlarms
 23886  001326  2038               	addwfc	?i1___wmul+1,w,c
 23887  001328  6EDA               	movwf	fsr2h,c
 23888  00132A  C047  F037         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 23889  00132E  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 23890  001332  0E00               	movlw	0
 23891  001334  6E3A               	movwf	i1___wmul@multiplicand+1,c
 23892  001336  0E0B               	movlw	11
 23893  001338  6E39               	movwf	i1___wmul@multiplicand,c
 23894  00133A  EC0F  F020         	call	i1___wmul	;wreg free
 23895  00133E  0E01               	movlw	1
 23896  001340  2637               	addwf	?i1___wmul,f,c
 23897  001342  0E00               	movlw	0
 23898  001344  2238               	addwfc	?i1___wmul+1,f,c
 23899  001346  0E00               	movlw	low _OsAlarms
 23900  001348  2437               	addwf	?i1___wmul,w,c
 23901  00134A  6EE1               	movwf	fsr1l,c
 23902  00134C  0E05               	movlw	high _OsAlarms
 23903  00134E  2038               	addwfc	?i1___wmul+1,w,c
 23904  001350  6EE2               	movwf	fsr1h,c
 23905  001352  50DE               	movf	postinc2,w,c
 23906  001354  5CE6               	subwf	postinc1,w,c
 23907  001356  50DE               	movf	postinc2,w,c
 23908  001358  58E6               	subwfb	postinc1,w,c
 23909  00135A  50DE               	movf	postinc2,w,c
 23910  00135C  58E6               	subwfb	postinc1,w,c
 23911  00135E  50DE               	movf	postinc2,w,c
 23912  001360  58E6               	subwfb	postinc1,w,c
 23913  001362  A0D8               	btfss	status,0,c
 23914  001364  D03B               	goto	i1u705_29
 23915                           
 23916                           ;os_alarms.c: 129: {
 23917                           ;os_alarms.c: 131: OsAlrm_ClearOsAlarm(AlarmIndex);
 23918  001366  5047               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex,w,c
 23919  001368  EC3D  F01C         	call	_OsAlrm_ClearOsAlarm
 23920                           
 23921                           ;os_alarms.c: 133: if (OsAlarms[AlarmIndex].AlrmCbk != (0))
 23922  00136C  C047  F037         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 23923  001370  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 23924  001374  0E00               	movlw	0
 23925  001376  6E3A               	movwf	i1___wmul@multiplicand+1,c
 23926  001378  0E0B               	movlw	11
 23927  00137A  6E39               	movwf	i1___wmul@multiplicand,c
 23928  00137C  EC0F  F020         	call	i1___wmul	;wreg free
 23929  001380  0E09               	movlw	9
 23930  001382  2637               	addwf	?i1___wmul,f,c
 23931  001384  0E00               	movlw	0
 23932  001386  2238               	addwfc	?i1___wmul+1,f,c
 23933  001388  0E00               	movlw	low _OsAlarms
 23934  00138A  2437               	addwf	?i1___wmul,w,c
 23935  00138C  6ED9               	movwf	fsr2l,c
 23936  00138E  0E05               	movlw	high _OsAlarms
 23937  001390  2038               	addwfc	?i1___wmul+1,w,c
 23938  001392  6EDA               	movwf	fsr2h,c
 23939  001394  50DE               	movf	postinc2,w,c
 23940  001396  10DE               	iorwf	postinc2,w,c
 23941  001398  B4D8               	btfsc	status,2,c
 23942  00139A  D020               	goto	i1u705_29
 23943                           
 23944                           ;os_alarms.c: 134: {
 23945                           ;os_alarms.c: 136: OsAlarms[AlarmIndex].AlrmCbk();
 23946  00139C  C047  F037         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex,i1___wmul@multiplier
 23947  0013A0  C048  F038         	movff	OsAlrm_ProcessOsAlarms@AlarmIndex+1,i1___wmul@multiplier+1
 23948  0013A4  0E00               	movlw	0
 23949  0013A6  6E3A               	movwf	i1___wmul@multiplicand+1,c
 23950  0013A8  0E0B               	movlw	11
 23951  0013AA  6E39               	movwf	i1___wmul@multiplicand,c
 23952  0013AC  EC0F  F020         	call	i1___wmul	;wreg free
 23953  0013B0  0E09               	movlw	9
 23954  0013B2  2637               	addwf	?i1___wmul,f,c
 23955  0013B4  0E00               	movlw	0
 23956  0013B6  2238               	addwfc	?i1___wmul+1,f,c
 23957  0013B8  0E00               	movlw	low _OsAlarms
 23958  0013BA  2437               	addwf	?i1___wmul,w,c
 23959  0013BC  6ED9               	movwf	fsr2l,c
 23960  0013BE  0E05               	movlw	high _OsAlarms
 23961  0013C0  2038               	addwfc	?i1___wmul+1,w,c
 23962  0013C2  6EDA               	movwf	fsr2h,c
 23963  0013C4  D801               	call	i1u705_28
 23964  0013C6  D00A               	goto	i1u705_29
 23965  0013C8                     i1u705_28:
 23966  0013C8  0005               	push	
 23967  0013CA  6EFA               	movwf	pclath,c
 23968  0013CC  50DE               	movf	postinc2,w,c
 23969  0013CE  6EFD               	movwf	tosl,c
 23970  0013D0  50DE               	movf	postinc2,w,c
 23971  0013D2  6EFE               	movwf	tosh,c
 23972  0013D4  50F8               	movf	tblptru,w,c
 23973  0013D6  6EFF               	movwf	tosu,c
 23974  0013D8  50FA               	movf	pclath,w,c
 23975  0013DA  0012               	return		;indir
 23976  0013DC                     i1u705_29:
 23977  0013DC  4A47               	infsnz	OsAlrm_ProcessOsAlarms@AlarmIndex,f,c
 23978  0013DE  2A48               	incf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,f,c
 23979  0013E0  5048               	movf	OsAlrm_ProcessOsAlarms@AlarmIndex+1,w,c
 23980  0013E2  E101               	bnz	i1l644
 23981  0013E4  D75C               	goto	L46
 23982  0013E6                     i1l644:
 23983  0013E6  0012               	return		;funcret
 23984  0013E8                     __end_of_OsAlrm_ProcessOsAlarms:
 23985                           	opt stack 0
 23986                           tosu	equ	0xFFF
 23987                           tosh	equ	0xFFE
 23988                           tosl	equ	0xFFD
 23989                           pclatu	equ	0xFFB
 23990                           pclath	equ	0xFFA
 23991                           tblptru	equ	0xFF8
 23992                           tblptrh	equ	0xFF7
 23993                           tblptrl	equ	0xFF6
 23994                           tablat	equ	0xFF5
 23995                           prodh	equ	0xFF4
 23996                           prodl	equ	0xFF3
 23997                           intcon	equ	0xFF2
 23998                           intcon2	equ	0xFF1
 23999                           intcon3	equ	0xFF0
 24000                           indf0	equ	0xFEF
 24001                           postinc0	equ	0xFEE
 24002                           plusw0	equ	0xFEB
 24003                           fsr0h	equ	0xFEA
 24004                           fsr0l	equ	0xFE9
 24005                           wreg	equ	0xFE8
 24006                           indf1	equ	0xFE7
 24007                           postinc1	equ	0xFE6
 24008                           postdec1	equ	0xFE5
 24009                           fsr1h	equ	0xFE2
 24010                           fsr1l	equ	0xFE1
 24011                           bsr	equ	0xFE0
 24012                           indf2	equ	0xFDF
 24013                           postinc2	equ	0xFDE
 24014                           postdec2	equ	0xFDD
 24015                           plusw2	equ	0xFDB
 24016                           fsr2h	equ	0xFDA
 24017                           fsr2l	equ	0xFD9
 24018                           status	equ	0xFD8
 24019                           
 24020 ;; *************** function i1___wmul *****************
 24021 ;; Defined at:
 24022 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 24023 ;; Parameters:    Size  Location     Type
 24024 ;;  multiplier      2   18[COMRAM] unsigned int 
 24025 ;;  multiplicand    2   20[COMRAM] unsigned int 
 24026 ;; Auto vars:     Size  Location     Type
 24027 ;;  __wmul          2   22[COMRAM] unsigned int 
 24028 ;; Return value:  Size  Location     Type
 24029 ;;                  2   18[COMRAM] unsigned int 
 24030 ;; Registers used:
 24031 ;;		wreg, status,2, status,0, prodl, prodh
 24032 ;; Tracked objects:
 24033 ;;		On entry : 0/0
 24034 ;;		On exit  : 0/0
 24035 ;;		Unchanged: 0/0
 24036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24038 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24040 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24041 ;;Total ram usage:        6 bytes
 24042 ;; Hardware stack levels used:    1
 24043 ;; Hardware stack levels required when called:    2
 24044 ;; This function calls:
 24045 ;;		Nothing
 24046 ;; This function is called by:
 24047 ;;		_OsAlrm_ProcessOsAlarms
 24048 ;; This function uses a non-reentrant model
 24049 ;;
 24050                           
 24051                           	psect	text126
 24052  00401E                     __ptext126:
 24053                           	opt stack 0
 24054  00401E                     i1___wmul:
 24055                           	opt stack 12
 24056                           
 24057                           ;incstack = 0
 24058  00401E  5037               	movf	i1___wmul@multiplier,w,c
 24059  004020  0239               	mulwf	i1___wmul@multiplicand,c
 24060  004022  CFF3 F03B          	movff	prodl,i1___wmul@product
 24061  004026  CFF4 F03C          	movff	prodh,i1___wmul@product+1
 24062  00402A  5037               	movf	i1___wmul@multiplier,w,c
 24063  00402C  023A               	mulwf	i1___wmul@multiplicand+1,c
 24064  00402E  50F3               	movf	prodl,w,c
 24065  004030  263C               	addwf	i1___wmul@product+1,f,c
 24066  004032  5038               	movf	i1___wmul@multiplier+1,w,c
 24067  004034  0239               	mulwf	i1___wmul@multiplicand,c
 24068  004036  50F3               	movf	prodl,w,c
 24069  004038  263C               	addwf	i1___wmul@product+1,f,c
 24070  00403A  C03B  F037         	movff	i1___wmul@product,?i1___wmul
 24071  00403E  C03C  F038         	movff	i1___wmul@product+1,?i1___wmul+1
 24072  004042  0012               	return	
 24073  004044                     __end_ofi1___wmul:
 24074                           	opt stack 0
 24075                           tosu	equ	0xFFF
 24076                           tosh	equ	0xFFE
 24077                           tosl	equ	0xFFD
 24078                           pclatu	equ	0xFFB
 24079                           pclath	equ	0xFFA
 24080                           tblptru	equ	0xFF8
 24081                           tblptrh	equ	0xFF7
 24082                           tblptrl	equ	0xFF6
 24083                           tablat	equ	0xFF5
 24084                           prodh	equ	0xFF4
 24085                           prodl	equ	0xFF3
 24086                           intcon	equ	0xFF2
 24087                           intcon2	equ	0xFF1
 24088                           intcon3	equ	0xFF0
 24089                           indf0	equ	0xFEF
 24090                           postinc0	equ	0xFEE
 24091                           plusw0	equ	0xFEB
 24092                           fsr0h	equ	0xFEA
 24093                           fsr0l	equ	0xFE9
 24094                           wreg	equ	0xFE8
 24095                           indf1	equ	0xFE7
 24096                           postinc1	equ	0xFE6
 24097                           postdec1	equ	0xFE5
 24098                           fsr1h	equ	0xFE2
 24099                           fsr1l	equ	0xFE1
 24100                           bsr	equ	0xFE0
 24101                           indf2	equ	0xFDF
 24102                           postinc2	equ	0xFDE
 24103                           postdec2	equ	0xFDD
 24104                           plusw2	equ	0xFDB
 24105                           fsr2h	equ	0xFDA
 24106                           fsr2l	equ	0xFD9
 24107                           status	equ	0xFD8
 24108                           
 24109 ;; *************** function _OsAlrm_ClearOsAlarm *****************
 24110 ;; Defined at:
 24111 ;;		line 97 in file "../../../MercuryFwk/Source/c/02_Osl/os_alarms.c"
 24112 ;; Parameters:    Size  Location     Type
 24113 ;;  OsAlarmId       1    wreg     unsigned char 
 24114 ;; Auto vars:     Size  Location     Type
 24115 ;;  OsAlarmId       1   18[COMRAM] unsigned char 
 24116 ;; Return value:  Size  Location     Type
 24117 ;;                  1    wreg      void 
 24118 ;; Registers used:
 24119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24120 ;; Tracked objects:
 24121 ;;		On entry : 0/0
 24122 ;;		On exit  : 0/0
 24123 ;;		Unchanged: 0/0
 24124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24128 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24129 ;;Total ram usage:        1 bytes
 24130 ;; Hardware stack levels used:    1
 24131 ;; Hardware stack levels required when called:    2
 24132 ;; This function calls:
 24133 ;;		Nothing
 24134 ;; This function is called by:
 24135 ;;		_OsAlrm_ProcessOsAlarms
 24136 ;; This function uses a non-reentrant model
 24137 ;;
 24138                           
 24139                           	psect	text127
 24140  00387A                     __ptext127:
 24141                           	opt stack 0
 24142  00387A                     _OsAlrm_ClearOsAlarm:
 24143                           	opt stack 12
 24144                           
 24145                           ;incstack = 0
 24146                           ;OsAlrm_ClearOsAlarm@OsAlarmId stored from wreg
 24147  00387A  6E37               	movwf	OsAlrm_ClearOsAlarm@OsAlarmId,c
 24148                           
 24149                           ;os_alarms.c: 100: OsAlarms[OsAlarmId].Enabled = 0u;
 24150  00387C  5037               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 24151  00387E  0D0B               	mullw	11
 24152  003880  0E00               	movlw	low _OsAlarms
 24153  003882  24F3               	addwf	prodl,w,c
 24154  003884  6ED9               	movwf	fsr2l,c
 24155  003886  0E05               	movlw	high _OsAlarms
 24156  003888  20F4               	addwfc	prodh,w,c
 24157  00388A  6EDA               	movwf	fsr2h,c
 24158  00388C  0E00               	movlw	0
 24159  00388E  6EDF               	movwf	indf2,c
 24160                           
 24161                           ;os_alarms.c: 102: OsAlarms[OsAlarmId].Counter = 0;
 24162  003890  5037               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 24163  003892  0D0B               	mullw	11
 24164  003894  0E01               	movlw	1
 24165  003896  26F3               	addwf	prodl,f,c
 24166  003898  0E00               	movlw	0
 24167  00389A  22F4               	addwfc	prodh,f,c
 24168  00389C  0E00               	movlw	low _OsAlarms
 24169  00389E  24F3               	addwf	prodl,w,c
 24170  0038A0  6ED9               	movwf	fsr2l,c
 24171  0038A2  0E05               	movlw	high _OsAlarms
 24172  0038A4  20F4               	addwfc	prodh,w,c
 24173  0038A6  6EDA               	movwf	fsr2h,c
 24174  0038A8  6ADE               	clrf	postinc2,c
 24175  0038AA  6ADE               	clrf	postinc2,c
 24176  0038AC  6ADE               	clrf	postinc2,c
 24177  0038AE  6ADD               	clrf	postdec2,c
 24178                           
 24179                           ;os_alarms.c: 104: OsAlarms[OsAlarmId].AlarmTime = 0;
 24180  0038B0  5037               	movf	OsAlrm_ClearOsAlarm@OsAlarmId,w,c
 24181  0038B2  0D0B               	mullw	11
 24182  0038B4  0E05               	movlw	5
 24183  0038B6  26F3               	addwf	prodl,f,c
 24184  0038B8  0E00               	movlw	0
 24185  0038BA  22F4               	addwfc	prodh,f,c
 24186  0038BC  0E00               	movlw	low _OsAlarms
 24187  0038BE  24F3               	addwf	prodl,w,c
 24188  0038C0  6ED9               	movwf	fsr2l,c
 24189  0038C2  0E05               	movlw	high _OsAlarms
 24190  0038C4  20F4               	addwfc	prodh,w,c
 24191  0038C6  6EDA               	movwf	fsr2h,c
 24192  0038C8  6ADE               	clrf	postinc2,c
 24193  0038CA  6ADE               	clrf	postinc2,c
 24194  0038CC  6ADE               	clrf	postinc2,c
 24195  0038CE  6ADD               	clrf	postdec2,c
 24196  0038D0  0012               	return		;funcret
 24197  0038D2                     __end_of_OsAlrm_ClearOsAlarm:
 24198                           	opt stack 0
 24199                           tosu	equ	0xFFF
 24200                           tosh	equ	0xFFE
 24201                           tosl	equ	0xFFD
 24202                           pclatu	equ	0xFFB
 24203                           pclath	equ	0xFFA
 24204                           tblptru	equ	0xFF8
 24205                           tblptrh	equ	0xFF7
 24206                           tblptrl	equ	0xFF6
 24207                           tablat	equ	0xFF5
 24208                           prodh	equ	0xFF4
 24209                           prodl	equ	0xFF3
 24210                           intcon	equ	0xFF2
 24211                           intcon2	equ	0xFF1
 24212                           intcon3	equ	0xFF0
 24213                           indf0	equ	0xFEF
 24214                           postinc0	equ	0xFEE
 24215                           plusw0	equ	0xFEB
 24216                           fsr0h	equ	0xFEA
 24217                           fsr0l	equ	0xFE9
 24218                           wreg	equ	0xFE8
 24219                           indf1	equ	0xFE7
 24220                           postinc1	equ	0xFE6
 24221                           postdec1	equ	0xFE5
 24222                           fsr1h	equ	0xFE2
 24223                           fsr1l	equ	0xFE1
 24224                           bsr	equ	0xFE0
 24225                           indf2	equ	0xFDF
 24226                           postinc2	equ	0xFDE
 24227                           postdec2	equ	0xFDD
 24228                           plusw2	equ	0xFDB
 24229                           fsr2h	equ	0xFDA
 24230                           fsr2l	equ	0xFD9
 24231                           status	equ	0xFD8
 24232                           
 24233 ;; *************** function _I2cDummyTx *****************
 24234 ;; Defined at:
 24235 ;;		line 191 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24236 ;; Parameters:    Size  Location     Type
 24237 ;;		None
 24238 ;; Auto vars:     Size  Location     Type
 24239 ;;		None
 24240 ;; Return value:  Size  Location     Type
 24241 ;;                  1    wreg      void 
 24242 ;; Registers used:
 24243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24244 ;; Tracked objects:
 24245 ;;		On entry : 0/0
 24246 ;;		On exit  : 0/0
 24247 ;;		Unchanged: 0/0
 24248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24253 ;;Total ram usage:        0 bytes
 24254 ;; Hardware stack levels used:    1
 24255 ;; Hardware stack levels required when called:    4
 24256 ;; This function calls:
 24257 ;;		i1_I2cSlv_SendI2cMsg
 24258 ;; This function is called by:
 24259 ;;		_I2cSlv_MainTask
 24260 ;;		_OsAlrm_ProcessOsAlarms
 24261 ;; This function uses a non-reentrant model
 24262 ;;
 24263                           
 24264                           	psect	text128
 24265  0041FE                     __ptext128:
 24266                           	opt stack 0
 24267  0041FE                     _I2cDummyTx:
 24268                           	opt stack 10
 24269                           
 24270                           ;i2c_slv.c: 193: static UINT8 DummyBuffer = 0x00;
 24271                           ;i2c_slv.c: 196: I2cSlv_SendI2cMsg(&DummyBuffer,0x00,1);
 24272                           
 24273                           ;incstack = 0
 24274  0041FE  0E24               	movlw	low I2cDummyTx@DummyBuffer
 24275  004200  6E3A               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer,c
 24276  004202  0E00               	movlw	high I2cDummyTx@DummyBuffer
 24277  004204  6E3B               	movwf	i1I2cSlv_SendI2cMsg@TxBuffer+1,c
 24278  004206  0E00               	movlw	0
 24279  004208  6E3C               	movwf	i1I2cSlv_SendI2cMsg@SlaveAddr,c
 24280  00420A  0E01               	movlw	1
 24281  00420C  6E3D               	movwf	i1I2cSlv_SendI2cMsg@DataLenght,c
 24282  00420E  ECA8  F01E         	call	i1_I2cSlv_SendI2cMsg	;wreg free
 24283                           
 24284                           ;i2c_slv.c: 198: I2cBusStatus = I2cBusReady;
 24285  004212  0E01               	movlw	1
 24286  004214  6E20               	movwf	_I2cBusStatus,c
 24287  004216  0012               	return		;funcret
 24288  004218                     __end_of_I2cDummyTx:
 24289                           	opt stack 0
 24290                           tosu	equ	0xFFF
 24291                           tosh	equ	0xFFE
 24292                           tosl	equ	0xFFD
 24293                           pclatu	equ	0xFFB
 24294                           pclath	equ	0xFFA
 24295                           tblptru	equ	0xFF8
 24296                           tblptrh	equ	0xFF7
 24297                           tblptrl	equ	0xFF6
 24298                           tablat	equ	0xFF5
 24299                           prodh	equ	0xFF4
 24300                           prodl	equ	0xFF3
 24301                           intcon	equ	0xFF2
 24302                           intcon2	equ	0xFF1
 24303                           intcon3	equ	0xFF0
 24304                           indf0	equ	0xFEF
 24305                           postinc0	equ	0xFEE
 24306                           plusw0	equ	0xFEB
 24307                           fsr0h	equ	0xFEA
 24308                           fsr0l	equ	0xFE9
 24309                           wreg	equ	0xFE8
 24310                           indf1	equ	0xFE7
 24311                           postinc1	equ	0xFE6
 24312                           postdec1	equ	0xFE5
 24313                           fsr1h	equ	0xFE2
 24314                           fsr1l	equ	0xFE1
 24315                           bsr	equ	0xFE0
 24316                           indf2	equ	0xFDF
 24317                           postinc2	equ	0xFDE
 24318                           postdec2	equ	0xFDD
 24319                           plusw2	equ	0xFDB
 24320                           fsr2h	equ	0xFDA
 24321                           fsr2l	equ	0xFD9
 24322                           status	equ	0xFD8
 24323                           
 24324 ;; *************** function i1_I2cSlv_SendI2cMsg *****************
 24325 ;; Defined at:
 24326 ;;		line 250 in file "../../../MercuryFwk/Source/c/03_Sml/01_Pml/02_SlvI2c/i2c_slv.c"
 24327 ;; Parameters:    Size  Location     Type
 24328 ;;  TxBuffer        2   21[COMRAM] PTR unsigned char 
 24329 ;;		 -> Terminal@TermTxBuffer(50), I2cDummyTx@DummyBuffer(1), 
 24330 ;;  SlaveAddr       1   23[COMRAM] unsigned char 
 24331 ;;  DataLenght      1   24[COMRAM] unsigned char 
 24332 ;; Auto vars:     Size  Location     Type
 24333 ;;  I2cSlv_SendI    1   25[COMRAM] unsigned char 
 24334 ;; Return value:  Size  Location     Type
 24335 ;;                  1    wreg      unsigned char 
 24336 ;; Registers used:
 24337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24338 ;; Tracked objects:
 24339 ;;		On entry : 0/0
 24340 ;;		On exit  : 0/0
 24341 ;;		Unchanged: 0/0
 24342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24344 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24346 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24347 ;;Total ram usage:        5 bytes
 24348 ;; Hardware stack levels used:    1
 24349 ;; Hardware stack levels required when called:    3
 24350 ;; This function calls:
 24351 ;;		i1_GenerateEvt
 24352 ;; This function is called by:
 24353 ;;		_I2cDummyTx
 24354 ;; This function uses a non-reentrant model
 24355 ;;
 24356                           
 24357                           	psect	text129
 24358  003D50                     __ptext129:
 24359                           	opt stack 0
 24360  003D50                     i1_I2cSlv_SendI2cMsg:
 24361                           	opt stack 10
 24362                           
 24363                           ;i2c_slv.c: 252: UINT8 TxSts = 0u;
 24364                           
 24365                           ;incstack = 0
 24366  003D50  0E00               	movlw	0
 24367  003D52  6E3E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 24368                           
 24369                           ;i2c_slv.c: 254: if (I2cComSts != TxInProgress)
 24370  003D54  0100               	movlb	0	; () banked
 24371  003D56  05CC               	decf	_I2cComSts& (0+255),w,b
 24372  003D58  B4D8               	btfsc	status,2,c
 24373  003D5A  D014               	goto	i1l891
 24374                           
 24375                           ; BSR set to: 0
 24376                           ;i2c_slv.c: 255: {
 24377                           ;i2c_slv.c: 257: I2cTxPacket.SlaveAddress = SlaveAddr;
 24378  003D5C  C03C  F1F3         	movff	i1I2cSlv_SendI2cMsg@SlaveAddr,_I2cTxPacket
 24379                           
 24380                           ; BSR set to: 0
 24381                           ;i2c_slv.c: 258: I2cTxPacket.ReadWrite = ((UINT8)(0));
 24382  003D60  0E00               	movlw	0
 24383  003D62  0101               	movlb	1	; () banked
 24384  003D64  6FF4               	movwf	(_I2cTxPacket+1)& (0+255),b
 24385                           
 24386                           ; BSR set to: 1
 24387                           ;i2c_slv.c: 259: I2cTxPacket.Lenght = DataLenght;
 24388  003D66  C03D  F1F7         	movff	i1I2cSlv_SendI2cMsg@DataLenght,_I2cTxPacket+4
 24389                           
 24390                           ; BSR set to: 1
 24391                           ;i2c_slv.c: 260: I2cTxPacket.Buffer = TxBuffer;
 24392  003D6A  C03A  F1F5         	movff	i1I2cSlv_SendI2cMsg@TxBuffer,_I2cTxPacket+2
 24393  003D6E  C03B  F1F6         	movff	i1I2cSlv_SendI2cMsg@TxBuffer+1,_I2cTxPacket+3
 24394                           
 24395                           ; BSR set to: 1
 24396                           ;i2c_slv.c: 263: GenerateEvt(&I2cWriteDataEvt);
 24397  003D72  0EE0               	movlw	low _I2cWriteDataEvt
 24398  003D74  6E37               	movwf	i1GenerateEvt@Event,c
 24399  003D76  0E00               	movlw	high _I2cWriteDataEvt
 24400  003D78  6E38               	movwf	i1GenerateEvt@Event+1,c
 24401  003D7A  EC46  F021         	call	i1_GenerateEvt	;wreg free
 24402                           
 24403                           ;i2c_slv.c: 265: TxSts = 1u;
 24404  003D7E  0E01               	movlw	1
 24405  003D80  6E3E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 24406                           
 24407                           ;i2c_slv.c: 266: }
 24408  003D82  0012               	return	
 24409  003D84                     i1l891:
 24410                           
 24411                           ;i2c_slv.c: 267: else
 24412                           ;i2c_slv.c: 268: {
 24413                           ;i2c_slv.c: 270: TxSts = 0u;
 24414  003D84  0E00               	movlw	0
 24415  003D86  6E3E               	movwf	i1I2cSlv_SendI2cMsg@TxSts,c
 24416  003D88  0012               	return	
 24417  003D8A                     __end_ofi1_I2cSlv_SendI2cMsg:
 24418                           	opt stack 0
 24419                           tosu	equ	0xFFF
 24420                           tosh	equ	0xFFE
 24421                           tosl	equ	0xFFD
 24422                           pclatu	equ	0xFFB
 24423                           pclath	equ	0xFFA
 24424                           tblptru	equ	0xFF8
 24425                           tblptrh	equ	0xFF7
 24426                           tblptrl	equ	0xFF6
 24427                           tablat	equ	0xFF5
 24428                           prodh	equ	0xFF4
 24429                           prodl	equ	0xFF3
 24430                           intcon	equ	0xFF2
 24431                           intcon2	equ	0xFF1
 24432                           intcon3	equ	0xFF0
 24433                           indf0	equ	0xFEF
 24434                           postinc0	equ	0xFEE
 24435                           plusw0	equ	0xFEB
 24436                           fsr0h	equ	0xFEA
 24437                           fsr0l	equ	0xFE9
 24438                           wreg	equ	0xFE8
 24439                           indf1	equ	0xFE7
 24440                           postinc1	equ	0xFE6
 24441                           postdec1	equ	0xFE5
 24442                           fsr1h	equ	0xFE2
 24443                           fsr1l	equ	0xFE1
 24444                           bsr	equ	0xFE0
 24445                           indf2	equ	0xFDF
 24446                           postinc2	equ	0xFDE
 24447                           postdec2	equ	0xFDD
 24448                           plusw2	equ	0xFDB
 24449                           fsr2h	equ	0xFDA
 24450                           fsr2l	equ	0xFD9
 24451                           status	equ	0xFD8
 24452                           
 24453 ;; *************** function i1_GenerateEvt *****************
 24454 ;; Defined at:
 24455 ;;		line 75 in file "../../../MercuryFwk/Source/c/02_Osl/os_ser.c"
 24456 ;; Parameters:    Size  Location     Type
 24457 ;;  Event           2   18[COMRAM] PTR struct EventStructur
 24458 ;;		 -> AlarmEvent(1), I2cRxPacket(6), I2cReadDataEvt(1), I2cWriteDataEvt(1), 
 24459 ;; Auto vars:     Size  Location     Type
 24460 ;;  GenerateEvt     1   20[COMRAM] enum E7727
 24461 ;; Return value:  Size  Location     Type
 24462 ;;                  1    wreg      enum E7699
 24463 ;; Registers used:
 24464 ;;		wreg, fsr2l, fsr2h, status,2
 24465 ;; Tracked objects:
 24466 ;;		On entry : 0/0
 24467 ;;		On exit  : 0/0
 24468 ;;		Unchanged: 0/0
 24469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24473 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24474 ;;Total ram usage:        3 bytes
 24475 ;; Hardware stack levels used:    1
 24476 ;; Hardware stack levels required when called:    2
 24477 ;; This function calls:
 24478 ;;		Nothing
 24479 ;; This function is called by:
 24480 ;;		i1_I2cSlv_SendI2cMsg
 24481 ;; This function uses a non-reentrant model
 24482 ;;
 24483                           
 24484                           	psect	text130
 24485  00428C                     __ptext130:
 24486                           	opt stack 0
 24487  00428C                     i1_GenerateEvt:
 24488                           	opt stack 10
 24489                           
 24490                           ;os_ser.c: 78: EventStatusType EventStatus = EventIdle;
 24491                           
 24492                           ;incstack = 0
 24493  00428C  0E00               	movlw	0
 24494  00428E  6E39               	movwf	i1GenerateEvt@EventStatus,c
 24495                           
 24496                           ;os_ser.c: 81: Event->EventStatus = EventSent;
 24497  004290  C037  FFD9         	movff	i1GenerateEvt@Event,fsr2l
 24498  004294  C038  FFDA         	movff	i1GenerateEvt@Event+1,fsr2h
 24499  004298  0E02               	movlw	2
 24500  00429A  6EDF               	movwf	indf2,c
 24501                           
 24502                           ;os_ser.c: 83: EventStatus = EventSent;
 24503  00429C  0E02               	movlw	2
 24504  00429E  6E39               	movwf	i1GenerateEvt@EventStatus,c
 24505  0042A0  0012               	return	
 24506  0042A2                     __end_ofi1_GenerateEvt:
 24507                           	opt stack 0
 24508                           tosu	equ	0xFFF
 24509                           tosh	equ	0xFFE
 24510                           tosl	equ	0xFFD
 24511                           pclatu	equ	0xFFB
 24512                           pclath	equ	0xFFA
 24513                           tblptru	equ	0xFF8
 24514                           tblptrh	equ	0xFF7
 24515                           tblptrl	equ	0xFF6
 24516                           tablat	equ	0xFF5
 24517                           prodh	equ	0xFF4
 24518                           prodl	equ	0xFF3
 24519                           intcon	equ	0xFF2
 24520                           intcon2	equ	0xFF1
 24521                           intcon3	equ	0xFF0
 24522                           indf0	equ	0xFEF
 24523                           postinc0	equ	0xFEE
 24524                           plusw0	equ	0xFEB
 24525                           fsr0h	equ	0xFEA
 24526                           fsr0l	equ	0xFE9
 24527                           wreg	equ	0xFE8
 24528                           indf1	equ	0xFE7
 24529                           postinc1	equ	0xFE6
 24530                           postdec1	equ	0xFE5
 24531                           fsr1h	equ	0xFE2
 24532                           fsr1l	equ	0xFE1
 24533                           bsr	equ	0xFE0
 24534                           indf2	equ	0xFDF
 24535                           postinc2	equ	0xFDE
 24536                           postdec2	equ	0xFDD
 24537                           plusw2	equ	0xFDB
 24538                           fsr2h	equ	0xFDA
 24539                           fsr2l	equ	0xFD9
 24540                           status	equ	0xFD8
 24541                           
 24542 ;; *************** function _HighPriorityIsr *****************
 24543 ;; Defined at:
 24544 ;;		line 153 in file "../../../MercuryFwk/Source/c/01_Hal/01_Sys/irq.c"
 24545 ;; Parameters:    Size  Location     Type
 24546 ;;		None
 24547 ;; Auto vars:     Size  Location     Type
 24548 ;;		None
 24549 ;; Return value:  Size  Location     Type
 24550 ;;                  1    wreg      void 
 24551 ;; Registers used:
 24552 ;;		wreg, status,2, status,0, cstack
 24553 ;; Tracked objects:
 24554 ;;		On entry : 0/0
 24555 ;;		On exit  : 0/0
 24556 ;;		Unchanged: 0/0
 24557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24560 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24561 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24562 ;;Total ram usage:       18 bytes
 24563 ;; Hardware stack levels used:    1
 24564 ;; Hardware stack levels required when called:    1
 24565 ;; This function calls:
 24566 ;;		_Mcu_Int0Isr
 24567 ;;		_Mcu_Int1Isr
 24568 ;;		_Rtcc_RtcIsr
 24569 ;;		_Uart_Uart1RxIsr
 24570 ;; This function is called by:
 24571 ;;		Interrupt level 2
 24572 ;; This function uses a non-reentrant model
 24573 ;;
 24574                           
 24575                           	psect	intcode
 24576  000008                     __pintcode:
 24577                           	opt stack 0
 24578  000008                     _HighPriorityIsr:
 24579                           	opt stack 10
 24580                           
 24581                           ;incstack = 0
 24582  000008  8249               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 24583  00000A  EFA2  F015         	goto	int_func
 24584                           tosu	equ	0xFFF
 24585                           tosh	equ	0xFFE
 24586                           tosl	equ	0xFFD
 24587                           pclatu	equ	0xFFB
 24588                           pclath	equ	0xFFA
 24589                           tblptru	equ	0xFF8
 24590                           tblptrh	equ	0xFF7
 24591                           tblptrl	equ	0xFF6
 24592                           tablat	equ	0xFF5
 24593                           prodh	equ	0xFF4
 24594                           prodl	equ	0xFF3
 24595                           intcon	equ	0xFF2
 24596                           intcon2	equ	0xFF1
 24597                           intcon3	equ	0xFF0
 24598                           indf0	equ	0xFEF
 24599                           postinc0	equ	0xFEE
 24600                           plusw0	equ	0xFEB
 24601                           fsr0h	equ	0xFEA
 24602                           fsr0l	equ	0xFE9
 24603                           wreg	equ	0xFE8
 24604                           indf1	equ	0xFE7
 24605                           postinc1	equ	0xFE6
 24606                           postdec1	equ	0xFE5
 24607                           fsr1h	equ	0xFE2
 24608                           fsr1l	equ	0xFE1
 24609                           bsr	equ	0xFE0
 24610                           indf2	equ	0xFDF
 24611                           postinc2	equ	0xFDE
 24612                           postdec2	equ	0xFDD
 24613                           plusw2	equ	0xFDB
 24614                           fsr2h	equ	0xFDA
 24615                           fsr2l	equ	0xFD9
 24616                           status	equ	0xFD8
 24617                           
 24618                           	psect	intcode_body
 24619  002B44                     __pintcode_body:
 24620                           	opt stack 10
 24621  002B44                     int_func:
 24622                           	opt stack 10
 24623  002B44  CFFA F025          	movff	pclath,??_HighPriorityIsr
 24624  002B48  CFFB F026          	movff	pclatu,??_HighPriorityIsr+1
 24625  002B4C  CFE9 F027          	movff	fsr0l,??_HighPriorityIsr+2
 24626  002B50  CFEA F028          	movff	fsr0h,??_HighPriorityIsr+3
 24627  002B54  CFE1 F029          	movff	fsr1l,??_HighPriorityIsr+4
 24628  002B58  CFE2 F02A          	movff	fsr1h,??_HighPriorityIsr+5
 24629  002B5C  CFD9 F02B          	movff	fsr2l,??_HighPriorityIsr+6
 24630  002B60  CFDA F02C          	movff	fsr2h,??_HighPriorityIsr+7
 24631  002B64  CFF3 F02D          	movff	prodl,??_HighPriorityIsr+8
 24632  002B68  CFF4 F02E          	movff	prodh,??_HighPriorityIsr+9
 24633  002B6C  CFF6 F02F          	movff	tblptrl,??_HighPriorityIsr+10
 24634  002B70  CFF7 F030          	movff	tblptrh,??_HighPriorityIsr+11
 24635  002B74  CFF8 F031          	movff	tblptru,??_HighPriorityIsr+12
 24636  002B78  CFF5 F032          	movff	tablat,??_HighPriorityIsr+13
 24637  002B7C  C049  F033         	movff	btemp,??_HighPriorityIsr+14
 24638  002B80  C04A  F034         	movff	btemp+1,??_HighPriorityIsr+15
 24639  002B84  C04B  F035         	movff	btemp+2,??_HighPriorityIsr+16
 24640  002B88  C04C  F036         	movff	btemp+3,??_HighPriorityIsr+17
 24641                           
 24642                           ;irq.c: 157: if (INTCONbits.INT0IF == ((UINT8)(1)))
 24643  002B8C  B2F2               	btfsc	intcon,1,c	;volatile
 24644                           
 24645                           ;irq.c: 158: {
 24646                           ;irq.c: 160: Mcu_Int0Isr();
 24647  002B8E  ECBD  F021         	call	_Mcu_Int0Isr	;wreg free
 24648                           
 24649                           ;irq.c: 161: }
 24650                           ;irq.c: 166: if (INTCON3bits.INT1IF == ((UINT8)(1)))
 24651  002B92  B0F0               	btfsc	intcon3,0,c	;volatile
 24652                           
 24653                           ;irq.c: 167: {
 24654                           ;irq.c: 169: Mcu_Int1Isr();
 24655  002B94  ECBB  F021         	call	_Mcu_Int1Isr	;wreg free
 24656                           
 24657                           ;irq.c: 170: }
 24658                           ;irq.c: 202: if (PIR3bits.RTCCIF == ((UINT8)(1)))
 24659  002B98  B0A4               	btfsc	4004,0,c	;volatile
 24660                           
 24661                           ;irq.c: 203: {
 24662                           ;irq.c: 205: Rtcc_RtcIsr();
 24663  002B9A  ECB9  F021         	call	_Rtcc_RtcIsr	;wreg free
 24664                           
 24665                           ;irq.c: 206: }
 24666                           ;irq.c: 211: if (PIR1bits.RC1IF == ((UINT8)(1)))
 24667  002B9E  BA9E               	btfsc	3998,5,c	;volatile
 24668                           
 24669                           ;irq.c: 212: {
 24670                           ;irq.c: 214: Uart_Uart1RxIsr();
 24671  002BA0  ECAE  F021         	call	_Uart_Uart1RxIsr	;wreg free
 24672  002BA4  C036  F04C         	movff	??_HighPriorityIsr+17,btemp+3
 24673  002BA8  C035  F04B         	movff	??_HighPriorityIsr+16,btemp+2
 24674  002BAC  C034  F04A         	movff	??_HighPriorityIsr+15,btemp+1
 24675  002BB0  C033  F049         	movff	??_HighPriorityIsr+14,btemp
 24676  002BB4  C032  FFF5         	movff	??_HighPriorityIsr+13,tablat
 24677  002BB8  C031  FFF8         	movff	??_HighPriorityIsr+12,tblptru
 24678  002BBC  C030  FFF7         	movff	??_HighPriorityIsr+11,tblptrh
 24679  002BC0  C02F  FFF6         	movff	??_HighPriorityIsr+10,tblptrl
 24680  002BC4  C02E  FFF4         	movff	??_HighPriorityIsr+9,prodh
 24681  002BC8  C02D  FFF3         	movff	??_HighPriorityIsr+8,prodl
 24682  002BCC  C02C  FFDA         	movff	??_HighPriorityIsr+7,fsr2h
 24683  002BD0  C02B  FFD9         	movff	??_HighPriorityIsr+6,fsr2l
 24684  002BD4  C02A  FFE2         	movff	??_HighPriorityIsr+5,fsr1h
 24685  002BD8  C029  FFE1         	movff	??_HighPriorityIsr+4,fsr1l
 24686  002BDC  C028  FFEA         	movff	??_HighPriorityIsr+3,fsr0h
 24687  002BE0  C027  FFE9         	movff	??_HighPriorityIsr+2,fsr0l
 24688  002BE4  C026  FFFB         	movff	??_HighPriorityIsr+1,pclatu
 24689  002BE8  C025  FFFA         	movff	??_HighPriorityIsr,pclath
 24690  002BEC  9249               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24691  002BEE  0011               	retfie		f
 24692  002BF0                     __end_of_HighPriorityIsr:
 24693                           	opt stack 0
 24694                           tosu	equ	0xFFF
 24695                           tosh	equ	0xFFE
 24696                           tosl	equ	0xFFD
 24697                           pclatu	equ	0xFFB
 24698                           pclath	equ	0xFFA
 24699                           tblptru	equ	0xFF8
 24700                           tblptrh	equ	0xFF7
 24701                           tblptrl	equ	0xFF6
 24702                           tablat	equ	0xFF5
 24703                           prodh	equ	0xFF4
 24704                           prodl	equ	0xFF3
 24705                           intcon	equ	0xFF2
 24706                           intcon2	equ	0xFF1
 24707                           intcon3	equ	0xFF0
 24708                           indf0	equ	0xFEF
 24709                           postinc0	equ	0xFEE
 24710                           plusw0	equ	0xFEB
 24711                           fsr0h	equ	0xFEA
 24712                           fsr0l	equ	0xFE9
 24713                           wreg	equ	0xFE8
 24714                           indf1	equ	0xFE7
 24715                           postinc1	equ	0xFE6
 24716                           postdec1	equ	0xFE5
 24717                           fsr1h	equ	0xFE2
 24718                           fsr1l	equ	0xFE1
 24719                           bsr	equ	0xFE0
 24720                           indf2	equ	0xFDF
 24721                           postinc2	equ	0xFDE
 24722                           postdec2	equ	0xFDD
 24723                           plusw2	equ	0xFDB
 24724                           fsr2h	equ	0xFDA
 24725                           fsr2l	equ	0xFD9
 24726                           status	equ	0xFD8
 24727                           
 24728 ;; *************** function _Uart_Uart1RxIsr *****************
 24729 ;; Defined at:
 24730 ;;		line 584 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/uart_drv.c"
 24731 ;; Parameters:    Size  Location     Type
 24732 ;;		None
 24733 ;; Auto vars:     Size  Location     Type
 24734 ;;		None
 24735 ;; Return value:  Size  Location     Type
 24736 ;;                  1    wreg      void 
 24737 ;; Registers used:
 24738 ;;		None
 24739 ;; Tracked objects:
 24740 ;;		On entry : 0/0
 24741 ;;		On exit  : 0/0
 24742 ;;		Unchanged: 0/0
 24743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24748 ;;Total ram usage:        0 bytes
 24749 ;; Hardware stack levels used:    1
 24750 ;; This function calls:
 24751 ;;		Nothing
 24752 ;; This function is called by:
 24753 ;;		_HighPriorityIsr
 24754 ;; This function uses a non-reentrant model
 24755 ;;
 24756                           
 24757                           	psect	text132
 24758  00435C                     __ptext132:
 24759                           	opt stack 0
 24760  00435C                     _Uart_Uart1RxIsr:
 24761                           	opt stack 10
 24762                           
 24763                           ;uart_drv.c: 587: static UINT8 UartRxData = 0;
 24764                           ;uart_drv.c: 590: UartRxData = RCREG1;
 24765                           
 24766                           ;incstack = 0
 24767  00435C  CFAF F021          	movff	4015,Uart_Uart1RxIsr@UartRxData	;volatile
 24768  004360  0012               	return		;funcret
 24769  004362                     __end_of_Uart_Uart1RxIsr:
 24770                           	opt stack 0
 24771                           tosu	equ	0xFFF
 24772                           tosh	equ	0xFFE
 24773                           tosl	equ	0xFFD
 24774                           pclatu	equ	0xFFB
 24775                           pclath	equ	0xFFA
 24776                           tblptru	equ	0xFF8
 24777                           tblptrh	equ	0xFF7
 24778                           tblptrl	equ	0xFF6
 24779                           tablat	equ	0xFF5
 24780                           prodh	equ	0xFF4
 24781                           prodl	equ	0xFF3
 24782                           intcon	equ	0xFF2
 24783                           intcon2	equ	0xFF1
 24784                           intcon3	equ	0xFF0
 24785                           indf0	equ	0xFEF
 24786                           postinc0	equ	0xFEE
 24787                           plusw0	equ	0xFEB
 24788                           fsr0h	equ	0xFEA
 24789                           fsr0l	equ	0xFE9
 24790                           wreg	equ	0xFE8
 24791                           indf1	equ	0xFE7
 24792                           postinc1	equ	0xFE6
 24793                           postdec1	equ	0xFE5
 24794                           fsr1h	equ	0xFE2
 24795                           fsr1l	equ	0xFE1
 24796                           bsr	equ	0xFE0
 24797                           indf2	equ	0xFDF
 24798                           postinc2	equ	0xFDE
 24799                           postdec2	equ	0xFDD
 24800                           plusw2	equ	0xFDB
 24801                           fsr2h	equ	0xFDA
 24802                           fsr2l	equ	0xFD9
 24803                           status	equ	0xFD8
 24804                           
 24805 ;; *************** function _Rtcc_RtcIsr *****************
 24806 ;; Defined at:
 24807 ;;		line 537 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/rtcc_drv.c"
 24808 ;; Parameters:    Size  Location     Type
 24809 ;;		None
 24810 ;; Auto vars:     Size  Location     Type
 24811 ;;		None
 24812 ;; Return value:  Size  Location     Type
 24813 ;;                  1    wreg      void 
 24814 ;; Registers used:
 24815 ;;		wreg, status,2, status,0
 24816 ;; Tracked objects:
 24817 ;;		On entry : 0/0
 24818 ;;		On exit  : 0/0
 24819 ;;		Unchanged: 0/0
 24820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24825 ;;Total ram usage:        0 bytes
 24826 ;; Hardware stack levels used:    1
 24827 ;; This function calls:
 24828 ;;		Nothing
 24829 ;; This function is called by:
 24830 ;;		_HighPriorityIsr
 24831 ;; This function uses a non-reentrant model
 24832 ;;
 24833                           
 24834                           	psect	text133
 24835  004372                     __ptext133:
 24836                           	opt stack 0
 24837  004372                     _Rtcc_RtcIsr:
 24838                           	opt stack 10
 24839                           
 24840                           ;rtcc_drv.c: 540: PIR3bits.RTCCIF = 0u;
 24841                           
 24842                           ;incstack = 0
 24843  004372  90A4               	bcf	4004,0,c	;volatile
 24844  004374  0012               	return	
 24845  004376                     __end_of_Rtcc_RtcIsr:
 24846                           	opt stack 0
 24847                           tosu	equ	0xFFF
 24848                           tosh	equ	0xFFE
 24849                           tosl	equ	0xFFD
 24850                           pclatu	equ	0xFFB
 24851                           pclath	equ	0xFFA
 24852                           tblptru	equ	0xFF8
 24853                           tblptrh	equ	0xFF7
 24854                           tblptrl	equ	0xFF6
 24855                           tablat	equ	0xFF5
 24856                           prodh	equ	0xFF4
 24857                           prodl	equ	0xFF3
 24858                           intcon	equ	0xFF2
 24859                           intcon2	equ	0xFF1
 24860                           intcon3	equ	0xFF0
 24861                           indf0	equ	0xFEF
 24862                           postinc0	equ	0xFEE
 24863                           plusw0	equ	0xFEB
 24864                           fsr0h	equ	0xFEA
 24865                           fsr0l	equ	0xFE9
 24866                           wreg	equ	0xFE8
 24867                           indf1	equ	0xFE7
 24868                           postinc1	equ	0xFE6
 24869                           postdec1	equ	0xFE5
 24870                           fsr1h	equ	0xFE2
 24871                           fsr1l	equ	0xFE1
 24872                           bsr	equ	0xFE0
 24873                           indf2	equ	0xFDF
 24874                           postinc2	equ	0xFDE
 24875                           postdec2	equ	0xFDD
 24876                           plusw2	equ	0xFDB
 24877                           fsr2h	equ	0xFDA
 24878                           fsr2l	equ	0xFD9
 24879                           status	equ	0xFD8
 24880                           
 24881 ;; *************** function _Mcu_Int1Isr *****************
 24882 ;; Defined at:
 24883 ;;		line 161 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 24884 ;; Parameters:    Size  Location     Type
 24885 ;;		None
 24886 ;; Auto vars:     Size  Location     Type
 24887 ;;		None
 24888 ;; Return value:  Size  Location     Type
 24889 ;;                  1    wreg      void 
 24890 ;; Registers used:
 24891 ;;		wreg, status,2, status,0
 24892 ;; Tracked objects:
 24893 ;;		On entry : 0/0
 24894 ;;		On exit  : 0/0
 24895 ;;		Unchanged: 0/0
 24896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24901 ;;Total ram usage:        0 bytes
 24902 ;; Hardware stack levels used:    1
 24903 ;; This function calls:
 24904 ;;		Nothing
 24905 ;; This function is called by:
 24906 ;;		_HighPriorityIsr
 24907 ;; This function uses a non-reentrant model
 24908 ;;
 24909                           
 24910                           	psect	text134
 24911  004376                     __ptext134:
 24912                           	opt stack 0
 24913  004376                     _Mcu_Int1Isr:
 24914                           	opt stack 10
 24915                           
 24916                           ;mcu_drv.c: 164: INTCON3bits.INT1IF = 0u;
 24917                           
 24918                           ;incstack = 0
 24919  004376  90F0               	bcf	intcon3,0,c	;volatile
 24920  004378  0012               	return	
 24921  00437A                     __end_of_Mcu_Int1Isr:
 24922                           	opt stack 0
 24923                           tosu	equ	0xFFF
 24924                           tosh	equ	0xFFE
 24925                           tosl	equ	0xFFD
 24926                           pclatu	equ	0xFFB
 24927                           pclath	equ	0xFFA
 24928                           tblptru	equ	0xFF8
 24929                           tblptrh	equ	0xFF7
 24930                           tblptrl	equ	0xFF6
 24931                           tablat	equ	0xFF5
 24932                           prodh	equ	0xFF4
 24933                           prodl	equ	0xFF3
 24934                           intcon	equ	0xFF2
 24935                           intcon2	equ	0xFF1
 24936                           intcon3	equ	0xFF0
 24937                           indf0	equ	0xFEF
 24938                           postinc0	equ	0xFEE
 24939                           plusw0	equ	0xFEB
 24940                           fsr0h	equ	0xFEA
 24941                           fsr0l	equ	0xFE9
 24942                           wreg	equ	0xFE8
 24943                           indf1	equ	0xFE7
 24944                           postinc1	equ	0xFE6
 24945                           postdec1	equ	0xFE5
 24946                           fsr1h	equ	0xFE2
 24947                           fsr1l	equ	0xFE1
 24948                           bsr	equ	0xFE0
 24949                           indf2	equ	0xFDF
 24950                           postinc2	equ	0xFDE
 24951                           postdec2	equ	0xFDD
 24952                           plusw2	equ	0xFDB
 24953                           fsr2h	equ	0xFDA
 24954                           fsr2l	equ	0xFD9
 24955                           status	equ	0xFD8
 24956                           
 24957 ;; *************** function _Mcu_Int0Isr *****************
 24958 ;; Defined at:
 24959 ;;		line 126 in file "../../../MercuryFwk/Source/c/01_Hal/02_Drv/mcu_drv.c"
 24960 ;; Parameters:    Size  Location     Type
 24961 ;;		None
 24962 ;; Auto vars:     Size  Location     Type
 24963 ;;		None
 24964 ;; Return value:  Size  Location     Type
 24965 ;;                  1    wreg      void 
 24966 ;; Registers used:
 24967 ;;		wreg, status,2, status,0
 24968 ;; Tracked objects:
 24969 ;;		On entry : 0/0
 24970 ;;		On exit  : 0/0
 24971 ;;		Unchanged: 0/0
 24972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 24973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 24977 ;;Total ram usage:        0 bytes
 24978 ;; Hardware stack levels used:    1
 24979 ;; This function calls:
 24980 ;;		Nothing
 24981 ;; This function is called by:
 24982 ;;		_HighPriorityIsr
 24983 ;; This function uses a non-reentrant model
 24984 ;;
 24985                           
 24986                           	psect	text135
 24987  00437A                     __ptext135:
 24988                           	opt stack 0
 24989  00437A                     _Mcu_Int0Isr:
 24990                           	opt stack 10
 24991                           
 24992                           ;mcu_drv.c: 129: INTCONbits.INT0IF = 0u;
 24993                           
 24994                           ;incstack = 0
 24995  00437A  92F2               	bcf	intcon,1,c	;volatile
 24996  00437C  0012               	return	
 24997  00437E                     __end_of_Mcu_Int0Isr:
 24998                           	opt stack 0
 24999                           tosu	equ	0xFFF
 25000                           tosh	equ	0xFFE
 25001                           tosl	equ	0xFFD
 25002                           pclatu	equ	0xFFB
 25003                           pclath	equ	0xFFA
 25004                           tblptru	equ	0xFF8
 25005                           tblptrh	equ	0xFF7
 25006                           tblptrl	equ	0xFF6
 25007                           tablat	equ	0xFF5
 25008                           prodh	equ	0xFF4
 25009                           prodl	equ	0xFF3
 25010                           intcon	equ	0xFF2
 25011                           intcon2	equ	0xFF1
 25012                           intcon3	equ	0xFF0
 25013                           indf0	equ	0xFEF
 25014                           postinc0	equ	0xFEE
 25015                           plusw0	equ	0xFEB
 25016                           fsr0h	equ	0xFEA
 25017                           fsr0l	equ	0xFE9
 25018                           wreg	equ	0xFE8
 25019                           indf1	equ	0xFE7
 25020                           postinc1	equ	0xFE6
 25021                           postdec1	equ	0xFE5
 25022                           fsr1h	equ	0xFE2
 25023                           fsr1l	equ	0xFE1
 25024                           bsr	equ	0xFE0
 25025                           indf2	equ	0xFDF
 25026                           postinc2	equ	0xFDE
 25027                           postdec2	equ	0xFDD
 25028                           plusw2	equ	0xFDB
 25029                           fsr2h	equ	0xFDA
 25030                           fsr2l	equ	0xFD9
 25031                           status	equ	0xFD8
 25032                           tosu	equ	0xFFF
 25033                           tosh	equ	0xFFE
 25034                           tosl	equ	0xFFD
 25035                           pclatu	equ	0xFFB
 25036                           pclath	equ	0xFFA
 25037                           tblptru	equ	0xFF8
 25038                           tblptrh	equ	0xFF7
 25039                           tblptrl	equ	0xFF6
 25040                           tablat	equ	0xFF5
 25041                           prodh	equ	0xFF4
 25042                           prodl	equ	0xFF3
 25043                           intcon	equ	0xFF2
 25044                           intcon2	equ	0xFF1
 25045                           intcon3	equ	0xFF0
 25046                           indf0	equ	0xFEF
 25047                           postinc0	equ	0xFEE
 25048                           plusw0	equ	0xFEB
 25049                           fsr0h	equ	0xFEA
 25050                           fsr0l	equ	0xFE9
 25051                           wreg	equ	0xFE8
 25052                           indf1	equ	0xFE7
 25053                           postinc1	equ	0xFE6
 25054                           postdec1	equ	0xFE5
 25055                           fsr1h	equ	0xFE2
 25056                           fsr1l	equ	0xFE1
 25057                           bsr	equ	0xFE0
 25058                           indf2	equ	0xFDF
 25059                           postinc2	equ	0xFDE
 25060                           postdec2	equ	0xFDD
 25061                           plusw2	equ	0xFDB
 25062                           fsr2h	equ	0xFDA
 25063                           fsr2l	equ	0xFD9
 25064                           status	equ	0xFD8
 25065                           
 25066                           	psect	text136
 25067  000000                     __ptext136:
 25068                           	opt stack 0
 25069                           tosu	equ	0xFFF
 25070                           tosh	equ	0xFFE
 25071                           tosl	equ	0xFFD
 25072                           pclatu	equ	0xFFB
 25073                           pclath	equ	0xFFA
 25074                           tblptru	equ	0xFF8
 25075                           tblptrh	equ	0xFF7
 25076                           tblptrl	equ	0xFF6
 25077                           tablat	equ	0xFF5
 25078                           prodh	equ	0xFF4
 25079                           prodl	equ	0xFF3
 25080                           intcon	equ	0xFF2
 25081                           intcon2	equ	0xFF1
 25082                           intcon3	equ	0xFF0
 25083                           indf0	equ	0xFEF
 25084                           postinc0	equ	0xFEE
 25085                           plusw0	equ	0xFEB
 25086                           fsr0h	equ	0xFEA
 25087                           fsr0l	equ	0xFE9
 25088                           wreg	equ	0xFE8
 25089                           indf1	equ	0xFE7
 25090                           postinc1	equ	0xFE6
 25091                           postdec1	equ	0xFE5
 25092                           fsr1h	equ	0xFE2
 25093                           fsr1l	equ	0xFE1
 25094                           bsr	equ	0xFE0
 25095                           indf2	equ	0xFDF
 25096                           postinc2	equ	0xFDE
 25097                           postdec2	equ	0xFDD
 25098                           plusw2	equ	0xFDB
 25099                           fsr2h	equ	0xFDA
 25100                           fsr2l	equ	0xFD9
 25101                           status	equ	0xFD8
 25102                           
 25103                           	psect	rparam
 25104  0000                     tosu	equ	0xFFF
 25105                           tosh	equ	0xFFE
 25106                           tosl	equ	0xFFD
 25107                           pclatu	equ	0xFFB
 25108                           pclath	equ	0xFFA
 25109                           tblptru	equ	0xFF8
 25110                           tblptrh	equ	0xFF7
 25111                           tblptrl	equ	0xFF6
 25112                           tablat	equ	0xFF5
 25113                           prodh	equ	0xFF4
 25114                           prodl	equ	0xFF3
 25115                           intcon	equ	0xFF2
 25116                           intcon2	equ	0xFF1
 25117                           intcon3	equ	0xFF0
 25118                           indf0	equ	0xFEF
 25119                           postinc0	equ	0xFEE
 25120                           plusw0	equ	0xFEB
 25121                           fsr0h	equ	0xFEA
 25122                           fsr0l	equ	0xFE9
 25123                           wreg	equ	0xFE8
 25124                           indf1	equ	0xFE7
 25125                           postinc1	equ	0xFE6
 25126                           postdec1	equ	0xFE5
 25127                           fsr1h	equ	0xFE2
 25128                           fsr1l	equ	0xFE1
 25129                           bsr	equ	0xFE0
 25130                           indf2	equ	0xFDF
 25131                           postinc2	equ	0xFDE
 25132                           postdec2	equ	0xFDD
 25133                           plusw2	equ	0xFDB
 25134                           fsr2h	equ	0xFDA
 25135                           fsr2l	equ	0xFD9
 25136                           status	equ	0xFD8
 25137                           
 25138                           	psect	temp
 25139  000049                     btemp:
 25140                           	opt stack 0
 25141  000049                     	ds	1
 25142  0000                     int$flags	set	btemp
 25143  0000                     wtemp6	set	btemp+1
 25144                           tosu	equ	0xFFF
 25145                           tosh	equ	0xFFE
 25146                           tosl	equ	0xFFD
 25147                           pclatu	equ	0xFFB
 25148                           pclath	equ	0xFFA
 25149                           tblptru	equ	0xFF8
 25150                           tblptrh	equ	0xFF7
 25151                           tblptrl	equ	0xFF6
 25152                           tablat	equ	0xFF5
 25153                           prodh	equ	0xFF4
 25154                           prodl	equ	0xFF3
 25155                           intcon	equ	0xFF2
 25156                           intcon2	equ	0xFF1
 25157                           intcon3	equ	0xFF0
 25158                           indf0	equ	0xFEF
 25159                           postinc0	equ	0xFEE
 25160                           plusw0	equ	0xFEB
 25161                           fsr0h	equ	0xFEA
 25162                           fsr0l	equ	0xFE9
 25163                           wreg	equ	0xFE8
 25164                           indf1	equ	0xFE7
 25165                           postinc1	equ	0xFE6
 25166                           postdec1	equ	0xFE5
 25167                           fsr1h	equ	0xFE2
 25168                           fsr1l	equ	0xFE1
 25169                           bsr	equ	0xFE0
 25170                           indf2	equ	0xFDF
 25171                           postinc2	equ	0xFDE
 25172                           postdec2	equ	0xFDD
 25173                           plusw2	equ	0xFDB
 25174                           fsr2h	equ	0xFDA
 25175                           fsr2l	equ	0xFD9
 25176                           status	equ	0xFD8


Data Sizes:
    Strings     58
    Constant    563
    Data        69
    BSS         1208
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      72
    BANK0           160     70     130
    BANK1           256    200     256
    BANK2           256     50     106
    BANK3           256      0     255
    BANK4           192      0     130
    BANK5           256      0     220
    BANK6           256      0      64
    BANK7           256    200     200
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          192      0       0

Pointer List with Targets:

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 48
		 -> USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    xtoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Addr(BANK2[4]), 

    strtol@endptr	PTR PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strtol@s	PTR const unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK4[80]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_1(CODE[20]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_4(CODE[3]), STR_3(CODE[2]), STR_2(CODE[2]), Term_MainSm@FwkBuildStr(BANK0[4]), 
		 -> Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    memset@p1	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3775
		 -> RAM(DATA[3775]), CtrlTrfData(BIGRAMh[8]), SetupPkt(BIGRAMh[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK4[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK4[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK4[80]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 4
		 -> Terminal@Len(BANK2[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[7]), STR_6(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> Term_MainSm@FwkBuildStr(BANK0[4]), Term_MainSm@FwkMinorStr(BANK0[4]), Term_MainSm@FwkMajorStr(BANK0[4]), Terminal@Payload(BANK4[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> Terminal@Payload(BANK4[80]), 

    LedStateMachine@LedSts	PTR enum E8811 size(2) Largest target is 1
		 -> Led3Sts(BANK0[1]), Led2Sts(BANK0[1]), Led1Sts(BANK0[1]), 

    LedStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK2[6]), Led2Pulse(BANK2[6]), Led1Pulse(BANK2[6]), 

    LedStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK2[9]), Led1Blink(BANK3[9]), 

    LedStateMachine@LedOut	PTR unsigned char  size(2) Largest target is 1
		 -> Led3OutSts(BANK0[1]), Led2OutSts(BANK0[1]), Led1OutSts(BANK0[1]), 

    LedPulseStateMachine@LedPulse	PTR struct _LedPulseType size(2) Largest target is 6
		 -> Led3Pulse(BANK2[6]), Led2Pulse(BANK2[6]), Led1Pulse(BANK2[6]), 

    LedBlinkStateMachine@LedBlink	PTR struct _LedBlinkType size(2) Largest target is 9
		 -> Led3Blink(BANK3[9]), Led2Blink(BANK2[9]), Led1Blink(BANK3[9]), 

    putUSBUSART@data	PTR unsigned char  size(2) Largest target is 236
		 -> MsgReady(CODE[23]), Term_MainSm@Data(BANK3[50]), MsgFormat(CODE[236]), Welcome(CODE[137]), 
		 -> Terminal@UsbTxBuffer(BANK1[200]), Terminal@TermRxBuffer(BANK4[50]), Terminal@Payload(BANK4[80]), Terminal@UsbRxBuffer(BANK7[200]), 

    getsUSBUSART@buffer	PTR unsigned char  size(2) Largest target is 200
		 -> Terminal@UsbRxBuffer(BANK7[200]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S3986$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S3986$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S3986$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S3986$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 64
		 -> cdc_data_tx(BANK6[64]), cdc_data_rx(BANK3[64]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S2439$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S2429$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S2429$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S2405$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S2405$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S2405$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S2405$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 50
		 -> Term_MainSm@Data(BANK3[50]), USBAlternateInterface(COMRAM[2]), BDT(BIGRAMl[48]), UEP1(SFR_1[1]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 38
		 -> sd002(CODE[38]), sd001(CODE[30]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    I2cSlv_ReceiveI2cMsg@RxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cSlv_SendI2cMsg@TxBuffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK2[50]), I2cDummyTx@DummyBuffer(COMRAM[1]), 

    I2cRxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2cTxPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK2[50]), I2cDummyTx@DummyBuffer(COMRAM[1]), 

    OsTmr_GetTimerStatus@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    OsTmr_StartTimer@Timer	PTR struct _SwTimerType size(2) Largest target is 11
		 -> Term_MainSm@TermDelay(BANK3[11]), I2cSlv_QueryI2cData@TimeoutTimer(BANK3[11]), I2cSlv_QueryI2cData@QueryTimer(BANK3[11]), 

    ReceiveEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> I2cRxPacket(BANK1[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 

    GenerateEvt@Event	PTR struct EventStructure size(2) Largest target is 7
		 -> AlarmEvent(BANK0[1]), I2cRxPacket(BANK1[6]), I2cReadDataEvt(BANK0[1]), I2cWriteDataEvt(BANK0[1]), 

    S1871_SchedTblType$Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), I2cSlv_MainTask(), 

    TaskTable.Task	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> MyApp_Task(), Term_MainTask(), Rtcm_MainTask(), Led_MainTask(), 
		 -> Wdg_MainTask(), UsbDevice_MainTask(), I2cSlv_MainTask(), 

    OsAlrm_SetOsAlarm@AlarmCallback	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    S1836_OsAlarmType$AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    OsAlarms.AlrmCbk	PTR FTN()void  size(2) Largest target is 1
		 -> I2cDummyTx(), 

    Tmr4IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Tmr_RegisterTmr2IsrCallback@IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), 

    Tmr2IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Sch_SchmIntService(), Absolute function(), 

    Tmr_TmrBConfig@TmrBConfig	PTR struct _TmrBConfigType size(2) Largest target is 7
		 -> InitAuxTimer@TmrBConfig(COMRAM[7]), InitSchedTimer@TmrBConfig(BANK0[7]), 

    RtccIsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    Rtcc_AlarmConfig@AlarmConfig	PTR struct _RtccAlarmConfigType size(2) Largest target is 4
		 -> AlCfg(BANK1[4]), 

    Rtcc_RtcConfig@RtcConfig	PTR struct _RtccConfigType size(2) Largest target is 4
		 -> RtcConfig(BANK1[4]), 

    ExtInt1IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    ExtInt0IsrCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    S566_I2cReadPacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermRxBuffer(BANK4[50]), 

    I2c_ReadData@ReadPacket	PTR struct _I2cReadPacket size(2) Largest target is 7
		 -> I2cRxPacket(BANK1[6]), 

    S539_I2cWritePacket$Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK2[50]), I2cDummyTx@DummyBuffer(COMRAM[1]), 

    I2c_WriteData@WritePacket.Buffer	PTR unsigned char  size(2) Largest target is 50
		 -> Terminal@TermTxBuffer(BANK2[50]), I2cDummyTx@DummyBuffer(COMRAM[1]), 

    I2c_WriteData@WritePacket	PTR struct _I2cWritePacket size(2) Largest target is 6
		 -> I2cTxPacket(BANK1[5]), 

    I2c_InitI2cModule@I2cConfig	PTR struct _I2cConfig size(2) Largest target is 10
		 -> I2cConfig(BANK1[10]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _LowPriorityIsr in COMRAM

    _Sch_SchmIntService->_OsAlrm_ProcessOsAlarms
    _I2cDummyTx->i1_I2cSlv_SendI2cMsg
    i1_I2cSlv_SendI2cMsg->i1_GenerateEvt

Critical Paths under _HighPriorityIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    _SystemInit->_InitSchedTimer
    _InitSchedTimer->_Tmr_TmrBConfig
    _Tmr_TmrBConfig->_Tmr_TmrBPrSet
    _Tmr_TmrBPrSet->___lldiv
    _Sch_MainScheduler->_ScheduleTasks
    _Wdg_MainTask->_Mcu_SetWdgSts
    _UsbDevice_MainTask->_USBDeviceTasks
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _CDCInitEP->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _CDCTxService->_USBTransferOnePacket
    _Term_MainTask->_Term_MainSm
    _Term_MainSm->_Terminal
    _Terminal->_strtol
    _xtoi->_isxdigit
    _isxdigit->_isdigit
    _strtol->___lmul
    _isalpha->_isupper
    _putUSBUSART->_strlen
    _itoa->_utoa
    _utoa->___lwdiv
    _getsUSBUSART->_USBTransferOnePacket
    _atoi->___wmul
    _I2cSlv_SendI2cMsg->_GenerateEvt
    _I2cSlv_ReceiveI2cMsg->_GenerateEvt
    _I2cSlv_I2cReadMsgSts->_ReceiveEvt
    _OsTmr_StartTimer->_GetOsTickCounter
    _OsTmr_GetTimerStatus->_GetElapsedTime
    _GetElapsedTime->_GetOsTickCounter
    _Rtcm_MainTask->_Rtcm_GetRtccDate
    _Rtcm_SetRtccDate->_Rtcc_SetRtccValue
    _Rtcc_SetRtccValue->___awdiv
    _Rtcm_GetRtccDate->_Rtcc_GetRtccValue
    _Rtcc_RtcConfig->_RtccIrqInit
    _MyApp_Task->_Led_SetLedBlinkTime
    _Led_MainTask->_LedStateMachine
    _LedStateMachine->_LedPulseStateMachine
    _LedPulseStateMachine->___lwdiv
    _LedBlinkStateMachine->___lwdiv
    _I2cSlv_MainTask->_I2c_InitI2cModule
    _OsAlrm_SetOsAlarm->___wmul
    _I2c_InitI2cModule->_SetBaudRate
    _SetBaudRate->___lldiv
    _I2cSendMsgSm->_I2c_ReadData
    _I2c_WriteData->_WriteByte
    _I2c_ReadData->_GenerateEvt

Critical Paths under _LowPriorityIsr in BANK0

    None.

Critical Paths under _HighPriorityIsr in BANK0

    None.

Critical Paths under _main in BANK1

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK1

    None.

Critical Paths under _HighPriorityIsr in BANK1

    None.

Critical Paths under _main in BANK2

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK2

    None.

Critical Paths under _HighPriorityIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowPriorityIsr in BANK3

    None.

Critical Paths under _HighPriorityIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowPriorityIsr in BANK4

    None.

Critical Paths under _HighPriorityIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowPriorityIsr in BANK5

    None.

Critical Paths under _HighPriorityIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowPriorityIsr in BANK6

    None.

Critical Paths under _HighPriorityIsr in BANK6

    None.

Critical Paths under _main in BANK7

    _Term_MainSm->_Terminal

Critical Paths under _LowPriorityIsr in BANK7

    None.

Critical Paths under _HighPriorityIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowPriorityIsr in BANK8

    None.

Critical Paths under _HighPriorityIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowPriorityIsr in BANK9

    None.

Critical Paths under _HighPriorityIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowPriorityIsr in BANK10

    None.

Critical Paths under _HighPriorityIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowPriorityIsr in BANK11

    None.

Critical Paths under _HighPriorityIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowPriorityIsr in BANK12

    None.

Critical Paths under _HighPriorityIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowPriorityIsr in BANK13

    None.

Critical Paths under _HighPriorityIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowPriorityIsr in BANK14

    None.

Critical Paths under _HighPriorityIsr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  233166
                  _Sch_MainScheduler
                         _SystemInit
 ---------------------------------------------------------------------------------
 (1) _SystemInit                                           0     0      0    4570
                     _InitSchedTimer
              _Irq_InitIntController
                   _Mcu_ConfigExtInt
                 _Mcu_StartSystemPll
             _Pm_DsReleasePinControl
        _Tmr_RegisterTmr2IsrCallback
 ---------------------------------------------------------------------------------
 (2) _Tmr_RegisterTmr2IsrCallback                          2     0      2     111
                                             21 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Pm_DsReleasePinControl                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Mcu_StartSystemPll                                   2     2      0      23
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _Mcu_ConfigExtInt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Irq_InitIntController                                3     1      2     244
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _InitSchedTimer                                       7     7      0    4192
                                             48 BANK0      7     7      0
                     _Tmr_TmrBConfig
 ---------------------------------------------------------------------------------
 (3) _Tmr_TmrBConfig                                       4     2      2    3946
                                             44 BANK0      4     2      2
                           _TmrBInit
                       _Tmr_StartTmr
                     _Tmr_TmrBIrqSet
                      _Tmr_TmrBPrSet
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBPrSet                                       10     6      4    2528
                                             34 BANK0     10     6      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _Tmr_TmrBIrqSet                                       3     1      2     466
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _Tmr_StartTmr                                         1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _TmrBInit                                             4     2      2     288
                                             21 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _Sch_MainScheduler                                    0     0      0  228596
                    _InitializeTasks
                      _ScheduleTasks
 ---------------------------------------------------------------------------------
 (2) _ScheduleTasks                                        5     5      0  114391
                                             65 BANK0      5     5      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (2) _InitializeTasks                                      3     3      0  114205
                                             65 BANK0      3     3      0
                    _I2cSlv_MainTask *
                       _Led_MainTask *
                         _MyApp_Task *
                      _Rtcm_MainTask *
                      _Term_MainTask *
                 _UsbDevice_MainTask *
                       _Wdg_MainTask *
 ---------------------------------------------------------------------------------
 (3) _Wdg_MainTask                                         1     1      0      22
                       _Mcu_ClearWdg
                      _Mcu_SetWdgSts
 ---------------------------------------------------------------------------------
 (4) _Mcu_SetWdgSts                                        1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Mcu_ClearWdg                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UsbDevice_MainTask                                   1     1      0   50664
                       _CDCTxService
                      _USBDeviceInit
                     _USBDeviceTasks
 ---------------------------------------------------------------------------------
 (4) _USBDeviceTasks                                       1     1      0   46532
                                             48 BANK0      1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBWakeFromSuspend                                   0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBSuspend                                           0     0      0    5915
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStallHandler                                      1     1      0       0
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USBDeviceInit                                        1     1      0    1900
                                             29 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPService                                     1     1      0   26819
                                             47 BANK0      1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     410
                                             21 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfSetupHandler                               0     0      0   26180
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (7) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (7) _USBCheckStdRequest                                   0     0      0   20173
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (8) _USBStdSetCfgHandler                                  1     1      0    7743
                                             41 BANK0      1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (8) _USBStdGetStatusHandler                               3     3      0      46
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (8) _USBStdGetDscHandler                                  2     2      0       0
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (8) _USBStdFeatureReqHandler                              6     6      0    6469
                                             41 BANK0      6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6    5915
                                             33 BANK0      8     2      6
                          _CDCInitEP
                 _USBCheckCDCRequest
 ---------------------------------------------------------------------------------
 (6) _USBCheckCDCRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CDCInitEP                                            0     0      0    2764
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBEnableEndpoint                                    4     3      1     733
                                             29 BANK0      4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (8) _USBConfigureEndpoint                                 8     7      1     400
                                             21 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (7) _USBCtrlTrfRxService                                  2     2      0     114
                                             21 BANK0      2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (8) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfInHandler                                  1     1      0     115
                                             22 BANK0      1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (9) _USBCtrlTrfTxService                                  1     1      0      92
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _CDCTxService                                         2     2      0    2232
                                             28 BANK0      2     2      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _Term_MainTask                                        1     1      0   37182
                        _Term_MainSm
 ---------------------------------------------------------------------------------
 (4) _Term_MainSm                                         24    24      0   37182
                                             53 BANK0     12    12      0
               _OsTmr_GetTimerStatus
                   _OsTmr_StartTimer
                           _Terminal
                             _memset
                        _putUSBUSART
                            _sprintf
                             _strcat
                             _strcpy
                             _strlen
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _strlen                                               6     4      2     268
                                             21 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     2      4     253
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _strcat                                               6     2      4    1166
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) _sprintf                                             21    15      6     430
                                             21 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (6) _memset                                               8     2      6    1698
                                             21 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) _Terminal                                           454   454      0   26556
                                             49 BANK0      4     4      0
                                              0 BANK1    200   200      0
                                              0 BANK2     50    50      0
                                              0 BANK7    200   200      0
               _I2cSlv_I2cReadMsgSts
               _I2cSlv_ReceiveI2cMsg
                  _I2cSlv_SendI2cMsg
                               _atoi
                       _getsUSBUSART
                               _itoa
                        _putUSBUSART
                             _strtol
                               _xtoi
 ---------------------------------------------------------------------------------
 (6) _xtoi                                                 8     6      2    1300
                                             27 BANK0      8     6      2
                            _isdigit
                            _isspace
                            _isupper
                           _isxdigit
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              1     1      0      96
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isxdigit                                             3     3      0     291
                                             24 BANK0      3     3      0
                            _isdigit
 ---------------------------------------------------------------------------------
 (6) _strtol                                              16    10      6    2787
                                             33 BANK0     16    10      6
                             ___lmul
                            _isalpha
                            _isdigit
                            _isspace
                            _toupper
 ---------------------------------------------------------------------------------
 (7) _toupper                                              1     1      0      96
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _isspace                                              3     3      0     130
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (7) _isalpha                                              3     3      0     229
                                             24 BANK0      3     3      0
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              3     3      0      99
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     928
                                             21 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _putUSBUSART                                          3     0      3    1934
                                             27 BANK0      3     0      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (6) _itoa                                                 8     2      6    3702
                                             37 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    3157
                                             28 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             21 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (6) _getsUSBUSART                                         4     1      3    2335
                                             28 BANK0      4     1      3
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (7) _USBTransferOnePacket                                 7     3      4    2031
                                             21 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _atoi                                                 7     5      2    9371
                                             27 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (8) _isdigit                                              3     3      0      99
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_SendI2cMsg                                    5     1      4    1400
                                             24 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_ReceiveI2cMsg                                 5     1      4    1193
                                             24 BANK0      5     1      4
                        _GenerateEvt
 ---------------------------------------------------------------------------------
 (6) _I2cSlv_I2cReadMsgSts                                 1     1      0     451
                                             25 BANK0      1     1      0
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (5) _OsTmr_StartTimer                                     6     0      6     644
                                             25 BANK0      6     0      6
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (5) _OsTmr_GetTimerStatus                                 6     4      2     845
                                             45 BANK0      6     4      2
                     _GetElapsedTime
 ---------------------------------------------------------------------------------
 (6) _GetElapsedTime                                      20    16      4     424
                                             25 BANK0     20    16      4
                   _GetOsTickCounter
 ---------------------------------------------------------------------------------
 (6) _GetOsTickCounter                                     4     0      4       0
                                             21 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _Rtcm_MainTask                                        1     1      0    7334
                   _Rtcc_AlarmConfig
                       _Rtcc_LockRtc
                     _Rtcc_RtcConfig
                  _Rtcc_SetRtcStatus
                     _Rtcc_UnlockRtc
                   _Rtcm_GetRtccDate
                   _Rtcm_SetRtccDate
 ---------------------------------------------------------------------------------
 (4) _Rtcm_SetRtccDate                                     8     0      8    6426
                                             33 BANK0      8     0      8
                       _Rtcc_LockRtc
                  _Rtcc_SetRtccValue
                     _Rtcc_UnlockRtc
 ---------------------------------------------------------------------------------
 (5) _Rtcc_UnlockRtc                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _Rtcc_SetRtccValue                                    4     3      1    6177
                                             29 BANK0      4     3      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4    2610
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    2614
                                             21 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _Rtcc_LockRtc                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Rtcm_GetRtccDate                                    17     9      8     488
                                             25 BANK0     17     9      8
                  _Rtcc_GetRtccValue
 ---------------------------------------------------------------------------------
 (5) _Rtcc_GetRtccValue                                    4     4      0     321
                                             21 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_SetRtcStatus                                    1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_RtcConfig                                       3     1      2     221
                                             22 BANK0      3     1      2
                        _RtccIrqInit
 ---------------------------------------------------------------------------------
 (5) _RtccIrqInit                                          1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Rtcc_AlarmConfig                                     3     1      2     177
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _MyApp_Task                                           1     1      0     776
                _Led_SetLedBlinkTime
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedBlinkTime                                  5     1      4     332
                                             21 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _Led_MainTask                                         2     2      0    5699
                                             44 BANK0      1     1      0
                    _LedStateMachine
 ---------------------------------------------------------------------------------
 (4) _LedStateMachine                                     11     3      8    5699
                                             33 BANK0     11     3      8
               _LedBlinkStateMachine
               _LedPulseStateMachine
                   _Led_SetLedStatus
 ---------------------------------------------------------------------------------
 (5) _LedPulseStateMachine                                 5     2      3    2053
                                             28 BANK0      5     2      3
                   _Led_SetLedStatus
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (4) _Led_SetLedStatus                                     2     1      1     444
                                             21 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _LedBlinkStateMachine                                 4     2      2    1629
                                             28 BANK0      4     2      2
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4    1029
                                             21 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _I2cSlv_MainTask                                      1     1      0   12395
                       _I2cSendMsgSm
                       _I2cSetConfig
                  _I2c_InitI2cModule
                  _OsAlrm_SetOsAlarm
 ---------------------------------------------------------------------------------
 (4) _OsAlrm_SetOsAlarm                                    8     0      8    9228
                                             27 BANK0      8     0      8
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4    8730
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) _I2c_InitI2cModule                                    4     2      2    1451
                                             46 BANK0      4     2      2
                        _SetBaudRate
 ---------------------------------------------------------------------------------
 (5) _SetBaudRate                                         12     4      8    1274
                                             34 BANK0     12     4      8
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8    1052
                                             21 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _I2cSetConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2cSendMsgSm                                         0     0      0    1716
                       _I2c_ReadData
                      _I2c_WriteData
                         _ReceiveEvt
 ---------------------------------------------------------------------------------
 (7) _ReceiveEvt                                           4     2      2     414
                                             21 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _I2c_WriteData                                        4     2      2     414
                                             22 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (5) _I2c_ReadData                                         4     2      2     888
                                             24 BANK0      4     2      2
                     _CheckAckStatus
                      _CheckTxStatus
                     _EnableReceiver
                        _GenerateEvt
                           _ReadByte
                       _SetAckStatus
                     _StartCondition
                      _StopCondition
                          _WriteByte
 ---------------------------------------------------------------------------------
 (6) _WriteByte                                            1     1      0      31
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _StopCondition                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _StartCondition                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _SetAckStatus                                         1     1      0      22
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _ReadByte                                             1     1      0      23
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _GenerateEvt                                          3     1      2     460
                                             21 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (6) _EnableReceiver                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckTxStatus                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _CheckAckStatus                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _LowPriorityIsr                                     21    21      0     944
                                              0 BANK0     21    21      0
                        _Tmr_Tmr2Isr
 ---------------------------------------------------------------------------------
 (14) _Tmr_Tmr2Isr                                         0     0      0     944
                   Absolute function *
                 _Sch_SchmIntService *
 ---------------------------------------------------------------------------------
 (15) _Sch_SchmIntService                                  0     0      0     944
             _OsAlrm_ProcessOsAlarms
                   _UpdateOsCounters
                      _UpdateSchFlag
 ---------------------------------------------------------------------------------
 (16) _UpdateSchFlag                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _UpdateOsCounters                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _OsAlrm_ProcessOsAlarms                             10    10      0     944
                                             26 COMRAM    10    10      0
                         _I2cDummyTx *
                _OsAlrm_ClearOsAlarm
                           i1___wmul
 ---------------------------------------------------------------------------------
 (17) i1___wmul                                            6     2      4     469
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) _OsAlrm_ClearOsAlarm                                 1     1      0      66
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (17) _I2cDummyTx                                          0     0      0     209
                i1_I2cSlv_SendI2cMsg
 ---------------------------------------------------------------------------------
 (18) i1_I2cSlv_SendI2cMsg                                 5     1      4     209
                                             21 COMRAM     5     1      4
                      i1_GenerateEvt
 ---------------------------------------------------------------------------------
 (19) i1_GenerateEvt                                       3     1      2      56
                                             18 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (20) _HighPriorityIsr                                    18    18      0       0
                                              0 COMRAM    18    18      0
                        _Mcu_Int0Isr
                        _Mcu_Int1Isr
                        _Rtcc_RtcIsr
                    _Uart_Uart1RxIsr
 ---------------------------------------------------------------------------------
 (21) _Uart_Uart1RxIsr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Rtcc_RtcIsr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int1Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (21) _Mcu_Int0Isr                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 21
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Sch_MainScheduler
     _InitializeTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
           _Led_SetLedStatus
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
     _ScheduleTasks
       _I2cSlv_MainTask *
         _I2cSendMsgSm
           _I2c_ReadData
             _CheckAckStatus
             _CheckTxStatus
             _EnableReceiver
             _GenerateEvt
             _ReadByte
             _SetAckStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _I2c_WriteData
             _CheckAckStatus
             _CheckTxStatus
             _StartCondition
             _StopCondition
             _WriteByte
           _ReceiveEvt
         _I2cSetConfig
         _I2c_InitI2cModule
           _SetBaudRate
             ___lldiv
         _OsAlrm_SetOsAlarm
           ___wmul
       _Led_MainTask *
         _LedStateMachine
           _LedBlinkStateMachine
             ___lwdiv
           _LedPulseStateMachine
             _Led_SetLedStatus
             ___lwdiv
           _Led_SetLedStatus
       _MyApp_Task *
         _Led_SetLedBlinkTime
         _Led_SetLedStatus
       _Rtcm_MainTask *
         _Rtcc_AlarmConfig
         _Rtcc_LockRtc
         _Rtcc_RtcConfig
           _RtccIrqInit
         _Rtcc_SetRtcStatus
         _Rtcc_UnlockRtc
         _Rtcm_GetRtccDate
           _Rtcc_GetRtccValue
         _Rtcm_SetRtccDate
           _Rtcc_LockRtc
           _Rtcc_SetRtccValue
             ___awdiv
             ___awmod
           _Rtcc_UnlockRtc
       _Term_MainTask *
         _Term_MainSm
           _OsTmr_GetTimerStatus
             _GetElapsedTime
               _GetOsTickCounter
           _OsTmr_StartTimer
             _GetOsTickCounter
           _Terminal
             _I2cSlv_I2cReadMsgSts
               _ReceiveEvt
             _I2cSlv_ReceiveI2cMsg
               _GenerateEvt
             _I2cSlv_SendI2cMsg
               _GenerateEvt
             _atoi
               ___wmul
               _isdigit
             _getsUSBUSART
               _USBTransferOnePacket
             _itoa
               _utoa
                 ___lwdiv
                 ___lwmod
             _putUSBUSART
               _strlen (ARG)
             _strtol
               ___lmul
               _isalpha
                 _isupper
               _isdigit
               _isspace
               _toupper
             _xtoi
               _isdigit
               _isspace
               _isupper
               _isxdigit
                 _isdigit
               _tolower
           _memset
           _putUSBUSART
             _strlen (ARG)
           _sprintf
           _strcat
           _strcpy
           _strlen
           _utoa
             ___lwdiv
             ___lwmod
       _UsbDevice_MainTask *
         _CDCTxService
           _USBTransferOnePacket
         _USBDeviceInit
           _memset
         _USBDeviceTasks
           _USBCtrlEPAllowStatusStage
           _USBCtrlEPService
             _USBCtrlTrfInHandler
               _USBCtrlTrfTxService
             _USBCtrlTrfOutHandler
               _USBCtrlTrfRxService
                 _USBCtrlEPAllowStatusStage
             _USBCtrlTrfSetupHandler
               _USBCheckStdRequest
                 _USBStdFeatureReqHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                 _USBStdGetDscHandler
                 _USBStdGetStatusHandler
                 _USBStdSetCfgHandler
                   _USER_USB_CALLBACK_EVENT_HANDLER
                     _CDCInitEP
                       _USBEnableEndpoint
                         _USBConfigureEndpoint
                       _USBTransferOnePacket
                     _USBCheckCDCRequest
                   _memset
                 _USER_USB_CALLBACK_EVENT_HANDLER
                   _CDCInitEP
                     _USBEnableEndpoint
                       _USBConfigureEndpoint
                     _USBTransferOnePacket
                   _USBCheckCDCRequest
               _USBCtrlEPServiceComplete
                 _USBCtrlEPAllowDataStage
                   _USBCtrlTrfTxService
                 _USBCtrlEPAllowStatusStage
               _USER_USB_CALLBACK_EVENT_HANDLER
                 _CDCInitEP
                   _USBEnableEndpoint
                     _USBConfigureEndpoint
                   _USBTransferOnePacket
                 _USBCheckCDCRequest
             _memcpy
           _USBDeviceInit
             _memset
           _USBIncrement1msInternalTimers
           _USBStallHandler
           _USBSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USBWakeFromSuspend
             _USER_USB_CALLBACK_EVENT_HANDLER
               _CDCInitEP
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _USBCheckCDCRequest
           _USER_USB_CALLBACK_EVENT_HANDLER
             _CDCInitEP
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _USBCheckCDCRequest
       _Wdg_MainTask *
         _Mcu_ClearWdg
         _Mcu_SetWdgSts
   _SystemInit
     _InitSchedTimer
       _Tmr_TmrBConfig
         _TmrBInit
         _Tmr_StartTmr
         _Tmr_TmrBIrqSet
         _Tmr_TmrBPrSet
           ___lldiv
           ___lmul
     _Irq_InitIntController
     _Mcu_ConfigExtInt
     _Mcu_StartSystemPll
     _Pm_DsReleasePinControl
     _Tmr_RegisterTmr2IsrCallback

 _LowPriorityIsr (ROOT)
   _Tmr_Tmr2Isr
     Absolute function(Fake) *
     _Sch_SchmIntService *
       _OsAlrm_ProcessOsAlarms
         _I2cDummyTx *
           i1_I2cSlv_SendI2cMsg
             i1_GenerateEvt
         _OsAlrm_ClearOsAlarm *
         i1___wmul *
       _UpdateOsCounters
       _UpdateSchFlag

 _HighPriorityIsr (ROOT)
   _Mcu_Int0Isr
   _Mcu_Int1Isr
   _Rtcc_RtcIsr
   _Uart_Uart1RxIsr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh            A80      0       0      35        0.0%
BIGRAMl            3FF      0     190      36       39.1%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100     C8      C8      20       78.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      40      18       25.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      DC      16       85.9%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      FF      12       99.6%
BITBANK2           100      0       0       9        0.0%
BANK2              100     32      6A      10       41.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     C8     100       7      100.0%
BITBANK14           C0      0       0      33        0.0%
BANK14              C0      0       0      34        0.0%
BITBANK4            C0      0       0      13        0.0%
BANK4               C0      0      82      14       67.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      82       5       81.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      48       1       76.6%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     599       8        0.0%
DATA                 0      0     729       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Nov 01 15:45:36 2019

                              _USB_SD_Ptr FD89                           ??_UpdateSchFlag 0037  
                      _Mcu_StartSystemPll 4154                     ?_LedPulseStateMachine 007C  
                            ___awdiv@sign 007A                    I2c_ReadData@ReadPacket 0078  
                                      bsr 000FE0                    ??_LedBlinkStateMachine 007E  
                           _USBDeviceInit 13E8                       ___wmul@multiplicand 0077  
                        i1___wmul@product 003B                        __size_of_CDCInitEP 006A  
                InitSchedTimer@TmrBConfig 0090                              __CFG_CP0$OFF 000000  
              OsAlrm_SetOsAlarm@OsAlarmId 007B      USER_USB_CALLBACK_EVENT_HANDLER@event 0081  
    USER_USB_CALLBACK_EVENT_HANDLER@pdata 0083                    I2c_ReadData@ReadStatus 00CE  
                                     l202 11A8                                       l203 11B0  
                                     l205 11F8                                       l206 121E  
                                     l208 1228                                       l160 10E0  
                                     l209 1248                                       l161 0FB0  
                                     l162 1120                                       l170 107A  
                                     l171 1090                                       l163 0FBE  
                                     l164 0FFE                                       l173 1094  
                                     l237 4160                                       l174 109C  
                                     l166 100C                                       l350 3118  
             __end_of_USBStdGetDscHandler 18E2                                       l430 2F2E  
                                     l175 10A8                                       l167 1034  
                                     l351 3124                                       l431 2F1E  
                                     l192 1252                                       l176 10C0  
                                     l344 3138                                       l352 3130  
                                     l440 2F82                                       l432 2F44  
                                     l193 1128                                       l169 1048  
                                     l345 30DE                                       l441 2F62  
                                     l433 2F22                                       l194 128C  
                                     l346 3166                                       l370 0A2E  
                                     l442 2F68                                       l434 2F28  
                                     l195 1136                                       l179 10CE  
                                     l347 30E6                                       l451 3A90  
                                     l196 1178                                       l348 30EC  
                                     l372 0A76                                       l428 2F9C  
                                     l460 1CB4                                       l349 310C  
                                     l373 0ABE                                       l198 1186  
                                     l374 0B06                                       l438 2F6E  
                                     l199 119C                                       l375 0B4E  
                                     l439 2F5E                                       l376 0B96  
                                     l448 3AAA                                       l456 1CF4  
                                     l369 0C26                                       l377 0BDE  
                                     l449 3A76                                       l457 1CE0  
                                     l466 4142                                       l458 1C88  
                                     l474 2428                                       l723 3F6E  
                                     l467 413A                                       l459 1CEE  
                                     l475 2444                                       l901 4108  
                                     l469 413E                                       l735 24FC  
                                     l672 1A00                                       l755 31DA  
                                     _BDT 000400                                       l861 29C0  
                                     l870 2992                                       l862 2930  
                                     l758 31EC                                       l863 2950  
                                     l687 41B8                                       l872 29AC  
                                     l873 29B6                                       l865 2970  
                                     l891 3D0E                                       l883 3914  
                                     l868 2978                                       l884 38D4  
                                     l886 390E                                       l896 3C92  
                                     _PR2 000FCB                                       _PR4 000F77  
                                     _UIE 000F36                                       _UIR 000F62  
                 __end_of_HighPriorityIsr 2BF0                       ?_Mcu_StartSystemPll 0025  
                              _USBSuspend 3E5A                              ___awmod@sign 007A  
                    USBStdSetCfgHandler@i 0089                                       prod 000FF3  
                                     tosl 000FFD                                       wreg 000FE8  
            I2cSlv_ReceiveI2cMsg@RxBuffer 0078                            _USBDeviceTasks 0E2C  
                            __CFG_IESO$ON 000000                            _USBDeviceState 00CA  
             Rtcc_AlarmConfig@AlarmConfig 0075              __end_of_I2cSlv_ReceiveI2cMsg 3C98  
                           ??_Mcu_Int0Isr 0025                             ??_Mcu_Int1Isr 0025  
                   ??_USBCtrlTrfRxService 0075                            ??_getsUSBUSART 007F  
                USBEnableEndpoint@options 007D             ??_Tmr_RegisterTmr2IsrCallback 0077  
                                    l1100 0E84                                      l1101 0E8C  
                                    l1110 0F2E                                      l1102 0EA2  
                                    l1103 0EAE                                      l1112 0F42  
                                    l1105 0ED6                                      l1122 3B5C  
                                    l1131 2910                                      l1123 3B6C  
                                    l1115 0F68                                      l1107 0EEC  
                                    l1212 18CA                                      l1204 1E30  
                                    l1108 0EF8                                      l1221 18C2  
                                    l1213 17C6                                      l1117 0F86  
                                    l1109 0F22                                      l1310 0880  
                                    l1230 2A02                                      l1206 1EA4  
                                    l1127 288A                                      l1311 089C  
                                    l1215 17DA                                      l1231 2A08  
                                    l1119 0FA4                                      l2120 212C  
                                    l1320 09F4                                      l1304 07BE  
                                    l1216 1862                                      l1232 2A28  
                                    l1152 2E32                                      l1240 3B42  
                                    l2121 20EE                                      l1129 28B4  
                                    l1313 0928                                      l1305 07C4  
                                    l1225 2A6A                                      l2114 209A  
                                    l1146 2736                                      l1218 186A  
                                    l1226 29F0                                      l1154 2E4C  
                                    l2123 2160                                      l2115 2094  
                                    l1403 303E                                      l1323 09AE  
                                    l1315 08F2                                      l1307 0836  
                                    l1219 18BA                                      l1163 1B8C  
                                    l1083 1432                                      l2140 3374  
                                    l1316 090E                                      l1164 1B36  
                                    l2141 337E                                      l2133 3326  
                                    l2117 20DC                                      l2301 3BB2  
                                    l1181 238A                                      l1325 0A00  
                                    l1309 087E                                      l1229 2A80  
                                    l1253 30C6                                      l1085 145A  
                                    l2142 338C                                      l2134 3336  
                                    l2150 344A                                      l1406 2FEC  
                                    l1182 2354                                      l1158 2EE6  
                                    l1318 0970                                      l1254 30C0  
                                    l1094 0E58                                      l1407 3018  
                                    l1431 1690                                      l1319 097C  
                                    l1087 1492                                      l1239 3B44  
                                    l1247 3DB6                                      l1095 0E4E  
                                    l2136 3354                                      l1408 2FF2  
                                    l1272 27E4                                      l1192 1A54  
                                    l1264 36BA                                      l1168 1BB6  
                                    l1248 3DB4                                      l1096 0E4C  
                                    l2137 334C                                      l2153 346A  
                                    l2305 2BF8                                      l1441 173A  
                                    l1433 169E                                      l1185 23C8  
                                    l1177 2324                                      l1273 27EA  
                                    l1193 1A32                                      l2154 3474  
                                    l2146 3430                                      l2402 3C00  
                                    l1450 1794                                      l1442 1704  
                                    l1186 2392                                      l1274 2866  
                                    l1266 3704                                      l1290 1FC8  
                                    l2155 3482                                      l2147 343C  
                                    l2403 3C0A                                      l2307 2C34  
                                    l1435 16D2                                      l1179 232E  
                                    l1275 282C                                      l1195 1AC8  
                                    l1291 1FCE                                      l1099 0E74  
                                    l2340 3408                                      l1532 1654  
                                    l2308 2C76                                      l1196 1AAE  
                                    l1292 1FD4                                      l2412 3AF0  
                                    l1533 1536                                      l2149 3452  
                                    l1445 1778                                      l1277 284C  
                                    l1381 2B20                                      l1293 1FE8  
                                    l2413 3ACE                                      l1534 166A  
                                    l1550 1D8A                                      l1446 1742  
                                    l1438 16E4                                      l1382 2ABC  
                                    l1294 1FEE                                      l2335 33C6  
                                    l1535 155E                                      l1439 16E8  
                                    l1287 204E                                      l1471 4056  
                                    l2336 33BA                                      l1536 15E2  
                                    l1560 2CE2                                      l1800 01E2  
                                    l1384 2AD4                                      l1296 1FF4  
                                    l1288 1FBE                                      l1472 4046  
                                    l1545 1DB4                                      l1449 1790  
                                    l1385 2AE2                                      l1297 2012  
                                    l1546 1CFC                                      l1562 2CF0  
                                    l1802 01AE                                      l2418 3EA6  
                                    l1386 2AFE                                      l1298 202E  
                                    l1474 404C                                      l2339 33FA  
                                    l1547 1DD0                                      l1555 2D14  
                                    l1563 2CFE                                      l1803 019C  
                                    l2419 3E94                                      l1387 2B16  
                                    l1571 2248                                      l1580 3EFC  
                                    l1548 1D1A                                      l1556 2CA6  
                                    l2620 1F1E                USBConfigureEndpoint@handle 007B  
                                    l1557 2D3C                                      l2621 1F36  
                                    l2613 1EDE                                      l1485 370C  
                                    l1558 2CB6                                      l2622 1F46  
                                    l2614 1ED8                                      l1814 0326  
                                    l1902 4078                                      l1654 3278  
                                    l1559 2CC8                                      l2295 40E8  
                                    l1831 0428                                      l1815 02B4  
                                    l1479 3718                                      l1487 3712  
                                    l1903 406A                                      l1655 31FE  
                                    l2392 3A0E                                      l1576 3F02  
                                    l2616 1F06                                      l1832 03EC  
                                    l1816 0250                                      l1808 01D0  
                                    l2544 37D6                                      l2560 3CA2  
                                    l1568 22F2                                      l2393 3A18  
                                    l1577 3EF0                                      l1585 39B6  
                                    l2625 1FA4                                      l2545 37D0  
                                    l2553 3E0C                                      l1905 4072  
                                    l1569 223A                                      l1657 3264  
                                    l1586 3980                                      l1826 0392  
                                    l1818 0304                                      l2554 3E02  
                                    l1850 052E                                      l1579 3EF6  
                                    l2651 3EE0                                      l2619 1F66  
                                    l1835 0498                                      l1819 02C6  
                                    l2547 37F0                                      l2388 39EE  
                                    l1588 3992                                      l1836 04E4  
                                    l1828 03D2                                      l2548 37E6  
                                    l1852 0548                                      l1924 3DEA  
                                    l2389 39E6                                      l1589 39A4  
                                    l2661 40C6                                      l1861 0594  
                                    l1925 3DC4                                      l2398 3BE8  
                                    l1942 2196                                      l2399 3BE0  
                                    l2591 0D4E                                      l2575 0C96  
                                    l2559 3CA8                                      l1847 075E  
                                    l1863 06D2                                      l2656 3FEE  
                                    l2592 0DBA                                      l2672 422C  
                                    l1944 21DE                                      l1848 0508  
                                    l1872 41EC                                      l2585 0D12  
                                    l2577 0CAE                                      l1945 21C0  
                                    l1937 2176                                      l1865 073A  
                                    l1857 0558                                      l1962 3834  
                                    l2594 0DE0                                      l2586 0D22  
                                    l1938 2190                                      l1963 3848  
                                    l2595 0E1A                                      l2579 0D02  
                                    l1795 04EC                                      l1939 21F2  
                                    l1867 0758                                      l1859 0576  
                                    l1875 41E6                                      l2588 0D3C  
                                    l2668 3D46                                      l1796 00E2  
                                    l1948 2212                                      l2599 4244  
                                    l1799 0152                                      l6055 3E94  
                              _Led1OutSts 00DB                                      l6093 232E  
                                    l7315 30F2                                      l7413 148A  
                                    l7385 142A                                      l8363 4160  
                                    l6777 3ACE                                      l9429 2128  
                                    l8941 1E28                                      STR_1 FFBC  
                                    STR_2 FFF4                                      l9961 1CF4  
                                    STR_3 FFF4                                      STR_4 FFDE  
                                    STR_5 FFD0                                      STR_6 FFE1  
                                    STR_7 FFED                                _Led2OutSts 00D9  
                                    u4100 237C                                      u4120 23BA  
                                    u4107 2372                                      u4127 23B0  
                              _Led3OutSts 00D7                                      u4250 182C  
                                    u4260 185C                                      u4280 18AE  
                                    u4257 1822                                      u4267 1852  
                                    u4287 18A4                                      u7105 3FB0  
                                    u5530 3456                                      u7106 3FB2  
                                    u7115 3FBC                                      u6340 222A  
                                    u7116 3FBE                                      u6405 3A80  
                                    u7125 3FC8                                      u5470 3358  
                                    u8110 3ED0                                      u6406 3A82  
                                    u7126 3FCA                                      u6415 3A8C  
                                    u8200 3D36                                      u6280 3818  
                                    u6416 3A8E                                      u7081 3256  
                                    u6425 3A9A                                      u5570 33CA  
                                    u6426 3A9C                                      u5715 4286  
                                    u7091 326E                                      u6435 3AA6  
                                    u5716 4288                                      u6436 3AA8  
                                    u6365 34F0                                      u5750 144E  
                                    u6287 380E                                      u6375 42C4  
                   ??_USBCtrlTrfTxService 0075                                      u6376 42C6  
                                    u8090 3FEA                                      u5595 3A44  
                                    u6395 4270                                      u6396 4274  
                                    u8260 2FC8                                      u8500 0CE8  
                                    u8180 3D2A                                      u7700 1E5C  
                                    u5780 14EE                                      u4965 42B0  
                                    u6901 36A0                                      u4966 42B2  
                                    _UCFG 000F39                                      u8450 0C9E  
                                    u9090 0432                                      u9420 0FAA  
                                    _UEP0 000F26                                      _UEP1 000F27  
                                    u9510 172C                                      u8480 0CD8  
                                    u7930 39F2                                      u9530 176A  
                                    _UEIE 000F37                                      u9540 177E  
                                    u9517 1722                  __size_of_Uart_Uart1RxIsr 0006  
                                    u7960 3BEC                                      u7880 0992  
                                    u9537 1760                                      _UEIR 000F63  
                                    _UCON 000F65                                      u9738 19B4  
                                    u9739 19E2                                      u9698 353A  
                                    u9699 3568                                _AlarmEvent 00D6  
                          ?_StopCondition 0025                       _OsTmr_OsTickCounter 01CE  
                           __CFG_FCMEN$ON 000000                           _CDCDataInHandle 0015  
            I2c_ReadData@TentativeCounter 00CF               Led_SetLedBlinkTime@OnTimeMs 0075  
  USBStdFeatureReqHandler@current_ep_data 008C                                      _pDst 0017  
                                    _atoi 2092                                      _main 4318  
                                    _itoa 3B8C                                      fsr0h 000FEA  
                                    fsr1h 000FE2                                      indf0 000FEF  
                                    fsr2h 000FDA                                      fsr0l 000FE9  
                                    indf1 000FE7                               _BaudRateGen 0200  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    fsr2l 000FD9                                      btemp 0049  
                                    _utoa 2BF0                                      _xtoi 1EC8  
                           __CFG_T1DIG$ON 000000                    _Pm_DsReleasePinControl 4356  
             __size_of_Sch_SchmIntService 000E                         _Rtcc_GetRtccValue 30D8  
             I2cSlv_SendI2cMsg@DataLenght 007B                      ??_Mcu_StartSystemPll 0075  
                                    prodh 000FF4                                      prodl 000FF3  
                                    start 00CC                       __end_of_GenerateEvt 4260  
                          ?_Mcu_SetWdgSts 0025                            ??_Mcu_ClearWdg 0075  
              __end_of_USBCheckStdRequest 2092                           _Rtcm_SystemDate 0314  
                  ??_USBCtrlTrfOutHandler 0077                  __end_of_GetOsTickCounter 42DA  
                      ?_Rtcc_GetRtccValue 0025                            _GetElapsedTime 2498  
           I2cSlv_ReceiveI2cMsg@SlaveAddr 007A                              ___param_bank 000000  
               ??_USBStdFeatureReqHandler 0089               __end_of_OsAlrm_ClearOsAlarm 38D2  
                                   EECON2 000FA7                  ??_USBStdGetStatusHandler 0075  
                     __size_of_I2cDummyTx 001A                            ?_USBDeviceInit 0025  
                           __CFG_PLLDIV$2 000000                       ??_Rtcc_GetRtccValue 0075  
                         __end_of_Welcome FF08                         ?_UpdateOsCounters 0025  
                                   l10083 0F3A                                     l10333 3508  
                                   l10345 18EC                                     l10607 3732  
                                   l10609 3762                                     ?_atoi 007B  
                                   ?_main 0025                                     ?_itoa 0085  
                         __end_of___awdiv 3396                           __end_of___awmod 348C  
       __size_of_USBCtrlEPServiceComplete 00FA                           __end_of___lldiv 341A  
                                   ?_utoa 007C                           ___awdiv@divisor 0077  
                  __end_of_USBDeviceTasks 0FAE                                     ?_xtoi 007B  
               ?_USBCtrlEPServiceComplete 0025                           __end_of___lwdiv 3A22  
                         __end_of___lwmod 3C14                        ??_UpdateOsCounters 0037  
                                   i1l644 13E6                                     i1l639 12AA  
                                   i1l891 3D84                                     _UADDR 000F38  
                         ___awdiv@counter 0079                                     _AlCfg 01F8  
            Led_SetLedBlinkTime@OffTimeMs 0077                   I2cSendMsgSm@I2cComState 00CB  
                                   _USTAT 000F64                   __end_of_LedStateMachine 2D42  
      __size_of_USBCtrlEPAllowStatusStage 00C4                       ___lmul@multiplicand 0079  
                                   _RxLen 01D4           __end_of_USBCtrlEPAllowDataStage 2E80  
                                   _sd000 FFB8                                     _sd001 FF71  
                                   _sd002 FF4B            ?_USBIncrement1msInternalTimers 0025  
             Rtcc_GetRtccValue@RtccPtrVal 0076                      __end_of_Led_MainTask 2304  
                  ??_OsTmr_GetTimerStatus 008F              LedPulseStateMachine@LedPulse 007C  
                         __end_of_isalpha 3EEA                           __end_of_isdigit 40F0  
                                   atoi@a 0080                                     atoi@s 007B  
                         __end_of_isspace 3FF6                I2c_WriteData@I2cWriteState 00D5  
               Rtcc_GetRtccValue@RegValue 0078                   __size_of_Rtcc_RtcConfig 00A0  
                         __end_of_isupper 40CE                                     pclath 000FFA  
                                   tablat 000FF5                          __end_ofi1___wmul 4044  
               __end_of_Rtcc_GetRtccValue 316C                                     plusw0 000FEB  
                                   plusw2 000FDB                         __end_of_CDCInitEP 3644  
                                   utoa@c 0084                             ??_SetBaudRate 008A  
                                   utoa@v 0082                                     status 000FD8  
                         _I2cSlv_MainTask 38D2                 Rtcc_GetRtccValue@RetValue 0077  
                     i1___wmul@multiplier 0037                                     wtemp6 004A  
                         __end_of_sprintf 2238                           __end_of_tolower 4230  
                     __end_of_Mcu_Int0Isr 437E                       __end_of_Mcu_Int1Isr 437A  
                                   xtoi@c 0082                                     xtoi@s 007B  
                         __end_of_toupper 4248                    __end_of_GetElapsedTime 2560  
             Rtcc_SetRtccValue@RtccPtrVal 0080                     __end_of_Term_MainTask 41FE  
                 LedStateMachine@LedBlink 0085                   __CFG_DSWDTOSC$INTOSCREF 000000  
                         putUSBUSART@data 007B              __size_of_USBStdSetCfgHandler 00E6  
                 OsTmr_StartTimer@Timeout 007B                      __end_of_I2cSetConfig 3FA2  
                          _InitSchedTimer 3F1A                           __initialization 2628  
                    __end_of_I2c_ReadData 1292                   Rtcc_RtcConfig@RtcConfig 0076  
                    __end_of_I2cSendMsgSm 29E4                   LedStateMachine@LedPulse 0087  
                              _MyApp_Task 3DC2                              __end_of_atoi 216A  
                            __end_of_main 4324                              __end_of_itoa 3BD0  
                  ??_LedPulseStateMachine 007F                     _control_signal_bitmap 001D  
                            __end_of_utoa 2C9A                              __end_of_xtoi 1FAE  
                __end_of_Rtcm_SetRtccDate 397A                   __size_of_Rtcc_UnlockRtc 0010  
                        ??_StartCondition 0075                          __end_of_ReadByte 4342  
                    Term_MainSm@TermDelay 03F4                            __CFG_OSC$HSPLL 000000  
                        __end_of_MsgReady FFA6                 __size_of_USBCtrlEPService 0094  
                                  ??_atoi 007D                                    ??_main 00A6  
                                  ??_itoa 008B                                    ??_utoa 0082  
                                  ??_xtoi 007D                             __activetblptr 000002  
                         ?_USBDeviceTasks 0025                          __end_of_TmrBInit 2FAE  
                              _ReceiveEvt 3F48                               ?_USBSuspend 0025  
                       ?_Mcu_ConfigExtInt 0025                          ?_HighPriorityIsr 0025  
                        __end_of_Terminal 0506                             ?_SetAckStatus 0025  
                       ?_Led_SetLedStatus 0075                              _cdc_mem_type 00B9  
                      ??_Mcu_ConfigExtInt 0075                           ReceiveEvt@Event 0075  
                        _CDCDataOutHandle 00B2                           ??_StopCondition 0075  
                      ??_Led_SetLedStatus 0076                          ___awdiv@dividend 0075  
              __end_of_UsbDevice_MainTask 4068                           getsUSBUSART@len 007E  
                        ??_LowPriorityIsr 0060                                    _DSGPR0 000F4E  
                                  _DSGPR1 000F4F        Irq_InitIntController@IntPriorityEn 0077  
                   __size_of_CDCTxService 0138                               _GenerateEvt 4248  
                          __CFG_WDTEN$OFF 000000                                    _RCREG1 000FAF  
                                  _RCREG2 000FAA                                    _RCSTA1 000FAC  
                                  _RCSTA2 000F9C                 Uart_Uart1RxIsr@UartRxData 0021  
                           CDCTxService@i 007C                                    _RTCCAL 000F3E  
                                  _SPBRG1 000FB0                                    _SPBRG2 000FAB  
                                  _RPINR1 000EE7                                _TaskNumber FD91  
                          __CFG_WPCFG$OFF 000000                                    _TXREG1 000FAE  
                                  _TXREG2 000FA9                                    _TXSTA1 000FAD  
                                  _TXSTA2 000FA8                  __end_of_Rtcc_AlarmConfig 35DA  
                         ??_Mcu_SetWdgSts 0075                    __end_of_InitSchedTimer 3F48  
                          __CFG_WPDIS$OFF 000000                           ?_GetElapsedTime 0079  
                          _EnableReceiver 436E                         ??_Uart_Uart1RxIsr 0025  
                       _shortPacketStatus 00C9                             ??_Term_MainSm 0095  
                          __CFG_XINST$OFF 000000             __size_of_I2cSlv_I2cReadMsgSts 0022  
                         USBDeviceTasks@i 0090               USBStdFeatureReqHandler@pUEP 008A  
                USBTransferOnePacket@data 0076                USBCtrlTrfInHandler@lastDTS 0076  
                           ??_RtccIrqInit 0075                  ??_OsAlrm_ProcessOsAlarms 003F  
                         ??_USBDeviceInit 007D                       __end_of_SetBaudRate 3A70  
                                  ___lmul 3822                      _I2cSlv_ReceiveI2cMsg 3C58  
                            ?_putUSBUSART 007B                                    ___wmul 3FF6  
                               ??___awdiv 0079            GetElapsedTime@CurrentTimestamp 0089  
                          __CFG_STVREN$ON 000000                                 ??___awmod 0079  
                       ?_Rtcm_GetRtccDate 0079                       _Led_SetLedBlinkTime 397A  
                               ??___lldiv 007D                      __end_of_getsUSBUSART 3044  
                               ??___lwdiv 0079                    Tmr_TmrBPrSet@IntFreqHz 0082  
                               ??___lwmod 0079                         _USBEnableEndpoint 3B48  
         __size_of_USBStdGetStatusHandler 00B2                             ??_Rtcc_RtcIsr 0025  
                            ReadByte@Byte 0075                                    _memcpy 3ABC  
                                  _memset 3E8A                                    clear_0 2674  
                                  clear_1 2686                                    clear_2 2692  
                                  clear_3 269E                                    clear_4 26AA  
                                  clear_5 26B6                                    clear_6 26C2  
                                  clear_7 26CE                                    clear_8 26DA  
                        ___awdiv@quotient 007B                        ??_Rtcm_GetRtccDate 0081  
                         ___awmod@divisor 0077                        _ExtInt0IsrCallback 01D8  
                       ?_OsTmr_StartTimer 0079                           ___awmod@counter 0079  
                      ?_USBEnableEndpoint 007D                                    _strcat 37C6  
                                  _strcpy 3DF8                                    _strlen 3C98  
                                  _strtol 0C56             __size_of_USBTransferOnePacket 00BE  
                        __end_of_isxdigit 3D50                        ??_OsTmr_StartTimer 007F  
                                  itoa@cp 008B                                 ??_isalpha 0078  
                               ??_isdigit 0075                            ??_SetAckStatus 0075  
                            _CDCTxService 167C                          ?_LedStateMachine 0081  
                            __mediumconst FD88                                 ??_isspace 0075  
                  __size_of_CheckTxStatus 000A                                    tblptrh 000FF7  
                               ??_isupper 0075                                    tblptrl 000FF6  
                                  tblptru 000FF8                      __end_of_Mcu_ClearWdg 4366  
                     ??_USBEnableEndpoint 007E                   __end_of_I2cSlv_MainTask 3926  
                           ??_Tmr_Tmr2Isr 0049                              ??_I2cDummyTx 003F  
               OsTmr_GetTimerStatus@Timer 008D                               _Mcu_Int0Isr 437A  
                             _Mcu_Int1Isr 4376                      ?_Led_SetLedBlinkTime 0075  
                               ??_sprintf 007B                                 ??_tolower 0075  
                  __size_of_ScheduleTasks 0122                               _CtrlTrfData 000438  
                               ??_toupper 0075                      _controlTransferState 00C8  
                   __end_ofi1_GenerateEvt 42A2                     __end_of_Rtcm_MainTask 328A  
              __size_of_Rtcc_GetRtccValue 0094                        _ExtInt1IsrCallback 01D6  
                              __accesstop 0060                             ?_Wdg_MainTask 0025  
                 __end_of__initialization 26E0                    Tmr_TmrBPrSet@Prescaler 0084  
                            __pbssBIGRAMl 07C8                    __end_of_EnableReceiver 4372  
                      __size_of_WriteByte 000A                             ___rparam_used 000001  
                __size_of_USBStallHandler 0044                           ?_InitSchedTimer 0025  
         I2cSlv_QueryI2cData@TimeoutTimer 0394                      Terminal@FormatOption 0208  
                         __CFG_IOL1WAY$ON 000000                     I2cDummyTx@DummyBuffer 0024  
                    __CFG_WPEND$PAGE_WPFP 000000                       __size_of_USBSuspend 0030  
                   ?_I2cSlv_ReceiveI2cMsg 0078                            __pcstackCOMRAM 0025  
               __end_of_USBEnableEndpoint 3B8C                               ?_MyApp_Task 0025  
                LedStateMachine@LedOutSts 008A                             __end_of_sd000 FFBC  
                           __end_of_sd001 FF8F                             __end_of_sd002 FF71  
                            __pidataBANK0 437E                              __pidataBANK2 437F  
                            __pidataBANK3 3C14          __size_of_USBCtrlEPAllowDataStage 009E  
           __size_of_USBConfigureEndpoint 0098                  __size_of_InitializeTasks 0070  
                      __end_of_I2cDummyTx 4218               __end_of_USBCtrlTrfInHandler 2870  
                         __CFG_DSWDTPS$G2 000000                       __end_of_Term_MainSm 079A  
                   LedStateMachine@LedOut 0083                     LedStateMachine@LedSts 0081  
                      LedStateMachine@Led 008B                                 ?i1___wmul 0037  
                     __end_of_RtccIrqInit 428C                     __size_of_Led_MainTask 00CC  
           I2cSlv_QueryI2cData@I2cOpState 001F                               ?_ReceiveEvt 0075  
                              _SystemInit 3E2A                                _cdc_notice 030A  
                   __end_of_Tmr_TmrBPrSet 1CFA                       __end_of_Rtcc_RtcIsr 4376  
                              _cdc_rx_len 00BC                         __end_of_MsgFormat FE7F  
                              _cdc_tx_len 00BA                       Terminal@UsbRxBuffer 0700  
                   ??_Led_SetLedBlinkTime 0079                       Terminal@UsbTxBuffer 0100  
             __end_ofi1_I2cSlv_SendI2cMsg 3D8A                  ??_USBCtrlTrfSetupHandler 008F  
                 _USBTicksSinceSuspendEnd 00BD                     _Irq_InitIntController 3FA2  
                  _USBStdGetStatusHandler 29E4       Mcu_StartSystemPll@PllStartupCounter 0075  
                          _Rtcc_RtcConfig 2D42                                __pbssBANK0 00A6  
                              __pbssBANK1 01C8                                __pbssBANK2 0200  
                              __pbssBANK3 0300                                __pbssBANK4 0440  
                              __pbssBANK5 0500                                __pbssBANK6 0600  
                 ?_Pm_DsReleasePinControl 0025                            ??_Wdg_MainTask 0076  
                               ?_ReadByte 0025                         MyApp_Task@Options 0025  
                   __size_of_I2cSetConfig 002C                           ?_EnableReceiver 0025  
                   __size_of_I2c_ReadData 016C                     __size_of_I2cSendMsgSm 00B6  
                     __end_of_Tmr_Tmr2Isr 4134                               _SetBaudRate 3A22  
             __size_of_USBWakeFromSuspend 0038                               _pBDTEntryIn 00AC  
        __end_of_USBCtrlEPServiceComplete 1C0C                                 ?_TmrBInit 0075  
                           _CheckTxStatus 4342                   __size_of_Tmr_TmrBConfig 00C8  
             __size_of_USBCheckCDCRequest 00AE                         ?_GetOsTickCounter 0075  
                 __size_of_Tmr_TmrBIrqSet 004C                      USBCtrlTrfRxService@i 0075  
                               ?_Terminal 0025                                   ?___lmul 0075  
                            _Led_MainTask 2238                            _Rtcc_UnlockRtc 42DA  
                            _I2cBusStatus 0020                                   ?___wmul 0075  
         __size_of_OsAlrm_ProcessOsAlarms 0156                             _ScheduleTasks 18E2  
                   __end_of_I2c_WriteData 1126                        ??_GetOsTickCounter 0079  
                                 ?_memcpy 0075                                   ?_memset 0075  
                          ___lmul@product 007D                                _device_dsc FFA6  
                 __size_of_CheckAckStatus 000A                          _USBCtrlEPService 3044  
                   __end_of_UpdateSchFlag 41AE                                _ep_data_in 0012  
                         _I2cWriteDataEvt 00E0                  i1GenerateEvt@EventStatus 0039  
                           ?_Rtcc_LockRtc 0025                                   ?_strcat 0075  
                              ??i1___wmul 003B                                   ?_strcpy 0075  
                                 ?_strlen 0075                                   ?_strtol 0081  
           __size_of_LedBlinkStateMachine 0148               __end_of_USBCtrlTrfRxService 1B12  
                       __end_of_WriteByte 4338                        _USBCheckStdRequest 1FAE  
                       _configDescriptor1 FF08                       Wdg_MainTask@Options 0025  
             __end_of_USBCtrlTrfTxService 23D0                       _USBStdSetCfgHandler 1DE2  
                  I2cSlv_QueryI2cData@Ret 001E                           __CFG_WDTPS$2048 000000  
                            _I2cSetConfig 3F76                                   _SPBRGH1 000F7F  
                                 _SPBRGH2 000F7D                    __end_of_Rtcc_RtcConfig 2DE2  
                                 _SSP2ADD 000F74                                   _SSP2BUF 000F75  
                            _I2c_ReadData 1126                                   _RTCVALH 000F99  
                                 _RTCVALL 000F98                              _I2cSendMsgSm 292E  
                        ?_I2cSlv_MainTask 0025            __end_of_Pm_DsReleasePinControl 435C  
                     ?_USBCheckStdRequest 0025              __size_of_USBStdGetDscHandler 012E  
                     __size_of_MyApp_Task 0036                                   _UIEbits 000F36  
                                 _UIRbits 000F62                 __size_of_UpdateOsCounters 0010  
                                 _Led1Sts 00DC                                   _Led2Sts 00DA  
                                 _Led3Sts 00D8                __end_of_Sch_SchmIntService 4318  
                           _cdc_trf_state 00BB                                ??_ReadByte 0075  
                          ?_CheckTxStatus 0025               __size_of_Mcu_StartSystemPll 001E  
                                 _pCDCDst 0009                                   _pCDCSrc 000C  
                   __size_of_getsUSBUSART 0096                       __size_of_ReceiveEvt 002E  
                                 __Hparam 0000                                ??_TmrBInit 0077  
                  ??_I2cSlv_ReceiveI2cMsg 007C           ??_USBIncrement1msInternalTimers 0075  
                          _I2cReadDataEvt 00DF                                 ?_isxdigit 0025  
                    ?_USBStdSetCfgHandler 0025                                 _CDCInitEP 35DA  
                  __end_of_Rtcc_UnlockRtc 42EA                                   __Lparam 0000  
         OsAlrm_SetOsAlarm@OsAlarmTimeout 007D                      __end_of_SetAckStatus 42B6  
                             _Term_MainSm 0506                                   _Welcome FE7F  
              __size_of_USBEnableEndpoint 0044                            ?_ScheduleTasks 0025  
                              ??_Terminal 0091                         _Sch_MainScheduler 41AE  
                    ??_USBCheckStdRequest 008F                               _RtccIrqInit 4276  
           __size_of_USBCtrlTrfOutHandler 0060                                   ___awdiv 3310  
                    Term_MainTask@Options 0025                           __size_of___lmul 0058  
                                 ___awmod 341A                                   ___lldiv 3396  
                        ??_USBDeviceTasks 0090                           __size_of___wmul 0028  
                                 ___lwdiv 39CE                         ??_USBStallHandler 0075  
                                 ___lwmod 3BD0                         ?_Rtcm_SetRtccDate 0081  
                      ?_Sch_MainScheduler 0025                               _Rtcc_RtcIsr 4372  
                    __size_of_putUSBUSART 001E                                   __pcinit 2628  
                      getsUSBUSART@buffer 007C                           __size_of_memcpy 0048  
                               _I2cComSts 00CC                           __size_of_memset 0030  
                               _I2cConfig 01DC                            ??_Rtcc_LockRtc 0075  
               __end_of_configDescriptor1 FF4B                                   __ramtop 0F00  
                             Terminal@Len 0233                        ??_Rtcm_SetRtccDate 0089  
                   Tmr_TmrBIrqSet@TmrNumb 0077                                   __ptext0 4318  
                                 __ptext1 3E2A                                   __ptext2 4324  
                                 __ptext3 4356                                   __ptext4 4154  
                                 __ptext5 41CA                                   __ptext6 3FA2  
                                 __ptext7 3F1A                                   __ptext8 23D0  
                                 __ptext9 1C0C                                   _inPipes 00A6  
                   __size_of_Mcu_ClearWdg 0004               _USBDeferOUTDataStagePackets 00BE  
                         __size_of_strcat 005C                           __size_of_strcpy 0032  
                         __size_of_strlen 003E              __size_of_OsAlrm_ClearOsAlarm 0058  
                               _T1CONbits 000FCD                           __size_of_strtol 01D6  
                            ??_USBSuspend 0089                                 _T2CONbits 000FCA  
                                 _isalpha 3EBA                                   _isdigit 40CE  
                           ?_Tmr_StartTmr 0025                       ??_Sch_MainScheduler 00A6  
                             ?_SystemInit 0025                          ___awmod@dividend 0075  
                       ??_InitializeTasks 00A1                                 _T4CONbits 000F76  
                         _Tmr2IsrCallback 001B       __end_of_Tmr_RegisterTmr2IsrCallback 432E  
             _Tmr_RegisterTmr2IsrCallback 4324                                   _isspace 3FCC  
                                 _isupper 40AC                    ?_Irq_InitIntController 0075  
                  Term_MainSm@FwkBuildStr 009D                           ?_Rtcc_RtcConfig 0076  
                  _OsAlrm_ProcessOsAlarms 1292                        __end_of_USB_CD_Ptr FD91  
                     Mcu_SetWdgSts@WdgSts 0075                               _Tmr_Tmr2Isr 4112  
                                 _sprintf 216A                                   _tolower 4218  
         __size_of_USBCtrlTrfSetupHandler 0086                           _Uart_Uart1RxIsr 435C  
                  Term_MainSm@FwkMajorStr 0095                            __pintcode_body 2B44  
                                 _toupper 4230                      end_of_initialization 26E0  
                            _getsUSBUSART 2FAE                          ??_GetElapsedTime 007D  
           __size_of_OsTmr_GetTimerStatus 0090                              ?_GenerateEvt 0075  
                  _MainSystemTimebaseFlag 00E1             i1I2cSlv_SendI2cMsg@DataLenght 003D  
                      __end_of_USB_SD_Ptr FD8F       Irq_InitIntController@PerInt_LowPInt 0076  
                                 memcpy@d 007B                                   memcpy@n 0079  
                                 memcpy@s 007D                       _pBDTEntryEP0OutNext 00B4  
                                 itoa@buf 0085                                   memset@c 0077  
                  Term_MainSm@FwkMinorStr 0099                                   itoa@val 0087  
                                 memset@n 0079                                   memset@p 007B  
                           __Lmediumconst FD88                                   int_func 2B44  
                         _USB1msTickCount 0204           _dummy_encapsulated_cmd_response 0215  
                ?_USBStdFeatureReqHandler 0025                 __size_of_Mcu_ConfigExtInt 001A  
                       ?_Rtcc_AlarmConfig 0075                     ??_USBStdSetCfgHandler 0089  
                         ___lldiv@divisor 0079                 __end_of_Sch_MainScheduler 41CA  
               __size_of_Led_SetLedStatus 0030                                ??_isxdigit 0078  
                              ?_CDCInitEP 0025                           ___lldiv@counter 0081  
                       _Rtcc_SetRtccValue 0A28                         _Rtcc_SetRtcStatus 4260  
                         ?_Rtcc_UnlockRtc 0025                        ??_Rtcc_AlarmConfig 0077  
                      __end_of_USBSuspend 3E8A                   _USBCtrlEPAllowDataStage 2DE2  
                      _UsbDevice_MainTask 4044                              _Mcu_ClearWdg 4362  
                                 postdec1 000FE5                                   postdec2 000FDD  
                      ?_Rtcc_SetRtccValue 007D                        ?_Rtcc_SetRtcStatus 0025  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                                   utoa@buf 007C  
                _USBCtrlEPServiceComplete 1B12                                   utoa@val 007E  
                   i1___wmul@multiplicand 0039                           _RtccIsrCallback 01DA  
        OsAlrm_ProcessOsAlarms@AlarmIndex 0047                        Terminal@EchoOption 0269  
           __size_of_LedPulseStateMachine 00E8                                   strlen@s 0075  
              _USBStatusStageEnabledFlag1 00C1                _USBStatusStageEnabledFlag2 00C0  
                    __end_of_Wdg_MainTask 408A                                   strtol@a 008C  
                                 strtol@c 0090                            _Rtcm_RtccAlarm 031C  
                                 strtol@s 0081                        USBEnableEndpoint@p 007E  
                     ?_UsbDevice_MainTask 0025                                   xtoi@val 0080  
                               _PORTDbits 000F83                       ??_Rtcc_SetRtccValue 007E  
                     ??_Rtcc_SetRtcStatus 0075                          __CFG_DSBOREN$OFF 000000  
                          ??_Tmr_StartTmr 0075              __end_of_I2cSlv_I2cReadMsgSts 4112  
                i1I2cSlv_SendI2cMsg@TxSts 003E                          __CFG_CPUDIV$OSC1 000000  
                         _Tmr4IsrCallback 0019                                 _TRISBbits 000F93  
                               _TRISCbits 000F94                                 _TRISDbits 000F95  
                      _BothEP0OutUOWNsSet 00C4                              strtol@endptr 0083  
                  __size_of_Term_MainTask 001A                              ?_Mcu_Int0Isr 0025  
               __size_of_Rtcm_GetRtccDate 0066                              ?_Mcu_Int1Isr 0025  
               I2c_WriteData@I2cNextState 00D4                 USBConfigureEndpoint@EPNum 007A  
              ?_USBCtrlEPAllowStatusStage 0025                          ??_InitSchedTimer 0090  
     USER_USB_CALLBACK_EVENT_HANDLER@size 0085                                 _USTATcopy 00DD  
                   __end_of_StopCondition 436A                  __size_of_HighPriorityIsr 2BE8  
               Tmr_TmrBPrSet@TmrBPrCfgSts 0086                 __size_of_OsTmr_StartTimer 005E  
                               _Led1Blink 03B3                                 _Led2Blink 020C  
                    ??_UsbDevice_MainTask 0091                                 _Led3Blink 03AA  
            __end_of_USBTransferOnePacket 292E                           ??_CheckTxStatus 0075  
                               _Led1Pulse 0229                         __CFG_WPFP$PAGE_63 000000  
               __end_of_Rtcc_SetRtccValue 0C56                 __end_of_Rtcc_SetRtcStatus 4276  
                               _Led2Pulse 0223                                 _Led3Pulse 021D  
                       _I2cSlv_SendI2cMsg 3CD6           SetBaudRate@DesiredI2cBusClockHz 0082  
                         ??_ScheduleTasks 00A1                            _Tmr_TmrBConfig 23D0  
                 Tmr_TmrBPrSet@Postscaler 0085                         putUSBUSART@length 007D  
                   __end_of_Mcu_SetWdgSts 42C8                         _OsAlrm_SetOsAlarm 2560  
                    Terminal@TermRxBuffer 0490                        ?_I2cSlv_SendI2cMsg 0078  
                     __size_of_SystemInit 0030                            _Tmr_TmrBIrqSet 3A70  
                     __CFG_MSSP7B_EN$MSK7 000000                              ??_MyApp_Task 007A  
                    Terminal@TermTxBuffer 0237                    _USBCtrlTrfSetupHandler 328A  
                      ?_OsAlrm_SetOsAlarm 007B                     __end_of_USBDeviceInit 1534  
   __end_of_USBIncrement1msInternalTimers 40AC    __size_of_USBIncrement1msInternalTimers 0022  
           _USBIncrement1msInternalTimers 408A                            __end_of___lmul 387A  
                          _CheckAckStatus 434C                            __end_of___wmul 401E  
                     ??_I2cSlv_SendI2cMsg 007C                            __end_of_memcpy 3B04  
                      Terminal@PackageLen 020A                            __end_of_memset 3EBA  
                     ??_OsAlrm_SetOsAlarm 0083                          __CFG_DSWDTEN$OFF 000000  
                            ??_ReceiveEvt 0077                         _USBBusIsSuspended 00C6  
                 __end_of_Uart_Uart1RxIsr 4362                            __end_of_strcat 3822  
                          __end_of_strcpy 3E2A                            __end_of_strlen 3CD6  
                          __end_of_strtol 0E2C                       start_initialization 2628  
                       __size_ofi1___wmul 0026                   ?_USBStdGetStatusHandler 0025  
           USBCtrlTrfRxService@byteToRead 0076                   __size_of_StartCondition 0004  
                    Rtcm_SetRtccDate@Date 0081                          ??_EnableReceiver 0075  
                             _cdc_data_rx 0322                               _cdc_data_tx 0600  
            __end_of_USBConfigureEndpoint 2F18           __end_of_USBStdFeatureReqHandler 0A28  
                               _MsgFormat FD93                        __end_of_MyApp_Task 3DF8  
                        _UpdateOsCounters 42FA                I2c_InitI2cModule@I2cConfig 008E  
       __end_of_USBCtrlEPAllowStatusStage 27B2                 __end_of_I2cSlv_SendI2cMsg 3D14  
                __size_of_LedStateMachine 00A8                  __end_of_USBCtrlEPService 30D8  
                   __size_of_SetAckStatus 0014                      __end_of_Rtcc_LockRtc 42FA  
                            ?_SetBaudRate 0082                    __end_of_Tmr_TmrBConfig 2498  
               __end_of_OsAlrm_SetOsAlarm 2628                    __end_of_Tmr_TmrBIrqSet 3ABC  
                               _TaskTable 03BC                 ??_USBCtrlEPAllowDataStage 0076  
                             _SystemState 00CD                         __size_of_ReadByte 000A  
                               _RtcConfig 01FC                __size_of_Sch_MainScheduler 001C  
                             ??_CDCInitEP 0081                            USBDeviceInit@i 007D  
                  Led_SetLedBlinkTime@Led 0079                        __end_of_ReceiveEvt 3F76  
                  _pBDTEntryEP0OutCurrent 00B6                             _Term_MainTask 41E4  
                 USBTransferOnePacket@dir 0075                   USBTransferOnePacket@len 0078  
                   Tmr_TmrBConfig@TmrNumb 008F                   __size_of_LowPriorityIsr 00B4  
                  __end_of_CheckAckStatus 4356                                  ??___lmul 007D  
                           _isxdigit$5694 0079                                  ??___wmul 0079  
                       __size_of_TmrBInit 0096    Tmr_RegisterTmr2IsrCallback@IsrCallback 0075  
                     _USBStdGetDscHandler 17B4                I2cSlv_SendI2cMsg@SlaveAddr 007A  
                             __pdataBANK0 00E1                               __pdataBANK2 0269  
                             __pdataBANK3 03BC                          __CFG_LPT1OSC$OFF 000000  
                       __size_of_Terminal 0436                                  ??_memcpy 007B  
                                ??_memset 007B                    __size_ofi1_GenerateEvt 0016  
                     Tmr_StartTmr@TmrNumb 0075                                  ??_strcat 0079  
                                ??_strcpy 0079                                  ??_strlen 0077  
                  __size_of_Rtcm_MainTask 008E                                  ??_strtol 0087  
             __end_of_Led_SetLedBlinkTime 39CE                               _ALRMCFGbits 000F91  
                  _USBActiveConfiguration 00DE            __end_of_USBStdGetStatusHandler 2A96  
                           WriteByte@Byte 0075                        __end_of_TaskNumber FD93  
                             __pbssCOMRAM 0001                   GetElapsedTime@TimeValue 0085  
               __size_of_GetOsTickCounter 0012                             __pcstackBANK0 0060  
                           __pcstackBANK1 0100                             __pcstackBANK2 0237  
            __size_of_USBCtrlTrfInHandler 00BE                             __pcstackBANK7 0700  
                            _SetAckStatus 42A2                              _isalpha$5684 0079  
                  GenerateEvt@EventStatus 0077                                 _WriteByte 432E  
                            _isdigit$5418 0076                      ?_USBStdGetDscHandler 0025  
           UpdateSchFlag@InterruptCounter 01D2                   GetElapsedTime@StartTime 0079  
                             _ALRMRPTbits 000F90                __end_of_USBWakeFromSuspend 3DC2  
            __end_of_LedBlinkStateMachine 167C                               sprintf@flag 007B  
                         _USBStallHandler 3B04                              _pBDTEntryOut 01C8  
              __size_of_Rtcc_SetRtccValue 022E                      __size_of_GenerateEvt 0018  
                         ?_Tmr_TmrBConfig 008C                __size_of_Rtcc_SetRtcStatus 0016  
                        _Mcu_ConfigExtInt 41CA                __end_of_USBCheckCDCRequest 2B44  
            __size_ofi1_I2cSlv_SendI2cMsg 003A                       _OsAlrm_ClearOsAlarm 387A  
                         ?_Tmr_TmrBIrqSet 0075                      __end_of_Tmr_StartTmr 4154  
                        _Led_SetLedStatus 3EEA                         ??_HighPriorityIsr 0025  
                          ?_Term_MainTask 0025                          ___lwdiv@dividend 0075  
                            ?_Term_MainSm 0025                      _I2cSlv_I2cReadMsgSts 40F0  
                        GenerateEvt@Event 0075                    __size_of_Tmr_TmrBPrSet 00EE  
                   __size_of_Wdg_MainTask 0022                                 __pintcode 0008  
                           __pmediumconst FD88                              ?_RtccIrqInit 0025  
                         ?_CheckAckStatus 0025                   Tmr_TmrBIrqSet@TmrIrqSts 0076  
                       __size_of_isxdigit 003C                                  ?___awdiv 0075  
                               __ptext100 39CE                                 __ptext101 2560  
                               __ptext110 1126                                 __ptext102 3FF6  
                               __ptext111 432E                                 __ptext103 348C  
                               __ptext112 4366                                 __ptext104 3A22  
                               __ptext121 4112                                 __ptext113 436A  
                               __ptext105 3396                                 __ptext130 428C  
                               __ptext122 430A                                 __ptext114 42A2  
                               __ptext106 3F76                             Terminal@Index 0094  
                               __ptext123 4190                                 __ptext115 4338  
                               __ptext107 292E                                 __ptext132 435C  
                               __ptext124 42FA                                 __ptext116 4248  
                               __ptext108 3F48                                 __ptext133 4372  
                               __ptext125 1292                                 __ptext117 436E  
                               __ptext109 0FAE                                 __ptext134 4376  
                               __ptext126 401E                                 __ptext118 4342  
                               __ptext135 437A                                 __ptext127 387A  
                               __ptext119 434C                                 __ptext136 0000  
                               __ptext128 41FE                                 __ptext129 3D50  
                                ?___awmod 0075                        _Sch_SchmIntService 430A  
                         _InitializeTasks 34FE                                  ?___lldiv 0075  
                                ?___lwdiv 0075                                  ?___lwmod 0075  
                            ?_Rtcc_RtcIsr 0025                               __pintcodelo 0018  
           I2cSlv_QueryI2cData@QueryTimer 039F                          ??_Rtcc_RtcConfig 0078  
                    ?_OsAlrm_ClearOsAlarm 0025                               _I2cRxPacket 01ED  
                     ?_Sch_SchmIntService 0025                      _USBTransferOnePacket 2870  
                 ??_Irq_InitIntController 0077                               _I2cTxBuffer 0300  
                 ?_OsAlrm_ProcessOsAlarms 0025                                  _BAUDCON1 000F7E  
                                _BAUDCON2 000F7C                          ?_Uart_Uart1RxIsr 0025  
                                ?_isalpha 0025                              ??_SystemInit 0097  
                                ?_isdigit 0025                               _I2cTxPacket 01F3  
          InitializeTasks@ActiveTaskIndex 00A3                      __CFG_RTCOSC$T1OSCREF 000000  
                                ?_isspace 0025                                  ?_isupper 0025  
              Term_MainSm@TermMainSmState 00B8                           Terminal@Payload 0440  
                             _PADCFG1bits 000F3C              __end_of_USBCtrlTrfOutHandler 370A  
                              ?_WriteByte 0025                     ??_USBStdGetDscHandler 0075  
                        _Rtcm_GetRtccDate 3644                               _ep_data_out 000F  
                                _ALRMVALH 000F8F                                  _ALRMVALL 000F8E  
                        ___lwdiv@quotient 007A                              ?_Tmr_Tmr2Isr 0025  
                                ?_sprintf 0075                                  ?_tolower 0025  
               __size_of_Rtcm_SetRtccDate 0054              __size_of_USBCtrlTrfRxService 010E  
           USBConfigureEndpoint@direction 0075                                  ?_toupper 0025  
                  __size_of_I2c_WriteData 0178                          _OsTmr_StartTimer 3768  
                    __size_of_Mcu_Int0Isr 0004                      __size_of_Mcu_Int1Isr 0004  
 Irq_InitIntController@GlobalInt_HighPInt 0075                __size_of_I2cSlv_SendI2cMsg 003E  
            __size_of_USBCtrlTrfTxService 00CC                          ??_Rtcc_UnlockRtc 0075  
                           i1_GenerateEvt 428C                __end_of_Mcu_StartSystemPll 4172  
                            _Wdg_MainTask 4068                             _Rtcm_MainTask 31FC  
                          ___wmul@product 0079                     Terminal@ReceivedBytes 0093  
                    ??_Sch_SchmIntService 0049                    __size_of_UpdateSchFlag 001E  
              __size_of_OsAlrm_SetOsAlarm 00C8                ??_USBCtrlEPServiceComplete 0076  
                __size_of_I2cSlv_MainTask 0054                                  _IPR1bits 000F9F  
                 LedPulseStateMachine@Led 007E                                  _IPR3bits 000FA5  
                                _PIE1bits 000F9D                                  _PIE2bits 000FA0  
                                _PIE3bits 000FA3      __size_of_Tmr_RegisterTmr2IsrCallback 000A  
                   ?_I2cSlv_I2cReadMsgSts 0025                                  i1u701_20 12A8  
                       _I2c_InitI2cModule 348C                                  i1u705_28 13C8  
                                i1u705_29 13DC                                  i1u723_28 4120  
                                _PIR1bits 000F9E                                  _PIR2bits 000FA1  
                                _PIR3bits 000FA4                         ??_LedStateMachine 0089  
                      __end_of_SystemInit 3E5A                                  _RCONbits 000FD0  
                           ??_putUSBUSART 007E                                  _UEP0bits 000F26  
           __size_of_I2cSlv_ReceiveI2cMsg 0040                _USBDeferINDataStagePackets 00BF  
                      ?_I2c_InitI2cModule 008E                                  _SSP2CON1 000F72  
                                _SSP2CON2 000F71               __size_of_USBCheckStdRequest 00E4  
                    Rtcm_MainTask@Options 0025              __end_of_OsTmr_GetTimerStatus 31FC  
                                _UCONbits 000F65                                  _SSP2STAT 000F73  
                    _USBConfigureEndpoint 2E80          __size_of_USBStdFeatureReqHandler 028E  
          __end_of_OsAlrm_ProcessOsAlarms 13E8                     ??_OsAlrm_ClearOsAlarm 0037  
                       ___wmul@multiplier 0075                     ?_USBTransferOnePacket 0075  
                                i1___wmul 401E                       ??_I2c_InitI2cModule 0090  
               __size_of_Rtcc_AlarmConfig 006C                             ?_CDCTxService 0025  
          OsAlrm_SetOsAlarm@AlarmCallback 0081                              _RemoteWakeup 00C7  
                          _StartCondition 436A                        SetAckStatus@AckSts 0075  
                           _Tmr_TmrBPrSet 1C0C                              _isspace$5687 0076  
                 __end_of_USBStallHandler 3B48                     __size_of_Rtcc_LockRtc 0010  
                       ___lmul@multiplier 0075                               _INTCON2bits 000FF1  
                             _INTCON3bits 000FF0                    I2cSlv_MainTask@Options 0025  
                               copy_data0 263C              __end_of_LedPulseStateMachine 1DE2  
                  I2cSlv_SendI2cMsg@TxSts 007C               ??_USBCtrlEPAllowStatusStage 0075  
             __end_of_USBStdSetCfgHandler 1EC8                            ?i1_GenerateEvt 0037  
                Tmr_TmrBConfig@TmrBConfig 008C                                  _OsAlarms 0500  
                          ?_Rtcm_MainTask 0025                     OsTmr_StartTimer@Timer 0079  
            LedBlinkStateMachine@LedBlink 007C                                  _ReadByte 4338  
                      __end_of_device_dsc FFB8                 __end_of_I2c_InitI2cModule 34FE  
                                _MsgReady FF8F                           ??_Term_MainTask 00A1  
                 __end_of_InitializeTasks 356E                   ?_USBCtrlTrfSetupHandler 0025  
                              _ANCON1bits 000F49                                  _RxBuffer 07C8  
                 USBStdGetStatusHandler@p 0076                                  __Hrparam 0000  
                                _TmrBInit 2F18                      __size_of_SetBaudRate 004E  
                          _LowPriorityIsr 0018                                 memcpy@tmp 007F  
                    Tmr_TmrBPrSet@Divisor 0088                                  __Lrparam 0000  
                  USBTransferOnePacket@ep 0079              i1I2cSlv_SendI2cMsg@SlaveAddr 003C  
                                _Terminal 00D0                                  _SetupPkt 000430  
               I2cSlv_SendI2cMsg@TxBuffer 0078                     SetBaudRate@McuClockHz 0086  
                   ?_USBConfigureEndpoint 0075              OsAlrm_ClearOsAlarm@OsAlarmId 0037  
                           _I2c_WriteData 0FAE                          __size_of___awdiv 0086  
                        __size_of___awmod 0072                  __end_of_UpdateOsCounters 430A  
                        __size_of___lldiv 0084                         Terminal@SlaveAddr 0209  
                        __size_of___lwdiv 0054                      Tmr_TmrBPrSet@TmrNumb 0087  
                        __size_of___lwmod 0044                  I2c_WriteData@WritePacket 0076  
                       Terminal@TermState 020B                             _UpdateSchFlag 4190  
                     __end_of_putUSBUSART 4190                               _line_coding 01E6  
                            _Rtcc_LockRtc 42EA                      _LedBlinkStateMachine 1534  
                  __end_of_StartCondition 436E                            ??_CDCTxService 007C  
                ??_Pm_DsReleasePinControl 0075                 Rtcm_GetRtccDate@LocalDate 0082  
                I2c_WriteData@WriteStatus 00D2                              _isupper$5690 0076  
                              strcat@from 0077                   I2c_ReadData@DataCounter 00D0  
                          ?_Tmr_TmrBPrSet 0082                          _GetOsTickCounter 42C8  
                        __size_of_isalpha 0030                          __size_of_isdigit 0022  
                 __size_of_USBDeviceTasks 0182                           ___lwdiv@divisor 0077  
                            Terminal@Addr 022F                               ??_WriteByte 0075  
                        __size_of_isspace 002A                           ___lwdiv@counter 0079  
                                __ptext10 3A70                                  __ptext11 4134  
                                __ptext20 4044                                  __ptext12 2F18  
                                __ptext21 38D2                                  __ptext13 41AE  
                                __ptext30 13E8                                  __ptext22 4068  
                                __ptext14 18E2                                  __ptext31 3044  
                                __ptext23 42B6                                  __ptext15 34FE  
                                __ptext40 079A                                  __ptext32 3ABC  
                                __ptext24 4362                                  __ptext16 3DC2  
                                __ptext41 370A                                  __ptext33 328A  
                                __ptext25 0E2C                                  __ptext17 41E4  
                                __ptext50 2304                                  __ptext42 2A96  
                                __ptext34 1B12                                  __ptext26 3D8A  
                                __ptext18 31FC                                  __ptext51 167C  
                                __ptext43 35DA                                  __ptext35 2DE2  
                                __ptext27 3E5A                                  __ptext19 2238  
                                __ptext60 4218                                  __ptext52 0506  
                                __ptext44 3B48                                  __ptext36 1FAE  
                                __ptext28 3B04                                  __ptext61 3D14  
                                __ptext53 3C98                                  __ptext45 2E80  
                                __ptext37 1DE2                                  __ptext29 408A  
                                __ptext70 2BF0                                  __ptext62 0C56  
                                __ptext54 3DF8                                  __ptext46 36AA  
                                __ptext38 29E4                                  __ptext71 3BD0  
                                __ptext63 4230                                  __ptext55 37C6  
                                __ptext47 1A04                                  __ptext39 17B4  
                                __ptext80 316C                                  __ptext72 2FAE  
                                __ptext64 3FCC                                  __ptext56 216A  
                                __ptext48 26EE                                  __ptext81 2498  
                                __ptext73 2870                                  __ptext65 3EBA  
                                __ptext57 3E8A                                  __ptext49 27B2  
                                __ptext90 30D8                                  __ptext82 42C8  
                                __ptext74 2092                                  __ptext66 40AC  
                                __ptext58 00D0                                  __ptext91 4260  
                                __ptext83 3926                                  __ptext75 40CE  
                                __ptext67 3822                                  __ptext59 1EC8  
                                __ptext92 2D42                                  __ptext84 42DA  
                                __ptext76 3CD6                                  __ptext68 4172  
                                __ptext93 4276                                  __ptext85 0A28  
                                __ptext77 3C58                                  __ptext69 3B8C  
                                __ptext94 356E                                  __ptext86 341A  
                                __ptext78 40F0                                  __ptext95 397A  
                                __ptext87 3310                                  __ptext79 3768  
                                __ptext96 2C9A                                  __ptext88 42EA  
                                __ptext97 1CFA                                  __ptext89 3644  
                                __ptext98 3EEA                                  __ptext99 1534  
                        __size_of_isupper 0022                                _I2cDummyTx 41FE  
                  Tmr_TmrBIrqSet@Priority 0075                              _SSP2CON2bits 000F71  
                               isxdigit@c 007A                          __size_of_sprintf 00CE  
                        __size_of_tolower 0018                     __size_of_Tmr_StartTmr 0020  
                        __size_of_toupper 0018                                _DSCONHbits 000F4D  
                              strcpy@from 0077                                _DSCONLbits 000F4C  
                      i1GenerateEvt@Event 0037               __size_of_UsbDevice_MainTask 0024  
                           __size_of_atoi 00D8                        TmrBInit@Postscaler 0076  
          __end_of_USBCtrlTrfSetupHandler 3310                             __size_of_main 000C  
                       ?_USBCtrlEPService 0025                             __size_of_itoa 0044  
                           __size_of_utoa 00AA                       Led_MainTask@Options 0025  
                           __size_of_xtoi 00E6                    ??_I2cSlv_I2cReadMsgSts 0079  
                  __end_of_LowPriorityIsr 00CC                     __end_of_CheckTxStatus 434C  
                      ??_USBCtrlEPService 008F                                  _isxdigit 3D14  
                     _USBCtrlTrfInHandler 27B2                  I2c_ReadData@I2cReadState 00D1  
                   __end_of_ScheduleTasks 1A04                   __size_of_GetElapsedTime 00C8  
                           ?_Led_MainTask 0025                                  _outPipes 0001  
                    _USBCtrlTrfOutHandler 36AA                       Led_SetLedStatus@Led 0076  
                                int$flags 0049                                strtol@base 0085  
                          ?_I2c_WriteData 0076                                  atoi@sign 007F  
                       ??_I2cSlv_MainTask 0092                 _USBCtrlEPAllowStatusStage 26EE  
                    __size_of_Term_MainSm 0294              ScheduleTasks@ActiveTaskIndex 00A5  
                              strtol@sign 008B                           Term_MainSm@Data 0362  
                    __size_of_RtccIrqInit 0016                    ??_USBTransferOnePacket 0079  
                          ?_UpdateSchFlag 0025                    __size_of_StopCondition 0004  
                   ?_LedBlinkStateMachine 007C                      __size_of_Rtcc_RtcIsr 0004  
                     i1_I2cSlv_SendI2cMsg 3D50                  __end_of_Mcu_ConfigExtInt 41E4  
                         ?_StartCondition 0025                 _USBDeferStatusStagePacket 00C2  
                CDCTxService@byte_to_send 007D             I2c_WriteData@TentativeCounter 00D3  
                             _OSCTUNEbits 000F9B                                _INTCONbits 000FF2  
                            _Tmr_StartTmr 4134                  __end_of_Led_SetLedStatus 3F1A  
                    ?_USBCtrlTrfInHandler 0025                                  memcpy@d1 0075  
                                memcpy@s1 0077                I2cSlv_I2cReadMsgSts@Result 0079  
           USBCtrlTrfTxService@byteToSend 0075                             ?_I2cSetConfig 0025  
                                itoa@base 0089               i1I2cSlv_SendI2cMsg@TxBuffer 003A  
                           ?_I2c_ReadData 0078                             ?_I2cSendMsgSm 0025  
                                isalpha@c 007A                    __size_of_Mcu_SetWdgSts 0012  
                                isdigit@c 0077                                  memset@p1 0075  
                        ?_USBStallHandler 0025                           ??i1_GenerateEvt 0039  
                        _Rtcm_SetRtccDate 3926                  USBStdFeatureReqHandler@p 008D  
                        ??_Tmr_TmrBConfig 008E                           _HighPriorityIsr 0008  
                         ??_Rtcm_MainTask 008A                          ??_Tmr_TmrBIrqSet 0077  
                                intlevel1 0000                                  intlevel2 0000  
                    _OsTmr_GetTimerStatus 316C                                 sprintf@ap 007C  
                               sprintf@cp 007F                                 sprintf@sp 0075  
                       TmrBInit@Prescaler 0075                      __size_of_Tmr_Tmr2Isr 0022  
                  __size_of_USBDeviceInit 014C   __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3768  
__size_of_USER_USB_CALLBACK_EVENT_HANDLER 005E         ??_USER_USB_CALLBACK_EVENT_HANDLER 0087  
        ?_USER_USB_CALLBACK_EVENT_HANDLER 0081           _USER_USB_CALLBACK_EVENT_HANDLER 370A  
                 Rtcc_SetRtcStatus@Status 0075                          ___lwmod@dividend 0075  
                                isspace@c 0077                          ___lldiv@dividend 0075  
                    ?i1_I2cSlv_SendI2cMsg 003A                __size_of_I2c_InitI2cModule 0072  
                        ??_CheckAckStatus 0075                           ?_LowPriorityIsr 0025  
                        ?_InitializeTasks 0025                                  isupper@c 0077  
                              _OSCCONbits 000FD3                 I2cSlv_ReceiveI2cMsg@RxSts 007C  
                          ??_Led_MainTask 008C                   __size_of_InitSchedTimer 002E  
                  ??_USBConfigureEndpoint 0076                     ?_USBCtrlTrfOutHandler 0025  
                __end_of_Rtcm_GetRtccDate 36AA                               _putUSBUSART 4172  
                     _USBCtrlTrfRxService 1A04                    Rtcc_SetRtccValue@Value 007D  
                      _USBWakeFromSuspend 3D8A                   _USBStdFeatureReqHandler 079A  
                __end_of_OsTmr_StartTimer 37C6                      _LedPulseStateMachine 1CFA  
                      _USBCheckCDCRequest 2A96                       _USBCtrlTrfTxService 2304  
                     RtccIrqInit@Priority 0075                                  utoa@base 0080  
                              _RTCCFGbits 000F3F                          _Rtcc_AlarmConfig 356E  
                         ??_Tmr_TmrBPrSet 0086                                  sprintf@c 007E  
                                sprintf@f 0077                                  tolower@c 0075  
                                strcat@cp 0079                                  strcat@to 0075  
                     ?_USBWakeFromSuspend 0025           __size_of_Pm_DsReleasePinControl 0006  
                        ___lldiv@quotient 007D                           ___lwmod@divisor 0077  
                   ??_USBCtrlTrfInHandler 0076                                  strcpy@cp 0079  
                                strlen@cp 0079                                  strcpy@to 0075  
               UsbDevice_MainTask@Options 0025                     _USBAlternateInterface 0022  
                         ___lwmod@counter 0079                            ??_I2cSetConfig 0075  
          __size_of_Irq_InitIntController 002A                                  toupper@c 0075  
                     ?_USBCheckCDCRequest 0025                            ??_I2c_ReadData 007A  
                          ??_I2cSendMsgSm 007C             __end_of_Irq_InitIntController 3FCC  
                   ReceiveEvt@EventStatus 0078              ?_Tmr_RegisterTmr2IsrCallback 0075  
                     USBEnableEndpoint@ep 0080                           _endpoint_number 00C5  
                              _WDTCONbits 000FC0                               ?_I2cDummyTx 0025  
                                xtoi@sign 007F                      ?_USBCtrlTrfRxService 0025  
            __size_of_Led_SetLedBlinkTime 0054                             ?_getsUSBUSART 007C  
                   ?_OsTmr_GetTimerStatus 008D            I2cSlv_ReceiveI2cMsg@DataLenght 007B  
                           ??_GenerateEvt 0077                           _LedStateMachine 2C9A  
                         TmrBInit@TmrNumb 0078                  ?_USBCtrlEPAllowDataStage 0025  
                    ?_USBCtrlTrfTxService 0025                             _StopCondition 4366  
                   ??i1_I2cSlv_SendI2cMsg 003E                    Led_SetLedStatus@LedSts 0075  
            _USBStatusStageTimeoutCounter 00C3                      ??_USBWakeFromSuspend 0089  
              USBTransferOnePacket@handle 007A                      __end_of_CDCTxService 17B4  
                    ??_USBCheckCDCRequest 0075                   __size_of_EnableReceiver 0004  
                              _USB_CD_Ptr FD8F                           ??_I2c_WriteData 0078  
                           ?_Mcu_ClearWdg 0025                             _Mcu_SetWdgSts 42B6  
